using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using Audio;
using CurvedUI;
using Events;
using Events.Conversation;
using Game;
using Game.Ai;
using Game.Ai.Actions;
using Game.Ai.States;
using Game.DailyJourney;
using Game.DataArchive;
using Game.Factions;
using Game.Galaxy;
using Game.GlobalAssets;
using Game.Handtracking;
using Game.Hangar;
using Game.Manager;
using Game.Menu;
using Game.Pickups;
using Game.Puzzle;
using Game.Run;
using Game.Sector;
using Game.Sector.Map;
using Game.Sector.Tag;
using Game.Ships;
using Game.Ships.Abilities;
using Game.Ships.Abilities.Actions;
using Game.Ships.Buffs;
using Game.Ships.ShipPartMods;
using Game.Shop;
using Game.Space;
using Game.TechTree;
using Game.Threats;
using Game.UI;
using Game.UI.Actions;
using Game.Ui;
using Game.VFX;
using Game.VR;
using Il2CppDummyDll;
using Localization;
using Microsoft.CodeAnalysis;
using Newtonsoft.Json;
using Oculus.Interaction;
using Oculus.Interaction.GrabAPI;
using Oculus.Interaction.Input;
using Oculus.Platform;
using Oculus.Platform.Models;
using Shared;
using Shared.AssetManagement;
using Shared.Object;
using Shared.Pathfinding;
using Shared.Physics;
using Shared.Platform;
using Shared.Tracking;
using Shared.Transforms;
using Shared.VR;
using TMPro;
using UnityEngine;
using UnityEngine.AddressableAssets;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Controls;
using UnityEngine.InputSystem.LowLevel;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.InputSystem.XR;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using Util.Buckets;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A7E78", Offset = "0x8A7E78")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0xC52408", Offset = "0xC52408", VA = "0xC52408")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A7EB0", Offset = "0x8A7EB0")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class IsReadOnlyAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xD56D24", Offset = "0xD56D24", VA = "0xD56D24")]
		public IsReadOnlyAttribute()
		{
		}
	}
}
[Token(Token = "0x2000004")]
[ExecuteInEditMode]
public class CurvedUIInputModule : BaseInputModule
{
	[Token(Token = "0x2000005")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4000020")]
		MOUSE = 0,
		[Token(Token = "0x4000021")]
		GAZE = 1,
		[Token(Token = "0x4000022")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4000023")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x4000024")]
		STEAMVR_LEGACY = 4,
		[Token(Token = "0x4000025")]
		OCULUSVR = 5,
		[Token(Token = "0x4000026")]
		STEAMVR_2 = 8,
		[Token(Token = "0x4000027")]
		UNITY_XR = 9
	}

	[Token(Token = "0x2000006")]
	public enum Hand
	{
		[Token(Token = "0x4000029")]
		Both,
		[Token(Token = "0x400002A")]
		Right,
		[Token(Token = "0x400002B")]
		Left
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Camera mainEventCamera;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private LayerMask raycastLayerMask;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform pointerTransformOverride;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject currentDragging;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject currentPointedAt;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject m_rightController;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject m_leftController;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float gazeTimerProgress;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Ray customControllerRay;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float dragThreshold;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool pressedDown;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool pressedLastFrame;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector2 lastEventDataPosition;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private PointerInputModule.MouseButtonEventData storedData;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private XRBaseController rightXRController;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private XRBaseController leftXRController;

	[Token(Token = "0x17000001")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x6000017")]
		[Address(RVA = "0x1421540", Offset = "0x1421540", VA = "0x1421540")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000018")]
		[Address(RVA = "0x1424A94", Offset = "0x1424A94", VA = "0x1424A94")]
		private set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public static bool CanInstanceBeAccessed
	{
		[Token(Token = "0x6000019")]
		[Address(RVA = "0x1424B00", Offset = "0x1424B00", VA = "0x1424B00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000003")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x600001A")]
		[Address(RVA = "0x1421B40", Offset = "0x1421B40", VA = "0x1421B40")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x600001B")]
		[Address(RVA = "0x1424B9C", Offset = "0x1424B9C", VA = "0x1424B9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public LayerMask RaycastLayerMask
	{
		[Token(Token = "0x600001C")]
		[Address(RVA = "0x1424C34", Offset = "0x1424C34", VA = "0x1424C34")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x600001D")]
		[Address(RVA = "0x1424C3C", Offset = "0x1424C3C", VA = "0x1424C3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public Hand UsedHand
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0x1424C44", Offset = "0x1424C44", VA = "0x1424C44")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x600001F")]
		[Address(RVA = "0x1424C4C", Offset = "0x1424C4C", VA = "0x1424C4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0x1421D78", Offset = "0x1421D78", VA = "0x1421D78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x6000021")]
		[Address(RVA = "0x1421E9C", Offset = "0x1421E9C", VA = "0x1421E9C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000008")]
	public Vector3 ControllerPointingOrigin
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0x1424CC4", Offset = "0x1424CC4", VA = "0x1424CC4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000009")]
	public Transform PointerTransformOverride
	{
		[Token(Token = "0x6000023")]
		[Address(RVA = "0x1424C54", Offset = "0x1424C54", VA = "0x1424C54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000024")]
		[Address(RVA = "0x1421E24", Offset = "0x1421E24", VA = "0x1421E24")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x6000025")]
		[Address(RVA = "0x1424CE4", Offset = "0x1424CE4", VA = "0x1424CE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000B")]
	public Camera EventCamera
	{
		[Token(Token = "0x6000026")]
		[Address(RVA = "0x1424CEC", Offset = "0x1424CEC", VA = "0x1424CEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000027")]
		[Address(RVA = "0x1422AF0", Offset = "0x1422AF0", VA = "0x1422AF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static Vector2 MousePosition
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x1424F70", Offset = "0x1424F70", VA = "0x1424F70")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700000D")]
	public static bool LeftMouseButton
	{
		[Token(Token = "0x600002A")]
		[Address(RVA = "0x1425070", Offset = "0x1425070", VA = "0x1425070")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x600002B")]
		[Address(RVA = "0x1424FF8", Offset = "0x1424FF8", VA = "0x1424FF8")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x600002C")]
		[Address(RVA = "0x14247E8", Offset = "0x14247E8", VA = "0x14247E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x600002D")]
		[Address(RVA = "0x14250D0", Offset = "0x14250D0", VA = "0x14250D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600002E")]
		[Address(RVA = "0x1424778", Offset = "0x1424778", VA = "0x1424778")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8D852C", Offset = "0x8D852C")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x600002F")]
		[Address(RVA = "0x1425138", Offset = "0x1425138", VA = "0x1425138")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000030")]
		[Address(RVA = "0x1425190", Offset = "0x1425190", VA = "0x1425190")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0x14251F0", Offset = "0x14251F0", VA = "0x14251F0")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000032")]
		[Address(RVA = "0x14251F8", Offset = "0x14251F8", VA = "0x14251F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x6000033")]
		[Address(RVA = "0x1425204", Offset = "0x1425204", VA = "0x1425204")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000013")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x1425218", Offset = "0x1425218", VA = "0x1425218")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x1425220", Offset = "0x1425220", VA = "0x1425220")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0x1425228", Offset = "0x1425228", VA = "0x1425228")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x1425230", Offset = "0x1425230", VA = "0x1425230")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public float GazeClickTimer
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x142523C", Offset = "0x142523C", VA = "0x142523C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000039")]
		[Address(RVA = "0x1425244", Offset = "0x1425244", VA = "0x1425244")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x600003A")]
		[Address(RVA = "0x1425270", Offset = "0x1425270", VA = "0x1425270")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600003B")]
		[Address(RVA = "0x1425278", Offset = "0x1425278", VA = "0x1425278")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x600003C")]
		[Address(RVA = "0x14252A4", Offset = "0x14252A4", VA = "0x14252A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000018")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0x14252AC", Offset = "0x14252AC", VA = "0x14252AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003E")]
		[Address(RVA = "0x14252B4", Offset = "0x14252B4", VA = "0x14252B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public XRBaseController RightXRController
	{
		[Token(Token = "0x600003F")]
		[Address(RVA = "0x14252BC", Offset = "0x14252BC", VA = "0x14252BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000040")]
		[Address(RVA = "0x14252C4", Offset = "0x14252C4", VA = "0x14252C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public XRBaseController LeftXRController
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0x14252D4", Offset = "0x14252D4", VA = "0x14252D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000042")]
		[Address(RVA = "0x14252DC", Offset = "0x14252DC", VA = "0x14252DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1422948", Offset = "0x1422948", VA = "0x1422948", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1422D90", Offset = "0x1422D90", VA = "0x1422D90", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1422DCC", Offset = "0x1422DCC", VA = "0x1422DCC", Slot = "26")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x1422BAC", Offset = "0x1422BAC", VA = "0x1422BAC")]
	private void SetupUnityXrControllers()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1423004", Offset = "0x1423004", VA = "0x1423004", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1423198", Offset = "0x1423198", VA = "0x1423198")]
	protected PointerInputModule.MouseButtonEventData GetEventData()
	{
		return null;
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1423430", Offset = "0x1423430", VA = "0x1423430")]
	private void ProcessMove(PointerEventData eventData, GameObject currentRaycastTarget)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1423A74", Offset = "0x1423A74", VA = "0x1423A74")]
	private void ProcessButton(PointerInputModule.MouseButtonEventData button, PointerEventData eventData)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x14241D4", Offset = "0x14241D4", VA = "0x14241D4")]
	private void ProcessDrag(PointerInputModule.MouseButtonEventData button, PointerEventData eventData)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x14244E0", Offset = "0x14244E0", VA = "0x14244E0")]
	private static void ProcessScroll(PointerInputModule.MouseButtonEventData button, PointerEventData eventData)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x142460C", Offset = "0x142460C", VA = "0x142460C")]
	private void ProcessUnityXrController()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1424878", Offset = "0x1424878", VA = "0x1424878", Slot = "27")]
	protected virtual void ProcessMouseController()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x14249C4", Offset = "0x14249C4", VA = "0x14249C4", Slot = "28")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x14249C8", Offset = "0x14249C8", VA = "0x14249C8", Slot = "29")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1421BA8", Offset = "0x1421BA8", VA = "0x1421BA8")]
	public void GetXrControllerButtonState(ref bool pressed, Hand checkHand)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x142474C", Offset = "0x142474C", VA = "0x142474C")]
	private PointerEventData.FramePressState CustomRayFramePressedState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1424A88", Offset = "0x1424A88", VA = "0x1424A88", Slot = "30")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1424A8C", Offset = "0x1424A8C", VA = "0x1424A8C", Slot = "31")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1424A90", Offset = "0x1424A90", VA = "0x1424A90")]
	private void ProcessSteamVR2Controllers()
	{
	}

	[Token(Token = "0x6000016")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1424CF4", Offset = "0x1424CF4", VA = "0x1424CF4")]
	public Ray GetEventRay([System.Runtime.InteropServices.Optional] Camera eventCam)
	{
		return default(Ray);
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x14252EC", Offset = "0x14252EC", VA = "0x14252EC")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x2000007")]
public class AudioObjectNotFoundException : Exception
{
	[Token(Token = "0x6000045")]
	[Address(RVA = "0xEF5E1C", Offset = "0xEF5E1C", VA = "0xEF5E1C")]
	public AudioObjectNotFoundException()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xEF225C", Offset = "0xEF225C", VA = "0xEF225C")]
	public AudioObjectNotFoundException(string objectName)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xEF5E80", Offset = "0xEF5E80", VA = "0xEF5E80")]
	public AudioObjectNotFoundException(string objectName, Exception inner)
	{
	}
}
[Token(Token = "0x2000008")]
public class AudioEaseNotFoundException : Exception
{
	[Token(Token = "0x6000048")]
	[Address(RVA = "0xEF34F4", Offset = "0xEF34F4", VA = "0xEF34F4")]
	public AudioEaseNotFoundException()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xEF3558", Offset = "0xEF3558", VA = "0xEF3558")]
	public AudioEaseNotFoundException(AudioEaseEnum ease)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xEF3648", Offset = "0xEF3648", VA = "0xEF3648")]
	public AudioEaseNotFoundException(AudioEaseEnum ease, Exception inner)
	{
	}
}
[Token(Token = "0x2000009")]
public class AudioAddressablesFailException : Exception
{
	[Token(Token = "0x600004B")]
	[Address(RVA = "0xEF26D4", Offset = "0xEF26D4", VA = "0xEF26D4")]
	public AudioAddressablesFailException()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xEF2738", Offset = "0xEF2738", VA = "0xEF2738")]
	public AudioAddressablesFailException(string attempted)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xEF27D8", Offset = "0xEF27D8", VA = "0xEF27D8")]
	public AudioAddressablesFailException(string attempted, Exception inner)
	{
	}
}
[Token(Token = "0x200000A")]
public class AiSpaceShip : SpaceShip, IAiVisionContainer
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	[SerializeField]
	private AiBrain brainObject;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	protected AiBrainInstanceBase brain;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private bool enableAI;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x381")]
	private bool activeAI;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x382")]
	private bool startedAI;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private AsyncFlag activeAIInvulnerable;

	[Token(Token = "0x1700001B")]
	public bool EnableAI
	{
		[Token(Token = "0x600004E")]
		[Address(RVA = "0xEE7F44", Offset = "0xEE7F44", VA = "0xEE7F44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004F")]
		[Address(RVA = "0xEE7F64", Offset = "0xEE7F64", VA = "0xEE7F64")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public override bool IsShipActive
	{
		[Token(Token = "0x6000050")]
		[Address(RVA = "0xEE8018", Offset = "0xEE8018", VA = "0xEE8018", Slot = "86")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000051")]
		[Address(RVA = "0xEE8020", Offset = "0xEE8020", VA = "0xEE8020", Slot = "87")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public AiVision AiVision
	{
		[Token(Token = "0x6000052")]
		[Address(RVA = "0xEE8114", Offset = "0xEE8114", VA = "0xEE8114", Slot = "89")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001E")]
	public List<SectorTag> ActiveTags
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0xEE812C", Offset = "0xEE812C", VA = "0xEE812C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xEE8144", Offset = "0xEE8144", VA = "0xEE8144", Slot = "30")]
	protected override void OnGameStart()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xEE81F4", Offset = "0xEE81F4", VA = "0xEE81F4", Slot = "37")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xEE823C", Offset = "0xEE823C", VA = "0xEE823C", Slot = "78")]
	protected override void Die(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xEE838C", Offset = "0xEE838C", VA = "0xEE838C", Slot = "80")]
	protected override void OnRevive()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xEE83D0", Offset = "0xEE83D0", VA = "0xEE83D0", Slot = "35")]
	protected override void OnLoadBalancedUpdate(float deltaTime, float unscaledDeltaTime)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xEE7F88", Offset = "0xEE7F88", VA = "0xEE7F88")]
	private void UpdateAIBrainState()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xEE8434", Offset = "0xEE8434", VA = "0xEE8434")]
	public AiSpaceShip()
	{
	}
}
[Token(Token = "0x200000B")]
public class Layers : MonoBehaviour
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int DamagableLayer;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int VRMenuLayer;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int DamagableMask;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int AiVisionTargetMask;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int SpawnBlockingMask;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int DamagableCollisionMask;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int ObstacleMask;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int AiVisionBlockerMask;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xD59684", Offset = "0xD59684", VA = "0xD59684")]
	public Layers()
	{
	}
}
[Token(Token = "0x200000C")]
public class MenuNavigation : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200000D")]
	public class Page
	{
		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<GameObject> pageObjects;

		[Token(Token = "0x6000060")]
		[Address(RVA = "0xEDDFE0", Offset = "0xEDDFE0", VA = "0xEDDFE0")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6000061")]
		[Address(RVA = "0xEDE10C", Offset = "0xEDE10C", VA = "0xEDE10C")]
		public Page()
		{
		}
	}

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Page> menuPages;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xD67440", Offset = "0xD67440", VA = "0xD67440")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xD67448", Offset = "0xD67448", VA = "0xD67448")]
	public void SetPage(int pageIndex)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xD67548", Offset = "0xD67548", VA = "0xD67548")]
	public MenuNavigation()
	{
	}
}
[Token(Token = "0x200000E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A7EF8", Offset = "0x8A7EF8")]
public class BodyRotator : XRBaseInteractable
{
	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AE0BC", Offset = "0x8AE0BC")]
	private float objectRadious;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Transform interactor;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 startingDir;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector3 currentDir;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 currentInteractorPos;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private Quaternion startingRot;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xFDE7DC", Offset = "0xFDE7DC", VA = "0xFDE7DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xFDEA70", Offset = "0xFDEA70", VA = "0xFDEA70")]
	private bool IsHandOutside(Transform hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xFDEBBC", Offset = "0xFDEBBC", VA = "0xFDEBBC", Slot = "49")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xFDEC04", Offset = "0xFDEC04", VA = "0xFDEC04")]
	private void Grabbed(Transform interactor)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xFDEBF0", Offset = "0xFDEBF0", VA = "0xFDEBF0")]
	private void LetGo()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xFDED18", Offset = "0xFDED18", VA = "0xFDED18", Slot = "56")]
	public override bool IsSelectableBy(IXRSelectInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xFDEE04", Offset = "0xFDEE04", VA = "0xFDEE04", Slot = "67")]
	protected override void OnSelectEntered(SelectEnterEventArgs args)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xFDEF40", Offset = "0xFDEF40", VA = "0xFDEF40", Slot = "69")]
	protected override void OnSelectExited(SelectExitEventArgs args)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xFDF0BC", Offset = "0xFDF0BC", VA = "0xFDF0BC")]
	public BodyRotator()
	{
	}
}
[Serializable]
[Token(Token = "0x200000F")]
public class HexConnectionData
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool One;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool Two;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool Three;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool Four;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool Five;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool Six;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> visuals;

	[Token(Token = "0x1700001F")]
	public bool IsPuzzlePiece
	{
		[Token(Token = "0x600006B")]
		[Address(RVA = "0xD5242C", Offset = "0xD5242C", VA = "0xD5242C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000020")]
	public List<GameObject> Visuals
	{
		[Token(Token = "0x600006C")]
		[Address(RVA = "0xD5246C", Offset = "0xD5246C", VA = "0xD5246C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xD52474", Offset = "0xD52474", VA = "0xD52474")]
	public HexConnectionData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000010")]
public class PuzzleHexPiece : XRBaseInteractable
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Transform art;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private HexConnectionData connectionData;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Transform arrowParent;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private SphereCollider sphereCollider;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE158", Offset = "0x8AE158")]
	private PuzzleSphere <Puzzle>k__BackingField;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private new bool isSelected;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Material material;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Color baseColor;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private PuzzleHexPiece[] neighbors;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private IXRInteractor interactor;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 startAxis;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private Vector3 forwardAxis;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private PuzzleSphere parentPuzzle;

	[Token(Token = "0x17000021")]
	public PuzzleSphere Puzzle
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0xCE80F0", Offset = "0xCE80F0", VA = "0xCE80F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC2F8", Offset = "0x8CC2F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600006F")]
		[Address(RVA = "0xCE80F8", Offset = "0xCE80F8", VA = "0xCE80F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC308", Offset = "0x8CC308")]
		private set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public bool IsCorrect
	{
		[Token(Token = "0x6000070")]
		[Address(RVA = "0xCE8108", Offset = "0xCE8108", VA = "0xCE8108")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xCE817C", Offset = "0xCE817C", VA = "0xCE817C", Slot = "47")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xCE8260", Offset = "0xCE8260", VA = "0xCE8260", Slot = "48")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xCE8268", Offset = "0xCE8268", VA = "0xCE8268")]
	public void Setup(PuzzleSphere parentPuzzle)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xCE8278", Offset = "0xCE8278", VA = "0xCE8278")]
	private void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xCE84FC", Offset = "0xCE84FC", VA = "0xCE84FC")]
	private void Rotate(bool right, int turns = 1)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xCE859C", Offset = "0xCE859C", VA = "0xCE859C")]
	public void Randomize()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xCE85F8", Offset = "0xCE85F8", VA = "0xCE85F8", Slot = "67")]
	protected override void OnSelectEntered(SelectEnterEventArgs args)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xCE8648", Offset = "0xCE8648", VA = "0xCE8648", Slot = "62")]
	protected override void OnHoverEntering(HoverEnterEventArgs args)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xCE8808", Offset = "0xCE8808", VA = "0xCE8808", Slot = "65")]
	protected override void OnHoverExited(HoverExitEventArgs args)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xCE8904", Offset = "0xCE8904", VA = "0xCE8904", Slot = "66")]
	protected override void OnSelectEntering(SelectEnterEventArgs args)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xCE8A5C", Offset = "0xCE8A5C", VA = "0xCE8A5C", Slot = "69")]
	protected override void OnSelectExited(SelectExitEventArgs args)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xCE8750", Offset = "0xCE8750", VA = "0xCE8750")]
	private bool CheckDistance(Transform transform)
	{
		return default(bool);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xCE8978", Offset = "0xCE8978", VA = "0xCE8978")]
	private void Grab(IXRInteractor interactor)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xCE8AC8", Offset = "0xCE8AC8", VA = "0xCE8AC8")]
	private void LetGo(IXRInteractor interactor)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xCE8868", Offset = "0xCE8868", VA = "0xCE8868")]
	private void DeSelect()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xCE8758", Offset = "0xCE8758", VA = "0xCE8758")]
	private void Select()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xCE8BC4", Offset = "0xCE8BC4", VA = "0xCE8BC4")]
	public PuzzleHexPiece()
	{
	}
}
[Token(Token = "0x2000011")]
public class PuzzleManager : MonoBehaviourSingleton<PuzzleManager>
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] puzzles;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PuzzleHexPiece[] hexes;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool sphereActive;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int current;

	[Token(Token = "0x17000023")]
	public PuzzleHexPiece[] Hexes
	{
		[Token(Token = "0x6000082")]
		[Address(RVA = "0xCE8C34", Offset = "0xCE8C34", VA = "0xCE8C34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xCE8C3C", Offset = "0xCE8C3C", VA = "0xCE8C3C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xCE8C90", Offset = "0xCE8C90", VA = "0xCE8C90")]
	public void ChangeBtn()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xCE8D9C", Offset = "0xCE8D9C", VA = "0xCE8D9C")]
	public PuzzleManager()
	{
	}
}
[Token(Token = "0x2000012")]
public class StatusBarObject : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000013")]
	public class BarSection
	{
		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public float offset;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float distortionMinimum;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject activeObject;

		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform baseRectTransform;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform fillRectTransform;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float slantOffset;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int fillDirection;

		[Token(Token = "0x1700002F")]
		public float MinX
		{
			[Token(Token = "0x600009C")]
			[Address(RVA = "0xE9F040", Offset = "0xE9F040", VA = "0xE9F040")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000030")]
		public float MaxX
		{
			[Token(Token = "0x600009D")]
			[Address(RVA = "0xE9F05C", Offset = "0xE9F05C", VA = "0xE9F05C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000031")]
		public Rect PaddingRect
		{
			[Token(Token = "0x600009E")]
			[Address(RVA = "0xE9F078", Offset = "0xE9F078", VA = "0xE9F078")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x17000032")]
		public bool IsActive
		{
			[Token(Token = "0x600009F")]
			[Address(RVA = "0xE9F094", Offset = "0xE9F094", VA = "0xE9F094")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xE9F0B0", Offset = "0xE9F0B0", VA = "0xE9F0B0")]
		public void SetBaseStartEndX(float startX, float endX, float offset = 0f)
		{
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xE9F168", Offset = "0xE9F168", VA = "0xE9F168")]
		public void SetBaseWidth(float width)
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xE9F188", Offset = "0xE9F188", VA = "0xE9F188")]
		public void SetFillPercentage(float amount)
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xE9F1DC", Offset = "0xE9F1DC", VA = "0xE9F1DC")]
		public void SetFill(float amount)
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xE9F310", Offset = "0xE9F310", VA = "0xE9F310")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xE9F330", Offset = "0xE9F330", VA = "0xE9F330")]
		public BarSection()
		{
		}
	}

	[Token(Token = "0x2000014")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A7F58", Offset = "0x8A7F58")]
	private sealed class <RefreshOverTime>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StatusBarObject <>4__this;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeStamp>5__2;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startValue>5__3;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A9")]
			[Address(RVA = "0xE9EFF0", Offset = "0xE9EFF0", VA = "0xE9EFF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000AB")]
			[Address(RVA = "0xE9F038", Offset = "0xE9F038", VA = "0xE9F038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xE9ED60", Offset = "0xE9ED60", VA = "0xE9ED60")]
		[DebuggerHidden]
		public <RefreshOverTime>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xE9ED8C", Offset = "0xE9ED8C", VA = "0xE9ED8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xE9ED90", Offset = "0xE9ED90", VA = "0xE9ED90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xE9EFF8", Offset = "0xE9EFF8", VA = "0xE9EFF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000015")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A7F68", Offset = "0x8A7F68")]
	private sealed class <RefillOverTime>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StatusBarObject <>4__this;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startProgress;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timeStamp>5__2;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startValue>5__3;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000AF")]
			[Address(RVA = "0xE9ED10", Offset = "0xE9ED10", VA = "0xE9ED10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B1")]
			[Address(RVA = "0xE9ED58", Offset = "0xE9ED58", VA = "0xE9ED58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0xE9EA48", Offset = "0xE9EA48", VA = "0xE9EA48")]
		[DebuggerHidden]
		public <RefillOverTime>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0xE9EA74", Offset = "0xE9EA74", VA = "0xE9EA74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000AE")]
		[Address(RVA = "0xE9EA78", Offset = "0xE9EA78", VA = "0xE9EA78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xE9ED18", Offset = "0xE9ED18", VA = "0xE9ED18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform rectTransform;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BarSection mainBar;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BarSection extraBar;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BarSection blockedBar;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE198", Offset = "0x8AE198")]
	[SerializeField]
	private float barBaseWidth;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float barMinWidth;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float capacityWidthMultiplier;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE204", Offset = "0x8AE204")]
	[SerializeField]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0x8AE204", Offset = "0x8AE204")]
	private float baseCapacity;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0x8AE264", Offset = "0x8AE264")]
	public float ExtraCapacity;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float currentValue;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool refreshOnEnable;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE298", Offset = "0x8AE298")]
	public float fillAnimationTime;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AnimationCurve fillAnimationCurve;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool refillOverTime;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float refillTime;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float refillDelay;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private ImageColorLerp colorLerp;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SpecialBarFlash specialBarFlash;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float targetValue;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isInitialized;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine refreshCoroutine;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine refillCoroutine;

	[Token(Token = "0x17000024")]
	public float TotalCapacity
	{
		[Token(Token = "0x6000086")]
		[Address(RVA = "0xF294BC", Offset = "0xF294BC", VA = "0xF294BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000025")]
	public float BaseWidth
	{
		[Token(Token = "0x6000087")]
		[Address(RVA = "0xF294C8", Offset = "0xF294C8", VA = "0xF294C8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000026")]
	public float ExtraWidth
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0xF294E0", Offset = "0xF294E0", VA = "0xF294E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000027")]
	public float BaseFillPercent
	{
		[Token(Token = "0x6000089")]
		[Address(RVA = "0xF2951C", Offset = "0xF2951C", VA = "0xF2951C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000028")]
	public float ExtraFillPercent
	{
		[Token(Token = "0x600008A")]
		[Address(RVA = "0xF29530", Offset = "0xF29530", VA = "0xF29530")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000029")]
	public float BlockedFillPercent
	{
		[Token(Token = "0x600008B")]
		[Address(RVA = "0xF29544", Offset = "0xF29544", VA = "0xF29544")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002A")]
	public bool HasCapacity
	{
		[Token(Token = "0x600008C")]
		[Address(RVA = "0xF29558", Offset = "0xF29558", VA = "0xF29558")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002B")]
	public bool IsCurrentEmpty
	{
		[Token(Token = "0x600008D")]
		[Address(RVA = "0xF29568", Offset = "0xF29568", VA = "0xF29568")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002C")]
	public bool IsCurrentFull
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0xF29578", Offset = "0xF29578", VA = "0xF29578")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002D")]
	public bool IsTargetEmpty
	{
		[Token(Token = "0x600008F")]
		[Address(RVA = "0xF29590", Offset = "0xF29590", VA = "0xF29590")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public bool IsTargetFull
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0xF295A0", Offset = "0xF295A0", VA = "0xF295A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xF295B8", Offset = "0xF295B8", VA = "0xF295B8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xF29614", Offset = "0xF29614", VA = "0xF29614")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xF29874", Offset = "0xF29874", VA = "0xF29874")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xF298A8", Offset = "0xF298A8", VA = "0xF298A8")]
	public void SetValues(float baseCapacity, float modifiedCapacity, float newValue)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xF29A20", Offset = "0xF29A20", VA = "0xF29A20")]
	public void SetValueInstantly(float baseCapacity, float modifiedCapacity, float newValue, bool forceRefresh = false)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xF29B2C", Offset = "0xF29B2C", VA = "0xF29B2C")]
	public void StopRefill()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xF29B74", Offset = "0xF29B74", VA = "0xF29B74")]
	public void TryRefill(float startProgress = 0f)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xF299A8", Offset = "0xF299A8", VA = "0xF299A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CC318", Offset = "0x8CC318")]
	private IEnumerator RefreshOverTime()
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xF29BD4", Offset = "0xF29BD4", VA = "0xF29BD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CC378", Offset = "0x8CC378")]
	private IEnumerator RefillOverTime(float startProgress)
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xF29628", Offset = "0xF29628", VA = "0xF29628")]
	private void Refresh(bool forceRefresh = false)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xF29C5C", Offset = "0xF29C5C", VA = "0xF29C5C")]
	public StatusBarObject()
	{
	}
}
[Token(Token = "0x2000016")]
public class ShopInstanceScanAction : MonoBehaviour
{
	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xF511FC", Offset = "0xF511FC", VA = "0xF511FC")]
	public void OnScanned()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xF51344", Offset = "0xF51344", VA = "0xF51344")]
	public ShopInstanceScanAction()
	{
	}
}
[Token(Token = "0x2000017")]
public class VRPlayerSlowdown : MonoBehaviour
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputActionReference slowdownAction;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isSlowingDown;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool slowdownDown;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1201BD8", Offset = "0x1201BD8", VA = "0x1201BD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1201C3C", Offset = "0x1201C3C", VA = "0x1201C3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1201DAC", Offset = "0x1201DAC", VA = "0x1201DAC")]
	private void ActivateSlowdown()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1201D0C", Offset = "0x1201D0C", VA = "0x1201D0C")]
	private void DeActicateSlowdown()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1201E58", Offset = "0x1201E58", VA = "0x1201E58")]
	public VRPlayerSlowdown()
	{
	}
}
[Token(Token = "0x2000018")]
public class AnimationEventTrigger : MonoBehaviour
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent eventTrigger;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xEEB954", Offset = "0xEEB954", VA = "0xEEB954")]
	public void TriggerEvent()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xEEB968", Offset = "0xEEB968", VA = "0xEEB968")]
	public AnimationEventTrigger()
	{
	}
}
[Token(Token = "0x2000019")]
public class ReadOnlyFieldAttribute : PropertyAttribute
{
	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xCEA2FC", Offset = "0xCEA2FC", VA = "0xCEA2FC")]
	public ReadOnlyFieldAttribute()
	{
	}
}
[Token(Token = "0x200001A")]
public class LookAtWorldOrigin : MonoBehaviour
{
	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xD5F8D4", Offset = "0xD5F8D4", VA = "0xD5F8D4")]
	public void Update()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xD5F964", Offset = "0xD5F964", VA = "0xD5F964")]
	public LookAtWorldOrigin()
	{
	}
}
[Token(Token = "0x200001B")]
public class ControlBlendshape : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider uiSlider;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI textDisplay;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SkinnedMeshRenderer[] blendshapeRenders;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool modifyBlendshape;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xFEEE74", Offset = "0xFEEE74", VA = "0xFEEE74")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xFEEF38", Offset = "0xFEEF38", VA = "0xFEEF38")]
	private void ValueChangeCheck()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xFEF02C", Offset = "0xFEF02C", VA = "0xFEF02C")]
	public ControlBlendshape()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xFEF03C", Offset = "0xFEF03C", VA = "0xFEF03C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC478", Offset = "0x8CC478")]
	private void <Start>b__4_0(float <p0>)
	{
	}
}
[Token(Token = "0x200001C")]
public class LineSphereIntersectTest : MonoBehaviour
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform sphere;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform ray;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xD5A8C0", Offset = "0xD5A8C0", VA = "0xD5A8C0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xD5ACB0", Offset = "0xD5ACB0", VA = "0xD5ACB0")]
	public LineSphereIntersectTest()
	{
	}
}
namespace Shared
{
	[Token(Token = "0x200001D")]
	public class AsyncFlag
	{
		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE3C0", Offset = "0x8AE3C0")]
		private bool <IsDone>k__BackingField;

		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<AsyncFlag> onDone;

		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE3D0", Offset = "0x8AE3D0")]
		private static readonly AsyncFlag <Done>k__BackingField;

		[Token(Token = "0x17000037")]
		public bool IsDone
		{
			[Token(Token = "0x60000C4")]
			[Address(RVA = "0xEF1B04", Offset = "0xEF1B04", VA = "0xEF1B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC488", Offset = "0x8CC488")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000C5")]
			[Address(RVA = "0xEF1B0C", Offset = "0xEF1B0C", VA = "0xEF1B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC498", Offset = "0x8CC498")]
			private set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public static AsyncFlag Done
		{
			[Token(Token = "0x60000C6")]
			[Address(RVA = "0xEF1B18", Offset = "0xEF1B18", VA = "0xEF1B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC4A8", Offset = "0x8CC4A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0xEF1B7C", Offset = "0xEF1B7C", VA = "0xEF1B7C")]
		public void MarkDone()
		{
		}

		[Token(Token = "0x60000C8")]
		[Address(RVA = "0xEF1BEC", Offset = "0xEF1BEC", VA = "0xEF1BEC")]
		public AsyncFlag()
		{
		}
	}
	[Token(Token = "0x200001E")]
	public static class ColorTools
	{
		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color orange;

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color purple;

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xFDE6C8", Offset = "0xFDE6C8", VA = "0xFDE6C8")]
		public static Color Alpha(Color baseColor, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xFE8B18", Offset = "0xFE8B18", VA = "0xFE8B18")]
		public static Color Hue(Color baseColor, Color hueColor)
		{
			return default(Color);
		}
	}
	[Serializable]
	[Token(Token = "0x200001F")]
	public struct CooldownTimerFormatting
	{
		[Token(Token = "0x2000020")]
		public enum ProgressParameter
		{
			[Token(Token = "0x400009A")]
			Cooldown,
			[Token(Token = "0x400009B")]
			Count
		}

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ProgressParameter progressParameter;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool displayCount;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool displayCountMax;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool displayTimer;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public bool displayPercent;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool displayPercentOfBase;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizationKey percentageFormattingKey;
	}
	[Token(Token = "0x2000021")]
	public interface ICooldownTimer
	{
		[Token(Token = "0x17000039")]
		float CooldownTimerLeft
		{
			[Token(Token = "0x60000CD")]
			get;
		}

		[Token(Token = "0x1700003A")]
		float CooldownTimerMax
		{
			[Token(Token = "0x60000CE")]
			get;
		}

		[Token(Token = "0x1700003B")]
		float CooldownTimerMaxBase
		{
			[Token(Token = "0x60000CF")]
			get;
		}

		[Token(Token = "0x1700003C")]
		int CooldownTimerCount
		{
			[Token(Token = "0x60000D0")]
			get;
		}

		[Token(Token = "0x1700003D")]
		int CooldownTimerCountMax
		{
			[Token(Token = "0x60000D1")]
			get;
		}

		[Token(Token = "0x1700003E")]
		int CooldownTimerCountMaxBase
		{
			[Token(Token = "0x60000D2")]
			get;
		}

		[Token(Token = "0x1700003F")]
		CooldownTimerFormatting CooldownTimerFormatting
		{
			[Token(Token = "0x60000D3")]
			get;
		}
	}
	[Token(Token = "0x2000022")]
	public struct CooldownTimer
	{
		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool checkComponentValid;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Component component;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ICooldownTimer timer;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly CooldownTimer Default;

		[Token(Token = "0x17000040")]
		public bool IsValid
		{
			[Token(Token = "0x60000D4")]
			[Address(RVA = "0xFF1E30", Offset = "0xFF1E30", VA = "0xFF1E30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000041")]
		public float CooldownTimerLeft
		{
			[Token(Token = "0x60000D5")]
			[Address(RVA = "0xFF1EC0", Offset = "0xFF1EC0", VA = "0xFF1EC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000042")]
		public float CooldownTimerMax
		{
			[Token(Token = "0x60000D6")]
			[Address(RVA = "0xFF1F88", Offset = "0xFF1F88", VA = "0xFF1F88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000043")]
		public float CooldownTimerMaxBase
		{
			[Token(Token = "0x60000D7")]
			[Address(RVA = "0xFF2054", Offset = "0xFF2054", VA = "0xFF2054")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000044")]
		public int CooldownTimerCount
		{
			[Token(Token = "0x60000D8")]
			[Address(RVA = "0xFF2120", Offset = "0xFF2120", VA = "0xFF2120")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000045")]
		public int CooldownTimerCountMax
		{
			[Token(Token = "0x60000D9")]
			[Address(RVA = "0xFF21EC", Offset = "0xFF21EC", VA = "0xFF21EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000046")]
		public int CooldownTimerCountMaxBase
		{
			[Token(Token = "0x60000DA")]
			[Address(RVA = "0xFF22B8", Offset = "0xFF22B8", VA = "0xFF22B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000047")]
		public float ProgressLeft
		{
			[Token(Token = "0x60000DB")]
			[Address(RVA = "0xFF2384", Offset = "0xFF2384", VA = "0xFF2384")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000048")]
		public float ProgressMax
		{
			[Token(Token = "0x60000DC")]
			[Address(RVA = "0xFF25B8", Offset = "0xFF25B8", VA = "0xFF25B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000049")]
		public float ProgressMaxBase
		{
			[Token(Token = "0x60000DD")]
			[Address(RVA = "0xFF2704", Offset = "0xFF2704", VA = "0xFF2704")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700004A")]
		public CooldownTimerFormatting CooldownTimerFormatting
		{
			[Token(Token = "0x60000DE")]
			[Address(RVA = "0xFF24CC", Offset = "0xFF24CC", VA = "0xFF24CC")]
			get
			{
				return default(CooldownTimerFormatting);
			}
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0xFF2850", Offset = "0xFF2850", VA = "0xFF2850")]
		public static CooldownTimer CreateFromTimer(ICooldownTimer timer)
		{
			return default(CooldownTimer);
		}

		[Token(Token = "0x60000E0")]
		public static CooldownTimer CreateFromComponent<T>(T component) where T : Component, ICooldownTimer
		{
			return default(CooldownTimer);
		}
	}
	[Token(Token = "0x2000023")]
	public static class DebugTools
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xC4E37C", Offset = "0xC4E37C", VA = "0xC4E37C")]
		public static void DrawPoint(Vector3 position, Color color, float size = 1f, float duration = 0f)
		{
		}
	}
	[Token(Token = "0x2000024")]
	public class EmptyMonoBehaviour : MonoBehaviour
	{
		[Token(Token = "0x2000025")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A7F78", Offset = "0x8A7F78")]
		private sealed class <RunCoroutineAndDestroy>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40000A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40000A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40000A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator coroutine;

			[Token(Token = "0x40000A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EmptyMonoBehaviour <>4__this;

			[Token(Token = "0x40000A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action continueAction;

			[Token(Token = "0x1700004D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60000F0")]
				[Address(RVA = "0xC6D9D8", Offset = "0xC6D9D8", VA = "0xC6D9D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700004E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60000F2")]
				[Address(RVA = "0xC6DA20", Offset = "0xC6DA20", VA = "0xC6DA20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60000ED")]
			[Address(RVA = "0xC6D7D4", Offset = "0xC6D7D4", VA = "0xC6D7D4")]
			[DebuggerHidden]
			public <RunCoroutineAndDestroy>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60000EE")]
			[Address(RVA = "0xC6D800", Offset = "0xC6D800", VA = "0xC6D800", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60000EF")]
			[Address(RVA = "0xC6D804", Offset = "0xC6D804", VA = "0xC6D804", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60000F1")]
			[Address(RVA = "0xC6D9E0", Offset = "0xC6D9E0", VA = "0xC6D9E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE3E0", Offset = "0x8AE3E0")]
		private Coroutine <Action>k__BackingField;

		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE3F0", Offset = "0x8AE3F0")]
		private bool <ActionFinished>k__BackingField;

		[Token(Token = "0x1700004B")]
		public Coroutine Action
		{
			[Token(Token = "0x60000E3")]
			[Address(RVA = "0xC52410", Offset = "0xC52410", VA = "0xC52410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC4B8", Offset = "0x8CC4B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000E4")]
			[Address(RVA = "0xC52418", Offset = "0xC52418", VA = "0xC52418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC4C8", Offset = "0x8CC4C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public bool ActionFinished
		{
			[Token(Token = "0x60000E5")]
			[Address(RVA = "0xC52420", Offset = "0xC52420", VA = "0xC52420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC4D8", Offset = "0x8CC4D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000E6")]
			[Address(RVA = "0xC52428", Offset = "0xC52428", VA = "0xC52428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC4E8", Offset = "0x8CC4E8")]
			private set
			{
			}
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xC52434", Offset = "0xC52434", VA = "0xC52434")]
		public static EmptyMonoBehaviour RunCoroutine(IEnumerator coroutine, string objectName = "CoroutineRunner", bool dontDestroyOnLoad = true, [System.Runtime.InteropServices.Optional] Action continueAction)
		{
			return null;
		}

		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xC525F0", Offset = "0xC525F0", VA = "0xC525F0")]
		public static void StopCoroutine(EmptyMonoBehaviour runner)
		{
		}

		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xC526DC", Offset = "0xC526DC", VA = "0xC526DC")]
		public static bool IsCoroutineFinished(EmptyMonoBehaviour runner)
		{
			return default(bool);
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xC52768", Offset = "0xC52768", VA = "0xC52768")]
		public static bool IsCoroutineRunning(EmptyMonoBehaviour runner)
		{
			return default(bool);
		}

		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xC52548", Offset = "0xC52548", VA = "0xC52548")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CC4F8", Offset = "0x8CC4F8")]
		private IEnumerator RunCoroutineAndDestroy(IEnumerator coroutine, Action continueAction)
		{
			return null;
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0xC527F4", Offset = "0xC527F4", VA = "0xC527F4")]
		public EmptyMonoBehaviour()
		{
		}
	}
	[Token(Token = "0x2000026")]
	public class FlagGroup
	{
		[Token(Token = "0x2000027")]
		public delegate void FlagChange(bool wasFlagged, bool isFlagged);

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<AsyncFlag> flags;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<FlagGroup> copyToGroups;

		[Token(Token = "0x1700004F")]
		public bool Flagged
		{
			[Token(Token = "0x60000F3")]
			[Address(RVA = "0xC5C6D8", Offset = "0xC5C6D8", VA = "0xC5C6D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000001")]
		public event FlagChange OnFlagChange
		{
			[Token(Token = "0x60000F4")]
			[Address(RVA = "0xC5C730", Offset = "0xC5C730", VA = "0xC5C730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC5A8", Offset = "0x8CC5A8")]
			add
			{
			}
			[Token(Token = "0x60000F5")]
			[Address(RVA = "0xC5C7D0", Offset = "0xC5C7D0", VA = "0xC5C7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC5B8", Offset = "0x8CC5B8")]
			remove
			{
			}
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xC5C870", Offset = "0xC5C870", VA = "0xC5C870")]
		public void AddCopyTo(FlagGroup flagGroup)
		{
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xC5C928", Offset = "0xC5C928", VA = "0xC5C928")]
		public bool RemoveCopyTo(FlagGroup flagGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xC5C998", Offset = "0xC5C998", VA = "0xC5C998")]
		public AsyncFlag CreateFlag()
		{
			return null;
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0xC5CB24", Offset = "0xC5CB24", VA = "0xC5CB24")]
		private void AddFlag(AsyncFlag flag)
		{
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xC5C6DC", Offset = "0xC5C6DC", VA = "0xC5C6DC")]
		public bool IsFlagged()
		{
			return default(bool);
		}

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0xC5CCCC", Offset = "0xC5CCCC", VA = "0xC5CCCC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xC5CD78", Offset = "0xC5CD78", VA = "0xC5CD78")]
		private void OnFlagDone(AsyncFlag flag)
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0xC50A40", Offset = "0xC50A40", VA = "0xC50A40")]
		public bool SetFlagReference(ref AsyncFlag flag, bool enabled)
		{
			return default(bool);
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xC50A24", Offset = "0xC50A24", VA = "0xC50A24")]
		public bool GetFlagReference(AsyncFlag flag)
		{
			return default(bool);
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xC5CE10", Offset = "0xC5CE10", VA = "0xC5CE10")]
		public static implicit operator bool(FlagGroup group)
		{
			return default(bool);
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0xC5CE24", Offset = "0xC5CE24", VA = "0xC5CE24")]
		public FlagGroup()
		{
		}
	}
	[Token(Token = "0x2000028")]
	public static class GameObjectTools
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0xE2D370", Offset = "0xE2D370", VA = "0xE2D370")]
		public static void SetGameObjectActiveSafe(Component component, bool active)
		{
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0xE2D41C", Offset = "0xE2D41C", VA = "0xE2D41C")]
		public static void SetGameObjectActiveSafe(GameObject obj, bool active)
		{
		}

		[Token(Token = "0x6000107")]
		[Address(RVA = "0xE2D4BC", Offset = "0xE2D4BC", VA = "0xE2D4BC")]
		public static GameObject CreateInScene(string name, Scene scene, [System.Runtime.InteropServices.Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000108")]
		[Address(RVA = "0xE2D58C", Offset = "0xE2D58C", VA = "0xE2D58C")]
		public static GameObject CreateInScene(string name, Scene scene, Vector3 position, Quaternion rotation, [System.Runtime.InteropServices.Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0xE2D6E4", Offset = "0xE2D6E4", VA = "0xE2D6E4")]
		public static GameObject CreateInSameScene(string name, GameObject sceneObject, [System.Runtime.InteropServices.Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0xE2D724", Offset = "0xE2D724", VA = "0xE2D724")]
		public static GameObject CreateInSameScene(string name, GameObject sceneObject, Vector3 position, Quaternion rotation, [System.Runtime.InteropServices.Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0xE2D7BC", Offset = "0xE2D7BC", VA = "0xE2D7BC")]
		public static GameObject InstantiateInScene(GameObject prefab, Scene scene, [System.Runtime.InteropServices.Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600010C")]
		[Address(RVA = "0xE2D894", Offset = "0xE2D894", VA = "0xE2D894")]
		public static GameObject InstantiateInScene(GameObject prefab, Scene scene, Vector3 position, Quaternion rotation, [System.Runtime.InteropServices.Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600010D")]
		[Address(RVA = "0xE2D9C4", Offset = "0xE2D9C4", VA = "0xE2D9C4")]
		public static GameObject InstantiateInSameScene(GameObject prefab, GameObject sceneObject, [System.Runtime.InteropServices.Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0xE2BDB0", Offset = "0xE2BDB0", VA = "0xE2BDB0")]
		public static GameObject InstantiateInSameScene(GameObject prefab, GameObject sceneObject, Vector3 position, Quaternion rotation, [System.Runtime.InteropServices.Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600010F")]
		public static T InstantiateInSameScene<T>(T prefab, GameObject sceneObject, [System.Runtime.InteropServices.Optional] Transform parent) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000110")]
		public static T InstantiateInSameScene<T>(T prefab, GameObject sceneObject, Vector3 position, Quaternion rotation, [System.Runtime.InteropServices.Optional] Transform parent) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x2000029")]
	public static class GetComponentTools
	{
		[Token(Token = "0x6000111")]
		public static bool TryGetComponentInParent<ComponentType>(this Collider collider, out ComponentType component)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200002A")]
	public static class GizmoTools
	{
		[Token(Token = "0x40000AA")]
		public const int CIRCLE_SEGMENTS = 20;

		[Token(Token = "0x6000112")]
		[Address(RVA = "0xE2FAF4", Offset = "0xE2FAF4", VA = "0xE2FAF4")]
		public static void DrawWireCircle(Vector3 center, Vector3 forward, float radius)
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0xE2FD64", Offset = "0xE2FD64", VA = "0xE2FD64")]
		public static void DrawScaledGizmoPosition(Vector3 position, float scale = 1f)
		{
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0xE2FED4", Offset = "0xE2FED4", VA = "0xE2FED4")]
		public static void DrawDebugPoint(Vector3 position, Color color, float size = 1f)
		{
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0xE300B4", Offset = "0xE300B4", VA = "0xE300B4")]
		public static void DrawDebugPoint(Vector3 position, Color color, float duration, float size = 1f)
		{
		}
	}
	[Token(Token = "0x200002B")]
	public class HoverTransform : MonoBehaviour
	{
		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 axis;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool resetOnEnable;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool resetOnDisable;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 startPosition;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float time;

		[Token(Token = "0x40000B1")]
		private const float TIME_PERIOD = 1f / (2f * (float)Math.PI);

		[Token(Token = "0x6000116")]
		[Address(RVA = "0xD5247C", Offset = "0xD5247C", VA = "0xD5247C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0xD524B8", Offset = "0xD524B8", VA = "0xD524B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0xD52508", Offset = "0xD52508", VA = "0xD52508")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0xD52558", Offset = "0xD52558", VA = "0xD52558")]
		private void Update()
		{
		}

		[Token(Token = "0x600011A")]
		[Address(RVA = "0xD525F4", Offset = "0xD525F4", VA = "0xD525F4")]
		public HoverTransform()
		{
		}
	}
	[Token(Token = "0x200002C")]
	public class ImageColorLerp : MonoBehaviour
	{
		[Token(Token = "0x200002D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A7F98", Offset = "0x8A7F98")]
		private sealed class <LerpColorProperty>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40000BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40000BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40000BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImageColorLerp <>4__this;

			[Token(Token = "0x40000BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color from;

			[Token(Token = "0x40000BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color to;

			[Token(Token = "0x40000C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x40000C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <t>5__3;

			[Token(Token = "0x17000050")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000124")]
				[Address(RVA = "0xED59D8", Offset = "0xED59D8", VA = "0xED59D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000051")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000126")]
				[Address(RVA = "0xED5A20", Offset = "0xED5A20", VA = "0xED5A20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000121")]
			[Address(RVA = "0xED55C4", Offset = "0xED55C4", VA = "0xED55C4")]
			[DebuggerHidden]
			public <LerpColorProperty>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000122")]
			[Address(RVA = "0xED55F0", Offset = "0xED55F0", VA = "0xED55F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000123")]
			[Address(RVA = "0xED55F4", Offset = "0xED55F4", VA = "0xED55F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000125")]
			[Address(RVA = "0xED59E0", Offset = "0xED59E0", VA = "0xED59E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image image;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color lerpFromColor;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color lerpToColor;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int loops;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine lerpCoroutine;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool lerpIn;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool lerpBack;

		[Token(Token = "0x600011B")]
		[Address(RVA = "0xD52A7C", Offset = "0xD52A7C", VA = "0xD52A7C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0xD52BD4", Offset = "0xD52BD4", VA = "0xD52BD4")]
		public void ResetColorLerp()
		{
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0xD52C3C", Offset = "0xD52C3C", VA = "0xD52C3C")]
		public void LerpInProperty()
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0xD52E70", Offset = "0xD52E70", VA = "0xD52E70")]
		public void LerpBackProperty()
		{
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0xD52DA8", Offset = "0xD52DA8", VA = "0xD52DA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CC5D8", Offset = "0x8CC5D8")]
		private IEnumerator LerpColorProperty(Color from, Color to)
		{
			return null;
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0xD52FDC", Offset = "0xD52FDC", VA = "0xD52FDC")]
		public ImageColorLerp()
		{
		}
	}
	[Token(Token = "0x200002E")]
	public class ImageMaskField : MonoBehaviour
	{
		[Token(Token = "0x200002F")]
		public enum Channel
		{
			[Token(Token = "0x40000D0")]
			R,
			[Token(Token = "0x40000D1")]
			G,
			[Token(Token = "0x40000D2")]
			B,
			[Token(Token = "0x40000D3")]
			A
		}

		[Token(Token = "0x2000030")]
		public struct PositionData
		{
			[Token(Token = "0x40000D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x40000D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float maskValue;

			[Token(Token = "0x6000135")]
			[Address(RVA = "0xED66D8", Offset = "0xED66D8", VA = "0xED66D8")]
			public PositionData(Vector3 position, float maskValue)
			{
			}
		}

		[Token(Token = "0x2000031")]
		public struct BlockedPositionData
		{
			[Token(Token = "0x40000D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x40000D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float radius;

			[Token(Token = "0x6000136")]
			[Address(RVA = "0xED6734", Offset = "0xED6734", VA = "0xED6734")]
			public BlockedPositionData(Vector3 position, float radius)
			{
			}
		}

		[Token(Token = "0x2000032")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A7FA8", Offset = "0x8A7FA8")]
		private sealed class <GeneratePositionsEnumerator>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40000D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40000D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40000DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImageMaskField <>4__this;

			[Token(Token = "0x40000DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Channel channel;

			[Token(Token = "0x40000DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IEnumerable<BlockedPositionData> blockedPositions;

			[Token(Token = "0x40000DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Func<bool> yieldCondition;

			[Token(Token = "0x40000DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public WrappedRandom random;

			[Token(Token = "0x40000DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<PositionData> positions;

			[Token(Token = "0x40000E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public AsyncFlag flag;

			[Token(Token = "0x40000E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator <enumerator>5__2;

			[Token(Token = "0x17000052")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600013A")]
				[Address(RVA = "0xED5D54", Offset = "0xED5D54", VA = "0xED5D54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000053")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600013C")]
				[Address(RVA = "0xED5D9C", Offset = "0xED5D9C", VA = "0xED5D9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000137")]
			[Address(RVA = "0xED5A28", Offset = "0xED5A28", VA = "0xED5A28")]
			[DebuggerHidden]
			public <GeneratePositionsEnumerator>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000138")]
			[Address(RVA = "0xED5A54", Offset = "0xED5A54", VA = "0xED5A54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000139")]
			[Address(RVA = "0xED5A58", Offset = "0xED5A58", VA = "0xED5A58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600013B")]
			[Address(RVA = "0xED5D5C", Offset = "0xED5D5C", VA = "0xED5D5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000033")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A7FB8", Offset = "0x8A7FB8")]
		private sealed class <GeneratePositionsEnumerator>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40000E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40000E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40000E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImageMaskField <>4__this;

			[Token(Token = "0x40000E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Channel channel;

			[Token(Token = "0x40000E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IEnumerable<BlockedPositionData> blockedPositions;

			[Token(Token = "0x40000E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Func<bool> yieldCondition;

			[Token(Token = "0x40000E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public WrappedRandom random;

			[Token(Token = "0x40000E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<Vector3> positions;

			[Token(Token = "0x40000EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public AsyncFlag flag;

			[Token(Token = "0x40000EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator <enumerator>5__2;

			[Token(Token = "0x17000054")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000140")]
				[Address(RVA = "0xED60DC", Offset = "0xED60DC", VA = "0xED60DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000055")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000142")]
				[Address(RVA = "0xED6124", Offset = "0xED6124", VA = "0xED6124", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600013D")]
			[Address(RVA = "0xED5DA4", Offset = "0xED5DA4", VA = "0xED5DA4")]
			[DebuggerHidden]
			public <GeneratePositionsEnumerator>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600013E")]
			[Address(RVA = "0xED5DD0", Offset = "0xED5DD0", VA = "0xED5DD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600013F")]
			[Address(RVA = "0xED5DD4", Offset = "0xED5DD4", VA = "0xED5DD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000141")]
			[Address(RVA = "0xED60E4", Offset = "0xED60E4", VA = "0xED60E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A7FC8", Offset = "0x8A7FC8")]
		private sealed class <GeneratePositionsInternal>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40000EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40000ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40000EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImageMaskField <>4__this;

			[Token(Token = "0x40000EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<bool> yieldCondition;

			[Token(Token = "0x40000F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Channel channel;

			[Token(Token = "0x40000F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public WrappedRandom random;

			[Token(Token = "0x40000F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IEnumerable<BlockedPositionData> blockedPositions;

			[Token(Token = "0x40000F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <xStep>5__2;

			[Token(Token = "0x40000F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <yStep>5__3;

			[Token(Token = "0x40000F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <nodeDist>5__4;

			[Token(Token = "0x40000F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 <areaSize>5__5;

			[Token(Token = "0x40000F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3 <areaSizeHalf>5__6;

			[Token(Token = "0x40000F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float <chanceRest>5__7;

			[Token(Token = "0x40000F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private float <minNodeRadius>5__8;

			[Token(Token = "0x40000FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private float <x>5__9;

			[Token(Token = "0x40000FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private float <y>5__10;

			[Token(Token = "0x40000FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private int <i>5__11;

			[Token(Token = "0x17000056")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000146")]
				[Address(RVA = "0xED66E4", Offset = "0xED66E4", VA = "0xED66E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000057")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000148")]
				[Address(RVA = "0xED672C", Offset = "0xED672C", VA = "0xED672C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000143")]
			[Address(RVA = "0xED612C", Offset = "0xED612C", VA = "0xED612C")]
			[DebuggerHidden]
			public <GeneratePositionsInternal>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000144")]
			[Address(RVA = "0xED6158", Offset = "0xED6158", VA = "0xED6158", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000145")]
			[Address(RVA = "0xED615C", Offset = "0xED615C", VA = "0xED615C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000147")]
			[Address(RVA = "0xED66EC", Offset = "0xED66EC", VA = "0xED66EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE4B0", Offset = "0x8AE4B0")]
		public Texture2D maskTexture;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve maskChance;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE4E8", Offset = "0x8AE4E8")]
		public float areaWidth;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float densityWidth;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float chanceRest;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minRadius;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve areaOffsetCurve;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float areaOffsetValue;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve heightOffsetCurve;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float heightOffsetValue;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<PositionData> positionBuffer;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<BlockedPositionData> blockedPositionBuffer;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<AsyncFlag> asyncFlags;

		[Token(Token = "0x6000127")]
		[Address(RVA = "0xD52FEC", Offset = "0xD52FEC", VA = "0xD52FEC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0xD52FF0", Offset = "0xD52FF0", VA = "0xD52FF0")]
		public void DrawFieldGizmos()
		{
		}

		[Token(Token = "0x6000129")]
		[Address(RVA = "0xD53018", Offset = "0xD53018", VA = "0xD53018")]
		public void DrawFieldGizmos(Color color)
		{
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0xD534A0", Offset = "0xD534A0", VA = "0xD534A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0xD535DC", Offset = "0xD535DC", VA = "0xD535DC")]
		public void GeneratePositions(List<PositionData> positions, Channel channel = Channel.R, [System.Runtime.InteropServices.Optional] IEnumerable<BlockedPositionData> blockedPositions, [System.Runtime.InteropServices.Optional] WrappedRandom random)
		{
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0xD537CC", Offset = "0xD537CC", VA = "0xD537CC")]
		public AsyncFlag GeneratePositionsAsync(List<PositionData> positions, Func<bool> yieldCondition, Channel channel = Channel.R, [System.Runtime.InteropServices.Optional] IEnumerable<BlockedPositionData> blockedPositions, [System.Runtime.InteropServices.Optional] WrappedRandom random)
		{
			return null;
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0xD536D0", Offset = "0xD536D0", VA = "0xD536D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CC688", Offset = "0x8CC688")]
		public IEnumerator GeneratePositionsEnumerator(List<PositionData> positions, Func<bool> yieldCondition, Channel channel = Channel.R, [System.Runtime.InteropServices.Optional] IEnumerable<BlockedPositionData> blockedPositions, [System.Runtime.InteropServices.Optional] WrappedRandom random, [System.Runtime.InteropServices.Optional] AsyncFlag flag)
		{
			return null;
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0xD538B0", Offset = "0xD538B0", VA = "0xD538B0")]
		public void GeneratePositions(List<Vector3> positions, Channel channel = Channel.R, [System.Runtime.InteropServices.Optional] IEnumerable<BlockedPositionData> blockedPositions, [System.Runtime.InteropServices.Optional] WrappedRandom random)
		{
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0xD53AA0", Offset = "0xD53AA0", VA = "0xD53AA0")]
		public AsyncFlag GeneratePositionsAsync(List<Vector3> positions, Func<bool> yieldCondition, Channel channel = Channel.R, [System.Runtime.InteropServices.Optional] IEnumerable<BlockedPositionData> blockedPositions, [System.Runtime.InteropServices.Optional] WrappedRandom random)
		{
			return null;
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0xD539A4", Offset = "0xD539A4", VA = "0xD539A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CC6E8", Offset = "0x8CC6E8")]
		public IEnumerator GeneratePositionsEnumerator(List<Vector3> positions, Func<bool> yieldCondition, Channel channel = Channel.R, [System.Runtime.InteropServices.Optional] IEnumerable<BlockedPositionData> blockedPositions, [System.Runtime.InteropServices.Optional] WrappedRandom random, [System.Runtime.InteropServices.Optional] AsyncFlag flag)
		{
			return null;
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0xD53B84", Offset = "0xD53B84", VA = "0xD53B84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CC748", Offset = "0x8CC748")]
		private IEnumerator GeneratePositionsInternal(Channel channel, IEnumerable<BlockedPositionData> blockedPositions, Func<bool> yieldCondition, WrappedRandom random)
		{
			return null;
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0xD53470", Offset = "0xD53470", VA = "0xD53470")]
		private static float GetColorChannelValue(Color color, Channel channel)
		{
			return default(float);
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0xD53C50", Offset = "0xD53C50", VA = "0xD53C50")]
		private static bool IsNodeBlocked(List<PositionData> positions, List<BlockedPositionData> blockedPositions, Vector3 position, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0xD53E70", Offset = "0xD53E70", VA = "0xD53E70")]
		public ImageMaskField()
		{
		}
	}
	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A7FD8", Offset = "0x8A7FD8")]
	public class LineRendererEndCaps : MonoBehaviour
	{
		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform start;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform end;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer line;

		[Token(Token = "0x6000149")]
		[Address(RVA = "0xD5A308", Offset = "0xD5A308", VA = "0xD5A308")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0xD5A364", Offset = "0xD5A364", VA = "0xD5A364")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0xD5A838", Offset = "0xD5A838", VA = "0xD5A838")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0xD5A8B4", Offset = "0xD5A8B4", VA = "0xD5A8B4")]
		[AttributeAttribute(Name = "BeforeRenderOrderAttribute", RVA = "0x8CC898", Offset = "0x8CC898")]
		private void OnBeforeRenderCanvasSizer()
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0xD5A3E8", Offset = "0xD5A3E8", VA = "0xD5A3E8")]
		public void UpdateEndCaps()
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0xD5A8B8", Offset = "0xD5A8B8", VA = "0xD5A8B8")]
		public LineRendererEndCaps()
		{
		}
	}
	[Token(Token = "0x2000036")]
	public static class ListTools
	{
		[Token(Token = "0x600014F")]
		public static bool IsNullOrEmpty<T>(IReadOnlyCollection<T> collection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000150")]
		public static bool IsNullOrEmptyOrCondition<T>(IReadOnlyCollection<T> collection, Predicate<T> condition) where T : class
		{
			return default(bool);
		}

		[Token(Token = "0x6000151")]
		public static bool IsNullOrEmptyOrOutOfRange<T>(IReadOnlyCollection<T> collection, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000152")]
		public static int NullSafeCount<T>(IReadOnlyCollection<T> collection)
		{
			return default(int);
		}

		[Token(Token = "0x6000153")]
		public static bool NullSafeAdd<T>(this ICollection<T> collection, T item) where T : class
		{
			return default(bool);
		}

		[Token(Token = "0x6000154")]
		public static bool NullSafeAddRange<T>(this ICollection<T> collection, IReadOnlyCollection<T> items)
		{
			return default(bool);
		}

		[Token(Token = "0x6000155")]
		public static bool IsIndexInRange<T>(IReadOnlyCollection<T> collection, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000156")]
		public static void Shuffle<T>(IList<T> list, [System.Runtime.InteropServices.Optional] WrappedRandom random)
		{
		}

		[Token(Token = "0x6000157")]
		public static void Shuffle<T>(IList<T> list, int startIndex, int count = int.MaxValue, [System.Runtime.InteropServices.Optional] WrappedRandom random)
		{
		}

		[Token(Token = "0x6000158")]
		public static void EnsureCreated<TCollection>(ref TCollection collection) where TCollection : class, new()
		{
		}

		[Token(Token = "0x6000159")]
		public static void EnsureSize<T>(ICollection<T> collection, int size)
		{
		}

		[Token(Token = "0x600015A")]
		public static T First<T>(this T[] array)
		{
			return (T)null;
		}

		[Token(Token = "0x600015B")]
		public static T Last<T>(this T[] array)
		{
			return (T)null;
		}

		[Token(Token = "0x600015C")]
		public static T PopFirst<T>(this List<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x600015D")]
		public static T PopLast<T>(this List<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x600015E")]
		public static T PopIndex<T>(this List<T> list, int index)
		{
			return (T)null;
		}

		[Token(Token = "0x600015F")]
		public static bool FindFirstIndex<T>(this List<T> list, Predicate<T> condition, out int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000160")]
		public static List<T> CopyList<T>(this IReadOnlyList<T> list)
		{
			return null;
		}

		[Token(Token = "0x6000161")]
		public static bool Contains<T>(this IReadOnlyList<T> list, T element)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000037")]
	public static class ListTools<T>
	{
		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly T[] EmptyArray;

		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<T> EmptyList;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly IReadOnlyList<T> EmptyReadOnlyList;
	}
	[Token(Token = "0x2000038")]
	public abstract class PIDController<T>
	{
		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float factorProportional;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float factorIntegral;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float factorDerivative;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T integral;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T lastError;

		[Token(Token = "0x6000163")]
		protected abstract T Add(T a, T b);

		[Token(Token = "0x6000164")]
		protected abstract T Multiply(T a, float b);

		[Token(Token = "0x6000165")]
		public PIDController(float p, float i, float d)
		{
		}

		[Token(Token = "0x6000166")]
		public T Update(T currentError, float timeFrame)
		{
			return (T)null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000039")]
	public class PIDControllerVector3 : PIDController<Vector3>
	{
		[Token(Token = "0x6000167")]
		[Address(RVA = "0x2491970", Offset = "0x2491970", VA = "0x2491970")]
		public PIDControllerVector3(float p, float i, float d)
		{
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x24919E4", Offset = "0x24919E4", VA = "0x24919E4", Slot = "4")]
		protected override Vector3 Add(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x24919F4", Offset = "0x24919F4", VA = "0x24919F4", Slot = "5")]
		protected override Vector3 Multiply(Vector3 a, float b)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200003A")]
	public interface IRandom
	{
		[Token(Token = "0x600016A")]
		int Next();

		[Token(Token = "0x600016B")]
		int Next(int minValue, int maxValue);

		[Token(Token = "0x600016C")]
		int Next(int maxValue);

		[Token(Token = "0x600016D")]
		double NextDouble();

		[Token(Token = "0x600016E")]
		void NextBytes(byte[] buffer);
	}
	[Serializable]
	[Token(Token = "0x200003B")]
	public class PortableRandomState
	{
		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int next;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int nextp;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] seedArray;

		[Token(Token = "0x600016F")]
		[Address(RVA = "0xCE5308", Offset = "0xCE5308", VA = "0xCE5308")]
		public PortableRandomState()
		{
		}
	}
	[Token(Token = "0x200003C")]
	public class PortableRandom : IRandom
	{
		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string hexChars;

		[Token(Token = "0x400010C")]
		private const int BIG = int.MaxValue;

		[Token(Token = "0x400010D")]
		private const double BIG_INV = 4.656612875245797E-10;

		[Token(Token = "0x400010E")]
		private const int SEED = 161803398;

		[Token(Token = "0x400010F")]
		private const int Z = 0;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int next;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int nextp;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] seedArray;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE540", Offset = "0x8AE540")]
		private readonly int <Seed>k__BackingField;

		[Token(Token = "0x17000058")]
		public int Seed
		{
			[Token(Token = "0x6000170")]
			[Address(RVA = "0xCE455C", Offset = "0xCE455C", VA = "0xCE455C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC94C", Offset = "0x8CC94C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0xCE4564", Offset = "0xCE4564", VA = "0xCE4564")]
		public static string SeedToHexString(int seed)
		{
			return null;
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0xCE46FC", Offset = "0xCE46FC", VA = "0xCE46FC")]
		public static bool SeedFromHexString(string text, out int seed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0xCE492C", Offset = "0xCE492C", VA = "0xCE492C")]
		public static bool IsStringHex(string str)
		{
			return default(bool);
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0xCE49E8", Offset = "0xCE49E8", VA = "0xCE49E8")]
		public static bool IsCharHex(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0xCE4AC0", Offset = "0xCE4AC0", VA = "0xCE4AC0")]
		public static PortableRandom CreateFromHexString(string hexSeed)
		{
			return null;
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0xCE4B50", Offset = "0xCE4B50", VA = "0xCE4B50")]
		public static PortableRandom CreateOrNullFromHexString(string hexSeed)
		{
			return null;
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0xCE4C00", Offset = "0xCE4C00", VA = "0xCE4C00")]
		public PortableRandom()
		{
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0xCE4C2C", Offset = "0xCE4C2C", VA = "0xCE4C2C")]
		public PortableRandom(int seed)
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0xCE4EA8", Offset = "0xCE4EA8", VA = "0xCE4EA8")]
		public PortableRandom(PortableRandomState portableRandomState)
		{
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0xCE4F50", Offset = "0xCE4F50", VA = "0xCE4F50")]
		private int InternalSample()
		{
			return default(int);
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0xCE4FEC", Offset = "0xCE4FEC", VA = "0xCE4FEC")]
		private double Sample()
		{
			return default(double);
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0xCE5010", Offset = "0xCE5010", VA = "0xCE5010")]
		private double SampleForLargeRange()
		{
			return default(double);
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0xCE5060", Offset = "0xCE5060", VA = "0xCE5060", Slot = "4")]
		public int Next()
		{
			return default(int);
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0xCE5064", Offset = "0xCE5064", VA = "0xCE5064", Slot = "5")]
		public int Next(int minValue, int maxValue)
		{
			return default(int);
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0xCE511C", Offset = "0xCE511C", VA = "0xCE511C", Slot = "6")]
		public int Next(int maxValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0xCE51A4", Offset = "0xCE51A4", VA = "0xCE51A4", Slot = "7")]
		public double NextDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0xCE51C8", Offset = "0xCE51C8", VA = "0xCE51C8", Slot = "8")]
		public void NextBytes(byte[] buffer)
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0xCE5280", Offset = "0xCE5280", VA = "0xCE5280")]
		public PortableRandomState GetPortableRandomState()
		{
			return null;
		}
	}
	[Token(Token = "0x200003D")]
	public class PulseTransform : MonoBehaviour
	{
		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 additionalScale;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool resetOnEnable;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool resetOnDisable;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 startScale;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float time;

		[Token(Token = "0x400011A")]
		private const float TIME_PERIOD = 1f / (2f * (float)Math.PI);

		[Token(Token = "0x6000184")]
		[Address(RVA = "0xCE7A2C", Offset = "0xCE7A2C", VA = "0xCE7A2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0xCE7A68", Offset = "0xCE7A68", VA = "0xCE7A68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0xCE7AB8", Offset = "0xCE7AB8", VA = "0xCE7AB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0xCE7B08", Offset = "0xCE7B08", VA = "0xCE7B08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0xCE7BBC", Offset = "0xCE7BBC", VA = "0xCE7BBC")]
		public PulseTransform()
		{
		}
	}
	[Token(Token = "0x200003E")]
	public class RotateMultipleTransform : MonoBehaviour
	{
		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Transform> rotateTransforms;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 axis;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Quaternion startRotation;

		[Token(Token = "0x6000189")]
		[Address(RVA = "0xCEAC70", Offset = "0xCEAC70", VA = "0xCEAC70")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0xCEAD90", Offset = "0xCEAD90", VA = "0xCEAD90")]
		protected void Update()
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0xCEAEE8", Offset = "0xCEAEE8", VA = "0xCEAEE8")]
		public RotateMultipleTransform()
		{
		}
	}
	[Token(Token = "0x200003F")]
	public class RotateTransform : MonoBehaviour
	{
		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 axis;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool useRandomRange;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float speedMax;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float speedAcceleration;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float speedDeceleration;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE630", Offset = "0x8AE630")]
		[SerializeField]
		private bool resetOnEnable;

		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool resetOnDisable;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion startRotation;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float currentSpeed;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float targetSpeed;

		[Token(Token = "0x600018C")]
		[Address(RVA = "0xCEAF24", Offset = "0xCEAF24", VA = "0xCEAF24")]
		private void Awake()
		{
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0xCEAF94", Offset = "0xCEAF94", VA = "0xCEAF94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0xCEAFE0", Offset = "0xCEAFE0", VA = "0xCEAFE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0xCEB02C", Offset = "0xCEB02C", VA = "0xCEB02C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0xCEB0E0", Offset = "0xCEB0E0", VA = "0xCEB0E0")]
		public void SetNewSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0xCEB0E8", Offset = "0xCEB0E8", VA = "0xCEB0E8")]
		public RotateTransform()
		{
		}
	}
	[Token(Token = "0x2000040")]
	public static class StringTools
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0xF2A620", Offset = "0xF2A620", VA = "0xF2A620")]
		public static string GetUntilOrEmpty(this string text, string stopAt = "-")
		{
			return null;
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0xF2A6D0", Offset = "0xF2A6D0", VA = "0xF2A6D0")]
		public static bool Contains(this string text, char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0xF2A744", Offset = "0xF2A744", VA = "0xF2A744")]
		public static int Count(this string text, char ch)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000041")]
	public class TextMeshProColorLerp : MonoBehaviour
	{
		[Token(Token = "0x2000042")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8058", Offset = "0x8A8058")]
		private sealed class <LerpColorProperty>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProColorLerp <>4__this;

			[Token(Token = "0x4000133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color from;

			[Token(Token = "0x4000134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color to;

			[Token(Token = "0x4000135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <t>5__2;

			[Token(Token = "0x17000059")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600019C")]
				[Address(RVA = "0xEA1094", Offset = "0xEA1094", VA = "0xEA1094", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700005A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600019E")]
				[Address(RVA = "0xEA10DC", Offset = "0xEA10DC", VA = "0xEA10DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000199")]
			[Address(RVA = "0xEA0EF8", Offset = "0xEA0EF8", VA = "0xEA0EF8")]
			[DebuggerHidden]
			public <LerpColorProperty>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600019A")]
			[Address(RVA = "0xEA0F24", Offset = "0xEA0F24", VA = "0xEA0F24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600019B")]
			[Address(RVA = "0xEA0F28", Offset = "0xEA0F28", VA = "0xEA0F28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600019D")]
			[Address(RVA = "0xEA109C", Offset = "0xEA109C", VA = "0xEA109C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI textMesh;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color lerpFromColor;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color lerpToColor;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine lerpCoroutine;

		[Token(Token = "0x6000195")]
		[Address(RVA = "0xF32B3C", Offset = "0xF32B3C", VA = "0xF32B3C")]
		public void LerpInProperty()
		{
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0xF32D08", Offset = "0xF32D08", VA = "0xF32D08")]
		public void LerpBackProperty()
		{
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0xF32C40", Offset = "0xF32C40", VA = "0xF32C40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CC98C", Offset = "0x8CC98C")]
		private IEnumerator LerpColorProperty(Color from, Color to)
		{
			return null;
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0xF32E0C", Offset = "0xF32E0C", VA = "0xF32E0C")]
		public TextMeshProColorLerp()
		{
		}
	}
	[Token(Token = "0x2000043")]
	public class TextTypeEffect : MonoBehaviour
	{
		[Token(Token = "0x2000044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8068", Offset = "0x8A8068")]
		private sealed class <TypeOutText>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400013A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400013B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextTypeEffect <>4__this;

			[Token(Token = "0x400013C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x400013D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x1700005B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60001A5")]
				[Address(RVA = "0xEA1438", Offset = "0xEA1438", VA = "0xEA1438", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700005C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60001A7")]
				[Address(RVA = "0xEA1480", Offset = "0xEA1480", VA = "0xEA1480", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60001A2")]
			[Address(RVA = "0xEA11F8", Offset = "0xEA11F8", VA = "0xEA11F8")]
			[DebuggerHidden]
			public <TypeOutText>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60001A3")]
			[Address(RVA = "0xEA1224", Offset = "0xEA1224", VA = "0xEA1224", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60001A4")]
			[Address(RVA = "0xEA1228", Offset = "0xEA1228", VA = "0xEA1228", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60001A6")]
			[Address(RVA = "0xEA1440", Offset = "0xEA1440", VA = "0xEA1440", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI textMeshPro;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float textWriteDelay;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine textAnimationCoroutine;

		[Token(Token = "0x600019F")]
		[Address(RVA = "0xF33D94", Offset = "0xF33D94", VA = "0xF33D94")]
		public void SetTypeOutText()
		{
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xF33E04", Offset = "0xF33E04", VA = "0xF33E04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CCA3C", Offset = "0x8CCA3C")]
		private IEnumerator TypeOutText()
		{
			return null;
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xF33E7C", Offset = "0xF33E7C", VA = "0xF33E7C")]
		public TextTypeEffect()
		{
		}
	}
	[Token(Token = "0x2000045")]
	public class TranslateLoopTransform : MonoBehaviour
	{
		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 startLocalOffset;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 endLocalOffset;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve curve;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool resetOnEnable;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 startPosition;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float t;

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xF36FD8", Offset = "0xF36FD8", VA = "0xF36FD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xF37014", Offset = "0xF37014", VA = "0xF37014")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xF37060", Offset = "0xF37060", VA = "0xF37060")]
		private void Update()
		{
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xF37134", Offset = "0xF37134", VA = "0xF37134")]
		public TranslateLoopTransform()
		{
		}
	}
	[Token(Token = "0x2000046")]
	public static class TypeTools
	{
		[Token(Token = "0x2000047")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8088", Offset = "0x8A8088")]
		private sealed class <>c__DisplayClass0_0<T> where T : Attribute
		{
			[Token(Token = "0x4000145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T attr;

			[Token(Token = "0x4000146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool shallowest;

			[Token(Token = "0x60001AE")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60001AF")]
			internal void <GetFieldAttribute>b__0(FieldInfo p)
			{
			}
		}

		[Token(Token = "0x60001AC")]
		public static T GetFieldAttribute<T>(this Type type, string path, bool shallowest = false) where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x10B2F3C", Offset = "0x10B2F3C", VA = "0x10B2F3C")]
		public static FieldInfo GetFieldInfoRelative(this Type type, string path, [System.Runtime.InteropServices.Optional] Action<FieldInfo> fieldAction)
		{
			return null;
		}
	}
	[Token(Token = "0x2000048")]
	public static class VectorTools
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xDFCA68", Offset = "0xDFCA68", VA = "0xDFCA68")]
		public static Vector2 ComponentMultiply(Vector2 a, Vector2 b)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xDFCA74", Offset = "0xDFCA74", VA = "0xDFCA74")]
		public static Vector3 ComponentMultiply(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xDFCA84", Offset = "0xDFCA84", VA = "0xDFCA84")]
		public static Vector4 ComponentMultiply(Vector4 a, Vector4 b)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xDFCAC4", Offset = "0xDFCAC4", VA = "0xDFCAC4")]
		public static float RemapInRange(float value, Vector2 sourceRange, Vector2 targetRange)
		{
			return default(float);
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xDFCB14", Offset = "0xDFCB14", VA = "0xDFCB14")]
		public static Vector3 GetFlatFacingOffsetPosition(Vector3 originPosition, Vector3 originForward, Vector3 offset, float floorLevel = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xDFCC0C", Offset = "0xDFCC0C", VA = "0xDFCC0C")]
		public static Vector3 GetFlatVector(Vector3 vector, float floorLevel = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xDFCC04", Offset = "0xDFCC04", VA = "0xDFCC04")]
		public static Vector3 GetFlatNormalizedVector(Vector3 vector, float floorLevel = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xDFCC14", Offset = "0xDFCC14", VA = "0xDFCC14")]
		public static Vector3 GetNormalizedVector(Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xDFCCA0", Offset = "0xDFCCA0", VA = "0xDFCCA0")]
		public static Quaternion GetShortestQuaternionRotation(Quaternion a, Quaternion b)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xDFCD64", Offset = "0xDFCD64", VA = "0xDFCD64")]
		public static Quaternion ScaleQuaternion(Quaternion a, float b)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xDFCDA4", Offset = "0xDFCDA4", VA = "0xDFCDA4")]
		public static float Damp(float source, float target, float smoothing, float deltatime)
		{
			return default(float);
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xDFCDEC", Offset = "0xDFCDEC", VA = "0xDFCDEC")]
		public static Vector2 Damp(Vector2 source, Vector2 target, float smoothing, float deltatime)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xDF9314", Offset = "0xDF9314", VA = "0xDF9314")]
		public static Vector3 Damp(Vector3 source, Vector3 target, float smoothing, float deltatime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xDFCE58", Offset = "0xDFCE58", VA = "0xDFCE58")]
		public static Vector4 Damp(Vector4 source, Vector4 target, float smoothing, float deltatime)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xDF939C", Offset = "0xDF939C", VA = "0xDF939C")]
		public static Quaternion Damp(Quaternion source, Quaternion target, float smoothing, float deltatime)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xDFCEF0", Offset = "0xDFCEF0", VA = "0xDFCEF0")]
		public static Color Damp(Color source, Color target, float smoothing, float deltatime)
		{
			return default(Color);
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xDFCF88", Offset = "0xDFCF88", VA = "0xDFCF88")]
		public static float Smooth(float source, float target, float smoothing, float deltatime)
		{
			return default(float);
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xDFCFF4", Offset = "0xDFCFF4", VA = "0xDFCFF4")]
		public static Vector2 Smooth(Vector2 source, Vector2 target, float smoothing, float deltatime)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xDFD078", Offset = "0xDFD078", VA = "0xDFD078")]
		public static Vector3 Smooth(Vector3 source, Vector3 target, float smoothing, float deltatime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xDFD0B8", Offset = "0xDFD0B8", VA = "0xDFD0B8")]
		public static Vector4 Smooth(Vector4 source, Vector4 target, float smoothing, float deltatime)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xDFD184", Offset = "0xDFD184", VA = "0xDFD184")]
		public static Quaternion Smooth(Quaternion source, Quaternion target, float smoothing, float deltatime)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xDFD250", Offset = "0xDFD250", VA = "0xDFD250")]
		public static Color Smooth(Color source, Color target, float smoothing, float deltatime)
		{
			return default(Color);
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xDFD31C", Offset = "0xDFD31C", VA = "0xDFD31C")]
		public static float RoundToClosestMultiple(this float value, float multiple)
		{
			return default(float);
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xDFD34C", Offset = "0xDFD34C", VA = "0xDFD34C")]
		public static int RoundToIntClosestMultiple(this float value, int multiple)
		{
			return default(int);
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xDFD37C", Offset = "0xDFD37C", VA = "0xDFD37C")]
		public static int RoundToClosestMultiple(this int value, int multiple)
		{
			return default(int);
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xDFD3B0", Offset = "0xDFD3B0", VA = "0xDFD3B0")]
		public static Vector2 RoundToClosestMultiple(this Vector2 value, float multiple)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xDFD404", Offset = "0xDFD404", VA = "0xDFD404")]
		public static Vector2Int RoundToIntClosestMultiple(this Vector2 value, int multiple)
		{
			return default(Vector2Int);
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xDFD458", Offset = "0xDFD458", VA = "0xDFD458")]
		public static Vector3 RoundToClosestMultiple(this Vector3 value, float multiple)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xDFD4C8", Offset = "0xDFD4C8", VA = "0xDFD4C8")]
		public static Vector3Int RoundToIntClosestMultiple(this Vector3 value, int multiple)
		{
			return default(Vector3Int);
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xDFD540", Offset = "0xDFD540", VA = "0xDFD540")]
		public static Vector4 RoundToClosestMultiple(this Vector4 value, float multiple)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xDFD5F4", Offset = "0xDFD5F4", VA = "0xDFD5F4")]
		public static Vector3 RayIntersectSphereOrClosest(Ray ray, Vector3 sphereCenter, float sphereRadius, bool furthestIntersection = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xDFD8E4", Offset = "0xDFD8E4", VA = "0xDFD8E4")]
		public static bool TryLineIntersectSphere(Ray ray, Vector3 sphereCenter, float sphereRadius, out Vector3 intersectPoint, bool furthestIntersection = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xDFD780", Offset = "0xDFD780", VA = "0xDFD780")]
		public static Vector3 ClosestPointOnSphere(Vector3 point, Vector3 sphereCenter, float sphereRadius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xDFD9F4", Offset = "0xDFD9F4", VA = "0xDFD9F4")]
		public static Vector3 ClosestPointInSphere(Vector3 point, Vector3 sphereCenter, float sphereRadius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xDFD848", Offset = "0xDFD848", VA = "0xDFD848")]
		public static Vector3 ClosestPointOnSphere(Ray line, Vector3 sphereCenter, float sphereRadius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xDFDAF4", Offset = "0xDFDAF4", VA = "0xDFDAF4")]
		public static bool IsPointInCone(Ray coneRay, float coneBaseRadius, float coneAngle, Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xDFDBF0", Offset = "0xDFDBF0", VA = "0xDFDBF0")]
		public static bool IsPointInConeScaled(Ray coneRay, Vector3 coneUp, float coneBaseRadius, float coneAngle, Vector3 point, Vector3 pointRelativeScale)
		{
			return default(bool);
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xDFDC3C", Offset = "0xDFDC3C", VA = "0xDFDC3C")]
		public static bool IsPointInConeScaled(Ray coneRay, Vector3 coneUp, float coneBaseRadius, float coneAngle, Vector3 point, Vector3 pointRelativeScalePositive, Vector3 pointRelativeScaleNegative)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000049")]
	public struct WrappedRandom : IRandom
	{
		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE74C", Offset = "0x8AE74C")]
		private readonly IRandom <Random>k__BackingField;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WrappedRandom Default;

		[Token(Token = "0x1700005D")]
		public readonly IRandom Random
		{
			[Token(Token = "0x60001D6")]
			[Address(RVA = "0xE00664", Offset = "0xE00664", VA = "0xE00664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCB8C", Offset = "0x8CCB8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xE0066C", Offset = "0xE0066C", VA = "0xE0066C")]
		public WrappedRandom(IRandom random)
		{
		}

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xE00674", Offset = "0xE00674", VA = "0xE00674", Slot = "4")]
		public int Next()
		{
			return default(int);
		}

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xE00734", Offset = "0xE00734", VA = "0xE00734", Slot = "5")]
		public int Next(int minValue, int maxValue)
		{
			return default(int);
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xE00814", Offset = "0xE00814", VA = "0xE00814", Slot = "6")]
		public int Next(int maxValue)
		{
			return default(int);
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xE008EC", Offset = "0xE008EC", VA = "0xE008EC")]
		public float Next(float minValue, float maxValue)
		{
			return default(float);
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xE009D8", Offset = "0xE009D8", VA = "0xE009D8")]
		public float Next(float maxValue)
		{
			return default(float);
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xE00AC0", Offset = "0xE00AC0", VA = "0xE00AC0")]
		public int Next(Vector2Int vec)
		{
			return default(int);
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xE00ACC", Offset = "0xE00ACC", VA = "0xE00ACC")]
		public float Next(Vector2 vec)
		{
			return default(float);
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xE00AD0", Offset = "0xE00AD0", VA = "0xE00AD0", Slot = "7")]
		public double NextDouble()
		{
			return default(double);
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xE00B94", Offset = "0xE00B94", VA = "0xE00B94")]
		public float NextFloat()
		{
			return default(float);
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xE00C58", Offset = "0xE00C58", VA = "0xE00C58", Slot = "8")]
		public void NextBytes(byte[] buffer)
		{
		}
	}
}
namespace Shared.VR
{
	[Token(Token = "0x200004A")]
	public interface ILookCameraTransform
	{
		[Token(Token = "0x1700005E")]
		bool OverrideUpdate
		{
			[Token(Token = "0x60001E3")]
			get;
			[Token(Token = "0x60001E4")]
			set;
		}

		[Token(Token = "0x60001E5")]
		void UpdateLookCameraTransform(Camera camera);
	}
	[Token(Token = "0x200004B")]
	public class LookAtCameraTransform : MonoBehaviour, ILookCameraTransform
	{
		[Token(Token = "0x200004C")]
		public enum LookAtMode
		{
			[Token(Token = "0x4000151")]
			CameraPosition,
			[Token(Token = "0x4000152")]
			CameraView
		}

		[Token(Token = "0x200004D")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000154")]
			LateUpdate,
			[Token(Token = "0x4000155")]
			BeginCameraRendering
		}

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtMode mode;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UpdateMode updateMode;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform followTransform;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool followTransformRoll;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE75C", Offset = "0x8AE75C")]
		private bool <OverrideUpdate>k__BackingField;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform trans;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ILookCameraTransform> lookCameraTransforms;

		[Token(Token = "0x1700005F")]
		public bool OverrideUpdate
		{
			[Token(Token = "0x60001E6")]
			[Address(RVA = "0xD5E438", Offset = "0xD5E438", VA = "0xD5E438", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBC4", Offset = "0x8CCBC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001E7")]
			[Address(RVA = "0xD5E440", Offset = "0xD5E440", VA = "0xD5E440", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBD4", Offset = "0x8CCBD4")]
			set
			{
			}
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xD5E44C", Offset = "0xD5E44C", VA = "0xD5E44C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xD5E71C", Offset = "0xD5E71C", VA = "0xD5E71C")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xD5E7F0", Offset = "0xD5E7F0", VA = "0xD5E7F0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xD5EB58", Offset = "0xD5EB58", VA = "0xD5EB58")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xD5EBA0", Offset = "0xD5EBA0", VA = "0xD5EBA0")]
		private void OnBeginRender(ScriptableRenderContext context, Camera camera)
		{
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xD5E828", Offset = "0xD5E828", VA = "0xD5E828", Slot = "6")]
		public void UpdateLookCameraTransform(Camera camera)
		{
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xD5EBC0", Offset = "0xD5EBC0", VA = "0xD5EBC0")]
		public LookAtCameraTransform()
		{
		}
	}
	[Token(Token = "0x200004E")]
	public class LookAtCameraTransformAxis : MonoBehaviour, ILookCameraTransform
	{
		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtCameraTransform.LookAtMode mode;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LookAtCameraTransform.UpdateMode updateMode;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offsetPosition;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offsetRotation;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve offsetPositionScaleByAngle;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve offsetRotationScaleByAngle;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool axisPlaneXY;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool axisPlaneXZ;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool axisPlaneYZ;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE76C", Offset = "0x8AE76C")]
		private bool <OverrideUpdate>k__BackingField;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform trans;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<ILookCameraTransform> lookCameraTransforms;

		[Token(Token = "0x17000060")]
		public bool OverrideUpdate
		{
			[Token(Token = "0x60001EF")]
			[Address(RVA = "0xD5EBC8", Offset = "0xD5EBC8", VA = "0xD5EBC8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBE4", Offset = "0x8CCBE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001F0")]
			[Address(RVA = "0xD5EBD0", Offset = "0xD5EBD0", VA = "0xD5EBD0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBF4", Offset = "0x8CCBF4")]
			set
			{
			}
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xD5EBDC", Offset = "0xD5EBDC", VA = "0xD5EBDC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xD5EEAC", Offset = "0xD5EEAC", VA = "0xD5EEAC")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xD5EF80", Offset = "0xD5EF80", VA = "0xD5EF80")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xD5F4A4", Offset = "0xD5F4A4", VA = "0xD5F4A4")]
		private void OnBeginRender(ScriptableRenderContext context, Camera camera)
		{
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xD5EFC8", Offset = "0xD5EFC8", VA = "0xD5EFC8", Slot = "6")]
		public void UpdateLookCameraTransform(Camera camera)
		{
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xD5F4C4", Offset = "0xD5F4C4", VA = "0xD5F4C4")]
		public LookAtCameraTransformAxis()
		{
		}
	}
	[Token(Token = "0x200004F")]
	public class ScaleAtCameraTransform : MonoBehaviour, ILookCameraTransform
	{
		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LookAtCameraTransform.UpdateMode updateMode;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float scaleMultiplier;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasSetBaseScale;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 baseScale;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE79C", Offset = "0x8AE79C")]
		private bool <OverrideUpdate>k__BackingField;

		[Token(Token = "0x17000061")]
		public bool OverrideUpdate
		{
			[Token(Token = "0x60001F7")]
			[Address(RVA = "0xCF99AC", Offset = "0xCF99AC", VA = "0xCF99AC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC04", Offset = "0x8CCC04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001F8")]
			[Address(RVA = "0xCF99B4", Offset = "0xCF99B4", VA = "0xCF99B4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC14", Offset = "0x8CCC14")]
			set
			{
			}
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xCF99C0", Offset = "0xCF99C0", VA = "0xCF99C0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xCF9AE8", Offset = "0xCF9AE8", VA = "0xCF9AE8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xCF9BBC", Offset = "0xCF9BBC", VA = "0xCF9BBC")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xCF9CEC", Offset = "0xCF9CEC", VA = "0xCF9CEC")]
		private void OnBeginRender(ScriptableRenderContext context, Camera camera)
		{
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0xCF9C04", Offset = "0xCF9C04", VA = "0xCF9C04", Slot = "6")]
		public void UpdateLookCameraTransform(Camera camera)
		{
		}

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xCF9A9C", Offset = "0xCF9A9C", VA = "0xCF9A9C")]
		private void SetupBaseScale()
		{
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xCF9D0C", Offset = "0xCF9D0C", VA = "0xCF9D0C")]
		public ScaleAtCameraTransform()
		{
		}
	}
	[Token(Token = "0x2000050")]
	public class VRButtonDragInteractable : VRButtonInteractable
	{
		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE7AC", Offset = "0x8AE7AC")]
		public bool dragEnabled;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		public bool canCancelDrag;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public UnityEvent onButtonDragStart;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public UnityEvent onButtonDragEnd;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public UnityEvent onButtonDragCancel;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE7E4", Offset = "0x8AE7E4")]
		private IXRInteractor <Interactor>k__BackingField;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<VRButtonDragInteractable> activeDragInteractions;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool dragging;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		private bool selected;

		[Token(Token = "0x17000062")]
		public IXRInteractor Interactor
		{
			[Token(Token = "0x6000200")]
			[Address(RVA = "0x10B9AAC", Offset = "0x10B9AAC", VA = "0x10B9AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC24", Offset = "0x8CCC24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000201")]
			[Address(RVA = "0x10B9AB4", Offset = "0x10B9AB4", VA = "0x10B9AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC34", Offset = "0x8CCC34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public bool IsDragging
		{
			[Token(Token = "0x6000202")]
			[Address(RVA = "0x10B9AC4", Offset = "0x10B9AC4", VA = "0x10B9AC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000203")]
			[Address(RVA = "0x10B9ACC", Offset = "0x10B9ACC", VA = "0x10B9ACC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000064")]
		public static IReadOnlyList<VRButtonDragInteractable> ActiveDragInteractions
		{
			[Token(Token = "0x6000204")]
			[Address(RVA = "0x10B9BE0", Offset = "0x10B9BE0", VA = "0x10B9BE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0x10B9C44", Offset = "0x10B9C44", VA = "0x10B9C44", Slot = "50")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0x10B9CDC", Offset = "0x10B9CDC", VA = "0x10B9CDC", Slot = "68")]
		protected override void OnSelectExiting(SelectExitEventArgs args)
		{
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0x10B9E20", Offset = "0x10B9E20", VA = "0x10B9E20", Slot = "63")]
		protected override void OnHoverEntered(HoverEnterEventArgs args)
		{
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0x10BA0A8", Offset = "0x10BA0A8", VA = "0x10BA0A8", Slot = "65")]
		protected override void OnHoverExited(HoverExitEventArgs args)
		{
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0x10BA2BC", Offset = "0x10BA2BC", VA = "0x10BA2BC", Slot = "67")]
		protected override void OnSelectEntered(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0x10BA4CC", Offset = "0x10BA4CC", VA = "0x10BA4CC", Slot = "69")]
		protected override void OnSelectExited(SelectExitEventArgs args)
		{
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0x10BA6BC", Offset = "0x10BA6BC", VA = "0x10BA6BC", Slot = "89")]
		protected virtual void OnButtonDragStart()
		{
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0x10BA6D0", Offset = "0x10BA6D0", VA = "0x10BA6D0", Slot = "90")]
		protected virtual void OnButtonDragEnd()
		{
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0x10BA6E4", Offset = "0x10BA6E4", VA = "0x10BA6E4", Slot = "91")]
		protected virtual void OnButtonDragCancel()
		{
		}

		[Token(Token = "0x600020E")]
		[Address(RVA = "0x10BA6F8", Offset = "0x10BA6F8", VA = "0x10BA6F8")]
		public VRButtonDragInteractable()
		{
		}
	}
	[Token(Token = "0x2000051")]
	public class VRButtonInteractable : XRBaseInteractable
	{
		[Token(Token = "0x2000052")]
		private struct InteractorState
		{
			[Token(Token = "0x400017C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool hovered;

			[Token(Token = "0x400017D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool selected;

			[Token(Token = "0x17000067")]
			public bool IsValid
			{
				[Token(Token = "0x6000224")]
				[Address(RVA = "0xEA3378", Offset = "0xEA3378", VA = "0xEA3378")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000225")]
			[Address(RVA = "0xEA3388", Offset = "0xEA3388", VA = "0xEA3388")]
			public static InteractorState Default()
			{
				return default(InteractorState);
			}

			[Token(Token = "0x6000226")]
			[Address(RVA = "0xEA333C", Offset = "0xEA333C", VA = "0xEA333C")]
			public InteractorState Hover(bool hover)
			{
				return default(InteractorState);
			}

			[Token(Token = "0x6000227")]
			[Address(RVA = "0xEA3360", Offset = "0xEA3360", VA = "0xEA3360")]
			public InteractorState Select(bool select)
			{
				return default(InteractorState);
			}
		}

		[Serializable]
		[Token(Token = "0x2000053")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A80A8", Offset = "0x8A80A8")]
		private sealed class <>c
		{
			[Token(Token = "0x400017E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400017F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<InteractorState, InteractorState> <>9__25_0;

			[Token(Token = "0x4000180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<InteractorState, InteractorState> <>9__26_0;

			[Token(Token = "0x4000181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<InteractorState, InteractorState> <>9__27_0;

			[Token(Token = "0x4000182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<InteractorState, InteractorState> <>9__28_0;

			[Token(Token = "0x6000229")]
			[Address(RVA = "0xEA3328", Offset = "0xEA3328", VA = "0xEA3328")]
			public <>c()
			{
			}

			[Token(Token = "0x600022A")]
			[Address(RVA = "0xEA3330", Offset = "0xEA3330", VA = "0xEA3330")]
			internal InteractorState <OnHoverEntered>b__25_0(InteractorState s)
			{
				return default(InteractorState);
			}

			[Token(Token = "0x600022B")]
			[Address(RVA = "0xEA334C", Offset = "0xEA334C", VA = "0xEA334C")]
			internal InteractorState <OnHoverExited>b__26_0(InteractorState s)
			{
				return default(InteractorState);
			}

			[Token(Token = "0x600022C")]
			[Address(RVA = "0xEA3354", Offset = "0xEA3354", VA = "0xEA3354")]
			internal InteractorState <OnSelectEntered>b__27_0(InteractorState s)
			{
				return default(InteractorState);
			}

			[Token(Token = "0x600022D")]
			[Address(RVA = "0xEA3370", Offset = "0xEA3370", VA = "0xEA3370")]
			internal InteractorState <OnSelectExited>b__28_0(InteractorState s)
			{
				return default(InteractorState);
			}
		}

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE7F4", Offset = "0x8AE7F4")]
		public UnityEvent onButtonHoverStart;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public UnityEvent onButtonHoverEnd;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public UnityEvent onButtonSelectStart;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public UnityEvent onButtonSelectEnd;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public UnityEvent onButtonActivateStart;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public UnityEvent onButtonActivateEnd;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8AE82C", Offset = "0x8AE82C")]
		public UnityEvent onButtonSelectClick;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public UnityEvent onButtonActivateClick;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE864", Offset = "0x8AE864")]
		private Rigidbody <Body>k__BackingField;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AE874", Offset = "0x8AE874")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected bool canClick;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Dictionary<IXRInteractor, InteractorState> validInteractors;

		[Token(Token = "0x17000065")]
		public Rigidbody Body
		{
			[Token(Token = "0x6000210")]
			[Address(RVA = "0x10BA7A8", Offset = "0x10BA7A8", VA = "0x10BA7A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC44", Offset = "0x8CCC44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000211")]
			[Address(RVA = "0x10BA7B0", Offset = "0x10BA7B0", VA = "0x10BA7B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC54", Offset = "0x8CCC54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public Collider Collider
		{
			[Token(Token = "0x6000212")]
			[Address(RVA = "0x10BA7C0", Offset = "0x10BA7C0", VA = "0x10BA7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC64", Offset = "0x8CCC64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000213")]
			[Address(RVA = "0x10BA7C8", Offset = "0x10BA7C8", VA = "0x10BA7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC74", Offset = "0x8CCC74")]
			private set
			{
			}
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x10BA7D8", Offset = "0x10BA7D8", VA = "0x10BA7D8", Slot = "47")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x10B9DF8", Offset = "0x10B9DF8", VA = "0x10B9DF8")]
		protected bool IsInteractorValid(IXRInteractor interactor)
		{
			return default(bool);
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0x10BA870", Offset = "0x10BA870", VA = "0x10BA870")]
		private bool IsInteractorValid(IXRInteractor interactor, out InteractorState state)
		{
			return default(bool);
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x10BA904", Offset = "0x10BA904", VA = "0x10BA904")]
		private bool UpdateInteractor(IXRInteractor interactor, Func<InteractorState, InteractorState> modifier)
		{
			return default(bool);
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0x10BA92C", Offset = "0x10BA92C", VA = "0x10BA92C")]
		private bool UpdateInteractor(IXRInteractor interactor, Func<InteractorState, InteractorState> modifier, out InteractorState state)
		{
			return default(bool);
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x10B9D70", Offset = "0x10B9D70", VA = "0x10B9D70", Slot = "68")]
		protected override void OnSelectExiting(SelectExitEventArgs args)
		{
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x10B9EA8", Offset = "0x10B9EA8", VA = "0x10B9EA8", Slot = "63")]
		protected override void OnHoverEntered(HoverEnterEventArgs args)
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x10BA148", Offset = "0x10BA148", VA = "0x10BA148", Slot = "65")]
		protected override void OnHoverExited(HoverExitEventArgs args)
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x10BA338", Offset = "0x10BA338", VA = "0x10BA338", Slot = "67")]
		protected override void OnSelectEntered(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x10BA544", Offset = "0x10BA544", VA = "0x10BA544", Slot = "69")]
		protected override void OnSelectExited(SelectExitEventArgs args)
		{
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0x10BAB20", Offset = "0x10BAB20", VA = "0x10BAB20", Slot = "70")]
		protected override void OnActivated(ActivateEventArgs args)
		{
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x10BAB98", Offset = "0x10BAB98", VA = "0x10BAB98", Slot = "71")]
		protected override void OnDeactivated(DeactivateEventArgs args)
		{
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0x10BAC2C", Offset = "0x10BAC2C", VA = "0x10BAC2C", Slot = "87")]
		protected virtual void OnButtonSelectClick()
		{
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x10BAC40", Offset = "0x10BAC40", VA = "0x10BAC40", Slot = "88")]
		protected virtual void OnButtonActivateClick()
		{
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0x10BAC54", Offset = "0x10BAC54", VA = "0x10BAC54")]
		public static void ForceInteractorDeselect(IXRInteractor interactor)
		{
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0x10BA70C", Offset = "0x10BA70C", VA = "0x10BA70C")]
		public VRButtonInteractable()
		{
		}
	}
	[Token(Token = "0x2000054")]
	public interface IVRButtonInteractableHighlightBaseColor
	{
		[Token(Token = "0x17000068")]
		Color BaseColor
		{
			[Token(Token = "0x600022E")]
			get;
		}

		[Token(Token = "0x600022F")]
		void Setup(VRButtonInteractableHighlight highlight);
	}
	[Token(Token = "0x2000055")]
	public enum VRButtonInteractableHighlightBlendMode
	{
		[Token(Token = "0x4000184")]
		Multiply,
		[Token(Token = "0x4000185")]
		OverrideHue
	}
	[Token(Token = "0x2000056")]
	public abstract class VRButtonInteractableHighlight : MonoBehaviour
	{
		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE884", Offset = "0x8AE884")]
		private Component baseColorComponent;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hovered;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool selected;

		[Token(Token = "0x6000230")]
		protected abstract void HighlightDefault();

		[Token(Token = "0x6000231")]
		protected abstract void HighlightHover();

		[Token(Token = "0x6000232")]
		protected abstract void HighlightSelect();

		[Token(Token = "0x6000233")]
		[Address(RVA = "0x10BACFC", Offset = "0x10BACFC", VA = "0x10BACFC")]
		public void UpdateHighlight()
		{
		}

		[Token(Token = "0x6000234")]
		[Address(RVA = "0x10BAD2C", Offset = "0x10BAD2C", VA = "0x10BAD2C", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0x10BAFF0", Offset = "0x10BAFF0", VA = "0x10BAFF0", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000236")]
		[Address(RVA = "0x10BAFF4", Offset = "0x10BAFF4", VA = "0x10BAFF4")]
		protected Color GetColor(Color color, VRButtonInteractableHighlightBlendMode blendMode)
		{
			return default(Color);
		}

		[Token(Token = "0x6000237")]
		[Address(RVA = "0x10BB1E8", Offset = "0x10BB1E8", VA = "0x10BB1E8")]
		private void OnHoverStart()
		{
		}

		[Token(Token = "0x6000238")]
		[Address(RVA = "0x10BB208", Offset = "0x10BB208", VA = "0x10BB208")]
		private void OnHoverEnd()
		{
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0x10BB224", Offset = "0x10BB224", VA = "0x10BB224")]
		private void OnSelectStart()
		{
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x10BB238", Offset = "0x10BB238", VA = "0x10BB238")]
		private void OnSelectEnd()
		{
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0x10BB258", Offset = "0x10BB258", VA = "0x10BB258")]
		protected VRButtonInteractableHighlight()
		{
		}
	}
	[Token(Token = "0x2000057")]
	public class VRButtonInteractableHighlightGraphic : VRButtonInteractableHighlight
	{
		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE8D0", Offset = "0x8AE8D0")]
		private Graphic[] graphics;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE91C", Offset = "0x8AE91C")]
		[SerializeField]
		private VRButtonInteractableHighlightBlendMode colorDefaultBlendMode;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private VRButtonInteractableHighlightBlendMode colorHoverBlendMode;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color colorHover;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VRButtonInteractableHighlightBlendMode colorSelectBlendMode;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Color colorSelect;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Graphic, Color> colorDefault;

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x10BB260", Offset = "0x10BB260", VA = "0x10BB260", Slot = "4")]
		protected override void HighlightDefault()
		{
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0x10BB3C8", Offset = "0x10BB3C8", VA = "0x10BB3C8", Slot = "5")]
		protected override void HighlightHover()
		{
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x10BB558", Offset = "0x10BB558", VA = "0x10BB558", Slot = "6")]
		protected override void HighlightSelect()
		{
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0x10BB3D8", Offset = "0x10BB3D8", VA = "0x10BB3D8")]
		private void SetColor(Color color, VRButtonInteractableHighlightBlendMode blendMode)
		{
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0x10BB264", Offset = "0x10BB264", VA = "0x10BB264")]
		private void SetDefaultColor()
		{
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0x10BB568", Offset = "0x10BB568", VA = "0x10BB568")]
		public VRButtonInteractableHighlightGraphic()
		{
		}
	}
	[Token(Token = "0x2000058")]
	public class VRButtonInteractableHighlightMesh : VRButtonInteractableHighlight
	{
		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE9A8", Offset = "0x8AE9A8")]
		private MeshRenderer[] meshRenderers;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string colorPropertyName;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEA04", Offset = "0x8AEA04")]
		[SerializeField]
		private VRButtonInteractableHighlightBlendMode colorDefaultBlendMode;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color colorDefault;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private VRButtonInteractableHighlightBlendMode colorHoverBlendMode;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color colorHover;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRButtonInteractableHighlightBlendMode colorSelectBlendMode;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Color colorSelect;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x10BB60C", Offset = "0x10BB60C", VA = "0x10BB60C", Slot = "4")]
		protected override void HighlightDefault()
		{
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0x10BB6E0", Offset = "0x10BB6E0", VA = "0x10BB6E0", Slot = "5")]
		protected override void HighlightHover()
		{
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x10BB6F0", Offset = "0x10BB6F0", VA = "0x10BB6F0", Slot = "6")]
		protected override void HighlightSelect()
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x10BB61C", Offset = "0x10BB61C", VA = "0x10BB61C")]
		private void SetColor(Color color, VRButtonInteractableHighlightBlendMode blendMode)
		{
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0x10BB700", Offset = "0x10BB700", VA = "0x10BB700")]
		public static void SetColor(Renderer renderer, ref MaterialPropertyBlock propertyBlock, string propertyName, Color color)
		{
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x10BB850", Offset = "0x10BB850", VA = "0x10BB850")]
		public static void ClearPropertyBlock(Renderer renderer, ref MaterialPropertyBlock propertyBlock)
		{
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0x10BB940", Offset = "0x10BB940", VA = "0x10BB940")]
		public VRButtonInteractableHighlightMesh()
		{
		}
	}
	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A80B8", Offset = "0x8A80B8")]
	public class VRDeviceSimulatorActivator : MonoBehaviour
	{
		[Token(Token = "0x4000199")]
		public const string EDITOR_PREF_VR_DEVICE_SIM_ENABLED = "vr_device_simulator_enabled";

		[Token(Token = "0x17000069")]
		public static bool IsDeviceSimulatorActive
		{
			[Token(Token = "0x6000249")]
			[Address(RVA = "0x10BB994", Offset = "0x10BB994", VA = "0x10BB994")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x10BB99C", Offset = "0x10BB99C", VA = "0x10BB99C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600024B")]
		[Address(RVA = "0x10BBA60", Offset = "0x10BBA60", VA = "0x10BBA60")]
		public VRDeviceSimulatorActivator()
		{
		}
	}
	[Token(Token = "0x200005A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8118", Offset = "0x8A8118")]
	public class VRDisableOnRayInteraction : MonoBehaviour
	{
		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEAA0", Offset = "0x8AEAA0")]
		[SerializeField]
		private float updateInterval;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEAEC", Offset = "0x8AEAEC")]
		[SerializeField]
		private GameObject[] enableObjects;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] disableObjects;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEB48", Offset = "0x8AEB48")]
		[SerializeField]
		private Behaviour[] enableComponents;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Behaviour[] disableComponents;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEBA4", Offset = "0x8AEBA4")]
		[SerializeField]
		private Renderer[] enableRenderers;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Renderer[] disableRenderers;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private XRRayInteractor interactor;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastUpdateTime;

		[Token(Token = "0x600024C")]
		[Address(RVA = "0x10BC818", Offset = "0x10BC818", VA = "0x10BC818")]
		protected void Start()
		{
		}

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x10BC8F8", Offset = "0x10BC8F8", VA = "0x10BC8F8")]
		protected void Update()
		{
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x10BC880", Offset = "0x10BC880", VA = "0x10BC880")]
		private void SetHasInteraction(bool hasInteraction)
		{
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x10BC9A0", Offset = "0x10BC9A0", VA = "0x10BC9A0")]
		private static void SetObjectsActive(GameObject[] objects, bool active)
		{
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x10BCA1C", Offset = "0x10BCA1C", VA = "0x10BCA1C")]
		private static void SetComponentsEnabled(Behaviour[] components, bool enabled)
		{
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x10BCA98", Offset = "0x10BCA98", VA = "0x10BCA98")]
		private static void SetRenderersEnabled(Renderer[] renderers, bool enabled)
		{
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x10BCB14", Offset = "0x10BCB14", VA = "0x10BCB14")]
		public VRDisableOnRayInteraction()
		{
		}
	}
	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8178", Offset = "0x8A8178")]
	public class VRHapticOnRayInteraction : MonoBehaviour
	{
		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEC00", Offset = "0x8AEC00")]
		[SerializeField]
		private HapticPreset hapticPreset;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HapticSelector selector;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private XRRayInteractor interactor;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject lastGameObject;

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x10BDA6C", Offset = "0x10BDA6C", VA = "0x10BDA6C")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x10BDAC8", Offset = "0x10BDAC8", VA = "0x10BDAC8")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x10BE194", Offset = "0x10BE194", VA = "0x10BE194")]
		public VRHapticOnRayInteraction()
		{
		}
	}
	[Token(Token = "0x200005C")]
	public class VRPieChartMenu : MonoBehaviour
	{
		[Token(Token = "0x200005D")]
		public enum RingAxis
		{
			[Token(Token = "0x40001BF")]
			X,
			[Token(Token = "0x40001C0")]
			Y,
			[Token(Token = "0x40001C1")]
			Z
		}

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEC5C", Offset = "0x8AEC5C")]
		private VRPieChartMenuItem itemPrefab;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRPieChartMenuItem[] itemObjects;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RingAxis axis;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool axisFlip;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 itemOffset;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float offsetAngle;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool centerOnOffset;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AED08", Offset = "0x8AED08")]
		[SerializeField]
		private UiShadow selectedItemShadow;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image selectedItemIcon;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text selectedItemNameText;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text selectedItemTimerText;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Image selectedBackgroundImage;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Sprite selectedBackgroundSprite;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float selectedBackgroundTransformOffset;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float selectedBackgroundTransformMultiplier;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform[] selectedBackgroundTransforms;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEDD4", Offset = "0x8AEDD4")]
		private SfxTrigger defaultSelectSfx;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SfxTrigger defaultHoverSfx;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEE30", Offset = "0x8AEE30")]
		private HapticPreset onSelectHapticPreset;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<VRPieChartMenuItem> items;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private VRPieChartMenuItem selectedItem;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VRPieChartMenuItem hoveredItem;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Sprite selectedBackgroundDefaultSprite;

		[Token(Token = "0x1700006A")]
		public IReadOnlyList<VRPieChartMenuItem> Items
		{
			[Token(Token = "0x6000256")]
			[Address(RVA = "0x10BF11C", Offset = "0x10BF11C", VA = "0x10BF11C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		public int ItemPrefabCount
		{
			[Token(Token = "0x6000257")]
			[Address(RVA = "0x10BF124", Offset = "0x10BF124", VA = "0x10BF124")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x10BF170", Offset = "0x10BF170", VA = "0x10BF170", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000259")]
		[Address(RVA = "0x10BF238", Offset = "0x10BF238", VA = "0x10BF238", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0x10BF27C", Offset = "0x10BF27C", VA = "0x10BF27C")]
		public void Show()
		{
		}

		[Token(Token = "0x600025B")]
		[Address(RVA = "0x10BF44C", Offset = "0x10BF44C", VA = "0x10BF44C")]
		public VRPieChartMenuItem ShowItem(LocalizationKey labelText, SfxTrigger selectSfx, SfxTrigger hoverSfx, bool isHidden = false, bool isBlocked = false)
		{
			return null;
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x10BF4D4", Offset = "0x10BF4D4", VA = "0x10BF4D4")]
		public VRPieChartMenuItem ShowItem(Sprite icon, SfxTrigger selectSfx, SfxTrigger hoverSfx, bool isHidden = false, bool isBlocked = false)
		{
			return null;
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x10BF494", Offset = "0x10BF494", VA = "0x10BF494")]
		public VRPieChartMenuItem ShowItem(LocalizationKey labelText, Sprite icon, SfxTrigger selectSfx, SfxTrigger hoverSfx, bool isHidden = false, bool isBlocked = false)
		{
			return null;
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x10BF520", Offset = "0x10BF520", VA = "0x10BF520")]
		public VRPieChartMenuItem ShowItem(LocalizationKey labelText, Sprite icon, CooldownTimer cooldownTimer, SfxTrigger selectSfx, SfxTrigger hoverSfx, bool isHidden = false, bool isBlocked = false)
		{
			return null;
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0x10BFED0", Offset = "0x10BFED0", VA = "0x10BFED0")]
		public void SelectItem(int selectItemIndex, int hoverItemIndex)
		{
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0x10C0A7C", Offset = "0x10C0A7C", VA = "0x10C0A7C")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x10C0B94", Offset = "0x10C0B94", VA = "0x10C0B94")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x10C0DB0", Offset = "0x10C0DB0", VA = "0x10C0DB0")]
		public bool TryGetItemIndexAtAngle(float angle, out int itemIndex, int forceItemCount = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x10C1254", Offset = "0x10C1254", VA = "0x10C1254")]
		public bool TryGetItemAtAngle(float angle, out VRPieChartMenuItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x10C1210", Offset = "0x10C1210", VA = "0x10C1210")]
		private static float GetNormalizedAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x10C10BC", Offset = "0x10C10BC", VA = "0x10C10BC")]
		private bool TryGetItemDefaultAngle(out float defaultItemAngle, int forceItemCount = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x10BFBB8", Offset = "0x10BFBB8", VA = "0x10BFBB8")]
		private void UpdateItemPositions()
		{
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x10C13C0", Offset = "0x10C13C0", VA = "0x10C13C0")]
		private Quaternion GetItemLocalRotation(int itemIndex, float itemAngle, float offsetAngle)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x10C15F4", Offset = "0x10C15F4", VA = "0x10C15F4")]
		private void OnItemUpdateVisuals(VRPieChartMenuItem item)
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x10C04F4", Offset = "0x10C04F4", VA = "0x10C04F4")]
		private void UpdateSelectedItem(VRPieChartMenuItem selectedItem, VRPieChartMenuItem hoveredItem)
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x10C1780", Offset = "0x10C1780", VA = "0x10C1780")]
		public VRPieChartMenu()
		{
		}
	}
	[Token(Token = "0x200005E")]
	public class VRPieChartMenuItem : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200005F")]
		public struct SelectGraphicGroup
		{
			[Token(Token = "0x40001ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic[] graphics;

			[Token(Token = "0x40001EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color colorDefault;

			[Token(Token = "0x40001EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color colorSelected;

			[Token(Token = "0x40001F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color colorHovered;

			[Token(Token = "0x6000291")]
			[Address(RVA = "0xEA344C", Offset = "0xEA344C", VA = "0xEA344C")]
			public void SetColor(Color color)
			{
			}
		}

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEE7C", Offset = "0x8AEE7C")]
		[SerializeField]
		private Transform[] facingTransforms;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform rotateTransform;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform[] centerRotateTransforms;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] graphics;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image[] pieImages;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image[] icons;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text label;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image blocked;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEF38", Offset = "0x8AEF38")]
		private SelectGraphicGroup[] selectGraphics;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject iconObject;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float selectAngleOverride;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEFA4", Offset = "0x8AEFA4")]
		[SerializeField]
		private Transform highlightTransform;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float highlightScale;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float highlightSpeed;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationCurve highlightCurve;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF020", Offset = "0x8AF020")]
		private TMP_Text[] timers;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform timerScaleRoot;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Image[] timerImageFill;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Graphic timerColorGraphic;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Color timerActiveTextColor;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color timerInactiveTextColor;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string timerSuffix;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF0CC", Offset = "0x8AF0CC")]
		private bool <IsSlotUsed>k__BackingField;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF0DC", Offset = "0x8AF0DC")]
		private bool <IsHidden>k__BackingField;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF0EC", Offset = "0x8AF0EC")]
		private float <Angle>k__BackingField;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF0FC", Offset = "0x8AF0FC")]
		private LocalizationKey <Label>k__BackingField;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF10C", Offset = "0x8AF10C")]
		private Sprite <Icon>k__BackingField;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF11C", Offset = "0x8AF11C")]
		private string <TimerText>k__BackingField;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF12C", Offset = "0x8AF12C")]
		private bool <IsSelected>k__BackingField;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF13C", Offset = "0x8AF13C")]
		private bool <IsHovered>k__BackingField;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF14C", Offset = "0x8AF14C")]
		private SfxTrigger <SelectSfx>k__BackingField;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF15C", Offset = "0x8AF15C")]
		private SfxTrigger <HoverSfx>k__BackingField;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Action<VRPieChartMenuItem> onClear;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Action<VRPieChartMenuItem> onUpdateVisuals;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private CooldownTimer cooldownTimer;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float cooldownTimerLastLeft;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int cooldownTimerLastCount;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Sprite defaultSprite;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 timerScaleDefault;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Color timerColor;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool isHighlighted;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float highlightStartTime;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private StringBuilder timerTextBuilder;

		[Token(Token = "0x1700006C")]
		public float SelectAngleOverride
		{
			[Token(Token = "0x600026B")]
			[Address(RVA = "0x10C181C", Offset = "0x10C181C", VA = "0x10C181C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700006D")]
		public bool IsSlotUsed
		{
			[Token(Token = "0x600026D")]
			[Address(RVA = "0x10C1824", Offset = "0x10C1824", VA = "0x10C1824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC84", Offset = "0x8CCC84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600026E")]
			[Address(RVA = "0x10C182C", Offset = "0x10C182C", VA = "0x10C182C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC94", Offset = "0x8CCC94")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public bool IsHidden
		{
			[Token(Token = "0x600026F")]
			[Address(RVA = "0x10C1838", Offset = "0x10C1838", VA = "0x10C1838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCA4", Offset = "0x8CCCA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000270")]
			[Address(RVA = "0x10C1840", Offset = "0x10C1840", VA = "0x10C1840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCB4", Offset = "0x8CCCB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public float Angle
		{
			[Token(Token = "0x6000271")]
			[Address(RVA = "0x10C184C", Offset = "0x10C184C", VA = "0x10C184C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCC4", Offset = "0x8CCCC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000272")]
			[Address(RVA = "0x10C1854", Offset = "0x10C1854", VA = "0x10C1854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCD4", Offset = "0x8CCCD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public LocalizationKey Label
		{
			[Token(Token = "0x6000273")]
			[Address(RVA = "0x10C185C", Offset = "0x10C185C", VA = "0x10C185C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCE4", Offset = "0x8CCCE4")]
			get
			{
				return default(LocalizationKey);
			}
			[Token(Token = "0x6000274")]
			[Address(RVA = "0x10C1868", Offset = "0x10C1868", VA = "0x10C1868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCF4", Offset = "0x8CCCF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public Sprite Icon
		{
			[Token(Token = "0x6000275")]
			[Address(RVA = "0x10C1878", Offset = "0x10C1878", VA = "0x10C1878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD04", Offset = "0x8CCD04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000276")]
			[Address(RVA = "0x10C1880", Offset = "0x10C1880", VA = "0x10C1880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD14", Offset = "0x8CCD14")]
			private set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public string TimerText
		{
			[Token(Token = "0x6000277")]
			[Address(RVA = "0x10C1888", Offset = "0x10C1888", VA = "0x10C1888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD24", Offset = "0x8CCD24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000278")]
			[Address(RVA = "0x10C1890", Offset = "0x10C1890", VA = "0x10C1890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD34", Offset = "0x8CCD34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public bool IsSelected
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0x10C1898", Offset = "0x10C1898", VA = "0x10C1898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD44", Offset = "0x8CCD44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600027A")]
			[Address(RVA = "0x10C18A0", Offset = "0x10C18A0", VA = "0x10C18A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD54", Offset = "0x8CCD54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public bool IsHovered
		{
			[Token(Token = "0x600027B")]
			[Address(RVA = "0x10C18AC", Offset = "0x10C18AC", VA = "0x10C18AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD64", Offset = "0x8CCD64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600027C")]
			[Address(RVA = "0x10C18B4", Offset = "0x10C18B4", VA = "0x10C18B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD74", Offset = "0x8CCD74")]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public SfxTrigger SelectSfx
		{
			[Token(Token = "0x600027D")]
			[Address(RVA = "0x10C18C0", Offset = "0x10C18C0", VA = "0x10C18C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD84", Offset = "0x8CCD84")]
			get
			{
				return null;
			}
			[Token(Token = "0x600027E")]
			[Address(RVA = "0x10C18C8", Offset = "0x10C18C8", VA = "0x10C18C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD94", Offset = "0x8CCD94")]
			private set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public SfxTrigger HoverSfx
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0x10C18D8", Offset = "0x10C18D8", VA = "0x10C18D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDA4", Offset = "0x8CCDA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000280")]
			[Address(RVA = "0x10C18E0", Offset = "0x10C18E0", VA = "0x10C18E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDB4", Offset = "0x8CCDB4")]
			private set
			{
			}
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x10C1200", Offset = "0x10C1200", VA = "0x10C1200")]
		public float GetSelectAngle(float defaultAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x10C18F0", Offset = "0x10C18F0", VA = "0x10C18F0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x10C1AAC", Offset = "0x10C1AAC", VA = "0x10C1AAC")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x10C1AB0", Offset = "0x10C1AB0", VA = "0x10C1AB0")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x10BF970", Offset = "0x10BF970", VA = "0x10BF970")]
		public void Setup(LocalizationKey labelText, Sprite icon, SfxTrigger selectSfx, SfxTrigger hoverSfx)
		{
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0x10C0CC0", Offset = "0x10C0CC0", VA = "0x10C0CC0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x10C1458", Offset = "0x10C1458", VA = "0x10C1458")]
		public void SetLocalRotation(Quaternion rotation, float pieAngle, float pieAngleNormalized)
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x10C1324", Offset = "0x10C1324", VA = "0x10C1324")]
		public void SetFacingRotation(Quaternion facingRotation)
		{
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x10BFB1C", Offset = "0x10BFB1C", VA = "0x10BFB1C")]
		public void SetTimer(CooldownTimer cooldownTimer)
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0x10C16BC", Offset = "0x10C16BC", VA = "0x10C16BC")]
		public void SetHighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0x10C0288", Offset = "0x10C0288", VA = "0x10C0288")]
		public void SetSelected(bool selected, bool hovered)
		{
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0x10BF3B0", Offset = "0x10BF3B0", VA = "0x10BF3B0")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0x10BFB7C", Offset = "0x10BFB7C", VA = "0x10BFB7C")]
		public void SetBlocked(bool isBlocked)
		{
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0x10C1C34", Offset = "0x10C1C34", VA = "0x10C1C34")]
		private void UpdateVisuals()
		{
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0x10C2140", Offset = "0x10C2140", VA = "0x10C2140")]
		private string CreateTimerText(CooldownTimerFormatting formatting, float timerLeft, int timerCount, int timerCountMax, float progressLeft, float progressMax, float progressMaxBase)
		{
			return null;
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0x10C19CC", Offset = "0x10C19CC", VA = "0x10C19CC")]
		private void SetTimerColor(Color color)
		{
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x10C24BC", Offset = "0x10C24BC", VA = "0x10C24BC")]
		public VRPieChartMenuItem()
		{
		}
	}
	[Token(Token = "0x2000060")]
	public interface IVRLocomotion
	{
		[Token(Token = "0x6000292")]
		void ResetLocomotion();

		[Token(Token = "0x6000293")]
		void ResetScale(float scale);

		[Token(Token = "0x6000294")]
		void ResetTransform(float scale);
	}
	[Token(Token = "0x2000061")]
	public static class VRLocomotion
	{
		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF16C", Offset = "0x8AF16C")]
		private static bool <LocomotionEnabled>k__BackingField;

		[Token(Token = "0x17000077")]
		public static bool LocomotionEnabled
		{
			[Token(Token = "0x6000295")]
			[Address(RVA = "0x10BE1A4", Offset = "0x10BE1A4", VA = "0x10BE1A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDC4", Offset = "0x8CCDC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000296")]
			[Address(RVA = "0x10BE208", Offset = "0x10BE208", VA = "0x10BE208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDD4", Offset = "0x8CCDD4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000062")]
	public delegate void VRMoveCallback(Vector3 positionFrom, Vector3 positionTo, Quaternion rotationFrom, Quaternion rotationTo, Vector3 scaleFrom, Vector3 scaleTo);
	[Token(Token = "0x2000063")]
	public class VRPullLocomotion : MonoBehaviour, IVRLocomotion
	{
		[Token(Token = "0x2000064")]
		private class ActiveController
		{
			[Token(Token = "0x4000207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform controller;

			[Token(Token = "0x4000208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 currentPosition;

			[Token(Token = "0x4000209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 previousPosition;

			[Token(Token = "0x400020A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool scaling;

			[Token(Token = "0x60002BD")]
			[Address(RVA = "0xEA8424", Offset = "0xEA8424", VA = "0xEA8424")]
			public ActiveController(Transform controller, Vector3 position, bool scaling)
			{
			}
		}

		[Token(Token = "0x2000065")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A81D8", Offset = "0x8A81D8")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x400020B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform controller;

			[Token(Token = "0x60002BE")]
			[Address(RVA = "0xEA8398", Offset = "0xEA8398", VA = "0xEA8398")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x60002BF")]
			[Address(RVA = "0xEA83A0", Offset = "0xEA83A0", VA = "0xEA83A0")]
			internal bool <SetControllerActive>b__0(ActiveController p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float translateDistanceMultiplier;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float translateDistanceMultiplierRotation;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF17C", Offset = "0x8AF17C")]
		private float scalingLowerBoundFactor;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float scalingUpperBoundFactor;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF1D8", Offset = "0x8AF1D8")]
		private bool enableTranslation;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool enableMultiTranslation;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool enableRotation;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[SerializeField]
		private bool enableScale;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF254", Offset = "0x8AF254")]
		private static bool <EnableTranslation>k__BackingField;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF264", Offset = "0x8AF264")]
		private static bool <EnableMultiTranslation>k__BackingField;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF274", Offset = "0x8AF274")]
		private static bool <EnableRotation>k__BackingField;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF284", Offset = "0x8AF284")]
		private static bool <EnableScale>k__BackingField;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF294", Offset = "0x8AF294")]
		private bool <IsTranslating>k__BackingField;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF2A4", Offset = "0x8AF2A4")]
		private bool <IsRotating>k__BackingField;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF2B4", Offset = "0x8AF2B4")]
		private bool <IsScaling>k__BackingField;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF2C4", Offset = "0x8AF2C4")]
		private float <RotationAngle>k__BackingField;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ActiveController> activeControllers;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform moveTransform;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 moveTransformDefaultScale;

		[Token(Token = "0x17000078")]
		public static bool EnableTranslation
		{
			[Token(Token = "0x600029C")]
			[Address(RVA = "0x1201E60", Offset = "0x1201E60", VA = "0x1201E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDE4", Offset = "0x8CCDE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600029D")]
			[Address(RVA = "0x1201EC4", Offset = "0x1201EC4", VA = "0x1201EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDF4", Offset = "0x8CCDF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public static bool EnableMultiTranslation
		{
			[Token(Token = "0x600029E")]
			[Address(RVA = "0x1201F30", Offset = "0x1201F30", VA = "0x1201F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE04", Offset = "0x8CCE04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600029F")]
			[Address(RVA = "0x1201F94", Offset = "0x1201F94", VA = "0x1201F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE14", Offset = "0x8CCE14")]
			set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public static bool EnableRotation
		{
			[Token(Token = "0x60002A0")]
			[Address(RVA = "0x1202000", Offset = "0x1202000", VA = "0x1202000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE24", Offset = "0x8CCE24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002A1")]
			[Address(RVA = "0x1202064", Offset = "0x1202064", VA = "0x1202064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE34", Offset = "0x8CCE34")]
			set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public static bool EnableScale
		{
			[Token(Token = "0x60002A2")]
			[Address(RVA = "0x12020D0", Offset = "0x12020D0", VA = "0x12020D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE44", Offset = "0x8CCE44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002A3")]
			[Address(RVA = "0x1202134", Offset = "0x1202134", VA = "0x1202134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE54", Offset = "0x8CCE54")]
			set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public bool IsTranslating
		{
			[Token(Token = "0x60002A4")]
			[Address(RVA = "0x12021A0", Offset = "0x12021A0", VA = "0x12021A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE64", Offset = "0x8CCE64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002A5")]
			[Address(RVA = "0x12021A8", Offset = "0x12021A8", VA = "0x12021A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE74", Offset = "0x8CCE74")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public bool IsRotating
		{
			[Token(Token = "0x60002A6")]
			[Address(RVA = "0x12021B4", Offset = "0x12021B4", VA = "0x12021B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE84", Offset = "0x8CCE84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002A7")]
			[Address(RVA = "0x12021BC", Offset = "0x12021BC", VA = "0x12021BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE94", Offset = "0x8CCE94")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public bool IsScaling
		{
			[Token(Token = "0x60002A8")]
			[Address(RVA = "0x12021C8", Offset = "0x12021C8", VA = "0x12021C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCEA4", Offset = "0x8CCEA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002A9")]
			[Address(RVA = "0x12021D0", Offset = "0x12021D0", VA = "0x12021D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCEB4", Offset = "0x8CCEB4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public float RotationAngle
		{
			[Token(Token = "0x60002AA")]
			[Address(RVA = "0x12021DC", Offset = "0x12021DC", VA = "0x12021DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCEC4", Offset = "0x8CCEC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002AB")]
			[Address(RVA = "0x12021E4", Offset = "0x12021E4", VA = "0x12021E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCED4", Offset = "0x8CCED4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000080")]
		private Vector3 MoveTransformLowerBoundScale
		{
			[Token(Token = "0x60002B0")]
			[Address(RVA = "0x12025CC", Offset = "0x12025CC", VA = "0x12025CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000081")]
		private Vector3 MoveTransformUpperBoundScale
		{
			[Token(Token = "0x60002B1")]
			[Address(RVA = "0x12025E8", Offset = "0x12025E8", VA = "0x12025E8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x14000002")]
		public static event VRMoveCallback OnLocomotionMoved
		{
			[Token(Token = "0x60002AC")]
			[Address(RVA = "0x12021EC", Offset = "0x12021EC", VA = "0x12021EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCEE4", Offset = "0x8CCEE4")]
			add
			{
			}
			[Token(Token = "0x60002AD")]
			[Address(RVA = "0x12022E4", Offset = "0x12022E4", VA = "0x12022E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCEF4", Offset = "0x8CCEF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000003")]
		public static event VRMoveCallback OnLocomotionTeleported
		{
			[Token(Token = "0x60002AE")]
			[Address(RVA = "0x12023DC", Offset = "0x12023DC", VA = "0x12023DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF04", Offset = "0x8CCF04")]
			add
			{
			}
			[Token(Token = "0x60002AF")]
			[Address(RVA = "0x12024D4", Offset = "0x12024D4", VA = "0x12024D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF14", Offset = "0x8CCF14")]
			remove
			{
			}
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x1202604", Offset = "0x1202604", VA = "0x1202604")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x1202654", Offset = "0x1202654", VA = "0x1202654")]
		protected void Update()
		{
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x1203460", Offset = "0x1203460", VA = "0x1203460")]
		public void SetControllerActive(Transform controller, bool active, bool scaling = false)
		{
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x1203634", Offset = "0x1203634", VA = "0x1203634", Slot = "4")]
		public void ResetLocomotion()
		{
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x12038DC", Offset = "0x12038DC", VA = "0x12038DC", Slot = "5")]
		public void ResetScale(float scale = 1f)
		{
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x1203914", Offset = "0x1203914", VA = "0x1203914", Slot = "6")]
		public void ResetTransform(float scale = 1f)
		{
		}

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x1203948", Offset = "0x1203948", VA = "0x1203948")]
		public static void TriggerLocomotionTeleported(Vector3 positionFrom, Vector3 positionTo, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x12037C8", Offset = "0x12037C8", VA = "0x12037C8")]
		public static void TriggerLocomotionTeleported(Vector3 positionFrom, Vector3 positionTo, Quaternion rotationFrom, Quaternion rotationTo, Vector3 scale)
		{
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x1203A44", Offset = "0x1203A44", VA = "0x1203A44")]
		public static void TriggerLocomotionTeleported(Vector3 positionFrom, Vector3 positionTo, Quaternion rotationFrom, Quaternion rotationTo, Vector3 scaleFrom, Vector3 scaleTo)
		{
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x1203BE0", Offset = "0x1203BE0", VA = "0x1203BE0")]
		public VRPullLocomotion()
		{
		}
	}
	[Token(Token = "0x2000066")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A81E8", Offset = "0x8A81E8")]
	public class VRPullLocomotionController : MonoBehaviour
	{
		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRPullLocomotion locomotion;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ActionBasedController controller;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private XRBaseControllerInteractor interactor;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool pressed;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool active;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool scaling;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<IXRInteractable> interactables;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool disableMoveDuringInteraction;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF304", Offset = "0x8AF304")]
		private UnityEvent onGrabPressed;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent onGrabReleased;

		[Token(Token = "0x17000082")]
		public bool Active
		{
			[Token(Token = "0x60002C0")]
			[Address(RVA = "0xDEF678", Offset = "0xDEF678", VA = "0xDEF678")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xDEF680", Offset = "0xDEF680", VA = "0xDEF680")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xDEF81C", Offset = "0xDEF81C", VA = "0xDEF81C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xDEF88C", Offset = "0xDEF88C", VA = "0xDEF88C")]
		private void Update()
		{
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xDEFBF0", Offset = "0xDEFBF0", VA = "0xDEFBF0")]
		public static bool VRActionIsPressed(InputActionReference action)
		{
			return default(bool);
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xDEFAA8", Offset = "0xDEFAA8", VA = "0xDEFAA8")]
		public static bool VRActionIsPressed(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xDEFC84", Offset = "0xDEFC84", VA = "0xDEFC84")]
		public VRPullLocomotionController()
		{
		}
	}
	[Token(Token = "0x2000067")]
	public class VRRingMenu : MonoBehaviour, ILookCameraTransform
	{
		[Token(Token = "0x2000068")]
		public enum RingAxis
		{
			[Token(Token = "0x4000221")]
			X,
			[Token(Token = "0x4000222")]
			Y,
			[Token(Token = "0x4000223")]
			Z
		}

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRRingMenuItem itemPrefab;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RingAxis axis;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 itemOffset;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float spacingAngle;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float offsetAngle;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool centerOnOffset;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<int> itemSpacing;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<VRRingMenuItem> items;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF3D0", Offset = "0x8AF3D0")]
		private bool <OverrideUpdate>k__BackingField;

		[Token(Token = "0x17000083")]
		public bool OverrideUpdate
		{
			[Token(Token = "0x60002C7")]
			[Address(RVA = "0xDEFD08", Offset = "0xDEFD08", VA = "0xDEFD08", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF24", Offset = "0x8CCF24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002C8")]
			[Address(RVA = "0xDEFD10", Offset = "0xDEFD10", VA = "0xDEFD10", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF34", Offset = "0x8CCF34")]
			set
			{
			}
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xDEFD1C", Offset = "0xDEFD1C", VA = "0xDEFD1C", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xDEFD20", Offset = "0xDEFD20", VA = "0xDEFD20", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xDEFD24", Offset = "0xDEFD24", VA = "0xDEFD24", Slot = "9")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xDEFD34", Offset = "0xDEFD34", VA = "0xDEFD34", Slot = "6")]
		public void UpdateLookCameraTransform(Camera camera)
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xDEFF9C", Offset = "0xDEFF9C", VA = "0xDEFF9C")]
		public void Show()
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xDF014C", Offset = "0xDF014C", VA = "0xDF014C")]
		public VRRingMenuItem ShowItem(string labelText)
		{
			return null;
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xDF03B0", Offset = "0xDF03B0", VA = "0xDF03B0")]
		public VRRingMenuItem ShowItem(Sprite icon)
		{
			return null;
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xDF0154", Offset = "0xDF0154", VA = "0xDF0154")]
		public VRRingMenuItem ShowItem(string labelText, Sprite icon)
		{
			return null;
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xDF0894", Offset = "0xDF0894", VA = "0xDF0894")]
		public void ShowSpacing(int spacing = 1)
		{
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xDF09E0", Offset = "0xDF09E0", VA = "0xDF09E0")]
		public void Hide()
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xDF0AF8", Offset = "0xDF0AF8", VA = "0xDF0AF8")]
		public void Clear()
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xDF0574", Offset = "0xDF0574", VA = "0xDF0574")]
		private void UpdateItemPositions()
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xDF0DA8", Offset = "0xDF0DA8", VA = "0xDF0DA8")]
		private Vector3 GetItemLocalPosition(int itemIndex, float itemSpacingAngle, int spacingIndex, float spaceSpacingAngle, float offsetAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xDF0F1C", Offset = "0xDF0F1C", VA = "0xDF0F1C")]
		public VRRingMenu()
		{
		}
	}
	[Token(Token = "0x2000069")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8248", Offset = "0x8A8248")]
	public class VRRingMenuItem : MonoBehaviour, IVRButtonInteractableHighlightBaseColor
	{
		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF3E0", Offset = "0x8AF3E0")]
		[SerializeField]
		private Transform facingTransform;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform rotateTransform;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] graphics;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image[] icons;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text label;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF46C", Offset = "0x8AF46C")]
		[SerializeField]
		private Transform highlightTransform;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float highlightScale;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float highlightSpeed;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve highlightCurve;

		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF4E8", Offset = "0x8AF4E8")]
		[SerializeField]
		private bool hideTimer;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text timer;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform timerScaleRoot;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Image timerImageFill;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Graphic timerColorGraphic;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Color timerActiveTextColor;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Color timerInactiveTextColor;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string timerSuffix;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF5A4", Offset = "0x8AF5A4")]
		private VRButtonDragInteractable <Button>k__BackingField;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF5B4", Offset = "0x8AF5B4")]
		private Sprite <Icon>k__BackingField;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Action onButtonSelectClick;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Action onButtonActivateClick;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Action onButtonActivateStart;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Action onButtonActivateEnd;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Action onButtonActivateUpdate;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Action onButtonDragStart;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Action onButtonDragEnd;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Action onButtonDragCancel;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Action onButtonDragUpdate;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Action<VRRingMenuItem> onClear;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private CooldownTimer cooldownTimer;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float cooldownTimerLastLeft;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Sprite defaultSprite;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 timerScaleDefault;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Color timerColor;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<VRButtonInteractableHighlight> highlights;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool isDragging;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		private bool isActivating;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
		private bool isHighlighted;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float highlightStartTime;

		[Token(Token = "0x17000084")]
		public VRButtonDragInteractable Button
		{
			[Token(Token = "0x60002D7")]
			[Address(RVA = "0xDF1010", Offset = "0xDF1010", VA = "0xDF1010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF44", Offset = "0x8CCF44")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002D8")]
			[Address(RVA = "0xDF1018", Offset = "0xDF1018", VA = "0xDF1018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF54", Offset = "0x8CCF54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public Sprite Icon
		{
			[Token(Token = "0x60002D9")]
			[Address(RVA = "0xDF1020", Offset = "0xDF1020", VA = "0xDF1020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF64", Offset = "0x8CCF64")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002DA")]
			[Address(RVA = "0xDF1028", Offset = "0xDF1028", VA = "0xDF1028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF74", Offset = "0x8CCF74")]
			private set
			{
			}
		}

		[Token(Token = "0x17000086")]
		private Color Shared.VR.IVRButtonInteractableHighlightBaseColor.BaseColor
		{
			[Token(Token = "0x60002DB")]
			[Address(RVA = "0xDF1030", Offset = "0xDF1030", VA = "0xDF1030", Slot = "4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xDF1044", Offset = "0xDF1044", VA = "0xDF1044")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xDF155C", Offset = "0xDF155C", VA = "0xDF155C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xDF1560", Offset = "0xDF1560", VA = "0xDF1560")]
		private void Update()
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xDF0414", Offset = "0xDF0414", VA = "0xDF0414")]
		public void Setup(string labelText, Sprite icon)
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xDF0C50", Offset = "0xDF0C50", VA = "0xDF0C50")]
		public void Clear()
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xDF0E48", Offset = "0xDF0E48", VA = "0xDF0E48")]
		public void SetLocalRotation(Vector3 localOutDirection)
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xDEFEC8", Offset = "0xDEFEC8", VA = "0xDEFEC8")]
		public void SetFacingRotation(Vector3 localUpDirection)
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xDF1CF8", Offset = "0xDF1CF8", VA = "0xDF1CF8")]
		public void SetTimer(CooldownTimer cooldownTimer)
		{
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xDF1D4C", Offset = "0xDF1D4C", VA = "0xDF1D4C")]
		public void SetHighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xDF00D0", Offset = "0xDF00D0", VA = "0xDF00D0")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xDF16F0", Offset = "0xDF16F0", VA = "0xDF16F0")]
		private void UpdateVisuals()
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xDF13A8", Offset = "0xDF13A8", VA = "0xDF13A8")]
		private void SetTimerColor(Color color)
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xDF1E10", Offset = "0xDF1E10", VA = "0xDF1E10")]
		private void OnButtonSelectClick()
		{
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xDF1E24", Offset = "0xDF1E24", VA = "0xDF1E24")]
		private void OnButtonActivateClick()
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xDF1E38", Offset = "0xDF1E38", VA = "0xDF1E38")]
		private void OnButtonActivateStart()
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xDF1E6C", Offset = "0xDF1E6C", VA = "0xDF1E6C")]
		private void OnButtonActivateEnd()
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xDF1E9C", Offset = "0xDF1E9C", VA = "0xDF1E9C")]
		private void OnButtonDragStart()
		{
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xDF1ED0", Offset = "0xDF1ED0", VA = "0xDF1ED0")]
		private void OnButtonDragEnd()
		{
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xDF1F00", Offset = "0xDF1F00", VA = "0xDF1F00")]
		private void OnButtonDragCancel()
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xDF1F30", Offset = "0xDF1F30", VA = "0xDF1F30", Slot = "5")]
		private void Shared.VR.IVRButtonInteractableHighlightBaseColor.Setup(VRButtonInteractableHighlight highlight)
		{
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xDF1FEC", Offset = "0xDF1FEC", VA = "0xDF1FEC")]
		public VRRingMenuItem()
		{
		}
	}
	[Token(Token = "0x200006A")]
	public class VRSharedRingMenu : VRRingMenu
	{
		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<VRSharedRingMenu> sharedMenus;

		[Token(Token = "0x17000087")]
		public static bool HasSharedRingMenu
		{
			[Token(Token = "0x60002F1")]
			[Address(RVA = "0xDF8310", Offset = "0xDF8310", VA = "0xDF8310")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xDF8394", Offset = "0xDF8394", VA = "0xDF8394")]
		public static bool TryGrabSharedRingMenu(out VRSharedRingMenu menu)
		{
			return default(bool);
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xDF84D0", Offset = "0xDF84D0", VA = "0xDF84D0")]
		public static void ReturnSharedRingMenu(VRSharedRingMenu menu)
		{
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xDF855C", Offset = "0xDF855C", VA = "0xDF855C", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xDF85E8", Offset = "0xDF85E8", VA = "0xDF85E8", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xDF8674", Offset = "0xDF8674", VA = "0xDF8674")]
		public VRSharedRingMenu()
		{
		}
	}
	[Token(Token = "0x200006B")]
	public class VRUICurvedPositionable : MonoBehaviour, IVRUITransform
	{
		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool moveLocalOffsetPositionOnAwake;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 moveLocalOffsetPosition;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool moveLocalOffsetRotationOnAwake;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 moveLocalOffsetRotation;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool hasSetup;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRUITransformEvents transformEvents;

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xDF98B4", Offset = "0xDF98B4", VA = "0xDF98B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xDF9A08", Offset = "0xDF9A08", VA = "0xDF9A08", Slot = "4")]
		public void UpdateTransformPosition()
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xDF9DAC", Offset = "0xDF9DAC", VA = "0xDF9DAC", Slot = "5")]
		public void UpdateTransformDimensions()
		{
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xDF9DB0", Offset = "0xDF9DB0", VA = "0xDF9DB0", Slot = "6")]
		public void UpdateTransformParent()
		{
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xDF98B8", Offset = "0xDF98B8", VA = "0xDF98B8")]
		private void SetupPosition()
		{
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xDF9A0C", Offset = "0xDF9A0C", VA = "0xDF9A0C")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xDF9DB4", Offset = "0xDF9DB4", VA = "0xDF9DB4")]
		public static void TriggerCurvedUIUpdate(Component component)
		{
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xDF9DD4", Offset = "0xDF9DD4", VA = "0xDF9DD4")]
		public static void TriggerCurvedUIUpdate(GameObject obj)
		{
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0xDF9E90", Offset = "0xDF9E90", VA = "0xDF9E90")]
		public static void SetCurvedUIDirty(Graphic component)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0xDF9EB0", Offset = "0xDF9EB0", VA = "0xDF9EB0")]
		public static void SetCurvedUIDirty(TMP_Text component, bool rebuildLayout = false)
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0xDFA1C8", Offset = "0xDFA1C8", VA = "0xDFA1C8")]
		public static void SetCurvedUIDirty(GameObject obj)
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0xDFA284", Offset = "0xDFA284", VA = "0xDFA284")]
		public static void SetCurvedUIDirtyChildren(Transform transform)
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0xDFA030", Offset = "0xDFA030", VA = "0xDFA030")]
		public static void RebuildLayout(GameObject obj)
		{
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0xDFA318", Offset = "0xDFA318", VA = "0xDFA318")]
		public VRUICurvedPositionable()
		{
		}
	}
	[Token(Token = "0x200006C")]
	public class VRUIInteractable : XRBaseInteractable, IVRUITransform
	{
		[Token(Token = "0x200006D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A82A8", Offset = "0x8A82A8")]
		private sealed class <SelectClickAfterDelay>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRUIInteractable <>4__this;

			[Token(Token = "0x17000089")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000328")]
				[Address(RVA = "0xEA8BA4", Offset = "0xEA8BA4", VA = "0xEA8BA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600032A")]
				[Address(RVA = "0xEA8BEC", Offset = "0xEA8BEC", VA = "0xEA8BEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000325")]
			[Address(RVA = "0xEA89B0", Offset = "0xEA89B0", VA = "0xEA89B0")]
			[DebuggerHidden]
			public <SelectClickAfterDelay>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6000326")]
			[Address(RVA = "0xEA89DC", Offset = "0xEA89DC", VA = "0xEA89DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000327")]
			[Address(RVA = "0xEA89E0", Offset = "0xEA89E0", VA = "0xEA89E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000329")]
			[Address(RVA = "0xEA8BAC", Offset = "0xEA8BAC", VA = "0xEA8BAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200006E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A82B8", Offset = "0x8A82B8")]
		private sealed class <SimulatedClick>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRUIInteractable <>4__this;

			[Token(Token = "0x1700008B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600032E")]
				[Address(RVA = "0xEA8CFC", Offset = "0xEA8CFC", VA = "0xEA8CFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000330")]
				[Address(RVA = "0xEA8D44", Offset = "0xEA8D44", VA = "0xEA8D44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600032B")]
			[Address(RVA = "0xEA8BF4", Offset = "0xEA8BF4", VA = "0xEA8BF4")]
			[DebuggerHidden]
			public <SimulatedClick>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x600032C")]
			[Address(RVA = "0xEA8C20", Offset = "0xEA8C20", VA = "0xEA8C20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600032D")]
			[Address(RVA = "0xEA8C24", Offset = "0xEA8C24", VA = "0xEA8C24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600032F")]
			[Address(RVA = "0xEA8D04", Offset = "0xEA8D04", VA = "0xEA8D04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2 INTERACTABLE_COLLIDER_DEPTH;

		[Token(Token = "0x4000253")]
		private const float INTERACTABLE_COLLIDER_SIZE_PADDING = 20f;

		[Token(Token = "0x4000254")]
		private const float INTERACTABLE_CLICK_DELAY = 0.2f;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF604", Offset = "0x8AF604")]
		private GameObject eventReceiver;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private bool ignoreGlobalVRUIInteractionEnabled;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int hoveredCount;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int selectedCount;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Rigidbody interactableRigidbody;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private BoxCollider interactableCollider;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private VRUITransformEvents interactableEvents;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Coroutine selectAfterDelayRoutine;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Coroutine simulatedClickRoutine;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool valid;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private CanvasGroup validatorGroup;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private BaseRaycaster validatorRaycaster;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool vrUiInteractionEnabled;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<VRUIInteractable> activeInteractables;

		[Token(Token = "0x17000088")]
		public static bool VRUIInteractionEnabled
		{
			[Token(Token = "0x6000306")]
			[Address(RVA = "0xDFA35C", Offset = "0xDFA35C", VA = "0xDFA35C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000307")]
			[Address(RVA = "0xDFA3C0", Offset = "0xDFA3C0", VA = "0xDFA3C0")]
			set
			{
			}
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0xDFA6E4", Offset = "0xDFA6E4", VA = "0xDFA6E4")]
		public static void NotifyCanvasGroupUpdate(CanvasGroup group)
		{
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0xDFA890", Offset = "0xDFA890", VA = "0xDFA890")]
		public static void NotifyCanvasRaycasterUpdate(BaseRaycaster raycaster)
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0xDFAA3C", Offset = "0xDFAA3C", VA = "0xDFAA3C", Slot = "47")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0xDFB19C", Offset = "0xDFB19C", VA = "0xDFB19C", Slot = "48")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0xDFB2E4", Offset = "0xDFB2E4", VA = "0xDFB2E4", Slot = "49")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0xDFB420", Offset = "0xDFB420", VA = "0xDFB420", Slot = "63")]
		protected override void OnHoverEntered(HoverEnterEventArgs args)
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0xDFBD90", Offset = "0xDFBD90", VA = "0xDFBD90", Slot = "65")]
		protected override void OnHoverExited(HoverExitEventArgs args)
		{
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0xDFC1F8", Offset = "0xDFC1F8", VA = "0xDFC1F8", Slot = "67")]
		protected override void OnSelectEntered(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0xDFC2C0", Offset = "0xDFC2C0", VA = "0xDFC2C0", Slot = "69")]
		protected override void OnSelectExited(SelectExitEventArgs args)
		{
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0xDFC380", Offset = "0xDFC380", VA = "0xDFC380")]
		public void TrySimulateClick()
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0xDFC454", Offset = "0xDFC454", VA = "0xDFC454", Slot = "87")]
		public void UpdateTransformPosition()
		{
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0xDFC458", Offset = "0xDFC458", VA = "0xDFC458", Slot = "88")]
		public void UpdateTransformDimensions()
		{
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0xDFC45C", Offset = "0xDFC45C", VA = "0xDFC45C", Slot = "89")]
		public void UpdateTransformParent()
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0xDFADD0", Offset = "0xDFADD0", VA = "0xDFADD0")]
		private void UpdateInteractableSize()
		{
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0xDFB240", Offset = "0xDFB240", VA = "0xDFB240")]
		private void UpdateInteractableValidators(bool force = false)
		{
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0xDFA550", Offset = "0xDFA550", VA = "0xDFA550")]
		private void UpdateInteractableValid(bool force = false)
		{
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0xDFB9A8", Offset = "0xDFB9A8", VA = "0xDFB9A8")]
		private void StartHover()
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0xDFBE58", Offset = "0xDFBE58", VA = "0xDFBE58")]
		private void StopHover()
		{
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0xDFBAFC", Offset = "0xDFBAFC", VA = "0xDFBAFC")]
		private void StartSelect(bool click, bool clickAfterDelay = false, bool clickOnlyOnFirstSelect = true)
		{
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0xDFBFB0", Offset = "0xDFBFB0", VA = "0xDFBFB0")]
		private void StopSelect(bool click)
		{
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0xDFC484", Offset = "0xDFC484", VA = "0xDFC484")]
		private void StartSelectClickAfterDelay()
		{
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0xDFB38C", Offset = "0xDFB38C", VA = "0xDFB38C")]
		private void StopSelectClickAfterDelay()
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0xDFC4F8", Offset = "0xDFC4F8", VA = "0xDFC4F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CCF84", Offset = "0x8CCF84")]
		private IEnumerator SelectClickAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xDFC390", Offset = "0xDFC390", VA = "0xDFC390")]
		private void StartSimulateClick()
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0xDFB3CC", Offset = "0xDFB3CC", VA = "0xDFB3CC")]
		private void StopSimulateClick()
		{
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0xDFC570", Offset = "0xDFC570", VA = "0xDFC570")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CCFE4", Offset = "0x8CCFE4")]
		private IEnumerator SimulatedClick()
		{
			return null;
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0xDFB92C", Offset = "0xDFB92C", VA = "0xDFB92C")]
		private static bool IsInteractorDirect(IXRInteractor interactorObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0xDFC5E8", Offset = "0xDFC5E8", VA = "0xDFC5E8")]
		public VRUIInteractable()
		{
		}
	}
	[Token(Token = "0x200006F")]
	public interface IVRUITransform
	{
		[Token(Token = "0x6000331")]
		void UpdateTransformPosition();

		[Token(Token = "0x6000332")]
		void UpdateTransformDimensions();

		[Token(Token = "0x6000333")]
		void UpdateTransformParent();
	}
	[Token(Token = "0x2000070")]
	public class VRUITransformEvents : UIBehaviour
	{
		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IVRUITransform uiTransform;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Canvas canvas;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 previousCanvasPos;

		[Token(Token = "0x6000334")]
		[Address(RVA = "0xDFC6A0", Offset = "0xDFC6A0", VA = "0xDFC6A0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0xDFC708", Offset = "0xDFC708", VA = "0xDFC708")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0xDFC8B0", Offset = "0xDFC8B0", VA = "0xDFC8B0", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0xDFC968", Offset = "0xDFC968", VA = "0xDFC968", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0xDFCA50", Offset = "0xDFCA50", VA = "0xDFCA50")]
		public VRUITransformEvents()
		{
		}
	}
	[Token(Token = "0x2000071")]
	public class XRDirectInteractorStable : XRDirectInteractor
	{
		[Token(Token = "0x2000072")]
		private delegate int ColliderOverlapCheckNonAlloc(Collider collider, Collider[] results, int layerMask, QueryTriggerInteraction queryTriggerInteraction);

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Collider collider;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private ColliderOverlapCheckNonAlloc colliderOverlapCheck;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private int colliderLayerMask;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private List<Collider> previousOverlapColliders;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private List<Collider> currentOverlapColliders;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<IXRInteractable> InteractablesWorkList;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Collider[] OverlapCheckResult;

		[Token(Token = "0x6000339")]
		[Address(RVA = "0xE01660", Offset = "0xE01660", VA = "0xE01660", Slot = "43")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0xE01978", Offset = "0xE01978", VA = "0xE01978", Slot = "45")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0xE01B0C", Offset = "0xE01B0C", VA = "0xE01B0C")]
		protected void Update()
		{
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0xE01E60", Offset = "0xE01E60", VA = "0xE01E60", Slot = "61")]
		protected override void OnRegistered(InteractorRegisteredEventArgs args)
		{
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0xE01F20", Offset = "0xE01F20", VA = "0xE01F20", Slot = "62")]
		protected override void OnUnregistered(InteractorUnregisteredEventArgs args)
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0xE023C4", Offset = "0xE023C4", VA = "0xE023C4")]
		private void OnInteractableUnregistered(InteractableUnregisteredEventArgs args)
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xE02560", Offset = "0xE02560", VA = "0xE02560")]
		protected new void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0xE02564", Offset = "0xE02564", VA = "0xE02564")]
		protected new void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xE01918", Offset = "0xE01918", VA = "0xE01918")]
		public static int GetLayerMask(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0xE02568", Offset = "0xE02568", VA = "0xE02568")]
		private static int ColliderOverlapCheckBoxNonAlloc(Collider collider, Collider[] results, int layerMask, QueryTriggerInteraction queryTriggerInteraction)
		{
			return default(int);
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xE026DC", Offset = "0xE026DC", VA = "0xE026DC")]
		private static int ColliderOverlapCheckSphereNonAlloc(Collider collider, Collider[] results, int layerMask, QueryTriggerInteraction queryTriggerInteraction)
		{
			return default(int);
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0xE027FC", Offset = "0xE027FC", VA = "0xE027FC")]
		private static int ColliderOverlapCheckCapsuleNonAlloc(Collider collider, Collider[] results, int layerMask, QueryTriggerInteraction queryTriggerInteraction)
		{
			return default(int);
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0xE02A04", Offset = "0xE02A04", VA = "0xE02A04")]
		public XRDirectInteractorStable()
		{
		}
	}
}
namespace Shared.Transforms
{
	[Token(Token = "0x2000073")]
	public class RadialTargetTransform : MonoBehaviour
	{
		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 offset;

		[Token(Token = "0x1700008D")]
		public float LossyRadius
		{
			[Token(Token = "0x600034B")]
			[Address(RVA = "0xCE9D1C", Offset = "0xCE9D1C", VA = "0xCE9D1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600034C")]
			[Address(RVA = "0xCE9D54", Offset = "0xCE9D54", VA = "0xCE9D54")]
			set
			{
			}
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0xCE9D9C", Offset = "0xCE9D9C", VA = "0xCE9D9C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0xCE9E50", Offset = "0xCE9E50", VA = "0xCE9E50")]
		public Vector3 FindPointAroundRadius(Transform faceTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0xCE9F40", Offset = "0xCE9F40", VA = "0xCE9F40")]
		public RadialTargetTransform()
		{
		}
	}
	[Token(Token = "0x2000074")]
	public class RandomRotationOnEnable : MonoBehaviour
	{
		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 randomRotationAxis;

		[Token(Token = "0x6000350")]
		[Address(RVA = "0xCEA090", Offset = "0xCEA090", VA = "0xCEA090")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0xCEA11C", Offset = "0xCEA11C", VA = "0xCEA11C")]
		public RandomRotationOnEnable()
		{
		}
	}
	[Token(Token = "0x2000075")]
	public class TransformActions : MonoBehaviour
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0xF36A30", Offset = "0xF36A30", VA = "0xF36A30")]
		public void SetLocalScale(float localScale)
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0xF36A84", Offset = "0xF36A84", VA = "0xF36A84")]
		public TransformActions()
		{
		}
	}
	[Token(Token = "0x2000076")]
	public class TransformPulseLoop : MonoBehaviour
	{
		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 lerpFromScale;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 lerpToScale;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float bounceDuration;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float delayDuration;

		[Token(Token = "0x6000354")]
		[Address(RVA = "0xF36A8C", Offset = "0xF36A8C", VA = "0xF36A8C")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0xF36B78", Offset = "0xF36B78", VA = "0xF36B78")]
		public TransformPulseLoop()
		{
		}
	}
	[Token(Token = "0x2000077")]
	public class TransformScaleLerp : MonoBehaviour
	{
		[Token(Token = "0x2000078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A82C8", Offset = "0x8A82C8")]
		private sealed class <LerpingScaleProperty>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TransformScaleLerp <>4__this;

			[Token(Token = "0x4000284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 from;

			[Token(Token = "0x4000285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 to;

			[Token(Token = "0x4000286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__2;

			[Token(Token = "0x1700008E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600035D")]
				[Address(RVA = "0xEA1A40", Offset = "0xEA1A40", VA = "0xEA1A40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700008F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600035F")]
				[Address(RVA = "0xEA1A88", Offset = "0xEA1A88", VA = "0xEA1A88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600035A")]
			[Address(RVA = "0xEA18A0", Offset = "0xEA18A0", VA = "0xEA18A0")]
			[DebuggerHidden]
			public <LerpingScaleProperty>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600035B")]
			[Address(RVA = "0xEA18CC", Offset = "0xEA18CC", VA = "0xEA18CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600035C")]
			[Address(RVA = "0xEA18D0", Offset = "0xEA18D0", VA = "0xEA18D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600035E")]
			[Address(RVA = "0xEA1A48", Offset = "0xEA1A48", VA = "0xEA1A48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform transf;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 lerpFromScale;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 lerpToScale;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine lerpCoroutine;

		[Token(Token = "0x6000356")]
		[Address(RVA = "0xF36BBC", Offset = "0xF36BBC", VA = "0xF36BBC")]
		public void LerpInProperty()
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0xF36D64", Offset = "0xF36D64", VA = "0xF36D64")]
		public void LerpBackProperty()
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0xF36CB0", Offset = "0xF36CB0", VA = "0xF36CB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CD0E4", Offset = "0x8CD0E4")]
		private IEnumerator LerpingScaleProperty(Coroutine cRoutine, Transform renderer, Vector3 from, Vector3 to, float duration = 3f)
		{
			return null;
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0xF36E58", Offset = "0xF36E58", VA = "0xF36E58")]
		public TransformScaleLerp()
		{
		}
	}
}
namespace Shared.Tracking
{
	[Token(Token = "0x2000079")]
	public enum EncounteredStatus
	{
		[Token(Token = "0x4000288")]
		Unseen,
		[Token(Token = "0x4000289")]
		SeenOnly,
		[Token(Token = "0x400028A")]
		Equipped
	}
	[Serializable]
	[Token(Token = "0x200007A")]
	public class AbilityPassiveData
	{
		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8AF720", Offset = "0x8AF720")]
		public SectorTag abilityTag;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EncounteredStatus encounteredStatus;

		[Token(Token = "0x6000360")]
		[Address(RVA = "0xEE2A90", Offset = "0xEE2A90", VA = "0xEE2A90")]
		public AbilityPassiveData(SectorTag abilityTag)
		{
		}
	}
	[Token(Token = "0x200007B")]
	public class AbilityTracker
	{
		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<SectorTag, AbilityPassiveData> abilityPassiveStatsMap;

		[Token(Token = "0x17000090")]
		public List<AbilityPassiveData> AbilityPassiveStats
		{
			[Token(Token = "0x6000361")]
			[Address(RVA = "0xEE2CE0", Offset = "0xEE2CE0", VA = "0xEE2CE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xEE2D50", Offset = "0xEE2D50", VA = "0xEE2D50")]
		public void LoadAbilityPassiveStats(List<AbilityPassiveData> abilityPassiveStats)
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0xEE2EC0", Offset = "0xEE2EC0", VA = "0xEE2EC0")]
		public void SetAbilityPassiveEncounteredStatus(SectorTag abilityTag, EncounteredStatus newStatus)
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0xEE2FD8", Offset = "0xEE2FD8", VA = "0xEE2FD8")]
		public EncounteredStatus GetAbilityPassiveEncounteredStatus(SectorTag abilityTag)
		{
			return default(EncounteredStatus);
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0xEE3070", Offset = "0xEE3070", VA = "0xEE3070")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0xEE30C4", Offset = "0xEE30C4", VA = "0xEE30C4")]
		public AbilityTracker()
		{
		}
	}
	[Token(Token = "0x200007C")]
	public class SaveUtil
	{
		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string IV;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string KEY;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly byte[] FILE_SIGNATURE;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string FILE_TYPE;

		[Token(Token = "0x6000367")]
		[Address(RVA = "0xCF8614", Offset = "0xCF8614", VA = "0xCF8614")]
		public static bool FileExists(string filename, int playerId, string folder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0xCF86F0", Offset = "0xCF86F0", VA = "0xCF86F0")]
		public static bool FileExists(string filename, string folder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0xCF87F0", Offset = "0xCF87F0", VA = "0xCF87F0")]
		public static void SaveFile(string filename, int playerId, string folder, bool encrypt, object data)
		{
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0xCF88E0", Offset = "0xCF88E0", VA = "0xCF88E0")]
		public static void SaveFile(string filename, string folder, bool encrypt, object data)
		{
		}

		[Token(Token = "0x600036B")]
		public static bool LoadFile<T>(string filename, int playerId, string folder, bool encrypted, Action<T> onComplete) where T : class, new()
		{
			return default(bool);
		}

		[Token(Token = "0x600036C")]
		public static bool LoadFile<T>(string filename, string folder, bool encrypted, Action<T> onComplete) where T : class, new()
		{
			return default(bool);
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0xCF8F80", Offset = "0xCF8F80", VA = "0xCF8F80")]
		public static void DeleteFile(string filename, int playerId, string folder)
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0xCF904C", Offset = "0xCF904C", VA = "0xCF904C")]
		public static void DeleteFile(string filename, string folder)
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0xCF8A54", Offset = "0xCF8A54", VA = "0xCF8A54")]
		private static void WriteString(string filePath, string text, bool encrypted)
		{
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0xCF90F0", Offset = "0xCF90F0", VA = "0xCF90F0")]
		private static string GetString(string filename, string folder, bool encrypted)
		{
			return null;
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0xCF9898", Offset = "0xCF9898", VA = "0xCF9898")]
		public SaveUtil()
		{
		}
	}
	[Token(Token = "0x200007D")]
	public class StatRecorder : MonoBehaviour
	{
		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected StatsEnum statType;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected bool checkArchiveDataStatRankup;

		[Token(Token = "0x17000091")]
		public StatsEnum StatType
		{
			[Token(Token = "0x6000373")]
			[Address(RVA = "0xF24F48", Offset = "0xF24F48", VA = "0xF24F48")]
			get
			{
				return default(StatsEnum);
			}
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xF24F50", Offset = "0xF24F50", VA = "0xF24F50", Slot = "4")]
		public virtual void Record()
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0xF24F58", Offset = "0xF24F58", VA = "0xF24F58")]
		public void Record(int change)
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0xF25804", Offset = "0xF25804", VA = "0xF25804")]
		private void OnArchiveDataStatRankup()
		{
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0xF258D0", Offset = "0xF258D0", VA = "0xF258D0")]
		public StatRecorder()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007E")]
	public class StatData
	{
		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StatsEnum statType;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int amount;

		[Token(Token = "0x6000378")]
		[Address(RVA = "0xF24F40", Offset = "0xF24F40", VA = "0xF24F40")]
		public StatData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007F")]
	public class PassiveAbilityData
	{
		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SectorTag abilityTag;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int level;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string extraData;

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x2492010", Offset = "0x2492010", VA = "0x2492010")]
		public PassiveAbilityData()
		{
		}
	}
	[Token(Token = "0x2000080")]
	public interface IReadOnlyRunData
	{
		[Token(Token = "0x17000092")]
		int RunId
		{
			[Token(Token = "0x600037A")]
			get;
		}

		[Token(Token = "0x17000093")]
		float TimeSpent
		{
			[Token(Token = "0x600037B")]
			get;
		}

		[Token(Token = "0x17000094")]
		bool TimeStopped
		{
			[Token(Token = "0x600037C")]
			get;
			[Token(Token = "0x600037D")]
			set;
		}

		[Token(Token = "0x17000095")]
		bool OnGoing
		{
			[Token(Token = "0x600037E")]
			get;
		}

		[Token(Token = "0x17000096")]
		bool Success
		{
			[Token(Token = "0x600037F")]
			get;
		}

		[Token(Token = "0x17000097")]
		bool IsDailyJourney
		{
			[Token(Token = "0x6000380")]
			get;
		}

		[Token(Token = "0x17000098")]
		bool IsTutorial
		{
			[Token(Token = "0x6000381")]
			get;
		}

		[Token(Token = "0x17000099")]
		string Seed
		{
			[Token(Token = "0x6000382")]
			get;
		}

		[Token(Token = "0x1700009A")]
		IReadOnlyList<string> RunThreatIds
		{
			[Token(Token = "0x6000383")]
			get;
		}

		[Token(Token = "0x1700009B")]
		int RunThreatLevel
		{
			[Token(Token = "0x6000384")]
			get;
		}

		[Token(Token = "0x1700009C")]
		IReadOnlyList<PassiveAbilityData> PassiveAbilities
		{
			[Token(Token = "0x6000385")]
			get;
		}

		[Token(Token = "0x1700009D")]
		SectorTag ShipTag
		{
			[Token(Token = "0x6000386")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x2000081")]
	public class RunData : IReadOnlyRunData
	{
		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int runId;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float timeSpent;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool timeStopped;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool onGoing;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool success;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool cancelled;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SectorTagAmount> baseTags;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string seed;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SectorTag shipTag;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<StatData> runStats;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> runThreatIds;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<PassiveAbilityData> passiveAbilities;

		[Token(Token = "0x1700009E")]
		public int RunId
		{
			[Token(Token = "0x6000387")]
			[Address(RVA = "0xCEB8B0", Offset = "0xCEB8B0", VA = "0xCEB8B0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700009F")]
		public float TimeSpent
		{
			[Token(Token = "0x6000388")]
			[Address(RVA = "0xCEB8B8", Offset = "0xCEB8B8", VA = "0xCEB8B8", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A0")]
		public bool TimeStopped
		{
			[Token(Token = "0x6000389")]
			[Address(RVA = "0xCEB8C0", Offset = "0xCEB8C0", VA = "0xCEB8C0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600038A")]
			[Address(RVA = "0xCEB8C8", Offset = "0xCEB8C8", VA = "0xCEB8C8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public bool OnGoing
		{
			[Token(Token = "0x600038B")]
			[Address(RVA = "0xCEB8D4", Offset = "0xCEB8D4", VA = "0xCEB8D4", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A2")]
		public bool Success
		{
			[Token(Token = "0x600038C")]
			[Address(RVA = "0xCEB8DC", Offset = "0xCEB8DC", VA = "0xCEB8DC", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A3")]
		public bool Cancelled
		{
			[Token(Token = "0x600038D")]
			[Address(RVA = "0xCEB8E4", Offset = "0xCEB8E4", VA = "0xCEB8E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A4")]
		public bool IsDailyJourney
		{
			[Token(Token = "0x600038E")]
			[Address(RVA = "0xCEB8EC", Offset = "0xCEB8EC", VA = "0xCEB8EC", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A5")]
		public bool IsTutorial
		{
			[Token(Token = "0x600038F")]
			[Address(RVA = "0xCEB984", Offset = "0xCEB984", VA = "0xCEB984", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A6")]
		public bool IsRelaxedMode
		{
			[Token(Token = "0x6000390")]
			[Address(RVA = "0xCEBA1C", Offset = "0xCEBA1C", VA = "0xCEBA1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A7")]
		public string Seed
		{
			[Token(Token = "0x6000391")]
			[Address(RVA = "0xCEBAB4", Offset = "0xCEBAB4", VA = "0xCEBAB4", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public IReadOnlyList<string> RunThreatIds
		{
			[Token(Token = "0x6000392")]
			[Address(RVA = "0xCEBABC", Offset = "0xCEBABC", VA = "0xCEBABC", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		public int RunThreatLevel
		{
			[Token(Token = "0x6000393")]
			[Address(RVA = "0xCEBAC4", Offset = "0xCEBAC4", VA = "0xCEBAC4", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AA")]
		public IReadOnlyList<PassiveAbilityData> PassiveAbilities
		{
			[Token(Token = "0x6000394")]
			[Address(RVA = "0xCEBB10", Offset = "0xCEBB10", VA = "0xCEBB10", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public SectorTag ShipTag
		{
			[Token(Token = "0x6000395")]
			[Address(RVA = "0xCEBB18", Offset = "0xCEBB18", VA = "0xCEBB18", Slot = "16")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xCEBB24", Offset = "0xCEBB24", VA = "0xCEBB24")]
		public RunData()
		{
		}
	}
	[Token(Token = "0x2000082")]
	public enum StatsEnum
	{
		[Token(Token = "0x40002A6")]
		PlayerRuns = 0,
		[Token(Token = "0x40002A7")]
		PlayerLosses = 1,
		[Token(Token = "0x40002A8")]
		PlayerVictories = 2,
		[Token(Token = "0x40002A9")]
		ShipsLost = 3,
		[Token(Token = "0x40002AA")]
		ShipKills = 50,
		[Token(Token = "0x40002AB")]
		AsteroidKills = 51,
		[Token(Token = "0x40002AC")]
		MissileKills = 52,
		[Token(Token = "0x40002AD")]
		MineKills = 53,
		[Token(Token = "0x40002AE")]
		ResourceAsteroidKills = 54,
		[Token(Token = "0x40002AF")]
		MagnifyingGlass = 70,
		[Token(Token = "0x40002B0")]
		Charger = 71,
		[Token(Token = "0x40002B1")]
		Spawner = 72,
		[Token(Token = "0x40002B2")]
		BigRig = 73,
		[Token(Token = "0x40002B3")]
		SimpleFighter = 74,
		[Token(Token = "0x40002B4")]
		EliteSimpleFighter = 75,
		[Token(Token = "0x40002B5")]
		EliteMagnifyingGlass = 76,
		[Token(Token = "0x40002B6")]
		EliteHanger = 77,
		[Token(Token = "0x40002B7")]
		EliteBigRig = 78,
		[Token(Token = "0x40002B8")]
		ArthropoidMagnifyingGlass = 90,
		[Token(Token = "0x40002B9")]
		ArthropoidFighter = 91,
		[Token(Token = "0x40002BA")]
		ArthropoidKamikazeHive = 92,
		[Token(Token = "0x40002BB")]
		ArthropoidSurroundHound = 93,
		[Token(Token = "0x40002BC")]
		ArthropoidGlueShooter = 94,
		[Token(Token = "0x40002BD")]
		ArthropoidReinforcer = 95,
		[Token(Token = "0x40002BE")]
		ArthropoidReconstructor = 96,
		[Token(Token = "0x40002BF")]
		ArthropoidIllusionistBlaster = 97,
		[Token(Token = "0x40002C0")]
		ArthropoidKamikazeHiveSmall = 98,
		[Token(Token = "0x40002C1")]
		ArhtropoidIllusionistLaser = 99,
		[Token(Token = "0x40002C2")]
		ArthropoidEliteKamikazeHive = 100,
		[Token(Token = "0x40002C3")]
		ArthropoidEliteReconstructor = 101,
		[Token(Token = "0x40002C4")]
		LithoidCharger = 110,
		[Token(Token = "0x40002C5")]
		LithoidSplitShooter = 111,
		[Token(Token = "0x40002C6")]
		LithoidEliteCharger = 112,
		[Token(Token = "0x40002C7")]
		LithoidEliteSplitShooter = 113,
		[Token(Token = "0x40002C8")]
		Chimera = 150,
		[Token(Token = "0x40002C9")]
		LaserGuardian = 152,
		[Token(Token = "0x40002CA")]
		BlasterGuardian = 153,
		[Token(Token = "0x40002CB")]
		CrystalGuardian = 154,
		[Token(Token = "0x40002CC")]
		ChimeraSatelliteMissile = 155,
		[Token(Token = "0x40002CD")]
		ChimeraSatelliteClusterCannon = 156,
		[Token(Token = "0x40002CE")]
		ChimeraSatelliteCutLaser = 157,
		[Token(Token = "0x40002CF")]
		ChimeraSatelliteSpawnPlatform = 158,
		[Token(Token = "0x40002D0")]
		ChimeraSatelliteMineBurst = 159,
		[Token(Token = "0x40002D1")]
		MindFrameHeart = 160,
		[Token(Token = "0x40002D2")]
		MindFrameHeartHyper = 161,
		[Token(Token = "0x40002D3")]
		SectorsCleared = 200,
		[Token(Token = "0x40002D4")]
		CombatSectorsCleared = 201,
		[Token(Token = "0x40002D5")]
		TradeSectorsCleared = 202,
		[Token(Token = "0x40002D6")]
		MineSectorCleared = 202,
		[Token(Token = "0x40002D7")]
		EliteBattleSectorsCleared = 203,
		[Token(Token = "0x40002D8")]
		SectorsVisited = 204,
		[Token(Token = "0x40002D9")]
		PirateAmbush = 301,
		[Token(Token = "0x40002DA")]
		HealthPickedUp = 401,
		[Token(Token = "0x40002DB")]
		AmmoPickedUp = 402,
		[Token(Token = "0x40002DC")]
		AbilitiesPickedUp = 403,
		[Token(Token = "0x40002DD")]
		DefectsPickedUp = 404,
		[Token(Token = "0x40002DE")]
		AbilitiesGained = 450,
		[Token(Token = "0x40002DF")]
		AbilitiesUpgraded = 451,
		[Token(Token = "0x40002E0")]
		AbilitiesRecycled = 452,
		[Token(Token = "0x40002E1")]
		AbilitiesRemoved = 453,
		[Token(Token = "0x40002E2")]
		DefectsGained = 460,
		[Token(Token = "0x40002E3")]
		DefectsRemoved = 461,
		[Token(Token = "0x40002E4")]
		ExperienceGained = 500,
		[Token(Token = "0x40002E5")]
		ScrapGained = 501,
		[Token(Token = "0x40002E6")]
		StoryKeysGained = 502,
		[Token(Token = "0x40002E7")]
		SpaceWhale = 600,
		[Token(Token = "0x40002E8")]
		EtherDrake = 601,
		[Token(Token = "0x40002E9")]
		SpaceAmoeba = 602,
		[Token(Token = "0x40002EA")]
		StellarDevourer = 603,
		[Token(Token = "0x40002EB")]
		SkyDragon = 604,
		[Token(Token = "0x40002EC")]
		Voidspawn = 605,
		[Token(Token = "0x40002ED")]
		DimensionalHorror = 606,
		[Token(Token = "0x40002EE")]
		SpectralWraith = 607
	}
	[Token(Token = "0x2000083")]
	public class StatsTracker
	{
		[Serializable]
		[Token(Token = "0x2000084")]
		private class RunWrapper
		{
			[Token(Token = "0x40002F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<RunData> Collection;

			[Token(Token = "0x60003BF")]
			[Address(RVA = "0xE9E9C4", Offset = "0xE9E9C4", VA = "0xE9E9C4")]
			public RunWrapper()
			{
			}
		}

		[Token(Token = "0x2000085")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A82D8", Offset = "0x8A82D8")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x40002F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StatsEnum ofType;

			[Token(Token = "0x40002F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<StatData> <>9__0;

			[Token(Token = "0x60003C0")]
			[Address(RVA = "0xE9E998", Offset = "0xE9E998", VA = "0xE9E998")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x60003C1")]
			[Address(RVA = "0xE9E9A0", Offset = "0xE9E9A0", VA = "0xE9E9A0")]
			internal bool <ResetStat>b__0(StatData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF778", Offset = "0x8AF778")]
		private List<RunData> <Runs>k__BackingField;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF788", Offset = "0x8AF788")]
		private List<StatData> <PurchasedStats>k__BackingField;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF798", Offset = "0x8AF798")]
		private StatsTrackerCache <CachedStartOfRunTotal>k__BackingField;

		[Token(Token = "0x170000AC")]
		public List<RunData> Runs
		{
			[Token(Token = "0x6000398")]
			[Address(RVA = "0xF26740", Offset = "0xF26740", VA = "0xF26740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD194", Offset = "0x8CD194")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000399")]
			[Address(RVA = "0xF26748", Offset = "0xF26748", VA = "0xF26748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1A4", Offset = "0x8CD1A4")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public List<StatData> PurchasedStats
		{
			[Token(Token = "0x600039A")]
			[Address(RVA = "0xF26750", Offset = "0xF26750", VA = "0xF26750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1B4", Offset = "0x8CD1B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600039B")]
			[Address(RVA = "0xF26758", Offset = "0xF26758", VA = "0xF26758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1C4", Offset = "0x8CD1C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public StatsTrackerCache CachedStartOfRunTotal
		{
			[Token(Token = "0x600039C")]
			[Address(RVA = "0xF26760", Offset = "0xF26760", VA = "0xF26760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1D4", Offset = "0x8CD1D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600039D")]
			[Address(RVA = "0xF26768", Offset = "0xF26768", VA = "0xF26768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1E4", Offset = "0x8CD1E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public IReadOnlyRunData CurrentRunData
		{
			[Token(Token = "0x600039E")]
			[Address(RVA = "0xF26770", Offset = "0xF26770", VA = "0xF26770")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private RunData CurrentRun
		{
			[Token(Token = "0x600039F")]
			[Address(RVA = "0xF26794", Offset = "0xF26794", VA = "0xF26794")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		public IReadOnlyRunData LatestRunData
		{
			[Token(Token = "0x60003A0")]
			[Address(RVA = "0xF2682C", Offset = "0xF2682C", VA = "0xF2682C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private RunData LatestRun
		{
			[Token(Token = "0x60003A1")]
			[Address(RVA = "0xF267B8", Offset = "0xF267B8", VA = "0xF267B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000004")]
		public event Action<StatsEnum, int> OnStatAdded
		{
			[Token(Token = "0x60003A2")]
			[Address(RVA = "0xF26830", Offset = "0xF26830", VA = "0xF26830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1F4", Offset = "0x8CD1F4")]
			add
			{
			}
			[Token(Token = "0x60003A3")]
			[Address(RVA = "0xF268D0", Offset = "0xF268D0", VA = "0xF268D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD204", Offset = "0x8CD204")]
			remove
			{
			}
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0xF26670", Offset = "0xF26670", VA = "0xF26670")]
		public StatsTracker()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xF26970", Offset = "0xF26970", VA = "0xF26970")]
		public void Tick(float delta)
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xF269B0", Offset = "0xF269B0", VA = "0xF269B0")]
		public int TotalCount(StatsEnum ofType, bool ignoreDailyJourney = true)
		{
			return default(int);
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xF25690", Offset = "0xF25690", VA = "0xF25690")]
		public int CurrentCount(StatsEnum ofType)
		{
			return default(int);
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xF26C1C", Offset = "0xF26C1C", VA = "0xF26C1C")]
		public int LastCount(StatsEnum ofType)
		{
			return default(int);
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xF26D88", Offset = "0xF26D88", VA = "0xF26D88")]
		public void OnContinueRun()
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xF27078", Offset = "0xF27078", VA = "0xF27078")]
		public void OnStartNewRun(List<string> runThreatIds)
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xF275AC", Offset = "0xF275AC", VA = "0xF275AC")]
		public void OnInteruptRun()
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xF275F8", Offset = "0xF275F8", VA = "0xF275F8")]
		public void OnRunResult(bool success)
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xF27ADC", Offset = "0xF27ADC", VA = "0xF27ADC")]
		public void OnRunEnd(bool success)
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xF26E90", Offset = "0xF26E90", VA = "0xF26E90")]
		private void StartRun()
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xF27B84", Offset = "0xF27B84", VA = "0xF27B84")]
		private void EndRun()
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0xF27E0C", Offset = "0xF27E0C", VA = "0xF27E0C")]
		public void OnScrapGained(int previousAmount, int newAmount)
		{
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xF27E18", Offset = "0xF27E18", VA = "0xF27E18")]
		public void OnExperienceGained(int previousAmount, int newAmount)
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xF27E24", Offset = "0xF27E24", VA = "0xF27E24")]
		public void OnStoryKeysGained(int previousAmount, int newAmount)
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xF27E30", Offset = "0xF27E30", VA = "0xF27E30")]
		public void OnAbilityChange(SpaceShip.AbilityChangeType type, ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xF254E8", Offset = "0xF254E8", VA = "0xF254E8")]
		public void Add(StatsEnum type, int mod = 1)
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xF280A4", Offset = "0xF280A4", VA = "0xF280A4")]
		public void SetBaseTags(SectorTagsInput baseTags)
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xF281D8", Offset = "0xF281D8", VA = "0xF281D8")]
		public void SetSeed(string seed)
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xF28288", Offset = "0xF28288", VA = "0xF28288")]
		public void SetShipTag(SectorTag shipTag)
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xF27F18", Offset = "0xF27F18", VA = "0xF27F18")]
		private bool TryGetType(StatsEnum type, out StatData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xF28340", Offset = "0xF28340", VA = "0xF28340")]
		public bool TryGetStat(StatsEnum ofType, SectorTag shipTag, bool ignoreDailyJourney, out int total, out int runs, out int wins, out float bestTime)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xF2881C", Offset = "0xF2881C", VA = "0xF2881C")]
		public bool TryGetThreatLevelStat(StatsEnum ofType, SectorTag shipTag, out int highestThreatLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xF28B2C", Offset = "0xF28B2C", VA = "0xF28B2C")]
		public bool TryGetDailyJourneyStat(StatsEnum ofType, SectorTag shipTag, out int dailyJourneyCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xF28E08", Offset = "0xF28E08", VA = "0xF28E08")]
		public void AddPurchasedStat(StatData stat)
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xF28E90", Offset = "0xF28E90", VA = "0xF28E90")]
		public bool TryGetPurchasedStat(StatsEnum ofType, out int total)
		{
			return default(bool);
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xF29004", Offset = "0xF29004", VA = "0xF29004")]
		public void ResetStat(StatsEnum ofType)
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xF2935C", Offset = "0xF2935C", VA = "0xF2935C")]
		public void ResetAll()
		{
		}
	}
	[Token(Token = "0x2000086")]
	public class StatsTrackerCache
	{
		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<StatsEnum, int> cachedStats;

		[Token(Token = "0x170000B3")]
		public IReadOnlyDictionary<StatsEnum, int> CachedStats
		{
			[Token(Token = "0x60003C2")]
			[Address(RVA = "0xF293D4", Offset = "0xF293D4", VA = "0xF293D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xF2720C", Offset = "0xF2720C", VA = "0xF2720C")]
		public StatsTrackerCache(List<RunData> runs, List<StatData> purchasedStats, bool ignoreDailyJourneyRuns = true, bool ignoreCurrentRun = true)
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xF28E8C", Offset = "0xF28E8C", VA = "0xF28E8C")]
		public void AddPurchasedStat(StatData purchasedStat)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xF293DC", Offset = "0xF293DC", VA = "0xF293DC")]
		private void AddStat(StatData stat)
		{
		}
	}
}
namespace Shared.Rendering
{
	[Token(Token = "0x2000087")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A82E8", Offset = "0x8A82E8")]
	[ExecuteInEditMode]
	public class CameraFrustumCanvasSizer : MonoBehaviour
	{
		[Token(Token = "0x2000088")]
		public enum CanvasAxis
		{
			[Token(Token = "0x40002FE")]
			X = 0,
			[Token(Token = "0x40002FF")]
			Y = 1,
			[Token(Token = "0x4000300")]
			Smallest = 10
		}

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasAxis baseSizeAxis;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF7C8", Offset = "0x8AF7C8")]
		[SerializeField]
		private Camera fustumCamera;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float frustumDistance;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF824", Offset = "0x8AF824")]
		[SerializeField]
		private Vector2 canvasSize;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float canvasAspectRatio;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform canvasRect;

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xFE6960", Offset = "0xFE6960", VA = "0xFE6960")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xFE69BC", Offset = "0xFE69BC", VA = "0xFE69BC")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xFE6C30", Offset = "0xFE6C30", VA = "0xFE6C30")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xFE6CAC", Offset = "0xFE6CAC", VA = "0xFE6CAC")]
		[AttributeAttribute(Name = "BeforeRenderOrderAttribute", RVA = "0x8CD214", Offset = "0x8CD214")]
		private void OnBeforeRenderCanvasSizer()
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xFE6A40", Offset = "0xFE6A40", VA = "0xFE6A40")]
		private void UpdateSize()
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xFE6CB0", Offset = "0xFE6CB0", VA = "0xFE6CB0")]
		public CameraFrustumCanvasSizer()
		{
		}
	}
	[Token(Token = "0x2000089")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8358", Offset = "0x8A8358")]
	public class MainCameraCullingMask : MonoBehaviour
	{
		[Token(Token = "0x4000301")]
		public const string MAIN_CAMERA_TAG = "MainCamera";

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerMask forceDisableMask;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera cam;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MainCameraCullingMask MainCamera;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<MainCameraCullingMask> Cameras;

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xD5FFEC", Offset = "0xD5FFEC", VA = "0xD5FFEC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xD603E8", Offset = "0xD603E8", VA = "0xD603E8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xD6051C", Offset = "0xD6051C", VA = "0xD6051C")]
		public static bool IsMainCameraCullingLayerEnabled(string layer)
		{
			return default(bool);
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xD606D8", Offset = "0xD606D8", VA = "0xD606D8")]
		public static bool IsMainCameraCullingLayerEnabled(int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xD60808", Offset = "0xD60808", VA = "0xD60808")]
		public static void SetMainCameraCullingLayerEnabled(string layer, bool enabled)
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xD609D4", Offset = "0xD609D4", VA = "0xD609D4")]
		public static void SetMainCameraCullingLayerEnabled(int layer, bool enabled)
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xD601E4", Offset = "0xD601E4", VA = "0xD601E4")]
		private static void UpdateCameraCullingLayers()
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xD60614", Offset = "0xD60614", VA = "0xD60614")]
		public bool IsCullingLayerEnabled(string layer)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xD607D0", Offset = "0xD607D0", VA = "0xD607D0")]
		public bool IsCullingLayerEnabled(int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xD60908", Offset = "0xD60908", VA = "0xD60908")]
		public void SetCullingLayerEnabled(string layer, bool enabled)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xD60AD4", Offset = "0xD60AD4", VA = "0xD60AD4")]
		public void SetCullingLayerEnabled(int layer, bool enabled)
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xD60B2C", Offset = "0xD60B2C", VA = "0xD60B2C")]
		public MainCameraCullingMask()
		{
		}
	}
	[Token(Token = "0x200008A")]
	public class MainCameraCullingMaskActions : MonoBehaviour
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xD60C00", Offset = "0xD60C00", VA = "0xD60C00")]
		public void EnableCameraCullingLayer(string layer)
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xD60C64", Offset = "0xD60C64", VA = "0xD60C64")]
		public void EnableCameraCullingLayer(int layer)
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xD60CC8", Offset = "0xD60CC8", VA = "0xD60CC8")]
		public void DisableCameraCullingLayer(string layer)
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xD60D2C", Offset = "0xD60D2C", VA = "0xD60D2C")]
		public void DisableCameraCullingLayer(int layer)
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xD60D90", Offset = "0xD60D90", VA = "0xD60D90")]
		public void ToggleCameraCullingLayer(string layer)
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xD60E00", Offset = "0xD60E00", VA = "0xD60E00")]
		public void ToggleCameraCullingLayer(int layer)
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xD60E70", Offset = "0xD60E70", VA = "0xD60E70")]
		public MainCameraCullingMaskActions()
		{
		}
	}
	[Token(Token = "0x200008B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A83B8", Offset = "0x8A83B8")]
	public class SharedPreviewCameraSettings : MonoBehaviour
	{
		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool IsSetup;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float Fov;

		[Token(Token = "0x170000B4")]
		public static float FieldOfView
		{
			[Token(Token = "0x60003E0")]
			[Address(RVA = "0xE19FF4", Offset = "0xE19FF4", VA = "0xE19FF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003E1")]
			[Address(RVA = "0xE1A058", Offset = "0xE1A058", VA = "0xE1A058")]
			set
			{
			}
		}

		[Token(Token = "0x14000005")]
		public static event Action OnCameraSettingsChanged
		{
			[Token(Token = "0x60003E2")]
			[Address(RVA = "0xE1A0E8", Offset = "0xE1A0E8", VA = "0xE1A0E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD228", Offset = "0x8CD228")]
			add
			{
			}
			[Token(Token = "0x60003E3")]
			[Address(RVA = "0xE1A1DC", Offset = "0xE1A1DC", VA = "0xE1A1DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD238", Offset = "0x8CD238")]
			remove
			{
			}
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xE1A2D0", Offset = "0xE1A2D0", VA = "0xE1A2D0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xE1A32C", Offset = "0xE1A32C", VA = "0xE1A32C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xE1A594", Offset = "0xE1A594", VA = "0xE1A594")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xE1A4D8", Offset = "0xE1A4D8", VA = "0xE1A4D8")]
		public void ApplyCameraSettings()
		{
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xE1A3E4", Offset = "0xE1A3E4", VA = "0xE1A3E4")]
		private static void TrySetup(Camera camera)
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xE1A638", Offset = "0xE1A638", VA = "0xE1A638")]
		public SharedPreviewCameraSettings()
		{
		}
	}
	[Token(Token = "0x200008C")]
	public class SharedPreviewCameraSettingsActions : MonoBehaviour
	{
		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text fieldOfViewText;

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xE1A644", Offset = "0xE1A644", VA = "0xE1A644")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xE1A774", Offset = "0xE1A774", VA = "0xE1A774")]
		public void SetFieldOfView(float fov)
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xE1A7E8", Offset = "0xE1A7E8", VA = "0xE1A7E8")]
		public void IncreaseFieldOfView(float fovIncrease)
		{
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xE1A8A8", Offset = "0xE1A8A8", VA = "0xE1A8A8")]
		public void DecreaseFieldOfView(float fovDecrease)
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xE1A648", Offset = "0xE1A648", VA = "0xE1A648")]
		private void UpdateFieldOfViewText()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xE1A968", Offset = "0xE1A968", VA = "0xE1A968")]
		public SharedPreviewCameraSettingsActions()
		{
		}
	}
	[Token(Token = "0x200008D")]
	public class SharedScreenPreviewTexture : MonoBehaviour
	{
		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF8B0", Offset = "0x8AF8B0")]
		[SerializeField]
		private Camera previewCamera;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float previewCameraTextureScale;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF90C", Offset = "0x8AF90C")]
		[SerializeField]
		private RawImage previewDisplay;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject previewDisplayToggle;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool previewDisplayKeepAspectHeight;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool previewDisplayDisableWhenNoCamera;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SharedScreenPreviewTexture> ActivePreviews;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RenderTexture PreviewTexture;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int LastUpdateFrame;

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xE1A970", Offset = "0xE1A970", VA = "0xE1A970")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xE1B1B8", Offset = "0xE1B1B8", VA = "0xE1B1B8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xE1B290", Offset = "0xE1B290", VA = "0xE1B290")]
		protected void Update()
		{
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xE1AF58", Offset = "0xE1AF58", VA = "0xE1AF58")]
		private void SetPreviewTexture(RenderTexture texture)
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xE1AA6C", Offset = "0xE1AA6C", VA = "0xE1AA6C")]
		private static void UpdatePreviewTexture(bool forceUpdate)
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xE1B2EC", Offset = "0xE1B2EC", VA = "0xE1B2EC")]
		public SharedScreenPreviewTexture()
		{
		}
	}
	[Token(Token = "0x200008E")]
	public class SkyboxRenderer : MonoBehaviourSingleton<SkyboxRenderer>
	{
		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer skyboxRenderer;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float cameraFarPlaneScaleFactor;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material previousSkyboxMaterial;

		[Token(Token = "0x170000B5")]
		public Material SkyboxMaterial
		{
			[Token(Token = "0x60003F8")]
			[Address(RVA = "0xF52E14", Offset = "0xF52E14", VA = "0xF52E14")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0xF52E30", Offset = "0xF52E30", VA = "0xF52E30")]
			set
			{
			}
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xF52E4C", Offset = "0xF52E4C", VA = "0xF52E4C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xF52FE8", Offset = "0xF52FE8", VA = "0xF52FE8", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xF53174", Offset = "0xF53174", VA = "0xF53174")]
		private void OnBeginCameraRendering(ScriptableRenderContext context, Camera camera)
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xF53240", Offset = "0xF53240", VA = "0xF53240")]
		public SkyboxRenderer()
		{
		}
	}
}
namespace Shared.Platform
{
	[Token(Token = "0x200008F")]
	public interface IPlatform
	{
		[Token(Token = "0x170000B6")]
		string Token
		{
			[Token(Token = "0x60003FE")]
			get;
		}

		[Token(Token = "0x170000B7")]
		string InfoEndpoint
		{
			[Token(Token = "0x60003FF")]
			get;
		}

		[Token(Token = "0x170000B8")]
		string PostEntryEndpoint
		{
			[Token(Token = "0x6000400")]
			get;
		}

		[Token(Token = "0x6000401")]
		void Initialize(Action onFail);

		[Token(Token = "0x6000402")]
		bool IsInitialized();

		[Token(Token = "0x6000403")]
		string GetLoggedInUserId();

		[Token(Token = "0x6000404")]
		void GetFriends(Action<string[]> onComplete, Action onFail);

		[Token(Token = "0x6000405")]
		void GetGlobalLeaderboardEntries(string leaderboardHandle, int count, Action<LeaderboardEntry[]> onComplete, Action onFail);

		[Token(Token = "0x6000406")]
		void GetFriendsLeaderboardEntries(string leaderboardHandle, int count, Action<LeaderboardEntry[]> onComplete, Action onFail);

		[Token(Token = "0x6000407")]
		void GetLoggedInUserLeaderboardEntry(string leaderboardHandle, Action<LeaderboardEntry[]> onComplete, Action onFail);
	}
	[Token(Token = "0x2000090")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF9A8", Offset = "0x8AF9A8")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF9B8", Offset = "0x8AF9B8")]
		private string <Id>k__BackingField;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF9C8", Offset = "0x8AF9C8")]
		private string <DisplayName>k__BackingField;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF9D8", Offset = "0x8AF9D8")]
		private long <Score>k__BackingField;

		[Token(Token = "0x170000B9")]
		public int Rank
		{
			[Token(Token = "0x6000408")]
			[Address(RVA = "0xD59BB8", Offset = "0xD59BB8", VA = "0xD59BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD248", Offset = "0x8CD248")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000409")]
			[Address(RVA = "0xD59BC0", Offset = "0xD59BC0", VA = "0xD59BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD258", Offset = "0x8CD258")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public string Id
		{
			[Token(Token = "0x600040A")]
			[Address(RVA = "0xD59BC8", Offset = "0xD59BC8", VA = "0xD59BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD268", Offset = "0x8CD268")]
			get
			{
				return null;
			}
			[Token(Token = "0x600040B")]
			[Address(RVA = "0xD59BD0", Offset = "0xD59BD0", VA = "0xD59BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD278", Offset = "0x8CD278")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public string DisplayName
		{
			[Token(Token = "0x600040C")]
			[Address(RVA = "0xD59BD8", Offset = "0xD59BD8", VA = "0xD59BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD288", Offset = "0x8CD288")]
			get
			{
				return null;
			}
			[Token(Token = "0x600040D")]
			[Address(RVA = "0xD59BE0", Offset = "0xD59BE0", VA = "0xD59BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD298", Offset = "0x8CD298")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public long Score
		{
			[Token(Token = "0x600040E")]
			[Address(RVA = "0xD59BE8", Offset = "0xD59BE8", VA = "0xD59BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2A8", Offset = "0x8CD2A8")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600040F")]
			[Address(RVA = "0xD59BF0", Offset = "0xD59BF0", VA = "0xD59BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2B8", Offset = "0x8CD2B8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0xD59BF8", Offset = "0xD59BF8", VA = "0xD59BF8")]
		public LeaderboardEntry(int rank, string id, string displayName, long score)
		{
		}
	}
	[Token(Token = "0x2000091")]
	public class OculusPlatform : IPlatform
	{
		[Token(Token = "0x2000092")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8418", Offset = "0x8A8418")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400031E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onFail;

			[Token(Token = "0x400031F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OculusPlatform <>4__this;

			[Token(Token = "0x600041E")]
			[Address(RVA = "0xEE082C", Offset = "0xEE082C", VA = "0xEE082C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600041F")]
			[Address(RVA = "0xEE0834", Offset = "0xEE0834", VA = "0xEE0834")]
			internal void <Initialize>b__0(Message message)
			{
			}

			[Token(Token = "0x6000420")]
			[Address(RVA = "0xEE09B0", Offset = "0xEE09B0", VA = "0xEE09B0")]
			internal void <Initialize>b__1(Message<User> message)
			{
			}
		}

		[Token(Token = "0x2000093")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8428", Offset = "0x8A8428")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onFail;

			[Token(Token = "0x4000321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OculusPlatform <>4__this;

			[Token(Token = "0x4000322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<string[]> onComplete;

			[Token(Token = "0x6000421")]
			[Address(RVA = "0xEE0374", Offset = "0xEE0374", VA = "0xEE0374")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6000422")]
			[Address(RVA = "0xEE037C", Offset = "0xEE037C", VA = "0xEE037C")]
			internal void <GetFriends>b__0(Message<UserList> message)
			{
			}
		}

		[Token(Token = "0x2000094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8438", Offset = "0x8A8438")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OculusPlatform <>4__this;

			[Token(Token = "0x4000324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<LeaderboardEntry[]> onComplete;

			[Token(Token = "0x4000325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onFail;

			[Token(Token = "0x6000423")]
			[Address(RVA = "0xEE07A8", Offset = "0xEE07A8", VA = "0xEE07A8")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000424")]
			[Address(RVA = "0xEE07B0", Offset = "0xEE07B0", VA = "0xEE07B0")]
			internal void <GetGlobalLeaderboardEntries>b__0(Message<LeaderboardEntryList> message)
			{
			}
		}

		[Token(Token = "0x2000095")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8448", Offset = "0x8A8448")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OculusPlatform <>4__this;

			[Token(Token = "0x4000327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<LeaderboardEntry[]> onComplete;

			[Token(Token = "0x4000328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onFail;

			[Token(Token = "0x6000425")]
			[Address(RVA = "0xEE07D4", Offset = "0xEE07D4", VA = "0xEE07D4")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000426")]
			[Address(RVA = "0xEE07DC", Offset = "0xEE07DC", VA = "0xEE07DC")]
			internal void <GetFriendsLeaderboardEntries>b__0(Message<LeaderboardEntryList> message)
			{
			}
		}

		[Token(Token = "0x2000096")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8458", Offset = "0x8A8458")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OculusPlatform <>4__this;

			[Token(Token = "0x400032A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<LeaderboardEntry[]> onComplete;

			[Token(Token = "0x400032B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onFail;

			[Token(Token = "0x6000427")]
			[Address(RVA = "0xEE0800", Offset = "0xEE0800", VA = "0xEE0800")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6000428")]
			[Address(RVA = "0xEE0808", Offset = "0xEE0808", VA = "0xEE0808")]
			internal void <GetLoggedInUserLeaderboardEntry>b__0(Message<LeaderboardEntryList> message)
			{
			}
		}

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isInitialized;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private User loggedInUser;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UserList friends;

		[Token(Token = "0x170000BD")]
		public string Token
		{
			[Token(Token = "0x6000411")]
			[Address(RVA = "0x2490290", Offset = "0x2490290", VA = "0x2490290", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		public string InfoEndpoint
		{
			[Token(Token = "0x6000412")]
			[Address(RVA = "0x24902D4", Offset = "0x24902D4", VA = "0x24902D4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public string PostEntryEndpoint
		{
			[Token(Token = "0x6000413")]
			[Address(RVA = "0x2490318", Offset = "0x2490318", VA = "0x2490318", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x249035C", Offset = "0x249035C", VA = "0x249035C", Slot = "7")]
		public void Initialize(Action onFail)
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x249063C", Offset = "0x249063C", VA = "0x249063C", Slot = "8")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x2490644", Offset = "0x2490644", VA = "0x2490644", Slot = "9")]
		public string GetLoggedInUserId()
		{
			return null;
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x2490684", Offset = "0x2490684", VA = "0x2490684", Slot = "10")]
		public void GetFriends(Action<string[]> onComplete, Action onFail)
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x24907F8", Offset = "0x24907F8", VA = "0x24907F8", Slot = "11")]
		public void GetGlobalLeaderboardEntries(string leaderboardHandle, int count, Action<LeaderboardEntry[]> onComplete, Action onFail)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x2490984", Offset = "0x2490984", VA = "0x2490984", Slot = "12")]
		public void GetFriendsLeaderboardEntries(string leaderboardHandle, int count, Action<LeaderboardEntry[]> onComplete, Action onFail)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x2490B10", Offset = "0x2490B10", VA = "0x2490B10", Slot = "13")]
		public void GetLoggedInUserLeaderboardEntry(string leaderboardHandle, Action<LeaderboardEntry[]> onComplete, Action onFail)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x2490CE0", Offset = "0x2490CE0", VA = "0x2490CE0")]
		private void HandleLeaderboardEntyListMessage(Message<LeaderboardEntryList> message, Action<LeaderboardEntry[]> onComplete, Action onFail)
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x2490634", Offset = "0x2490634", VA = "0x2490634")]
		private void OnEntitlementFailed()
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x2488A00", Offset = "0x2488A00", VA = "0x2488A00")]
		public OculusPlatform()
		{
		}
	}
}
namespace Shared.Physics
{
	[Token(Token = "0x2000097")]
	public class AddRigidBodyTorque : MonoBehaviour
	{
		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float torque;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 rotationAngle;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFA08", Offset = "0x8AFA08")]
		private bool decreaseEnabled;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool decreaseTorqueAngleOverTime;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float decreaseDuration;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve decreaseCurve;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float decreaseMultiplier;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float decreaseCurrentDuration;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody rb;

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xEE39FC", Offset = "0xEE39FC", VA = "0xEE39FC")]
		protected void Start()
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xEE3A58", Offset = "0xEE3A58", VA = "0xEE3A58")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0xEE3AF4", Offset = "0xEE3AF4", VA = "0xEE3AF4")]
		public void ToggleTorqueDecrease(bool toggle)
		{
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xEE3B00", Offset = "0xEE3B00", VA = "0xEE3B00")]
		public void SetTorque(float newTorque)
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0xEE3B08", Offset = "0xEE3B08", VA = "0xEE3B08")]
		public void SetRotationAngle(Vector3 newRotationAngle)
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0xEE3B14", Offset = "0xEE3B14", VA = "0xEE3B14")]
		public AddRigidBodyTorque()
		{
		}
	}
	[Token(Token = "0x2000098")]
	public class PhysicsTriggerContainer : MonoBehaviour
	{
		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AFA84", Offset = "0x8AFA84")]
		private Predicate<Collider> <ValidateCollider>k__BackingField;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<Collider> colliders;

		[Token(Token = "0x170000C0")]
		public Predicate<Collider> ValidateCollider
		{
			[Token(Token = "0x600042F")]
			[Address(RVA = "0x2494438", Offset = "0x2494438", VA = "0x2494438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2C8", Offset = "0x8CD2C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000430")]
			[Address(RVA = "0x2494440", Offset = "0x2494440", VA = "0x2494440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2D8", Offset = "0x8CD2D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public int Count
		{
			[Token(Token = "0x6000435")]
			[Address(RVA = "0x24946C8", Offset = "0x24946C8", VA = "0x24946C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C2")]
		public IReadOnlyCollection<Collider> Colliders
		{
			[Token(Token = "0x6000436")]
			[Address(RVA = "0x2494714", Offset = "0x2494714", VA = "0x2494714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000006")]
		public event Action<Collider> onColliderEnter
		{
			[Token(Token = "0x6000431")]
			[Address(RVA = "0x2494448", Offset = "0x2494448", VA = "0x2494448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2E8", Offset = "0x8CD2E8")]
			add
			{
			}
			[Token(Token = "0x6000432")]
			[Address(RVA = "0x24944E8", Offset = "0x24944E8", VA = "0x24944E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2F8", Offset = "0x8CD2F8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000007")]
		public event Action<Collider> onColliderExit
		{
			[Token(Token = "0x6000433")]
			[Address(RVA = "0x2494588", Offset = "0x2494588", VA = "0x2494588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD308", Offset = "0x8CD308")]
			add
			{
			}
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x2494628", Offset = "0x2494628", VA = "0x2494628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD318", Offset = "0x8CD318")]
			remove
			{
			}
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x249471C", Offset = "0x249471C", VA = "0x249471C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x249499C", Offset = "0x249499C", VA = "0x249499C")]
		protected void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x2494AD8", Offset = "0x2494AD8", VA = "0x2494AD8")]
		protected void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x2494B88", Offset = "0x2494B88", VA = "0x2494B88")]
		private void OnColliderDisabled(GameObject obj)
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x2494BF4", Offset = "0x2494BF4", VA = "0x2494BF4")]
		private void OnColliderDestroyed(GameObject obj)
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x2494A2C", Offset = "0x2494A2C", VA = "0x2494A2C")]
		private bool AddCollider(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x2494ADC", Offset = "0x2494ADC", VA = "0x2494ADC")]
		private bool RemoveCollider(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x2494C60", Offset = "0x2494C60", VA = "0x2494C60")]
		private void AddColliderEvents(Collider collider)
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x2494884", Offset = "0x2494884", VA = "0x2494884")]
		private void RemoveColliderEvents(Collider collider)
		{
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x2494D64", Offset = "0x2494D64", VA = "0x2494D64")]
		public PhysicsTriggerContainer()
		{
		}
	}
	[Token(Token = "0x2000099")]
	public class RigidBodyResetter : MonoBehaviour
	{
		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody rb;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool resetInertiaTensorRotation;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool resetCenterOfMass;

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xCEABF0", Offset = "0xCEABF0", VA = "0xCEABF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xCEAC60", Offset = "0xCEAC60", VA = "0xCEAC60")]
		public RigidBodyResetter()
		{
		}
	}
}
namespace Shared.Pathfinding
{
	[Token(Token = "0x200009A")]
	public static class Algorithms
	{
		[Token(Token = "0x200009B")]
		public static class Dijkstra
		{
			[Token(Token = "0x200009C")]
			private struct PathfindingNode<TNode>
			{
				[Token(Token = "0x400033C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TNode node;

				[Token(Token = "0x400033D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TNode parent;

				[Token(Token = "0x400033E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float score;

				[Token(Token = "0x6000444")]
				public PathfindingNode(TNode node, TNode parent, float score)
				{
				}
			}

			[Token(Token = "0x200009D")]
			public struct PathfindingResult<TNode>
			{
				[Token(Token = "0x400033F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AFAE4", Offset = "0x8AFAE4")]
				private IReadOnlyList<TNode> <Nodes>k__BackingField;

				[Token(Token = "0x4000340")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AFAF4", Offset = "0x8AFAF4")]
				private IReadOnlyDictionary<TNode, TNode> <ParentNodes>k__BackingField;

				[Token(Token = "0x170000C3")]
				public IReadOnlyList<TNode> Nodes
				{
					[Token(Token = "0x6000445")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD328", Offset = "0x8CD328")]
					readonly get
					{
						return null;
					}
					[Token(Token = "0x6000446")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD360", Offset = "0x8CD360")]
					private set
					{
					}
				}

				[Token(Token = "0x170000C4")]
				public IReadOnlyDictionary<TNode, TNode> ParentNodes
				{
					[Token(Token = "0x6000447")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD370", Offset = "0x8CD370")]
					readonly get
					{
						return null;
					}
					[Token(Token = "0x6000448")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3A8", Offset = "0x8CD3A8")]
					private set
					{
					}
				}

				[Token(Token = "0x170000C5")]
				public bool IsValid
				{
					[Token(Token = "0x6000449")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x600044A")]
				public PathfindingResult(IReadOnlyList<TNode> nodes, IReadOnlyDictionary<TNode, TNode> parentNodes)
				{
				}

				[Token(Token = "0x600044B")]
				public bool HasNode(TNode node)
				{
					return default(bool);
				}

				[Token(Token = "0x600044C")]
				public bool TryGetParentNode(TNode node, out TNode parent)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000443")]
			public static PathfindingResult<TNode> Search<TNode, TEdge>(TNode start, Func<TNode, IEnumerable<TEdge>> getEdges, Func<TEdge, TNode> getNode, Func<TNode, TNode, TEdge, float> getScore)
			{
				return default(PathfindingResult<TNode>);
			}
		}

		[Token(Token = "0x200009E")]
		public static class AStar
		{
			[Token(Token = "0x200009F")]
			private struct PathfindingNode<TNode>
			{
				[Token(Token = "0x4000341")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TNode node;

				[Token(Token = "0x4000342")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TNode parent;

				[Token(Token = "0x4000343")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float gScore;

				[Token(Token = "0x4000344")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float fScore;

				[Token(Token = "0x600044F")]
				public PathfindingNode(TNode node, TNode parent, float gScore, float fScore)
				{
				}
			}

			[Token(Token = "0x20000A0")]
			public struct PathfindingResult<TNode>
			{
				[Token(Token = "0x4000345")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AFB04", Offset = "0x8AFB04")]
				private IReadOnlyList<TNode> <PathNodes>k__BackingField;

				[Token(Token = "0x170000C6")]
				public IReadOnlyList<TNode> PathNodes
				{
					[Token(Token = "0x6000450")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3B8", Offset = "0x8CD3B8")]
					readonly get
					{
						return null;
					}
					[Token(Token = "0x6000451")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3F0", Offset = "0x8CD3F0")]
					private set
					{
					}
				}

				[Token(Token = "0x170000C7")]
				public bool IsValid
				{
					[Token(Token = "0x6000452")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170000C8")]
				public int Count
				{
					[Token(Token = "0x6000453")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6000454")]
				public PathfindingResult(IReadOnlyList<TNode> pathNodes)
				{
				}

				[Token(Token = "0x6000455")]
				public TNode GetNode(int index)
				{
					return (TNode)null;
				}
			}

			[Token(Token = "0x600044D")]
			public static PathfindingResult<TNode> Search<TNode, TEdge>(TNode start, TNode goal, Func<TNode, IEnumerable<TEdge>> getEdges, Func<TEdge, TNode> getNode, Func<TNode, TNode, TEdge, float> getScore, Func<TNode, TNode, float> heuristic)
			{
				return default(PathfindingResult<TNode>);
			}

			[Token(Token = "0x600044E")]
			private static PathfindingResult<TNode> ReconstructPath<TNode>(Dictionary<TNode, PathfindingNode<TNode>> pathNodes, PathfindingNode<TNode> node)
			{
				return default(PathfindingResult<TNode>);
			}
		}
	}
}
namespace Shared.Object
{
	[Token(Token = "0x20000A1")]
	public class DisableObjectGroup : MonoBehaviour
	{
		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] objects;

		[Token(Token = "0x6000456")]
		[Address(RVA = "0xC4F800", Offset = "0xC4F800", VA = "0xC4F800")]
		public void DisableObjects()
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0xC4F870", Offset = "0xC4F870", VA = "0xC4F870")]
		public DisableObjectGroup()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	public class MonoBehaviourEvents : MonoBehaviour
	{
		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onEnable;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onDisable;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onDestroy;

		[Token(Token = "0x14000008")]
		public event Action<GameObject> OnGameObjectEnable
		{
			[Token(Token = "0x6000458")]
			[Address(RVA = "0x24870F4", Offset = "0x24870F4", VA = "0x24870F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD400", Offset = "0x8CD400")]
			add
			{
			}
			[Token(Token = "0x6000459")]
			[Address(RVA = "0x2487194", Offset = "0x2487194", VA = "0x2487194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD410", Offset = "0x8CD410")]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event Action<GameObject> OnGameObjectDisable
		{
			[Token(Token = "0x600045A")]
			[Address(RVA = "0x2487234", Offset = "0x2487234", VA = "0x2487234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD420", Offset = "0x8CD420")]
			add
			{
			}
			[Token(Token = "0x600045B")]
			[Address(RVA = "0x24872D4", Offset = "0x24872D4", VA = "0x24872D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD430", Offset = "0x8CD430")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event Action<GameObject> OnGameObjectDestroy
		{
			[Token(Token = "0x600045C")]
			[Address(RVA = "0x2487374", Offset = "0x2487374", VA = "0x2487374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD440", Offset = "0x8CD440")]
			add
			{
			}
			[Token(Token = "0x600045D")]
			[Address(RVA = "0x2487414", Offset = "0x2487414", VA = "0x2487414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD450", Offset = "0x8CD450")]
			remove
			{
			}
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x24874B4", Offset = "0x24874B4", VA = "0x24874B4")]
		public static MonoBehaviourEvents GetOrCreate(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x2487548", Offset = "0x2487548", VA = "0x2487548")]
		public static bool TryGet(GameObject obj, out MonoBehaviourEvents events)
		{
			return default(bool);
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x24875AC", Offset = "0x24875AC", VA = "0x24875AC")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x248762C", Offset = "0x248762C", VA = "0x248762C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x24876AC", Offset = "0x24876AC", VA = "0x24876AC")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x248772C", Offset = "0x248772C", VA = "0x248772C")]
		public MonoBehaviourEvents()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	public abstract class MonoBehaviourSingleton<T> : MonoBehaviour where T : MonoBehaviourSingleton<T>
	{
		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AFB84", Offset = "0x8AFB84")]
		private static T <Instance>k__BackingField;

		[Token(Token = "0x170000C9")]
		public static T Instance
		{
			[Token(Token = "0x6000464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD460", Offset = "0x8CD460")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000465")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD470", Offset = "0x8CD470")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public static bool HasInstance
		{
			[Token(Token = "0x6000466")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000467")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000468")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000469")]
		protected MonoBehaviourSingleton()
		{
		}
	}
	[Token(Token = "0x20000A4")]
	public class RandomComponentEnabler : MonoBehaviour
	{
		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Behaviour affectedComponent;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8AFBA4", Offset = "0x8AFBA4")]
		[SerializeField]
		private float chance;

		[Token(Token = "0x600046B")]
		[Address(RVA = "0xCEA044", Offset = "0xCEA044", VA = "0xCEA044")]
		protected void Start()
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xCEA088", Offset = "0xCEA088", VA = "0xCEA088")]
		public RandomComponentEnabler()
		{
		}
	}
	[Token(Token = "0x20000A5")]
	public class UnityEventDelayChain : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000A6")]
		public struct ChainGroup
		{
			[Token(Token = "0x4000356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4000357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool loop;

			[Token(Token = "0x4000358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ChainLink[] chainLinks;
		}

		[Serializable]
		[Token(Token = "0x20000A7")]
		public struct ChainLink
		{
			[Token(Token = "0x4000359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x400035A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 delaySecondsRange;

			[Token(Token = "0x400035B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool canCancel;

			[Token(Token = "0x400035C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent action;
		}

		[Token(Token = "0x20000A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8468", Offset = "0x8A8468")]
		private sealed class <RunChain>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400035D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400035E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400035F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEventDelayChain <>4__this;

			[Token(Token = "0x4000360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x4000361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ChainGroup <group>5__3;

			[Token(Token = "0x4000362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <j>5__4;

			[Token(Token = "0x4000363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private ChainLink <link>5__5;

			[Token(Token = "0x170000CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000478")]
				[Address(RVA = "0xEA2730", Offset = "0xEA2730", VA = "0xEA2730", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600047A")]
				[Address(RVA = "0xEA2778", Offset = "0xEA2778", VA = "0xEA2778", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000475")]
			[Address(RVA = "0xEA242C", Offset = "0xEA242C", VA = "0xEA242C")]
			[DebuggerHidden]
			public <RunChain>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000476")]
			[Address(RVA = "0xEA2458", Offset = "0xEA2458", VA = "0xEA2458", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000477")]
			[Address(RVA = "0xEA245C", Offset = "0xEA245C", VA = "0xEA245C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000479")]
			[Address(RVA = "0xEA2738", Offset = "0xEA2738", VA = "0xEA2738", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool startOnEnable;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool destroyOnFinish;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float destroyOnFinishDelay;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ChainGroup[] chain;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine chainRoutine;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool cancelled;

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x10B8A18", Offset = "0x10B8A18", VA = "0x10B8A18")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x10B8A7C", Offset = "0x10B8A7C", VA = "0x10B8A7C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x10B8AC8", Offset = "0x10B8AC8", VA = "0x10B8AC8")]
		public bool TryGetDuration(out float duration, bool includeFinishDelay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x10B8A28", Offset = "0x10B8A28", VA = "0x10B8A28")]
		public void StartChain()
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x10B8A80", Offset = "0x10B8A80", VA = "0x10B8A80")]
		public void StopChain()
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x10B8C08", Offset = "0x10B8C08", VA = "0x10B8C08")]
		public void CancelChain()
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x10B8B90", Offset = "0x10B8B90", VA = "0x10B8B90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CD480", Offset = "0x8CD480")]
		private IEnumerator RunChain()
		{
			return null;
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x10B8C1C", Offset = "0x10B8C1C", VA = "0x10B8C1C")]
		public UnityEventDelayChain()
		{
		}
	}
}
namespace Shared.Buckets
{
	[Token(Token = "0x20000A9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A8478", Offset = "0x8A8478")]
	public class PrefabBucket : ScriptableObject
	{
		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] prefabs;

		[Token(Token = "0x600047B")]
		[Address(RVA = "0xCE585C", Offset = "0xCE585C", VA = "0xCE585C")]
		public bool IsInBucket(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xCE58F0", Offset = "0xCE58F0", VA = "0xCE58F0")]
		public bool TryGet(string name, out GameObject prefab)
		{
			return default(bool);
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0xCE59B4", Offset = "0xCE59B4", VA = "0xCE59B4")]
		public PrefabBucket()
		{
		}
	}
}
namespace Shared.AssetManagement
{
	[Token(Token = "0x20000AA")]
	public interface IAddressableAssetDependency
	{
		[Token(Token = "0x600047E")]
		void CollectAddressableDependencies(AddressableAssetDependencies dependencies);
	}
	[Token(Token = "0x20000AB")]
	public class AddressableAssetDependency<T> : AddressableAssetDependency where T : UnityEngine.Object
	{
		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AssetReferenceT<T> assetReference;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T asset;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AsyncOperationHandle<T> handle;

		[Token(Token = "0x1400000B")]
		public event Action<T> OnLoadAssetComplete
		{
			[Token(Token = "0x600047F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD530", Offset = "0x8CD530")]
			add
			{
			}
			[Token(Token = "0x6000480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD540", Offset = "0x8CD540")]
			remove
			{
			}
		}

		[Token(Token = "0x6000481")]
		private AddressableAssetDependency()
		{
		}

		[Token(Token = "0x6000482")]
		private AddressableAssetDependency(AssetReferenceT<T> assetReference)
		{
		}

		[Token(Token = "0x6000483")]
		public static AddressableAssetDependency<T> GetOrCreate(ref AddressableAssetDependency<T> dependency, AssetReferenceT<T> assetReference)
		{
			return null;
		}

		[Token(Token = "0x6000484")]
		public static AddressableAssetDependency<T> GetOrCreateEmpty(ref AddressableAssetDependency<T> dependency)
		{
			return null;
		}

		[Token(Token = "0x6000485")]
		public static bool HasAsset(AddressableAssetDependency<T> dependency)
		{
			return default(bool);
		}

		[Token(Token = "0x6000486")]
		public static bool TryGetAsset(AddressableAssetDependency<T> dependency, out T asset)
		{
			return default(bool);
		}

		[Token(Token = "0x6000487")]
		public override AsyncOperationHandle LoadAsync()
		{
			return default(AsyncOperationHandle);
		}

		[Token(Token = "0x6000488")]
		public override void Unload()
		{
		}

		[Token(Token = "0x6000489")]
		private void OnComplete(AsyncOperationHandle<T> handle)
		{
		}

		[Token(Token = "0x600048A")]
		public override void TriggerLoadComplete()
		{
		}
	}
	[Token(Token = "0x20000AC")]
	public abstract class AddressableAssetDependency
	{
		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AFC44", Offset = "0x8AFC44")]
		private bool <AssetLoading>k__BackingField;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AFC54", Offset = "0x8AFC54")]
		private bool <AssetLoaded>k__BackingField;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AFC64", Offset = "0x8AFC64")]
		private object <Asset>k__BackingField;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool loadCompleteCalled;

		[Token(Token = "0x170000CD")]
		public bool AssetLoading
		{
			[Token(Token = "0x600048B")]
			[Address(RVA = "0xEE4604", Offset = "0xEE4604", VA = "0xEE4604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD550", Offset = "0x8CD550")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600048C")]
			[Address(RVA = "0xEE460C", Offset = "0xEE460C", VA = "0xEE460C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD560", Offset = "0x8CD560")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public bool AssetLoaded
		{
			[Token(Token = "0x600048D")]
			[Address(RVA = "0xEE4618", Offset = "0xEE4618", VA = "0xEE4618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD570", Offset = "0x8CD570")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600048E")]
			[Address(RVA = "0xEE4620", Offset = "0xEE4620", VA = "0xEE4620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD580", Offset = "0x8CD580")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public object Asset
		{
			[Token(Token = "0x600048F")]
			[Address(RVA = "0xEE462C", Offset = "0xEE462C", VA = "0xEE462C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD590", Offset = "0x8CD590")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000490")]
			[Address(RVA = "0xEE4634", Offset = "0xEE4634", VA = "0xEE4634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5A0", Offset = "0x8CD5A0")]
			protected set
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event Action OnLoadComplete
		{
			[Token(Token = "0x6000491")]
			[Address(RVA = "0xEE463C", Offset = "0xEE463C", VA = "0xEE463C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5B0", Offset = "0x8CD5B0")]
			add
			{
			}
			[Token(Token = "0x6000492")]
			[Address(RVA = "0xEE46DC", Offset = "0xEE46DC", VA = "0xEE46DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5C0", Offset = "0x8CD5C0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000493")]
		public abstract AsyncOperationHandle LoadAsync();

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xEE477C", Offset = "0xEE477C", VA = "0xEE477C", Slot = "5")]
		public virtual void Unload()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xEE4784", Offset = "0xEE4784", VA = "0xEE4784", Slot = "6")]
		public virtual void TriggerLoadComplete()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xEE47B4", Offset = "0xEE47B4", VA = "0xEE47B4")]
		protected AddressableAssetDependency()
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public class AddressableAssetDependencies
	{
		[Token(Token = "0x20000AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A84E4", Offset = "0x8A84E4")]
		private sealed class <LoadCoroutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AddressableAssetDependencies <>4__this;

			[Token(Token = "0x4000379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AddressableAssetDependency <dependency>5__2;

			[Token(Token = "0x170000D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60004AC")]
				[Address(RVA = "0xE045A8", Offset = "0xE045A8", VA = "0xE045A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60004AE")]
				[Address(RVA = "0xE045F0", Offset = "0xE045F0", VA = "0xE045F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004A9")]
			[Address(RVA = "0xE04344", Offset = "0xE04344", VA = "0xE04344")]
			[DebuggerHidden]
			public <LoadCoroutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60004AA")]
			[Address(RVA = "0xE04370", Offset = "0xE04370", VA = "0xE04370", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004AB")]
			[Address(RVA = "0xE04374", Offset = "0xE04374", VA = "0xE04374", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60004AD")]
			[Address(RVA = "0xE045B0", Offset = "0xE045B0", VA = "0xE045B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<AddressableAssetDependency> dependencies;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MonoBehaviour loadRoutineRunner;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine loadRoutine;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int loadIndex;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AFCA4", Offset = "0x8AFCA4")]
		private bool <AllowLoad>k__BackingField;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<List<IAddressableAssetDependency>> gameObjectDependencies;

		[Token(Token = "0x170000D0")]
		public int DepencencyCount
		{
			[Token(Token = "0x600049B")]
			[Address(RVA = "0xEE3DFC", Offset = "0xEE3DFC", VA = "0xEE3DFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D1")]
		public bool HasDepencencies
		{
			[Token(Token = "0x600049C")]
			[Address(RVA = "0xEE3E4C", Offset = "0xEE3E4C", VA = "0xEE3E4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D2")]
		public bool AllowLoad
		{
			[Token(Token = "0x600049D")]
			[Address(RVA = "0xEE3EA4", Offset = "0xEE3EA4", VA = "0xEE3EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD610", Offset = "0x8CD610")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600049E")]
			[Address(RVA = "0xEE3EAC", Offset = "0xEE3EAC", VA = "0xEE3EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD620", Offset = "0x8CD620")]
			set
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event Action OnLoadComplete
		{
			[Token(Token = "0x6000497")]
			[Address(RVA = "0xEE3B7C", Offset = "0xEE3B7C", VA = "0xEE3B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5D0", Offset = "0x8CD5D0")]
			add
			{
			}
			[Token(Token = "0x6000498")]
			[Address(RVA = "0xEE3C1C", Offset = "0xEE3C1C", VA = "0xEE3C1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5E0", Offset = "0x8CD5E0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event Action<AddressableAssetDependency> OnAssetLoadComplete
		{
			[Token(Token = "0x6000499")]
			[Address(RVA = "0xEE3CBC", Offset = "0xEE3CBC", VA = "0xEE3CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5F0", Offset = "0x8CD5F0")]
			add
			{
			}
			[Token(Token = "0x600049A")]
			[Address(RVA = "0xEE3D5C", Offset = "0xEE3D5C", VA = "0xEE3D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD600", Offset = "0x8CD600")]
			remove
			{
			}
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xEE3EB8", Offset = "0xEE3EB8", VA = "0xEE3EB8")]
		public Coroutine TryLoadCoroutine(MonoBehaviour coroutineRunner, int thresholdCount = -1)
		{
			return null;
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xEE3FF8", Offset = "0xEE3FF8", VA = "0xEE3FF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CD630", Offset = "0x8CD630")]
		private IEnumerator LoadCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xEE4070", Offset = "0xEE4070", VA = "0xEE4070")]
		public void Unload()
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xEE41D4", Offset = "0xEE41D4", VA = "0xEE41D4")]
		public void AddDepencency(AddressableAssetDependency dependency)
		{
		}

		[Token(Token = "0x60004A3")]
		public void AddDepencency<T>(IEnumerable<T> dependencies) where T : AddressableAssetDependency
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xEE42A0", Offset = "0xEE42A0", VA = "0xEE42A0")]
		public void CollectDependencies(IAddressableAssetDependency dependency)
		{
		}

		[Token(Token = "0x60004A5")]
		public void CollectDependencies<T>(IEnumerable<T> dependencies)
		{
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xEE4358", Offset = "0xEE4358", VA = "0xEE4358")]
		public void CollectDependencies(GameObject obj, bool includeChildren = false)
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xEE4560", Offset = "0xEE4560", VA = "0xEE4560")]
		public AddressableAssetDependencies()
		{
		}
	}
}
namespace Util.Buckets
{
	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A84F4", Offset = "0x8A84F4")]
	public class FontBucket : ScriptableObject
	{
		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizationFontData[] _fontData;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, TMP_FontAsset> _fontsDictionary;

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xC5CEA8", Offset = "0xC5CEA8", VA = "0xC5CEA8")]
		public void Awake()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xC5CEAC", Offset = "0xC5CEAC", VA = "0xC5CEAC")]
		private void Setup()
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xC5CFD0", Offset = "0xC5CFD0", VA = "0xC5CFD0")]
		private int GetKey(Language language, FontTypeEnum size, FontVariantEnum variant)
		{
			return default(int);
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xC5CFDC", Offset = "0xC5CFDC", VA = "0xC5CFDC")]
		public bool TryGetFont(Language language, FontTypeEnum size, FontVariantEnum variant, out TMP_FontAsset font)
		{
			return default(bool);
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xC5D07C", Offset = "0xC5D07C", VA = "0xC5D07C")]
		public FontBucket()
		{
		}
	}
	[Token(Token = "0x20000B0")]
	public interface IBucket<T>
	{
		[Token(Token = "0x60004B4")]
		bool TryGet(string assetId, out T value);

		[Token(Token = "0x60004B5")]
		bool TryGet(int hashId, out T value);
	}
	[Serializable]
	[Token(Token = "0x20000B1")]
	public class BucketData<T>
	{
		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Id;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Asset;

		[Token(Token = "0x60004B6")]
		public BucketData()
		{
		}
	}
	[Token(Token = "0x20000B2")]
	public abstract class BucketBase<T> : ScriptableObject, IBucket<T>
	{
		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected BucketData<T>[] data;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Dictionary<int, T> dictionary;

		[Token(Token = "0x60004B7")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004B8")]
		private void UpdateData()
		{
		}

		[Token(Token = "0x60004B9")]
		public bool TryGet(int hashId, out T value)
		{
			return default(bool);
		}

		[Token(Token = "0x60004BA")]
		public bool TryGet(string assetId, out T value)
		{
			return default(bool);
		}

		[Token(Token = "0x60004BB")]
		protected BucketBase()
		{
		}
	}
	[Token(Token = "0x20000B3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A8560", Offset = "0x8A8560")]
	public class SpriteBucket : BucketBase<Sprite>
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xF23BF0", Offset = "0xF23BF0", VA = "0xF23BF0")]
		public SpriteBucket()
		{
		}
	}
}
namespace Localization
{
	[Serializable]
	[Token(Token = "0x20000B4")]
	public class LocalizationFontData
	{
		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string FontName;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_FontAsset Font;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FontTypeEnum Size;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FontVariantEnum Variant;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Language Language;

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xD5C348", Offset = "0xD5C348", VA = "0xD5C348")]
		public void Setup()
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xD5C4A4", Offset = "0xD5C4A4", VA = "0xD5C4A4")]
		public LocalizationFontData()
		{
		}
	}
	[Token(Token = "0x20000B5")]
	public class FontLocalizer : GameMonoBehaviour
	{
		[Token(Token = "0x20000B6")]
		public enum LocalizerSetupMode
		{
			[Token(Token = "0x400038B")]
			OnGameSetupAsync,
			[Token(Token = "0x400038C")]
			OnEnable
		}

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private LocalizerSetupMode setupMode;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FontTypeEnum font;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private FontVariantEnum variant;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFD14", Offset = "0x8AFD14")]
		[SerializeField]
		protected TMP_Text text;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isTextSetUp;

		[Token(Token = "0x170000D5")]
		public FontTypeEnum Font
		{
			[Token(Token = "0x60004BF")]
			[Address(RVA = "0xC5D100", Offset = "0xC5D100", VA = "0xC5D100")]
			get
			{
				return default(FontTypeEnum);
			}
		}

		[Token(Token = "0x170000D6")]
		public FontVariantEnum Variant
		{
			[Token(Token = "0x60004C0")]
			[Address(RVA = "0xC5D108", Offset = "0xC5D108", VA = "0xC5D108")]
			get
			{
				return default(FontVariantEnum);
			}
		}

		[Token(Token = "0x170000D7")]
		public bool IsTextSetUp
		{
			[Token(Token = "0x60004C1")]
			[Address(RVA = "0xC5D110", Offset = "0xC5D110", VA = "0xC5D110")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D8")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x60004C2")]
			[Address(RVA = "0xC5D118", Offset = "0xC5D118", VA = "0xC5D118", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xC5D120", Offset = "0xC5D120", VA = "0xC5D120")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xC5D360", Offset = "0xC5D360", VA = "0xC5D360", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xC5D134", Offset = "0xC5D134", VA = "0xC5D134")]
		public void Setup()
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xC5D378", Offset = "0xC5D378", VA = "0xC5D378", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xC5D49C", Offset = "0xC5D49C", VA = "0xC5D49C")]
		private void OnLanguageChangeCallback()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xC5D4AC", Offset = "0xC5D4AC", VA = "0xC5D4AC", Slot = "38")]
		protected virtual void Localize()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xC5D538", Offset = "0xC5D538", VA = "0xC5D538")]
		public static bool TrySetup(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xC5D5BC", Offset = "0xC5D5BC", VA = "0xC5D5BC")]
		public FontLocalizer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B7")]
	public struct LocalizationColor
	{
		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string parameter;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder ColorBuilder;

		[Token(Token = "0x170000D9")]
		public bool IsValid
		{
			[Token(Token = "0x60004CB")]
			[Address(RVA = "0xD5C0D4", Offset = "0xD5C0D4", VA = "0xD5C0D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xD5C0F8", Offset = "0xD5C0F8", VA = "0xD5C0F8")]
		public LocalizationColor(string parameter)
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xD5C100", Offset = "0xD5C100", VA = "0xD5C100")]
		public bool TryGetColor(out Color color)
		{
			return default(bool);
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xD5C270", Offset = "0xD5C270", VA = "0xD5C270")]
		public Color GetColorOrDefault(Color defaultColor)
		{
			return default(Color);
		}
	}
	[Serializable]
	[Token(Token = "0x20000B8")]
	public class SerializedLocalizationData
	{
		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		private string dataName;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public FileKey Key;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8AFDB8", Offset = "0x8AFDB8")]
		public string Text;

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xE153B0", Offset = "0xE153B0", VA = "0xE153B0")]
		public SerializedLocalizationData(FileKey key, string value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B9")]
	public struct LocalizationKey
	{
		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		[SerializeField]
		private string entryName;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int File;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Key;

		[Token(Token = "0x170000DA")]
		public bool IsValid
		{
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0xD5C8D4", Offset = "0xD5C8D4", VA = "0xD5C8D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xD5C7F8", Offset = "0xD5C7F8", VA = "0xD5C7F8")]
		public LocalizationKey(int file, int key)
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xD5C8E4", Offset = "0xD5C8E4", VA = "0xD5C8E4")]
		public void Setup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BA")]
	public struct FileKey
	{
		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public int File;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Key;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Language Languge;

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xC5B63C", Offset = "0xC5B63C", VA = "0xC5B63C")]
		public FileKey(int file, int key, Language langauge)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xC5B648", Offset = "0xC5B648", VA = "0xC5B648")]
		public bool Equals(FileKey key)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000BB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A85CC", Offset = "0x8A85CC")]
	public class LocalizationHolderObj : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20000BC")]
		private class FileWrapper
		{
			[Token(Token = "0x400039F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			private string elementName;

			[Token(Token = "0x40003A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int File;

			[Token(Token = "0x40003A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextAsset FileReference;

			[Token(Token = "0x40003A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<SerializedLocalizationData> FileData;

			[Token(Token = "0x60004DC")]
			[Address(RVA = "0xEDA8A0", Offset = "0xEDA8A0", VA = "0xEDA8A0")]
			public FileWrapper(int file, TextAsset fileReference)
			{
			}

			[Token(Token = "0x60004DD")]
			[Address(RVA = "0xEDA948", Offset = "0xEDA948", VA = "0xEDA948")]
			public void Setup()
			{
			}
		}

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextAsset[] localizationFiles;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFE28", Offset = "0x8AFE28")]
		private List<FileWrapper> localizedData;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFE74", Offset = "0x8AFE74")]
		private string exportPath;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool exportOnlyNonTranslatedKeys;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Language[] exportIncludeLanguages;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Language[] exportExcludeLanguages;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AFEF0", Offset = "0x8AFEF0")]
		private Dictionary<int, Dictionary<FileKey, string>> <LocalizedStrings>k__BackingField;

		[Token(Token = "0x170000DB")]
		public IReadOnlyList<TextAsset> LocalizationFiles
		{
			[Token(Token = "0x60004D6")]
			[Address(RVA = "0xD5C4AC", Offset = "0xD5C4AC", VA = "0xD5C4AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public Dictionary<int, Dictionary<FileKey, string>> LocalizedStrings
		{
			[Token(Token = "0x60004D7")]
			[Address(RVA = "0xD5C4B4", Offset = "0xD5C4B4", VA = "0xD5C4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD6E0", Offset = "0x8CD6E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D8")]
			[Address(RVA = "0xD5C4BC", Offset = "0xD5C4BC", VA = "0xD5C4BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD6F0", Offset = "0x8CD6F0")]
			private set
			{
			}
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xD5C4C4", Offset = "0xD5C4C4", VA = "0xD5C4C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xD5C4C8", Offset = "0xD5C4C8", VA = "0xD5C4C8")]
		private void CreateDictionary()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xD5C7F0", Offset = "0xD5C7F0", VA = "0xD5C7F0")]
		public LocalizationHolderObj()
		{
		}
	}
	[Token(Token = "0x20000BD")]
	public enum FontTypeEnum
	{
		[Token(Token = "0x40003A4")]
		Orbitron,
		[Token(Token = "0x40003A5")]
		OrbitronBlack,
		[Token(Token = "0x40003A6")]
		CenturyGothicBold
	}
	[Token(Token = "0x20000BE")]
	public enum FontVariantEnum
	{
		[Token(Token = "0x40003A8")]
		Default,
		[Token(Token = "0x40003A9")]
		NoDepthTest
	}
	[Token(Token = "0x20000BF")]
	public enum Language
	{
		[Token(Token = "0x40003AB")]
		English = 10,
		[Token(Token = "0x40003AC")]
		French = 14,
		[Token(Token = "0x40003AD")]
		German = 15,
		[Token(Token = "0x40003AE")]
		Spanish = 34,
		[Token(Token = "0x40003AF")]
		Japanese = 22,
		[Token(Token = "0x40003B0")]
		Korean = 23,
		[Token(Token = "0x40003B1")]
		ChineseSimplified = 40,
		[Token(Token = "0x40003B2")]
		XDebug = 101
	}
	[Token(Token = "0x20000C0")]
	public class LocalizationManager : MonoBehaviourSingleton<LocalizationManager>, IAsyncSystemSetup
	{
		[Token(Token = "0x20000C1")]
		public delegate void OnLanguageChangeDelegate();

		[Token(Token = "0x20000C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8638", Offset = "0x8A8638")]
		private sealed class <Initialzie>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40003C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40003C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizationManager <>4__this;

			[Token(Token = "0x40003C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperationHandle<LocalizationHolderObj> <handle>5__2;

			[Token(Token = "0x40003C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncOperationHandle<FontBucket> <bucketHandle>5__3;

			[Token(Token = "0x40003C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private AsyncOperationHandle<LocalizationSpliceParameters> <spliceHandle>5__4;

			[Token(Token = "0x170000DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000500")]
				[Address(RVA = "0xEDAF5C", Offset = "0xEDAF5C", VA = "0xEDAF5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000502")]
				[Address(RVA = "0xEDAFA4", Offset = "0xEDAFA4", VA = "0xEDAFA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60004FD")]
			[Address(RVA = "0xEDA984", Offset = "0xEDA984", VA = "0xEDA984")]
			[DebuggerHidden]
			public <Initialzie>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60004FE")]
			[Address(RVA = "0xEDA9B0", Offset = "0xEDA9B0", VA = "0xEDA9B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60004FF")]
			[Address(RVA = "0xEDA9B4", Offset = "0xEDA9B4", VA = "0xEDA9B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000501")]
			[Address(RVA = "0xEDAF64", Offset = "0xEDAF64", VA = "0xEDAF64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40003B3")]
		public const string DEFAULT_VALUE_TEXT_PARAMETER = "value";

		[Token(Token = "0x40003B4")]
		private const string NUMERIC_FORMAT_INT = "N0";

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string holderAssetPath;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string fontBucketAssetPath;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string spliceParametersAssetPath;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Language currentLanguage;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LocalizationHolderObj holder;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FontBucket fontBucket;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LocalizationSpliceParameters spliceParameters;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<AsyncOperationHandle> assetHandles;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool localizationLoaded;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Dictionary<string, string>> textParameterPool;

		[Token(Token = "0x170000DD")]
		public bool LocalizationLoaded
		{
			[Token(Token = "0x60004DE")]
			[Address(RVA = "0xD5C9A8", Offset = "0xD5C9A8", VA = "0xD5C9A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DE")]
		public Language CurrentLanguage
		{
			[Token(Token = "0x60004DF")]
			[Address(RVA = "0xD5C9B0", Offset = "0xD5C9B0", VA = "0xD5C9B0")]
			get
			{
				return default(Language);
			}
		}

		[Token(Token = "0x1400000F")]
		public event OnLanguageChangeDelegate OnLanguageChange
		{
			[Token(Token = "0x60004E0")]
			[Address(RVA = "0xD5C9B8", Offset = "0xD5C9B8", VA = "0xD5C9B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD700", Offset = "0x8CD700")]
			add
			{
			}
			[Token(Token = "0x60004E1")]
			[Address(RVA = "0xD5CA58", Offset = "0xD5CA58", VA = "0xD5CA58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD710", Offset = "0x8CD710")]
			remove
			{
			}
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xD5CAF8", Offset = "0xD5CAF8", VA = "0xD5CAF8", Slot = "6")]
		public YieldInstruction OnSetupSystemAsync()
		{
			return null;
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xD5CB24", Offset = "0xD5CB24", VA = "0xD5CB24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CD720", Offset = "0x8CD720")]
		public IEnumerator Initialzie()
		{
			return null;
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xD5CB9C", Offset = "0xD5CB9C", VA = "0xD5CB9C", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xD5CD5C", Offset = "0xD5CD5C", VA = "0xD5CD5C")]
		public static Language ConvertLanguage(SystemLanguage systemLanguage)
		{
			return default(Language);
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xD5CDB8", Offset = "0xD5CDB8", VA = "0xD5CDB8")]
		public static string GetLanguageCultureCode(Language language)
		{
			return null;
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xD5CEDC", Offset = "0xD5CEDC", VA = "0xD5CEDC")]
		public static void ChangeLanguage(Language newLanguage)
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xD5D1A4", Offset = "0xD5D1A4", VA = "0xD5D1A4")]
		public static string FormatLargeInt(int value)
		{
			return null;
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xD5D1CC", Offset = "0xD5D1CC", VA = "0xD5D1CC")]
		public static string FormatLargeLong(long value)
		{
			return null;
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xD5D1F4", Offset = "0xD5D1F4", VA = "0xD5D1F4")]
		public static Dictionary<string, string> GetPooledTextParameters()
		{
			return null;
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xD5D37C", Offset = "0xD5D37C", VA = "0xD5D37C")]
		public static Dictionary<string, string> GetPooledTextParametersWithValue(string defaultValueParameter)
		{
			return null;
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xD5D3C8", Offset = "0xD5D3C8", VA = "0xD5D3C8")]
		public static Dictionary<string, string> GetPooledTextParametersWithValue(string parameterName, string parameterValue)
		{
			return null;
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xD5D460", Offset = "0xD5D460", VA = "0xD5D460")]
		public static void ReturnPooledTextParameters(IReadOnlyDictionary<string, string> parameters)
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xD5D590", Offset = "0xD5D590", VA = "0xD5D590")]
		public static void TryReturnPooledTextParameters(IReadOnlyDictionary<string, string> parameters, bool condition)
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xD5C264", Offset = "0xD5C264", VA = "0xD5C264")]
		public static string ParameterizeString(string text)
		{
			return null;
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xD5D59C", Offset = "0xD5D59C", VA = "0xD5D59C")]
		public static string ParameterizeString(string text, IReadOnlyDictionary<string, string> parameters, bool returnParametersToPool = false)
		{
			return null;
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xD5D78C", Offset = "0xD5D78C", VA = "0xD5D78C")]
		public static void LocalizeComponent(LocalizationKey key, TMP_Text tmpComponent, [System.Runtime.InteropServices.Optional] IReadOnlyDictionary<string, string> parameters, bool returnParametersToPool = true)
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xD5DD44", Offset = "0xD5DD44", VA = "0xD5DD44")]
		public static void LocalizeComponent(FontTypeEnum font, FontVariantEnum variant, TMP_Text tmpComponent)
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xD5DE74", Offset = "0xD5DE74", VA = "0xD5DE74")]
		public static void LocalizeComponent(LocalizationKey key, FontTypeEnum font, FontVariantEnum variant, TMP_Text tmpComponent, [System.Runtime.InteropServices.Optional] IReadOnlyDictionary<string, string> parameters, bool returnParametersToPool = true)
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xD5DFAC", Offset = "0xD5DFAC", VA = "0xD5DFAC")]
		public static bool TryGetLocalizedString(LocalizationKey key, out string localizedString)
		{
			return default(bool);
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xD5D92C", Offset = "0xD5D92C", VA = "0xD5D92C")]
		public static bool TryGetLocalizedString(LocalizationKey key, IReadOnlyDictionary<string, string> parameters, out string localizedString, bool returnParametersToPool = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xD5DC64", Offset = "0xD5DC64", VA = "0xD5DC64")]
		public static bool TryGetLocalizedFont(FontTypeEnum font, FontVariantEnum variant, out TMP_FontAsset localizedFont)
		{
			return default(bool);
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xD5DFBC", Offset = "0xD5DFBC", VA = "0xD5DFBC")]
		public static bool TryGetLocalizedFont(Language language, FontTypeEnum font, FontVariantEnum variant, out TMP_FontAsset localizedFont)
		{
			return default(bool);
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xD5E298", Offset = "0xD5E298", VA = "0xD5E298")]
		public LocalizationManager()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A8648", Offset = "0x8A8648")]
	public class LocalizationSpliceParameters : ScriptableObject
	{
		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextParameterSplicer textParameterSplicer;

		[Token(Token = "0x170000E1")]
		public TextParameterSplicer TextParameterSplicer
		{
			[Token(Token = "0x6000503")]
			[Address(RVA = "0xD5E428", Offset = "0xD5E428", VA = "0xD5E428")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xD5E430", Offset = "0xD5E430", VA = "0xD5E430")]
		public LocalizationSpliceParameters()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public class TextLocalizer : FontLocalizer
	{
		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LocalizationKey localizationKey;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextParameterSplicer.ParameterValue[] defaultParameters;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<string, string> parameters;

		[Token(Token = "0x170000E2")]
		public LocalizationKey LocalizationKey
		{
			[Token(Token = "0x6000505")]
			[Address(RVA = "0xF325BC", Offset = "0xF325BC", VA = "0xF325BC")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x170000E3")]
		public IReadOnlyDictionary<string, string> Parameters
		{
			[Token(Token = "0x6000506")]
			[Address(RVA = "0xF325C8", Offset = "0xF325C8", VA = "0xF325C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xF325D0", Offset = "0xF325D0", VA = "0xF325D0", Slot = "38")]
		protected override void Localize()
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xF32ABC", Offset = "0xF32ABC", VA = "0xF32ABC")]
		public void Localize(IReadOnlyDictionary<string, string> parameters)
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xF32AEC", Offset = "0xF32AEC", VA = "0xF32AEC")]
		public void LocalizeDefault()
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xF32AFC", Offset = "0xF32AFC", VA = "0xF32AFC")]
		public void SetKey(LocalizationKey key, [System.Runtime.InteropServices.Optional] IReadOnlyDictionary<string, string> additionalParameters)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0xF3267C", Offset = "0xF3267C", VA = "0xF3267C")]
		private void SetupParameters([System.Runtime.InteropServices.Optional] IReadOnlyDictionary<string, string> additionalParameters)
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xF32B34", Offset = "0xF32B34", VA = "0xF32B34")]
		public TextLocalizer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C5")]
	public class TextParameterSplicer
	{
		[Serializable]
		[Token(Token = "0x20000C6")]
		public struct ParameterValue
		{
			[Token(Token = "0x40003D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string parameter;

			[Token(Token = "0x40003D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string value;

			[Token(Token = "0x6000518")]
			[Address(RVA = "0xEA1198", Offset = "0xEA1198", VA = "0xEA1198")]
			public ParameterValue(string parameter, string value)
			{
			}
		}

		[Token(Token = "0x20000C7")]
		private struct DefaultValue
		{
			[Token(Token = "0x40003D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string value;

			[Token(Token = "0x40003DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool requiresNestedSplice;

			[Token(Token = "0x6000519")]
			[Address(RVA = "0xEA10E4", Offset = "0xEA10E4", VA = "0xEA10E4")]
			public DefaultValue(string value)
			{
			}
		}

		[Token(Token = "0x20000C8")]
		private struct RenameValue
		{
			[Token(Token = "0x40003DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string value;

			[Token(Token = "0x40003DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RenameType type;

			[Token(Token = "0x600051A")]
			[Address(RVA = "0xEA11CC", Offset = "0xEA11CC", VA = "0xEA11CC")]
			public RenameValue(string value, RenameType type)
			{
			}
		}

		[Token(Token = "0x20000C9")]
		private enum RenameType
		{
			[Token(Token = "0x40003DE")]
			Rename,
			[Token(Token = "0x40003DF")]
			ValueWeak,
			[Token(Token = "0x40003E0")]
			ValueStrong
		}

		[Token(Token = "0x40003CA")]
		public const string SPLICE_START_BRACKETS = "{[";

		[Token(Token = "0x40003CB")]
		public const string SPLICE_END_BRACKETS = "]}";

		[Token(Token = "0x40003CC")]
		public const char SPLICE_RENAME_START = '|';

		[Token(Token = "0x40003CD")]
		public const string SPLICE_RENAME_SPLIT = ":~=";

		[Token(Token = "0x40003CE")]
		public const char SPLICE_RENAME_SPLIT_RENAME = ':';

		[Token(Token = "0x40003CF")]
		public const char SPLICE_RENAME_SPLIT_VALUE_WEAK = '~';

		[Token(Token = "0x40003D0")]
		public const char SPLICE_RENAME_SPLIT_VALUE_STRONG = '=';

		[Token(Token = "0x40003D1")]
		public const char SPLICE_RENAME_NEXT = ',';

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ParameterValue[] defaultParameters;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, DefaultValue> defaultParametersValues;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, RenameValue> parameterRenaming;

		[NonSerialized]
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<TextParameterSplicer> nestedSplicerPool;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringBuilder builder;

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xF32E1C", Offset = "0xF32E1C", VA = "0xF32E1C")]
		public TextParameterSplicer()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xF32E24", Offset = "0xF32E24", VA = "0xF32E24")]
		private TextParameterSplicer(Dictionary<string, DefaultValue> defaultParametersValues, List<TextParameterSplicer> nestedSplicerPool)
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xF32E74", Offset = "0xF32E74", VA = "0xF32E74")]
		public string Process(string text, [System.Runtime.InteropServices.Optional] IReadOnlyDictionary<string, string> additionalParameterValues)
		{
			return null;
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xF32E7C", Offset = "0xF32E7C", VA = "0xF32E7C")]
		private string Process(string text, IReadOnlyDictionary<string, string> additionalParameterValues, IReadOnlyDictionary<string, RenameValue> inheritedParameterRenaming)
		{
			return null;
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xF33BC4", Offset = "0xF33BC4", VA = "0xF33BC4")]
		private string ProcessAndAddNested(string text, IReadOnlyDictionary<string, string> additionalParameterValues)
		{
			return null;
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xF33C10", Offset = "0xF33C10", VA = "0xF33C10")]
		private string ProcessNested(string text, IReadOnlyDictionary<string, string> additionalParameterValues)
		{
			return null;
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xF33494", Offset = "0xF33494", VA = "0xF33494")]
		private void SetupDefaultParameters()
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0xF336F8", Offset = "0xF336F8", VA = "0xF336F8")]
		private void ResetParameterRenaming(IReadOnlyDictionary<string, RenameValue> inheritedParameterRenaming)
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0xF33A24", Offset = "0xF33A24", VA = "0xF33A24")]
		private void TryAddParameterRenaming(string text, int renameStartIndex, int renameSplitIndex, int renameEndIndex, IReadOnlyDictionary<string, string> additionalParameterValues)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xF33C70", Offset = "0xF33C70", VA = "0xF33C70")]
		private TextParameterSplicer GetNestedSplicer()
		{
			return null;
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0xF33D24", Offset = "0xF33D24", VA = "0xF33D24")]
		private void ReturnNestedSplicer(TextParameterSplicer splicer)
		{
		}
	}
}
namespace Testing
{
	[Token(Token = "0x20000CA")]
	public class MoveWithVRTransform : MonoBehaviour
	{
		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform trans;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 basePosition;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastVRPlayerPosition;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8AFFB8", Offset = "0x8AFFB8")]
		public float followWeight;

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x2487C2C", Offset = "0x2487C2C", VA = "0x2487C2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x2487C7C", Offset = "0x2487C7C", VA = "0x2487C7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x2487DC0", Offset = "0x2487DC0", VA = "0x2487DC0")]
		public MoveWithVRTransform()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public class AddressablesLoadTest : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A86B4", Offset = "0x8A86B4")]
		private sealed class <>c
		{
			[Token(Token = "0x40003E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40003E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<AsyncOperationHandle<GameObject>> <>9__2_0;

			[Token(Token = "0x6000521")]
			[Address(RVA = "0xE0465C", Offset = "0xE0465C", VA = "0xE0465C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000522")]
			[Address(RVA = "0xE04664", Offset = "0xE04664", VA = "0xE04664")]
			internal void <Start>b__2_0(AsyncOperationHandle<GameObject> g)
			{
			}
		}

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetReferenceGameObject prefabRef;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int prefabAmount;

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xEE47BC", Offset = "0xEE47BC", VA = "0xEE47BC")]
		private void Start()
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xEE49BC", Offset = "0xEE49BC", VA = "0xEE49BC")]
		public AddressablesLoadTest()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A86C4", Offset = "0x8A86C4")]
	public class AnimationMovementSync : MonoBehaviour
	{
		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator localAnimator;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpaceEntity localEntity;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody localEntityRigidBody;

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xEEB970", Offset = "0xEEB970", VA = "0xEEB970")]
		private void Start()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xEEBA58", Offset = "0xEEBA58", VA = "0xEEBA58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xEEBB04", Offset = "0xEEBB04", VA = "0xEEBB04")]
		public AnimationMovementSync()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	public class DebugLagVisualizer : MonoBehaviour
	{
		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFFE0", Offset = "0x8AFFE0")]
		private Transform rotateTransform;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 rotation;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B003C", Offset = "0x8B003C")]
		[SerializeField]
		private TMP_Text fpsText;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float fpsUpdateFrequency;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float lastFpsUpdate;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double lastFrameTime;

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xC4E1D8", Offset = "0xC4E1D8", VA = "0xC4E1D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0xC4E348", Offset = "0xC4E348", VA = "0xC4E348")]
		public DebugLagVisualizer()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public class GalaxyMapCoverTest : MonoBehaviour
	{
		[Token(Token = "0x20000D0")]
		public enum obstructionAlternatives
		{
			[Token(Token = "0x40003FA")]
			synced,
			[Token(Token = "0x40003FB")]
			offSync,
			[Token(Token = "0x40003FC")]
			syncHide
		}

		[Token(Token = "0x20000D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8724", Offset = "0x8A8724")]
		private sealed class <LerpValues>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40003FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40003FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40003FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject item;

			[Token(Token = "0x4000400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GalaxyMapCoverTest <>4__this;

			[Token(Token = "0x4000401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool fadeIn;

			[Token(Token = "0x4000402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float duration;

			[Token(Token = "0x4000403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__2;

			[Token(Token = "0x170000E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000532")]
				[Address(RVA = "0xC78DB4", Offset = "0xC78DB4", VA = "0xC78DB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000534")]
				[Address(RVA = "0xC78DFC", Offset = "0xC78DFC", VA = "0xC78DFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600052F")]
			[Address(RVA = "0xC78BD0", Offset = "0xC78BD0", VA = "0xC78BD0")]
			[DebuggerHidden]
			public <LerpValues>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000530")]
			[Address(RVA = "0xC78BFC", Offset = "0xC78BFC", VA = "0xC78BFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000531")]
			[Address(RVA = "0xC78C00", Offset = "0xC78C00", VA = "0xC78C00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000533")]
			[Address(RVA = "0xC78DBC", Offset = "0xC78DBC", VA = "0xC78DBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> meshes;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve scaleCurve;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float endSizeMultiplier;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject codeCover;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator[] animators;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public obstructionAlternatives obstrAlts;

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xC5F0C0", Offset = "0xC5F0C0", VA = "0xC5F0C0")]
		public void OnSpawn()
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0xC5F2EC", Offset = "0xC5F2EC", VA = "0xC5F2EC")]
		public void OnDespawn()
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xC5F23C", Offset = "0xC5F23C", VA = "0xC5F23C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CD7D0", Offset = "0x8CD7D0")]
		private IEnumerator LerpValues(GameObject item, float duration, bool fadeIn)
		{
			return null;
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0xC5F468", Offset = "0xC5F468", VA = "0xC5F468")]
		public void ChangeMethod(int index)
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xC5F838", Offset = "0xC5F838", VA = "0xC5F838")]
		public void TransitionInObstructors()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xC5F904", Offset = "0xC5F904", VA = "0xC5F904")]
		public void TransitionOutObstructors()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xC5F9D0", Offset = "0xC5F9D0", VA = "0xC5F9D0")]
		public GalaxyMapCoverTest()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class ManualGlobalShaderTest : MonoBehaviour
	{
		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string shaderVariable;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool enableRangeAdjustment;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 minMaxValue;

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xD61530", Offset = "0xD61530", VA = "0xD61530")]
		public void SetShaderVariable(float value)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xD615A0", Offset = "0xD615A0", VA = "0xD615A0")]
		public ManualGlobalShaderTest()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class SectorMapGeneratorTest : MonoBehaviour
	{
		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SectorMapDescription sectorMap;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sectorMapOverrideSeed;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sectorMapAttempts;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SectorTag[] inputTags;

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xD8AB94", Offset = "0xD8AB94", VA = "0xD8AB94")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xD8AC18", Offset = "0xD8AC18", VA = "0xD8AC18")]
		private void GenerateSectorMap()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xD8AD04", Offset = "0xD8AD04", VA = "0xD8AD04")]
		private void PrintSectorMapFromSeed(string seed, [System.Runtime.InteropServices.Optional] Predicate<SectorMapResult> condition)
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xD8B0C4", Offset = "0xD8B0C4", VA = "0xD8B0C4")]
		public SectorMapGeneratorTest()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public class SectorSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000D5")]
		public class Buttons
		{
			[Token(Token = "0x4000416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Toggle postProcessingActive;

			[Token(Token = "0x4000417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Button[] postProcessingMode;

			[Token(Token = "0x4000418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Toggle[] cloudButtons;

			[Token(Token = "0x4000419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Button[] colorVariationButtons;

			[Token(Token = "0x400041A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Toggle stationToggle;

			[Token(Token = "0x400041B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Slider stationSlider;

			[Token(Token = "0x400041C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Toggle dragonToggle;

			[Token(Token = "0x400041D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Slider dragonSlider;

			[Token(Token = "0x400041E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Toggle closePlanetToggle;

			[Token(Token = "0x400041F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Toggle distantPlanetToggle;

			[Token(Token = "0x4000420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Toggle ringToggle;

			[Token(Token = "0x4000421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Toggle ringHighlightToggle;

			[Token(Token = "0x4000422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Toggle[] asteroidToggle;

			[Token(Token = "0x4000423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Toggle starToggle;

			[Token(Token = "0x4000424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Toggle dustToggle;

			[Token(Token = "0x4000425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Toggle shipsToggle;

			[Token(Token = "0x4000426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Toggle publicBorderToggle;

			[Token(Token = "0x6000548")]
			[Address(RVA = "0xD818CC", Offset = "0xD818CC", VA = "0xD818CC")]
			public Buttons()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000D6")]
		public class ColorVariation
		{
			[Token(Token = "0x4000427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string title;

			[Token(Token = "0x4000428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string skyboxColorCloseVariable;

			[Token(Token = "0x4000429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color skyboxColorClose;

			[Token(Token = "0x400042A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string skyboxColorDistantVariable;

			[Token(Token = "0x400042B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color skyboxColorDistant;

			[Token(Token = "0x400042C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string closePlanetColorVariable;

			[Token(Token = "0x400042D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Color closePlanetColor;

			[Token(Token = "0x400042E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string distantPlanetColorVariable;

			[Token(Token = "0x400042F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Color distantPlanetColor;

			[Token(Token = "0x4000430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public string mainColorVariable;

			[Token(Token = "0x4000431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Color mainColor;

			[Token(Token = "0x4000432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public string secondaryColorVariable;

			[Token(Token = "0x4000433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Color secondaryColor;

			[Token(Token = "0x4000434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public string planetRimLightColorVariable;

			[Token(Token = "0x4000435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8B00F8", Offset = "0x8B00F8")]
			public Color planetRimLightColor;

			[Token(Token = "0x4000436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public string starColorVariable;

			[Token(Token = "0x4000437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Color starColor;

			[Token(Token = "0x4000438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public Color lightColor;

			[Token(Token = "0x4000439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public float lightIntensity;

			[Token(Token = "0x6000549")]
			[Address(RVA = "0xD818D4", Offset = "0xD818D4", VA = "0xD818D4")]
			public ColorVariation()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000D7")]
		public class UserSettings
		{
			[Token(Token = "0x400043A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string user;

			[Token(Token = "0x400043B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool postProcessingEnabled;

			[Token(Token = "0x400043C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int postProcessingMode;

			[Token(Token = "0x400043D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool closeCloudEnabled;

			[Token(Token = "0x400043E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool midCloudEnabled;

			[Token(Token = "0x400043F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool farCloudEnabled;

			[Token(Token = "0x4000440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int colorVariant;

			[Token(Token = "0x4000441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool stationEnabled;

			[Token(Token = "0x4000442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float stationScale;

			[Token(Token = "0x4000443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool dragonEnabled;

			[Token(Token = "0x4000444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float dragonScale;

			[Token(Token = "0x4000445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool closePlanetEnabled;

			[Token(Token = "0x4000446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool farPlanetEnabled;

			[Token(Token = "0x4000447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			public bool ringEnabled;

			[Token(Token = "0x4000448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
			public bool ringHighlight;

			[Token(Token = "0x4000449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool closeAsteroidEnabled;

			[Token(Token = "0x400044A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool midAsteroidEnabled;

			[Token(Token = "0x400044B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
			public bool farAsteroidEnabled;

			[Token(Token = "0x400044C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
			public bool starEnabled;

			[Token(Token = "0x400044D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool dustEnabled;

			[Token(Token = "0x400044E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool shipsEnabled;

			[Token(Token = "0x400044F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
			public bool publicBorderEnabled;

			[Token(Token = "0x600054A")]
			[Address(RVA = "0xD818DC", Offset = "0xD818DC", VA = "0xD818DC")]
			public UserSettings()
			{
			}
		}

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Volume ppVolume;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject contentMenu;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject postProcessing;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<VolumeProfile> ppProfiles;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GameObject> clouds;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Light directionalLight;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject station;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject dragon;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Buttons buttonList;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorVariation[] cVariations;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserSettings[] userVariations;

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xD9A060", Offset = "0xD9A060", VA = "0xD9A060")]
		public void ChangeUserSettings(int index)
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0xD9A648", Offset = "0xD9A648", VA = "0xD9A648")]
		private void Start()
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0xD9AAB0", Offset = "0xD9AAB0", VA = "0xD9AAB0")]
		public void ToggleMenu()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xD9AB58", Offset = "0xD9AB58", VA = "0xD9AB58")]
		public void ToggleAsset(GameObject item)
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xD9ABF8", Offset = "0xD9ABF8", VA = "0xD9ABF8")]
		public void ResetScaleOnAsset(GameObject item)
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xD9ACA0", Offset = "0xD9ACA0", VA = "0xD9ACA0")]
		public void ChangeQualitySettings(int index)
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xD9ACF4", Offset = "0xD9ACF4", VA = "0xD9ACF4")]
		public void TogglePostProcessing()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xD9AD9C", Offset = "0xD9AD9C", VA = "0xD9AD9C")]
		public void TogglePostProcessing(bool enabled)
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xD9AE40", Offset = "0xD9AE40", VA = "0xD9AE40")]
		public void ChangePostProcessingProfile(int index)
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xD9A6B8", Offset = "0xD9A6B8", VA = "0xD9A6B8")]
		public void ChangeColorVariant(int index)
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xD9AEC4", Offset = "0xD9AEC4", VA = "0xD9AEC4")]
		public void ScaleStationAsset(float scaleValue)
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xD9AF8C", Offset = "0xD9AF8C", VA = "0xD9AF8C")]
		public void ScaleDragonAsset(float scaleValue)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xD9B054", Offset = "0xD9B054", VA = "0xD9B054")]
		public SectorSettings()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8734", Offset = "0x8A8734")]
	public class SeekTargetFinder : MonoBehaviour
	{
		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0110", Offset = "0x8B0110")]
		[SerializeField]
		private GameObject target;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool autoFindPlayerShip;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject currentTarget;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ShipTestController shipController;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RunManager manager;

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xE150BC", Offset = "0xE150BC", VA = "0xE150BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xE15170", Offset = "0xE15170", VA = "0xE15170")]
		private void Update()
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xE153A0", Offset = "0xE153A0", VA = "0xE153A0")]
		public void NewTarget(GameObject newTarget)
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xE153A8", Offset = "0xE153A8", VA = "0xE153A8")]
		public SeekTargetFinder()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public class ShipTestController : MonoBehaviour
	{
		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpaceEntity entity;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B017C", Offset = "0x8B017C")]
		private Transform seekTarget;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform arriveTarget;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform[] arrivePath;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool arrivePathLoop;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform keepRangeTarget;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SpaceEntitySteering.SteerKeepRangeParameters keepRangeParameters;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool wander;

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xF4F65C", Offset = "0xF4F65C", VA = "0xF4F65C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xF4FAAC", Offset = "0xF4FAAC", VA = "0xF4FAAC")]
		public void SetSeekTarget(GameObject target)
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xF4FAE8", Offset = "0xF4FAE8", VA = "0xF4FAE8")]
		public ShipTestController()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class StringToggleTransform : MonoBehaviour
	{
		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string stringTag;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool stringEnabled;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, bool> stringTags;

		[Token(Token = "0x14000010")]
		public static event Action<string, bool> StringUpdate
		{
			[Token(Token = "0x6000552")]
			[Address(RVA = "0xF29DF0", Offset = "0xF29DF0", VA = "0xF29DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD880", Offset = "0x8CD880")]
			add
			{
			}
			[Token(Token = "0x6000553")]
			[Address(RVA = "0xF29EE4", Offset = "0xF29EE4", VA = "0xF29EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD890", Offset = "0x8CD890")]
			remove
			{
			}
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xF29FD8", Offset = "0xF29FD8", VA = "0xF29FD8")]
		public static void SetStringEnabled(string str, bool enabled)
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xF2A118", Offset = "0xF2A118", VA = "0xF2A118")]
		public static bool IsStringEnabled(string str)
		{
			return default(bool);
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0xF2A1C8", Offset = "0xF2A1C8", VA = "0xF2A1C8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0xF2A2C8", Offset = "0xF2A2C8", VA = "0xF2A2C8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xF2A380", Offset = "0xF2A380", VA = "0xF2A380")]
		private void OnStringUpdate(string str, bool state)
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xF2A3E8", Offset = "0xF2A3E8", VA = "0xF2A3E8")]
		public StringToggleTransform()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class TimeScaleVisualizer : MonoBehaviour
	{
		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider timeScaleSlider;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text timeScaleText;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string timeScaleTextPrefix;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float timeScaleMultiplier;

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xF365EC", Offset = "0xF365EC", VA = "0xF365EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xF367F0", Offset = "0xF367F0", VA = "0xF367F0")]
		public void UpdateTimeScale(float value)
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xF366BC", Offset = "0xF366BC", VA = "0xF366BC")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xF36820", Offset = "0xF36820", VA = "0xF36820")]
		public TimeScaleVisualizer()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class VRScaleVisualizer : MonoBehaviour
	{
		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text scaleText;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string scaleTextPrefix;

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xDF212C", Offset = "0xDF212C", VA = "0xDF212C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xDF22FC", Offset = "0xDF22FC", VA = "0xDF22FC")]
		public void ResetLocomotion()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xDF2430", Offset = "0xDF2430", VA = "0xDF2430")]
		public VRScaleVisualizer()
		{
		}
	}
}
namespace Testing.PhotoStudio
{
	[Token(Token = "0x20000DD")]
	public class PhotoStudioCameraBounds : GameMonoBehaviour
	{
		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B02B8", Offset = "0x8B02B8")]
		private Vector3 heightValueToRead;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0304", Offset = "0x8B0304")]
		private Vector3 widthValueToRead;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool isometric;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3 cameraOffset;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform targets;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Camera cam;

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x2493448", Offset = "0x2493448", VA = "0x2493448")]
		private void Start()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x24934BC", Offset = "0x24934BC", VA = "0x24934BC")]
		private float BoundsSizeCalc(Vector3 valueToRead, Bounds bounds)
		{
			return default(float);
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x24935B0", Offset = "0x24935B0", VA = "0x24935B0")]
		private float BoundsCenterCalc(Vector3 valueToRead, Bounds bounds)
		{
			return default(float);
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x24936A4", Offset = "0x24936A4", VA = "0x24936A4")]
		public void SetCameraBoundsSettings(Bounds bounds, float extraPaddingPercentage = 0f, float highestValue = 0f)
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x2493834", Offset = "0x2493834", VA = "0x2493834")]
		public byte[] CameraCapture(Vector2Int resolution)
		{
			return null;
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x24939BC", Offset = "0x24939BC", VA = "0x24939BC")]
		public PhotoStudioCameraBounds()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class PhotoStudioManager : GameMonoBehaviour
	{
		[Token(Token = "0x20000DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8794", Offset = "0x8A8794")]
		private sealed class <StartCapture>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400048A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PhotoStudioManager <>4__this;

			[Token(Token = "0x400048B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string path;

			[Token(Token = "0x400048C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string filename;

			[Token(Token = "0x400048D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private PhotoStudioCameraBounds[] <>7__wrap1;

			[Token(Token = "0x400048E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap2;

			[Token(Token = "0x400048F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private PhotoStudioCameraBounds <ortoCameraSetting>5__4;

			[Token(Token = "0x170000E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000574")]
				[Address(RVA = "0xD6D5D8", Offset = "0xD6D5D8", VA = "0xD6D5D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000576")]
				[Address(RVA = "0xD6D620", Offset = "0xD6D620", VA = "0xD6D620", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000571")]
			[Address(RVA = "0xD6D038", Offset = "0xD6D038", VA = "0xD6D038")]
			[DebuggerHidden]
			public <StartCapture>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6000572")]
			[Address(RVA = "0xD6D064", Offset = "0xD6D064", VA = "0xD6D064", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000573")]
			[Address(RVA = "0xD6D068", Offset = "0xD6D068", VA = "0xD6D068", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000575")]
			[Address(RVA = "0xD6D5E0", Offset = "0xD6D5E0", VA = "0xD6D5E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0370", Offset = "0x8B0370")]
		[SerializeField]
		private GameObject photoTarget;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2Int resolution;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B03CC", Offset = "0x8B03CC")]
		private float extraPaddingPercentage;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool openExplorerAfterRender;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		private bool closePlaymodeAfterRender;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[SerializeField]
		private bool displayBoundingBox;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		[SerializeField]
		private bool delayedPhotographing;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool disableAnimators;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PhotoStudioCameraBounds[] ortographicCameraSettings;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float highestValue;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 boundPoint1;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 boundPoint2;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 boundPoint3;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 boundPoint4;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 boundPoint5;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 boundPoint6;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 boundPoint7;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 boundPoint8;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Bounds objectBounds;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public GameLoaderStartParameters localGameLoader;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public bool pressedRenderbutton;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string filename;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string path;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool overrideSkybox;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject skyboxLoader;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject backupLoader;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private AsyncFlag handsInvisible;

		[Token(Token = "0x170000E6")]
		protected override bool EnableOnGameStart
		{
			[Token(Token = "0x6000568")]
			[Address(RVA = "0x2493A10", Offset = "0x2493A10", VA = "0x2493A10", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000569")]
			[Address(RVA = "0x2493A18", Offset = "0x2493A18", VA = "0x2493A18", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x2493A1C", Offset = "0x2493A1C", VA = "0x2493A1C")]
		private new void Awake()
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x2493ADC", Offset = "0x2493ADC", VA = "0x2493ADC", Slot = "30")]
		protected override void OnGameStart()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x2493DF0", Offset = "0x2493DF0", VA = "0x2493DF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CD8A0", Offset = "0x8CD8A0")]
		private IEnumerator StartCapture(string path, string filename)
		{
			return null;
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x2493D28", Offset = "0x2493D28", VA = "0x2493D28")]
		private Bounds GenerateBoundingBox()
		{
			return default(Bounds);
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x2493E98", Offset = "0x2493E98", VA = "0x2493E98")]
		private Bounds Encap(GameObject gObject, Bounds bounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x2493F8C", Offset = "0x2493F8C", VA = "0x2493F8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x249432C", Offset = "0x249432C", VA = "0x249432C")]
		public PhotoStudioManager()
		{
		}
	}
}
namespace UnityEngine.XR.Interaction.Toolkit.UI
{
	[Token(Token = "0x20000E0")]
	public class MenuXRCurvedUIGraphicRaycaster : BaseRaycaster
	{
		[Token(Token = "0x20000E1")]
		private struct RaycastHitData
		{
			[Token(Token = "0x400049D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic graphic;

			[Token(Token = "0x400049E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 worldPosition;

			[Token(Token = "0x400049F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector2 screenPosition;

			[Token(Token = "0x40004A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float distance;

			[Token(Token = "0x40004A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int displayIndex;

			[Token(Token = "0x6000587")]
			[Address(RVA = "0xEDEA40", Offset = "0xEDEA40", VA = "0xEDEA40")]
			public RaycastHitData(Graphic graphic, Vector3 worldPosition, Vector2 screenPosition, float distance, int displayIndex)
			{
			}
		}

		[Token(Token = "0x20000E2")]
		private struct CurvedRaycastHitData
		{
			[Token(Token = "0x40004A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool isCurved;

			[Token(Token = "0x40004A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool validHit;

			[Token(Token = "0x40004A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 worldPosition;

			[Token(Token = "0x40004A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 canvasPosition;

			[Token(Token = "0x40004A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float distance;

			[Token(Token = "0x6000588")]
			[Address(RVA = "0xEDE968", Offset = "0xEDE968", VA = "0xEDE968")]
			public static CurvedRaycastHitData CreateNonCurved()
			{
				return default(CurvedRaycastHitData);
			}

			[Token(Token = "0x6000589")]
			[Address(RVA = "0xEDE9C4", Offset = "0xEDE9C4", VA = "0xEDE9C4")]
			public static CurvedRaycastHitData CreateCurvedInvalid()
			{
				return default(CurvedRaycastHitData);
			}

			[Token(Token = "0x600058A")]
			[Address(RVA = "0xEDEA24", Offset = "0xEDEA24", VA = "0xEDEA24")]
			public static CurvedRaycastHitData CreateCurvedValid(Vector3 worldPosition, Vector3 canvasPosition, float distance)
			{
				return default(CurvedRaycastHitData);
			}
		}

		[Token(Token = "0x4000490")]
		private const int MAX_RAYCAST_HITS = 10;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool debugCurvedRaycast;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool checkFor3DOcclusion;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private LayerMask blockingMask;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QueryTriggerInteraction raycastTriggerInteraction;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform canvasRect;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CurvedUISettings curvedUI;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hasWarnedEventCameraNull;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastHit[] occlusionHits3D;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3[] graphicCorners;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<RaycastHitData> raycastResultsCache;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<RaycastHitData> sortedGraphics;

		[Token(Token = "0x170000E9")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000577")]
			[Address(RVA = "0xD69494", Offset = "0xD69494", VA = "0xD69494", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		public Canvas Canvas
		{
			[Token(Token = "0x6000578")]
			[Address(RVA = "0xD6958C", Offset = "0xD6958C", VA = "0xD6958C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		public RectTransform CanvasRect
		{
			[Token(Token = "0x6000579")]
			[Address(RVA = "0xD69640", Offset = "0xD69640", VA = "0xD69640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public CurvedUISettings CurvedUI
		{
			[Token(Token = "0x600057A")]
			[Address(RVA = "0xD696F4", Offset = "0xD696F4", VA = "0xD696F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xD697A8", Offset = "0xD697A8", VA = "0xD697A8", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0xD69848", Offset = "0xD69848", VA = "0xD69848")]
		private void PerformSegmentRaycasts(TrackedDeviceEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xD69A8C", Offset = "0xD69A8C", VA = "0xD69A8C")]
		private bool PerformSegmentRaycast(Vector3 from, Vector3 to, LayerMask layerMask, Camera currentEventCamera, List<RaycastResult> resultAppendList)
		{
			return default(bool);
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xD6A748", Offset = "0xD6A748", VA = "0xD6A748")]
		private void SortedRaycastGraphics(Canvas canvas, Ray ray, CurvedRaycastHitData curvedData, float maxDistance, LayerMask layerMask, Camera eventCamera, List<RaycastHitData> results)
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xD6AC58", Offset = "0xD6AC58", VA = "0xD6AC58")]
		private bool RayIntersectsRectTransform(RectTransform transform, Ray ray, CurvedRaycastHitData curvedData, out Vector3 worldPosition, out float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xD6AD4C", Offset = "0xD6AD4C", VA = "0xD6AD4C")]
		private bool RayIntersectsRectTransformCurved(RectTransform transform, CurvedRaycastHitData curvedData, out Vector3 worldPosition, out float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xD6B03C", Offset = "0xD6B03C", VA = "0xD6B03C")]
		private bool RayIntersectsRectTransformFlat(RectTransform transform, Ray ray, CurvedRaycastHitData curvedData, out Vector3 worldPosition, out float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xD6A358", Offset = "0xD6A358", VA = "0xD6A358")]
		private CurvedRaycastHitData RaycastCanvasCylinder(Ray ray)
		{
			return default(CurvedRaycastHitData);
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xD6A270", Offset = "0xD6A270", VA = "0xD6A270")]
		private static RaycastHit FindClosest3DHit(RaycastHit[] hits, int count)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xD6B42C", Offset = "0xD6B42C", VA = "0xD6B42C")]
		private static int CompareRaycastHits(RaycastHitData a, RaycastHitData b)
		{
			return default(int);
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xD6B488", Offset = "0xD6B488", VA = "0xD6B488")]
		public MenuXRCurvedUIGraphicRaycaster()
		{
		}
	}
}
namespace Game
{
	[Token(Token = "0x20000E3")]
	public class ApplyBuildNotesText : MonoBehaviour
	{
		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text text;

		[Token(Token = "0x600058B")]
		[Address(RVA = "0xEEC664", Offset = "0xEEC664", VA = "0xEEC664")]
		private void Awake()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xEEC6F4", Offset = "0xEEC6F4", VA = "0xEEC6F4")]
		public ApplyBuildNotesText()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class EditorRuntimeHotkeys : MonoBehaviour
	{
		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AsyncFlag TimeWarpFlag;

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xC4FC74", Offset = "0xC4FC74", VA = "0xC4FC74")]
		public static void ReturnToMenu()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xC4FD44", Offset = "0xC4FD44", VA = "0xC4FD44")]
		public static void ReloadSector()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xC4FF94", Offset = "0xC4FF94", VA = "0xC4FF94")]
		public static void ToggleSectorMap()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xC502D4", Offset = "0xC502D4", VA = "0xC502D4")]
		public static void LoadNextSector()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xC503BC", Offset = "0xC503BC", VA = "0xC503BC")]
		public static void AddScanStat()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xC50460", Offset = "0xC50460", VA = "0xC50460")]
		public static void DestroyEnemies(int maxCount)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xC50754", Offset = "0xC50754", VA = "0xC50754")]
		public static void DestroyPlayerShip()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xC50898", Offset = "0xC50898", VA = "0xC50898")]
		public static void TogglePlayerShipTargetable(ref AsyncFlag flag)
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xC50AAC", Offset = "0xC50AAC", VA = "0xC50AAC")]
		public static void TogglePlayerShipInvulnerable(ref AsyncFlag flag)
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xC50C38", Offset = "0xC50C38", VA = "0xC50C38")]
		public static void GiveScrap(int amount)
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xC50D44", Offset = "0xC50D44", VA = "0xC50D44")]
		public static void GiveExperience(int amount)
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xC50E1C", Offset = "0xC50E1C", VA = "0xC50E1C")]
		public static void GiveStoryKey(int amount)
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xC50EF4", Offset = "0xC50EF4", VA = "0xC50EF4")]
		public static void ResetExperience()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xC50FC8", Offset = "0xC50FC8", VA = "0xC50FC8")]
		public static void RefillAmmo()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xC513BC", Offset = "0xC513BC", VA = "0xC513BC")]
		public static void RefillHealth()
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xC51528", Offset = "0xC51528", VA = "0xC51528")]
		public static void AutoCollectPickups()
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xC515EC", Offset = "0xC515EC", VA = "0xC515EC")]
		public static void ToggleHandTracking()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xC51648", Offset = "0xC51648", VA = "0xC51648")]
		public static void ToggleTimeWarp()
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xC51788", Offset = "0xC51788", VA = "0xC51788")]
		public static void CycleLanguage()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xC518CC", Offset = "0xC518CC", VA = "0xC518CC")]
		public static void ConversationScreenInput(int selection)
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xC51998", Offset = "0xC51998", VA = "0xC51998")]
		public static void ToggleMusic()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xC51AD0", Offset = "0xC51AD0", VA = "0xC51AD0")]
		public EditorRuntimeHotkeys()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public static class ExperimentalSettings
	{
		[Token(Token = "0x40004A9")]
		public const bool DEFAULT_ENABLE_TRAILING_RAY_ORIGIN = true;

		[Token(Token = "0x40004AA")]
		public const bool DEFAULT_ENABLE_RAY_SMOOTHED_ACTIVATION = false;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B04D8", Offset = "0x8B04D8")]
		private static bool <EnableTrailingRayOrigin>k__BackingField;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B04E8", Offset = "0x8B04E8")]
		private static bool <EnableRaySmoothedActivation>k__BackingField;

		[Token(Token = "0x170000ED")]
		public static bool EnableTrailingRayOrigin
		{
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0xC5A95C", Offset = "0xC5A95C", VA = "0xC5A95C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD950", Offset = "0x8CD950")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0xC5A9C0", Offset = "0xC5A9C0", VA = "0xC5A9C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD960", Offset = "0x8CD960")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public static bool EnableRaySmoothedActivation
		{
			[Token(Token = "0x60005A6")]
			[Address(RVA = "0xC5AA2C", Offset = "0xC5AA2C", VA = "0xC5AA2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD970", Offset = "0x8CD970")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005A7")]
			[Address(RVA = "0xC5AA90", Offset = "0xC5AA90", VA = "0xC5AA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD980", Offset = "0x8CD980")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20000E6")]
	public abstract class GameMonoBehaviour : MonoBehaviour, IGameStart, IAsyncGameSetup, IUpdate, ILateUpdate, IFixedUpdate, ILoadBalancedUpdate
	{
		[Token(Token = "0x20000E7")]
		public enum UpdateWaitMode
		{
			[Token(Token = "0x40004BB")]
			None,
			[Token(Token = "0x40004BC")]
			WaitForGameStart,
			[Token(Token = "0x40004BD")]
			WaitForGameSetup
		}

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B04F8", Offset = "0x8B04F8")]
		private bool <EnableOnGameStart>k__BackingField;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0508", Offset = "0x8B0508")]
		private bool <EnableOnGameSetupAsync>k__BackingField;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0518", Offset = "0x8B0518")]
		private bool <EnableOnUpdate>k__BackingField;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0528", Offset = "0x8B0528")]
		private bool <EnableOnLateUpdate>k__BackingField;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0538", Offset = "0x8B0538")]
		private bool <EnableOnFixedUpdate>k__BackingField;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0548", Offset = "0x8B0548")]
		private bool <EnableOnLoadBalancedUpdate>k__BackingField;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0558", Offset = "0x8B0558")]
		private UpdateWaitMode <WaitOnUpdate>k__BackingField;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0568", Offset = "0x8B0568")]
		private UpdateWaitMode <WaitOnLateUpdate>k__BackingField;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0578", Offset = "0x8B0578")]
		private UpdateWaitMode <WaitOnFixedUpdate>k__BackingField;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0588", Offset = "0x8B0588")]
		private UpdateWaitMode <WaitOnLoadBalancedUpdate>k__BackingField;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0598", Offset = "0x8B0598")]
		private bool <IsStarted>k__BackingField;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B05A8", Offset = "0x8B05A8")]
		private bool <IsSetUp>k__BackingField;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		protected bool destroyed;

		[Token(Token = "0x170000EF")]
		protected virtual bool EnableOnGameStart
		{
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0xE2CADC", Offset = "0xE2CADC", VA = "0xE2CADC", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD990", Offset = "0x8CD990")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005AA")]
			[Address(RVA = "0xE2CAE4", Offset = "0xE2CAE4", VA = "0xE2CAE4", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD9A0", Offset = "0x8CD9A0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		protected virtual bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x60005AB")]
			[Address(RVA = "0xE2CAF0", Offset = "0xE2CAF0", VA = "0xE2CAF0", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD9B0", Offset = "0x8CD9B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005AC")]
			[Address(RVA = "0xE2CAF8", Offset = "0xE2CAF8", VA = "0xE2CAF8", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD9C0", Offset = "0x8CD9C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		protected virtual bool EnableOnUpdate
		{
			[Token(Token = "0x60005AD")]
			[Address(RVA = "0xE2CB04", Offset = "0xE2CB04", VA = "0xE2CB04", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD9D0", Offset = "0x8CD9D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005AE")]
			[Address(RVA = "0xE2CB0C", Offset = "0xE2CB0C", VA = "0xE2CB0C", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD9E0", Offset = "0x8CD9E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		protected virtual bool EnableOnLateUpdate
		{
			[Token(Token = "0x60005AF")]
			[Address(RVA = "0xE2CB18", Offset = "0xE2CB18", VA = "0xE2CB18", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD9F0", Offset = "0x8CD9F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0xE2CB20", Offset = "0xE2CB20", VA = "0xE2CB20", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDA00", Offset = "0x8CDA00")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		protected virtual bool EnableOnFixedUpdate
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0xE2CB2C", Offset = "0xE2CB2C", VA = "0xE2CB2C", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDA10", Offset = "0x8CDA10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0xE2CB34", Offset = "0xE2CB34", VA = "0xE2CB34", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDA20", Offset = "0x8CDA20")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		protected virtual bool EnableOnLoadBalancedUpdate
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0xE2CB40", Offset = "0xE2CB40", VA = "0xE2CB40", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDA30", Offset = "0x8CDA30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0xE2CB48", Offset = "0xE2CB48", VA = "0xE2CB48", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDA40", Offset = "0x8CDA40")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		protected virtual UpdateWaitMode WaitOnUpdate
		{
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0xE2CB54", Offset = "0xE2CB54", VA = "0xE2CB54", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDA50", Offset = "0x8CDA50")]
			get
			{
				return default(UpdateWaitMode);
			}
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0xE2CB5C", Offset = "0xE2CB5C", VA = "0xE2CB5C", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDA60", Offset = "0x8CDA60")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		protected virtual UpdateWaitMode WaitOnLateUpdate
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0xE2CB64", Offset = "0xE2CB64", VA = "0xE2CB64", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDA70", Offset = "0x8CDA70")]
			get
			{
				return default(UpdateWaitMode);
			}
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0xE2CB6C", Offset = "0xE2CB6C", VA = "0xE2CB6C", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDA80", Offset = "0x8CDA80")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		protected virtual UpdateWaitMode WaitOnFixedUpdate
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0xE2CB74", Offset = "0xE2CB74", VA = "0xE2CB74", Slot = "26")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDA90", Offset = "0x8CDA90")]
			get
			{
				return default(UpdateWaitMode);
			}
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0xE2CB7C", Offset = "0xE2CB7C", VA = "0xE2CB7C", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDAA0", Offset = "0x8CDAA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		protected virtual UpdateWaitMode WaitOnLoadBalancedUpdate
		{
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0xE2CB84", Offset = "0xE2CB84", VA = "0xE2CB84", Slot = "28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDAB0", Offset = "0x8CDAB0")]
			get
			{
				return default(UpdateWaitMode);
			}
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0xE2CB8C", Offset = "0xE2CB8C", VA = "0xE2CB8C", Slot = "29")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDAC0", Offset = "0x8CDAC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public bool IsStarted
		{
			[Token(Token = "0x60005C3")]
			[Address(RVA = "0xE2CBB0", Offset = "0xE2CBB0", VA = "0xE2CBB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDAD0", Offset = "0x8CDAD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0xE2CBB8", Offset = "0xE2CBB8", VA = "0xE2CBB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDAE0", Offset = "0x8CDAE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public bool IsSetUp
		{
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0xE2CBC4", Offset = "0xE2CBC4", VA = "0xE2CBC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDAF0", Offset = "0x8CDAF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005C6")]
			[Address(RVA = "0xE2CBCC", Offset = "0xE2CBCC", VA = "0xE2CBCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDB00", Offset = "0x8CDB00")]
			private set
			{
			}
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xE2CB94", Offset = "0xE2CB94", VA = "0xE2CB94", Slot = "30")]
		protected virtual void OnGameStart()
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xE2CB98", Offset = "0xE2CB98", VA = "0xE2CB98", Slot = "31")]
		protected virtual YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xE2CBA0", Offset = "0xE2CBA0", VA = "0xE2CBA0", Slot = "32")]
		protected virtual void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xE2CBA4", Offset = "0xE2CBA4", VA = "0xE2CBA4", Slot = "33")]
		protected virtual void OnLateUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xE2CBA8", Offset = "0xE2CBA8", VA = "0xE2CBA8", Slot = "34")]
		protected virtual void OnFixedUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xE2CBAC", Offset = "0xE2CBAC", VA = "0xE2CBAC", Slot = "35")]
		protected virtual void OnLoadBalancedUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xE2CBD8", Offset = "0xE2CBD8", VA = "0xE2CBD8", Slot = "36")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xE2CCD4", Offset = "0xE2CCD4", VA = "0xE2CCD4", Slot = "37")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xE2CEB0", Offset = "0xE2CEB0", VA = "0xE2CEB0", Slot = "4")]
		private void Game.Manager.IGameStart.OnGameStart()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xE2CF08", Offset = "0xE2CF08", VA = "0xE2CF08", Slot = "5")]
		private YieldInstruction Game.Manager.IAsyncGameSetup.OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xE2D0F8", Offset = "0xE2D0F8", VA = "0xE2D0F8", Slot = "6")]
		private void Game.Manager.IUpdate.OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xE2D1B8", Offset = "0xE2D1B8", VA = "0xE2D1B8", Slot = "7")]
		private void Game.Manager.ILateUpdate.OnLateUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xE2D248", Offset = "0xE2D248", VA = "0xE2D248", Slot = "8")]
		private void Game.Manager.IFixedUpdate.OnFixedUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xE2D2D8", Offset = "0xE2D2D8", VA = "0xE2D2D8", Slot = "9")]
		private void Game.Manager.ILoadBalancedUpdate.OnLoadBalancedUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xE2D188", Offset = "0xE2D188", VA = "0xE2D188")]
		private bool ShouldWaitForUpdate(UpdateWaitMode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xE2D368", Offset = "0xE2D368", VA = "0xE2D368")]
		protected GameMonoBehaviour()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public interface IAsyncSystemSetup
	{
		[Token(Token = "0x60005D1")]
		YieldInstruction OnSetupSystemAsync();
	}
	[Token(Token = "0x20000E9")]
	public interface IAsyncSceneSetup
	{
		[Token(Token = "0x60005D2")]
		YieldInstruction OnSetupSceneAsync();
	}
	[Token(Token = "0x20000EA")]
	public static class GameSetup
	{
		[Token(Token = "0x20000EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A87A4", Offset = "0x8A87A4")]
		private sealed class <AsyncApplicationSetup>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40004CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40004CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40004D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private GameObject[] <singletonPrefabs>5__2;

			[Token(Token = "0x40004D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<GameObject> <singletons>5__3;

			[Token(Token = "0x170000FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005F5")]
				[Address(RVA = "0xECE228", Offset = "0xECE228", VA = "0xECE228", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000100")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005F7")]
				[Address(RVA = "0xECE270", Offset = "0xECE270", VA = "0xECE270", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005F2")]
			[Address(RVA = "0xECD608", Offset = "0xECD608", VA = "0xECD608")]
			[DebuggerHidden]
			public <AsyncApplicationSetup>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60005F3")]
			[Address(RVA = "0xECD634", Offset = "0xECD634", VA = "0xECD634", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005F4")]
			[Address(RVA = "0xECD638", Offset = "0xECD638", VA = "0xECD638", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005F6")]
			[Address(RVA = "0xECE230", Offset = "0xECE230", VA = "0xECE230", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20000EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A87B4", Offset = "0x8A87B4")]
		private sealed class <AsyncSceneObjectSetup>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40004D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40004D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000101")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005FB")]
				[Address(RVA = "0xECE4AC", Offset = "0xECE4AC", VA = "0xECE4AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000102")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005FD")]
				[Address(RVA = "0xECE4F4", Offset = "0xECE4F4", VA = "0xECE4F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005F8")]
			[Address(RVA = "0xECE278", Offset = "0xECE278", VA = "0xECE278")]
			[DebuggerHidden]
			public <AsyncSceneObjectSetup>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60005F9")]
			[Address(RVA = "0xECE2A4", Offset = "0xECE2A4", VA = "0xECE2A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005FA")]
			[Address(RVA = "0xECE2A8", Offset = "0xECE2A8", VA = "0xECE2A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005FC")]
			[Address(RVA = "0xECE4B4", Offset = "0xECE4B4", VA = "0xECE4B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004BE")]
		private const string GAME_SETUP_RESOURCE_PATH = "GameSetup";

		[Token(Token = "0x40004BF")]
		public const string EDITOR_PREF_VR_PLAYER_AUTO_CREATE_ENABLED = "vr_player_auto_create_enabled";

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string singletonResourcePath;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] singletonResourceNames;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string globalSingletonResourceName;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string vrPlayerResourcePath;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<GameObject> sceneRootObjects;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Queue<GameObject> sceneAsyncSetupObjects;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static EmptyMonoBehaviour sceneAsyncSetupCoroutine;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool hasCalledSubsystemRegistration;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool hasCalledAfterAssembliesLoaded;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool hasCalledBeforeSplashScreen;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		private static bool hasCalledBeforeSceneLoad;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static bool hasCalledAfterSceneLoad;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private static bool hasCalledAllSetup;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		private static bool hasCalledBeforeQuit;

		[Token(Token = "0x170000FB")]
		public static bool IsSetUp
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0xE2E900", Offset = "0xE2E900", VA = "0xE2E900")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FC")]
		public static bool IsQuit
		{
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0xE2E964", Offset = "0xE2E964", VA = "0xE2E964")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FD")]
		public static bool IsSettingUpScene
		{
			[Token(Token = "0x60005D5")]
			[Address(RVA = "0xE24F68", Offset = "0xE24F68", VA = "0xE24F68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FE")]
		public static bool IsVRPlayerAutoCreateActive
		{
			[Token(Token = "0x60005D6")]
			[Address(RVA = "0xE2E9C8", Offset = "0xE2E9C8", VA = "0xE2E9C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xE2E9D0", Offset = "0xE2E9D0", VA = "0xE2E9D0")]
		private static void SyncApplicationSetup()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xE2EB84", Offset = "0xE2EB84", VA = "0xE2EB84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CDB10", Offset = "0x8CDB10")]
		private static IEnumerator AsyncApplicationSetup()
		{
			return null;
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xE2EBE0", Offset = "0xE2EBE0", VA = "0xE2EBE0")]
		public static void OnBeforeFirstSceneLoad()
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xE2EDF4", Offset = "0xE2EDF4", VA = "0xE2EDF4")]
		public static void OnAfterEverySceneLoad(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xE2F120", Offset = "0xE2F120", VA = "0xE2F120")]
		public static void OnSubsystemRegistration()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xE2F124", Offset = "0xE2F124", VA = "0xE2F124")]
		public static void OnAfterAssembliesLoaded()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xE2F128", Offset = "0xE2F128", VA = "0xE2F128")]
		public static void OnBeforeSplashScreen()
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xE2F12C", Offset = "0xE2F12C", VA = "0xE2F12C")]
		public static void OnAfterFirstSceneLoad()
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xE2F130", Offset = "0xE2F130", VA = "0xE2F130")]
		public static void OnAfterEverySceneUnload(Scene scene)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xE2F134", Offset = "0xE2F134", VA = "0xE2F134")]
		public static void OnBeforeQuit()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xE2F138", Offset = "0xE2F138", VA = "0xE2F138")]
		public static GameObject[] LoadSingletonPrefabs([System.Runtime.InteropServices.Optional] string subPath)
		{
			return null;
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xE2F214", Offset = "0xE2F214", VA = "0xE2F214")]
		public static GameObject[] LoadSingletonPrefabs(string basePath, [System.Runtime.InteropServices.Optional] string subPath)
		{
			return null;
		}

		[Token(Token = "0x60005E3")]
		public static T GetOrLoadEditorSingleton<T>(T instance) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60005E4")]
		private static YieldInstruction GetOrSetupSingleton<T>(GameObject[] prefabs, List<GameObject> singletons, bool dontDestroyOnLoad = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60005E5")]
		private static T GetSingletonPrefabWithComponent<T>(GameObject[] prefabs, bool throwOnError) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xE2EC68", Offset = "0xE2EC68", VA = "0xE2EC68")]
		private static void LoadGameSetupParameters()
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xE2F04C", Offset = "0xE2F04C", VA = "0xE2F04C")]
		private static void StartAsyncSceneObjectSetup()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xE2F2A8", Offset = "0xE2F2A8", VA = "0xE2F2A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CDB70", Offset = "0x8CDB70")]
		private static IEnumerator AsyncSceneObjectSetup()
		{
			return null;
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xE2F304", Offset = "0xE2F304", VA = "0xE2F304")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8CDBD0", Offset = "0x8CDBD0")]
		private static void SubsystemRegistration()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xE2F4F4", Offset = "0xE2F4F4", VA = "0xE2F4F4")]
		private static void AfterEverySceneLoad(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xE2F554", Offset = "0xE2F554", VA = "0xE2F554")]
		private static void AfterEverySceneUnload(Scene scene)
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xE2F5B4", Offset = "0xE2F5B4", VA = "0xE2F5B4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8CDBE4", Offset = "0x8CDBE4")]
		private static void AfterAssembliesLoaded()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xE2F644", Offset = "0xE2F644", VA = "0xE2F644")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8CDBF8", Offset = "0x8CDBF8")]
		private static void BeforeSplashScreen()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xE2F6D4", Offset = "0xE2F6D4", VA = "0xE2F6D4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8CDC0C", Offset = "0x8CDC0C")]
		private static void BeforeSceneLoad()
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xE2F770", Offset = "0xE2F770", VA = "0xE2F770")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8CDC20", Offset = "0x8CDC20")]
		private static void AfterSceneLoad()
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xE2F800", Offset = "0xE2F800", VA = "0xE2F800")]
		private static bool BeforeQuit()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A87C4", Offset = "0x8A87C4")]
	public class GameSetupParameters : ScriptableObject
	{
		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B05B8", Offset = "0x8B05B8")]
		private string singletonResourcePath;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] singletonResourceNames;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string globalSingletonResourceName;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0624", Offset = "0x8B0624")]
		private string vrPlayerResourcePath;

		[Token(Token = "0x17000103")]
		public string SingletonResourcePath
		{
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0xE2FA40", Offset = "0xE2FA40", VA = "0xE2FA40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		public string[] SingletonResourceNames
		{
			[Token(Token = "0x60005FF")]
			[Address(RVA = "0xE2FA48", Offset = "0xE2FA48", VA = "0xE2FA48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		public string GlobalSingletonResourceName
		{
			[Token(Token = "0x6000600")]
			[Address(RVA = "0xE2FA50", Offset = "0xE2FA50", VA = "0xE2FA50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		public string VRPlayerResourcePath
		{
			[Token(Token = "0x6000601")]
			[Address(RVA = "0xE2FA58", Offset = "0xE2FA58", VA = "0xE2FA58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xE2FA60", Offset = "0xE2FA60", VA = "0xE2FA60")]
		public GameSetupParameters()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public enum X15BuildAudience
	{
		[Token(Token = "0x40004D9")]
		Internal,
		[Token(Token = "0x40004DA")]
		External
	}
	[Token(Token = "0x20000EF")]
	public class X15BuildSettings : ScriptableObject
	{
		[Token(Token = "0x40004DB")]
		private const string SETTINGS_ASSET_PATH = "Assets/Resources/X15BuildSettings.asset";

		[Token(Token = "0x40004DC")]
		private const string SETTINGS_RESOURCES_PATH = "X15BuildSettings";

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int bundleVersionCode;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buildNotes;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public X15BuildAudience buildAudience;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static X15BuildAudience runtimeBuildAudience;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static bool runtimeBuildAudienceOverride;

		[Token(Token = "0x17000107")]
		public string BuildVersion
		{
			[Token(Token = "0x6000603")]
			[Address(RVA = "0xE00E24", Offset = "0xE00E24", VA = "0xE00E24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		public string BuildVersionAndCode
		{
			[Token(Token = "0x6000604")]
			[Address(RVA = "0xE00E2C", Offset = "0xE00E2C", VA = "0xE00E2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		public string BuildVersionAndBuildNotes
		{
			[Token(Token = "0x6000605")]
			[Address(RVA = "0xE00EB0", Offset = "0xE00EB0", VA = "0xE00EB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public string BuildVersionAndCodeAndBuildNotes
		{
			[Token(Token = "0x6000606")]
			[Address(RVA = "0xE00F08", Offset = "0xE00F08", VA = "0xE00F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		public bool IsDeveloperBuild
		{
			[Token(Token = "0x6000607")]
			[Address(RVA = "0xE00F60", Offset = "0xE00F60", VA = "0xE00F60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010C")]
		public static X15BuildAudience RuntimeBuildAudience
		{
			[Token(Token = "0x6000608")]
			[Address(RVA = "0xE01000", Offset = "0xE01000", VA = "0xE01000")]
			get
			{
				return default(X15BuildAudience);
			}
			[Token(Token = "0x6000609")]
			[Address(RVA = "0xE01064", Offset = "0xE01064", VA = "0xE01064")]
			set
			{
			}
		}

		[Token(Token = "0x14000011")]
		public static event Action<bool> DeveloperBuildChanged
		{
			[Token(Token = "0x600060A")]
			[Address(RVA = "0xE01220", Offset = "0xE01220", VA = "0xE01220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDCD4", Offset = "0x8CDCD4")]
			add
			{
			}
			[Token(Token = "0x600060B")]
			[Address(RVA = "0xE01314", Offset = "0xE01314", VA = "0xE01314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDCE4", Offset = "0x8CDCE4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public static event Action<X15BuildAudience> BuildAudienceChanged
		{
			[Token(Token = "0x600060C")]
			[Address(RVA = "0xE01408", Offset = "0xE01408", VA = "0xE01408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDCF4", Offset = "0x8CDCF4")]
			add
			{
			}
			[Token(Token = "0x600060D")]
			[Address(RVA = "0xE01500", Offset = "0xE01500", VA = "0xE01500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDD04", Offset = "0x8CDD04")]
			remove
			{
			}
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xE01180", Offset = "0xE01180", VA = "0xE01180")]
		public static X15BuildSettings GetOrCreate()
		{
			return null;
		}

		[Token(Token = "0x600060F")]
		public static T GetOrCreateSingletonAsset<T>(string assetPath, string resourcesPath) where T : ScriptableObject
		{
			return null;
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xE015F8", Offset = "0xE015F8", VA = "0xE015F8")]
		public X15BuildSettings()
		{
		}
	}
}
namespace Game.VR
{
	[Token(Token = "0x20000F0")]
	public class MoveWithVRTransform : MonoBehaviour
	{
		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform trans;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 basePosition;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastVRPlayerPosition;

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x2487A5C", Offset = "0x2487A5C", VA = "0x2487A5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x2487AAC", Offset = "0x2487AAC", VA = "0x2487AAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x2487BE8", Offset = "0x2487BE8", VA = "0x2487BE8")]
		public MoveWithVRTransform()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class ClosestPointToVRTransformOnLine : MonoBehaviour
	{
		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 localLineAxis;

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xFE8424", Offset = "0xFE8424", VA = "0xFE8424")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xFE8600", Offset = "0xFE8600", VA = "0xFE8600")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xFE8428", Offset = "0xFE8428", VA = "0xFE8428")]
		public void UpdatePosition()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xFE8604", Offset = "0xFE8604", VA = "0xFE8604")]
		public void MoveToDirection(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xFE86AC", Offset = "0xFE86AC", VA = "0xFE86AC")]
		public void MoveToDirection(Vector3 position, Vector3 direction)
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xFE8794", Offset = "0xFE8794", VA = "0xFE8794")]
		public void MoveToLine(Vector3 lineStartPosition, Vector3 lineEndPosition)
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xFE88B4", Offset = "0xFE88B4", VA = "0xFE88B4")]
		public ClosestPointToVRTransformOnLine()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class DisableCanvasRaycastersOnVRPlayerSelect : MonoBehaviour
	{
		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<BaseRaycaster> raycasters;

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xC4F328", Offset = "0xC4F328", VA = "0xC4F328")]
		private void Awake()
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xC4F378", Offset = "0xC4F378", VA = "0xC4F378")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xC4F640", Offset = "0xC4F640", VA = "0xC4F640")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xC4F4D4", Offset = "0xC4F4D4", VA = "0xC4F4D4")]
		private void UpdateEnableState(bool isPlayerInteracting)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xC4F77C", Offset = "0xC4F77C", VA = "0xC4F77C")]
		public DisableCanvasRaycastersOnVRPlayerSelect()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class ScaleWithVRTransform : MonoBehaviour
	{
		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform trans;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 baseScale;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float lastVRPlayerScale;

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xCF9D48", Offset = "0xCF9D48", VA = "0xCF9D48")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xCF9D98", Offset = "0xCF9D98", VA = "0xCF9D98")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xCF9E9C", Offset = "0xCF9E9C", VA = "0xCF9E9C")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xCF9D9C", Offset = "0xCF9D9C", VA = "0xCF9D9C")]
		protected void UpdateScale()
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xCF9EA0", Offset = "0xCF9EA0", VA = "0xCF9EA0")]
		public ScaleWithVRTransform()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public enum SceneVROrientationOrigin
	{
		[Token(Token = "0x40004ED")]
		Root,
		[Token(Token = "0x40004EE")]
		Head
	}
	[Token(Token = "0x20000F5")]
	public class SceneVROrientation : GameMonoBehaviour
	{
		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private SceneVROrientationOrigin origin;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool setPosition;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool setRotation;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		private bool setScale;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		private bool hasPreviousVRPlayerScale;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float previousVRPlayerScale;

		[Token(Token = "0x1700010D")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000626")]
			[Address(RVA = "0xCFA394", Offset = "0xCFA394", VA = "0xCFA394", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010E")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x6000627")]
			[Address(RVA = "0xCFA39C", Offset = "0xCFA39C", VA = "0xCFA39C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xCFA3A4", Offset = "0xCFA3A4", VA = "0xCFA3A4", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xCFA748", Offset = "0xCFA748", VA = "0xCFA748", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xCFA3D8", Offset = "0xCFA3D8", VA = "0xCFA3D8")]
		public void ApplyOrientation()
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xCFA82C", Offset = "0xCFA82C", VA = "0xCFA82C")]
		public SceneVROrientation()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class VRActionBasedController : ActionBasedController
	{
		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B06E0", Offset = "0x8B06E0")]
		[SerializeField]
		private float smoothDampening;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 smoothedPosition;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private Quaternion smoothedRotation;

		[Token(Token = "0x14000013")]
		public event Action AfterUpdateState
		{
			[Token(Token = "0x600062C")]
			[Address(RVA = "0x10B96C8", Offset = "0x10B96C8", VA = "0x10B96C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDD14", Offset = "0x8CDD14")]
			add
			{
			}
			[Token(Token = "0x600062D")]
			[Address(RVA = "0x10B976C", Offset = "0x10B976C", VA = "0x10B976C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDD24", Offset = "0x8CDD24")]
			remove
			{
			}
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x10B9810", Offset = "0x10B9810", VA = "0x10B9810", Slot = "10")]
		protected override void ApplyControllerState(XRInteractionUpdateOrder.UpdatePhase updatePhase, XRControllerState controllerState)
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x10B9A9C", Offset = "0x10B9A9C", VA = "0x10B9A9C")]
		public VRActionBasedController()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class VRDirectionTargetable : VRDirectionTargetableBase
	{
		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B073C", Offset = "0x8B073C")]
		[SerializeField]
		private string[] directionTargetableLayers;

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x10BBDEC", Offset = "0x10BBDEC", VA = "0x10BBDEC", Slot = "5")]
		protected override void RegisterTargetableLayers(Action<string> addToLayer)
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x10BBEA0", Offset = "0x10BBEA0", VA = "0x10BBEA0")]
		public VRDirectionTargetable()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public abstract class VRDirectionTargetableBase : MonoBehaviour
	{
		[Token(Token = "0x20000F9")]
		private struct TargetableData<T> where T : VRDirectionTargetableBase
		{
			[Token(Token = "0x4000500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T targetable;

			[Token(Token = "0x4000501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float sqrDistance;

			[Token(Token = "0x6000647")]
			public TargetableData(T targetable, float sqrDistance)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8830", Offset = "0x8A8830")]
		private sealed class <>c__18<TResult, TIn> where TResult : VRDirectionTargetableBase where TIn : VRDirectionTargetableBase
		{
			[Token(Token = "0x4000502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__18<TResult, TIn> <>9;

			[Token(Token = "0x4000503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<TargetableData<TResult>> <>9__18_0;

			[Token(Token = "0x6000649")]
			public <>c__18()
			{
			}

			[Token(Token = "0x600064A")]
			internal int <GetTargetablesInCone>b__18_0(TargetableData<TResult> a, TargetableData<TResult> b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float targetWeight;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float targetCenterOffset;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string layer;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> additionalLayers;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<VRDirectionTargetableBase>> targetables;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Type, IList> targetableSortLists;

		[Token(Token = "0x1700010F")]
		public float TargetWeight
		{
			[Token(Token = "0x6000632")]
			[Address(RVA = "0x10BBF0C", Offset = "0x10BBF0C", VA = "0x10BBF0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000633")]
			[Address(RVA = "0x10BBF14", Offset = "0x10BBF14", VA = "0x10BBF14")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public float TargetCenterOffset
		{
			[Token(Token = "0x6000634")]
			[Address(RVA = "0x10BBF1C", Offset = "0x10BBF1C", VA = "0x10BBF1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000111")]
		protected virtual bool IsTargetable
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0x10BBA88", Offset = "0x10BBA88", VA = "0x10BBA88", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x10BBF24", Offset = "0x10BBF24", VA = "0x10BBF24")]
		public static int GetTargetables(ICollection<VRDirectionTargetableBase> result, string layer, [System.Runtime.InteropServices.Optional] Predicate<VRDirectionTargetableBase> isTargetableValid)
		{
			return default(int);
		}

		[Token(Token = "0x6000637")]
		public static int GetTargetables<T>(ICollection<T> result, string layer, [System.Runtime.InteropServices.Optional] Predicate<T> isTargetableValid) where T : VRDirectionTargetableBase
		{
			return default(int);
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x10BBFB4", Offset = "0x10BBFB4", VA = "0x10BBFB4")]
		public static int GetTargetablesInCone(ICollection<VRDirectionTargetableBase> result, string layer, Ray coneRay, float coneBaseRadius, float coneAngle, [System.Runtime.InteropServices.Optional] Predicate<VRDirectionTargetableBase> isTargetableValid, bool compareDistanceToCenter = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000639")]
		public static int GetTargetablesInCone<T>(ICollection<T> result, string layer, Ray coneRay, float coneBaseRadius, float coneAngle, [System.Runtime.InteropServices.Optional] Predicate<T> isTargetableValid, bool compareDistanceToCenter = false) where T : VRDirectionTargetableBase
		{
			return default(int);
		}

		[Token(Token = "0x600063A")]
		public static int GetTargetablesInCone<TResult, TIn>(ICollection<TResult> result, IEnumerable<TIn> targetables, Ray coneRay, float coneBaseRadius, float coneAngle, [System.Runtime.InteropServices.Optional] Predicate<TResult> isTargetableValid, bool compareDistanceToCenter = false) where TResult : VRDirectionTargetableBase where TIn : VRDirectionTargetableBase
		{
			return default(int);
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x10BC0A0", Offset = "0x10BC0A0", VA = "0x10BC0A0")]
		public static bool TryGetTargetableInCone(string layer, Ray coneRay, float coneBaseRadius, float coneAngle, out VRDirectionTargetableBase closestTargetable, [System.Runtime.InteropServices.Optional] Predicate<VRDirectionTargetableBase> isTargetableValid, bool compareDistanceToCenter = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600063C")]
		public static bool TryGetTargetableInCone<T>(string layer, Ray coneRay, float coneBaseRadius, float coneAngle, out T closestTargetable, [System.Runtime.InteropServices.Optional] Predicate<T> isTargetableValid, bool compareDistanceToCenter = false) where T : VRDirectionTargetableBase
		{
			return default(bool);
		}

		[Token(Token = "0x600063D")]
		public static bool TryGetTargetableInCone<TResult, TIn>(IEnumerable<TIn> targetables, Ray coneRay, float coneBaseRadius, float coneAngle, out TResult closestTargetable, [System.Runtime.InteropServices.Optional] Predicate<TResult> isTargetableValid, bool compareDistanceToCenter = false) where TResult : VRDirectionTargetableBase where TIn : VRDirectionTargetableBase
		{
			return default(bool);
		}

		[Token(Token = "0x600063E")]
		protected abstract void RegisterTargetableLayers(Action<string> addToLayer);

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x10BC190", Offset = "0x10BC190", VA = "0x10BC190", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x10BC228", Offset = "0x10BC228", VA = "0x10BC228")]
		protected void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x10BC2F4", Offset = "0x10BC2F4", VA = "0x10BC2F4", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x10BC528", Offset = "0x10BC528", VA = "0x10BC528")]
		public void SetTargetWeight(float weight)
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x10BC530", Offset = "0x10BC530", VA = "0x10BC530")]
		private void RegisterToLayer(string layer)
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x10BC448", Offset = "0x10BC448", VA = "0x10BC448")]
		private void DeregisterFromLayer(string layer)
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x10BBDDC", Offset = "0x10BBDDC", VA = "0x10BBDDC")]
		protected VRDirectionTargetableBase()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class VRHandAnimationState : MonoBehaviour
	{
		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRHandAnimator animator;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PhysicsTriggerContainer pointTrigger;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InteractionLayerMask pointTriggerLayers;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B07D8", Offset = "0x8B07D8")]
		private Renderer handRenderer;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0824", Offset = "0x8B0824")]
		private GameObject handGlitchObject;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Renderer handGlitchRenderer;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystem handGlitchParticleSystem;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float outOfBoundsGlitchStart;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B08A0", Offset = "0x8B08A0")]
		[SerializeField]
		private string handGlitchProperty;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B08EC", Offset = "0x8B08EC")]
		[SerializeField]
		private string pulseProperty;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector2 pulseValueRange;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float pulseSpeed;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public AnimationCurve pulseCurve;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public HapticPreset pulseHaptic;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VRPlayerHand hand;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private InputActionReference fistAction;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private InputActionReference tenseAction;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private XRRayInteractor pointInteractor;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool activeFist;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool activeTense;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		private bool activePoint;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float pulseTimer;

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x10BCB1C", Offset = "0x10BCB1C", VA = "0x10BCB1C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x10BCC78", Offset = "0x10BCC78", VA = "0x10BCC78")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x10BCE38", Offset = "0x10BCE38", VA = "0x10BCE38")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x10BCEDC", Offset = "0x10BCEDC", VA = "0x10BCEDC")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x10BCCF8", Offset = "0x10BCCF8", VA = "0x10BCCF8")]
		private void UpdatePoseActive(VRHandPose pose, bool newActive, ref bool currentActive, ref bool changed)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x10BD5E4", Offset = "0x10BD5E4", VA = "0x10BD5E4")]
		private bool ValidateCollider(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x10BD0D8", Offset = "0x10BD0D8", VA = "0x10BD0D8")]
		private void CheckOutOfBounds()
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x10BD32C", Offset = "0x10BD32C", VA = "0x10BD32C")]
		private void UpdatePulse()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x10BCE44", Offset = "0x10BCE44", VA = "0x10BCE44")]
		private void SetPulse(float time)
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x10BD7A0", Offset = "0x10BD7A0", VA = "0x10BD7A0")]
		public VRHandAnimationState()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public enum VRHandPose
	{
		[Token(Token = "0x400051B")]
		None,
		[Token(Token = "0x400051C")]
		Relaxed,
		[Token(Token = "0x400051D")]
		Fist,
		[Token(Token = "0x400051E")]
		Point,
		[Token(Token = "0x400051F")]
		Tense
	}
	[Token(Token = "0x20000FD")]
	public class VRHandAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000FE")]
		public struct HandPoseTrigger
		{
			[Token(Token = "0x4000525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VRHandPose pose;

			[Token(Token = "0x4000526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string trigger;
		}

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRHandPose startPose;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPoseTrigger[] handPoses;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentPoseIndex;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] handPoseActiveCount;

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x10BD810", Offset = "0x10BD810", VA = "0x10BD810")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x10BD8D4", Offset = "0x10BD8D4", VA = "0x10BD8D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x10BD4D0", Offset = "0x10BD4D0", VA = "0x10BD4D0")]
		public void ShowPose(VRHandPose pose, bool updatePose = true)
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x10BD558", Offset = "0x10BD558", VA = "0x10BD558")]
		public void HidePose(VRHandPose pose, bool updatePose = true)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x10BCD40", Offset = "0x10BCD40", VA = "0x10BCD40")]
		public void UpdatePose(bool force = false)
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x10BD8DC", Offset = "0x10BD8DC", VA = "0x10BD8DC")]
		private bool TryGetPose(VRHandPose pose, out HandPoseTrigger trigger, out int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x10BD970", Offset = "0x10BD970", VA = "0x10BD970")]
		public VRHandAnimator()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class VRHandModel : MonoBehaviour
	{
		[Token(Token = "0x2000100")]
		public enum HandRenderQueue
		{
			[Token(Token = "0x400052B")]
			Default,
			[Token(Token = "0x400052C")]
			AlwaysOnTop
		}

		[Serializable]
		[Token(Token = "0x2000101")]
		public class HandRenderer
		{
			[Token(Token = "0x400052D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Renderer renderer;

			[Token(Token = "0x400052E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int renderQueueDefault;

			[Token(Token = "0x400052F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int renderQueueAlwaysOnTop;

			[Token(Token = "0x4000530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool isSetUp;

			[Token(Token = "0x6000660")]
			[Address(RVA = "0xEA3390", Offset = "0xEA3390", VA = "0xEA3390")]
			public void Setup(VRHandModel handModel)
			{
			}

			[Token(Token = "0x6000661")]
			[Address(RVA = "0xEA33EC", Offset = "0xEA33EC", VA = "0xEA33EC")]
			public void SetRenderQueue(VRHandModel handModel, HandRenderQueue renderQueue)
			{
			}

			[Token(Token = "0x6000662")]
			[Address(RVA = "0xEA3444", Offset = "0xEA3444", VA = "0xEA3444")]
			public HandRenderer()
			{
			}
		}

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject modelRoot;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HandRenderer[] modelRenderers;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HandRenderQueue renderQueue;

		[Token(Token = "0x17000112")]
		public HandRenderQueue RenderQueue
		{
			[Token(Token = "0x600065C")]
			[Address(RVA = "0x10BD980", Offset = "0x10BD980", VA = "0x10BD980")]
			get
			{
				return default(HandRenderQueue);
			}
			[Token(Token = "0x600065D")]
			[Address(RVA = "0x10BD988", Offset = "0x10BD988", VA = "0x10BD988")]
			set
			{
			}
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x10BDA0C", Offset = "0x10BDA0C", VA = "0x10BDA0C")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x10BDA64", Offset = "0x10BDA64", VA = "0x10BDA64")]
		public VRHandModel()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class VRPlayerCameraMode : GameMonoBehaviour
	{
		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B09C8", Offset = "0x8B09C8")]
		[SerializeField]
		private VRActionBasedController controller;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VRTrackedPoseDriver tracker;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VRPlayerSelector selector;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0A34", Offset = "0x8B0A34")]
		private float horizontalVerticalInputDeadZone;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private InputActionReference flyHorizontalInputAction;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRPlayerSelector.ActionAvailability flyHorizontalInputAvailability;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private bool flyHorizontalInputInOrbit;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private InputActionReference flyVerticalInputAction;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private VRPlayerSelector.ActionAvailability flyVerticalInputAvailability;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private bool flyVerticalInputInOrbit;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private InputActionReference orbitSpeedAndTiltInputAction;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private VRPlayerSelector.ActionAvailability orbitSpeedAndTiltInputAvailability;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InputActionReference togglePauseInputAction;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private VRPlayerSelector.ActionAvailability togglePauseInputAvailability;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private InputActionReference screenshotInputAction;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private VRPlayerSelector.ActionAvailability screenshotInputAvailability;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private InputActionReference modifierInputAction;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private VRPlayerSelector.ActionAvailability modifierInputAvailability;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0B60", Offset = "0x8B0B60")]
		private Vector2 flyMoveSpeedRange;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float flyMoveSpeedSmoothing;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private float flyMoveAcceleration;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0BCC", Offset = "0x8B0BCC")]
		[SerializeField]
		private string orbitCameraModeStringTransform;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Transform stabilizedCameraTransform;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Transform orbitCameraTransform;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject orbitCameraActiveToggle;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private TMP_Text orbitCameraDistanceLabel;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TMP_Text orbitCameraRotationLabel;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TMP_Text orbitCameraTiltLabel;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0C78", Offset = "0x8B0C78")]
		private float orbitRotateSpeed;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private float orbitTiltSpeed;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float orbitDistanceSpeed;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0CE4", Offset = "0x8B0CE4")]
		private GameObject togglePauseObject;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0D30", Offset = "0x8B0D30")]
		[SerializeField]
		private int screenshotSizeMultiplier;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject[] screenshotToggleObjects;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float screenshotToggleObjectDuration;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Vector2 flyHorizontalDirection;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float flyHorizontalSpeed;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float flyVerticalSpeed;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool orbitEnabled;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		private bool orbitActive;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private SpaceEntitySteering.SteerPosition orbitTarget;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float orbitDistance;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float orbitAngle;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float orbitAngleSpeed;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float orbitTilt;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool togglePauseInputState;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private AsyncFlag pauseFlag;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool screenshotInputState;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastScreenshotTime;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private bool modifierInputState;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float FlySpeedMultiplier;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<VRPlayerCameraMode> CameraModes;

		[Token(Token = "0x17000113")]
		public VRPlayerSelector Selector
		{
			[Token(Token = "0x6000663")]
			[Address(RVA = "0x10C2AE4", Offset = "0x10C2AE4", VA = "0x10C2AE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public bool IsOrbitMode
		{
			[Token(Token = "0x6000664")]
			[Address(RVA = "0x10C2AEC", Offset = "0x10C2AEC", VA = "0x10C2AEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000115")]
		private VRPlayerSelectorAction StartOrbitAction
		{
			[Token(Token = "0x6000665")]
			[Address(RVA = "0x10C2B80", Offset = "0x10C2B80", VA = "0x10C2B80")]
			get
			{
				return default(VRPlayerSelectorAction);
			}
		}

		[Token(Token = "0x17000116")]
		private VRPlayerSelectorAction StopOrbitAction
		{
			[Token(Token = "0x6000666")]
			[Address(RVA = "0x10C2CB8", Offset = "0x10C2CB8", VA = "0x10C2CB8")]
			get
			{
				return default(VRPlayerSelectorAction);
			}
		}

		[Token(Token = "0x17000117")]
		private static bool ModifierInputActive
		{
			[Token(Token = "0x6000667")]
			[Address(RVA = "0x10C2D98", Offset = "0x10C2D98", VA = "0x10C2D98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000118")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x6000668")]
			[Address(RVA = "0x10C2F00", Offset = "0x10C2F00", VA = "0x10C2F00", Slot = "14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000669")]
			[Address(RVA = "0x10C2F08", Offset = "0x10C2F08", VA = "0x10C2F08", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x10C2F0C", Offset = "0x10C2F0C", VA = "0x10C2F0C", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x10C3120", Offset = "0x10C3120", VA = "0x10C3120")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x10C3864", Offset = "0x10C3864", VA = "0x10C3864")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x10C389C", Offset = "0x10C389C", VA = "0x10C389C", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x10C3AD8", Offset = "0x10C3AD8", VA = "0x10C3AD8", Slot = "32")]
		protected override void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x10C3BE0", Offset = "0x10C3BE0", VA = "0x10C3BE0")]
		private void UpdateOrbitMovement(float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x10C3C48", Offset = "0x10C3C48", VA = "0x10C3C48")]
		private void UpdateInput(float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x10C4C08", Offset = "0x10C4C08", VA = "0x10C4C08")]
		private bool TryGetScreenshotCamera(out Camera screenshotCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x10C4DA0", Offset = "0x10C4DA0", VA = "0x10C4DA0")]
		private string GetScreenshotPath()
		{
			return null;
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x10C33E4", Offset = "0x10C33E4", VA = "0x10C33E4")]
		private void UpdateCameraRotation()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x10C4DA8", Offset = "0x10C4DA8", VA = "0x10C4DA8")]
		private void UpdateStabilizedCameraRotation()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x10C4EA8", Offset = "0x10C4EA8", VA = "0x10C4EA8")]
		private void UpdateOrbitCameraRotation()
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x10C47A4", Offset = "0x10C47A4", VA = "0x10C47A4")]
		private void SetOrbitEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x10C4984", Offset = "0x10C4984", VA = "0x10C4984")]
		private void StartOrbit(SpaceEntitySteering.SteerPosition target)
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x10C506C", Offset = "0x10C506C", VA = "0x10C506C")]
		private void StopOrbit(SpaceEntitySteering.SteerPosition target)
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x10C343C", Offset = "0x10C343C", VA = "0x10C343C")]
		private void UpdateOrbitLabels()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x10C32A4", Offset = "0x10C32A4", VA = "0x10C32A4")]
		private void SetPaused(bool paused)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x10C48E4", Offset = "0x10C48E4", VA = "0x10C48E4")]
		private void LimitAxisByDeadZone(ref Vector2 axis, out float magnitude)
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x10C4960", Offset = "0x10C4960", VA = "0x10C4960")]
		private void LimitAxisByDeadZoneX(ref Vector2 axis, out float magnitude)
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x10C493C", Offset = "0x10C493C", VA = "0x10C493C")]
		private void LimitAxisByDeadZoneY(ref Vector2 axis, out float magnitude)
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x10C5168", Offset = "0x10C5168", VA = "0x10C5168")]
		public VRPlayerCameraMode()
		{
		}
	}
	[Token(Token = "0x2000103")]
	public enum VRPlayerHandState
	{
		[Token(Token = "0x4000566")]
		Active,
		[Token(Token = "0x4000567")]
		Inactive,
		[Token(Token = "0x4000568")]
		Invisible,
		[Token(Token = "0x4000569")]
		UIInactive,
		[Token(Token = "0x400056A")]
		OutOfBounds
	}
	[Token(Token = "0x2000104")]
	public class VRPlayerHand : MonoBehaviour
	{
		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform orientationTransform;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ActionBasedController grabber;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ActionBasedController pointer;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VRPlayerSelector selector;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRHandModel model;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject[] uiInteractors;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject grabberInteractor;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Behaviour[] componentBehaviours;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0E1C", Offset = "0x8B0E1C")]
		private readonly FlagGroup <StateInactive>k__BackingField;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0E2C", Offset = "0x8B0E2C")]
		private readonly FlagGroup <StateInvisible>k__BackingField;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0E3C", Offset = "0x8B0E3C")]
		private readonly FlagGroup <StateUIInactive>k__BackingField;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0E4C", Offset = "0x8B0E4C")]
		private readonly FlagGroup <StateOutOfBounds>k__BackingField;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0E5C", Offset = "0x8B0E5C")]
		private bool <Pulse>k__BackingField;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool nonGrabInteraction;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AsyncFlag outOfBoundsFlag;

		[Token(Token = "0x17000119")]
		public Transform Transform
		{
			[Token(Token = "0x6000680")]
			[Address(RVA = "0x10C52B4", Offset = "0x10C52B4", VA = "0x10C52B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		public ActionBasedController Grabber
		{
			[Token(Token = "0x6000681")]
			[Address(RVA = "0x10C52BC", Offset = "0x10C52BC", VA = "0x10C52BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		public ActionBasedController Pointer
		{
			[Token(Token = "0x6000682")]
			[Address(RVA = "0x10C52C4", Offset = "0x10C52C4", VA = "0x10C52C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		public VRPlayerSelector Selector
		{
			[Token(Token = "0x6000683")]
			[Address(RVA = "0x10C52CC", Offset = "0x10C52CC", VA = "0x10C52CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		public VRHandModel.HandRenderQueue RenderQueue
		{
			[Token(Token = "0x6000684")]
			[Address(RVA = "0x10C52D4", Offset = "0x10C52D4", VA = "0x10C52D4")]
			get
			{
				return default(VRHandModel.HandRenderQueue);
			}
			[Token(Token = "0x6000685")]
			[Address(RVA = "0x10C52F0", Offset = "0x10C52F0", VA = "0x10C52F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public FlagGroup StateInactive
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0x10C5308", Offset = "0x10C5308", VA = "0x10C5308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDD34", Offset = "0x8CDD34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public FlagGroup StateInvisible
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0x10C5310", Offset = "0x10C5310", VA = "0x10C5310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDD44", Offset = "0x8CDD44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		public FlagGroup StateUIInactive
		{
			[Token(Token = "0x6000688")]
			[Address(RVA = "0x10C5318", Offset = "0x10C5318", VA = "0x10C5318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDD54", Offset = "0x8CDD54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		public FlagGroup StateOutOfBounds
		{
			[Token(Token = "0x6000689")]
			[Address(RVA = "0x10C5320", Offset = "0x10C5320", VA = "0x10C5320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDD64", Offset = "0x8CDD64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		public VRPlayerHandState State
		{
			[Token(Token = "0x600068A")]
			[Address(RVA = "0x10BD048", Offset = "0x10BD048", VA = "0x10BD048")]
			get
			{
				return default(VRPlayerHandState);
			}
		}

		[Token(Token = "0x17000123")]
		public bool Pulse
		{
			[Token(Token = "0x600068B")]
			[Address(RVA = "0x10C5328", Offset = "0x10C5328", VA = "0x10C5328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDD74", Offset = "0x8CDD74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600068C")]
			[Address(RVA = "0x10C5330", Offset = "0x10C5330", VA = "0x10C5330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDD84", Offset = "0x8CDD84")]
			set
			{
			}
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x10C533C", Offset = "0x10C533C", VA = "0x10C533C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x10C5474", Offset = "0x10C5474", VA = "0x10C5474")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x10C555C", Offset = "0x10C555C", VA = "0x10C555C")]
		private void UpdateInteractorsAndVisibleFromFlag(bool wasFlagged, bool isFlagged)
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x10C5560", Offset = "0x10C5560", VA = "0x10C5560")]
		private void UpdateInteractorsAndVisible()
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x10C57F4", Offset = "0x10C57F4", VA = "0x10C57F4")]
		public void SetNonGrabInteractionEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x10C5658", Offset = "0x10C5658", VA = "0x10C5658")]
		private void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x10C5674", Offset = "0x10C5674", VA = "0x10C5674")]
		private void SetUIInteractorsEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x10C5708", Offset = "0x10C5708", VA = "0x10C5708")]
		private void SetGrabberInteractorEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x10C5760", Offset = "0x10C5760", VA = "0x10C5760")]
		private void SetComponentBehavioursEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x10C5800", Offset = "0x10C5800", VA = "0x10C5800")]
		public VRPlayerHand()
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class VRPlayerHapticsAction : MonoBehaviour
	{
		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HapticPreset preset;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HapticSelector selector;

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x10C58EC", Offset = "0x10C58EC", VA = "0x10C58EC")]
		public void TriggerHapticFeedback()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x10C59C4", Offset = "0x10C59C4", VA = "0x10C59C4")]
		public VRPlayerHapticsAction()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public enum HapticPreset
	{
		[Token(Token = "0x400057D")]
		None = 0,
		[Token(Token = "0x400057E")]
		ShortTiny = 1110,
		[Token(Token = "0x400057F")]
		ShortSmall = 1120,
		[Token(Token = "0x4000580")]
		ShortMedium = 1130,
		[Token(Token = "0x4000581")]
		ShortLarge = 1140,
		[Token(Token = "0x4000582")]
		ShortIntense = 1150,
		[Token(Token = "0x4000583")]
		LongTiny = 3110,
		[Token(Token = "0x4000584")]
		LongSmall = 3120,
		[Token(Token = "0x4000585")]
		LongMedium = 3130,
		[Token(Token = "0x4000586")]
		LongLarge = 3140,
		[Token(Token = "0x4000587")]
		LongIntense = 3150
	}
	[Token(Token = "0x2000107")]
	public enum HapticSelector
	{
		[Token(Token = "0x4000589")]
		All,
		[Token(Token = "0x400058A")]
		Main,
		[Token(Token = "0x400058B")]
		Off,
		[Token(Token = "0x400058C")]
		Right,
		[Token(Token = "0x400058D")]
		Left
	}
	[Token(Token = "0x2000108")]
	public class VRPlayerHapticsManager : MonoBehaviour
	{
		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0E8C", Offset = "0x8B0E8C")]
		private float presetDurationShort;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float presetDurationLong;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0EE8", Offset = "0x8B0EE8")]
		private float presetIntensityTiny;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float presetIntensitySmall;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float presetIntensityMedium;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float presetIntensityLarge;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float presetIntensityIntense;

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x10BDD24", Offset = "0x10BDD24", VA = "0x10BDD24")]
		public void TriggerHapticImpulse(HapticPreset preset, HapticSelector selectorSetting = HapticSelector.All)
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x10BD788", Offset = "0x10BD788", VA = "0x10BD788")]
		public void TriggerHapticImpulse(HapticPreset preset, XRNode xrNode)
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x10C5AA4", Offset = "0x10C5AA4", VA = "0x10C5AA4")]
		private void TriggerHapticOnSelector(VRPlayerSelector selector, float amplitude, float duration)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x10C5B00", Offset = "0x10C5B00", VA = "0x10C5B00")]
		private VRPlayerSelector GetSelector(HapticSelector selectorSetting)
		{
			return null;
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x10C59CC", Offset = "0x10C59CC", VA = "0x10C59CC")]
		private float GetPresetDuration(HapticPreset preset)
		{
			return default(float);
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x10C5A28", Offset = "0x10C5A28", VA = "0x10C5A28")]
		private float GetPresetIntensity(HapticPreset preset)
		{
			return default(float);
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x10C5F04", Offset = "0x10C5F04", VA = "0x10C5F04")]
		public VRPlayerHapticsManager()
		{
		}
	}
	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8840", Offset = "0x8A8840")]
	public class VRPlayerScanner : GameMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200010A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A88A0", Offset = "0x8A88A0")]
		private sealed class <>c
		{
			[Token(Token = "0x40005D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40005D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<VRScannableBase> <>9__86_0;

			[Token(Token = "0x40005D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<VRScannableBase> <>9__86_1;

			[Token(Token = "0x60006BF")]
			[Address(RVA = "0xEA3554", Offset = "0xEA3554", VA = "0xEA3554")]
			public <>c()
			{
			}

			[Token(Token = "0x60006C0")]
			[Address(RVA = "0xEA355C", Offset = "0xEA355C", VA = "0xEA355C")]
			internal bool <UpdateScannerTargets>b__86_0(VRScannableBase s)
			{
				return default(bool);
			}

			[Token(Token = "0x60006C1")]
			[Address(RVA = "0xEA3594", Offset = "0xEA3594", VA = "0xEA3594")]
			internal bool <UpdateScannerTargets>b__86_1(VRScannableBase s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0F74", Offset = "0x8B0F74")]
		private Renderer scanLightRenderer;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float scanLightSmoothing;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float scanRotationSmoothing;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0FE0", Offset = "0x8B0FE0")]
		[SerializeField]
		private float scanLightRadius;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float scanLightMeshLengthDefault;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float scanLightMeshLengthMax;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float scanLightColorLengthMax;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float scanLightColorLengthFactor;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B106C", Offset = "0x8B106C")]
		[SerializeField]
		private Color scanLightColorDefault;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Color scanLightColorFocus;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Color scanLightColorTarget;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B10D8", Offset = "0x8B10D8")]
		private Vector2 scanLightScanlineSpeedDefault;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Vector2 scanLightScanlineSpeedFocus;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private Vector2 scanLightScanlineSpeedTarget;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8B1144", Offset = "0x8B1144")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1144", Offset = "0x8B1144")]
		private Color scanLineColorDefault;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8B11A8", Offset = "0x8B11A8")]
		[SerializeField]
		private Color scanLineColorFocus;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8B11E8", Offset = "0x8B11E8")]
		[SerializeField]
		private Color scanLineColorTarget;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1228", Offset = "0x8B1228")]
		[SerializeField]
		private string materialPropertyWidth;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string materialPropertyColor;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private string materialPropertyMeshLength;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private string materialPropertyColorLength;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private string materialPropertyFocus;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private string materialPropertyScanSpeed;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private string materialPropertyLineColor;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B12D4", Offset = "0x8B12D4")]
		[SerializeField]
		private Transform forwardTransform;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float scanWideAngle;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private float scanWideAngleVisual;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private float scanFocusAngle;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private float scanAutoFocusAngle;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float scanFocusAngleVisual;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1370", Offset = "0x8B1370")]
		[SerializeField]
		private InputActionReference scanMultiFunctionAction;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private InputActionReference scanHoldAction;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private InputActionReference scanHoldFocusAction;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private InputActionReference interactAction;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private float scannerFocusHoldTimeStart;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		private bool scannerAutoFocus;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B140C", Offset = "0x8B140C")]
		[SerializeField]
		private UnityEvent onScannerActivate;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private UnityEvent onScannerDeactivate;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private UnityEvent onScannerFocus;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private UnityEvent onScannerDefocus;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private UnityEvent onScannerTargetFocus;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private UnityEvent onScannerTargetDefocus;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B14A8", Offset = "0x8B14A8")]
		[SerializeField]
		private SfxTrigger activeSfx;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private SfxTrigger focusStartSfx;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private SfxTrigger focusEndSfx;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private SfxTrigger focusSfx;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private float activeSfxLoopFadeOutTime;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		private float focusSfxLoopFadeOutTime;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1544", Offset = "0x8B1544")]
		private VRPlayerScannerManager <Manager>k__BackingField;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private bool scannerActive;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		private bool scannerFocus;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private float scanHoldStartTime;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool selectPreviousFrame;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		private bool instantVisualTransition;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float currentVisualFocus;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float currentVisualLength;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private Vector2 currentVisualScanSpeed;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Quaternion currentVisualRotation;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private Color currentVisualColor;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8B1554", Offset = "0x8B1554")]
		private Color currentLineColor;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private VRScannableBase focusedScannable;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private ActionBasedController controller;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private MaterialPropertyBlock rendererPropertyBlock;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private List<VRScannableBase> scannables;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private List<VRScannableBase> currentScanTargets;

		[Token(Token = "0x17000124")]
		public VRPlayerScannerManager Manager
		{
			[Token(Token = "0x60006A0")]
			[Address(RVA = "0x11EF9D8", Offset = "0x11EF9D8", VA = "0x11EF9D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDD94", Offset = "0x8CDD94")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006A1")]
			[Address(RVA = "0x11EF9E0", Offset = "0x11EF9E0", VA = "0x11EF9E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDDA4", Offset = "0x8CDDA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public bool ScannerActive
		{
			[Token(Token = "0x60006A2")]
			[Address(RVA = "0x11EF9F0", Offset = "0x11EF9F0", VA = "0x11EF9F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006A3")]
			[Address(RVA = "0x11EF9F8", Offset = "0x11EF9F8", VA = "0x11EF9F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public bool ScannerFocus
		{
			[Token(Token = "0x60006A4")]
			[Address(RVA = "0x11EFF04", Offset = "0x11EFF04", VA = "0x11EFF04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006A5")]
			[Address(RVA = "0x11EFC00", Offset = "0x11EFC00", VA = "0x11EFC00")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public bool ScannerAutoFocus
		{
			[Token(Token = "0x60006A6")]
			[Address(RVA = "0x11EFF0C", Offset = "0x11EFF0C", VA = "0x11EFF0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006A7")]
			[Address(RVA = "0x11EFF14", Offset = "0x11EFF14", VA = "0x11EFF14")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x60006A8")]
			[Address(RVA = "0x11EFF20", Offset = "0x11EFF20", VA = "0x11EFF20", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x11EFF28", Offset = "0x11EFF28", VA = "0x11EFF28")]
		protected void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x11F007C", Offset = "0x11F007C", VA = "0x11F007C", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x11F02E4", Offset = "0x11F02E4", VA = "0x11F02E4", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x11F0378", Offset = "0x11F0378", VA = "0x11F0378")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x11F0380", Offset = "0x11F0380", VA = "0x11F0380", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x11F0548", Offset = "0x11F0548", VA = "0x11F0548")]
		protected void Update()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x11F0574", Offset = "0x11F0574", VA = "0x11F0574")]
		private void UpdateScannerInput()
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x11F07A0", Offset = "0x11F07A0", VA = "0x11F07A0")]
		private void UpdateScannerTargets()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x11EFDAC", Offset = "0x11EFDAC", VA = "0x11EFDAC")]
		private void ClearScannerTargetList()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x11F10B8", Offset = "0x11F10B8", VA = "0x11F10B8")]
		private void UpdateScannerVisuals()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x11F16C0", Offset = "0x11F16C0", VA = "0x11F16C0")]
		private void OnScannerActivate()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x11F16F8", Offset = "0x11F16F8", VA = "0x11F16F8")]
		private void OnScannerDeActivate()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x11F1724", Offset = "0x11F1724", VA = "0x11F1724")]
		private void OnScannerFocus()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x11F17A8", Offset = "0x11F17A8", VA = "0x11F17A8")]
		private void OnScannerDeFocus()
		{
		}

		[Token(Token = "0x60006B7")]
		public static bool SetScannerActive<TComponent>(TComponent component, bool active) where TComponent : Component
		{
			return default(bool);
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x11F1830", Offset = "0x11F1830", VA = "0x11F1830")]
		public static bool SetScannerActive(GameObject obj, bool active)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B9")]
		public static bool SetScannerActiveAndAutoFocus<TComponent>(TComponent component, bool active, bool autoFocus) where TComponent : Component
		{
			return default(bool);
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x11F18BC", Offset = "0x11F18BC", VA = "0x11F18BC")]
		public static bool SetScannerActiveAndAutoFocus(GameObject obj, bool active, bool autoFocus)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BB")]
		public static bool SetScannerFocus<TComponent>(TComponent component, bool focus) where TComponent : Component
		{
			return default(bool);
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x11F195C", Offset = "0x11F195C", VA = "0x11F195C")]
		public static bool SetScannerFocus(GameObject obj, bool focus)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x11F19E8", Offset = "0x11F19E8", VA = "0x11F19E8")]
		public VRPlayerScanner()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class VRPlayerScannerManager : MonoBehaviour
	{
		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<VRPlayerScanner> scanners;

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x11F1C58", Offset = "0x11F1C58", VA = "0x11F1C58")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x11EFC3C", Offset = "0x11EFC3C", VA = "0x11EFC3C")]
		public void ResetScanners([System.Runtime.InteropServices.Optional] VRPlayerScanner ignoreScanner)
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x11F1D9C", Offset = "0x11F1D9C", VA = "0x11F1D9C")]
		public VRPlayerScannerManager()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class VRPlayerSelector : GameMonoBehaviour
	{
		[Token(Token = "0x200010D")]
		public enum ActionType
		{
			[Token(Token = "0x400061A")]
			None = 0,
			[Token(Token = "0x400061B")]
			ShipAbility = 1,
			[Token(Token = "0x400061C")]
			ShipMoveAction = 10,
			[Token(Token = "0x400061D")]
			ShipMoveInteractable = 11,
			[Token(Token = "0x400061E")]
			Scanner = 20,
			[Token(Token = "0x400061F")]
			Override = 100
		}

		[Token(Token = "0x200010E")]
		public enum ActionAvailability
		{
			[Token(Token = "0x4000621")]
			None = 0,
			[Token(Token = "0x4000622")]
			MainSelector = 1,
			[Token(Token = "0x4000623")]
			NonMainSelector = 20,
			[Token(Token = "0x4000624")]
			MainAndNonMainSelector = 40
		}

		[Serializable]
		[Token(Token = "0x200010F")]
		public struct InputActionObject
		{
			[Token(Token = "0x4000625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1960", Offset = "0x8B1960")]
			public ActionAvailability availability;

			[Token(Token = "0x4000626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1998", Offset = "0x8B1998")]
			public bool alwaysEnableWhileAvailable;

			[Token(Token = "0x4000627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B19D0", Offset = "0x8B19D0")]
			public GameObject gameObject;
		}

		[Token(Token = "0x2000110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A88B0", Offset = "0x8A88B0")]
		private sealed class <UpdateVisibilityAfterOneFrame>d__136 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400062A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRPlayerSelector <>4__this;

			[Token(Token = "0x1700013D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000719")]
				[Address(RVA = "0xEA3670", Offset = "0xEA3670", VA = "0xEA3670", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600071B")]
				[Address(RVA = "0xEA36B8", Offset = "0xEA36B8", VA = "0xEA36B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000716")]
			[Address(RVA = "0xEA35CC", Offset = "0xEA35CC", VA = "0xEA35CC")]
			[DebuggerHidden]
			public <UpdateVisibilityAfterOneFrame>d__136(int <>1__state)
			{
			}

			[Token(Token = "0x6000717")]
			[Address(RVA = "0xEA35F8", Offset = "0xEA35F8", VA = "0xEA35F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000718")]
			[Address(RVA = "0xEA35FC", Offset = "0xEA35FC", VA = "0xEA35FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600071A")]
			[Address(RVA = "0xEA3678", Offset = "0xEA3678", VA = "0xEA3678", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005DA")]
		private const float ABILITY_SELECT_THRESHOLD = 0.5f;

		[Token(Token = "0x40005DB")]
		private const float ABILITY_SELECT_THRESHOLD_SQR = 0.25f;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B156C", Offset = "0x8B156C")]
		private XRBaseInteractor[] interactors;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private XRBaseInteractor primaryInteractor;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform pointer;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private XRNode xrNode;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool mainSelector;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B15F8", Offset = "0x8B15F8")]
		private ActionType defaultActionMain;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private ActionType defaultActionNonMain;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1654", Offset = "0x8B1654")]
		[SerializeField]
		private VRPieChartMenu abilityMenuPrefab;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform abilityMenuParent;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int abilityMenuMaxCount;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private int defaultAbilityIndex;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B16D0", Offset = "0x8B16D0")]
		private VRPlayerSelectorActionPreviewer actionPreviewer;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private VRPlayerSelectorMoveAction playerShipMoveAction;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B172C", Offset = "0x8B172C")]
		[SerializeField]
		private UiButton menuButton;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Vector2Int menuNavigationIndexRangeLeft;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Vector2Int menuNavigationIndexRangeRight;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1798", Offset = "0x8B1798")]
		private InputActionReference menuInputAction;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ActionAvailability menuInputAvailability;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private InputActionReference scannerInputAction;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ActionAvailability scannerInputAvailability;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private InputActionReference moveInputAction;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ActionAvailability moveInputAvailability;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private InputActionReference abilitySelectInputAction;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private InputActionReference abilitySelectInstantInputAction;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private ActionAvailability abilitySelectInputAvailability;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private ActionAvailability navigationSelectInputAvailability;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private ActionAvailability selectorRayMirrorInputAvailability;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private InputActionReference abilityCenterInputAction;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private ActionAvailability abilityCenterInputAvailability;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private InputActionReference activateInputAction;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private InputActionReference grabInputAction;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private InputActionObject[] inputActionObjects;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B18D4", Offset = "0x8B18D4")]
		private string[] disableStringTransformModes;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1920", Offset = "0x8B1920")]
		private VRPlayerSelectorManager <Manager>k__BackingField;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1930", Offset = "0x8B1930")]
		private VRPlayerSelectorScannerAction <ScannerAction>k__BackingField;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private SpaceShip playerShip;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private SpaceShipController playerShipController;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private VRPieChartMenu abilityMenu;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool abilityMenuVisible;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private ActionType currentActionType;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private VRPlayerSelectorAction currentAction;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private bool currentActionActive;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private int currentAbilityIndex;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private ShipAbilityActive currentAbility;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private bool hasOverrideAction;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private VRPlayerSelectorAction overrideAction;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private bool menuInputState;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x309")]
		private bool scannerInputState;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30A")]
		private bool moveInputState;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private Vector2 abilitySelectInputValue;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private bool abilitySelectInputState;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x315")]
		private bool navigationSelectInputState;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private int abilitySelectInstantIndex;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private bool abilityCenterInputState;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31D")]
		private bool selectorRayMirrorInputState;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31E")]
		private bool activateInputState;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31F")]
		private bool loading;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private bool wasXRInteracting;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x321")]
		private bool disabledByStringTransformMode;

		[Token(Token = "0x17000129")]
		public VRPlayerSelectorManager Manager
		{
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0x11F1E20", Offset = "0x11F1E20", VA = "0x11F1E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDDB4", Offset = "0x8CDDB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0x11F1E28", Offset = "0x11F1E28", VA = "0x11F1E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDDC4", Offset = "0x8CDDC4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public VRPlayerSelectorActionPreviewer ActionPreviewer
		{
			[Token(Token = "0x60006C7")]
			[Address(RVA = "0x11F1E38", Offset = "0x11F1E38", VA = "0x11F1E38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		public IReadOnlyList<XRBaseInteractor> Interactors
		{
			[Token(Token = "0x60006C8")]
			[Address(RVA = "0x11F1E40", Offset = "0x11F1E40", VA = "0x11F1E40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		public Transform Pointer
		{
			[Token(Token = "0x60006C9")]
			[Address(RVA = "0x11F1E48", Offset = "0x11F1E48", VA = "0x11F1E48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		public XRNode XRNode
		{
			[Token(Token = "0x60006CA")]
			[Address(RVA = "0x11F1E50", Offset = "0x11F1E50", VA = "0x11F1E50")]
			get
			{
				return default(XRNode);
			}
		}

		[Token(Token = "0x1700012E")]
		public bool IsMainSelector
		{
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0x11F1E58", Offset = "0x11F1E58", VA = "0x11F1E58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006CC")]
			[Address(RVA = "0x11F1E60", Offset = "0x11F1E60", VA = "0x11F1E60")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public SpaceShip PlayerShip
		{
			[Token(Token = "0x60006CD")]
			[Address(RVA = "0x11F1EC0", Offset = "0x11F1EC0", VA = "0x11F1EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		public SpaceShipController PlayerShipController
		{
			[Token(Token = "0x60006CE")]
			[Address(RVA = "0x11F1EC8", Offset = "0x11F1EC8", VA = "0x11F1EC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		public VRPlayerSelectorMoveAction PlayerShipMoveAction
		{
			[Token(Token = "0x60006CF")]
			[Address(RVA = "0x11F1ED0", Offset = "0x11F1ED0", VA = "0x11F1ED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		public VRPlayerSelectorScannerAction ScannerAction
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0x11F1ED8", Offset = "0x11F1ED8", VA = "0x11F1ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDDD4", Offset = "0x8CDDD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006D1")]
			[Address(RVA = "0x11F1EE0", Offset = "0x11F1EE0", VA = "0x11F1EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDDE4", Offset = "0x8CDDE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public ActionType CurrentActionType
		{
			[Token(Token = "0x60006D2")]
			[Address(RVA = "0x11F1EF0", Offset = "0x11F1EF0", VA = "0x11F1EF0")]
			get
			{
				return default(ActionType);
			}
		}

		[Token(Token = "0x17000134")]
		public ActionType DefaultActionType
		{
			[Token(Token = "0x60006D3")]
			[Address(RVA = "0x11F1EF8", Offset = "0x11F1EF8", VA = "0x11F1EF8")]
			get
			{
				return default(ActionType);
			}
		}

		[Token(Token = "0x17000135")]
		public bool CurrentActionTypeDefault
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0x11F1F14", Offset = "0x11F1F14", VA = "0x11F1F14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000136")]
		public bool CurrentActionTypeDefaultAndInactive
		{
			[Token(Token = "0x60006D5")]
			[Address(RVA = "0x11F1F48", Offset = "0x11F1F48", VA = "0x11F1F48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000137")]
		public bool CurrentActionActive
		{
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0x11F1F88", Offset = "0x11F1F88", VA = "0x11F1F88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000138")]
		public int CurrentAbilityIndex
		{
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0x11F1F90", Offset = "0x11F1F90", VA = "0x11F1F90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000139")]
		public InputActionReference ActivateInputAction
		{
			[Token(Token = "0x60006D8")]
			[Address(RVA = "0x11F1F98", Offset = "0x11F1F98", VA = "0x11F1F98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		public InputActionReference GrabInputAction
		{
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0x11F1FA0", Offset = "0x11F1FA0", VA = "0x11F1FA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		protected override bool EnableOnGameStart
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0x11F22A0", Offset = "0x11F22A0", VA = "0x11F22A0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006DF")]
			[Address(RVA = "0x11F22A8", Offset = "0x11F22A8", VA = "0x11F22A8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x60006E0")]
			[Address(RVA = "0x11F22AC", Offset = "0x11F22AC", VA = "0x11F22AC", Slot = "14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0x11F22B4", Offset = "0x11F22B4", VA = "0x11F22B4", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x14000014")]
		public static event Action<ShipAbilityActive> OnAbilitySelect
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x11F1FA8", Offset = "0x11F1FA8", VA = "0x11F1FA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDDF4", Offset = "0x8CDDF4")]
			add
			{
			}
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0x11F2064", Offset = "0x11F2064", VA = "0x11F2064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDE04", Offset = "0x8CDE04")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public static event Action<ShipAbilityActive> OnAbilityActivate
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0x11F2120", Offset = "0x11F2120", VA = "0x11F2120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDE14", Offset = "0x8CDE14")]
			add
			{
			}
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0x11F21E0", Offset = "0x11F21E0", VA = "0x11F21E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDE24", Offset = "0x8CDE24")]
			remove
			{
			}
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x11F22B8", Offset = "0x11F22B8", VA = "0x11F22B8")]
		public void Setup(VRPlayerSelectorManager manager)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x11F2468", Offset = "0x11F2468", VA = "0x11F2468", Slot = "30")]
		protected override void OnGameStart()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x11F3144", Offset = "0x11F3144", VA = "0x11F3144")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x11F325C", Offset = "0x11F325C", VA = "0x11F325C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x11F33D4", Offset = "0x11F33D4", VA = "0x11F33D4", Slot = "32")]
		protected override void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x11F33FC", Offset = "0x11F33FC", VA = "0x11F33FC")]
		private void UpdateInput()
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x11F6954", Offset = "0x11F6954", VA = "0x11F6954", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x11F29DC", Offset = "0x11F29DC", VA = "0x11F29DC")]
		private void OnPlayerShipChanged(SpaceShip playerShip)
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x11F6EA8", Offset = "0x11F6EA8", VA = "0x11F6EA8")]
		private void OnPlayerShipAbilitiesChanged(SpaceShip.AbilityChangeType type, ShipAbilityActive ability)
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x11F7214", Offset = "0x11F7214", VA = "0x11F7214")]
		private void OnPlayerShipDisableSteeringChanged(bool wasDisabled, bool isDisabled)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x11F7254", Offset = "0x11F7254", VA = "0x11F7254")]
		private void OnPlayerShipDeathAndRevive(SpaceObject playerShip)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x11F725C", Offset = "0x11F725C", VA = "0x11F725C")]
		private void OnPlayerShipActiveChanged(bool isShipActive)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x11F7264", Offset = "0x11F7264", VA = "0x11F7264")]
		private void OnRunEndPending(bool success)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x11F726C", Offset = "0x11F726C", VA = "0x11F726C")]
		private void OnGamePauseChange(bool wasPaused, bool isPaused)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x11F7274", Offset = "0x11F7274", VA = "0x11F7274")]
		private void OnLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x11F7284", Offset = "0x11F7284", VA = "0x11F7284")]
		private void OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x11F7360", Offset = "0x11F7360", VA = "0x11F7360")]
		private void OnStringToggleTransformChange(string str, bool enabled)
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x11F6EE0", Offset = "0x11F6EE0", VA = "0x11F6EE0")]
		public void UpdateShipAbilities()
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x11F28D4", Offset = "0x11F28D4", VA = "0x11F28D4")]
		private void UpdateDisableByStringTransformMode()
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x11F1E88", Offset = "0x11F1E88", VA = "0x11F1E88")]
		public void UpdateDefaultAction(bool tryChangeAction = true)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x11F77F0", Offset = "0x11F77F0", VA = "0x11F77F0")]
		public bool TrySetAbilityIndex(int abilityIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x11F72E8", Offset = "0x11F72E8", VA = "0x11F72E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CDE34", Offset = "0x8CDE34")]
		private IEnumerator UpdateVisibilityAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x11F7894", Offset = "0x11F7894", VA = "0x11F7894")]
		private bool TrySetMoveAction(ActionType moveActionType)
		{
			return default(bool);
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x11F4DD8", Offset = "0x11F4DD8", VA = "0x11F4DD8")]
		private bool TrySetCurrentActionOrDefault(ActionType type, VRPlayerSelectorAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x11F3148", Offset = "0x11F3148", VA = "0x11F3148")]
		private bool TrySetDefaultAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x11F471C", Offset = "0x11F471C", VA = "0x11F471C")]
		private bool TrySetCurrentAction(ActionType type, VRPlayerSelectorAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x11F3260", Offset = "0x11F3260", VA = "0x11F3260")]
		private void ClearCurrentAction()
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x11F5CF8", Offset = "0x11F5CF8", VA = "0x11F5CF8")]
		private void TryActivateAction()
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x11F5FEC", Offset = "0x11F5FEC", VA = "0x11F5FEC")]
		private void TryDeactivateAction()
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x11F4224", Offset = "0x11F4224", VA = "0x11F4224")]
		public bool IsXRInteracting(bool checkDirectInteractors = true, bool checkRayInteractors = true, bool checkPrimaryInteractor = true, bool checkSecondaryInteractors = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x11F7BD4", Offset = "0x11F7BD4", VA = "0x11F7BD4")]
		public bool IsXRDragInteracting()
		{
			return default(bool);
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x11F612C", Offset = "0x11F612C", VA = "0x11F612C")]
		public bool CanUseMoveAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x11F49E4", Offset = "0x11F49E4", VA = "0x11F49E4")]
		public bool CanUseScannerAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x11F4E40", Offset = "0x11F4E40", VA = "0x11F4E40")]
		public bool CanUseNonDefaultAction(ActionType action)
		{
			return default(bool);
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x11F7BB0", Offset = "0x11F7BB0", VA = "0x11F7BB0")]
		public bool CanUseAnyAction(ActionType action)
		{
			return default(bool);
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x11F8280", Offset = "0x11F8280", VA = "0x11F8280")]
		public bool CanUseAnyShipAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x11F8084", Offset = "0x11F8084", VA = "0x11F8084")]
		public bool CanUseAnyPlayerAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x11F84C8", Offset = "0x11F84C8", VA = "0x11F84C8")]
		public bool CanUseAnySystemAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x11F6EB8", Offset = "0x11F6EB8", VA = "0x11F6EB8")]
		public void UpdateVisibility(bool forceUpdate = false)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x11F85A4", Offset = "0x11F85A4", VA = "0x11F85A4")]
		public void UpdateInputObjectsVisible()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x11F7364", Offset = "0x11F7364", VA = "0x11F7364")]
		public void UpdateAbilityMenuVisible(bool forceUpdate = false)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x11F5B94", Offset = "0x11F5B94", VA = "0x11F5B94")]
		public bool TryGetAbilityMenu(out VRPieChartMenu menu, bool clearIfInstantiated = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x11F4E9C", Offset = "0x11F4E9C", VA = "0x11F4E9C")]
		public bool CanCreateActionFromShipAbility(int abilityIndex, out ShipAbilityActive ability, bool checkIfDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x11F48C8", Offset = "0x11F48C8", VA = "0x11F48C8")]
		public bool IsActionAvailable(ActionAvailability availability)
		{
			return default(bool);
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x11F8064", Offset = "0x11F8064", VA = "0x11F8064")]
		public bool IsShipAction(ActionType action)
		{
			return default(bool);
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x11F485C", Offset = "0x11F485C", VA = "0x11F485C")]
		public bool IsActionAvailableAndUsable(ActionAvailability availability, ActionType action)
		{
			return default(bool);
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x11F8848", Offset = "0x11F8848", VA = "0x11F8848")]
		public void SetOverrideAction(VRPlayerSelectorAction action)
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x11F888C", Offset = "0x11F888C", VA = "0x11F888C")]
		public void ClearOverrideAction()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x11F4928", Offset = "0x11F4928", VA = "0x11F4928")]
		public void TryTriggerClickMenuButton(bool onlyIfDeselected = false)
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x11F4910", Offset = "0x11F4910", VA = "0x11F4910")]
		public static bool WasInputActionPressed(bool currentState, bool newState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x11F491C", Offset = "0x11F491C", VA = "0x11F491C")]
		public static bool WasInputActionReleased(bool currentState, bool newState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x11F88CC", Offset = "0x11F88CC", VA = "0x11F88CC")]
		public VRPlayerSelector()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public struct VRPlayerSelectorActionInteractionVisual
	{
		[Token(Token = "0x400062B")]
		public const int PATH_INDEX_DEFAULT = -1;

		[Token(Token = "0x400062C")]
		public const int PATH_INDEX_HIGHLIGHTED = -2;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VROptionMenuInteraction interaction;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TelegraphVisual telegraph;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int pathIndex;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CooldownTimer cooldownTimer;

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x11F8ABC", Offset = "0x11F8ABC", VA = "0x11F8ABC")]
		public VRPlayerSelectorActionInteractionVisual(ShipAbilityActive shipAbility, int pathIndex = -1)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x11F8CA4", Offset = "0x11F8CA4", VA = "0x11F8CA4")]
		public VRPlayerSelectorActionInteractionVisual(VROptionMenuInteraction interaction, int pathIndex = -1)
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x11F8D54", Offset = "0x11F8D54", VA = "0x11F8D54")]
		public VRPlayerSelectorActionInteractionVisual(VROptionMenuInteraction interaction, CooldownTimer cooldownTimer, int pathIndex = -1)
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x11F8C24", Offset = "0x11F8C24", VA = "0x11F8C24")]
		public VRPlayerSelectorActionInteractionVisual(VROptionMenuInteraction interaction, CooldownTimer cooldownTimer, TelegraphVisual telegraph, int pathIndex = -1)
		{
		}
	}
	[Token(Token = "0x2000112")]
	public struct VRPlayerSelectorAction
	{
		[Token(Token = "0x2000113")]
		public struct ActionParameters
		{
			[Token(Token = "0x400063B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VRPlayerSelectorAction action;

			[Token(Token = "0x400063C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public VRPlayerSelector selector;

			[Token(Token = "0x6000725")]
			[Address(RVA = "0xEA36C0", Offset = "0xEA36C0", VA = "0xEA36C0")]
			public ActionParameters(VRPlayerSelectorAction action, VRPlayerSelector selector)
			{
			}
		}

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocalizationKey label;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite icon;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRPlayerSelectorActionInteractionVisual interaction;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Action<ActionParameters> onEnable;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Action<ActionParameters> onDisable;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Action<ActionParameters> enabledUpdate;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Action<ActionParameters> onActivate;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Action<ActionParameters> onDeactivate;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Action<ActionParameters> activeUpdate;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Func<ActionParameters, bool> isValid;

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x11F8944", Offset = "0x11F8944", VA = "0x11F8944")]
		public VRPlayerSelectorAction(LocalizationKey label, Sprite icon)
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x11F8A74", Offset = "0x11F8A74", VA = "0x11F8A74")]
		public VRPlayerSelectorAction(VRPlayerSelectorActionInteractionVisual interaction)
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x11F89A4", Offset = "0x11F89A4", VA = "0x11F89A4")]
		public VRPlayerSelectorAction(LocalizationKey label, Sprite icon, VRPlayerSelectorActionInteractionVisual interaction)
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x11F5F4C", Offset = "0x11F5F4C", VA = "0x11F5F4C")]
		public bool IsValid(ActionParameters parameters)
		{
			return default(bool);
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x11F5B38", Offset = "0x11F5B38", VA = "0x11F5B38")]
		public ActionParameters GetParameters(VRPlayerSelector selector)
		{
			return default(ActionParameters);
		}
	}
	[Token(Token = "0x2000114")]
	public class VRPlayerSelectorActionPreviewer : MonoBehaviour
	{
		[Token(Token = "0x2000115")]
		public class ActionPreviewTargetData
		{
			[Token(Token = "0x4000652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 rangeDirection;

			[Token(Token = "0x4000653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float rangeOvershootDistance;

			[Token(Token = "0x4000654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool requireTransformTarget;

			[Token(Token = "0x17000145")]
			public bool TargetInRange
			{
				[Token(Token = "0x600073F")]
				[Address(RVA = "0xEA3700", Offset = "0xEA3700", VA = "0xEA3700")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000740")]
			[Address(RVA = "0xEA3710", Offset = "0xEA3710", VA = "0xEA3710")]
			public ActionPreviewTargetData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000116")]
		public struct ReticleObject
		{
			[Token(Token = "0x4000655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReticleType reticleType;

			[Token(Token = "0x4000656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject reticlePrefab;

			[NonSerialized]
			[Token(Token = "0x4000657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpaceShipControllerReticle reticleController;
		}

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1A08", Offset = "0x8B1A08")]
		[SerializeField]
		private bool renderMovement;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer moveLinePreviewPrefab;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Gradient previewLineGraphicsDefault;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Gradient previewLineGraphicsLocked;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1A84", Offset = "0x8B1A84")]
		[SerializeField]
		private bool renderTargeting;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<ReticleObject> reticleObjects;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1AE0", Offset = "0x8B1AE0")]
		private VRPlayerSelector <Selector>k__BackingField;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer moveLinePreview;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SpaceShipControllerReticle targetingPreview;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool movePreviewActive;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SpaceEntitySteering.SteerPosition movePreviewTarget;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int movePreviewPathIndex;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool targetingPreviewActive;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private SpaceEntitySteering.SteerPosition targetingPreviewTarget;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private VRPlayerSelectorLockOn targetingPreviewLockOn;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ReticleType targetingPreviewReticleType;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public CooldownTimer targetingPreviewCooldownTimer;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private TelegraphVisual previewTelegraphVisual;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private MeshRenderer previewTelegraph;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private ReticleType reticleType;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<ReticleObject> reticles;

		[Token(Token = "0x1700013F")]
		public ReticleType ReticleType
		{
			[Token(Token = "0x6000726")]
			[Address(RVA = "0x11F8E20", Offset = "0x11F8E20", VA = "0x11F8E20")]
			get
			{
				return default(ReticleType);
			}
			[Token(Token = "0x6000727")]
			[Address(RVA = "0x11F8E28", Offset = "0x11F8E28", VA = "0x11F8E28")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public VRPlayerSelector Selector
		{
			[Token(Token = "0x6000728")]
			[Address(RVA = "0x11F8F3C", Offset = "0x11F8F3C", VA = "0x11F8F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDEE4", Offset = "0x8CDEE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000729")]
			[Address(RVA = "0x11F8F44", Offset = "0x11F8F44", VA = "0x11F8F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDEF4", Offset = "0x8CDEF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public bool MovePreviewActive
		{
			[Token(Token = "0x600072A")]
			[Address(RVA = "0x11F8F4C", Offset = "0x11F8F4C", VA = "0x11F8F4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public bool TargetingPreviewActive
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0x11F8F54", Offset = "0x11F8F54", VA = "0x11F8F54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		public SpaceEntitySteering.SteerPosition MovePreviewTarget
		{
			[Token(Token = "0x600072C")]
			[Address(RVA = "0x11F8F5C", Offset = "0x11F8F5C", VA = "0x11F8F5C")]
			get
			{
				return default(SpaceEntitySteering.SteerPosition);
			}
		}

		[Token(Token = "0x17000144")]
		public int MovePreviewPathIndex
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0x11F8F7C", Offset = "0x11F8F7C", VA = "0x11F8F7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x11F8F84", Offset = "0x11F8F84", VA = "0x11F8F84")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x11F2460", Offset = "0x11F2460", VA = "0x11F2460")]
		public void Setup(VRPlayerSelector selector)
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x11F9234", Offset = "0x11F9234", VA = "0x11F9234")]
		public void SetActionPreview(bool active, SpaceEntitySteering.SteerPosition target, VRPlayerSelectorActionInteractionVisual interactionVisual, VRPlayerSelectorLockOn lockOn)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x11F9510", Offset = "0x11F9510", VA = "0x11F9510")]
		private void SetMovePreview(bool active, SpaceEntitySteering.SteerPosition target, TelegraphVisual telegraphVisual, int pathIndex = -1)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x11F9430", Offset = "0x11F9430", VA = "0x11F9430")]
		private void SetTargetingPreview(bool active, SpaceEntitySteering.SteerPosition target, TelegraphVisual telegraphVisual, ReticleType reticle = ReticleType.Move, [System.Runtime.InteropServices.Optional] VRPlayerSelectorLockOn lockOn, [System.Runtime.InteropServices.Optional] CooldownTimer timer)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x11F9930", Offset = "0x11F9930", VA = "0x11F9930")]
		public Vector3 GetPathPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x11F9A90", Offset = "0x11F9A90", VA = "0x11F9A90")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x11F9AF0", Offset = "0x11F9AF0", VA = "0x11F9AF0")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x11F9C70", Offset = "0x11F9C70", VA = "0x11F9C70")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x11F9CB4", Offset = "0x11F9CB4", VA = "0x11F9CB4")]
		private void RenderMovement()
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x11FA018", Offset = "0x11FA018", VA = "0x11FA018")]
		private void RenderTargeting()
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x11F8E30", Offset = "0x11F8E30", VA = "0x11F8E30")]
		private void UpdateReticleType(ReticleType type)
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x11FA934", Offset = "0x11FA934", VA = "0x11FA934")]
		private ReticleObject GetReticleObject(ReticleType type)
		{
			return default(ReticleObject);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x11F9678", Offset = "0x11F9678", VA = "0x11F9678")]
		private void SetupPreviewTelegraph(bool active)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x11FA514", Offset = "0x11FA514", VA = "0x11FA514")]
		private void SetPreviewTelegraphVisible(bool visible)
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x11FA5E8", Offset = "0x11FA5E8", VA = "0x11FA5E8")]
		private void UpdatePreviewTelegraph(Vector3 previewStartPosition, Vector3 previewTargetPosition)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x11FAB28", Offset = "0x11FAB28", VA = "0x11FAB28")]
		public VRPlayerSelectorActionPreviewer()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public static class VRPlayerSelectorActions
	{
		[Token(Token = "0x2000118")]
		private delegate bool ActionCallbackGetter(out Transform transform, out Vector3 position);

		[Token(Token = "0x2000119")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A88C0", Offset = "0x8A88C0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400065F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action enableAction;

			[Token(Token = "0x4000660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRPlayerSelectorRay ray;

			[Token(Token = "0x4000661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int pathIndex;

			[Token(Token = "0x4000662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float radius;

			[Token(Token = "0x4000663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRPlayerSelectorActionInteractionVisual interaction;

			[Token(Token = "0x4000664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Action<SpaceEntitySteering.SteerPosition> disableAction;

			[Token(Token = "0x4000665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Action cancelAction;

			[Token(Token = "0x4000666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Action<SpaceEntitySteering.SteerPosition> activateAction;

			[Token(Token = "0x4000667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Action failedActivateAction;

			[Token(Token = "0x4000668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Action<SpaceEntitySteering.SteerPosition> activeAction;

			[Token(Token = "0x4000669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Action deactivateAction;

			[Token(Token = "0x600075C")]
			[Address(RVA = "0xEA3744", Offset = "0xEA3744", VA = "0xEA3744")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600075D")]
			[Address(RVA = "0xEA374C", Offset = "0xEA374C", VA = "0xEA374C")]
			internal void <CreatePointInRadiusAction>b__0(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600075E")]
			[Address(RVA = "0xEA3924", Offset = "0xEA3924", VA = "0xEA3924")]
			internal void <CreatePointInRadiusAction>b__1(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600075F")]
			[Address(RVA = "0xEA3BBC", Offset = "0xEA3BBC", VA = "0xEA3BBC")]
			internal void <CreatePointInRadiusAction>b__2(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000760")]
			[Address(RVA = "0xEA3E20", Offset = "0xEA3E20", VA = "0xEA3E20")]
			internal void <CreatePointInRadiusAction>b__3(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000761")]
			[Address(RVA = "0xEA4054", Offset = "0xEA4054", VA = "0xEA4054")]
			internal void <CreatePointInRadiusAction>b__4(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000762")]
			[Address(RVA = "0xEA40C0", Offset = "0xEA40C0", VA = "0xEA40C0")]
			internal void <CreatePointInRadiusAction>b__5(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000763")]
			[Address(RVA = "0xEA4298", Offset = "0xEA4298", VA = "0xEA4298")]
			internal void <CreatePointInRadiusAction>b__6(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000764")]
			[Address(RVA = "0xEA44B0", Offset = "0xEA44B0", VA = "0xEA44B0")]
			internal void <CreatePointInRadiusAction>b__7(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000765")]
			[Address(RVA = "0xEA4694", Offset = "0xEA4694", VA = "0xEA4694")]
			internal void <CreatePointInRadiusAction>b__8(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000766")]
			[Address(RVA = "0xEA483C", Offset = "0xEA483C", VA = "0xEA483C")]
			internal void <CreatePointInRadiusAction>b__9(VRPlayerSelectorAction.ActionParameters p)
			{
			}
		}

		[Token(Token = "0x200011A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A88D0", Offset = "0x8A88D0")]
		private sealed class <>c__DisplayClass10_1
		{
			[Token(Token = "0x400066A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRPlayerSelectorAction.ActionParameters p;

			[Token(Token = "0x400066B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public <>c__DisplayClass10_0 CS$<>8__locals1;

			[Token(Token = "0x6000767")]
			[Address(RVA = "0xEA391C", Offset = "0xEA391C", VA = "0xEA391C")]
			public <>c__DisplayClass10_1()
			{
			}

			[Token(Token = "0x6000768")]
			[Address(RVA = "0xEA48A8", Offset = "0xEA48A8", VA = "0xEA48A8")]
			internal SpaceEntitySteering.PositionData <CreatePointInRadiusAction>b__10(Transform t)
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x200011B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A88E0", Offset = "0x8A88E0")]
		private sealed class <>c__DisplayClass10_2
		{
			[Token(Token = "0x400066C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRPlayerSelectorAction.ActionParameters p;

			[Token(Token = "0x400066D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public <>c__DisplayClass10_0 CS$<>8__locals2;

			[Token(Token = "0x6000769")]
			[Address(RVA = "0xEA4290", Offset = "0xEA4290", VA = "0xEA4290")]
			public <>c__DisplayClass10_2()
			{
			}

			[Token(Token = "0x600076A")]
			[Address(RVA = "0xEA4998", Offset = "0xEA4998", VA = "0xEA4998")]
			internal SpaceEntitySteering.PositionData <CreatePointInRadiusAction>b__11(Transform t)
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x200011C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A88F0", Offset = "0x8A88F0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400066E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRPlayerSelector selector;

			[Token(Token = "0x400066F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int pathIndex;

			[Token(Token = "0x4000670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float radius;

			[Token(Token = "0x600076B")]
			[Address(RVA = "0xEA49FC", Offset = "0xEA49FC", VA = "0xEA49FC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600076C")]
			[Address(RVA = "0xEA4A04", Offset = "0xEA4A04", VA = "0xEA4A04")]
			internal SpaceEntitySteering.PositionData <CreatePointInRadiusTarget>b__0(Transform t)
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x200011D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8900", Offset = "0x8A8900")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action enableAction;

			[Token(Token = "0x4000672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRPlayerSelectorRay ray;

			[Token(Token = "0x4000673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int pathIndex;

			[Token(Token = "0x4000674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float radius;

			[Token(Token = "0x4000675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRPlayerSelectorActionInteractionVisual interaction;

			[Token(Token = "0x4000676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Action<SpaceEntitySteering.SteerPosition> disableAction;

			[Token(Token = "0x4000677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Action cancelAction;

			[Token(Token = "0x4000678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Action<SpaceEntitySteering.SteerPosition> activateAction;

			[Token(Token = "0x4000679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Action failedActivateAction;

			[Token(Token = "0x400067A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Action<SpaceEntitySteering.SteerPosition> activeAction;

			[Token(Token = "0x400067B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Action deactivateAction;

			[Token(Token = "0x600076D")]
			[Address(RVA = "0xEA4ACC", Offset = "0xEA4ACC", VA = "0xEA4ACC")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x600076E")]
			[Address(RVA = "0xEA4AD4", Offset = "0xEA4AD4", VA = "0xEA4AD4")]
			internal void <CreatePointOnRadiusAction>b__0(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600076F")]
			[Address(RVA = "0xEA4CAC", Offset = "0xEA4CAC", VA = "0xEA4CAC")]
			internal void <CreatePointOnRadiusAction>b__1(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000770")]
			[Address(RVA = "0xEA4F30", Offset = "0xEA4F30", VA = "0xEA4F30")]
			internal void <CreatePointOnRadiusAction>b__2(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000771")]
			[Address(RVA = "0xEA5188", Offset = "0xEA5188", VA = "0xEA5188")]
			internal void <CreatePointOnRadiusAction>b__3(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000772")]
			[Address(RVA = "0xEA53B0", Offset = "0xEA53B0", VA = "0xEA53B0")]
			internal void <CreatePointOnRadiusAction>b__4(VRPlayerSelectorAction.ActionParameters p)
			{
			}
		}

		[Token(Token = "0x200011E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8910", Offset = "0x8A8910")]
		private sealed class <>c__DisplayClass13_1
		{
			[Token(Token = "0x400067C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRPlayerSelectorAction.ActionParameters p;

			[Token(Token = "0x400067D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public <>c__DisplayClass13_0 CS$<>8__locals1;

			[Token(Token = "0x6000773")]
			[Address(RVA = "0xEA4CA4", Offset = "0xEA4CA4", VA = "0xEA4CA4")]
			public <>c__DisplayClass13_1()
			{
			}

			[Token(Token = "0x6000774")]
			[Address(RVA = "0xEA541C", Offset = "0xEA541C", VA = "0xEA541C")]
			internal SpaceEntitySteering.PositionData <CreatePointOnRadiusAction>b__5(Transform t)
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x200011F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8920", Offset = "0x8A8920")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x400067E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRPlayerSelectorRay ray;

			[Token(Token = "0x400067F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRPlayerSelector selector;

			[Token(Token = "0x4000680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int pathIndex;

			[Token(Token = "0x4000681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float radius;

			[Token(Token = "0x6000775")]
			[Address(RVA = "0xEA5500", Offset = "0xEA5500", VA = "0xEA5500")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000776")]
			[Address(RVA = "0xEA5508", Offset = "0xEA5508", VA = "0xEA5508")]
			internal SpaceEntitySteering.PositionData <CreatePointOnRadiusTarget>b__0(Transform t)
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x2000120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8930", Offset = "0x8A8930")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRPlayerSelectorActionInteractionVisual interaction;

			[Token(Token = "0x4000683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Action<SpaceEntitySteering.SteerPosition> action;

			[Token(Token = "0x4000684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Action failedAction;

			[Token(Token = "0x6000777")]
			[Address(RVA = "0xEA5674", Offset = "0xEA5674", VA = "0xEA5674")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6000778")]
			[Address(RVA = "0xEA567C", Offset = "0xEA567C", VA = "0xEA567C")]
			internal void <CreateSelfIDamagableAction>b__0(VRPlayerSelectorAction.ActionParameters p)
			{
			}
		}

		[Token(Token = "0x2000121")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8940", Offset = "0x8A8940")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4000685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action enableAction;

			[Token(Token = "0x4000686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRPlayerSelectorRay ray;

			[Token(Token = "0x4000687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRPlayerSelectorLockOn lockOn;

			[Token(Token = "0x4000688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRPlayerSelectorActionInteractionVisual interaction;

			[Token(Token = "0x4000689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public VRPlayerSelectorActionPreviewer.ActionPreviewTargetData previewData;

			[Token(Token = "0x400068A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Action<SpaceEntitySteering.SteerPosition> disableAction;

			[Token(Token = "0x400068B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Action cancelAction;

			[Token(Token = "0x400068C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Action<SpaceEntitySteering.SteerPosition> activateAction;

			[Token(Token = "0x400068D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Action failedActivateAction;

			[Token(Token = "0x400068E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Action<SpaceEntitySteering.SteerPosition> activeAction;

			[Token(Token = "0x400068F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public Action deactivateAction;

			[Token(Token = "0x6000779")]
			[Address(RVA = "0xEA578C", Offset = "0xEA578C", VA = "0xEA578C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x600077A")]
			[Address(RVA = "0xEA5794", Offset = "0xEA5794", VA = "0xEA5794")]
			internal void <CreateDirectionTargetableInConeIDamagableAction>b__0(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600077B")]
			[Address(RVA = "0xEA5970", Offset = "0xEA5970", VA = "0xEA5970")]
			internal void <CreateDirectionTargetableInConeIDamagableAction>b__1(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600077C")]
			[Address(RVA = "0xEA5BDC", Offset = "0xEA5BDC", VA = "0xEA5BDC")]
			internal void <CreateDirectionTargetableInConeIDamagableAction>b__2(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600077D")]
			[Address(RVA = "0xEA5E0C", Offset = "0xEA5E0C", VA = "0xEA5E0C")]
			internal void <CreateDirectionTargetableInConeIDamagableAction>b__3(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600077E")]
			[Address(RVA = "0xEA6010", Offset = "0xEA6010", VA = "0xEA6010")]
			internal void <CreateDirectionTargetableInConeIDamagableAction>b__4(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600077F")]
			[Address(RVA = "0xEA61EC", Offset = "0xEA61EC", VA = "0xEA61EC")]
			internal void <CreateDirectionTargetableInConeIDamagableAction>b__5(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000780")]
			[Address(RVA = "0xEA63DC", Offset = "0xEA63DC", VA = "0xEA63DC")]
			internal void <CreateDirectionTargetableInConeIDamagableAction>b__6(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000781")]
			[Address(RVA = "0xEA6584", Offset = "0xEA6584", VA = "0xEA6584")]
			internal void <CreateDirectionTargetableInConeIDamagableAction>b__7(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000782")]
			[Address(RVA = "0xEA66E4", Offset = "0xEA66E4", VA = "0xEA66E4")]
			internal void <CreateDirectionTargetableInConeIDamagableAction>b__8(VRPlayerSelectorAction.ActionParameters p)
			{
			}
		}

		[Token(Token = "0x2000122")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8950", Offset = "0x8A8950")]
		private sealed class <>c__DisplayClass17_1
		{
			[Token(Token = "0x4000690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRPlayerSelectorAction.ActionParameters p;

			[Token(Token = "0x4000691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public <>c__DisplayClass17_0 CS$<>8__locals1;

			[Token(Token = "0x6000783")]
			[Address(RVA = "0xEA5968", Offset = "0xEA5968", VA = "0xEA5968")]
			public <>c__DisplayClass17_1()
			{
			}

			[Token(Token = "0x6000784")]
			[Address(RVA = "0xEA675C", Offset = "0xEA675C", VA = "0xEA675C")]
			internal SpaceEntitySteering.PositionData <CreateDirectionTargetableInConeIDamagableAction>b__9(Transform t)
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x2000123")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8960", Offset = "0x8A8960")]
		private sealed class <>c__DisplayClass17_2
		{
			[Token(Token = "0x4000692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRPlayerSelectorAction.ActionParameters p;

			[Token(Token = "0x4000693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public <>c__DisplayClass17_0 CS$<>8__locals2;

			[Token(Token = "0x6000785")]
			[Address(RVA = "0xEA61E4", Offset = "0xEA61E4", VA = "0xEA61E4")]
			public <>c__DisplayClass17_2()
			{
			}

			[Token(Token = "0x6000786")]
			[Address(RVA = "0xEA68CC", Offset = "0xEA68CC", VA = "0xEA68CC")]
			internal SpaceEntitySteering.PositionData <CreateDirectionTargetableInConeIDamagableAction>b__10(Transform t)
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x2000124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8970", Offset = "0x8A8970")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4000694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action enableAction;

			[Token(Token = "0x4000695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRPlayerSelectorRay ray;

			[Token(Token = "0x4000696")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int pathIndex;

			[Token(Token = "0x4000697")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRPlayerSelectorActionPreviewer.ActionPreviewTargetData previewData;

			[Token(Token = "0x4000698")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float radius;

			[Token(Token = "0x4000699")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float lockOnTime;

			[Token(Token = "0x400069A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public VRPlayerSelectorLockOn lockOn;

			[Token(Token = "0x400069B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public VRPlayerSelectorActionInteractionVisual interaction;

			[Token(Token = "0x400069C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Action<SpaceEntitySteering.SteerPosition> disableAction;

			[Token(Token = "0x400069D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Action cancelAction;

			[Token(Token = "0x400069E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Action<SpaceEntitySteering.SteerPosition> activateAction;

			[Token(Token = "0x400069F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public Action failedActivateAction;

			[Token(Token = "0x40006A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public Action<SpaceEntitySteering.SteerPosition> activeAction;

			[Token(Token = "0x40006A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public Action deactivateAction;

			[Token(Token = "0x6000787")]
			[Address(RVA = "0xEA69B4", Offset = "0xEA69B4", VA = "0xEA69B4")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6000788")]
			[Address(RVA = "0xEA69BC", Offset = "0xEA69BC", VA = "0xEA69BC")]
			internal void <CreateDirectionTargetableInRayIDamagableAction>b__0(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000789")]
			[Address(RVA = "0xEA6B98", Offset = "0xEA6B98", VA = "0xEA6B98")]
			internal void <CreateDirectionTargetableInRayIDamagableAction>b__1(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600078A")]
			[Address(RVA = "0xEA6DA0", Offset = "0xEA6DA0", VA = "0xEA6DA0")]
			internal void <CreateDirectionTargetableInRayIDamagableAction>b__2(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600078B")]
			[Address(RVA = "0xEA6F80", Offset = "0xEA6F80", VA = "0xEA6F80")]
			internal void <CreateDirectionTargetableInRayIDamagableAction>b__3(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600078C")]
			[Address(RVA = "0xEA712C", Offset = "0xEA712C", VA = "0xEA712C")]
			internal void <CreateDirectionTargetableInRayIDamagableAction>b__4(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600078D")]
			[Address(RVA = "0xEA7308", Offset = "0xEA7308", VA = "0xEA7308")]
			internal void <CreateDirectionTargetableInRayIDamagableAction>b__5(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600078E")]
			[Address(RVA = "0xEA74E0", Offset = "0xEA74E0", VA = "0xEA74E0")]
			internal void <CreateDirectionTargetableInRayIDamagableAction>b__6(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600078F")]
			[Address(RVA = "0xEA7680", Offset = "0xEA7680", VA = "0xEA7680")]
			internal void <CreateDirectionTargetableInRayIDamagableAction>b__7(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000790")]
			[Address(RVA = "0xEA77D8", Offset = "0xEA77D8", VA = "0xEA77D8")]
			internal void <CreateDirectionTargetableInRayIDamagableAction>b__8(VRPlayerSelectorAction.ActionParameters p)
			{
			}
		}

		[Token(Token = "0x2000125")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8980", Offset = "0x8A8980")]
		private sealed class <>c__DisplayClass21_1
		{
			[Token(Token = "0x40006A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRPlayerSelectorAction.ActionParameters p;

			[Token(Token = "0x40006A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public <>c__DisplayClass21_0 CS$<>8__locals1;

			[Token(Token = "0x6000791")]
			[Address(RVA = "0xEA6B90", Offset = "0xEA6B90", VA = "0xEA6B90")]
			public <>c__DisplayClass21_1()
			{
			}

			[Token(Token = "0x6000792")]
			[Address(RVA = "0xEA7844", Offset = "0xEA7844", VA = "0xEA7844")]
			internal SpaceEntitySteering.PositionData <CreateDirectionTargetableInRayIDamagableAction>b__9(Transform t)
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x2000126")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8990", Offset = "0x8A8990")]
		private sealed class <>c__DisplayClass21_2
		{
			[Token(Token = "0x40006A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRPlayerSelectorAction.ActionParameters p;

			[Token(Token = "0x40006A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public <>c__DisplayClass21_0 CS$<>8__locals2;

			[Token(Token = "0x6000793")]
			[Address(RVA = "0xEA7300", Offset = "0xEA7300", VA = "0xEA7300")]
			public <>c__DisplayClass21_2()
			{
			}

			[Token(Token = "0x6000794")]
			[Address(RVA = "0xEA7B30", Offset = "0xEA7B30", VA = "0xEA7B30")]
			internal SpaceEntitySteering.PositionData <CreateDirectionTargetableInRayIDamagableAction>b__10(Transform t)
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x4000658")]
		private const float DEFAULT_ON_RADIUS_FALLBACK = 120f;

		[Token(Token = "0x4000659")]
		private const float DEFAULT_MOVE_ON_RADIUS = 200f;

		[Token(Token = "0x400065A")]
		private const float DEFAULT_DIRECTION_TARGET_CONE_RADIUS = 0f;

		[Token(Token = "0x400065B")]
		private const float DEFAULT_DIRECTION_TARGET_CONE_ANGLE = 45f;

		[Token(Token = "0x400065C")]
		private const float DEFAULT_DIRECTION_TARGET_RAY_RADIUS = 10f;

		[Token(Token = "0x400065D")]
		private const float DEFAULT_DIRECTION_TARGET_RAY_ANGLE = 3f;

		[Token(Token = "0x400065E")]
		private const float DEFAULT_DIRECTION_TARGET_RAY_LENGTH = 200f;

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x11F86C4", Offset = "0x11F86C4", VA = "0x11F86C4")]
		public static bool CanCreateActionFromShipAbility(ShipAbilityActive ability, bool checkIfDisabled)
		{
			return default(bool);
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x11F510C", Offset = "0x11F510C", VA = "0x11F510C")]
		public static bool TryCreateActionFromShipAbility(ShipAbilityActive ability, out VRPlayerSelectorAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x11FB78C", Offset = "0x11FB78C", VA = "0x11FB78C")]
		public static VRPlayerSelectorAction CreatePointInRadiusAction(LocalizationKey labelText, Sprite icon, VRPlayerSelectorActionInteractionVisual interaction, [System.Runtime.InteropServices.Optional] Action enableAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> disableAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> activateAction, [System.Runtime.InteropServices.Optional] Action deactivateAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> activeAction, [System.Runtime.InteropServices.Optional] Action cancelAction, [System.Runtime.InteropServices.Optional] Action failedActivateAction)
		{
			return default(VRPlayerSelectorAction);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x11FC12C", Offset = "0x11FC12C", VA = "0x11FC12C")]
		public static SpaceEntitySteering.SteerPosition CreatePointInRadiusTarget(VRPlayerSelector selector, Transform interactorTransform, VRPlayerSelectorActionInteractionVisual interaction)
		{
			return default(SpaceEntitySteering.SteerPosition);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x11FC26C", Offset = "0x11FC26C", VA = "0x11FC26C")]
		public static Vector3 CreatePointInRadiusPoint(VRPlayerSelector selector, Transform interactorTransform, VRPlayerSelectorActionInteractionVisual interaction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x11FBC34", Offset = "0x11FBC34", VA = "0x11FBC34")]
		public static VRPlayerSelectorAction CreatePointOnRadiusAction(LocalizationKey labelText, Sprite icon, VRPlayerSelectorActionInteractionVisual interaction, [System.Runtime.InteropServices.Optional] Action enableAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> disableAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> activateAction, [System.Runtime.InteropServices.Optional] Action deactivateAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> activeAction, [System.Runtime.InteropServices.Optional] Action cancelAction, [System.Runtime.InteropServices.Optional] Action failedActivateAction)
		{
			return default(VRPlayerSelectorAction);
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x11FC368", Offset = "0x11FC368", VA = "0x11FC368")]
		public static SpaceEntitySteering.SteerPosition CreatePointOnRadiusTarget(VRPlayerSelector selector, VRPlayerSelectorRay ray, Transform interactorTransform, VRPlayerSelectorActionInteractionVisual interaction)
		{
			return default(SpaceEntitySteering.SteerPosition);
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x11FC498", Offset = "0x11FC498", VA = "0x11FC498")]
		public static Vector3 CreatePointOnRadiusPoint(VRPlayerSelector selector, VRPlayerSelectorRay ray, Transform interactorTransform, VRPlayerSelectorActionInteractionVisual interaction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x11FABE0", Offset = "0x11FABE0", VA = "0x11FABE0")]
		public static VRPlayerSelectorAction CreateSelfIDamagableAction(LocalizationKey labelText, Sprite icon, VRPlayerSelectorActionInteractionVisual interaction, Action<SpaceEntitySteering.SteerPosition> action, [System.Runtime.InteropServices.Optional] Action failedAction)
		{
			return default(VRPlayerSelectorAction);
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x11FAD84", Offset = "0x11FAD84", VA = "0x11FAD84")]
		public static VRPlayerSelectorAction CreateDirectionTargetableInConeIDamagableAction(LocalizationKey labelText, Sprite icon, VRPlayerSelectorActionInteractionVisual interaction, [System.Runtime.InteropServices.Optional] Action enableAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> disableAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> activateAction, [System.Runtime.InteropServices.Optional] Action deactivateAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> activeAction, [System.Runtime.InteropServices.Optional] Action cancelAction, [System.Runtime.InteropServices.Optional] Action failedActivateAction)
		{
			return default(VRPlayerSelectorAction);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x11FCD18", Offset = "0x11FCD18", VA = "0x11FCD18")]
		private static bool DirectionTargetableInConeIDamagableTargetRadius(VRPlayerSelectorAction.ActionParameters param, VRPlayerSelectorLockOn lockOn, VRPlayerSelectorRay ray, VRPlayerSelectorActionInteractionVisual interaction, out Transform transform, out Vector3 position, out bool inRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x11FCDF4", Offset = "0x11FCDF4", VA = "0x11FCDF4")]
		private static bool DirectionTargetableInConeIDamagableTargetRadius(VRPlayerSelectorAction.ActionParameters param, VRPlayerSelectorLockOn lockOn, VRPlayerSelectorRay ray, VRPlayerSelectorActionInteractionVisual interaction, out Transform transform, out Vector3 position, out Vector3 toPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x11FD65C", Offset = "0x11FD65C", VA = "0x11FD65C")]
		private static bool DirectionTargetableInConeIDamagableTargetInfinite(VRPlayerSelectorAction.ActionParameters param, VRPlayerSelectorLockOn lockOn, VRPlayerSelectorRay ray, out Transform transform, out Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x11FB280", Offset = "0x11FB280", VA = "0x11FB280")]
		public static VRPlayerSelectorAction CreateDirectionTargetableInRayIDamagableAction(LocalizationKey labelText, Sprite icon, VRPlayerSelectorActionInteractionVisual interaction, [System.Runtime.InteropServices.Optional] Action enableAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> disableAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> activateAction, [System.Runtime.InteropServices.Optional] Action deactivateAction, [System.Runtime.InteropServices.Optional] Action<SpaceEntitySteering.SteerPosition> activeAction, [System.Runtime.InteropServices.Optional] Action cancelAction, [System.Runtime.InteropServices.Optional] Action failedActivateAction)
		{
			return default(VRPlayerSelectorAction);
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x11FD7FC", Offset = "0x11FD7FC", VA = "0x11FD7FC")]
		private static bool DirectionTargetableInRayIDamagableTargetRadius(VRPlayerSelectorAction.ActionParameters param, VRPlayerSelectorLockOn lockOn, VRPlayerSelectorRay ray, VRPlayerSelectorActionInteractionVisual interaction, out Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x11FDBC4", Offset = "0x11FDBC4", VA = "0x11FDBC4")]
		private static bool DirectionTargetableInRayIDamagableTargetInfinite(VRPlayerSelectorAction.ActionParameters param, VRPlayerSelectorLockOn lockOn, VRPlayerSelectorRay ray, out Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x11FD4C0", Offset = "0x11FD4C0", VA = "0x11FD4C0")]
		private static bool TryGetTargetableInCone(Ray ray, VROptionMenuInteractionTargetable targetableSettings, out Transform closestTargetableTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x11FD2A4", Offset = "0x11FD2A4", VA = "0x11FD2A4")]
		private static bool TryGetTargetableInCone(Ray ray, Vector3 originPos, float maxRadius, VROptionMenuInteractionTargetable targetableSettings, out Transform closestTargetableTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x11FDD18", Offset = "0x11FDD18", VA = "0x11FDD18")]
		private static bool TryGetTargetableInRay(Ray ray, VROptionMenuInteractionTargetable targetableSettings, out Transform closestTargetableTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x11FD9AC", Offset = "0x11FD9AC", VA = "0x11FD9AC")]
		private static bool TryGetTargetableInRay(Ray ray, Vector3 originPos, float maxRadius, VROptionMenuInteractionTargetable targetableSettings, out Transform closestTargetableTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x11FC32C", Offset = "0x11FC32C", VA = "0x11FC32C")]
		public static int GetPathIndexParameter(VRPlayerSelectorActionPreviewer actionPreviewer, int pathIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x11FDEB0", Offset = "0x11FDEB0", VA = "0x11FDEB0")]
		private static float GetRadiusWithOffset(float interactionRadius, VRDirectionTargetableBase targetable)
		{
			return default(float);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x11FD0A8", Offset = "0x11FD0A8", VA = "0x11FD0A8")]
		private static float GetRadiusWithOffset(float interactionRadius, Transform transform)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000127")]
	public class VRPlayerSelectorLockOn
	{
		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float lockOnStartTime;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float lockOnTime;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool lockOnStickToTarget;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool lockOnCanProgress;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool lockedOn;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool lockOnAttempted;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform lockedOnTarget;

		[Token(Token = "0x17000146")]
		public float LockOnTime
		{
			[Token(Token = "0x6000795")]
			[Address(RVA = "0x11FDF40", Offset = "0x11FDF40", VA = "0x11FDF40")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000147")]
		public bool LockOnStickToTarget
		{
			[Token(Token = "0x6000796")]
			[Address(RVA = "0x11FDF48", Offset = "0x11FDF48", VA = "0x11FDF48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000148")]
		public bool LockOnAttempted
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0x11FDF50", Offset = "0x11FDF50", VA = "0x11FDF50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000149")]
		public bool LockedOff
		{
			[Token(Token = "0x6000798")]
			[Address(RVA = "0x11FDF58", Offset = "0x11FDF58", VA = "0x11FDF58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014A")]
		public bool LockedOn
		{
			[Token(Token = "0x6000799")]
			[Address(RVA = "0x11FDF68", Offset = "0x11FDF68", VA = "0x11FDF68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600079A")]
			[Address(RVA = "0x11FDF70", Offset = "0x11FDF70", VA = "0x11FDF70")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public Transform LockedOnTarget
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0x11FE020", Offset = "0x11FE020", VA = "0x11FE020")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079C")]
			[Address(RVA = "0x11FE0C8", Offset = "0x11FE0C8", VA = "0x11FE0C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public bool LockedOnTargetLost
		{
			[Token(Token = "0x600079D")]
			[Address(RVA = "0x11FD168", Offset = "0x11FD168", VA = "0x11FD168")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014D")]
		public bool LockOnCanProgress
		{
			[Token(Token = "0x600079E")]
			[Address(RVA = "0x11FE0DC", Offset = "0x11FE0DC", VA = "0x11FE0DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600079F")]
			[Address(RVA = "0x11FDFD8", Offset = "0x11FDFD8", VA = "0x11FDFD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public float LockOnProgress
		{
			[Token(Token = "0x60007A0")]
			[Address(RVA = "0x11FE0E4", Offset = "0x11FE0E4", VA = "0x11FE0E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700014F")]
		public bool LockOnFinished
		{
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0x11FE148", Offset = "0x11FE148", VA = "0x11FE148")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x11FCCC4", Offset = "0x11FCCC4", VA = "0x11FCCC4")]
		public VRPlayerSelectorLockOn(bool lockOnStickToTarget, float lockOnTime)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x11FD1F8", Offset = "0x11FD1F8", VA = "0x11FD1F8")]
		public bool TryGetLockOnTarget(out Transform lockOnTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x11FE168", Offset = "0x11FE168", VA = "0x11FE168")]
		public void LockOn()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x11FE194", Offset = "0x11FE194", VA = "0x11FE194")]
		public void LockOn(Transform lockOnTarget)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x11FE1F0", Offset = "0x11FE1F0", VA = "0x11FE1F0")]
		public void LockOn(bool condition, Transform lockOnTarget)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x11FE224", Offset = "0x11FE224", VA = "0x11FE224")]
		public void LockOff()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x11FE24C", Offset = "0x11FE24C", VA = "0x11FE24C")]
		public static bool GetLockedOn(VRPlayerSelectorLockOn lockOn)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x11FA918", Offset = "0x11FA918", VA = "0x11FA918")]
		public static bool GetLockOnAttempted(VRPlayerSelectorLockOn lockOn)
		{
			return default(bool);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x11FA8E0", Offset = "0x11FA8E0", VA = "0x11FA8E0")]
		public static float GetLockOnTime(VRPlayerSelectorLockOn lockOn)
		{
			return default(float);
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x11FA8F4", Offset = "0x11FA8F4", VA = "0x11FA8F4")]
		public static bool GetLockOnStickToTarget(VRPlayerSelectorLockOn lockOn)
		{
			return default(bool);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x11FA908", Offset = "0x11FA908", VA = "0x11FA908")]
		public static float GetLockOnProgress(VRPlayerSelectorLockOn lockOn)
		{
			return default(float);
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x11FE268", Offset = "0x11FE268", VA = "0x11FE268")]
		public static bool GetLockOnFinished(VRPlayerSelectorLockOn lockOn)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000128")]
	public class VRPlayerSelectorManager : MonoBehaviour
	{
		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isPlayerSelecting;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool hideSelectorMenu;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool enableShipActions;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool enableShipMoveActions;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool enableScannerActions;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1AF0", Offset = "0x8B1AF0")]
		private int <MirrorSelectorRayCount>k__BackingField;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<VRPlayerSelector> selectors;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<bool> abilityActionEnableMask;

		[Token(Token = "0x17000150")]
		public IReadOnlyList<VRPlayerSelector> Selectors
		{
			[Token(Token = "0x60007AE")]
			[Address(RVA = "0x11FE294", Offset = "0x11FE294", VA = "0x11FE294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		public VRPlayerSelector MainSelector
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0x11FE29C", Offset = "0x11FE29C", VA = "0x11FE29C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0x11FE37C", Offset = "0x11FE37C", VA = "0x11FE37C")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public VRPlayerSelector OffSelector
		{
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0x11FE5DC", Offset = "0x11FE5DC", VA = "0x11FE5DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		public bool IsPlayerSelecting
		{
			[Token(Token = "0x60007B2")]
			[Address(RVA = "0x11FE6BC", Offset = "0x11FE6BC", VA = "0x11FE6BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0x11FE6C4", Offset = "0x11FE6C4", VA = "0x11FE6C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public bool HideSelectorMenu
		{
			[Token(Token = "0x60007B4")]
			[Address(RVA = "0x11FE74C", Offset = "0x11FE74C", VA = "0x11FE74C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0x11FE754", Offset = "0x11FE754", VA = "0x11FE754")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public bool EnableShipActions
		{
			[Token(Token = "0x60007B6")]
			[Address(RVA = "0x11FE894", Offset = "0x11FE894", VA = "0x11FE894")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007B7")]
			[Address(RVA = "0x11FE89C", Offset = "0x11FE89C", VA = "0x11FE89C")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public bool EnableShipMoveActions
		{
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0x11FEA3C", Offset = "0x11FEA3C", VA = "0x11FEA3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007B9")]
			[Address(RVA = "0x11FEA44", Offset = "0x11FEA44", VA = "0x11FEA44")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public bool EnableScannerActions
		{
			[Token(Token = "0x60007BA")]
			[Address(RVA = "0x11FEBC4", Offset = "0x11FEBC4", VA = "0x11FEBC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0x11FEBCC", Offset = "0x11FEBCC", VA = "0x11FEBCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public bool MirrorSelectorRay
		{
			[Token(Token = "0x60007BC")]
			[Address(RVA = "0x11FED40", Offset = "0x11FED40", VA = "0x11FED40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000159")]
		public int MirrorSelectorRayCount
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x11FED50", Offset = "0x11FED50", VA = "0x11FED50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDF04", Offset = "0x8CDF04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x11FED58", Offset = "0x11FED58", VA = "0x11FED58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDF14", Offset = "0x8CDF14")]
			set
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<VRPlayerSelector> OnMainSelectorChanged
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0x11FED60", Offset = "0x11FED60", VA = "0x11FED60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDF24", Offset = "0x8CDF24")]
			add
			{
			}
			[Token(Token = "0x60007C0")]
			[Address(RVA = "0x11FEE00", Offset = "0x11FEE00", VA = "0x11FEE00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDF34", Offset = "0x8CDF34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<bool> OnPlayerSelectingChanged
		{
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0x11FEEA0", Offset = "0x11FEEA0", VA = "0x11FEEA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDF44", Offset = "0x8CDF44")]
			add
			{
			}
			[Token(Token = "0x60007C2")]
			[Address(RVA = "0x11FEF40", Offset = "0x11FEF40", VA = "0x11FEF40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDF54", Offset = "0x8CDF54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<Vector2> OnPlayerNavigateAction
		{
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0x11FEFE0", Offset = "0x11FEFE0", VA = "0x11FEFE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDF64", Offset = "0x8CDF64")]
			add
			{
			}
			[Token(Token = "0x60007C4")]
			[Address(RVA = "0x11FF080", Offset = "0x11FF080", VA = "0x11FF080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDF74", Offset = "0x8CDF74")]
			remove
			{
			}
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x11FF120", Offset = "0x11FF120", VA = "0x11FF120")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x11FF370", Offset = "0x11FF370", VA = "0x11FF370")]
		protected void Update()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x11FF4AC", Offset = "0x11FF4AC", VA = "0x11FF4AC")]
		public void SetMainSelectorByXRNode(XRNode mainSelectorNode)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x11FF5DC", Offset = "0x11FF5DC", VA = "0x11FF5DC")]
		public void SetAbilityActionMaskEnabled(int index, bool enabled)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x11F87B0", Offset = "0x11F87B0", VA = "0x11F87B0")]
		public bool IsAbilityActionMaskEnabled(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x11FF77C", Offset = "0x11FF77C", VA = "0x11FF77C")]
		public void ResetAbilityActionMask()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x11F5ED4", Offset = "0x11F5ED4", VA = "0x11F5ED4")]
		public void InvokePlayerNavigateAction(Vector2 direction)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x11FF8EC", Offset = "0x11FF8EC", VA = "0x11FF8EC")]
		public VRPlayerSelectorManager()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public enum VRPlayerSelectorMoveActionMode
	{
		[Token(Token = "0x40006B9")]
		PointInRadius,
		[Token(Token = "0x40006BA")]
		PointOnRadius
	}
	[Serializable]
	[Token(Token = "0x200012A")]
	public class VRPlayerSelectorMoveAction
	{
		[Token(Token = "0x200012B")]
		private class CanAddPointoShipPathCooldownTimer : ICooldownTimer
		{
			[Token(Token = "0x40006CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRPlayerSelectorMoveAction moveAction;

			[Token(Token = "0x17000161")]
			public float CooldownTimerLeft
			{
				[Token(Token = "0x60007F3")]
				[Address(RVA = "0xEA8078", Offset = "0xEA8078", VA = "0xEA8078", Slot = "4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000162")]
			public float CooldownTimerMax
			{
				[Token(Token = "0x60007F4")]
				[Address(RVA = "0xEA8080", Offset = "0xEA8080", VA = "0xEA8080", Slot = "5")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000163")]
			public float CooldownTimerMaxBase
			{
				[Token(Token = "0x60007F5")]
				[Address(RVA = "0xEA8088", Offset = "0xEA8088", VA = "0xEA8088", Slot = "6")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000164")]
			public int CooldownTimerCount
			{
				[Token(Token = "0x60007F6")]
				[Address(RVA = "0xEA8090", Offset = "0xEA8090", VA = "0xEA8090", Slot = "7")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000165")]
			public int CooldownTimerCountMax
			{
				[Token(Token = "0x60007F7")]
				[Address(RVA = "0xEA80CC", Offset = "0xEA80CC", VA = "0xEA80CC", Slot = "8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000166")]
			public int CooldownTimerCountMaxBase
			{
				[Token(Token = "0x60007F8")]
				[Address(RVA = "0xEA80E8", Offset = "0xEA80E8", VA = "0xEA80E8", Slot = "9")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000167")]
			public CooldownTimerFormatting CooldownTimerFormatting
			{
				[Token(Token = "0x60007F9")]
				[Address(RVA = "0xEA8104", Offset = "0xEA8104", VA = "0xEA8104", Slot = "10")]
				get
				{
					return default(CooldownTimerFormatting);
				}
			}

			[Token(Token = "0x60007FA")]
			[Address(RVA = "0xEA8110", Offset = "0xEA8110", VA = "0xEA8110")]
			public CanAddPointoShipPathCooldownTimer(VRPlayerSelectorMoveAction moveAction)
			{
			}
		}

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SfxTrigger moveStartSfx;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SfxTrigger moveNodeSfx;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssetReferenceGameObject moveVFXPrefab;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssetReferenceGameObject endMoveVFXPrefab;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperationHandle<GameObject> moveVFXAsset;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AsyncOperationHandle<GameObject> endMoveVFXAsset;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1B70", Offset = "0x8B1B70")]
		private SpaceShipController <Ship>k__BackingField;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1B80", Offset = "0x8B1B80")]
		private int <MaxMoveNodeCount>k__BackingField;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1B90", Offset = "0x8B1B90")]
		private float <MaxMoveRadius>k__BackingField;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1BA0", Offset = "0x8B1BA0")]
		private VRPlayerSelectorMoveActionMode <MoveMode>k__BackingField;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1BB0", Offset = "0x8B1BB0")]
		private VRPlayerSelectorRayType <MoveRay>k__BackingField;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1BC0", Offset = "0x8B1BC0")]
		private Vector2 <MoveRayActivateRange>k__BackingField;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LocalizationKey label;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private VRPlayerSelector selector;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Func<VRPlayerSelector.ActionType, bool> selectorTrySetMoveAction;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CanAddPointoShipPathCooldownTimer cooldownTimer;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private AsyncFlag slowMotionFlag;

		[Token(Token = "0x1700015A")]
		public VRPlayerSelectorAction SelectorAction
		{
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0x11F64B8", Offset = "0x11F64B8", VA = "0x11F64B8")]
			get
			{
				return default(VRPlayerSelectorAction);
			}
		}

		[Token(Token = "0x1700015B")]
		public SpaceShipController Ship
		{
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0x11FFC84", Offset = "0x11FFC84", VA = "0x11FFC84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDF84", Offset = "0x8CDF84")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0x11FFC8C", Offset = "0x11FFC8C", VA = "0x11FFC8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDF94", Offset = "0x8CDF94")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public int MaxMoveNodeCount
		{
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0x11FFC94", Offset = "0x11FFC94", VA = "0x11FFC94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDFA4", Offset = "0x8CDFA4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0x11FFC9C", Offset = "0x11FFC9C", VA = "0x11FFC9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDFB4", Offset = "0x8CDFB4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public float MaxMoveRadius
		{
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0x11FFCA4", Offset = "0x11FFCA4", VA = "0x11FFCA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDFC4", Offset = "0x8CDFC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x11FFCAC", Offset = "0x11FFCAC", VA = "0x11FFCAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDFD4", Offset = "0x8CDFD4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public VRPlayerSelectorMoveActionMode MoveMode
		{
			[Token(Token = "0x60007D4")]
			[Address(RVA = "0x11FFCB4", Offset = "0x11FFCB4", VA = "0x11FFCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDFE4", Offset = "0x8CDFE4")]
			get
			{
				return default(VRPlayerSelectorMoveActionMode);
			}
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x11FFCBC", Offset = "0x11FFCBC", VA = "0x11FFCBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CDFF4", Offset = "0x8CDFF4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public VRPlayerSelectorRayType MoveRay
		{
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0x11FFCC4", Offset = "0x11FFCC4", VA = "0x11FFCC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE004", Offset = "0x8CE004")]
			get
			{
				return default(VRPlayerSelectorRayType);
			}
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x11FFCCC", Offset = "0x11FFCCC", VA = "0x11FFCCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE014", Offset = "0x8CE014")]
			private set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public Vector2 MoveRayActivateRange
		{
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0x11FFCD4", Offset = "0x11FFCD4", VA = "0x11FFCD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE024", Offset = "0x8CE024")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0x11FFCDC", Offset = "0x11FFCDC", VA = "0x11FFCDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE034", Offset = "0x8CE034")]
			set
			{
			}
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x11F2F64", Offset = "0x11F2F64", VA = "0x11F2F64")]
		public void Start()
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x11F6D84", Offset = "0x11F6D84", VA = "0x11F6D84")]
		public void Stop()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x11FFCE4", Offset = "0x11FFCE4", VA = "0x11FFCE4")]
		public void SetupMoveVFXAssetRef(AsyncOperationHandle<GameObject> handle)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x11FFD04", Offset = "0x11FFD04", VA = "0x11FFD04")]
		private void SetupEndMoveVFXAssetRef(AsyncOperationHandle<GameObject> handle)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x11F23C0", Offset = "0x11F23C0", VA = "0x11F23C0")]
		public void Setup(VRPlayerSelector selector, Func<VRPlayerSelector.ActionType, bool> selectorTrySetMoveAction)
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x11F6DF8", Offset = "0x11F6DF8", VA = "0x11F6DF8")]
		public void SetShip(SpaceShipController ship)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x11FFD24", Offset = "0x11FFD24", VA = "0x11FFD24")]
		public bool CanUseMoveAction()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x1200014", Offset = "0x1200014", VA = "0x1200014")]
		private void OnSelectorActionEnable()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x120012C", Offset = "0x120012C", VA = "0x120012C")]
		private void OnSelectorActionDisable(SpaceEntitySteering.SteerPosition position)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x120026C", Offset = "0x120026C", VA = "0x120026C")]
		private void OnSelectorActionCancel()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x1200344", Offset = "0x1200344", VA = "0x1200344")]
		private void OnSelectorActionActivate(SpaceEntitySteering.SteerPosition position)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x12003B4", Offset = "0x12003B4", VA = "0x12003B4")]
		public bool ButtonDragStart(IXRInteractor interactor, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x12005D0", Offset = "0x12005D0", VA = "0x12005D0")]
		public void ButtonDragEnd(IXRInteractor interactor)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1200B3C", Offset = "0x1200B3C", VA = "0x1200B3C")]
		public void ButtonDragCancel(IXRInteractor interactor)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x1200C1C", Offset = "0x1200C1C", VA = "0x1200C1C")]
		public void ButtonActivateClick(IXRInteractor interactor)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x120037C", Offset = "0x120037C", VA = "0x120037C")]
		private void AddNewPointToShipPathAction(SpaceEntitySteering.SteerPosition position)
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1200D50", Offset = "0x1200D50", VA = "0x1200D50")]
		private bool AddNewPointToShipPath(SpaceEntitySteering.SteerPosition position)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1200234", Offset = "0x1200234", VA = "0x1200234")]
		private void AddFinalPointToShipPathAction(SpaceEntitySteering.SteerPosition position)
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1200704", Offset = "0x1200704", VA = "0x1200704")]
		private bool AddFinalPointToShipPath(SpaceEntitySteering.SteerPosition position)
		{
			return default(bool);
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1201110", Offset = "0x1201110", VA = "0x1201110")]
		private bool CanAddPointToShipPath()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x120055C", Offset = "0x120055C", VA = "0x120055C")]
		private bool CanAddPointToShipPath(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x1201138", Offset = "0x1201138", VA = "0x1201138")]
		private int PointsLeftInShipPath()
		{
			return default(int);
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x11FF9CC", Offset = "0x11FF9CC", VA = "0x11FF9CC")]
		private void UpdateMoveSettings()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x12011CC", Offset = "0x12011CC", VA = "0x12011CC")]
		public VRPlayerSelectorMoveAction()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x12011FC", Offset = "0x12011FC", VA = "0x12011FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE044", Offset = "0x8CE044")]
		private bool <get_SelectorAction>b__8_0(VRPlayerSelectorAction.ActionParameters p)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200012C")]
	public class VRPlayerSelectorMoveNode : VRButtonDragInteractable
	{
		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private GameObject graphicsParent;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1BE0", Offset = "0x8B1BE0")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1BF0", Offset = "0x8B1BF0")]
		private bool <IsVisible>k__BackingField;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1C00", Offset = "0x8B1C00")]
		private int <Index>k__BackingField;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Vector3 position;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private VRPlayerSelectorMoveAction moveAction;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool dragIsValid;

		[Token(Token = "0x17000168")]
		public bool IsActive
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x1201200", Offset = "0x1201200", VA = "0x1201200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE054", Offset = "0x8CE054")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007FC")]
			[Address(RVA = "0x1201208", Offset = "0x1201208", VA = "0x1201208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE064", Offset = "0x8CE064")]
			private set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public bool IsVisible
		{
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0x1201214", Offset = "0x1201214", VA = "0x1201214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE074", Offset = "0x8CE074")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007FE")]
			[Address(RVA = "0x120121C", Offset = "0x120121C", VA = "0x120121C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE084", Offset = "0x8CE084")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public int Index
		{
			[Token(Token = "0x60007FF")]
			[Address(RVA = "0x1201228", Offset = "0x1201228", VA = "0x1201228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE094", Offset = "0x8CE094")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000800")]
			[Address(RVA = "0x1201230", Offset = "0x1201230", VA = "0x1201230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE0A4", Offset = "0x8CE0A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public Vector3 Position
		{
			[Token(Token = "0x6000801")]
			[Address(RVA = "0x1201238", Offset = "0x1201238", VA = "0x1201238")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000802")]
			[Address(RVA = "0x1201248", Offset = "0x1201248", VA = "0x1201248")]
			set
			{
			}
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x12012EC", Offset = "0x12012EC", VA = "0x12012EC")]
		public void Setup(int index)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1201374", Offset = "0x1201374", VA = "0x1201374")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1201338", Offset = "0x1201338", VA = "0x1201338")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x12013D0", Offset = "0x12013D0", VA = "0x12013D0", Slot = "89")]
		protected override void OnButtonDragStart()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1201534", Offset = "0x1201534", VA = "0x1201534", Slot = "90")]
		protected override void OnButtonDragEnd()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1201580", Offset = "0x1201580", VA = "0x1201580", Slot = "91")]
		protected override void OnButtonDragCancel()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x12015C8", Offset = "0x12015C8", VA = "0x12015C8", Slot = "88")]
		protected override void OnButtonActivateClick()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x1201614", Offset = "0x1201614", VA = "0x1201614")]
		public VRPlayerSelectorMoveNode()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public enum VRPlayerSelectorRayType
	{
		[Token(Token = "0x40006D5")]
		PointController = 0,
		[Token(Token = "0x40006D6")]
		PointPlayerShip = 1,
		[Token(Token = "0x40006D7")]
		PointPlayerShipPath = 2,
		[Token(Token = "0x40006D8")]
		DragController = 10,
		[Token(Token = "0x40006D9")]
		DragPlayerShip = 11,
		[Token(Token = "0x40006DA")]
		DragPlayerShipPath = 12
	}
	[Token(Token = "0x200012E")]
	public class VRPlayerSelectorRay
	{
		[Token(Token = "0x40006DB")]
		private const float RAY_DIR_SMOOTHING = 0.999999f;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2 RAY_ACTIVATE_RANGE;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float RAY_ORIGIN_TRAIL_DISTANCE;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly float RAY_MAX_LENGTH;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1C10", Offset = "0x8B1C10")]
		private VRPlayerSelectorRayType <RayType>k__BackingField;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1C20", Offset = "0x8B1C20")]
		private Vector2 <RayDirectionActivateRange>k__BackingField;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1C30", Offset = "0x8B1C30")]
		private Vector2 <RayDistanceActivateRange>k__BackingField;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1C40", Offset = "0x8B1C40")]
		private Vector3 <OriginPoint>k__BackingField;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1C50", Offset = "0x8B1C50")]
		private Vector3 <LastActualDirection>k__BackingField;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1C60", Offset = "0x8B1C60")]
		private Vector3 <CurrentDirection>k__BackingField;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1C70", Offset = "0x8B1C70")]
		private float <CurrentDistance>k__BackingField;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1C80", Offset = "0x8B1C80")]
		private Vector3 <TargetDirection>k__BackingField;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1C90", Offset = "0x8B1C90")]
		private float <TargetDistance>k__BackingField;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float lastDirTime;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool overrideDefaultDirEnabled;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 overrideDefaultDir;

		[Token(Token = "0x1700016C")]
		public VRPlayerSelectorRayType RayType
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0x120168C", Offset = "0x120168C", VA = "0x120168C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE0B4", Offset = "0x8CE0B4")]
			get
			{
				return default(VRPlayerSelectorRayType);
			}
			[Token(Token = "0x600080C")]
			[Address(RVA = "0x1201694", Offset = "0x1201694", VA = "0x1201694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE0C4", Offset = "0x8CE0C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public Vector2 RayDirectionActivateRange
		{
			[Token(Token = "0x600080D")]
			[Address(RVA = "0x120169C", Offset = "0x120169C", VA = "0x120169C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE0D4", Offset = "0x8CE0D4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600080E")]
			[Address(RVA = "0x12016A4", Offset = "0x12016A4", VA = "0x12016A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE0E4", Offset = "0x8CE0E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public Vector2 RayDistanceActivateRange
		{
			[Token(Token = "0x600080F")]
			[Address(RVA = "0x12016AC", Offset = "0x12016AC", VA = "0x12016AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE0F4", Offset = "0x8CE0F4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000810")]
			[Address(RVA = "0x12016B4", Offset = "0x12016B4", VA = "0x12016B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE104", Offset = "0x8CE104")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public Vector3 OriginPoint
		{
			[Token(Token = "0x6000811")]
			[Address(RVA = "0x12016BC", Offset = "0x12016BC", VA = "0x12016BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE114", Offset = "0x8CE114")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000812")]
			[Address(RVA = "0x12016C8", Offset = "0x12016C8", VA = "0x12016C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE124", Offset = "0x8CE124")]
			private set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public Vector3 LastActualDirection
		{
			[Token(Token = "0x6000813")]
			[Address(RVA = "0x12016D4", Offset = "0x12016D4", VA = "0x12016D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE134", Offset = "0x8CE134")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000814")]
			[Address(RVA = "0x12016E0", Offset = "0x12016E0", VA = "0x12016E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE144", Offset = "0x8CE144")]
			private set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public Vector3 CurrentDirection
		{
			[Token(Token = "0x6000815")]
			[Address(RVA = "0x12016EC", Offset = "0x12016EC", VA = "0x12016EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE154", Offset = "0x8CE154")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000816")]
			[Address(RVA = "0x12016F8", Offset = "0x12016F8", VA = "0x12016F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE164", Offset = "0x8CE164")]
			private set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public float CurrentDistance
		{
			[Token(Token = "0x6000817")]
			[Address(RVA = "0x1201704", Offset = "0x1201704", VA = "0x1201704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE174", Offset = "0x8CE174")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000818")]
			[Address(RVA = "0x120170C", Offset = "0x120170C", VA = "0x120170C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE184", Offset = "0x8CE184")]
			private set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public Vector3 TargetDirection
		{
			[Token(Token = "0x6000819")]
			[Address(RVA = "0x1201714", Offset = "0x1201714", VA = "0x1201714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE194", Offset = "0x8CE194")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600081A")]
			[Address(RVA = "0x1201720", Offset = "0x1201720", VA = "0x1201720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE1A4", Offset = "0x8CE1A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public float TargetDistance
		{
			[Token(Token = "0x600081B")]
			[Address(RVA = "0x120172C", Offset = "0x120172C", VA = "0x120172C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE1B4", Offset = "0x8CE1B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600081C")]
			[Address(RVA = "0x1201734", Offset = "0x1201734", VA = "0x1201734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE1C4", Offset = "0x8CE1C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public bool IsRayDirectionPoint
		{
			[Token(Token = "0x600081F")]
			[Address(RVA = "0x120178C", Offset = "0x120178C", VA = "0x120178C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000176")]
		public bool IsRayDirectionDrag
		{
			[Token(Token = "0x6000820")]
			[Address(RVA = "0x12017AC", Offset = "0x12017AC", VA = "0x12017AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000177")]
		public bool IsRayOriginController
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0x12017D0", Offset = "0x12017D0", VA = "0x12017D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		public bool IsRayOriginPlayerShip
		{
			[Token(Token = "0x6000822")]
			[Address(RVA = "0x12017EC", Offset = "0x12017EC", VA = "0x12017EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000179")]
		public bool IsRayOriginPlayerShipPath
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0x12017FC", Offset = "0x12017FC", VA = "0x12017FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x120173C", Offset = "0x120173C", VA = "0x120173C")]
		public Vector3 RayDirection(bool allowSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1201774", Offset = "0x1201774", VA = "0x1201774")]
		public float RayDistance(bool allowSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x11FC350", Offset = "0x11FC350", VA = "0x11FC350")]
		public VRPlayerSelectorRay(VRPlayerSelectorRayType rayType, Vector2 rayActivateRange, [System.Runtime.InteropServices.Optional] Vector3 originPoint)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x11FBF90", Offset = "0x11FBF90", VA = "0x11FBF90")]
		public VRPlayerSelectorRay(VRPlayerSelectorRayType rayType, Vector2 rayDirectionActivateRange, Vector2 rayDistanceActivateRange, [System.Runtime.InteropServices.Optional] Vector3 originPoint)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x120180C", Offset = "0x120180C", VA = "0x120180C")]
		public void SetOrigin(Vector3 origin, bool overrideDefaultDir = false)
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x11FD110", Offset = "0x11FD110", VA = "0x11FD110")]
		public Ray GetRay(VRPlayerSelector selector, int pathIndex, bool allowSmoothing = true)
		{
			return default(Ray);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x11FC5E8", Offset = "0x11FC5E8", VA = "0x11FC5E8")]
		public Ray GetRay(Transform pointTransform, VRPlayerSelector selector, int pathIndex, bool allowSmoothing = true)
		{
			return default(Ray);
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x12019DC", Offset = "0x12019DC", VA = "0x12019DC")]
		public float GetOriginDistance(float projectionRange, bool allowSmoothing = true)
		{
			return default(float);
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x1201A34", Offset = "0x1201A34", VA = "0x1201A34")]
		public Vector3 GetRayPoint(VRPlayerSelector selector, int pathIndex, bool allowSmoothing = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x1201A5C", Offset = "0x1201A5C", VA = "0x1201A5C")]
		public Vector3 GetRayPoint(Transform pointTransform, VRPlayerSelector selector, int pathIndex, bool allowSmoothing = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x1201AC8", Offset = "0x1201AC8", VA = "0x1201AC8")]
		public Vector3 GetRayPoint(VRPlayerSelector selector, int pathIndex, float projectionRange, bool allowSmoothing = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x1201AF0", Offset = "0x1201AF0", VA = "0x1201AF0")]
		public Vector3 GetRayPoint(Transform pointTransform, VRPlayerSelector selector, int pathIndex, float projectionRange, bool allowSmoothing = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x120196C", Offset = "0x120196C", VA = "0x120196C")]
		private static void DragDirectionOrDefault(Vector3 from, Vector3 to, Vector3 defaultDirection, out Vector3 direction, out float magnitude)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x1201864", Offset = "0x1201864", VA = "0x1201864")]
		private static Vector3 PlayerShipPositionOrDefault(VRPlayerSelector selector, Vector3 defaultPosition, bool includePlayerPath, int pathIndex)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200012F")]
	public class VRPlayerSelectorScannerAction
	{
		[Serializable]
		[Token(Token = "0x2000130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A89A0", Offset = "0x8A89A0")]
		private sealed class <>c
		{
			[Token(Token = "0x40006EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40006ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<VRPlayerSelectorAction.ActionParameters> <>9__2_0;

			[Token(Token = "0x40006EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<VRPlayerSelectorAction.ActionParameters> <>9__2_1;

			[Token(Token = "0x40006EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<VRPlayerSelectorAction.ActionParameters> <>9__4_0;

			[Token(Token = "0x40006F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<VRPlayerSelectorAction.ActionParameters> <>9__4_1;

			[Token(Token = "0x40006F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action<VRPlayerSelectorAction.ActionParameters> <>9__4_2;

			[Token(Token = "0x40006F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action<VRPlayerSelectorAction.ActionParameters> <>9__4_3;

			[Token(Token = "0x6000835")]
			[Address(RVA = "0xEA81A8", Offset = "0xEA81A8", VA = "0xEA81A8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000836")]
			[Address(RVA = "0xEA81B0", Offset = "0xEA81B0", VA = "0xEA81B0")]
			internal void <get_SelectorActionDefault>b__2_0(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000837")]
			[Address(RVA = "0xEA8204", Offset = "0xEA8204", VA = "0xEA8204")]
			internal void <get_SelectorActionDefault>b__2_1(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000838")]
			[Address(RVA = "0xEA8258", Offset = "0xEA8258", VA = "0xEA8258")]
			internal void <get_SelectorActionActive>b__4_0(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x6000839")]
			[Address(RVA = "0xEA82A8", Offset = "0xEA82A8", VA = "0xEA82A8")]
			internal void <get_SelectorActionActive>b__4_1(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600083A")]
			[Address(RVA = "0xEA82F8", Offset = "0xEA82F8", VA = "0xEA82F8")]
			internal void <get_SelectorActionActive>b__4_2(VRPlayerSelectorAction.ActionParameters p)
			{
			}

			[Token(Token = "0x600083B")]
			[Address(RVA = "0xEA8348", Offset = "0xEA8348", VA = "0xEA8348")]
			internal void <get_SelectorActionActive>b__4_3(VRPlayerSelectorAction.ActionParameters p)
			{
			}
		}

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LocalizationKey label;

		[Token(Token = "0x1700017A")]
		public VRPlayerSelectorAction SelectorActionDefault
		{
			[Token(Token = "0x6000831")]
			[Address(RVA = "0x11F798C", Offset = "0x11F798C", VA = "0x11F798C")]
			get
			{
				return default(VRPlayerSelectorAction);
			}
		}

		[Token(Token = "0x1700017B")]
		public VRPlayerSelectorAction SelectorActionActive
		{
			[Token(Token = "0x6000832")]
			[Address(RVA = "0x11F4A54", Offset = "0x11F4A54", VA = "0x11F4A54")]
			get
			{
				return default(VRPlayerSelectorAction);
			}
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x11F2458", Offset = "0x11F2458", VA = "0x11F2458")]
		public VRPlayerSelectorScannerAction()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class VRScannableAuto : MonoBehaviour
	{
		[Token(Token = "0x2000132")]
		private enum AutoScanCondition
		{
			[Token(Token = "0x40006F9")]
			None,
			[Token(Token = "0x40006FA")]
			AutoScanLevel1,
			[Token(Token = "0x40006FB")]
			AutoScanLevel2
		}

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRScannableBase scannable;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AutoScanCondition autoScanCondition;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool autoScanOnlyIfAlone;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1CD0", Offset = "0x8B1CD0")]
		private bool <EnableAutoScan>k__BackingField;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<VRScannableAuto> autoScannables;

		[Token(Token = "0x1700017C")]
		public bool EnableAutoScan
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0xDF2494", Offset = "0xDF2494", VA = "0xDF2494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE1D4", Offset = "0x8CE1D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600083D")]
			[Address(RVA = "0xDF249C", Offset = "0xDF249C", VA = "0xDF249C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE1E4", Offset = "0x8CE1E4")]
			set
			{
			}
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xDF24A8", Offset = "0xDF24A8", VA = "0xDF24A8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xDF25E0", Offset = "0xDF25E0", VA = "0xDF25E0")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xDF26E8", Offset = "0xDF26E8", VA = "0xDF26E8")]
		private void TryAutoScan(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xDF2728", Offset = "0xDF2728", VA = "0xDF2728")]
		private bool ShouldAutoScan()
		{
			return default(bool);
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xDF2948", Offset = "0xDF2948", VA = "0xDF2948")]
		private bool CanAutoScan()
		{
			return default(bool);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xDF2B60", Offset = "0xDF2B60", VA = "0xDF2B60")]
		public VRScannableAuto()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class VRScannableBase : VRDirectionTargetableBase
	{
		[Token(Token = "0x2000134")]
		private struct ScannableData
		{
			[Token(Token = "0x4000727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VRScannableBase scannable;

			[Token(Token = "0x4000728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float sqrDistance;

			[Token(Token = "0x6000884")]
			[Address(RVA = "0xEA85AC", Offset = "0xEA85AC", VA = "0xEA85AC")]
			public ScannableData(VRScannableBase scannable, float sqrDistance)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000135")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A89B0", Offset = "0x8A89B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400072A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<VRScannableObjectEvents> <>9__103_0;

			[Token(Token = "0x400072B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<VRScannableObjectEvents> <>9__104_0;

			[Token(Token = "0x400072C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<VRScannableObjectEvents> <>9__105_0;

			[Token(Token = "0x400072D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<VRScannableObjectEvents> <>9__106_0;

			[Token(Token = "0x400072E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action<VRScannableObjectEvents> <>9__107_0;

			[Token(Token = "0x400072F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action<VRScannableObjectEvents> <>9__108_0;

			[Token(Token = "0x6000886")]
			[Address(RVA = "0xEA84FC", Offset = "0xEA84FC", VA = "0xEA84FC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000887")]
			[Address(RVA = "0xEA8504", Offset = "0xEA8504", VA = "0xEA8504")]
			internal void <ScannableTargeted>b__103_0(VRScannableObjectEvents p)
			{
			}

			[Token(Token = "0x6000888")]
			[Address(RVA = "0xEA8520", Offset = "0xEA8520", VA = "0xEA8520")]
			internal void <ScannableUnTargeted>b__104_0(VRScannableObjectEvents p)
			{
			}

			[Token(Token = "0x6000889")]
			[Address(RVA = "0xEA853C", Offset = "0xEA853C", VA = "0xEA853C")]
			internal void <ScannableRevealed>b__105_0(VRScannableObjectEvents p)
			{
			}

			[Token(Token = "0x600088A")]
			[Address(RVA = "0xEA8558", Offset = "0xEA8558", VA = "0xEA8558")]
			internal void <ScannableUnRevealed>b__106_0(VRScannableObjectEvents p)
			{
			}

			[Token(Token = "0x600088B")]
			[Address(RVA = "0xEA8574", Offset = "0xEA8574", VA = "0xEA8574")]
			internal void <ScannableScanned>b__107_0(VRScannableObjectEvents p)
			{
			}

			[Token(Token = "0x600088C")]
			[Address(RVA = "0xEA8590", Offset = "0xEA8590", VA = "0xEA8590")]
			internal void <ScannableUnScanned>b__108_0(VRScannableObjectEvents p)
			{
			}
		}

		[Token(Token = "0x40006FC")]
		public const string TARGETABLE_LAYER = "scannable";

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1CE0", Offset = "0x8B1CE0")]
		[SerializeField]
		private Graphic[] colorGraphics;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image progressImage;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1D3C", Offset = "0x8B1D3C")]
		[SerializeField]
		private Color colorHidden;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color colorRevealedActive;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color colorRevealedPassive;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color colorScanned;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1DB8", Offset = "0x8B1DB8")]
		[SerializeField]
		private bool scannableActive;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[SerializeField]
		private bool revealableActive;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		[SerializeField]
		private bool startRevealed;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float scanTime;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float scanDecay;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1E44", Offset = "0x8B1E44")]
		public bool attachToTransform;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform attachTarget;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool destroyOnAttachDestroyed;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1E7C", Offset = "0x8B1E7C")]
		private UnityEvent onRevealed;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private UnityEvent onUnRevealed;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private UnityEvent onScanned;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private UnityEvent onUnScanned;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private UnityEvent onTargeted;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private UnityEvent onUnTargeted;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1F18", Offset = "0x8B1F18")]
		private bool silent;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private SfxTrigger revealedSfx;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private SfxTrigger scanPulsingSfx;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private SfxTrigger scanCompleteSfx;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B1F94", Offset = "0x8B1F94")]
		private GameObject <ScannableObject>k__BackingField;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool targeted;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool revealed;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		private bool scanned;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
		private bool scanning;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float scanTimer;

		[Token(Token = "0x1700017D")]
		public bool ScannableActive
		{
			[Token(Token = "0x6000845")]
			[Address(RVA = "0xDF2BFC", Offset = "0xDF2BFC", VA = "0xDF2BFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017E")]
		public bool RevealableActive
		{
			[Token(Token = "0x6000846")]
			[Address(RVA = "0xDF2C04", Offset = "0xDF2C04", VA = "0xDF2C04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017F")]
		public bool ScanInstant
		{
			[Token(Token = "0x6000847")]
			[Address(RVA = "0xDF2C0C", Offset = "0xDF2C0C", VA = "0xDF2C0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000180")]
		public float ScanProgress
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0xDF2C1C", Offset = "0xDF2C1C", VA = "0xDF2C1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000181")]
		public bool Targeted
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0xDF2C3C", Offset = "0xDF2C3C", VA = "0xDF2C3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600084A")]
			[Address(RVA = "0xDF2C44", Offset = "0xDF2C44", VA = "0xDF2C44")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public bool Revealed
		{
			[Token(Token = "0x600084B")]
			[Address(RVA = "0xDF2C7C", Offset = "0xDF2C7C", VA = "0xDF2C7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600084C")]
			[Address(RVA = "0xDF2C84", Offset = "0xDF2C84", VA = "0xDF2C84")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public bool Scanned
		{
			[Token(Token = "0x600084D")]
			[Address(RVA = "0xDF2E24", Offset = "0xDF2E24", VA = "0xDF2E24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600084E")]
			[Address(RVA = "0xDF2D94", Offset = "0xDF2D94", VA = "0xDF2D94")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public bool Scanning
		{
			[Token(Token = "0x600084F")]
			[Address(RVA = "0xDF2E2C", Offset = "0xDF2E2C", VA = "0xDF2E2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000850")]
			[Address(RVA = "0xDF2900", Offset = "0xDF2900", VA = "0xDF2900")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public GameObject ScannableObject
		{
			[Token(Token = "0x6000851")]
			[Address(RVA = "0xDF2E34", Offset = "0xDF2E34", VA = "0xDF2E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE1F4", Offset = "0x8CE1F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000852")]
			[Address(RVA = "0xDF2E3C", Offset = "0xDF2E3C", VA = "0xDF2E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE204", Offset = "0x8CE204")]
			set
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action OnTargeted
		{
			[Token(Token = "0x6000853")]
			[Address(RVA = "0xDF2E44", Offset = "0xDF2E44", VA = "0xDF2E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE214", Offset = "0x8CE214")]
			add
			{
			}
			[Token(Token = "0x6000854")]
			[Address(RVA = "0xDF2EE4", Offset = "0xDF2EE4", VA = "0xDF2EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE224", Offset = "0x8CE224")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action OnUnTargeted
		{
			[Token(Token = "0x6000855")]
			[Address(RVA = "0xDF2F84", Offset = "0xDF2F84", VA = "0xDF2F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE234", Offset = "0x8CE234")]
			add
			{
			}
			[Token(Token = "0x6000856")]
			[Address(RVA = "0xDF3028", Offset = "0xDF3028", VA = "0xDF3028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE244", Offset = "0x8CE244")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action OnRevealed
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0xDF30CC", Offset = "0xDF30CC", VA = "0xDF30CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE254", Offset = "0x8CE254")]
			add
			{
			}
			[Token(Token = "0x6000858")]
			[Address(RVA = "0xDF3170", Offset = "0xDF3170", VA = "0xDF3170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE264", Offset = "0x8CE264")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action OnUnRevealed
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0xDF3214", Offset = "0xDF3214", VA = "0xDF3214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE274", Offset = "0x8CE274")]
			add
			{
			}
			[Token(Token = "0x600085A")]
			[Address(RVA = "0xDF32B8", Offset = "0xDF32B8", VA = "0xDF32B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE284", Offset = "0x8CE284")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action OnScanned
		{
			[Token(Token = "0x600085B")]
			[Address(RVA = "0xDF335C", Offset = "0xDF335C", VA = "0xDF335C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE294", Offset = "0x8CE294")]
			add
			{
			}
			[Token(Token = "0x600085C")]
			[Address(RVA = "0xDF3400", Offset = "0xDF3400", VA = "0xDF3400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE2A4", Offset = "0x8CE2A4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action OnUnScanned
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0xDF34A4", Offset = "0xDF34A4", VA = "0xDF34A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE2B4", Offset = "0x8CE2B4")]
			add
			{
			}
			[Token(Token = "0x600085E")]
			[Address(RVA = "0xDF3548", Offset = "0xDF3548", VA = "0xDF3548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE2C4", Offset = "0x8CE2C4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public static event Action<VRScannableBase> OnScannableTargeted
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0xDF35EC", Offset = "0xDF35EC", VA = "0xDF35EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE2D4", Offset = "0x8CE2D4")]
			add
			{
			}
			[Token(Token = "0x6000860")]
			[Address(RVA = "0xDF36A8", Offset = "0xDF36A8", VA = "0xDF36A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE2E4", Offset = "0x8CE2E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public static event Action<VRScannableBase> OnScannableUnTargeted
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0xDF3764", Offset = "0xDF3764", VA = "0xDF3764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE2F4", Offset = "0x8CE2F4")]
			add
			{
			}
			[Token(Token = "0x6000862")]
			[Address(RVA = "0xDF3824", Offset = "0xDF3824", VA = "0xDF3824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE304", Offset = "0x8CE304")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public static event Action<VRScannableBase> OnScannableRevealed
		{
			[Token(Token = "0x6000863")]
			[Address(RVA = "0xDF38E4", Offset = "0xDF38E4", VA = "0xDF38E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE314", Offset = "0x8CE314")]
			add
			{
			}
			[Token(Token = "0x6000864")]
			[Address(RVA = "0xDF39A4", Offset = "0xDF39A4", VA = "0xDF39A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE324", Offset = "0x8CE324")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public static event Action<VRScannableBase> OnScannableUnRevealed
		{
			[Token(Token = "0x6000865")]
			[Address(RVA = "0xDF3A64", Offset = "0xDF3A64", VA = "0xDF3A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE334", Offset = "0x8CE334")]
			add
			{
			}
			[Token(Token = "0x6000866")]
			[Address(RVA = "0xDF3B24", Offset = "0xDF3B24", VA = "0xDF3B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE344", Offset = "0x8CE344")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public static event Action<VRScannableBase> OnScannableScanned
		{
			[Token(Token = "0x6000867")]
			[Address(RVA = "0xDF3BE4", Offset = "0xDF3BE4", VA = "0xDF3BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE354", Offset = "0x8CE354")]
			add
			{
			}
			[Token(Token = "0x6000868")]
			[Address(RVA = "0xDF3CA4", Offset = "0xDF3CA4", VA = "0xDF3CA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE364", Offset = "0x8CE364")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public static event Action<VRScannableBase> OnScannableUnScanned
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0xDF3D64", Offset = "0xDF3D64", VA = "0xDF3D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE374", Offset = "0x8CE374")]
			add
			{
			}
			[Token(Token = "0x600086A")]
			[Address(RVA = "0xDF3E24", Offset = "0xDF3E24", VA = "0xDF3E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE384", Offset = "0x8CE384")]
			remove
			{
			}
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xDF3EE4", Offset = "0xDF3EE4", VA = "0xDF3EE4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xDF3F0C", Offset = "0xDF3F0C", VA = "0xDF3F0C")]
		protected void Start()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xDF3F7C", Offset = "0xDF3F7C", VA = "0xDF3F7C", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xDF3FB8", Offset = "0xDF3FB8", VA = "0xDF3FB8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xDF4010", Offset = "0xDF4010", VA = "0xDF4010", Slot = "5")]
		protected override void RegisterTargetableLayers(Action<string> addToLayer)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xDF407C", Offset = "0xDF407C", VA = "0xDF407C")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xDF43DC", Offset = "0xDF43DC", VA = "0xDF43DC")]
		public void Target()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xDF43FC", Offset = "0xDF43FC", VA = "0xDF43FC")]
		public void UnTarget()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xDF4418", Offset = "0xDF4418", VA = "0xDF4418")]
		public void Reveal()
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xDF4420", Offset = "0xDF4420", VA = "0xDF4420")]
		public void UnReveal()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xDF4428", Offset = "0xDF4428", VA = "0xDF4428")]
		public void Scan()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xDF4430", Offset = "0xDF4430", VA = "0xDF4430")]
		public void UnScan()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xDF4438", Offset = "0xDF4438", VA = "0xDF4438", Slot = "8")]
		protected virtual void ScannableTargeted()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xDF46B4", Offset = "0xDF46B4", VA = "0xDF46B4", Slot = "9")]
		protected virtual void ScannableUnTargeted()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xDF4820", Offset = "0xDF4820", VA = "0xDF4820", Slot = "10")]
		protected virtual void ScannableRevealed()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xDF49E8", Offset = "0xDF49E8", VA = "0xDF49E8", Slot = "11")]
		protected virtual void ScannableUnRevealed()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xDF4B54", Offset = "0xDF4B54", VA = "0xDF4B54", Slot = "12")]
		protected virtual void ScannableScanned()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xDF4DC8", Offset = "0xDF4DC8", VA = "0xDF4DC8", Slot = "13")]
		protected virtual void ScannableUnScanned()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xDF45A4", Offset = "0xDF45A4", VA = "0xDF45A4")]
		private void InvokeScannableObjectEvent(Action<VRScannableObjectEvents> action)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xDF2D00", Offset = "0xDF2D00", VA = "0xDF2D00")]
		private void UpdateVisuals()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xDF4F34", Offset = "0xDF4F34", VA = "0xDF4F34")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xDF4FD8", Offset = "0xDF4FD8", VA = "0xDF4FD8")]
		private void SetProgress(float progress)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xDF507C", Offset = "0xDF507C", VA = "0xDF507C")]
		public void SetScanTime(float scanTime)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xDF5084", Offset = "0xDF5084", VA = "0xDF5084")]
		public void SetDecayTime(float decayTime)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xDF508C", Offset = "0xDF508C", VA = "0xDF508C")]
		public VRScannableBase()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class VRScannableInfo : MonoBehaviour
	{
		[Token(Token = "0x2000137")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A89C0", Offset = "0x8A89C0")]
		private sealed class <HideDetails>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRScannableInfo <>4__this;

			[Token(Token = "0x17000187")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600089E")]
				[Address(RVA = "0xEA8838", Offset = "0xEA8838", VA = "0xEA8838", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000188")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008A0")]
				[Address(RVA = "0xEA8880", Offset = "0xEA8880", VA = "0xEA8880", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600089B")]
			[Address(RVA = "0xEA8730", Offset = "0xEA8730", VA = "0xEA8730")]
			[DebuggerHidden]
			public <HideDetails>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x600089C")]
			[Address(RVA = "0xEA875C", Offset = "0xEA875C", VA = "0xEA875C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600089D")]
			[Address(RVA = "0xEA8760", Offset = "0xEA8760", VA = "0xEA8760", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600089F")]
			[Address(RVA = "0xEA8840", Offset = "0xEA8840", VA = "0xEA8840", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A89D0", Offset = "0x8A89D0")]
		private sealed class <HideCenterPoint>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRScannableInfo <>4__this;

			[Token(Token = "0x17000189")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008A4")]
				[Address(RVA = "0xEA86E0", Offset = "0xEA86E0", VA = "0xEA86E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008A6")]
				[Address(RVA = "0xEA8728", Offset = "0xEA8728", VA = "0xEA8728", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008A1")]
			[Address(RVA = "0xEA85E0", Offset = "0xEA85E0", VA = "0xEA85E0")]
			[DebuggerHidden]
			public <HideCenterPoint>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60008A2")]
			[Address(RVA = "0xEA860C", Offset = "0xEA860C", VA = "0xEA860C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008A3")]
			[Address(RVA = "0xEA8610", Offset = "0xEA8610", VA = "0xEA8610", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008A5")]
			[Address(RVA = "0xEA86E8", Offset = "0xEA86E8", VA = "0xEA86E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2064", Offset = "0x8B2064")]
		private GameObject detailsParent;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject calculatedDescriptionParent;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject regularDescription;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B20D0", Offset = "0x8B20D0")]
		[SerializeField]
		private TextMeshProUGUI nameText;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI descriptionText;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI massText;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI massValueText;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI diameterText;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI diameterValueText;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B216C", Offset = "0x8B216C")]
		[SerializeField]
		private LocalizationKey massKey;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LocalizationKey massValueKey;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LocalizationKey diameterKey;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LocalizationKey diameterValueKey;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B21E8", Offset = "0x8B21E8")]
		[SerializeField]
		private float textHideDelay;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float centerPointHideDelay;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2244", Offset = "0x8B2244")]
		private TransformScaleLerp detailsScaleLerp;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TextMeshProColorLerp nameColorLerp;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private List<TextMeshProColorLerp> calculatedDescriptionColorLerps;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private TextMeshProColorLerp regularDescriptionColorLerp;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ImageColorLerp centerColorLerp;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B22D0", Offset = "0x8B22D0")]
		private float diameterMultiplier;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float massMultiplier;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Vector2 randomRangeMultiply;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject centerPoint;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject canvas;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int diameter;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private double mass;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int massPower;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool isCalculatedDescription;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool isDisplayingInfo;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		private bool isTargeted;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine hideDetailsCoroutine;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Coroutine hideCenterPointCoroutine;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<VRScannableInfo> activeInfoDisplays;

		[Token(Token = "0x17000186")]
		public static IReadOnlyList<VRScannableInfo> ActiveInfoDisplays
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0xDF5140", Offset = "0xDF5140", VA = "0xDF5140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xDF51A4", Offset = "0xDF51A4", VA = "0xDF51A4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xDF5230", Offset = "0xDF5230", VA = "0xDF5230")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xDF52BC", Offset = "0xDF52BC", VA = "0xDF52BC")]
		public void InitializeInfo(LocalizationKey nameKey)
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xDF53E4", Offset = "0xDF53E4", VA = "0xDF53E4")]
		public void InitializeCalculatedInfo(LocalizationKey nameKey, Vector3 scale, float extraMassMultiplier)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xDF5698", Offset = "0xDF5698", VA = "0xDF5698")]
		public void OnTargeted()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xDF5824", Offset = "0xDF5824", VA = "0xDF5824")]
		public void OnUnTargeted()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xDF595C", Offset = "0xDF595C", VA = "0xDF595C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CE394", Offset = "0x8CE394")]
		private IEnumerator HideDetails()
		{
			return null;
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xDF59D4", Offset = "0xDF59D4", VA = "0xDF59D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CE3F4", Offset = "0x8CE3F4")]
		private IEnumerator HideCenterPoint()
		{
			return null;
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xDF57D8", Offset = "0xDF57D8", VA = "0xDF57D8")]
		private void LerpInAnimation()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xDF5A4C", Offset = "0xDF5A4C", VA = "0xDF5A4C")]
		private void LerpOutAnimation()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xDF5304", Offset = "0xDF5304", VA = "0xDF5304")]
		public void SwitchDisplayInfo()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xDF5A88", Offset = "0xDF5A88", VA = "0xDF5A88")]
		public VRScannableInfo()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class VRScannableInfoSpawner : VRScannableSpawner
	{
		[Token(Token = "0x200013A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A89E0", Offset = "0x8A89E0")]
		private sealed class <SpawnAsync>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400075C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400075D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400075E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRScannableInfoSpawner <>4__this;

			[Token(Token = "0x1700018B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008AE")]
				[Address(RVA = "0xEA8960", Offset = "0xEA8960", VA = "0xEA8960", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008B0")]
				[Address(RVA = "0xEA89A8", Offset = "0xEA89A8", VA = "0xEA89A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008AB")]
			[Address(RVA = "0xEA8888", Offset = "0xEA8888", VA = "0xEA8888")]
			[DebuggerHidden]
			public <SpawnAsync>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60008AC")]
			[Address(RVA = "0xEA88B4", Offset = "0xEA88B4", VA = "0xEA88B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008AD")]
			[Address(RVA = "0xEA88B8", Offset = "0xEA88B8", VA = "0xEA88B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008AF")]
			[Address(RVA = "0xEA8968", Offset = "0xEA8968", VA = "0xEA8968", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B235C", Offset = "0x8B235C")]
		private LocalizationKey nameKey;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LocalizationKey descriptionKey;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool calculatedDescription;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float extraMassMultiplier;

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xDF5B98", Offset = "0xDF5B98", VA = "0xDF5B98", Slot = "39")]
		public override VRScannableBase SpawnScannable(ScannableType type, bool disableAutoScan, bool instantReveal)
		{
			return null;
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xDF5BEC", Offset = "0xDF5BEC", VA = "0xDF5BEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CE4F4", Offset = "0x8CE4F4")]
		private IEnumerator SpawnAsync()
		{
			return null;
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xDF601C", Offset = "0xDF601C", VA = "0xDF601C")]
		private void InitializeSpawnedObject()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xDF60B4", Offset = "0xDF60B4", VA = "0xDF60B4")]
		public VRScannableInfoSpawner()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class VRScannableObjectEvents : MonoBehaviour
	{
		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onTargeted;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onUnTargeted;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onRevealed;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onUnRevealed;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent onScanned;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onUnScanned;

		[Token(Token = "0x14000025")]
		public event Action OnTargeted
		{
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0xDF6120", Offset = "0xDF6120", VA = "0xDF6120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE5A4", Offset = "0x8CE5A4")]
			add
			{
			}
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0xDF61C0", Offset = "0xDF61C0", VA = "0xDF61C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE5B4", Offset = "0x8CE5B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Action OnUnTargeted
		{
			[Token(Token = "0x60008B3")]
			[Address(RVA = "0xDF6260", Offset = "0xDF6260", VA = "0xDF6260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE5C4", Offset = "0x8CE5C4")]
			add
			{
			}
			[Token(Token = "0x60008B4")]
			[Address(RVA = "0xDF6300", Offset = "0xDF6300", VA = "0xDF6300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE5D4", Offset = "0x8CE5D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action OnRevealed
		{
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0xDF63A0", Offset = "0xDF63A0", VA = "0xDF63A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE5E4", Offset = "0x8CE5E4")]
			add
			{
			}
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0xDF6440", Offset = "0xDF6440", VA = "0xDF6440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE5F4", Offset = "0x8CE5F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event Action OnUnRevealed
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0xDF64E0", Offset = "0xDF64E0", VA = "0xDF64E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE604", Offset = "0x8CE604")]
			add
			{
			}
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0xDF6580", Offset = "0xDF6580", VA = "0xDF6580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE614", Offset = "0x8CE614")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action OnScanned
		{
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0xDF6620", Offset = "0xDF6620", VA = "0xDF6620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE624", Offset = "0x8CE624")]
			add
			{
			}
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0xDF66C0", Offset = "0xDF66C0", VA = "0xDF66C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE634", Offset = "0x8CE634")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action OnUnScanned
		{
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0xDF6760", Offset = "0xDF6760", VA = "0xDF6760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE644", Offset = "0x8CE644")]
			add
			{
			}
			[Token(Token = "0x60008BC")]
			[Address(RVA = "0xDF6800", Offset = "0xDF6800", VA = "0xDF6800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE654", Offset = "0x8CE654")]
			remove
			{
			}
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xDF68A0", Offset = "0xDF68A0", VA = "0xDF68A0")]
		public void ScannableTargeted()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xDF68E4", Offset = "0xDF68E4", VA = "0xDF68E4")]
		public void ScannableUnTargeted()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xDF6928", Offset = "0xDF6928", VA = "0xDF6928")]
		public void ScannableRevealed()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xDF696C", Offset = "0xDF696C", VA = "0xDF696C")]
		public void ScannableUnRevealed()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xDF69B0", Offset = "0xDF69B0", VA = "0xDF69B0")]
		public void ScannableScanned()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xDF69F4", Offset = "0xDF69F4", VA = "0xDF69F4")]
		public void ScannableUnScanned()
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xDF6A38", Offset = "0xDF6A38", VA = "0xDF6A38")]
		public VRScannableObjectEvents()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class VRScannablePickupSpawner : PickupSpawnerBase
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xDF6A40", Offset = "0xDF6A40", VA = "0xDF6A40", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xDF6BBC", Offset = "0xDF6BBC", VA = "0xDF6BBC")]
		private void SpawnScanPickups()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xDF6CF8", Offset = "0xDF6CF8", VA = "0xDF6CF8")]
		public VRScannablePickupSpawner()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class VRScannableRadialSpawner : VRScannableSpawner
	{
		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float offsetDistance;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Vector2 offsetRadius;

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xDF6D5C", Offset = "0xDF6D5C", VA = "0xDF6D5C", Slot = "38")]
		public override Vector3 GetLocalSpawnPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xDF6E68", Offset = "0xDF6E68", VA = "0xDF6E68")]
		public VRScannableRadialSpawner()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class VRScannableShipwreck : MonoBehaviour
	{
		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRScannableSpawner scannableSpawner;

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xDF6ED8", Offset = "0xDF6ED8", VA = "0xDF6ED8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xDF7180", Offset = "0xDF7180", VA = "0xDF7180")]
		private void HideShipwreck()
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xDF71A8", Offset = "0xDF71A8", VA = "0xDF71A8")]
		private void OnShipwreckScanned()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xDF7294", Offset = "0xDF7294", VA = "0xDF7294")]
		public VRScannableShipwreck()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class VRScannableSpawner : GameMonoBehaviour
	{
		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ScannableType scannableType;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool spawnOnStart;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool spawnOnSectorClear;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		private bool disableAutoScan;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		private bool instantReveal;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2518", Offset = "0x8B2518")]
		private bool overrideScanTime;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float scanTime;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2574", Offset = "0x8B2574")]
		[SerializeField]
		private bool overrideDecayTime;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float decayTime;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRScannableBase scannable;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform scannableFollow;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool blockScannableSpawn;

		[Token(Token = "0x1700018D")]
		public VRScannableBase Scannable
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0xDF729C", Offset = "0xDF729C", VA = "0xDF729C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0xDF72A4", Offset = "0xDF72A4", VA = "0xDF72A4", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0xDF72AC", Offset = "0xDF72AC", VA = "0xDF72AC", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		private static bool IsSectorClear
		{
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0xDF72B0", Offset = "0xDF72B0", VA = "0xDF72B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000190")]
		public static bool BlockScannableSpawn
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0xDF7600", Offset = "0xDF7600", VA = "0xDF7600")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0xDF7664", Offset = "0xDF7664", VA = "0xDF7664")]
			set
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public static event Action<bool> BlockScannableSpawnChanged
		{
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0xDF7410", Offset = "0xDF7410", VA = "0xDF7410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE664", Offset = "0x8CE664")]
			add
			{
			}
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0xDF7508", Offset = "0xDF7508", VA = "0xDF7508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE674", Offset = "0x8CE674")]
			remove
			{
			}
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xDF7734", Offset = "0xDF7734", VA = "0xDF7734", Slot = "38")]
		public virtual Vector3 GetLocalSpawnPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xDF773C", Offset = "0xDF773C", VA = "0xDF773C")]
		public Vector3 GetWorldSpawnPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xDF7788", Offset = "0xDF7788", VA = "0xDF7788", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xDF7A88", Offset = "0xDF7A88", VA = "0xDF7A88", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xDF7C60", Offset = "0xDF7C60", VA = "0xDF7C60")]
		private void OnSectorClearCheck(bool _)
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xDF7D58", Offset = "0xDF7D58", VA = "0xDF7D58")]
		private void OnSectorStartCheck(bool blockScannableSpawn)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xDF7A6C", Offset = "0xDF7A6C", VA = "0xDF7A6C")]
		public VRScannableBase SpawnScannable()
		{
			return null;
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xDF5C64", Offset = "0xDF5C64", VA = "0xDF5C64", Slot = "39")]
		public virtual VRScannableBase SpawnScannable(ScannableType type, bool disableAutoScan = false, bool instantReveal = false)
		{
			return null;
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xDF7D7C", Offset = "0xDF7D7C", VA = "0xDF7D7C")]
		public void SpawnScannableSimple()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xDF7D98", Offset = "0xDF7D98", VA = "0xDF7D98")]
		public void DespawnScannable()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xDF6118", Offset = "0xDF6118", VA = "0xDF6118")]
		public VRScannableSpawner()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class VRScannableStatRecorder : StatRecorder
	{
		[Token(Token = "0x1400002C")]
		public static event Action<StatsEnum> OnScanStatRecord
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0xDF7E74", Offset = "0xDF7E74", VA = "0xDF7E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE684", Offset = "0x8CE684")]
			add
			{
			}
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0xDF7F30", Offset = "0xDF7F30", VA = "0xDF7F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE694", Offset = "0x8CE694")]
			remove
			{
			}
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xDF7FEC", Offset = "0xDF7FEC", VA = "0xDF7FEC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xDF815C", Offset = "0xDF815C", VA = "0xDF815C")]
		private void RecordScan()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xDF8308", Offset = "0xDF8308", VA = "0xDF8308")]
		public VRScannableStatRecorder()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public enum VROptionMenuInteractionType
	{
		[Token(Token = "0x400077D")]
		None = 0,
		[Token(Token = "0x400077E")]
		SelfIDamagable = 1,
		[Token(Token = "0x400077F")]
		DirectionTargetableInConeIDamagable = 5,
		[Token(Token = "0x4000780")]
		DirectionTargetableInConeHoldIDamagable = 6,
		[Token(Token = "0x4000781")]
		DirectionTargetableInRayIDamagable = 7,
		[Token(Token = "0x4000782")]
		DirectionTargetableInRayHoldIDamagable = 8,
		[Token(Token = "0x4000783")]
		PointInRadius = 10,
		[Token(Token = "0x4000784")]
		PointOnRadius = 11,
		[Token(Token = "0x4000785")]
		PointInRadiusHold = 12,
		[Token(Token = "0x4000786")]
		PointOnRadiusHold = 13
	}
	[Token(Token = "0x2000142")]
	public enum VROptionMenuTargetableObjectType
	{
		[Token(Token = "0x4000788")]
		Hostile = 0,
		[Token(Token = "0x4000789")]
		Friendly = 1,
		[Token(Token = "0x400078A")]
		AllFactions = 10
	}
	[Serializable]
	[Token(Token = "0x2000143")]
	public struct VROptionMenuInteractionTargetable
	{
		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VROptionMenuTargetableObjectType targetableObjects;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool disableTargetProjectiles;

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x10BE8F8", Offset = "0x10BE8F8", VA = "0x10BE8F8")]
		public VROptionMenuInteractionTargetable(VROptionMenuTargetableObjectType targetableObjects, bool disableTargetProjectiles = false)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x10BE908", Offset = "0x10BE908", VA = "0x10BE908")]
		public bool ValidateTargetableByPlayer(VRDirectionTargetableBase targetable)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x10BF048", Offset = "0x10BF048", VA = "0x10BF048")]
		public static bool IsFactionPlayer(Faction faction)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x10BEF74", Offset = "0x10BEF74", VA = "0x10BEF74")]
		public static bool IsFactionFriendly(Faction faction)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x10BEEA0", Offset = "0x10BEEA0", VA = "0x10BEEA0")]
		public static bool IsFactionHostile(Faction faction)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000144")]
	public struct VROptionMenuInteraction
	{
		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VROptionMenuInteractionType type;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float radius;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float lockOnTime;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool lockOnOnlyInRadius;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool lockOnStickToTarget;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool lockOnRequireTarget;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ReticleType reticle;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRPlayerSelectorRayType ray;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 rayActivateRange;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VROptionMenuInteractionTargetable targetables;

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x10BE8C8", Offset = "0x10BE8C8", VA = "0x10BE8C8")]
		public VROptionMenuInteraction(ReticleType reticle, VRPlayerSelectorRayType ray = VRPlayerSelectorRayType.PointController, [System.Runtime.InteropServices.Optional] VROptionMenuInteractionTargetable targetables, float radius = -1f, float lockOnTime = 0f, bool lockOnOnlyInRadius = false, bool lockOnStickToTarget = false, bool lockOnRequireTarget = false, [System.Runtime.InteropServices.Optional] Vector2 rayActivateRange)
		{
		}
	}
	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A89F0", Offset = "0x8A89F0")]
	public class VRShipInteractable : VRButtonDragInteractable
	{
		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private SpaceShipController shipController;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private SpaceShip ship;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private bool dragIsValid;

		[Token(Token = "0x17000191")]
		public SpaceShip Ship
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0xDF8704", Offset = "0xDF8704", VA = "0xDF8704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public bool IsPlayerShip
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0xDF870C", Offset = "0xDF870C", VA = "0xDF870C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xDF872C", Offset = "0xDF872C", VA = "0xDF872C", Slot = "47")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xDF87FC", Offset = "0xDF87FC", VA = "0xDF87FC", Slot = "48")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xDF886C", Offset = "0xDF886C", VA = "0xDF886C", Slot = "49")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xDF88AC", Offset = "0xDF88AC", VA = "0xDF88AC", Slot = "89")]
		protected override void OnButtonDragStart()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xDF8AA4", Offset = "0xDF8AA4", VA = "0xDF8AA4", Slot = "90")]
		protected override void OnButtonDragEnd()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xDF8B04", Offset = "0xDF8B04", VA = "0xDF8B04", Slot = "91")]
		protected override void OnButtonDragCancel()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xDF8B64", Offset = "0xDF8B64", VA = "0xDF8B64", Slot = "88")]
		protected override void OnButtonActivateClick()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xDF8910", Offset = "0xDF8910", VA = "0xDF8910")]
		private bool TryGetInteractorSelector(out VRPlayerSelector selector)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xDF8BC4", Offset = "0xDF8BC4", VA = "0xDF8BC4")]
		public VRShipInteractable()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public enum VRTrackedPoseDriverSmoothingMode
	{
		[Token(Token = "0x400079B")]
		Head,
		[Token(Token = "0x400079C")]
		Hands
	}
	[Token(Token = "0x2000147")]
	public class VRTrackedPoseDriver : TrackedPoseDriver
	{
		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B25F0", Offset = "0x8B25F0")]
		private VRTrackedPoseDriver parent;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B263C", Offset = "0x8B263C")]
		[SerializeField]
		private VRTrackedPoseDriverSmoothingMode smoothMode;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float smoothDampening;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 parentPosition;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Quaternion parentRotation;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 smoothedPosition;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion smoothedRotation;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<VRTrackedPoseDriver> children;

		[Token(Token = "0x17000193")]
		private bool SmoothTrackingEnabled
		{
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0xDF8D68", Offset = "0xDF8D68", VA = "0xDF8D68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action AfterUpdateState
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0xDF8C28", Offset = "0xDF8C28", VA = "0xDF8C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE6A4", Offset = "0x8CE6A4")]
			add
			{
			}
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0xDF8CC8", Offset = "0xDF8CC8", VA = "0xDF8CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE6B4", Offset = "0x8CE6B4")]
			remove
			{
			}
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xDF8E6C", Offset = "0xDF8E6C", VA = "0xDF8E6C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xDF8F84", Offset = "0xDF8F84", VA = "0xDF8F84", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xDF9034", Offset = "0xDF9034", VA = "0xDF9034", Slot = "10")]
		protected override void SetLocalTransform(Vector3 newPosition, Quaternion newRotation)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xDF91AC", Offset = "0xDF91AC", VA = "0xDF91AC")]
		private void UpdateLocalTransform()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xDF9434", Offset = "0xDF9434", VA = "0xDF9434")]
		private void UpdateChildren()
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xDF95B8", Offset = "0xDF95B8", VA = "0xDF95B8")]
		public VRTrackedPoseDriver()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public enum VRTransformFollowTarget
	{
		[Token(Token = "0x40007A7")]
		Root,
		[Token(Token = "0x40007A8")]
		Head,
		[Token(Token = "0x40007A9")]
		LeftHand,
		[Token(Token = "0x40007AA")]
		RightHand,
		[Token(Token = "0x40007AB")]
		MainHand,
		[Token(Token = "0x40007AC")]
		OffHand
	}
	[Token(Token = "0x2000149")]
	public class VRTransformFollow : MonoBehaviour
	{
		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRTransformFollowTarget target;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool followPosition;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool followRotation;

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xDF9604", Offset = "0xDF9604", VA = "0xDF9604")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xDF98A4", Offset = "0xDF98A4", VA = "0xDF98A4")]
		public VRTransformFollow()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class VignetteController : MonoBehaviour
	{
		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B26D8", Offset = "0x8B26D8")]
		[SerializeField]
		private Volume volume;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRPullLocomotion vrPullLocomotion;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2734", Offset = "0x8B2734")]
		[SerializeField]
		private float valueIncreaseDuration;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float valueDecreaseDuration;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float rotationAngleTargetToExceed;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float grippingGoalValue;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float rotatingGoalValue;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vignette vignette;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float currentDuration;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timeReset;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float goal;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float previousGoal;

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xDFE04C", Offset = "0xDFE04C", VA = "0xDFE04C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xDFE178", Offset = "0xDFE178", VA = "0xDFE178")]
		private void Update()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xDFE2B0", Offset = "0xDFE2B0", VA = "0xDFE2B0")]
		private void SetPreviousGoalValues()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xDFE2FC", Offset = "0xDFE2FC", VA = "0xDFE2FC")]
		private float VignetteMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xDFE3E4", Offset = "0xDFE3E4", VA = "0xDFE3E4")]
		public VignetteController()
		{
		}
	}
	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8A50", Offset = "0x8A8A50")]
	public class XRRayInteractorScaler : MonoBehaviour
	{
		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRRayInteractor interactor;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private XRInteractorLineVisual visual;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private XRRayInteractorSegmentLine visualSegmented;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineRenderer[] customLineRenderers;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float baseLineLength;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AnimationCurve baseLineCurve;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] baseCustomLineRendererWidth;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float lastVRPlayerScale;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AnimationCurve customCurve;

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xE02B78", Offset = "0xE02B78", VA = "0xE02B78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xE02D68", Offset = "0xE02D68", VA = "0xE02D68")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xE02FC4", Offset = "0xE02FC4", VA = "0xE02FC4")]
		private AnimationCurve UpdateCustomLineCurve(float scale)
		{
			return null;
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xE03148", Offset = "0xE03148", VA = "0xE03148")]
		public XRRayInteractorScaler()
		{
		}
	}
	[Token(Token = "0x200014C")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8A8AB0", Offset = "0x8A8AB0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8AB0", Offset = "0x8A8AB0")]
	public class XRRayInteractorSegmentLine : MonoBehaviour
	{
		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float lineWidth;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve widthCurve;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Gradient validColorGradient;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Gradient invalidColorGradient;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool updateSettingsNextRender;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] targetPoints;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int targetPointCount;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] renderPoints;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] renderPointsDistance;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ILineRenderable ray;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LineRenderer line;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3[] CLEAR_ARRAY;

		[Token(Token = "0x17000194")]
		public float LineWidth
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0xE03158", Offset = "0xE03158", VA = "0xE03158")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600090C")]
			[Address(RVA = "0xE03160", Offset = "0xE03160", VA = "0xE03160")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public AnimationCurve WidthCurve
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0xE03170", Offset = "0xE03170", VA = "0xE03170")]
			get
			{
				return null;
			}
			[Token(Token = "0x600090E")]
			[Address(RVA = "0xE03118", Offset = "0xE03118", VA = "0xE03118")]
			set
			{
			}
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xE03178", Offset = "0xE03178", VA = "0xE03178")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xE03370", Offset = "0xE03370", VA = "0xE03370")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xE03494", Offset = "0xE03494", VA = "0xE03494")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xE033FC", Offset = "0xE033FC", VA = "0xE033FC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xE0356C", Offset = "0xE0356C", VA = "0xE0356C")]
		[AttributeAttribute(Name = "BeforeRenderOrderAttribute", RVA = "0x8CE6C4", Offset = "0x8CE6C4")]
		private void OnBeforeRenderLineVisual()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xE03570", Offset = "0xE03570", VA = "0xE03570")]
		private void UpdateLine()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xE0332C", Offset = "0xE0332C", VA = "0xE0332C")]
		private void UpdateSettings()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xE03934", Offset = "0xE03934", VA = "0xE03934")]
		public XRRayInteractorSegmentLine()
		{
		}
	}
}
namespace Game.VFX
{
	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8B24", Offset = "0x8A8B24")]
	public class ChildMaterialInitializer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200014E")]
		private class ShaderOverrideInformation
		{
			[Token(Token = "0x40007D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Renderer targetRenderer;

			[Token(Token = "0x40007D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int targetMaterialIndex;

			[Token(Token = "0x40007D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool overrideShaderVectorProperty;

			[Token(Token = "0x40007D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool overrideShaderFloatProperty;

			[Token(Token = "0x40007DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string shaderPropertyToOverride;

			[Token(Token = "0x40007DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool clampOverrideValue;

			[Token(Token = "0x600091C")]
			[Address(RVA = "0xC650B4", Offset = "0xC650B4", VA = "0xC650B4")]
			public ShaderOverrideInformation()
			{
			}
		}

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2840", Offset = "0x8B2840")]
		private bool inheritReferenceScaleOnStart;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform referenceObject;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool inheritOwnScaleOnStart;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool useLossyScale;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B28BC", Offset = "0x8B28BC")]
		[SerializeField]
		private ShaderOverrideInformation[] shaderOverrideInformation;

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xFE80DC", Offset = "0xFE80DC", VA = "0xFE80DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xFE80E0", Offset = "0xFE80E0", VA = "0xFE80E0")]
		private void UpdateTargetMaterialSettings()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xFE83C0", Offset = "0xFE83C0", VA = "0xFE83C0")]
		public void RefreshTargetMaterialSettings()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xFE83C4", Offset = "0xFE83C4", VA = "0xFE83C4")]
		public ChildMaterialInitializer()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class DistanceLerpLaserVisual : MonoBehaviour
	{
		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2908", Offset = "0x8B2908")]
		private ParticleSystem[] allParticleSystems;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2954", Offset = "0x8B2954")]
		private GameObject gameObjectToScale;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 minMaxScaleMultiplier;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 defaultScale;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool visibleFromBase;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool visibleFromDistance;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		private bool visible;

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xC4F970", Offset = "0xC4F970", VA = "0xC4F970")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xC4FA0C", Offset = "0xC4FA0C", VA = "0xC4FA0C")]
		public void SetVisibleFromBase(bool visible)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xC4FB40", Offset = "0xC4FB40", VA = "0xC4FB40")]
		public void SetVisibleFromDistance(bool visible)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xC4FA18", Offset = "0xC4FA18", VA = "0xC4FA18")]
		private void UpdateVisibility()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xC4FB4C", Offset = "0xC4FB4C", VA = "0xC4FB4C")]
		public void SequencerScaler(float widthMultiplier)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xC4FC34", Offset = "0xC4FC34", VA = "0xC4FC34")]
		public DistanceLerpLaserVisual()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class EffectModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000151")]
		private class EffectInformation
		{
			[Token(Token = "0x40007E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private ParticleSystem particleSystem;

			[Token(Token = "0x40007E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private bool modifyDuration;

			[Token(Token = "0x40007E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[SerializeField]
			private bool modifyLifetime;

			[Token(Token = "0x40007E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[SerializeField]
			private bool instantiateParticleMaterial;

			[Token(Token = "0x40007E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			[SerializeField]
			private bool instantiateParticleTrailMaterial;

			[Token(Token = "0x40007E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float defaultDuration;

			[Token(Token = "0x40007EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float defaultLifetime;

			[Token(Token = "0x17000196")]
			public ParticleSystem ThisParticleSystem
			{
				[Token(Token = "0x6000926")]
				[Address(RVA = "0xC6D784", Offset = "0xC6D784", VA = "0xC6D784")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000197")]
			public bool ModifyDuration
			{
				[Token(Token = "0x6000927")]
				[Address(RVA = "0xC6D78C", Offset = "0xC6D78C", VA = "0xC6D78C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000198")]
			public bool ModifyLifetime
			{
				[Token(Token = "0x6000928")]
				[Address(RVA = "0xC6D794", Offset = "0xC6D794", VA = "0xC6D794")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000199")]
			public bool InstantiateParticleMaterial
			{
				[Token(Token = "0x6000929")]
				[Address(RVA = "0xC6D79C", Offset = "0xC6D79C", VA = "0xC6D79C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700019A")]
			public bool InstantiateParticleTrailMaterial
			{
				[Token(Token = "0x600092A")]
				[Address(RVA = "0xC6D7A4", Offset = "0xC6D7A4", VA = "0xC6D7A4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700019B")]
			public float DefaultDuration
			{
				[Token(Token = "0x600092B")]
				[Address(RVA = "0xC6D7AC", Offset = "0xC6D7AC", VA = "0xC6D7AC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600092C")]
				[Address(RVA = "0xC6D7B4", Offset = "0xC6D7B4", VA = "0xC6D7B4")]
				set
				{
				}
			}

			[Token(Token = "0x1700019C")]
			public float DefaultLifetime
			{
				[Token(Token = "0x600092D")]
				[Address(RVA = "0xC6D7BC", Offset = "0xC6D7BC", VA = "0xC6D7BC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600092E")]
				[Address(RVA = "0xC6D7C4", Offset = "0xC6D7C4", VA = "0xC6D7C4")]
				set
				{
				}
			}

			[Token(Token = "0x600092F")]
			[Address(RVA = "0xC6D7CC", Offset = "0xC6D7CC", VA = "0xC6D7CC")]
			public EffectInformation()
			{
			}
		}

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EffectInformation[] effectModifiers;

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xC520F8", Offset = "0xC520F8", VA = "0xC520F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xC52300", Offset = "0xC52300", VA = "0xC52300")]
		public void SpeedUpEffects(float speedMultiplier)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xC52400", Offset = "0xC52400", VA = "0xC52400")]
		public EffectModifier()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class MaterialFloatLerper : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000153")]
		private class DefinedFloat
		{
			[Token(Token = "0x40007EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Renderer renderer;

			[Token(Token = "0x40007EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int materialIndex;

			[Token(Token = "0x40007F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private bool particleSystemTrail;

			[Token(Token = "0x40007F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private string materialFloatProperty;

			[Token(Token = "0x40007F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private float fromValue;

			[Token(Token = "0x40007F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			private float toValue;

			[Token(Token = "0x40007F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private float duration;

			[Token(Token = "0x40007F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			private float startDelay;

			[Token(Token = "0x40007F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private AnimationCurve animationCurve;

			[Token(Token = "0x40007F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool useAnimationCurveFinalValueAsStopValue;

			[Token(Token = "0x1700019D")]
			public Renderer PresetRenderer
			{
				[Token(Token = "0x600093A")]
				[Address(RVA = "0xEDB620", Offset = "0xEDB620", VA = "0xEDB620")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019E")]
			public int MaterialIndex
			{
				[Token(Token = "0x600093B")]
				[Address(RVA = "0xEDB628", Offset = "0xEDB628", VA = "0xEDB628")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700019F")]
			public bool IsParticleSystemTrailMaterial
			{
				[Token(Token = "0x600093C")]
				[Address(RVA = "0xEDB630", Offset = "0xEDB630", VA = "0xEDB630")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001A0")]
			public string MaterialFloatProperty
			{
				[Token(Token = "0x600093D")]
				[Address(RVA = "0xEDB638", Offset = "0xEDB638", VA = "0xEDB638")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A1")]
			public float FromValue
			{
				[Token(Token = "0x600093E")]
				[Address(RVA = "0xEDB640", Offset = "0xEDB640", VA = "0xEDB640")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A2")]
			public float ToValue
			{
				[Token(Token = "0x600093F")]
				[Address(RVA = "0xEDB648", Offset = "0xEDB648", VA = "0xEDB648")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A3")]
			public float Duration
			{
				[Token(Token = "0x6000940")]
				[Address(RVA = "0xEDB650", Offset = "0xEDB650", VA = "0xEDB650")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A4")]
			public float StartDelay
			{
				[Token(Token = "0x6000941")]
				[Address(RVA = "0xEDB658", Offset = "0xEDB658", VA = "0xEDB658")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A5")]
			public AnimationCurve PresetAnimationCurve
			{
				[Token(Token = "0x6000942")]
				[Address(RVA = "0xEDB660", Offset = "0xEDB660", VA = "0xEDB660")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000943")]
			[Address(RVA = "0xEDB668", Offset = "0xEDB668", VA = "0xEDB668")]
			public DefinedFloat()
			{
			}
		}

		[Token(Token = "0x2000154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8B84", Offset = "0x8A8B84")]
		private sealed class <PredefinedLerpProcess>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaterialFloatLerper <>4__this;

			[Token(Token = "0x40007FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool disableRendererWhenFinnished;

			[Token(Token = "0x40007FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <t>5__2;

			[Token(Token = "0x170001A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000947")]
				[Address(RVA = "0xEDB5D0", Offset = "0xEDB5D0", VA = "0xEDB5D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000949")]
				[Address(RVA = "0xEDB618", Offset = "0xEDB618", VA = "0xEDB618", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000944")]
			[Address(RVA = "0xEDB204", Offset = "0xEDB204", VA = "0xEDB204")]
			[DebuggerHidden]
			public <PredefinedLerpProcess>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000945")]
			[Address(RVA = "0xEDB230", Offset = "0xEDB230", VA = "0xEDB230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000946")]
			[Address(RVA = "0xEDB234", Offset = "0xEDB234", VA = "0xEDB234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000948")]
			[Address(RVA = "0xEDB5D8", Offset = "0xEDB5D8", VA = "0xEDB5D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool playOnEnable;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DefinedFloat definedFloat;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine coroutineProcess;

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xD615FC", Offset = "0xD615FC", VA = "0xD615FC")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xD6191C", Offset = "0xD6191C", VA = "0xD6191C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xD61928", Offset = "0xD61928", VA = "0xD61928")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CE6D8", Offset = "0x8CE6D8")]
		private IEnumerator PredefinedLerpProcess(bool disableRendererWhenFinnished)
		{
			return null;
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xD619B4", Offset = "0xD619B4", VA = "0xD619B4")]
		public void PredefinedLerpFloatValue()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xD61610", Offset = "0xD61610", VA = "0xD61610")]
		public void PredefinedLerpFloatValue(bool disableRendererWhenFinnished)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xD619BC", Offset = "0xD619BC", VA = "0xD619BC")]
		public void SetMaterialFloatValueFrom()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xD61ABC", Offset = "0xD61ABC", VA = "0xD61ABC")]
		public void SetMaterialFloatValueTo()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xD619D8", Offset = "0xD619D8", VA = "0xD619D8")]
		public void SetMaterialFloatValue(float toValue)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xD61AD8", Offset = "0xD61AD8", VA = "0xD61AD8")]
		public void ForceStopLerps()
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xD61AEC", Offset = "0xD61AEC", VA = "0xD61AEC")]
		public MaterialFloatLerper()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class MaterialUnscaledTimeUpdater : MonoBehaviour
	{
		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer objRenderer;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image imageRenderer;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string unscaledTimePropertyName;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isMaterialValid;

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xD61BD8", Offset = "0xD61BD8", VA = "0xD61BD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xD61CE8", Offset = "0xD61CE8", VA = "0xD61CE8")]
		private void Update()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0xD61E1C", Offset = "0xD61E1C", VA = "0xD61E1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xD61F30", Offset = "0xD61F30", VA = "0xD61F30")]
		public MaterialUnscaledTimeUpdater()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class MultipleMaterialFloatLerper : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000157")]
		private class MaterialLerps
		{
			[Token(Token = "0x4000809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Renderer renderer;

			[Token(Token = "0x400080A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int materialIndex;

			[Token(Token = "0x400080B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private bool particleSystemTrail;

			[Token(Token = "0x400080C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private string materialFloatProperty;

			[Token(Token = "0x400080D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool useAnimationCurveFinalValueAsStopValue;

			[Token(Token = "0x170001A8")]
			public Renderer PresetRenderer
			{
				[Token(Token = "0x6000958")]
				[Address(RVA = "0xEDF978", Offset = "0xEDF978", VA = "0xEDF978")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A9")]
			public int MaterialIndex
			{
				[Token(Token = "0x6000959")]
				[Address(RVA = "0xEDF980", Offset = "0xEDF980", VA = "0xEDF980")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170001AA")]
			public bool IsParticleSystemTrailMaterial
			{
				[Token(Token = "0x600095A")]
				[Address(RVA = "0xEDF988", Offset = "0xEDF988", VA = "0xEDF988")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001AB")]
			public string MaterialFloatProperty
			{
				[Token(Token = "0x600095B")]
				[Address(RVA = "0xEDF990", Offset = "0xEDF990", VA = "0xEDF990")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600095C")]
			[Address(RVA = "0xEDF998", Offset = "0xEDF998", VA = "0xEDF998")]
			public MaterialLerps()
			{
			}
		}

		[Token(Token = "0x2000158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8B94", Offset = "0x8A8B94")]
		private sealed class <PredefinedLerpProcess>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400080E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400080F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultipleMaterialFloatLerper <>4__this;

			[Token(Token = "0x4000811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool disableRendererWhenFinnished;

			[Token(Token = "0x4000812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <t>5__2;

			[Token(Token = "0x4000813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private MaterialLerps[] <>7__wrap2;

			[Token(Token = "0x4000814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x4000815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MaterialLerps <mLerps>5__5;

			[Token(Token = "0x170001AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000960")]
				[Address(RVA = "0xEDF928", Offset = "0xEDF928", VA = "0xEDF928", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000962")]
				[Address(RVA = "0xEDF970", Offset = "0xEDF970", VA = "0xEDF970", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600095D")]
			[Address(RVA = "0xEDF504", Offset = "0xEDF504", VA = "0xEDF504")]
			[DebuggerHidden]
			public <PredefinedLerpProcess>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600095E")]
			[Address(RVA = "0xEDF530", Offset = "0xEDF530", VA = "0xEDF530", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600095F")]
			[Address(RVA = "0xEDF534", Offset = "0xEDF534", VA = "0xEDF534", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000961")]
			[Address(RVA = "0xEDF930", Offset = "0xEDF930", VA = "0xEDF930", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2AF0", Offset = "0x8B2AF0")]
		[SerializeField]
		private float fromValue;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float toValue;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float startDelay;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2B7C", Offset = "0x8B2B7C")]
		private bool playOnEnable;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MaterialLerps[] materialLerps;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine coroutineProcess;

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x24898B8", Offset = "0x24898B8", VA = "0x24898B8")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x2489BFC", Offset = "0x2489BFC", VA = "0x2489BFC")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x2489C08", Offset = "0x2489C08", VA = "0x2489C08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CE788", Offset = "0x8CE788")]
		private IEnumerator PredefinedLerpProcess(bool disableRendererWhenFinnished)
		{
			return null;
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x2489C94", Offset = "0x2489C94", VA = "0x2489C94")]
		public void PredefinedLerpFloatValue()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x24898CC", Offset = "0x24898CC", VA = "0x24898CC")]
		public void PredefinedLerpFloatValue(bool disableRendererWhenFinnished)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x2489C9C", Offset = "0x2489C9C", VA = "0x2489C9C")]
		public void SetMaterialFloatValueFrom()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x2489DB8", Offset = "0x2489DB8", VA = "0x2489DB8")]
		public void SetMaterialFloatValueTo()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x2489CA4", Offset = "0x2489CA4", VA = "0x2489CA4")]
		public void SetMaterialFloatValue(float toValue)
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x2489DC0", Offset = "0x2489DC0", VA = "0x2489DC0")]
		public void ForceStopLerps()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x2489DD4", Offset = "0x2489DD4", VA = "0x2489DD4")]
		public MultipleMaterialFloatLerper()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class PlayerLaserVisual : MonoBehaviour
	{
		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem[] drillParticleSystems;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem[] freezeRayParticleSystems;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem[] hitEffectsParticleSystems;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem[] distanceLerpParticleSystems;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color defaultColor;

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x249D614", Offset = "0x249D614", VA = "0x249D614")]
		public void ChangeColor(string newColorHex)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x249D664", Offset = "0x249D664", VA = "0x249D664")]
		public void ChangeColor(Color newColor)
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x249D904", Offset = "0x249D904", VA = "0x249D904")]
		public void SetDefaultColor(Color setNewDefaultColor)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x249D910", Offset = "0x249D910", VA = "0x249D910")]
		public void ResetColor()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x249D91C", Offset = "0x249D91C", VA = "0x249D91C")]
		public PlayerLaserVisual()
		{
		}
	}
}
namespace Game.VFX.Vista
{
	[Token(Token = "0x200015A")]
	public class AuroraController : MonoBehaviour
	{
		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2C58", Offset = "0x8B2C58")]
		[SerializeField]
		private string floatProperty;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 randomValueRange;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2CB4", Offset = "0x8B2CB4")]
		private string opacityProperty;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem.MinMaxCurve opacityFadeCurve;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float opacityFadeCurveDuration;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float randomValue;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Renderer localRenderer;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material localMaterial;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool validOpacityMaterial;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float t;

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xEF68C8", Offset = "0xEF68C8", VA = "0xEF68C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xEF69AC", Offset = "0xEF69AC", VA = "0xEF69AC")]
		private void Update()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xEF6A48", Offset = "0xEF6A48", VA = "0xEF6A48")]
		public AuroraController()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class LightningController : GameMonoBehaviour
	{
		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector2 lightningStrikeTimingRange;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string scrollingProperty;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string opacityProperty;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector2 scrollDurationRange;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector2 opacityDurationRange;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ParticleSystem.MinMaxCurve flashes;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float scrollDuration;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float opacityDuration;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Renderer localRenderer;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Material> validMaterials;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float tTiming;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float tTimingDuration;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float tFlash;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool initDone;

		[Token(Token = "0x170001AE")]
		protected override bool EnableOnGameStart
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0xD59C64", Offset = "0xD59C64", VA = "0xD59C64", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600096C")]
			[Address(RVA = "0xD59C6C", Offset = "0xD59C6C", VA = "0xD59C6C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		protected override bool EnableOnFixedUpdate
		{
			[Token(Token = "0x600096D")]
			[Address(RVA = "0xD59C70", Offset = "0xD59C70", VA = "0xD59C70", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600096E")]
			[Address(RVA = "0xD59C78", Offset = "0xD59C78", VA = "0xD59C78", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xD59C7C", Offset = "0xD59C7C", VA = "0xD59C7C", Slot = "30")]
		protected override void OnGameStart()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xD59CE0", Offset = "0xD59CE0", VA = "0xD59CE0")]
		private void FinalizeSetup()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xD59E88", Offset = "0xD59E88", VA = "0xD59E88", Slot = "34")]
		protected override void OnFixedUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xD5A06C", Offset = "0xD5A06C", VA = "0xD5A06C")]
		private void Flash(float deltaTime)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xD59E3C", Offset = "0xD59E3C", VA = "0xD59E3C")]
		private float SetNewLightningTiming()
		{
			return default(float);
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xD59E48", Offset = "0xD59E48", VA = "0xD59E48")]
		private void SetNewFlashSetting()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xD5A208", Offset = "0xD5A208", VA = "0xD5A208")]
		public LightningController()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class MeteorRainController : MonoBehaviour
	{
		[Token(Token = "0x200015D")]
		private enum IntensityLevel
		{
			[Token(Token = "0x4000838")]
			Low,
			[Token(Token = "0x4000839")]
			Medium,
			[Token(Token = "0x400083A")]
			High,
			[Token(Token = "0x400083B")]
			EXTREME
		}

		[Serializable]
		[Token(Token = "0x200015E")]
		public struct IntensityLevels
		{
			[Token(Token = "0x400083C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string intensityLevel;

			[Token(Token = "0x400083D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 duration;

			[Token(Token = "0x400083E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 startDelay;

			[Token(Token = "0x400083F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 rateOverTime;

			[Token(Token = "0x4000840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector2 startSpeed;

			[Token(Token = "0x4000841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2DC0", Offset = "0x8B2DC0")]
			public int cycleCount;

			[Token(Token = "0x4000842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float repeatInterval;
		}

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IntensityLevel intensityLevel;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IntensityLevels[] intensityLevels;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool burstMode;

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x2486BE4", Offset = "0x2486BE4", VA = "0x2486BE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x2486FF8", Offset = "0x2486FF8", VA = "0x2486FF8")]
		public MeteorRainController()
		{
		}
	}
}
namespace Game.Ui
{
	[Token(Token = "0x200015F")]
	public class ArchiveBase : UiButton
	{
		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2E08", Offset = "0x8B2E08")]
		private Vector2 scaleRange;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private AnimationCurve alphaCurve;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2E64", Offset = "0x8B2E64")]
		private UnityEvent onSelectionEnabled;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private UnityEvent onSelectionDisabled;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected bool isSelectionEnabled;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		protected bool isArchiveSetUp;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float[] defaultAlpha;

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xEEDA00", Offset = "0xEEDA00", VA = "0xEEDA00", Slot = "69")]
		public virtual void GetCurrentProgress(out int currentProgress, out int maxProgress)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xEEDA0C", Offset = "0xEEDA0C", VA = "0xEEDA0C", Slot = "70")]
		public virtual void Setup(int id)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xEEDA2C", Offset = "0xEEDA2C", VA = "0xEEDA2C", Slot = "71")]
		public virtual void UpdateSelection(float amount, bool enabled)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xEEDBB8", Offset = "0xEEDBB8", VA = "0xEEDBB8", Slot = "72")]
		public virtual void UpdateArchiveNode()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xEEDBBC", Offset = "0xEEDBBC", VA = "0xEEDBBC", Slot = "73")]
		public virtual void ResetArchiveStat()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xEEDBC0", Offset = "0xEEDBC0", VA = "0xEEDBC0")]
		public ArchiveBase()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class ArchiveIndex : ArchiveBase
	{
		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2EC0", Offset = "0x8B2EC0")]
		private TextMeshProUGUI nameText;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private TextMeshProUGUI idText;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2F1C", Offset = "0x8B2F1C")]
		private Color selectionColor;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2F68", Offset = "0x8B2F68")]
		private LocalizationKey dataIndexName;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private LocalizationKey dataIndex;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2FC4", Offset = "0x8B2FC4")]
		private LocalizationKey selectKey;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private TextMeshProUGUI selectButtonTextMesh;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private GameObject selectHoldButton;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3030", Offset = "0x8B3030")]
		private TextMeshProUGUI menuNameText;

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xEF03B8", Offset = "0xEF03B8", VA = "0xEF03B8", Slot = "70")]
		public override void Setup(int id)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xEF042C", Offset = "0xEF042C", VA = "0xEF042C", Slot = "71")]
		public override void UpdateSelection(float amount, bool enabled)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xEF0488", Offset = "0xEF0488", VA = "0xEF0488")]
		public void SetDefaultSelectButton()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xEF0584", Offset = "0xEF0584", VA = "0xEF0584", Slot = "62")]
		protected override void OnButtonClick()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xEF05CC", Offset = "0xEF05CC", VA = "0xEF05CC")]
		public void SetHeaderEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xEF063C", Offset = "0xEF063C", VA = "0xEF063C")]
		public ArchiveIndex()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class ArchivePassiveAbility : GameMonoBehaviour
	{
		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B307C", Offset = "0x8B307C")]
		private UiButton button;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image abilityIcon;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image shadow;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ArchivePassiveAbilityDisplayer archivePassiveAbilityDisplayer;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8B30F8", Offset = "0x8B30F8")]
		[SerializeField]
		private SectorTag abilityTag;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3144", Offset = "0x8B3144")]
		private Sprite defaultButtonSprite;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Sprite defectButtonSprite;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Sprite defaultShadowSprite;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Sprite defectShadowSprite;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color defaultColor;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Color defectColor;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Vector3 unknownButtonOffset;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ShipAbilityPassive ability;

		[Token(Token = "0x170001B0")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0xEF0B24", Offset = "0xEF0B24", VA = "0xEF0B24", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xEEE02C", Offset = "0xEEE02C", VA = "0xEEE02C")]
		public bool IsCollected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xEF0B2C", Offset = "0xEF0B2C", VA = "0xEF0B2C", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xEF0CAC", Offset = "0xEF0CAC", VA = "0xEF0CAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xEF0B44", Offset = "0xEF0B44", VA = "0xEF0B44")]
		private void SetupAbility()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xEF0D38", Offset = "0xEF0D38", VA = "0xEF0D38")]
		public void ViewPassiveAbility()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xEF0E14", Offset = "0xEF0E14", VA = "0xEF0E14")]
		public void HidePassiveAbility()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xEEE40C", Offset = "0xEEE40C", VA = "0xEEE40C")]
		public void UpdateAbility()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xEF0EC8", Offset = "0xEF0EC8", VA = "0xEF0EC8")]
		public ArchivePassiveAbility()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class ArchivePassiveAbilityDisplayer : MonoBehaviour
	{
		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PassiveAbilityDetailsDisplay passiveAbilityDetailsDisplay;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject unknownPassiveAbility;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI headerTextMesh;

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xEF0D58", Offset = "0xEF0D58", VA = "0xEF0D58")]
		public void ShowPassiveAbility(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xEF0E2C", Offset = "0xEF0E2C", VA = "0xEF0E2C")]
		public void HidePassiveAbility()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xEEE200", Offset = "0xEEE200", VA = "0xEEE200")]
		public void ShowUnknownPassiveAbility()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xEF0F70", Offset = "0xEF0F70", VA = "0xEF0F70")]
		public ArchivePassiveAbilityDisplayer()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class OffHandMenu : MonoBehaviour
	{
		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform gameMenuParent;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform devMenuParent;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform creditsMenuParent;

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x2490FD0", Offset = "0x2490FD0", VA = "0x2490FD0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x249122C", Offset = "0x249122C", VA = "0x249122C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x2491354", Offset = "0x2491354", VA = "0x2491354")]
		public void SetDevMenuActive(bool active)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x24913D8", Offset = "0x24913D8", VA = "0x24913D8")]
		private void OnMenuVisibilityChanged(SectorTag menuTag, bool visible)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x24914F4", Offset = "0x24914F4", VA = "0x24914F4")]
		public OffHandMenu()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class SeedDisplayer : MonoBehaviour
	{
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI runSeedText;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI sectorSeedText;

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xE14DA8", Offset = "0xE14DA8", VA = "0xE14DA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0xE150B4", Offset = "0xE150B4", VA = "0xE150B4")]
		public SeedDisplayer()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public interface IUiEnablable
	{
		[Token(Token = "0x170001B1")]
		bool IsEnabled
		{
			[Token(Token = "0x6000998")]
			get;
			[Token(Token = "0x6000999")]
			set;
		}
	}
	[Token(Token = "0x2000166")]
	public interface IUiSelector
	{
		[Token(Token = "0x600099A")]
		void SetupSelection();

		[Token(Token = "0x600099B")]
		void UpdateSelection();
	}
	[Token(Token = "0x2000167")]
	public class UiButton : GameMonoBehaviour, IUiEnablable, IPointerClickHandler, IEventSystemHandler, IPointerUpHandler, IPointerDownHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnSetupComplete;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent<string> OnDown;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent<string> OnUp;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent<string> OnClick;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent<string> OnDeselect;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent<string> OnSelect;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent<string> OnClickSelected;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent<string> OnClickDeselected;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image buttonImage;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool buttonImageAutoAdjustPixelsPerUnit;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Sprite downSprite;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Color downColor;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Image[] colorImages;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float animationScale;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private bool startEnabled;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[SerializeField]
		private bool startSelected;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		[SerializeField]
		private bool startHighlighted;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
		[SerializeField]
		private bool selectOnClick;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool deselectOnEnable;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool allowClickWhileSelected;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool allowClickWhileLoading;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3320", Offset = "0x8B3320")]
		[SerializeField]
		protected bool overrideDisableColor;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		protected bool disableColorUseDefault;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected Color disableColor;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B338C", Offset = "0x8B338C")]
		protected bool playHoverSfx;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[SerializeField]
		protected bool playDownSfx;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		[SerializeField]
		protected bool playUpSfx;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		protected SfxTrigger overrideHoverSfx;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		protected SfxTrigger overrideDownSfx;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		protected SfxTrigger overrideUpSfx;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Sprite defaultSprite;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private UiShadow shadow;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private UiButtonSelectGroup selectGroup;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected bool isSetup;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		protected bool isHovered;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		protected bool isDown;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
		protected bool isEnabled;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected bool isSelected;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		protected bool isHighlighted;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector2 startSize;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float startPixelsPerUnit;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float timer;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float highlightTimer;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float depth;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float size;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float currentSize;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Color defaultColor;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Color tintColor;

		[Token(Token = "0x4000899")]
		public const float stateChangeSpeed = 5f;

		[Token(Token = "0x400089A")]
		public const float stateChangeTime = 0.2f;

		[Token(Token = "0x400089B")]
		private const float hoverSize = 20f;

		[Token(Token = "0x400089C")]
		private const float depthDefault = 0f;

		[Token(Token = "0x400089D")]
		private const float depthHover = 7.5f;

		[Token(Token = "0x400089E")]
		private const float depthDown = 15f;

		[Token(Token = "0x400089F")]
		private const float depthSelected = -15f;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly Color colorDisabled;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly Color colorSelected;

		[Token(Token = "0x40008A2")]
		private const float highlightSize = 30f;

		[Token(Token = "0x40008A3")]
		private const float highlightDepthIncrease = -5f;

		[Token(Token = "0x40008A4")]
		private const float highlightSpeed = 2f;

		[Token(Token = "0x40008A5")]
		private const float dehighlightSpeed = 5f;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly AnimationCurve highlightCurve;

		[Token(Token = "0x170001B2")]
		public bool IsEnabled
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0x10B3228", Offset = "0x10B3228", VA = "0x10B3228", Slot = "38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x10B32AC", Offset = "0x10B32AC", VA = "0x10B32AC", Slot = "39")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public bool IsSelected
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x10B3320", Offset = "0x10B3320", VA = "0x10B3320")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600099F")]
			[Address(RVA = "0x10B3328", Offset = "0x10B3328", VA = "0x10B3328")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public bool IsHighlighted
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x10B339C", Offset = "0x10B339C", VA = "0x10B339C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009A1")]
			[Address(RVA = "0x10B33A4", Offset = "0x10B33A4", VA = "0x10B33A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public Color DefaultColor
		{
			[Token(Token = "0x60009A2")]
			[Address(RVA = "0x10B33B0", Offset = "0x10B33B0", VA = "0x10B33B0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x10B33C4", Offset = "0x10B33C4", VA = "0x10B33C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public Color TintColor
		{
			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x10B3470", Offset = "0x10B3470", VA = "0x10B3470")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x10B3484", Offset = "0x10B3484", VA = "0x10B3484")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public Sprite DefaultSprite
		{
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x10B3530", Offset = "0x10B3530", VA = "0x10B3530")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x10B3538", Offset = "0x10B3538", VA = "0x10B3538")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public Sprite DownSprite
		{
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0x10B3600", Offset = "0x10B3600", VA = "0x10B3600")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x10B3608", Offset = "0x10B3608", VA = "0x10B3608")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public bool IsEnabledAndNotSelected
		{
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x10B36D0", Offset = "0x10B36D0", VA = "0x10B36D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BA")]
		public bool IsClickable
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x10B3708", Offset = "0x10B3708", VA = "0x10B3708")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BB")]
		public bool CanAnimateHighlight
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x10B3750", Offset = "0x10B3750", VA = "0x10B3750")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BC")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x10B3798", Offset = "0x10B3798", VA = "0x10B3798", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x10B37A0", Offset = "0x10B37A0", VA = "0x10B37A0", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x10B37C4", Offset = "0x10B37C4", VA = "0x10B37C4", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x10B3948", Offset = "0x10B3948", VA = "0x10B3948", Slot = "45")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x10B3E00", Offset = "0x10B3E00", VA = "0x10B3E00", Slot = "46")]
		public virtual void Setup()
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x10B45F4", Offset = "0x10B45F4", VA = "0x10B45F4", Slot = "47")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x10B4620", Offset = "0x10B4620", VA = "0x10B4620", Slot = "48")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x10B4624", Offset = "0x10B4624", VA = "0x10B4624", Slot = "49")]
		public virtual void Dissable()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x10B4688", Offset = "0x10B4688", VA = "0x10B4688", Slot = "50")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x10B46E4", Offset = "0x10B46E4", VA = "0x10B46E4", Slot = "51")]
		public virtual void Deselect()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x10B4798", Offset = "0x10B4798", VA = "0x10B4798", Slot = "52")]
		public virtual void Select()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x10B4A2C", Offset = "0x10B4A2C", VA = "0x10B4A2C", Slot = "53")]
		public virtual void ResetButton(bool instant)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x10B4C00", Offset = "0x10B4C00", VA = "0x10B4C00", Slot = "54")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x10B4C10", Offset = "0x10B4C10", VA = "0x10B4C10", Slot = "55")]
		public virtual void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x10B4DE8", Offset = "0x10B4DE8", VA = "0x10B4DE8", Slot = "56")]
		public virtual void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x10B4FA8", Offset = "0x10B4FA8", VA = "0x10B4FA8", Slot = "57")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x10B50F4", Offset = "0x10B50F4", VA = "0x10B50F4", Slot = "58")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x10B5154", Offset = "0x10B5154", VA = "0x10B5154", Slot = "59")]
		public virtual void TryTriggerClick()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x10B5264", Offset = "0x10B5264", VA = "0x10B5264")]
		public void TryTriggerClickForcedConditionCheck()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x10B51AC", Offset = "0x10B51AC", VA = "0x10B51AC")]
		private void TriggerClickInternal()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x10B5430", Offset = "0x10B5430", VA = "0x10B5430", Slot = "60")]
		protected virtual void OnButtonDown()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x10B5434", Offset = "0x10B5434", VA = "0x10B5434", Slot = "61")]
		protected virtual void OnButtonUp()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x10B5438", Offset = "0x10B5438", VA = "0x10B5438", Slot = "62")]
		protected virtual void OnButtonClick()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x10B543C", Offset = "0x10B543C", VA = "0x10B543C", Slot = "63")]
		protected virtual void OnButtonEnter()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x10B5440", Offset = "0x10B5440", VA = "0x10B5440", Slot = "64")]
		protected virtual void OnButtonExit()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x10B5444", Offset = "0x10B5444", VA = "0x10B5444", Slot = "65")]
		protected virtual void UpdateSprite()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x10B5504", Offset = "0x10B5504", VA = "0x10B5504", Slot = "66")]
		protected virtual void UpdateColor()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x10B57C0", Offset = "0x10B57C0", VA = "0x10B57C0")]
		private void UpdateDownImages(Color color)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x10B5884", Offset = "0x10B5884", VA = "0x10B5884", Slot = "67")]
		protected virtual void UpdateDepth()
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x10B58C8", Offset = "0x10B58C8", VA = "0x10B58C8")]
		public void UpdateVisuals()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x10B3CB4", Offset = "0x10B3CB4", VA = "0x10B3CB4")]
		protected void SetButtonImageSize(Vector2 size)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x10B5AA8", Offset = "0x10B5AA8", VA = "0x10B5AA8", Slot = "68")]
		protected virtual void SetButtonImagePixelsPerUnit(float multiplier, Vector2 sizeDiff, bool sliceHorizontal, bool sliceVertical)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x10B58D8", Offset = "0x10B58D8", VA = "0x10B58D8")]
		protected static bool IsImageSliced(Image image, out bool horizontal, out bool vertical)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x10B59D8", Offset = "0x10B59D8", VA = "0x10B59D8")]
		protected static float CalculateImageSliceMultiplier(Image image, Vector2 sizeDiff, bool sliceHorizontal, bool sliceVertical)
		{
			return default(float);
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x10B5350", Offset = "0x10B5350", VA = "0x10B5350")]
		protected static void UpdateButtonSelection(GameObject button)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x10B5AD0", Offset = "0x10B5AD0", VA = "0x10B5AD0")]
		public UiButton()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class UiButtonFlipPositionGroup : MonoBehaviour
	{
		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool flipAxisX;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool flipAxisY;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool flipAxisZ;

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x10B5F44", Offset = "0x10B5F44", VA = "0x10B5F44")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x10B5F70", Offset = "0x10B5F70", VA = "0x10B5F70")]
		private void FlipTransform(Transform obj)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x10B6118", Offset = "0x10B6118", VA = "0x10B6118")]
		public UiButtonFlipPositionGroup()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class UiButtonSelectGroup : MonoBehaviour
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool deselectButtonsOnEnable;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<UiButton> buttons;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UiButtonSelectGroup> selectGroups;

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x10B6F10", Offset = "0x10B6F10", VA = "0x10B6F10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x10B4174", Offset = "0x10B4174", VA = "0x10B4174")]
		public void AddButton(UiButton button)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x10B38E4", Offset = "0x10B38E4", VA = "0x10B38E4")]
		public void RemoveButton(UiButton button)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x10B6F24", Offset = "0x10B6F24", VA = "0x10B6F24")]
		public void DeselectButtons()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x10B48B4", Offset = "0x10B48B4", VA = "0x10B48B4")]
		public void DeselectButtons(UiButton excludeButton)
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x10B6F2C", Offset = "0x10B6F2C", VA = "0x10B6F2C")]
		public static void DeselectButtons(GameObject root)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x10B6F90", Offset = "0x10B6F90", VA = "0x10B6F90")]
		public static void DeselectButtons(GameObject root, UiButton excludeButton)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x10B7174", Offset = "0x10B7174", VA = "0x10B7174")]
		public UiButtonSelectGroup()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class UiEnableFlag : MonoBehaviour, IUiEnablable
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent<bool> onEnabledChanged;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onEnabled;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onDisabled;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool isEnabled;

		[Token(Token = "0x170001BD")]
		public bool IsEnabled
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x10B73B8", Offset = "0x10B73B8", VA = "0x10B73B8", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0x10B73C0", Offset = "0x10B73C0", VA = "0x10B73C0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action<bool> OnEnabledChanged
		{
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x10B74B0", Offset = "0x10B74B0", VA = "0x10B74B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE838", Offset = "0x8CE838")]
			add
			{
			}
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x10B7550", Offset = "0x10B7550", VA = "0x10B7550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE848", Offset = "0x8CE848")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action OnEnabled
		{
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x10B75F0", Offset = "0x10B75F0", VA = "0x10B75F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE858", Offset = "0x8CE858")]
			add
			{
			}
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x10B7690", Offset = "0x10B7690", VA = "0x10B7690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE868", Offset = "0x8CE868")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action OnDisabled
		{
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0x10B7730", Offset = "0x10B7730", VA = "0x10B7730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE878", Offset = "0x8CE878")]
			add
			{
			}
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x10B77D0", Offset = "0x10B77D0", VA = "0x10B77D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE888", Offset = "0x8CE888")]
			remove
			{
			}
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x10B7870", Offset = "0x10B7870", VA = "0x10B7870")]
		public UiEnableFlag()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class UiShadow : MonoBehaviour
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<TextMeshProUGUI> texts;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Image> images;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<TextMeshProUGUI> shadowTexts;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Image> shadowImages;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UiShadow> shadows;

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x10B41D8", Offset = "0x10B41D8", VA = "0x10B41D8")]
		public void UpdateShadow()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x10B7878", Offset = "0x10B7878", VA = "0x10B7878")]
		public void SetText(string to)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x10B7A8C", Offset = "0x10B7A8C", VA = "0x10B7A8C")]
		public void SetText(LocalizationKey to)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x10B7B28", Offset = "0x10B7B28", VA = "0x10B7B28")]
		public void SetTexts(LocalizationKey[] to)
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x10B7930", Offset = "0x10B7930", VA = "0x10B7930")]
		public void SetTexts(string[] to)
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x10B7CA0", Offset = "0x10B7CA0", VA = "0x10B7CA0")]
		public static void UpdateShadows(GameObject root)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x10B7E7C", Offset = "0x10B7E7C", VA = "0x10B7E7C")]
		public void SetColor(Color newColor)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x10B8088", Offset = "0x10B8088", VA = "0x10B8088")]
		public void SetIcons(Sprite[] sprites)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x10B83AC", Offset = "0x10B83AC", VA = "0x10B83AC")]
		public void SetIcon(Sprite sprite)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x10B8464", Offset = "0x10B8464", VA = "0x10B8464")]
		public UiShadow()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class UiToggleSprite : MonoBehaviour
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image image;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite toggleSprite;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color toggleColor;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Sprite currentSprite;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color currentColor;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isToggled;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UiShadow shadow;

		[Token(Token = "0x170001BE")]
		public bool IsToggled
		{
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x10B84F8", Offset = "0x10B84F8", VA = "0x10B84F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x10B8500", Offset = "0x10B8500", VA = "0x10B8500")]
			set
			{
			}
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x10B852C", Offset = "0x10B852C", VA = "0x10B852C")]
		public void Toggle()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x10B8544", Offset = "0x10B8544", VA = "0x10B8544")]
		public void Set(bool toggled)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x10B8798", Offset = "0x10B8798", VA = "0x10B8798")]
		public UiToggleSprite()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class UiToggleText : MonoBehaviour
	{
		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text text;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizationKey startKey;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string startText;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LocalizationKey toggleKey;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string toggleText;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isToggled;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isSetup;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UiShadow shadow;

		[Token(Token = "0x170001BF")]
		public bool IsToggled
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x10B87DC", Offset = "0x10B87DC", VA = "0x10B87DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x10B87E4", Offset = "0x10B87E4", VA = "0x10B87E4")]
			set
			{
			}
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x10B8810", Offset = "0x10B8810", VA = "0x10B8810")]
		public void Toggle()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x10B8828", Offset = "0x10B8828", VA = "0x10B8828")]
		public void Set(bool toggled)
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x10B8A10", Offset = "0x10B8A10", VA = "0x10B8A10")]
		public UiToggleText()
		{
		}
	}
}
namespace Game.UI
{
	[Token(Token = "0x200016E")]
	public class ArchiveComponents : ArchiveBase
	{
		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3558", Offset = "0x8B3558")]
		private ArchivePassiveAbilityDisplayer passiveAbilityDisplayer;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B35A4", Offset = "0x8B35A4")]
		[SerializeField]
		private TextMeshProUGUI headerTextMesh;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private LocalizationKey headerKey;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private List<ArchivePassiveAbility> childAbilities;

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xEEDD4C", Offset = "0xEEDD4C", VA = "0xEEDD4C")]
		private new void OnDisable()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xEEDDB4", Offset = "0xEEDDB4", VA = "0xEEDDB4", Slot = "69")]
		public override void GetCurrentProgress(out int currentProgress, out int maxProgress)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xEEE118", Offset = "0xEEE118", VA = "0xEEE118", Slot = "71")]
		public override void UpdateSelection(float amount, bool enabled)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xEEE250", Offset = "0xEEE250", VA = "0xEEE250", Slot = "73")]
		public override void ResetArchiveStat()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xEEE2E8", Offset = "0xEEE2E8", VA = "0xEEE2E8", Slot = "72")]
		public override void UpdateArchiveNode()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xEEDF00", Offset = "0xEEDF00", VA = "0xEEDF00")]
		private List<ArchivePassiveAbility> GetPassiveAbilityChildren()
		{
			return null;
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xEEE794", Offset = "0xEEE794", VA = "0xEEE794")]
		public ArchiveComponents()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class ArchiveData : ArchiveBase
	{
		[Serializable]
		[Token(Token = "0x2000170")]
		public struct LayoutText
		{
			[Token(Token = "0x4000900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextMeshProUGUI text;

			[Token(Token = "0x4000901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool rebuildLayout;
		}

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3600", Offset = "0x8B3600")]
		[SerializeField]
		private ArchiveDataStatRanks statRanks;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B364C", Offset = "0x8B364C")]
		[SerializeField]
		private bool displayShipStats;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private SpaceShipData spaceShipData;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private StatusBarObject healthBarObject;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private StatusBarObject shieldBarObject;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private StatusBarObject speedBarObject;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private TextMeshProUGUI healthText;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private TextMeshProUGUI shieldText;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private TextMeshProUGUI speedText;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private bool forceZeroSpeed;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private GameObject statsParent;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private GameObject detailsParent;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3738", Offset = "0x8B3738")]
		private bool displayComponentDetails;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private ComponentData componentData;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private Image componentImage;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private TextLocalizer componentNameTextLocalizer;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B37B4", Offset = "0x8B37B4")]
		private TextMeshProUGUI nameText;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private TextMeshProUGUI weightText;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private TextMeshProUGUI componentDropText;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private TextMeshProUGUI moreNeededText;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private GameObject infoCollection;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3830", Offset = "0x8B3830")]
		[SerializeField]
		private RotateTransform meshRotationTransform;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private RectTransform meshTransform;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private Vector3 meshUnselectScale;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[SerializeField]
		private Vector3 meshSelectScale;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B38AC", Offset = "0x8B38AC")]
		[SerializeField]
		private GameObject secondLevelDetailsObject;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private GameObject thirdLevelDetailsObject;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3908", Offset = "0x8B3908")]
		[SerializeField]
		private UiButtonHold secondLevelPurchaseButton;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private TextMeshProUGUI secondLevelPurchaseText;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		private UiButtonHold thirdLevelPurchaseButton;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		private TextMeshProUGUI thirdLevelPurchaseText;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		private LocalizationKey purchaseKey;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private float purchaseMultiplier;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B39A4", Offset = "0x8B39A4")]
		private GameObject unknownLevelMeshObject;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private GameObject firstLevelMeshObject;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private GameObject secondLevelMeshObject;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		private GameObject thirdLevelMeshObject;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3A20", Offset = "0x8B3A20")]
		private string weightValue;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		private string componentDropValue;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3A7C", Offset = "0x8B3A7C")]
		[SerializeField]
		private Image progressionBarLevel2;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[SerializeField]
		private Image progressionBarLevel3;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[SerializeField]
		private UiToggleSprite progressionToggleOne;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[SerializeField]
		private UiToggleSprite progressionToggleTwo;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[SerializeField]
		private GameObject progressionObject;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[SerializeField]
		private GameObject progressionCompleteObject;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3B18", Offset = "0x8B3B18")]
		private LocalizationKey nameKey;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private LocalizationKey missingNameKey;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private LocalizationKey weightKey;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[SerializeField]
		private LocalizationKey componentDropKey;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		[SerializeField]
		private LocalizationKey moreNeededKey;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3BA4", Offset = "0x8B3BA4")]
		private LayoutText[] layoutUpdateTexts;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private bool childMaterialsInitialized;

		[Token(Token = "0x170001C0")]
		private StatsEnum Stat
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0xEEE798", Offset = "0xEEE798", VA = "0xEEE798")]
			get
			{
				return default(StatsEnum);
			}
		}

		[Token(Token = "0x170001C1")]
		private int ScansRank1
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0xEEE7B4", Offset = "0xEEE7B4", VA = "0xEEE7B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C2")]
		private int ScansRank2
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0xEEE7F0", Offset = "0xEEE7F0", VA = "0xEEE7F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C3")]
		private int ScansRank3
		{
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0xEEE830", Offset = "0xEEE830", VA = "0xEEE830")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C4")]
		private int TotalScans
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0xEEE870", Offset = "0xEEE870", VA = "0xEEE870")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xEEE874", Offset = "0xEEE874", VA = "0xEEE874", Slot = "69")]
		public override void GetCurrentProgress(out int currentProgress, out int maxProgress)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xEEEA0C", Offset = "0xEEEA0C", VA = "0xEEEA0C", Slot = "47")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xEEEA54", Offset = "0xEEEA54", VA = "0xEEEA54")]
		private void SetDefaultLocked()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xEEF4B4", Offset = "0xEEF4B4", VA = "0xEEF4B4", Slot = "71")]
		public override void UpdateSelection(float amount, bool enabled)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xEEF7F8", Offset = "0xEEF7F8", VA = "0xEEF7F8", Slot = "70")]
		public override void Setup(int id)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xEEF960", Offset = "0xEEF960", VA = "0xEEF960", Slot = "72")]
		public override void UpdateArchiveNode()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xEEF214", Offset = "0xEEF214", VA = "0xEEF214")]
		private void UpdateProgressionBar(bool defaultLocked)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xEEEDD4", Offset = "0xEEEDD4", VA = "0xEEEDD4")]
		private void UpdateLevelObjects(bool defaultLocked)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xEEEB74", Offset = "0xEEEB74", VA = "0xEEEB74")]
		private void UpdateMeshObject(bool defaultLocked)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xEEFD30", Offset = "0xEEFD30", VA = "0xEEFD30")]
		private void UpdateLayout()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xEEFDFC", Offset = "0xEEFDFC", VA = "0xEEFDFC")]
		public void UnlockNextLevel()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xEF0040", Offset = "0xEF0040", VA = "0xEF0040", Slot = "73")]
		public override void ResetArchiveStat()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xEF00EC", Offset = "0xEF00EC", VA = "0xEF00EC")]
		public ArchiveData()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class ArchiveIndexRestricted : ArchiveIndex
	{
		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3BF0", Offset = "0x8B3BF0")]
		[SerializeField]
		private int clicksBeforeSelect;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3C3C", Offset = "0x8B3C3C")]
		[SerializeField]
		private UnityEvent onSelectionFailedUnlock;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3C88", Offset = "0x8B3C88")]
		[SerializeField]
		private SfxTrigger selectionFailedSfx;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private SfxTrigger selectionSuccessSfx;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3CE4", Offset = "0x8B3CE4")]
		private GameObject lockedPrefab;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private GameObject unlockedPrefab;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private int currentClicks;

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xEF0698", Offset = "0xEF0698", VA = "0xEF0698", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xEF06F8", Offset = "0xEF06F8", VA = "0xEF06F8", Slot = "47")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xEF0868", Offset = "0xEF0868", VA = "0xEF0868", Slot = "59")]
		public override void TryTriggerClick()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xEF0A24", Offset = "0xEF0A24", VA = "0xEF0A24")]
		private void UnlockRestrictedArea()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xEF0ACC", Offset = "0xEF0ACC", VA = "0xEF0ACC", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xEF0B18", Offset = "0xEF0B18", VA = "0xEF0B18")]
		public ArchiveIndexRestricted()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public class ArchiveRestricted : ArchiveBase
	{
		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3D40", Offset = "0x8B3D40")]
		private LocalizationKey lockedEntryNameKey;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private GameObject lockedEntryParent;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3D9C", Offset = "0x8B3D9C")]
		private GameObject entryParent;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private LocalizationKey entryNameKey;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private TextMeshProUGUI entryNameText;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private LocalizationKey entryInfoKey;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private TextMeshProUGUI entryInfoText;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private bool isLogicBombEntry;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3E38", Offset = "0x8B3E38")]
		[SerializeField]
		private GameObject selectButton;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private TextMeshProUGUI selectButtonTextMesh;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private UiButton holdSelectButton;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private TextMeshProUGUI holdSelectButtonTextMesh;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private LocalizationKey priorEntryNeededKey;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private LocalizationKey unlockKey;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private LocalizationKey listenKey;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private SfxTrigger listenSfx;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private int id;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private bool isUnlocked;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x235")]
		private bool isReset;

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xEF0F78", Offset = "0xEF0F78", VA = "0xEF0F78", Slot = "69")]
		public override void GetCurrentProgress(out int currentProgress, out int maxProgress)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xEF0F8C", Offset = "0xEF0F8C", VA = "0xEF0F8C", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xEF0FD4", Offset = "0xEF0FD4", VA = "0xEF0FD4", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xEF100C", Offset = "0xEF100C", VA = "0xEF100C", Slot = "48")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xEF1064", Offset = "0xEF1064", VA = "0xEF1064", Slot = "70")]
		public override void Setup(int id)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xEF11F0", Offset = "0xEF11F0", VA = "0xEF11F0", Slot = "71")]
		public override void UpdateSelection(float amount, bool enabled)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xEF168C", Offset = "0xEF168C", VA = "0xEF168C")]
		private bool TryUnlockEntry()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xEF1354", Offset = "0xEF1354", VA = "0xEF1354")]
		private void UpdateButton()
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xEF1870", Offset = "0xEF1870", VA = "0xEF1870", Slot = "62")]
		protected override void OnButtonClick()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xEF1A0C", Offset = "0xEF1A0C", VA = "0xEF1A0C", Slot = "73")]
		public override void ResetArchiveStat()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xEF1A40", Offset = "0xEF1A40", VA = "0xEF1A40")]
		public ArchiveRestricted()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class ComponentData : MonoBehaviour
	{
		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetReferenceGameObject componentPrefab;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LocalizationKey nameKey;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Sprite componentImage;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onDataLoaded;

		[Token(Token = "0x170001C5")]
		public LocalizationKey NameKey
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0xFE932C", Offset = "0xFE932C", VA = "0xFE932C")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x170001C6")]
		public Sprite ComponentImage
		{
			[Token(Token = "0x6000A27")]
			[Address(RVA = "0xFE9338", Offset = "0xFE9338", VA = "0xFE9338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xFE9340", Offset = "0xFE9340", VA = "0xFE9340")]
		public ComponentData()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class ComponentLevelDisplay : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000175")]
		public struct LevelDisplay
		{
			[Token(Token = "0x4000923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Sprite levelImage;

			[Token(Token = "0x4000924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Sprite levelMask;
		}

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image levelImage;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image levelMask;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LevelDisplay[] levelDisplays;

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xFE9348", Offset = "0xFE9348", VA = "0xFE9348")]
		public void SetComponentLevel(ShipAbilityPassive ability, int levelOverride)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xFE94D8", Offset = "0xFE94D8", VA = "0xFE94D8")]
		private bool TryGetLevelSprite(ShipAbilityPassive ability, int levelOverride, out LevelDisplay levelDisplay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xFE9640", Offset = "0xFE9640", VA = "0xFE9640")]
		public ComponentLevelDisplay()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class DailyJourneyConditionItem : MonoBehaviour
	{
		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ShipManagementMenuPassiveAbility passiveAbilityIcon;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text nameText;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text descriptionText;

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xC4830C", Offset = "0xC4830C", VA = "0xC4830C")]
		public void Display(DailyJourneyInfo.Modifier modifier)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xC48628", Offset = "0xC48628", VA = "0xC48628")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xC48650", Offset = "0xC48650", VA = "0xC48650")]
		public DailyJourneyConditionItem()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class DailyJourneyHelp : GameMonoBehaviour
	{
		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3F54", Offset = "0x8B3F54")]
		[SerializeField]
		private TextLocalizer completedJourneyFastText;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextLocalizer completedJourneyFasterText;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3FB0", Offset = "0x8B3FB0")]
		[SerializeField]
		private TextLocalizer sectorsVisitedScore;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextLocalizer componentsGainedScore;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextLocalizer componentsUpgradedScore;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextLocalizer creaturesScannedScore;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextLocalizer amountOfScrapScore;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextLocalizer eliteBattlesWonScore;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextLocalizer clearScoreScore;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TMP_Text defeatedChimeraScore;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TMP_Text defeatedGuardianScore;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TMP_Text completedJourneyScore;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TMP_Text completedJourneyFastScore;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TMP_Text completedJourneyFasterScore;

		[Token(Token = "0x170001C7")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0xC48658", Offset = "0xC48658", VA = "0xC48658", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xC48660", Offset = "0xC48660", VA = "0xC48660", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xC49050", Offset = "0xC49050", VA = "0xC49050")]
		public DailyJourneyHelp()
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class DailyJourneyLeaderboard : MonoBehaviour
	{
		[Token(Token = "0x2000179")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8BA4", Offset = "0x8A8BA4")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x400093C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string loggedInUserId;

			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0xC6D264", Offset = "0xC6D264", VA = "0xC6D264")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0xC6D26C", Offset = "0xC6D26C", VA = "0xC6D26C")]
			internal bool <OnLeaderboardLoaded>b__0(Shared.Platform.LeaderboardEntry e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DailyJourneyLeaderboardItem[] leaderboardItems;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DailyJourneyLeaderboardItem leaderboardItemSelf;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B40CC", Offset = "0x8B40CC")]
		[SerializeField]
		private UnityEvent onLoadingStart;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onLoadingDone;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent onLoadingFail;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool waitingForLeaderboard;

		[Token(Token = "0x170001C8")]
		public bool WaitingForLeaderboard
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0xC490E8", Offset = "0xC490E8", VA = "0xC490E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xC490F0", Offset = "0xC490F0", VA = "0xC490F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xC492F4", Offset = "0xC492F4", VA = "0xC492F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xC494F8", Offset = "0xC494F8", VA = "0xC494F8")]
		public void StartLoadDailyJourneyLeaderboard(MultiplayerManager.LeaderboardMode leaderboardSetting)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xC495B4", Offset = "0xC495B4", VA = "0xC495B4")]
		private void DisplayLeaderboard(Shared.Platform.LeaderboardEntry[] leaderboardEntries)
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xC497DC", Offset = "0xC497DC", VA = "0xC497DC")]
		private void DisplayLoggedInUserEntry(Shared.Platform.LeaderboardEntry loggedInUserEntry)
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xC497FC", Offset = "0xC497FC", VA = "0xC497FC")]
		private void OnLeaderboardLoaded(Shared.Platform.LeaderboardEntry[] leaderboardEntries)
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xC499CC", Offset = "0xC499CC", VA = "0xC499CC")]
		private void OnLoggedInUserEntryLoaded(Shared.Platform.LeaderboardEntry[] loggedInUserLeaderboardEntries)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xC49A38", Offset = "0xC49A38", VA = "0xC49A38")]
		private void OnLeaderboardLoadFail()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xC49A54", Offset = "0xC49A54", VA = "0xC49A54")]
		public DailyJourneyLeaderboard()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class DailyJourneyLeaderboardItem : MonoBehaviour
	{
		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text rankText;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text nameText;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text scoreText;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject background;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4178", Offset = "0x8B4178")]
		[SerializeField]
		private Color defaultColor;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color selfColor;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string rank;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string displayName;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string score;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isSelf;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool enableBackground;

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xC49708", Offset = "0xC49708", VA = "0xC49708")]
		public void Display(Shared.Platform.LeaderboardEntry leaderboardEntry, bool isSelf, bool enableBackground)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xC49A5C", Offset = "0xC49A5C", VA = "0xC49A5C")]
		private void UpdateLeaderboardItem()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xC49CA8", Offset = "0xC49CA8", VA = "0xC49CA8")]
		public DailyJourneyLeaderboardItem()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class MenuScreenAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200017C")]
		public class AnimationItem
		{
			[Token(Token = "0x400094E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private bool useStartValueAsDefaultValue;

			[Token(Token = "0x400094F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[SerializeField]
			private bool animateCanvasGroupAlpha;

			[Token(Token = "0x4000950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private CanvasGroup canvasGroup;

			[Token(Token = "0x4000951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private bool animateScaleTransform;

			[Token(Token = "0x4000952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Transform transform;

			[Token(Token = "0x4000953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private Vector3 vector3FromValues;

			[Token(Token = "0x4000954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			private Vector3 vector3ToValues;

			[Token(Token = "0x4000955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private Vector2 floatFromAndToValues;

			[Token(Token = "0x4000956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private AnimationCurve animationCurve;

			[Token(Token = "0x4000957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private bool overrideTransformScaleStart;

			[Token(Token = "0x4000958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[SerializeField]
			private Vector3 overrideTransformScaleStartValue;

			[Token(Token = "0x4000959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[SerializeField]
			private bool disableTransformGameObjectAtEndOfCurve;

			[Token(Token = "0x400095A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public float duration;

			[Token(Token = "0x400095B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public float delayToNextAnimation;

			[Token(Token = "0x400095C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public bool runEventsOnStop;

			[Token(Token = "0x400095D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
			public bool runInstantOnStop;

			[Token(Token = "0x400095E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
			public bool runInstantIfDisabled;

			[Token(Token = "0x400095F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			private UnityEvent onAnimationPrepare;

			[Token(Token = "0x4000960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			private UnityEvent onAnimationStart;

			[Token(Token = "0x4000961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			private UnityEvent onAnimationUpdate;

			[Token(Token = "0x4000962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			private UnityEvent onAnimationFinish;

			[Token(Token = "0x4000963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			private UnityEvent onAnimationReset;

			[Token(Token = "0x4000964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float canvasGroupDefaultValue;

			[Token(Token = "0x4000965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private Vector3 transformScaleDefaultValue;

			[Token(Token = "0x4000966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Vector3 transformScaleStartValue;

			[Token(Token = "0x4000967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private bool canvasAlphaChanged;

			[Token(Token = "0x4000968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
			private bool transformScaleChanged;

			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0xEDE7A0", Offset = "0xEDE7A0", VA = "0xEDE7A0")]
			public void Setup(ref bool anyCanvasAlphaChanged, ref bool anyTransformScaleChanged)
			{
			}

			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0xEDE88C", Offset = "0xEDE88C", VA = "0xEDE88C")]
			public void Prepare()
			{
			}

			[Token(Token = "0x6000A50")]
			[Address(RVA = "0xEDE54C", Offset = "0xEDE54C", VA = "0xEDE54C")]
			public void Start()
			{
			}

			[Token(Token = "0x6000A51")]
			[Address(RVA = "0xEDE8A0", Offset = "0xEDE8A0", VA = "0xEDE8A0")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000A52")]
			[Address(RVA = "0xEDE5B4", Offset = "0xEDE5B4", VA = "0xEDE5B4")]
			public void Update(float t)
			{
			}

			[Token(Token = "0x6000A53")]
			[Address(RVA = "0xEDE6E0", Offset = "0xEDE6E0", VA = "0xEDE6E0")]
			public void Finish()
			{
			}

			[Token(Token = "0x6000A54")]
			[Address(RVA = "0xEDE934", Offset = "0xEDE934", VA = "0xEDE934")]
			public AnimationItem()
			{
			}
		}

		[Token(Token = "0x200017D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8BB4", Offset = "0x8A8BB4")]
		private sealed class <AnimationFlow>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400096A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400096B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuScreenAnimator <>4__this;

			[Token(Token = "0x400096C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AnimationItem <item>5__2;

			[Token(Token = "0x400096D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__3;

			[Token(Token = "0x170001C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A58")]
				[Address(RVA = "0xEDE750", Offset = "0xEDE750", VA = "0xEDE750", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A5A")]
				[Address(RVA = "0xEDE798", Offset = "0xEDE798", VA = "0xEDE798", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A55")]
			[Address(RVA = "0xEDE2F8", Offset = "0xEDE2F8", VA = "0xEDE2F8")]
			[DebuggerHidden]
			public <AnimationFlow>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000A56")]
			[Address(RVA = "0xEDE324", Offset = "0xEDE324", VA = "0xEDE324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A57")]
			[Address(RVA = "0xEDE328", Offset = "0xEDE328", VA = "0xEDE328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A59")]
			[Address(RVA = "0xEDE758", Offset = "0xEDE758", VA = "0xEDE758", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool playOnEnable;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationItem[] animationItems;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine coroutineProcess;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int coroutineIndex;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool coroutineIndexFinished;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool isSetup;

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xD686E4", Offset = "0xD686E4", VA = "0xD686E4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xD686E8", Offset = "0xD686E8", VA = "0xD686E8")]
		private void SetupItems()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xD68784", Offset = "0xD68784", VA = "0xD68784")]
		private void ResetItems()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xD687F4", Offset = "0xD687F4", VA = "0xD687F4")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xD68950", Offset = "0xD68950", VA = "0xD68950")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xD68A9C", Offset = "0xD68A9C", VA = "0xD68A9C")]
		public void Play()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xD68808", Offset = "0xD68808", VA = "0xD68808")]
		public void Play(bool useReset)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xD68B1C", Offset = "0xD68B1C", VA = "0xD68B1C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xD68964", Offset = "0xD68964", VA = "0xD68964")]
		public void Stop(bool useReset)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xD68AA4", Offset = "0xD68AA4", VA = "0xD68AA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CE898", Offset = "0x8CE898")]
		private IEnumerator AnimationFlow()
		{
			return null;
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xD68B24", Offset = "0xD68B24", VA = "0xD68B24")]
		public void SetUIChildrenDirty()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xD68B40", Offset = "0xD68B40", VA = "0xD68B40")]
		public void SetUIChildrenDirty(GameObject obj)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xD68B68", Offset = "0xD68B68", VA = "0xD68B68")]
		public MenuScreenAnimator()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class PassiveAbilityCountDisplay : MonoBehaviour
	{
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text textDisplay;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizationKey textFormatKey;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string textFormatText;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpaceShip playerShip;

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x2491AF0", Offset = "0x2491AF0", VA = "0x2491AF0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x2491CFC", Offset = "0x2491CFC", VA = "0x2491CFC")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x2491E0C", Offset = "0x2491E0C", VA = "0x2491E0C")]
		private void OnPassiveAbilitiesChanged(SpaceShip.AbilityChangeType type, ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x2491C7C", Offset = "0x2491C7C", VA = "0x2491C7C")]
		private void UpdateDisplayedCount()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x2491E1C", Offset = "0x2491E1C", VA = "0x2491E1C")]
		public static int CountPassiveAbilities(SpaceShip ship)
		{
			return default(int);
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x2492008", Offset = "0x2492008", VA = "0x2492008")]
		public PassiveAbilityCountDisplay()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class PlayButtonActionSelector : MonoBehaviour
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onPlayBeforeFirstClear;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onPlayAfterFirstClear;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onMenuShowBeforeFirstClear;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onMenuShowAfterFirstClear;

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x249D57C", Offset = "0x249D57C", VA = "0x249D57C")]
		public void MenuShow()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x249D5C4", Offset = "0x249D5C4", VA = "0x249D5C4")]
		public void Play()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x249D60C", Offset = "0x249D60C", VA = "0x249D60C")]
		public PlayButtonActionSelector()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class RunTimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text timerText;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizationKey timerKey;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lastTimeElapsed;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool displayHoursAsMinutes;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool isDirty;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, string> timerTextParameters;

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xCF6CC8", Offset = "0xCF6CC8", VA = "0xCF6CC8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xCF70E8", Offset = "0xCF70E8", VA = "0xCF70E8")]
		public void SetTimerKey(LocalizationKey timerKey)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xCF7120", Offset = "0xCF7120", VA = "0xCF7120")]
		public RunTimerDisplay()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class SectorSelectorMenuAvailability : MonoBehaviour
	{
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xD99EB8", Offset = "0xD99EB8", VA = "0xD99EB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xD99F88", Offset = "0xD99F88", VA = "0xD99F88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xD9A058", Offset = "0xD9A058", VA = "0xD9A058")]
		public SectorSelectorMenuAvailability()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class UiButtonAnimation : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000183")]
		private struct RotationTransform
		{
			[Token(Token = "0x4000983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform transform;

			[NonSerialized]
			[Token(Token = "0x4000984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Quaternion toRotation;
		}

		[Token(Token = "0x2000184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8BC4", Offset = "0x8A8BC4")]
		private sealed class <AnimateButton>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UiButtonAnimation <>4__this;

			[Token(Token = "0x4000988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170001CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A74")]
				[Address(RVA = "0xEA23DC", Offset = "0xEA23DC", VA = "0xEA23DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A76")]
				[Address(RVA = "0xEA2424", Offset = "0xEA2424", VA = "0xEA2424", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A71")]
			[Address(RVA = "0xEA21A0", Offset = "0xEA21A0", VA = "0xEA21A0")]
			[DebuggerHidden]
			public <AnimateButton>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000A72")]
			[Address(RVA = "0xEA21CC", Offset = "0xEA21CC", VA = "0xEA21CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A73")]
			[Address(RVA = "0xEA21D0", Offset = "0xEA21D0", VA = "0xEA21D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A75")]
			[Address(RVA = "0xEA23E4", Offset = "0xEA23E4", VA = "0xEA23E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float animationTime;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float startAnimationDelay;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B43D4", Offset = "0x8B43D4")]
		[SerializeField]
		private RotationTransform[] rotationTransforms;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float fromAngle;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isSetup;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine animationCoroutine;

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x10B5C50", Offset = "0x10B5C50", VA = "0x10B5C50")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x10B5D1C", Offset = "0x10B5D1C", VA = "0x10B5D1C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x10B5D50", Offset = "0x10B5D50", VA = "0x10B5D50")]
		private void ResetButton()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x10B5DE0", Offset = "0x10B5DE0", VA = "0x10B5DE0")]
		public void SetupValues()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x10B5C60", Offset = "0x10B5C60", VA = "0x10B5C60")]
		private void StartAnimation()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x10B5EC4", Offset = "0x10B5EC4", VA = "0x10B5EC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CE948", Offset = "0x8CE948")]
		private IEnumerator AnimateButton()
		{
			return null;
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x10B5F3C", Offset = "0x10B5F3C", VA = "0x10B5F3C")]
		public UiButtonAnimation()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class UiButtonHold : UiButton
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4430", Offset = "0x8B4430")]
		[SerializeField]
		private RectTransform fillParent;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private RectTransform fillRect;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Image fillMask;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Image fillImage;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private float fillImageWidthMin;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		private Vector2 fillImageWidthOffset;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[SerializeField]
		private Color downFillColor;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[SerializeField]
		private bool pointerUpOnFill;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B44EC", Offset = "0x8B44EC")]
		[SerializeField]
		private AnimationCurve hooverAnimationCurve;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private AnimationCurve fillAnimationCurve;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private float holdTime;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[SerializeField]
		private float animationLoopFill;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private float animationLoopTime;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[SerializeField]
		private float animationLoopInterval;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private float animationLoopDelay;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4598", Offset = "0x8B4598")]
		[SerializeField]
		private bool playHoldDownSfx;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
		[SerializeField]
		private bool playSelectSfx;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Color defaultFillColor;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float fillMaskStartPixelsPerUnit;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float hoverAnimation;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float fillAnimation;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float hoverDelay;

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x10B6120", Offset = "0x10B6120", VA = "0x10B6120", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x10B6198", Offset = "0x10B6198", VA = "0x10B6198", Slot = "47")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x10B6300", Offset = "0x10B6300", VA = "0x10B6300", Slot = "45")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x10B65E8", Offset = "0x10B65E8", VA = "0x10B65E8", Slot = "55")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x10B66F8", Offset = "0x10B66F8", VA = "0x10B66F8", Slot = "56")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x10B67E8", Offset = "0x10B67E8", VA = "0x10B67E8", Slot = "54")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x10B67EC", Offset = "0x10B67EC", VA = "0x10B67EC", Slot = "46")]
		public override void Setup()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x10B68F0", Offset = "0x10B68F0", VA = "0x10B68F0", Slot = "53")]
		public override void ResetButton(bool instant)
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x10B6A08", Offset = "0x10B6A08", VA = "0x10B6A08", Slot = "66")]
		protected override void UpdateColor()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x10B6C40", Offset = "0x10B6C40", VA = "0x10B6C40", Slot = "68")]
		protected override void SetButtonImagePixelsPerUnit(float multiplier, Vector2 sizeDiff, bool sliceHorizontal, bool sliceVertical)
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x10B61E8", Offset = "0x10B61E8", VA = "0x10B61E8")]
		public void UpdateHoldFill()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x10B6DC4", Offset = "0x10B6DC4", VA = "0x10B6DC4")]
		public UiButtonHold()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class UiButtonHoldEvents : UIBehaviour
	{
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UiButtonHold button;

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x10B6E7C", Offset = "0x10B6E7C", VA = "0x10B6E7C", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x10B6F08", Offset = "0x10B6F08", VA = "0x10B6F08")]
		public UiButtonHoldEvents()
		{
		}
	}
}
namespace Game.UI.Effects
{
	[Token(Token = "0x2000187")]
	public class IndexBobber : MonoBehaviour
	{
		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B45F4", Offset = "0x8B45F4")]
		private float bobSpeed;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B4634", Offset = "0x8B4634")]
		private float bobPower;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve bobCurve;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startPos;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timer;

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xD54304", Offset = "0xD54304", VA = "0xD54304")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xD54340", Offset = "0xD54340", VA = "0xD54340")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xD54410", Offset = "0xD54410", VA = "0xD54410")]
		public IndexBobber()
		{
		}
	}
}
namespace Game.UI.ButtonConditions
{
	[Token(Token = "0x2000188")]
	public abstract class ButtonConditionBase : GameMonoBehaviour
	{
		[Token(Token = "0x40009A5")]
		private const int CHILD_CONDITION_LIST_SIZE = 4;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		private bool invertButtonCondition;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IUiEnablable button;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ButtonConditionBase parentCondition;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ButtonConditionBase> childConditions;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool isSetupBase;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		protected bool isSetupDerived;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ButtonConditionBase> nextChildConditionsList;

		[Token(Token = "0x170001CD")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xFE60F0", Offset = "0xFE60F0", VA = "0xFE60F0", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0xFE60F8", Offset = "0xFE60F8", VA = "0xFE60F8", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6000A8A")]
		protected abstract bool SetupButtonCondition();

		[Token(Token = "0x6000A8B")]
		protected abstract bool CheckButtonCondition();

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xFE60FC", Offset = "0xFE60FC", VA = "0xFE60FC")]
		private bool CheckFinalButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xFE6250", Offset = "0xFE6250", VA = "0xFE6250", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xFE6608", Offset = "0xFE6608", VA = "0xFE6608", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xFE6748", Offset = "0xFE6748", VA = "0xFE6748", Slot = "40")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xFE67CC", Offset = "0xFE67CC", VA = "0xFE67CC", Slot = "41")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xFE6278", Offset = "0xFE6278", VA = "0xFE6278")]
		private void Setup()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xFE6634", Offset = "0xFE6634", VA = "0xFE6634")]
		protected void UpdateButtonState()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xFE67D0", Offset = "0xFE67D0", VA = "0xFE67D0")]
		public static bool CheckConditionsValid(GameObject button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xFE68C8", Offset = "0xFE68C8", VA = "0xFE68C8")]
		protected ButtonConditionBase()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class HasEventObjectivesLeftButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xE379F4", Offset = "0xE379F4", VA = "0xE379F4", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xE37B68", Offset = "0xE37B68", VA = "0xE37B68", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xE37CE8", Offset = "0xE37CE8", VA = "0xE37CE8")]
		private void OnObjectiveStateChange(bool sectorClear)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xE37CF0", Offset = "0xE37CF0", VA = "0xE37CF0", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xE37DB8", Offset = "0xE37DB8", VA = "0xE37DB8")]
		public HasEventObjectivesLeftButtonCondition()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class HasPlayerShipButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SpaceShip playerShip;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool playerShipShown;

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xE37E1C", Offset = "0xE37E1C", VA = "0xE37E1C", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xE382A4", Offset = "0xE382A4", VA = "0xE382A4", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xE3801C", Offset = "0xE3801C", VA = "0xE3801C")]
		private void OnPlayerShipChanged(SpaceShip ship)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xE38584", Offset = "0xE38584", VA = "0xE38584")]
		private void OnPlayerShipDeathAndRevive(SpaceObject ship)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xE3858C", Offset = "0xE3858C", VA = "0xE3858C")]
		private void OnSceneTagsChanged()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xE38648", Offset = "0xE38648", VA = "0xE38648", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xE38780", Offset = "0xE38780", VA = "0xE38780")]
		public HasPlayerShipButtonCondition()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class HasResearchableNodeButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xE387E4", Offset = "0xE387E4", VA = "0xE387E4", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xE38894", Offset = "0xE38894", VA = "0xE38894", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xE38944", Offset = "0xE38944", VA = "0xE38944")]
		private void OnHasResearchableNodeChanged()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xE3894C", Offset = "0xE3894C", VA = "0xE3894C", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xE389B0", Offset = "0xE389B0", VA = "0xE389B0")]
		public HasResearchableNodeButtonCondition()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class HasStoryKeysButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xE38A14", Offset = "0xE38A14", VA = "0xE38A14", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xE38B48", Offset = "0xE38B48", VA = "0xE38B48", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xE38C84", Offset = "0xE38C84", VA = "0xE38C84", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xE38D58", Offset = "0xE38D58", VA = "0xE38D58")]
		private void OnStoryKeysChange(int previousAmount, int newAmount)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xE38D60", Offset = "0xE38D60", VA = "0xE38D60")]
		public HasStoryKeysButtonCondition()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class HasTutorialObjectivesLeftButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xE38DC4", Offset = "0xE38DC4", VA = "0xE38DC4", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xE38EEC", Offset = "0xE38EEC", VA = "0xE38EEC", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xE3901C", Offset = "0xE3901C", VA = "0xE3901C", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xE390E4", Offset = "0xE390E4", VA = "0xE390E4")]
		public HasTutorialObjectivesLeftButtonCondition()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class HasUnlockedShipButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xE39148", Offset = "0xE39148", VA = "0xE39148", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xE39284", Offset = "0xE39284", VA = "0xE39284", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xE393B8", Offset = "0xE393B8", VA = "0xE393B8")]
		private void OnPlayerShipUnlocked(SectorTag shipTag)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xE393C0", Offset = "0xE393C0", VA = "0xE393C0", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xE3949C", Offset = "0xE3949C", VA = "0xE3949C")]
		public HasUnlockedShipButtonCondition()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class IsAnyMenuShownButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[SerializeField]
		private bool checkOnlyPrimary;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[SerializeField]
		private bool checkOnlyNavigation;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool checkOnlyOverlays;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[SerializeField]
		private bool checkOnlyNonOverlays;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MenuImportance overlayMenuImportance;

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xD55298", Offset = "0xD55298", VA = "0xD55298", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xD5545C", Offset = "0xD5545C", VA = "0xD5545C", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xD5562C", Offset = "0xD5562C", VA = "0xD5562C")]
		private void OnMenuVisibilityChanged(SectorTag menuTag, bool visible)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xD55634", Offset = "0xD55634", VA = "0xD55634", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xD55CD8", Offset = "0xD55CD8", VA = "0xD55CD8")]
		public IsAnyMenuShownButtonCondition()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class IsBackendHealthyButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xD55D3C", Offset = "0xD55D3C", VA = "0xD55D3C", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xD55E64", Offset = "0xD55E64", VA = "0xD55E64", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xD55F98", Offset = "0xD55F98", VA = "0xD55F98")]
		private void OnBackendHealthyResponse()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xD55FA0", Offset = "0xD55FA0", VA = "0xD55FA0", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xD56094", Offset = "0xD56094", VA = "0xD56094")]
		public IsBackendHealthyButtonCondition()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class IsGameLoadingButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xD560F8", Offset = "0xD560F8", VA = "0xD560F8", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xD561A8", Offset = "0xD561A8", VA = "0xD561A8", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xD5625C", Offset = "0xD5625C", VA = "0xD5625C")]
		private void OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xD56264", Offset = "0xD56264", VA = "0xD56264", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xD562C0", Offset = "0xD562C0", VA = "0xD562C0")]
		public IsGameLoadingButtonCondition()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class IsInMenuButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xD56324", Offset = "0xD56324", VA = "0xD56324", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xD563D4", Offset = "0xD563D4", VA = "0xD563D4", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xD56488", Offset = "0xD56488", VA = "0xD56488")]
		private void OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xD56490", Offset = "0xD56490", VA = "0xD56490", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xD56558", Offset = "0xD56558", VA = "0xD56558")]
		public IsInMenuButtonCondition()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class IsInRunButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xD565BC", Offset = "0xD565BC", VA = "0xD565BC", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xD5666C", Offset = "0xD5666C", VA = "0xD5666C", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xD56720", Offset = "0xD56720", VA = "0xD56720")]
		private void OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xD56728", Offset = "0xD56728", VA = "0xD56728", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xD567F0", Offset = "0xD567F0", VA = "0xD567F0")]
		public IsInRunButtonCondition()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class IsMenuShownButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8B46E8", Offset = "0x8B46E8")]
		private SectorTag specificMenuTag;

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xD56854", Offset = "0xD56854", VA = "0xD56854", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xD56978", Offset = "0xD56978", VA = "0xD56978", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xD56AA8", Offset = "0xD56AA8", VA = "0xD56AA8")]
		private void OnMenuVisibilityChanged(SectorTag menuTag, bool visible)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xD56B58", Offset = "0xD56B58", VA = "0xD56B58", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xD56CC0", Offset = "0xD56CC0", VA = "0xD56CC0")]
		public IsMenuShownButtonCondition()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class IsRelaxedModeEnabledButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xD56D2C", Offset = "0xD56D2C", VA = "0xD56D2C", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xD56E68", Offset = "0xD56E68", VA = "0xD56E68", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xD56FB0", Offset = "0xD56FB0", VA = "0xD56FB0")]
		private void OnRelaxedModeSettingChanged(PlayerProfile.RelaxedModeSetting setting, int value)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xD56FB8", Offset = "0xD56FB8", VA = "0xD56FB8", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xD57080", Offset = "0xD57080", VA = "0xD57080")]
		public IsRelaxedModeEnabledButtonCondition()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class IsSectorCalmButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xD570E4", Offset = "0xD570E4", VA = "0xD570E4", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xD571A8", Offset = "0xD571A8", VA = "0xD571A8", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xD57270", Offset = "0xD57270", VA = "0xD57270")]
		private void OnSectorClear(bool sectorClear)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xD57278", Offset = "0xD57278", VA = "0xD57278", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xD572D4", Offset = "0xD572D4", VA = "0xD572D4")]
		public IsSectorCalmButtonCondition()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class IsSectorEngagementActiveButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xD57338", Offset = "0xD57338", VA = "0xD57338", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xD573FC", Offset = "0xD573FC", VA = "0xD573FC", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xD574C4", Offset = "0xD574C4", VA = "0xD574C4")]
		private void OnEngagementActiveChanged(bool engagementActive)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xD574CC", Offset = "0xD574CC", VA = "0xD574CC", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xD575EC", Offset = "0xD575EC", VA = "0xD575EC")]
		public IsSectorEngagementActiveButtonCondition()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class IsSectorObjectiveClearedButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xD57650", Offset = "0xD57650", VA = "0xD57650", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xD5778C", Offset = "0xD5778C", VA = "0xD5778C", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xD578D4", Offset = "0xD578D4", VA = "0xD578D4")]
		private void OnSectorObjectiveClearedChange(bool cleared)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xD578DC", Offset = "0xD578DC", VA = "0xD578DC", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xD579A4", Offset = "0xD579A4", VA = "0xD579A4")]
		public IsSectorObjectiveClearedButtonCondition()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class IsStringToggleTransformEnabledButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B4734", Offset = "0x8B4734")]
		private string[] strings;

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xD57A08", Offset = "0xD57A08", VA = "0xD57A08", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xD57ACC", Offset = "0xD57ACC", VA = "0xD57ACC", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xD57B94", Offset = "0xD57B94", VA = "0xD57B94")]
		private void OnStringToggleTransformChange(string str, bool enabled)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xD57C14", Offset = "0xD57C14", VA = "0xD57C14", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xD57CE4", Offset = "0xD57CE4", VA = "0xD57CE4")]
		public IsStringToggleTransformEnabledButtonCondition()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class SectorTagsButtonCondition : ButtonConditionBase
	{
		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SectorTagCollectionHierarchy buttonRules;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAGS_COLLECTION;

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xE0DC34", Offset = "0xE0DC34", VA = "0xE0DC34", Slot = "38")]
		protected override bool SetupButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xE0DDB4", Offset = "0xE0DDB4", VA = "0xE0DDB4", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xE0DF38", Offset = "0xE0DF38", VA = "0xE0DF38")]
		private void OnTagsChanged()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xE0DF84", Offset = "0xE0DF84", VA = "0xE0DF84", Slot = "39")]
		protected override bool CheckButtonCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xE0E000", Offset = "0xE0E000", VA = "0xE0E000")]
		public SectorTagsButtonCondition()
		{
		}
	}
}
namespace Game.UI.Actions
{
	[Token(Token = "0x200019B")]
	public class ChangeRuntimeBuildAudienceAction : MonoBehaviour
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public X15BuildAudience audience;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool reloadScene;

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xFE74A8", Offset = "0xFE74A8", VA = "0xFE74A8")]
		public void ApplyRuntimeBuildAudience()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xFE7654", Offset = "0xFE7654", VA = "0xFE7654")]
		public ChangeRuntimeBuildAudienceAction()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class ContinueRunActions : MonoBehaviour
	{
		[Token(Token = "0x14000031")]
		public static event Action ActionContinueRun
		{
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0xFEEAB4", Offset = "0xFEEAB4", VA = "0xFEEAB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE9F8", Offset = "0x8CE9F8")]
			add
			{
			}
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0xFEEB70", Offset = "0xFEEB70", VA = "0xFEEB70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEA08", Offset = "0x8CEA08")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public static event Action ActionAbandonRun
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0xFEEC2C", Offset = "0xFEEC2C", VA = "0xFEEC2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEA18", Offset = "0x8CEA18")]
			add
			{
			}
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0xFEECEC", Offset = "0xFEECEC", VA = "0xFEECEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEA28", Offset = "0x8CEA28")]
			remove
			{
			}
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xFEEDAC", Offset = "0xFEEDAC", VA = "0xFEEDAC")]
		public void ContinueRun()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xFEEE0C", Offset = "0xFEEE0C", VA = "0xFEEE0C")]
		public void AbandonRun()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xFEEE6C", Offset = "0xFEEE6C", VA = "0xFEEE6C")]
		public ContinueRunActions()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class DeathSummarySettingsAction : SettingsActionBase
	{
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xC4E02C", Offset = "0xC4E02C", VA = "0xC4E02C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xC4E0FC", Offset = "0xC4E0FC", VA = "0xC4E0FC", Slot = "6")]
		public override void OnButtonPress()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xC4E1D0", Offset = "0xC4E1D0", VA = "0xC4E1D0")]
		public DeathSummarySettingsAction()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class EditorRuntimeHotkeysActions : MonoBehaviour
	{
		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AsyncFlag playerShipTargetableFlag;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncFlag playerShipInvulnerableFlag;

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xC51ADC", Offset = "0xC51ADC", VA = "0xC51ADC")]
		public void ReturnToMenu()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xC51B34", Offset = "0xC51B34", VA = "0xC51B34")]
		public void ReloadSector()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xC51B8C", Offset = "0xC51B8C", VA = "0xC51B8C")]
		public void ToggleSectorMap()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xC51BE4", Offset = "0xC51BE4", VA = "0xC51BE4")]
		public void LoadNextSector()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xC51C3C", Offset = "0xC51C3C", VA = "0xC51C3C")]
		public void DestroyEnemies(int maxCount)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xC51C9C", Offset = "0xC51C9C", VA = "0xC51C9C")]
		public void DestroyPlayerShip()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xC51CF4", Offset = "0xC51CF4", VA = "0xC51CF4")]
		public void TogglePlayerShipTargetable()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xC51D58", Offset = "0xC51D58", VA = "0xC51D58")]
		public void TogglePlayerShipInvulnerable()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xC51DBC", Offset = "0xC51DBC", VA = "0xC51DBC")]
		public void GiveScrap(int amount)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xC51E1C", Offset = "0xC51E1C", VA = "0xC51E1C")]
		public void GiveExperience(int amount)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xC51E7C", Offset = "0xC51E7C", VA = "0xC51E7C")]
		public void GiveStoryKey(int amount)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xC51EDC", Offset = "0xC51EDC", VA = "0xC51EDC")]
		public void ResetExperience()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xC51F34", Offset = "0xC51F34", VA = "0xC51F34")]
		public void RefillAmmo()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xC51F8C", Offset = "0xC51F8C", VA = "0xC51F8C")]
		public void RefillHealth()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xC51FE4", Offset = "0xC51FE4", VA = "0xC51FE4")]
		public void AutoCollectPickups()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xC5203C", Offset = "0xC5203C", VA = "0xC5203C")]
		public void ToggleMusic()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xC52094", Offset = "0xC52094", VA = "0xC52094")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xC520F0", Offset = "0xC520F0", VA = "0xC520F0")]
		public EditorRuntimeHotkeysActions()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class EnableAutoCollectSettingsAction : SettingsActionBase
	{
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xC52898", Offset = "0xC52898", VA = "0xC52898", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xC52968", Offset = "0xC52968", VA = "0xC52968", Slot = "6")]
		public override void OnButtonPress()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xC52A3C", Offset = "0xC52A3C", VA = "0xC52A3C")]
		public EnableAutoCollectSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class EnableAutoScanSettingsAction : SettingsActionBase
	{
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xC52A44", Offset = "0xC52A44", VA = "0xC52A44", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xC52B14", Offset = "0xC52B14", VA = "0xC52B14", Slot = "6")]
		public override void OnButtonPress()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xC52BE8", Offset = "0xC52BE8", VA = "0xC52BE8")]
		public EnableAutoScanSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class EnableButtonTouchInteractionSettingsAction : SettingsActionBase
	{
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xC52BF0", Offset = "0xC52BF0", VA = "0xC52BF0", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xC52CC0", Offset = "0xC52CC0", VA = "0xC52CC0", Slot = "6")]
		public override void OnButtonPress()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xC52DE8", Offset = "0xC52DE8", VA = "0xC52DE8")]
		public EnableButtonTouchInteractionSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class EnableCommonNotificationsSettingsAction : SettingsActionBase
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xC52DF0", Offset = "0xC52DF0", VA = "0xC52DF0", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xC52EC0", Offset = "0xC52EC0", VA = "0xC52EC0", Slot = "6")]
		public override void OnButtonPress()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xC52F94", Offset = "0xC52F94", VA = "0xC52F94")]
		public EnableCommonNotificationsSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class EnableHapticFeedbackSettingsAction : SettingsActionBase
	{
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xC52F9C", Offset = "0xC52F9C", VA = "0xC52F9C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xC5306C", Offset = "0xC5306C", VA = "0xC5306C", Slot = "6")]
		public override void OnButtonPress()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xC53140", Offset = "0xC53140", VA = "0xC53140")]
		public EnableHapticFeedbackSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class EnableShipwreckRescueSectorsSettingsAction : SettingsActionBase
	{
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xC53148", Offset = "0xC53148", VA = "0xC53148", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xC53218", Offset = "0xC53218", VA = "0xC53218", Slot = "6")]
		public override void OnButtonPress()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xC532EC", Offset = "0xC532EC", VA = "0xC532EC")]
		public EnableShipwreckRescueSectorsSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class GameLoadAction : MonoBehaviour, IGameStart
	{
		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B47B0", Offset = "0x8B47B0")]
		public string seed;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool seedCreateRandom;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> tags;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SectorTransitionVariant transitionVariant;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool instantTransitionShow;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool instantTransitionHide;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B47E8", Offset = "0x8B47E8")]
		public bool loadOnEnable;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public bool loadOnStart;

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xE2448C", Offset = "0xE2448C", VA = "0xE2448C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xE24608", Offset = "0xE24608", VA = "0xE24608")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xE2467C", Offset = "0xE2467C", VA = "0xE2467C", Slot = "4")]
		public void OnGameStart()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xE24680", Offset = "0xE24680", VA = "0xE24680")]
		public void Load()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xE24D2C", Offset = "0xE24D2C", VA = "0xE24D2C")]
		public GameLoadAction()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class GameManagerLoadAction : MonoBehaviour, IGameStart
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4820", Offset = "0x8B4820")]
		public string gameMode;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string seed;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool seedCreateRandom;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> additionalTags;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4858", Offset = "0x8B4858")]
		public SectorTransitionVariant transitionVariant;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool instantTransitionShow;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool instantTransitionHide;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4890", Offset = "0x8B4890")]
		public bool loadOnEnable;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool loadOnStart;

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xE2C6F8", Offset = "0xE2C6F8", VA = "0xE2C6F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xE2C76C", Offset = "0xE2C76C", VA = "0xE2C76C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xE2C7E0", Offset = "0xE2C7E0", VA = "0xE2C7E0", Slot = "4")]
		public void OnGameStart()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xE2C7E4", Offset = "0xE2C7E4", VA = "0xE2C7E4")]
		public void Load()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xE2C914", Offset = "0xE2C914", VA = "0xE2C914")]
		public void LoadStaticScene(string sceneName)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xE2CA50", Offset = "0xE2CA50", VA = "0xE2CA50")]
		public GameManagerLoadAction()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class GamePauseActions : MonoBehaviour
	{
		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool pauseOnEnable;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool unpauseOnDisable;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncFlag pauseFlag;

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xE2DA04", Offset = "0xE2DA04", VA = "0xE2DA04")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xE2DAEC", Offset = "0xE2DAEC", VA = "0xE2DAEC")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xE2DBD4", Offset = "0xE2DBD4", VA = "0xE2DBD4")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xE2DA14", Offset = "0xE2DA14", VA = "0xE2DA14")]
		public void PauseGame()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xE2DAFC", Offset = "0xE2DAFC", VA = "0xE2DAFC")]
		public void UnpauseGame()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xE2DBD8", Offset = "0xE2DBD8", VA = "0xE2DBD8")]
		public void TogglePauseGame()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xE2DCE8", Offset = "0xE2DCE8", VA = "0xE2DCE8")]
		public void ResetPauseGame()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xE2DDB4", Offset = "0xE2DDB4", VA = "0xE2DDB4")]
		public GamePauseActions()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class InGameMenuActions : MonoBehaviour
	{
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xD5400C", Offset = "0xD5400C", VA = "0xD5400C")]
		public void LoadNextSector()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xD54068", Offset = "0xD54068", VA = "0xD54068")]
		public void BackToMenu()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xD54138", Offset = "0xD54138", VA = "0xD54138")]
		public void ReloadSector()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xD542FC", Offset = "0xD542FC", VA = "0xD542FC")]
		public InGameMenuActions()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class MainSelectorActions : MonoBehaviour
	{
		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xD60E78", Offset = "0xD60E78", VA = "0xD60E78")]
		public void ToggleMainSelector()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xD613B8", Offset = "0xD613B8", VA = "0xD613B8")]
		public void SetMainSelector(XRNode xrNode)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xD61508", Offset = "0xD61508", VA = "0xD61508")]
		public void SetMainSelectorRightHand()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xD61518", Offset = "0xD61518", VA = "0xD61518")]
		public void SetMainSelectorLeftHand()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xD60E7C", Offset = "0xD60E7C", VA = "0xD60E7C")]
		public static void MainSelectorToggle()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xD613C0", Offset = "0xD613C0", VA = "0xD613C0")]
		public static void MainSelectorSet(XRNode xrNode)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xD61510", Offset = "0xD61510", VA = "0xD61510")]
		public static void MainSelectorSetRightHand()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xD61520", Offset = "0xD61520", VA = "0xD61520")]
		public static void MainSelectorSetLeftHand()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xD61528", Offset = "0xD61528", VA = "0xD61528")]
		public MainSelectorActions()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class MenuActions : MonoBehaviour
	{
		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8B48C8", Offset = "0x8B48C8")]
		[SerializeField]
		private SectorTag menuTag;

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xD6248C", Offset = "0xD6248C", VA = "0xD6248C")]
		public void ShowMenu()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xD6257C", Offset = "0xD6257C", VA = "0xD6257C")]
		public void ShowMenuWithBackStep()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xD62498", Offset = "0xD62498", VA = "0xD62498")]
		public void ShowMenu(SectorTag menuTag, bool addBackStep = false)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xD6291C", Offset = "0xD6291C", VA = "0xD6291C")]
		public void HideMenu()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xD62A0C", Offset = "0xD62A0C", VA = "0xD62A0C")]
		public void HideMenuWithBackStep()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xD62928", Offset = "0xD62928", VA = "0xD62928")]
		public void HideMenu(SectorTag menuTag, bool addBackStep = false)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xD62C54", Offset = "0xD62C54", VA = "0xD62C54")]
		public void HidePrimaryMenu()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xD62D40", Offset = "0xD62D40", VA = "0xD62D40")]
		public void HidePrimaryMenuWithBackStep()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xD62E10", Offset = "0xD62E10", VA = "0xD62E10")]
		public void HideNavigationMenu()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xD62EFC", Offset = "0xD62EFC", VA = "0xD62EFC")]
		public void HideNavigationMenuWithBackStep()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xD62FCC", Offset = "0xD62FCC", VA = "0xD62FCC")]
		public void HidePrimaryAndNavigationMenus()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xD630BC", Offset = "0xD630BC", VA = "0xD630BC")]
		public void HidePrimaryAndNavigationMenusWithBackStep()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xD631AC", Offset = "0xD631AC", VA = "0xD631AC")]
		public void HideAllMenus()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xD6327C", Offset = "0xD6327C", VA = "0xD6327C")]
		public void HideAllMenusWithBackStep()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xD631B4", Offset = "0xD631B4", VA = "0xD631B4")]
		private void HideAllMenus(bool addBackStep)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xD63394", Offset = "0xD63394", VA = "0xD63394")]
		public void MenuGoBack()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xD6354C", Offset = "0xD6354C", VA = "0xD6354C")]
		public void MenuClearBack()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xD636A0", Offset = "0xD636A0", VA = "0xD636A0")]
		public void MenuRemoveBack(int count)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xD63838", Offset = "0xD63838", VA = "0xD63838")]
		public void MenuRemoveBackUntil(int remaingingCount)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xD639C0", Offset = "0xD639C0", VA = "0xD639C0")]
		public MenuActions()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class MenuBackStepActions : MonoBehaviour
	{
		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent actions;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent backActions;

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xD639C8", Offset = "0xD639C8", VA = "0xD639C8")]
		public void ExecuteActions()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xD639DC", Offset = "0xD639DC", VA = "0xD639DC")]
		public void ExecuteActionsAndAddBackStep()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xD63BB0", Offset = "0xD63BB0", VA = "0xD63BB0")]
		public void AddBackStep()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xD63E30", Offset = "0xD63E30", VA = "0xD63E30")]
		public MenuBackStepActions()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class MoveModeSettingsAction : MultipleSettingsActionBase
	{
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x2487734", Offset = "0x2487734", VA = "0x2487734", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x248782C", Offset = "0x248782C", VA = "0x248782C", Slot = "5")]
		public override void OnButtonPress()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x2487A4C", Offset = "0x2487A4C", VA = "0x2487A4C")]
		public MoveModeSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class MultipleSettingsActionBase : MonoBehaviour
	{
		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI buttonText;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizationKey buttonTextPrefix;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool newLineAfterPrefix;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected LocalizationKey[] entries;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int entryIndex;

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x2487828", Offset = "0x2487828", VA = "0x2487828", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x2487A48", Offset = "0x2487A48", VA = "0x2487A48", Slot = "5")]
		public virtual void OnButtonPress()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x2489E28", Offset = "0x2489E28", VA = "0x2489E28")]
		private void UpdateButtonText()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x2487A54", Offset = "0x2487A54", VA = "0x2487A54")]
		public MultipleSettingsActionBase()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class MusicUpdateActions : SectorTagActions
	{
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x248AE90", Offset = "0x248AE90", VA = "0x248AE90", Slot = "4")]
		public override void ApplySectorTags()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x248AF60", Offset = "0x248AF60", VA = "0x248AF60")]
		public MusicUpdateActions()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class NotificationMenuActions : MonoBehaviour
	{
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x248F984", Offset = "0x248F984", VA = "0x248F984")]
		public void HideAllNotifications()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x248FA44", Offset = "0x248FA44", VA = "0x248FA44")]
		public NotificationMenuActions()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class PassiveAbilitySelectionActions : MonoBehaviour
	{
		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SectorTag tagToAdd;

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x2492C4C", Offset = "0x2492C4C", VA = "0x2492C4C")]
		public void AddRunTagToPassiveAbilitySelection()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x2492D18", Offset = "0x2492D18", VA = "0x2492D18")]
		public PassiveAbilitySelectionActions()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class PlayBarkActions : MonoBehaviour
	{
		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BarkType barkType;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float delay;

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x249D3B0", Offset = "0x249D3B0", VA = "0x249D3B0")]
		public void PlayBark()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x249D480", Offset = "0x249D480", VA = "0x249D480")]
		public void PlayBarkOnDeath(SpaceObject spaceObject)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x249D574", Offset = "0x249D574", VA = "0x249D574")]
		public PlayBarkActions()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class QuitGameAction : MonoBehaviour
	{
		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xCE9D0C", Offset = "0xCE9D0C", VA = "0xCE9D0C")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xCE9D14", Offset = "0xCE9D14", VA = "0xCE9D14")]
		public QuitGameAction()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class ReplayTutorialActions : MonoBehaviour
	{
		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<SectorTagAmount> tutorialReplayTags;

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xCEAA58", Offset = "0xCEAA58", VA = "0xCEAA58")]
		public void ReplayTutorial()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xCEAB6C", Offset = "0xCEAB6C", VA = "0xCEAB6C")]
		public ReplayTutorialActions()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class RunManagerActions : MonoBehaviour
	{
		[Token(Token = "0x20001B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8BD4", Offset = "0x8A8BD4")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40009E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string seed;

			[Token(Token = "0x40009E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string gameMode;

			[Token(Token = "0x40009E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorMapDescription sectorMap;

			[Token(Token = "0x40009E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<string> additionalTags;

			[Token(Token = "0x6000B72")]
			[Address(RVA = "0xD7372C", Offset = "0xD7372C", VA = "0xD7372C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xD73734", Offset = "0xD73734", VA = "0xD73734")]
			internal void <StartNewRun>b__0()
			{
			}
		}

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string seed;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string overrideGameMode;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SectorMapDescription overrideSectorMap;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> additionalTags;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool playRunIntro;

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xCF4C88", Offset = "0xCF4C88", VA = "0xCF4C88")]
		public void StartNewRun()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xCF4E78", Offset = "0xCF4E78", VA = "0xCF4E78")]
		public void ContinueRun()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xCF4F38", Offset = "0xCF4F38", VA = "0xCF4F38")]
		public void EndRun()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xCF5064", Offset = "0xCF5064", VA = "0xCF5064")]
		public RunManagerActions()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class SaveFileActions : MonoBehaviour
	{
		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xCF7580", Offset = "0xCF7580", VA = "0xCF7580")]
		public void ResetSaveFile()
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xCF76FC", Offset = "0xCF76FC", VA = "0xCF76FC")]
		public SaveFileActions()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class SaveSettingsAction : MonoBehaviour
	{
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xCF84F8", Offset = "0xCF84F8", VA = "0xCF84F8")]
		public void SaveProfileAndOptions()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xCF850C", Offset = "0xCF850C", VA = "0xCF850C")]
		public void SavePreferences()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xCF858C", Offset = "0xCF858C", VA = "0xCF858C")]
		public void SaveOptions()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xCF860C", Offset = "0xCF860C", VA = "0xCF860C")]
		public SaveSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class ScanInfoSettingsAction : SettingsActionBase
	{
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xCF9EDC", Offset = "0xCF9EDC", VA = "0xCF9EDC", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xCF9FAC", Offset = "0xCF9FAC", VA = "0xCF9FAC", Slot = "6")]
		public override void OnButtonPress()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xCFA38C", Offset = "0xCFA38C", VA = "0xCFA38C")]
		public ScanInfoSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class SectorMapNodePickAction : MonoBehaviour
	{
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B49B4", Offset = "0x8B49B4")]
		public GalaxyNode node;

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xD92840", Offset = "0xD92840", VA = "0xD92840")]
		public void PickNode()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xD92908", Offset = "0xD92908", VA = "0xD92908")]
		public SectorMapNodePickAction()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class SectorTagActions : MonoBehaviour
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SectorTagCollectionHierarchy tags;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent actionOnTagMatch;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool saveGame;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xE090A8", Offset = "0xE090A8", VA = "0xE090A8", Slot = "4")]
		public virtual void ApplySectorTags()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xE09384", Offset = "0xE09384", VA = "0xE09384")]
		public SectorTagActions()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class SectorTagEvents : MonoBehaviour
	{
		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SectorTagCollectionHierarchy tags;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onTagsMatch;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onTagsUnmatch;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isMatch;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool isUnmatch;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xE09F94", Offset = "0xE09F94", VA = "0xE09F94")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xE0A290", Offset = "0xE0A290", VA = "0xE0A290")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xE0A1A4", Offset = "0xE0A1A4", VA = "0xE0A1A4")]
		private void OnTagsChanged()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xE0A4AC", Offset = "0xE0A4AC", VA = "0xE0A4AC")]
		public SectorTagEvents()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class SettingsActionBase : MonoBehaviour
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI buttonText;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizationKey buttonTextPrefix;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool newLineAfterPrefix;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LocalizationKey enableText;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizationKey disableText;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string unlockId;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected bool isSettingEnabled;

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xE155CC", Offset = "0xE155CC", VA = "0xE155CC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xE15800", Offset = "0xE15800", VA = "0xE15800", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xE15928", Offset = "0xE15928", VA = "0xE15928", Slot = "6")]
		public virtual void OnButtonPress()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xE156FC", Offset = "0xE156FC", VA = "0xE156FC")]
		public void UpdateButtonText()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xE1592C", Offset = "0xE1592C", VA = "0xE1592C")]
		public static string FormatPrefixSetting(string prefix, string value, bool newLineAfterPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xE159AC", Offset = "0xE159AC", VA = "0xE159AC")]
		public void EnableFromTechTree()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xE15BE8", Offset = "0xE15BE8", VA = "0xE15BE8")]
		public SettingsActionBase()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class SkipTutorialActions : MonoBehaviour
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SectorTagCollectionHierarchy skipTags;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4ABC", Offset = "0x8B4ABC")]
		private bool sectorMapNodeActionEnabled;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Game.Menu.SectorMapNode.SectorMapNodeAction sectorMapNodeAction;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xF52AD0", Offset = "0xF52AD0", VA = "0xF52AD0")]
		public void SkipTutorial()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xF52D94", Offset = "0xF52D94", VA = "0xF52D94")]
		public SkipTutorialActions()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class SlowMotionActions : MonoBehaviour
	{
		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool slowMotionOnEnable;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool normalMotionOnDisable;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncFlag slowMotionFlag;

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xF53814", Offset = "0xF53814", VA = "0xF53814")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xF538FC", Offset = "0xF538FC", VA = "0xF538FC")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xF539E4", Offset = "0xF539E4", VA = "0xF539E4")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xF53824", Offset = "0xF53824", VA = "0xF53824")]
		public void EnableSlowMotion()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xF5390C", Offset = "0xF5390C", VA = "0xF5390C")]
		public void DisableSlowMotion()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xF539E8", Offset = "0xF539E8", VA = "0xF539E8")]
		public void ToggleSlowMotion()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xF53AF8", Offset = "0xF53AF8", VA = "0xF53AF8")]
		public SlowMotionActions()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class StringToggleTransformAction : MonoBehaviour
	{
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xF2A4E0", Offset = "0xF2A4E0", VA = "0xF2A4E0")]
		public void ToggleString(string str)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xF2A550", Offset = "0xF2A550", VA = "0xF2A550")]
		public void EnableToggleString(string str)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xF2A5B4", Offset = "0xF2A5B4", VA = "0xF2A5B4")]
		public void DisableToggleString(string str)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xF2A618", Offset = "0xF2A618", VA = "0xF2A618")]
		public StringToggleTransformAction()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class SwitchLanguageSettingsAction : SettingsActionBase
	{
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xF2AF68", Offset = "0xF2AF68", VA = "0xF2AF68", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xF2AF70", Offset = "0xF2AF70", VA = "0xF2AF70", Slot = "6")]
		public override void OnButtonPress()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xF2B05C", Offset = "0xF2B05C", VA = "0xF2B05C")]
		public SwitchLanguageSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class SwitchMainSelectorMenuAction : MonoBehaviour
	{
		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text buttonText;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizationKey buttonTextPrefix;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool newLineAfterPrefix;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LocalizationKey buttonTextLeftHand;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizationKey buttonTextRightHand;

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xF2B064", Offset = "0xF2B064", VA = "0xF2B064")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xF2B334", Offset = "0xF2B334", VA = "0xF2B334")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xF2B45C", Offset = "0xF2B45C", VA = "0xF2B45C")]
		public void SwitchMainSelector()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xF2B194", Offset = "0xF2B194", VA = "0xF2B194")]
		public void UpdateMainSelectorText()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xF2B484", Offset = "0xF2B484", VA = "0xF2B484")]
		public SwitchMainSelectorMenuAction()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8BE4", Offset = "0x8A8BE4")]
	public class UiButtonSelectStateActions : MonoBehaviour
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onClickDefault;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onClickSelected;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UiButton button;

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x10B7284", Offset = "0x10B7284", VA = "0x10B7284")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x10B7378", Offset = "0x10B7378", VA = "0x10B7378")]
		private void OnButtonClick(string data)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x10B73B0", Offset = "0x10B73B0", VA = "0x10B73B0")]
		public UiButtonSelectStateActions()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class VRPlayerActions : MonoBehaviour
	{
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x10C264C", Offset = "0x10C264C", VA = "0x10C264C")]
		public void EnabledSmoothedHeadTracking()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x10C2708", Offset = "0x10C2708", VA = "0x10C2708")]
		public void DisableSmoothedHeadTracking()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x10C27C0", Offset = "0x10C27C0", VA = "0x10C27C0")]
		public void ToggleSmoothedHeadTracking()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x10C2894", Offset = "0x10C2894", VA = "0x10C2894")]
		public void EnabledSmoothedHandsTracking()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x10C2950", Offset = "0x10C2950", VA = "0x10C2950")]
		public void DisableSmoothedHandsTracking()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x10C2A08", Offset = "0x10C2A08", VA = "0x10C2A08")]
		public void ToggleSmoothedHandsTracking()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x10C2ADC", Offset = "0x10C2ADC", VA = "0x10C2ADC")]
		public VRPlayerActions()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public enum VignetteSetting
	{
		[Token(Token = "0x4000A09")]
		Full = 1,
		[Token(Token = "0x4000A0A")]
		Half,
		[Token(Token = "0x4000A0B")]
		None
	}
	[Token(Token = "0x20001C5")]
	public class VignetteSettingsAction : MultipleSettingsActionBase
	{
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xDFE404", Offset = "0xDFE404", VA = "0xDFE404", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xDFE4EC", Offset = "0xDFE4EC", VA = "0xDFE4EC", Slot = "5")]
		public override void OnButtonPress()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xDFE690", Offset = "0xDFE690", VA = "0xDFE690")]
		public VignetteSettingsAction()
		{
		}
	}
}
namespace Game.Tutorial
{
	[Token(Token = "0x20001C6")]
	public class SectorTutorialBattleLayer : SectorLayer
	{
		[Serializable]
		[Token(Token = "0x20001C7")]
		public class TutorialEngagement
		{
			[Token(Token = "0x4000A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string engagementName;

			[Token(Token = "0x4000A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorEngagementSlotLayer engagementSlotLayer;

			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0xFF8064", Offset = "0xFF8064", VA = "0xFF8064")]
			public TutorialEngagement()
			{
			}
		}

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4B68", Offset = "0x8B4B68")]
		[SerializeField]
		private TutorialEngagement[] engagements;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B4BB4", Offset = "0x8B4BB4")]
		private static SectorTutorialBattleLayer <Instance>k__BackingField;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TutorialEngagement currentEngagement;

		[Token(Token = "0x170001CE")]
		public static SectorTutorialBattleLayer Instance
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xE12B40", Offset = "0xE12B40", VA = "0xE12B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEA38", Offset = "0x8CEA38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0xE12BA4", Offset = "0xE12BA4", VA = "0xE12BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEA48", Offset = "0x8CEA48")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public static bool HasInstance
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xE12C10", Offset = "0xE12C10", VA = "0xE12C10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xE12CE8", Offset = "0xE12CE8", VA = "0xE12CE8", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xE12E44", Offset = "0xE12E44", VA = "0xE12E44", Slot = "9")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xE12FA0", Offset = "0xE12FA0", VA = "0xE12FA0", Slot = "5")]
		protected override void LoadLayerAction(LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xE13054", Offset = "0xE13054", VA = "0xE13054", Slot = "6")]
		protected override void UnloadLayerAction(UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, Action continueAction)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xE12FDC", Offset = "0xE12FDC", VA = "0xE12FDC")]
		private void SetupEngagements()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xE13068", Offset = "0xE13068", VA = "0xE13068")]
		public void StopEngagement()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xE130B8", Offset = "0xE130B8", VA = "0xE130B8")]
		public void StartEngagement(int index)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xE1314C", Offset = "0xE1314C", VA = "0xE1314C")]
		public SectorEngagementSlotLayer GetEngagement(int index)
		{
			return null;
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xE131B0", Offset = "0xE131B0", VA = "0xE131B0")]
		public SectorTutorialBattleLayer()
		{
		}
	}
}
namespace Game.Transforms
{
	[Token(Token = "0x20001C8")]
	public class ChildTransformController : MonoBehaviour
	{
		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool ignoreParentRotation;

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xFE83CC", Offset = "0xFE83CC", VA = "0xFE83CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xFE841C", Offset = "0xFE841C", VA = "0xFE841C")]
		public ChildTransformController()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class LookAtPlayerShipRotation : MonoBehaviour
	{
		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool rotateOnEnable;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool rotateOnLoadPrepare;

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xD5F564", Offset = "0xD5F564", VA = "0xD5F564")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xD5F80C", Offset = "0xD5F80C", VA = "0xD5F80C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xD5F8C8", Offset = "0xD5F8C8", VA = "0xD5F8C8")]
		private void LookOnLoadPrepare(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xD5F630", Offset = "0xD5F630", VA = "0xD5F630")]
		public void LookAtPlayerShip()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xD5F8CC", Offset = "0xD5F8CC", VA = "0xD5F8CC")]
		public LookAtPlayerShipRotation()
		{
		}
	}
}
namespace Game.Threats
{
	[Serializable]
	[Token(Token = "0x20001CA")]
	public struct ThreatLevelRewardsEveryRun
	{
		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xpBonusMultiplier;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SectorTag[] sectorTags;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizationKey[] additionalBonusTexts;
	}
	[Serializable]
	[Token(Token = "0x20001CB")]
	public struct ThreatLevelRewardsFirstRun
	{
		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int storyKeys;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LocalizationKey[] additionalBonusTexts;
	}
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A8C44", Offset = "0x8A8C44")]
	public class ThreatLevel : ScriptableObject
	{
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int order;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ThreatLevelRewardsEveryRun rewardsEveryRun;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ThreatLevelRewardsFirstRun rewardsFirstRun;

		[Token(Token = "0x170001D0")]
		public int Order
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0xF3418C", Offset = "0xF3418C", VA = "0xF3418C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D1")]
		public ThreatLevelRewardsEveryRun RewardsEveryRun
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xF34194", Offset = "0xF34194", VA = "0xF34194")]
			get
			{
				return default(ThreatLevelRewardsEveryRun);
			}
		}

		[Token(Token = "0x170001D2")]
		public ThreatLevelRewardsFirstRun RewardsFirstRun
		{
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0xF341A8", Offset = "0xF341A8", VA = "0xF341A8")]
			get
			{
				return default(ThreatLevelRewardsFirstRun);
			}
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xF341B4", Offset = "0xF341B4", VA = "0xF341B4")]
		public ThreatLevel()
		{
		}
	}
}
namespace Game.TechTree
{
	[Token(Token = "0x20001CD")]
	public class TechTreeActivationObjectBase : ScriptableObject
	{
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xF2B544", Offset = "0xF2B544", VA = "0xF2B544", Slot = "4")]
		public virtual void OnTechActivate()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xF2B548", Offset = "0xF2B548", VA = "0xF2B548", Slot = "5")]
		public virtual void OnTechDeActivate()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xF2B54C", Offset = "0xF2B54C", VA = "0xF2B54C", Slot = "6")]
		public virtual void OnTechResearched()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xF2B550", Offset = "0xF2B550", VA = "0xF2B550", Slot = "7")]
		public virtual void OnTechFetch(object collection)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xF2B554", Offset = "0xF2B554", VA = "0xF2B554")]
		public TechTreeActivationObjectBase()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class TechTreeCreator : MonoBehaviour
	{
		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4C24", Offset = "0x8B4C24")]
		private Transform nodesParent;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4C70", Offset = "0x8B4C70")]
		private Sprite nodeConnectionStraight;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite nodeConnectionCrooked;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TechTreeNode[] createdNodes;

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xF2B55C", Offset = "0xF2B55C", VA = "0xF2B55C")]
		public void OnAutoFormat()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xF2B560", Offset = "0xF2B560", VA = "0xF2B560")]
		public TechTreeCreator()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class TechTreeDisplay : GameMonoBehaviour
	{
		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4CCC", Offset = "0x8B4CCC")]
		private Transform nodeSelectedParent;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform nodeNotSelectedParent;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI nodeNameText;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI nodeInfoText;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4D48", Offset = "0x8B4D48")]
		private TextMeshProUGUI techTreeName;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<TechTreeTree> techTreeEntries;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TechTreeTree[] shipTreeEntries;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UiButton researchButton;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshProUGUI researchButtonText;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private StepIndicatorMenu stepIndicatorMenu;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4DE4", Offset = "0x8B4DE4")]
		private LocalizationKey researchButtonDefaultKey;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private LocalizationKey researchButtonDisplayCostKey;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private LocalizationKey researchButtonResearchedKey;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private LocalizationKey researchButtonBlockedKey;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4E60", Offset = "0x8B4E60")]
		private HapticPreset purchaseHapticPreset;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private HapticPreset resetTreeHapticPreset;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4EBC", Offset = "0x8B4EBC")]
		private SectorTag tutorialStepStoryTag;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int tutorialTreeIndex;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int selectedTreeIndex;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private TechTreeNode selectedNode;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int shipEntryIndex;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int nextTechTreeSelectIndex;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool HasResearchableNode;

		[Token(Token = "0x170001D3")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xF2B568", Offset = "0xF2B568", VA = "0xF2B568", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000033")]
		public static event Action OnHasResearchableNodeChanged
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xF2B570", Offset = "0xF2B570", VA = "0xF2B570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEA58", Offset = "0x8CEA58")]
			add
			{
			}
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xF2B668", Offset = "0xF2B668", VA = "0xF2B668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEA68", Offset = "0x8CEA68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public static event Action OnResearchPurchased
		{
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0xF2B760", Offset = "0xF2B760", VA = "0xF2B760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEA78", Offset = "0x8CEA78")]
			add
			{
			}
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xF2B858", Offset = "0xF2B858", VA = "0xF2B858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEA88", Offset = "0x8CEA88")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xF2B950", Offset = "0xF2B950", VA = "0xF2B950", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xF2BF00", Offset = "0xF2BF00", VA = "0xF2BF00")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xF2C21C", Offset = "0xF2C21C", VA = "0xF2C21C", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xF2C440", Offset = "0xF2C440", VA = "0xF2C440")]
		private void OnSaveFileChanged()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xF2BB70", Offset = "0xF2BB70", VA = "0xF2BB70")]
		private void SetupTrees()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xF2C444", Offset = "0xF2C444", VA = "0xF2C444")]
		public void SetSelectedNode(TechTreeNode node)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xF2C618", Offset = "0xF2C618", VA = "0xF2C618")]
		private void UpdateShipTrees()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xF2D144", Offset = "0xF2D144", VA = "0xF2D144")]
		private void UpdateResearchButtonState(TechTreeNode node)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xF2D3CC", Offset = "0xF2D3CC", VA = "0xF2D3CC")]
		private void OnPlayerShipUnlocked(SectorTag unlockedShipTag)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xF2D5DC", Offset = "0xF2D5DC", VA = "0xF2D5DC")]
		private void UpdateAllLinkColors()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xF2D864", Offset = "0xF2D864", VA = "0xF2D864")]
		private int GetUnlockedNodesTotalCostInTree(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xF2D950", Offset = "0xF2D950", VA = "0xF2D950")]
		public void PurchaseSelected()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xF2DEF0", Offset = "0xF2DEF0", VA = "0xF2DEF0")]
		public void ResetSelectedTree()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xF2E208", Offset = "0xF2E208", VA = "0xF2E208")]
		public void OnHangarButtonPressed()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xF2C0BC", Offset = "0xF2C0BC", VA = "0xF2C0BC")]
		public void SelectTree(int index)
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xF2E328", Offset = "0xF2E328", VA = "0xF2E328")]
		public void GoToNextTree()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xF2E388", Offset = "0xF2E388", VA = "0xF2E388")]
		public void GoToPreviousTree()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xF2E3E8", Offset = "0xF2E3E8", VA = "0xF2E3E8")]
		public void OnHide()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xF2E3F0", Offset = "0xF2E3F0", VA = "0xF2E3F0")]
		private void OnExperienceChange(int previousAmount, int newAmount)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xF2BD04", Offset = "0xF2BD04", VA = "0xF2BD04")]
		private void SetHasResearchableNode()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xF2E46C", Offset = "0xF2E46C", VA = "0xF2E46C")]
		public TechTreeDisplay()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class TechTreeLink : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001D1")]
		private class NodeLink
		{
			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform linkTransform;

			[Token(Token = "0x4000A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image linkImage;

			[Token(Token = "0x4000A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TechTreeNode toNode;

			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0xEA03EC", Offset = "0xEA03EC", VA = "0xEA03EC")]
			public NodeLink()
			{
			}
		}

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<NodeLink> nodeLinks;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 imageDeltaSize;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Sprite straightLinkSprite;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Sprite crookedLinkSprite;

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xF2E54C", Offset = "0xF2E54C", VA = "0xF2E54C")]
		public void SetupLink(Sprite straightLink, Sprite crookedLink)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xF2E6F0", Offset = "0xF2E6F0", VA = "0xF2E6F0")]
		public void ActivateLink(TechTreeNode.NodeConnection node)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xF2D67C", Offset = "0xF2D67C", VA = "0xF2D67C")]
		public void UpdateLinkColors()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xF2EB44", Offset = "0xF2EB44", VA = "0xF2EB44")]
		public TechTreeLink()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class TechTreeNode : GameMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001D3")]
		public struct NodeConnection
		{
			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5164", Offset = "0x8B5164")]
			public RectTransform nextNode;

			[Token(Token = "0x4000A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B519C", Offset = "0x8B519C")]
			public float nextNodeVerticalSpacing;

			[Token(Token = "0x4000A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B51D4", Offset = "0x8B51D4")]
			public int nextNodeRow;
		}

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TechTreeNodeObject nodeObject;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4F68", Offset = "0x8B4F68")]
		[SerializeField]
		private UiButton button;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image border;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI levelText;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject notificationObject;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4FF4", Offset = "0x8B4FF4")]
		private Color selectedColor;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Color availableColor;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color researchedColor;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Color blockedColor;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5070", Offset = "0x8B5070")]
		[SerializeField]
		private List<NodeConnection> nodeLinks;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B50BC", Offset = "0x8B50BC")]
		[SerializeField]
		private TechTreeLink techTreeLink;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5108", Offset = "0x8B5108")]
		private UnityEvent onPurchase;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Action<TechTreeNode> onSelected;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B5154", Offset = "0x8B5154")]
		private bool <IsBlocked>k__BackingField;

		[Token(Token = "0x170001D4")]
		public string Id
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xF2E1EC", Offset = "0xF2E1EC", VA = "0xF2E1EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		public bool CanAfford
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xF2EB4C", Offset = "0xF2EB4C", VA = "0xF2EB4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D6")]
		public bool IsResearched
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0xF2D2D8", Offset = "0xF2D2D8", VA = "0xF2D2D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D7")]
		public bool IsBlocked
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0xF2EC30", Offset = "0xF2EC30", VA = "0xF2EC30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEA98", Offset = "0x8CEA98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0xF2EC38", Offset = "0xF2EC38", VA = "0xF2EC38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEAA8", Offset = "0x8CEAA8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public bool IsResearchable
		{
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0xF2D278", Offset = "0xF2D278", VA = "0xF2D278")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D9")]
		public int Cost
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0xF2D2BC", Offset = "0xF2D2BC", VA = "0xF2D2BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xF2EC44", Offset = "0xF2EC44", VA = "0xF2EC44")]
		public void SetOnSelected(Action<TechTreeNode> onSelected)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xF2CA44", Offset = "0xF2CA44", VA = "0xF2CA44")]
		public void SetNodeName(ref TextMeshProUGUI nameText)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xF2CDC4", Offset = "0xF2CDC4", VA = "0xF2CDC4")]
		public void SetNodeInfo(ref TextMeshProUGUI infoText)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xF2EC4C", Offset = "0xF2EC4C", VA = "0xF2EC4C")]
		public void SetUpNode(Sprite nodeLinkStraight, Sprite nodeLinkCrooked)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xF2F0CC", Offset = "0xF2F0CC", VA = "0xF2F0CC")]
		public void OnPressed()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xF2DB08", Offset = "0xF2DB08", VA = "0xF2DB08")]
		public bool TryPurchase()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xF2DC3C", Offset = "0xF2DC3C", VA = "0xF2DC3C")]
		public void UpdateNodeColorState()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xF2F12C", Offset = "0xF2F12C", VA = "0xF2F12C")]
		public void UpdateNotificationState()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xF2DED8", Offset = "0xF2DED8", VA = "0xF2DED8")]
		public void UpdateOutgoingLinksColorState()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xF2EAD0", Offset = "0xF2EAD0", VA = "0xF2EAD0")]
		public Color GetNodeColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xF2DCFC", Offset = "0xF2DCFC", VA = "0xF2DCFC")]
		public void UpdateConnectedNodesState()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xF2F198", Offset = "0xF2F198", VA = "0xF2F198", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xF2EC84", Offset = "0xF2EC84", VA = "0xF2EC84")]
		private void LinkNextNode()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xF2EF5C", Offset = "0xF2EF5C", VA = "0xF2EF5C")]
		private void SetupNodeObjectValues()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xF2F250", Offset = "0xF2F250", VA = "0xF2F250")]
		private static string ToRomanNumeral(int i)
		{
			return null;
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xF2F378", Offset = "0xF2F378", VA = "0xF2F378", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xF2F428", Offset = "0xF2F428", VA = "0xF2F428")]
		public TechTreeNode()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A8CB0", Offset = "0x8A8CB0")]
	public class TechTreeNodeObject : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20001D5")]
		public struct NestedSpliceParameter
		{
			[Token(Token = "0x4000A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string spliceKey;

			[Token(Token = "0x4000A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LocalizationKey spliceLocalizationKey;

			[Token(Token = "0x4000A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string valueSplice;
		}

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string id;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8B521C", Offset = "0x8B521C")]
		[SerializeField]
		private SectorTag upgradeTag;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int level;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BuffObject[] buffs;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SectorTag unlockTag;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int cost;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SectorTag playerShipTag;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B52B8", Offset = "0x8B52B8")]
		private LocalizationKey nameKey;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string nameValueSplice;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private List<NestedSpliceParameter> nameNestedSplices;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private LocalizationKey infoKey;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string infoValueSplice;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private List<NestedSpliceParameter> infoNestedSplices;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B5354", Offset = "0x8B5354")]
		private Sprite icon;

		[Token(Token = "0x170001DA")]
		public string Id
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0xF2F4AC", Offset = "0xF2F4AC", VA = "0xF2F4AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		public SectorTag UpgradeTag
		{
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0xF2F4B4", Offset = "0xF2F4B4", VA = "0xF2F4B4")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x170001DC")]
		public int Level
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0xF2F4C0", Offset = "0xF2F4C0", VA = "0xF2F4C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DD")]
		public BuffObject[] Buffs
		{
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0xF2F4C8", Offset = "0xF2F4C8", VA = "0xF2F4C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		public string UnlockTag
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0xF2F4D0", Offset = "0xF2F4D0", VA = "0xF2F4D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public int Cost
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0xF2F534", Offset = "0xF2F534", VA = "0xF2F534")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E0")]
		public SectorTag PlayerShipTag
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0xF2F53C", Offset = "0xF2F53C", VA = "0xF2F53C")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x170001E1")]
		public LocalizationKey NameKey
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0xF2F548", Offset = "0xF2F548", VA = "0xF2F548")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x170001E2")]
		public string NameValueSplice
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0xF2F554", Offset = "0xF2F554", VA = "0xF2F554")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		public IReadOnlyList<NestedSpliceParameter> NameNestedSplices
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0xF2F55C", Offset = "0xF2F55C", VA = "0xF2F55C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public LocalizationKey InfoKey
		{
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0xF2F564", Offset = "0xF2F564", VA = "0xF2F564")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x170001E5")]
		public string InfoValueSplice
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0xF2F570", Offset = "0xF2F570", VA = "0xF2F570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		public IReadOnlyList<NestedSpliceParameter> InfoNestedSplices
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xF2F578", Offset = "0xF2F578", VA = "0xF2F578")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public Sprite Icon
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0xF2F580", Offset = "0xF2F580", VA = "0xF2F580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xF2F588", Offset = "0xF2F588", VA = "0xF2F588")]
		public TechTreeNodeObject()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class TechTreeRewards : MonoBehaviourSingleton<TechTreeRewards>
	{
		[Token(Token = "0x20001D7")]
		private class RewardsGroup
		{
			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<BuffObject> techTreeBuffs;

			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<string> unlockTags;

			[Token(Token = "0x6000C24")]
			[Address(RVA = "0xEA0478", Offset = "0xEA0478", VA = "0xEA0478")]
			public void Clear()
			{
			}

			[Token(Token = "0x6000C25")]
			[Address(RVA = "0xEA04F0", Offset = "0xEA04F0", VA = "0xEA04F0")]
			public RewardsGroup()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8D1C", Offset = "0x8A8D1C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<RewardsGroup> <>9__12_0;

			[Token(Token = "0x6000C27")]
			[Address(RVA = "0xEA0458", Offset = "0xEA0458", VA = "0xEA0458")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C28")]
			[Address(RVA = "0xEA0460", Offset = "0xEA0460", VA = "0xEA0460")]
			internal void <Clear>b__12_0(RewardsGroup rg)
			{
			}
		}

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TechTreeNodeObject[] techTreeNodeObjects;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TechTreeNodeObject> techTreeNodesById;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<SectorTag, TechTreeNodeObject> highestUnlockedTechTreeNodeByUpgradeTag;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RewardsGroup genericRewards;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<SectorTag, RewardsGroup> shipRewards;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B53A0", Offset = "0x8B53A0")]
		private bool <UnlockDataFilesWithXP>k__BackingField;

		[Token(Token = "0x170001E8")]
		public bool UnlockDataFilesWithXP
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0xF2F640", Offset = "0xF2F640", VA = "0xF2F640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEAB8", Offset = "0x8CEAB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0xF2F648", Offset = "0xF2F648", VA = "0xF2F648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEAC8", Offset = "0x8CEAC8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xF2F654", Offset = "0xF2F654", VA = "0xF2F654")]
		private void TrySetupTechTreeNodesByIdMap()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xF2F780", Offset = "0xF2F780", VA = "0xF2F780")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xF2F7D4", Offset = "0xF2F7D4", VA = "0xF2F7D4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xF2F98C", Offset = "0xF2F98C", VA = "0xF2F98C")]
		public void Setup()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xF2FA58", Offset = "0xF2FA58", VA = "0xF2FA58")]
		public void Setup(List<string> unlockedNodeIds)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xF30320", Offset = "0xF30320", VA = "0xF30320")]
		public void FetchUnlockTags(SectorTagsInput runUnlockTags, string shipIdentifier)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xF30634", Offset = "0xF30634", VA = "0xF30634")]
		public List<BuffObject> GetTechTreeBuffs(string shipIdentifier)
		{
			return null;
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xF30748", Offset = "0xF30748", VA = "0xF30748")]
		public List<BuffObject> GetTechTreeBuffsByUpgradeTag(SectorTag upgradeTag)
		{
			return null;
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xF30220", Offset = "0xF30220", VA = "0xF30220")]
		private RewardsGroup GetShipRewardsGroup(SectorTag playerShipTag)
		{
			return null;
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xF3086C", Offset = "0xF3086C", VA = "0xF3086C")]
		public TechTreeRewards()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class TechTreeSettingsEnableAutoCollect : MonoBehaviour
	{
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xF30A0C", Offset = "0xF30A0C", VA = "0xF30A0C")]
		public void EnableSetting()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xF30AD0", Offset = "0xF30AD0", VA = "0xF30AD0")]
		public TechTreeSettingsEnableAutoCollect()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class TechTreeSettingsEnableAutoScan : MonoBehaviour
	{
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xF30AD8", Offset = "0xF30AD8", VA = "0xF30AD8")]
		public void EnableSetting()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xF30B9C", Offset = "0xF30B9C", VA = "0xF30B9C")]
		public TechTreeSettingsEnableAutoScan()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class TechTreeSettingsEnableScanInfo : MonoBehaviour
	{
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xF30BA4", Offset = "0xF30BA4", VA = "0xF30BA4")]
		public void EnableSetting()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xF30C68", Offset = "0xF30C68", VA = "0xF30C68")]
		public TechTreeSettingsEnableScanInfo()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class TechTreeTree : GameMonoBehaviour
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LocalizationKey nameKey;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int hangarIndex;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SectorTag treeTag;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TechTreeNode[] nodes;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent onTreeShow;

		[Token(Token = "0x170001E9")]
		public TechTreeNode[] Nodes
		{
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0xF30C70", Offset = "0xF30C70", VA = "0xF30C70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xF2C918", Offset = "0xF2C918", VA = "0xF2C918")]
		public void Setup(Action<TechTreeNode> setSelected)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xF30C78", Offset = "0xF30C78", VA = "0xF30C78")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xF2E278", Offset = "0xF2E278", VA = "0xF2E278")]
		public void OnHangarButtonPressed()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xF2E2E4", Offset = "0xF2E2E4", VA = "0xF2E2E4")]
		public void SetTreeName(ref TextMeshProUGUI nameText)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xF2E3F4", Offset = "0xF2E3F4", VA = "0xF2E3F4")]
		public bool IsResearchableNodeInTree()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xF30C8C", Offset = "0xF30C8C", VA = "0xF30C8C")]
		public TechTreeTree()
		{
		}
	}
}
namespace Game.Space
{
	[Serializable]
	[Token(Token = "0x20001DD")]
	public class DamageIndicator
	{
		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ParticleSystem shieldBreakFX;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject healthbarPrefabOverride;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool disableHealthbar;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5400", Offset = "0x8B5400")]
		[SerializeField]
		private HapticPreset shieldBreakHapticPreset;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticPreset lowHealthHapticPreset;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private HapticPreset shieldDamageHapticPreset;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float shieldDamageHapticThreshold;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private HapticPreset healthDamageHapticPreset;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float healthDamageHapticThreshold;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material shieldMaterial;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material objectMaterial;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly string damageString;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly string shieldString;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly string freezeString;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float currentShield;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float shieldTarget;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly float freezeDamageTime;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float shieldFreezeDamageIndicator;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float objectFreezeDamageIndicator;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private readonly float shieldDamageTime;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float shieldDamageIndicator;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private readonly float objectDamageTime;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float objectDamageIndicator;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IDamagable owner;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Healthbar healthbar;

		[Token(Token = "0x170001EA")]
		public bool HasHealthbar
		{
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0xC4B134", Offset = "0xC4B134", VA = "0xC4B134")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xC4B1A0", Offset = "0xC4B1A0", VA = "0xC4B1A0")]
		public void Create(IDamagable owner)
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xC4B4D4", Offset = "0xC4B4D4", VA = "0xC4B4D4")]
		public void Setup(IDamagable owner)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xC4B6C8", Offset = "0xC4B6C8", VA = "0xC4B6C8")]
		public void ShowHealthbar()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xC4B9AC", Offset = "0xC4B9AC", VA = "0xC4B9AC")]
		public void HideHealthbar()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xC4BA40", Offset = "0xC4BA40", VA = "0xC4BA40")]
		public void RemoveHealthbar()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xC4BB08", Offset = "0xC4BB08", VA = "0xC4BB08")]
		public void IndicateDamage(IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xC4BED4", Offset = "0xC4BED4", VA = "0xC4BED4")]
		public void CheckShieldBreak(float previousShield, float newShield)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xC4C02C", Offset = "0xC4C02C", VA = "0xC4C02C")]
		public void IndicateLowHealth()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xC4C10C", Offset = "0xC4C10C", VA = "0xC4C10C")]
		public void IndicateHealing()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xC4B91C", Offset = "0xC4B91C", VA = "0xC4B91C")]
		public void RefreshHealthbar()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xC4C19C", Offset = "0xC4C19C", VA = "0xC4C19C")]
		public void Update(float delta)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xC4C394", Offset = "0xC4C394", VA = "0xC4C394")]
		public DamageIndicator()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public interface IEnergyBarAbility
	{
		[Token(Token = "0x170001EB")]
		int MaxUses
		{
			[Token(Token = "0x6000C43")]
			get;
		}

		[Token(Token = "0x170001EC")]
		int Uses
		{
			[Token(Token = "0x6000C44")]
			get;
		}

		[Token(Token = "0x170001ED")]
		float Cooldown
		{
			[Token(Token = "0x6000C45")]
			get;
		}

		[Token(Token = "0x170001EE")]
		float CooldownTimer
		{
			[Token(Token = "0x6000C46")]
			get;
		}

		[Token(Token = "0x170001EF")]
		float Duration
		{
			[Token(Token = "0x6000C47")]
			get;
		}

		[Token(Token = "0x170001F0")]
		bool DisplayAsEnergyBar
		{
			[Token(Token = "0x6000C48")]
			get;
		}

		[Token(Token = "0x170001F1")]
		ShipAbilityActive.AbilityStatusChange OnAbilityActivated
		{
			[Token(Token = "0x6000C49")]
			get;
			[Token(Token = "0x6000C4A")]
			set;
		}

		[Token(Token = "0x170001F2")]
		ShipAbilityActive.AbilityStatusChange OnAbilityRecharge
		{
			[Token(Token = "0x6000C4B")]
			get;
			[Token(Token = "0x6000C4C")]
			set;
		}

		[Token(Token = "0x170001F3")]
		ShipAbilityActive.AbilityStatusChange OnAbilityCooldownUpdated
		{
			[Token(Token = "0x6000C4D")]
			get;
			[Token(Token = "0x6000C4E")]
			set;
		}
	}
	[Token(Token = "0x20001DF")]
	public class Healthbar : GameMonoBehaviour
	{
		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B549C", Offset = "0x8B549C")]
		private Canvas barCanvas;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform healthParent;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LookAtCameraTransform lookAt;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float minRefillTime;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5518", Offset = "0x8B5518")]
		[SerializeField]
		private StatusBarObject healthBarObject;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StatusBarObject shieldBarObject;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private StatusBarObject energyBarObject;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5584", Offset = "0x8B5584")]
		[SerializeField]
		private Image[] healthBarImages;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Color healthBarColorNeutral;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color healthBarColorFriendly;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Color healthBarColorHostile;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5600", Offset = "0x8B5600")]
		[SerializeField]
		private UnityEvent onHideHealthbar;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private UnityEvent onHideShieldBar;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private UnityEvent onHideEnergyBar;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float boundsY;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IDamagable owner;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IEnergyBarAbility energyAbility;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool visible;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool initialBarVisibility;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float previousTimecodeChange;

		[Token(Token = "0x170001F4")]
		private bool HealthBarVisible
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0xE39A08", Offset = "0xE39A08", VA = "0xE39A08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F5")]
		private bool ShieldBarVisible
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0xE39A3C", Offset = "0xE39A3C", VA = "0xE39A3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F6")]
		private bool EnergyBarVisible
		{
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0xE39B20", Offset = "0xE39B20", VA = "0xE39B20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F7")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0xE39C60", Offset = "0xE39C60", VA = "0xE39C60", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0xE39C68", Offset = "0xE39C68", VA = "0xE39C68", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xE39C6C", Offset = "0xE39C6C", VA = "0xE39C6C", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xE39DC0", Offset = "0xE39DC0", VA = "0xE39DC0", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xE3A6D8", Offset = "0xE3A6D8", VA = "0xE3A6D8")]
		public void Setup(IDamagable owner)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xE3C250", Offset = "0xE3C250", VA = "0xE3C250")]
		private void OnFactionAffinityChange(string factionName, FactionAffinity previousAffinity, FactionAffinity newAffinity)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xE3C334", Offset = "0xE3C334", VA = "0xE3C334")]
		private void OnOwnerFactionChange(Faction previousFaction, Faction newFaction)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xE3C338", Offset = "0xE3C338", VA = "0xE3C338")]
		private void OnOwnerHealthChange(float prevValue, float newValue)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xE3C33C", Offset = "0xE3C33C", VA = "0xE3C33C")]
		private void OwnerPassiveAbilitiesChanged(SpaceShip.AbilityChangeType type, ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xE3C34C", Offset = "0xE3C34C", VA = "0xE3C34C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xE3C350", Offset = "0xE3C350", VA = "0xE3C350")]
		public void IndicateDamage()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xE3C354", Offset = "0xE3C354", VA = "0xE3C354")]
		public void IndicateHealing()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xE3BB8C", Offset = "0xE3BB8C", VA = "0xE3BB8C")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xE3C358", Offset = "0xE3C358", VA = "0xE3C358")]
		private void OnUpdateEnergyBarVisible(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xE3B4DC", Offset = "0xE3B4DC", VA = "0xE3B4DC")]
		private void UpdateValues()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xE3BD50", Offset = "0xE3BD50", VA = "0xE3BD50")]
		private void UpdateEnergyValue()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xE3C9C8", Offset = "0xE3C9C8", VA = "0xE3C9C8")]
		private void ForceUpdateEnergyValue()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xE3C868", Offset = "0xE3C868", VA = "0xE3C868")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xE3B9D4", Offset = "0xE3B9D4", VA = "0xE3B9D4")]
		private void UpdateHealthBarColor()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xE3CC3C", Offset = "0xE3CC3C", VA = "0xE3CC3C")]
		public Healthbar()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class HealthbarCountdown : GameMonoBehaviour
	{
		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float warningThresholdInSeconds;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve warningThresholdAlphaCurve;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject countdownParent;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text timerText;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B56AC", Offset = "0x8B56AC")]
		[SerializeField]
		private SfxTrigger warningSfx;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float warningSfxInterval;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RunCountdownAction countdownAction;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextWarningSoundTimeInSeconds;

		[Token(Token = "0x170001F8")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0xE3CCA0", Offset = "0xE3CCA0", VA = "0xE3CCA0", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F9")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0xE3CCA8", Offset = "0xE3CCA8", VA = "0xE3CCA8", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xE3CCB0", Offset = "0xE3CCB0", VA = "0xE3CCB0", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xE3CE48", Offset = "0xE3CE48", VA = "0xE3CE48", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xE3CFC8", Offset = "0xE3CFC8", VA = "0xE3CFC8", Slot = "32")]
		protected override void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xE3D31C", Offset = "0xE3D31C", VA = "0xE3D31C")]
		private void OnCountdownStart(RunCountdownAction countdownAbility)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xE3D360", Offset = "0xE3D360", VA = "0xE3D360")]
		private void OnCountdownStop(RunCountdownAction countdownAbility)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xE3D380", Offset = "0xE3D380", VA = "0xE3D380")]
		public HealthbarCountdown()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8D2C", Offset = "0x8A8D2C")]
	public class SpaceEntity : SpaceObject
	{
		[Token(Token = "0x20001E2")]
		public enum GizmoDisplayMode
		{
			[Token(Token = "0x4000ABE")]
			Hidden,
			[Token(Token = "0x4000ABF")]
			WhenSelected,
			[Token(Token = "0x4000AC0")]
			Always
		}

		[Token(Token = "0x20001E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8D8C", Offset = "0x8A8D8C")]
		private sealed class <TeleportToRoutine>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpaceEntity <>4__this;

			[Token(Token = "0x4000AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float teleportJumpSpeedMultiplier;

			[Token(Token = "0x4000AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool doTeleportTo;

			[Token(Token = "0x4000AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 destination;

			[Token(Token = "0x4000AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<SpaceEntity> onBeforeTeleport;

			[Token(Token = "0x4000AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion rotation;

			[Token(Token = "0x4000AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<SpaceEntity> onAfterTeleport;

			[Token(Token = "0x4000ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private SpaceEntityVisuals <visuals>5__2;

			[Token(Token = "0x4000ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TeleportGroup <teleportEffects>5__3;

			[Token(Token = "0x4000ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private float <timer>5__4;

			[Token(Token = "0x17000206")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C9E")]
				[Address(RVA = "0x10026E8", Offset = "0x10026E8", VA = "0x10026E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000207")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CA0")]
				[Address(RVA = "0x1002730", Offset = "0x1002730", VA = "0x1002730", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x1001DC4", Offset = "0x1001DC4", VA = "0x1001DC4")]
			[DebuggerHidden]
			public <TeleportToRoutine>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x1001DF0", Offset = "0x1001DF0", VA = "0x1001DF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x1001DF4", Offset = "0x1001DF4", VA = "0x1001DF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x10026F0", Offset = "0x10026F0", VA = "0x10026F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AA7")]
		private const float LOWEST_TELEPORT_VALUE = 0.1f;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5708", Offset = "0x8B5708")]
		[SerializeField]
		private SpaceEntitySteering steering;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private Vector3 deathRotationTorqueStart;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		private Vector3 deathRotationTorqueEnd;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		public GizmoDisplayMode gizmoDisplay;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B5784", Offset = "0x8B5784")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5784", Offset = "0x8B5784")]
		private bool disableSteering;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21D")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B57F4", Offset = "0x8B57F4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B57F4", Offset = "0x8B57F4")]
		private bool disableHeading;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5864", Offset = "0x8B5864")]
		private TeleportType teleportType;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[SerializeField]
		private float teleportAnticipationTime;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B58E0", Offset = "0x8B58E0")]
		private float <Speed>k__BackingField;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B58F0", Offset = "0x8B58F0")]
		private float <SpeedNormalized>k__BackingField;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B5900", Offset = "0x8B5900")]
		private float <BreakingForce>k__BackingField;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public SpaceEntitySteering.SteerParameters steerParams;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public SpaceEntitySteering.RotateParameters rotateParams;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Coroutine teleportRoutine;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private bool isCruzing;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private FlagGroup disableSteeringGroup;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private AsyncFlag disableSteeringFlag;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private FlagGroup disableHeadingGroup;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private AsyncFlag disableHeadingFlag;

		[Token(Token = "0x170001FA")]
		public SpaceEntitySteering Steering
		{
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0xF53B08", Offset = "0xF53B08", VA = "0xF53B08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0xF53B10", Offset = "0xF53B10", VA = "0xF53B10")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public bool DisableSteering
		{
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0xF53C34", Offset = "0xF53C34", VA = "0xF53C34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		public bool DisableHeading
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0xF53C48", Offset = "0xF53C48", VA = "0xF53C48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FD")]
		public float Speed
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xF53EEC", Offset = "0xF53EEC", VA = "0xF53EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEB18", Offset = "0x8CEB18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0xF53EF4", Offset = "0xF53EF4", VA = "0xF53EF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEB28", Offset = "0x8CEB28")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public float SpeedNormalized
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0xF53EFC", Offset = "0xF53EFC", VA = "0xF53EFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEB38", Offset = "0x8CEB38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0xF53F04", Offset = "0xF53F04", VA = "0xF53F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEB48", Offset = "0x8CEB48")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public float BreakingForce
		{
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0xF53F0C", Offset = "0xF53F0C", VA = "0xF53F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEB58", Offset = "0x8CEB58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0xF53F14", Offset = "0xF53F14", VA = "0xF53F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEB68", Offset = "0x8CEB68")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public bool IsTeleporting
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0xF53F1C", Offset = "0xF53F1C", VA = "0xF53F1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000201")]
		public TeleportType TeleportType
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0xF53F2C", Offset = "0xF53F2C", VA = "0xF53F2C")]
			get
			{
				return default(TeleportType);
			}
		}

		[Token(Token = "0x17000202")]
		public float TeleportAnticipationTime
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0xF53F34", Offset = "0xF53F34", VA = "0xF53F34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000203")]
		public float TeleportDurationTime
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0xF53F3C", Offset = "0xF53F3C", VA = "0xF53F3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000204")]
		protected override bool EnableOnFixedUpdate
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0xF53FF4", Offset = "0xF53FF4", VA = "0xF53FF4", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0xF53FFC", Offset = "0xF53FFC", VA = "0xF53FFC", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		protected override UpdateWaitMode WaitOnFixedUpdate
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0xF54000", Offset = "0xF54000", VA = "0xF54000", Slot = "26")]
			get
			{
				return default(UpdateWaitMode);
			}
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0xF54008", Offset = "0xF54008", VA = "0xF54008", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event FlagGroup.FlagChange OnDisableSteeringChanged
		{
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0xF53C5C", Offset = "0xF53C5C", VA = "0xF53C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEAD8", Offset = "0x8CEAD8")]
			add
			{
			}
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0xF53D00", Offset = "0xF53D00", VA = "0xF53D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEAE8", Offset = "0x8CEAE8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event FlagGroup.FlagChange OnDisableHeadingChanged
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xF53DA4", Offset = "0xF53DA4", VA = "0xF53DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEAF8", Offset = "0x8CEAF8")]
			add
			{
			}
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0xF53E48", Offset = "0xF53E48", VA = "0xF53E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEB08", Offset = "0x8CEB08")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xF5400C", Offset = "0xF5400C", VA = "0xF5400C")]
		protected void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xF54184", Offset = "0xF54184", VA = "0xF54184")]
		protected void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xF54020", Offset = "0xF54020", VA = "0xF54020")]
		private void DrawGizmos()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xF54198", Offset = "0xF54198", VA = "0xF54198", Slot = "30")]
		protected override void OnGameStart()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xF54264", Offset = "0xF54264", VA = "0xF54264", Slot = "82")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xF54268", Offset = "0xF54268", VA = "0xF54268", Slot = "83")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xF5427C", Offset = "0xF5427C", VA = "0xF5427C", Slot = "78")]
		protected override void Die(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xF54354", Offset = "0xF54354", VA = "0xF54354", Slot = "34")]
		protected override void OnFixedUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xF54CBC", Offset = "0xF54CBC", VA = "0xF54CBC", Slot = "84")]
		protected virtual void OnAccelerate()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xF54CC0", Offset = "0xF54CC0", VA = "0xF54CC0", Slot = "85")]
		protected virtual void OnBreak()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xF549BC", Offset = "0xF549BC", VA = "0xF549BC")]
		public AsyncFlag CreateDisableSteeringInstance()
		{
			return null;
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xF54AA4", Offset = "0xF54AA4", VA = "0xF54AA4")]
		public AsyncFlag CreateDisableHeadingInstance()
		{
			return null;
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xF54B8C", Offset = "0xF54B8C", VA = "0xF54B8C")]
		public void UpdateSpeedMultipliers()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xF54CC4", Offset = "0xF54CC4", VA = "0xF54CC4")]
		public void TeleportTo(Vector3 position)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xF54D40", Offset = "0xF54D40", VA = "0xF54D40")]
		public void TeleportTo(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xF46B1C", Offset = "0xF46B1C", VA = "0xF46B1C")]
		public void TeleportTo(Vector3 destination, Quaternion rotation, bool doTeleportTo = true, [System.Runtime.InteropServices.Optional] Action<SpaceEntity> onBeforeTeleport, [System.Runtime.InteropServices.Optional] Action<SpaceEntity> onAfterTeleport, float teleportJumpSpeedMultiplier = 1f)
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xF54E4C", Offset = "0xF54E4C", VA = "0xF54E4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CEB78", Offset = "0x8CEB78")]
		private IEnumerator TeleportToRoutine(Vector3 destination, Quaternion rotation, bool doTeleportTo = true, [System.Runtime.InteropServices.Optional] Action<SpaceEntity> onBeforeTeleport, [System.Runtime.InteropServices.Optional] Action<SpaceEntity> onAfterTeleport, float teleportJumpSpeedMultiplier = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xF54C9C", Offset = "0xF54C9C", VA = "0xF54C9C")]
		public static Vector3 AddTorqueConstraints(RigidbodyConstraints constraints, Vector3 torque)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xF54F5C", Offset = "0xF54F5C", VA = "0xF54F5C")]
		public static bool IsGizmoDisplayed(GizmoDisplayMode mode, GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xF54F68", Offset = "0xF54F68", VA = "0xF54F68")]
		public static bool IsGameObjectEditorSelected(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xF54F70", Offset = "0xF54F70", VA = "0xF54F70")]
		public SpaceEntity()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xF55074", Offset = "0xF55074", VA = "0xF55074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEBD8", Offset = "0x8CEBD8")]
		private void <CreateDisableSteeringInstance>b__67_0(bool a, bool b)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xF55090", Offset = "0xF55090", VA = "0xF55090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEBE8", Offset = "0x8CEBE8")]
		private void <CreateDisableHeadingInstance>b__68_0(bool a, bool b)
		{
		}
	}
	[Token(Token = "0x20001E4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A8D9C", Offset = "0x8A8D9C")]
	public class SpaceEntitySteering : ScriptableObject
	{
		[Token(Token = "0x20001E5")]
		public enum PositionType
		{
			[Token(Token = "0x4000AE0")]
			Point,
			[Token(Token = "0x4000AE1")]
			Transform,
			[Token(Token = "0x4000AE2")]
			Delegate,
			[Token(Token = "0x4000AE3")]
			DelegateWithReference
		}

		[Token(Token = "0x20001E6")]
		public struct PositionData
		{
			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 point;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object data;

			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x1002884", Offset = "0x1002884", VA = "0x1002884")]
			public PositionData(Vector3 point, [System.Runtime.InteropServices.Optional] Transform transform, [System.Runtime.InteropServices.Optional] object data)
			{
			}

			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x10028C0", Offset = "0x10028C0", VA = "0x10028C0")]
			public PositionData(Transform transform, [System.Runtime.InteropServices.Optional] object data)
			{
			}

			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0xFF9384", Offset = "0xFF9384", VA = "0xFF9384")]
			public static implicit operator PositionData(Vector3 point)
			{
				return default(PositionData);
			}

			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x1002924", Offset = "0x1002924", VA = "0x1002924")]
			public static implicit operator PositionData(Transform transform)
			{
				return default(PositionData);
			}
		}

		[Token(Token = "0x20001E7")]
		public delegate PositionData SteerPositionDelegate();

		[Token(Token = "0x20001E8")]
		public delegate PositionData SteerPositionReferenceDelegate(Transform transform);

		[Token(Token = "0x20001E9")]
		public struct SteerPosition
		{
			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PositionType type;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 point;

			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object data;

			[Token(Token = "0x4000AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteerPositionDelegate delegateAction;

			[Token(Token = "0x4000AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SteerPositionReferenceDelegate delegateReferenceAction;

			[Token(Token = "0x4000AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform delegateTransform;

			[Token(Token = "0x17000212")]
			public Vector3 Position
			{
				[Token(Token = "0x6000CC6")]
				[Address(RVA = "0xFF88E8", Offset = "0xFF88E8", VA = "0xFF88E8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000213")]
			public Transform Transform
			{
				[Token(Token = "0x6000CC7")]
				[Address(RVA = "0x1003434", Offset = "0x1003434", VA = "0x1003434")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000214")]
			public object Data
			{
				[Token(Token = "0x6000CC8")]
				[Address(RVA = "0x10035A0", Offset = "0x10035A0", VA = "0x10035A0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000215")]
			public (Vector3, Transform) PositionAndTransform
			{
				[Token(Token = "0x6000CCC")]
				[Address(RVA = "0x10036C8", Offset = "0x10036C8", VA = "0x10036C8")]
				get
				{
					return default((Vector3, Transform));
				}
			}

			[Token(Token = "0x17000216")]
			public (Vector3, object) PositionAndData
			{
				[Token(Token = "0x6000CCD")]
				[Address(RVA = "0x10037AC", Offset = "0x10037AC", VA = "0x10037AC")]
				get
				{
					return default((Vector3, object));
				}
			}

			[Token(Token = "0x17000217")]
			public (Vector3, Transform, object) PositionAndTransformAndData
			{
				[Token(Token = "0x6000CCE")]
				[Address(RVA = "0x1003818", Offset = "0x1003818", VA = "0x1003818")]
				get
				{
					return default((Vector3, Transform, object));
				}
			}

			[Token(Token = "0x17000218")]
			public bool IsValid
			{
				[Token(Token = "0x6000CCF")]
				[Address(RVA = "0x1003900", Offset = "0x1003900", VA = "0x1003900")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000219")]
			public bool IsValidAndActive
			{
				[Token(Token = "0x6000CD0")]
				[Address(RVA = "0x10008C8", Offset = "0x10008C8", VA = "0x10008C8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000CC9")]
			public bool TryGetData<T>(out T data)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CCA")]
			public bool TryGetPositionAndData<T>(out Vector3 position, out T data)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CCB")]
			public bool TryGetPositionAndTransformAndData<T>(out Vector3 position, out Transform transform, out T data)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x1003058", Offset = "0x1003058", VA = "0x1003058")]
			private void SetFromData(PositionData data)
			{
			}

			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0xFFFFFC", Offset = "0xFFFFFC", VA = "0xFFFFFC")]
			public static SteerPosition FromPoint(Vector3 point, [System.Runtime.InteropServices.Optional] Transform referenceTransform, [System.Runtime.InteropServices.Optional] object data)
			{
				return default(SteerPosition);
			}

			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0xFFC328", Offset = "0xFFC328", VA = "0xFFC328")]
			public static SteerPosition FromTransform(Transform transform, [System.Runtime.InteropServices.Optional] object data)
			{
				return default(SteerPosition);
			}

			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x100398C", Offset = "0x100398C", VA = "0x100398C")]
			public static SteerPosition FromDelegate(SteerPositionDelegate func, [System.Runtime.InteropServices.Optional] Transform referenceTransform, [System.Runtime.InteropServices.Optional] object data)
			{
				return default(SteerPosition);
			}

			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0x1003A34", Offset = "0x1003A34", VA = "0x1003A34")]
			public static SteerPosition FromDelegate(SteerPositionReferenceDelegate func, Transform referenceTransform, [System.Runtime.InteropServices.Optional] object data)
			{
				return default(SteerPosition);
			}
		}

		[Token(Token = "0x20001EA")]
		public class SteerParameters
		{
			[Token(Token = "0x4000AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float deltaTime;

			[Token(Token = "0x4000AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 position;

			[Token(Token = "0x4000AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform ownerTransform;

			[Token(Token = "0x4000AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 forward;

			[Token(Token = "0x4000AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 up;

			[Token(Token = "0x4000AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 right;

			[Token(Token = "0x4000AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 velocity;

			[Token(Token = "0x4000AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float speedMultiplier;

			[Token(Token = "0x4000AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool enableSeek;

			[Token(Token = "0x4000AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public SteerPosition seekTarget;

			[Token(Token = "0x4000AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public bool enableArrive;

			[Token(Token = "0x4000AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public SteerPosition arriveTarget;

			[Token(Token = "0x4000AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public List<SteerPosition> arriveTargetPath;

			[Token(Token = "0x4000AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public int arriveTargetPathIndex;

			[Token(Token = "0x4000AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			public bool arriveTargetPathLoop;

			[Token(Token = "0x4000AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
			public bool enableWander;

			[Token(Token = "0x4000AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public SteerPosition wanderTarget;

			[Token(Token = "0x4000AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			public bool enableKeepRange;

			[Token(Token = "0x4000B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			public SteerPosition keepRangeTarget;

			[Token(Token = "0x4000B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
			public SteerKeepRangeParameters keepRangeParameters;

			[Token(Token = "0x4000B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			public bool enableObstacleAvoidance;

			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x1002D24", Offset = "0x1002D24", VA = "0x1002D24")]
			public void DisableAllSteering()
			{
			}

			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x1002D94", Offset = "0x1002D94", VA = "0x1002D94")]
			public float SpeedValue(float value)
			{
				return default(float);
			}

			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x1002DA0", Offset = "0x1002DA0", VA = "0x1002DA0")]
			public SteerParameters()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001EB")]
		public struct SteerKeepRangeParameters
		{
			[Token(Token = "0x4000B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 range;

			[Token(Token = "0x4000B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 heightRange;

			[Token(Token = "0x4000B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 facingAngleRange;

			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x10029E8", Offset = "0x10029E8", VA = "0x10029E8")]
			public SteerKeepRangeParameters(Vector2 range, [System.Runtime.InteropServices.Optional] Vector2 heightRange, [System.Runtime.InteropServices.Optional] Vector2 facingAngleRange)
			{
			}

			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x10029F8", Offset = "0x10029F8", VA = "0x10029F8")]
			public bool IsInRange(Vector3 shipPos, Transform targetTransform)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x1002C9C", Offset = "0x1002C9C", VA = "0x1002C9C")]
			public bool IsInRange(Vector3 shipPos, Vector3 targetPos)
			{
				return default(bool);
			}

			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x1002AC4", Offset = "0x1002AC4", VA = "0x1002AC4")]
			public bool IsInRange(Vector3 shipPos, Vector3 targetPos, Vector3 flatTargetForward)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001EC")]
		public class RotateParameters
		{
			[Token(Token = "0x4000B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float deltaTime;

			[Token(Token = "0x4000B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 position;

			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotation;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 heading;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 forward;

			[Token(Token = "0x4000B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 up;

			[Token(Token = "0x4000B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 right;

			[Token(Token = "0x4000B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 velocity;

			[Token(Token = "0x4000B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Vector3 angularVelocity;

			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float speedMultiplier;

			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool enableOverrideHeading;

			[Token(Token = "0x4000B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public SteerPosition overrideHeading;

			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x100293C", Offset = "0x100293C", VA = "0x100293C")]
			public float SpeedValue(float value)
			{
				return default(float);
			}

			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x1002948", Offset = "0x1002948", VA = "0x1002948")]
			public RotateParameters()
			{
			}
		}

		[Token(Token = "0x20001ED")]
		public struct SteerResult
		{
			[Token(Token = "0x4000B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SteerForce force;

			[Token(Token = "0x4000B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int steerBehaviours;

			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x1003BC8", Offset = "0x1003BC8", VA = "0x1003BC8")]
			public static SteerResult Zero()
			{
				return default(SteerResult);
			}
		}

		[Token(Token = "0x20001EE")]
		public struct SteerForce
		{
			[Token(Token = "0x4000B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool valid;

			[Token(Token = "0x4000B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 force;

			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float drag;

			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float angularDrag;

			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x1002950", Offset = "0x1002950", VA = "0x1002950")]
			public static SteerForce Zero()
			{
				return default(SteerForce);
			}

			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x1002984", Offset = "0x1002984", VA = "0x1002984")]
			public static SteerForce FromForce(Vector3 force, float drag = 0f, float angularDrag = 0f)
			{
				return default(SteerForce);
			}

			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x10029A4", Offset = "0x10029A4", VA = "0x10029A4")]
			public static SteerForce FromDrag(float drag, float angularDrag, [System.Runtime.InteropServices.Optional] Vector3 force)
			{
				return default(SteerForce);
			}

			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x100282C", Offset = "0x100282C", VA = "0x100282C")]
			public SteerForce ModifyForce(Vector3 force)
			{
				return default(SteerForce);
			}

			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x10029C4", Offset = "0x10029C4", VA = "0x10029C4")]
			public SteerForce ModifyDragMax(float drag, float angularDrag)
			{
				return default(SteerForce);
			}
		}

		[Serializable]
		[Token(Token = "0x20001EF")]
		public class BaseBehaviour
		{
			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float weight;

			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maxSteerForce;

			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x100276C", Offset = "0x100276C", VA = "0x100276C")]
			public SteerForce TransformForce(SteerForce rawForce)
			{
				return default(SteerForce);
			}

			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x100275C", Offset = "0x100275C", VA = "0x100275C")]
			public BaseBehaviour()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001F0")]
		public class ArriveBehaviour : BaseBehaviour
		{
			[Token(Token = "0x4000B1A")]
			public const float PATH_NODE_FINISH_TIME = 1f;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float deceleration;

			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float stopRadius;

			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x1002738", Offset = "0x1002738", VA = "0x1002738")]
			public float GetSpeedByDistance(float distance)
			{
				return default(float);
			}

			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x1002744", Offset = "0x1002744", VA = "0x1002744")]
			public float GetPathNodeFinishDistance(float maxSteerSpeed)
			{
				return default(float);
			}

			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x1002748", Offset = "0x1002748", VA = "0x1002748")]
			public ArriveBehaviour()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001F1")]
		public class WanderBehaviour : BaseBehaviour
		{
			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float distance;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 radius;

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float jitter;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool horizontalLock;

			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x1003C00", Offset = "0x1003C00", VA = "0x1003C00")]
			public Vector3 AddWanderJitter(Vector3 target, float deltaTime)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x1003C70", Offset = "0x1003C70", VA = "0x1003C70")]
			public Vector3 GetWanderCenter(Vector3 forward)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x1003D6C", Offset = "0x1003D6C", VA = "0x1003D6C")]
			private Vector3 GetWanderCenterInternal(Vector3 forward)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x1003D80", Offset = "0x1003D80", VA = "0x1003D80")]
			public Vector3 GetWanderOffset(Vector3 target, float deltaTime, Vector3 forward, Vector3 up, Vector3 right)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x1003E30", Offset = "0x1003E30", VA = "0x1003E30")]
			private Vector3 GetWanderOffsetInternal(Vector3 target, float deltaTime, Vector3 forward, Vector3 up, Vector3 right)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x1003EAC", Offset = "0x1003EAC", VA = "0x1003EAC")]
			public Vector3 GetWanderDirection(Vector3 target, float deltaTime, Vector3 forward, Vector3 up, Vector3 right)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x1003CE8", Offset = "0x1003CE8", VA = "0x1003CE8")]
			private void FinalizeDirections(ref Vector3 forward, ref Vector3 up, ref Vector3 right)
			{
			}

			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x1003F98", Offset = "0x1003F98", VA = "0x1003F98")]
			public WanderBehaviour()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001F2")]
		public class KeepRangeBehaviour : BaseBehaviour
		{
			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float deceleration;

			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x1002848", Offset = "0x1002848", VA = "0x1002848")]
			public float GetSpeedByDistance(float distance)
			{
				return default(float);
			}

			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x1002854", Offset = "0x1002854", VA = "0x1002854")]
			public KeepRangeBehaviour()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001F3")]
		public class ObstacleAvoidanceBehaviour : BaseBehaviour
		{
			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float range;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5B20", Offset = "0x8B5B20")]
			public float maxForceRange;

			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float maxDotProduct;

			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SurfaceTypeEnum[] ignoreSurface;

			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x1002868", Offset = "0x1002868", VA = "0x1002868")]
			public ObstacleAvoidanceBehaviour()
			{
			}
		}

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5910", Offset = "0x8B5910")]
		private float maxSteerSpeed;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float maxSteerForce;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float stopDrag;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B597C", Offset = "0x8B597C")]
		[SerializeField]
		private float maxRotateSpeed;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float maxKeepUprightRotateSpeed;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float maxKeepUprightTiltAngle;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float maxKeepUprightTiltTurnAngleThreshold;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float maxKeepUprightTiltSpeedThreshold;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float rotateDeceleration;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float stopAngularDrag;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5A28", Offset = "0x8B5A28")]
		[SerializeField]
		private float mass;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float drag;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float angularDrag;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5A94", Offset = "0x8B5A94")]
		[SerializeField]
		private BaseBehaviour seekBehaviour;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ArriveBehaviour arriveBehaviour;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private WanderBehaviour wanderBehaviour;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private KeepRangeBehaviour keepRangeBehaviour;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ObstacleAvoidanceBehaviour obstacleAvoidanceBehaviour;

		[Token(Token = "0x17000208")]
		public BaseBehaviour BehaviourSeek
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x14FC064", Offset = "0x14FC064", VA = "0x14FC064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		public ArriveBehaviour BehaviourArrive
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x14FC06C", Offset = "0x14FC06C", VA = "0x14FC06C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		public WanderBehaviour BehaviourWander
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x14FC074", Offset = "0x14FC074", VA = "0x14FC074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		public KeepRangeBehaviour BehaviourKeepRange
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x14FC07C", Offset = "0x14FC07C", VA = "0x14FC07C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		public ObstacleAvoidanceBehaviour BehaviourObstacleAvoidance
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x14FC084", Offset = "0x14FC084", VA = "0x14FC084")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		public float MaxSteerSpeed
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x14FC0AC", Offset = "0x14FC0AC", VA = "0x14FC0AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020E")]
		public float MaxRotateSpeed
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x14FC0B4", Offset = "0x14FC0B4", VA = "0x14FC0B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020F")]
		public float Mass
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x14FC0BC", Offset = "0x14FC0BC", VA = "0x14FC0BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000210")]
		public float Drag
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x14FC0C4", Offset = "0x14FC0C4", VA = "0x14FC0C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000211")]
		public float AngularDrag
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x14FC0CC", Offset = "0x14FC0CC", VA = "0x14FC0CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x14FC08C", Offset = "0x14FC08C", VA = "0x14FC08C")]
		public float ModifiedMaxSteerSpeed(SteerParameters parameters)
		{
			return default(float);
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x14FC0D4", Offset = "0x14FC0D4", VA = "0x14FC0D4")]
		public void ApplyPhysicsSettings(Rigidbody body)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x14FC138", Offset = "0x14FC138", VA = "0x14FC138")]
		public SteerResult CalculateSteeringForce(SteerParameters parameters)
		{
			return default(SteerResult);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x14FD56C", Offset = "0x14FD56C", VA = "0x14FD56C")]
		public Vector3 CalculateRotationTorque(RotateParameters parameters)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x14FC440", Offset = "0x14FC440", VA = "0x14FC440")]
		private SteerForce SteerBehaviourSeek(SteerParameters parameters)
		{
			return default(SteerForce);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x14FD8B8", Offset = "0x14FD8B8", VA = "0x14FD8B8")]
		private Vector3 SteerBehaviourSeek(SteerParameters parameters, Vector3 targetPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x14FC624", Offset = "0x14FC624", VA = "0x14FC624")]
		private SteerForce SteerBehaviourArrive(SteerParameters parameters)
		{
			return default(SteerForce);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x14FCF9C", Offset = "0x14FCF9C", VA = "0x14FCF9C")]
		private SteerForce SteerBehaviourWander(SteerParameters parameters)
		{
			return default(SteerForce);
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x14FC910", Offset = "0x14FC910", VA = "0x14FC910")]
		private SteerForce SteerBehaviourKeepRange(SteerParameters parameters)
		{
			return default(SteerForce);
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x14FD110", Offset = "0x14FD110", VA = "0x14FD110")]
		private SteerForce SteerBehaviourObstacleAvoidance(SteerParameters parameters)
		{
			return default(SteerForce);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x14FC4B4", Offset = "0x14FC4B4", VA = "0x14FC4B4")]
		private bool AccumulateForce(ref SteerResult runningTotalForce, SteerForce addForce)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x14FD9E4", Offset = "0x14FD9E4", VA = "0x14FD9E4")]
		private Vector3 GetCorrectionVelocity(SteerParameters parameters, Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x14FD960", Offset = "0x14FD960", VA = "0x14FD960")]
		private Vector3 GetCorrectionVelocity(SteerParameters parameters, Vector3 direction, float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x14FDA84", Offset = "0x14FDA84", VA = "0x14FDA84")]
		public void DrawGizmos(SteerParameters parameters)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x14FE670", Offset = "0x14FE670", VA = "0x14FE670")]
		public SpaceEntitySteering()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class SpaceObject : GameMonoBehaviour, IDamagable, IBuffable, IAddressableAssetPreload
	{
		[Serializable]
		[Token(Token = "0x20001F5")]
		public struct DestroySpawn
		{
			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AssetReferenceGameObject spawnPrefab;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int spawnAmount;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector2 spawnInRadiusRange;

			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool forceSpawn;

			[NonSerialized]
			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public AddressableAssetDependency<GameObject> spawnPrefabAsset;
		}

		[Token(Token = "0x20001F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8E08", Offset = "0x8A8E08")]
		private sealed class <DestroyAnticipation>d__201 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpaceObject <>4__this;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IDamagable cause;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IReadOnlyList<SectorTag> buffSourceTags;

			[Token(Token = "0x17000243")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D58")]
				[Address(RVA = "0xE9DAC0", Offset = "0xE9DAC0", VA = "0xE9DAC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000244")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D5A")]
				[Address(RVA = "0xE9DB08", Offset = "0xE9DB08", VA = "0xE9DB08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0xE9D9C4", Offset = "0xE9D9C4", VA = "0xE9D9C4")]
			[DebuggerHidden]
			public <DestroyAnticipation>d__201(int <>1__state)
			{
			}

			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xE9D9F0", Offset = "0xE9D9F0", VA = "0xE9D9F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0xE9D9F4", Offset = "0xE9D9F4", VA = "0xE9D9F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xE9DAC8", Offset = "0xE9DAC8", VA = "0xE9DAC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5B58", Offset = "0x8B5B58")]
		[SerializeField]
		private float maxHealth;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B5BA4", Offset = "0x8B5BA4")]
		private float startHealth;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float collisionDamageTakenFactor;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float collisionDamageDealtFactor;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected float blasterDamageFactor;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float laserDamageFactor;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float explosionDamageFactor;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float reflectedProjectileDamageTakenFactor;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool isTargetable;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[SerializeField]
		private bool isInvulnerable;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SurfaceTypeEnum surfaceType;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5C74", Offset = "0x8B5C74")]
		[SerializeField]
		private float maxShield;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool regenerateShield;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float regenerateShieldDelayTime;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5CE0", Offset = "0x8B5CE0")]
		[SerializeField]
		private Faction faction;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5D2C", Offset = "0x8B5D2C")]
		[SerializeField]
		private Vector2 destroyAnticipationTime;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AssetReferenceGameObject destroyEffect;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float destroyEffectScale;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private bool destroyEffectInheritRotation;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private List<DestroySpawn> destroySpawns;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool destroySpawnInheritRotation;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool destroySpawnInheritVelocity;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5DD8", Offset = "0x8B5DD8")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B5DD8", Offset = "0x8B5DD8")]
		private SfxTrigger deathSfx;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SfxTrigger destroyFinalSfx;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SfxTrigger shieldDepleatedSfx;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private SfxTrigger healthLowSfx;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float healthLowThreshold;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5E88", Offset = "0x8B5E88")]
		[SerializeField]
		private bool syncBuffsToGlobal;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string[] startBuffsGroups;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private List<BuffObject> startBuffs;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8B5EF4", Offset = "0x8B5EF4")]
		[SerializeField]
		protected List<SectorTag> additionalDamageTakenStatTags;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8B5F40", Offset = "0x8B5F40")]
		protected List<SectorTag> additionalDefenseStatTags;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B5F8C", Offset = "0x8B5F8C")]
		private bool destroyAsteroidsOnCollision;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B5FC8", Offset = "0x8B5FC8")]
		private readonly IReadOnlyList<SectorTag> <BuffSourceTags>k__BackingField;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B5FD8", Offset = "0x8B5FD8")]
		private readonly FlagGroup <IsUntargetable>k__BackingField;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B5FE8", Offset = "0x8B5FE8")]
		private readonly FlagGroup <IsInvulnerable>k__BackingField;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B5FF8", Offset = "0x8B5FF8")]
		private bool <DestroySpawnsEnabled>k__BackingField;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B6008", Offset = "0x8B6008")]
		private Action<SpaceObject> <ReviveAction>k__BackingField;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B6018", Offset = "0x8B6018")]
		private bool <PlayCollisionEffects>k__BackingField;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B6028", Offset = "0x8B6028")]
		private float <LastCollisionVFX>k__BackingField;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B6038", Offset = "0x8B6038")]
		private float <CalcDestroyAnticipationTime>k__BackingField;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public UnityEvent<SpaceObject> onDeath;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public UnityEvent<IDamagable, IReadOnlyList<SectorTag>> onDestroy;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public UnityEvent<SpaceObject> onRevive;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public UnityEvent<SpaceObject> onSetup;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public UnityEvent<SpaceObject, IDamagable.DamageInfo> onDamageTaken;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B60C8", Offset = "0x8B60C8")]
		[SerializeField]
		private DamageIndicator damageIndicator;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Vector3 healthBarCustomOffset;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6114", Offset = "0x8B6114")]
		private PhysicsParameters physicsParameters;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected Collider objectCollider;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected AddressableAssetDependencies assetDependencies;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Transform trans;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Rigidbody body;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Vector3 velocity;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float currentHealth;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float increasedMaxHealth;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float currentShield;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float increasedMaxShield;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private float shieldRegenTimer;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private bool isDead;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		private bool isReviving;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B6160", Offset = "0x8B6160")]
		private readonly BuffsUtil <Buffs>k__BackingField;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float lastCollisionDamage;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private AddressableAssetDependency<GameObject> destroyEffectAsset;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<DeathCallbacks> deathCallbacksList;

		[Token(Token = "0x1700021A")]
		public bool DestroyAsteroidsOnCollision
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x1500AD8", Offset = "0x1500AD8", VA = "0x1500AD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021B")]
		public IReadOnlyList<DestroySpawn> DestroySpawns
		{
			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0x1500AE0", Offset = "0x1500AE0", VA = "0x1500AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		public virtual IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x1500AE8", Offset = "0x1500AE8", VA = "0x1500AE8", Slot = "73")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEC48", Offset = "0x8CEC48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		public IReadOnlyList<SectorTag> AdditionalDamageTakenStatTags
		{
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x1500AF0", Offset = "0x1500AF0", VA = "0x1500AF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		public float BaseMaxHealth
		{
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x1500AF8", Offset = "0x1500AF8", VA = "0x1500AF8", Slot = "41")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700021F")]
		public float MaxHealth
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0x1500BF4", Offset = "0x1500BF4", VA = "0x1500BF4", Slot = "42")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x1500CF8", Offset = "0x1500CF8", VA = "0x1500CF8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public float CurrentHealth
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x1500D64", Offset = "0x1500D64", VA = "0x1500D64", Slot = "43")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x1500D6C", Offset = "0x1500D6C", VA = "0x1500D6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public float BaseMaxShield
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x1500DD8", Offset = "0x1500DD8", VA = "0x1500DD8", Slot = "44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000222")]
		public float MaxShield
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x1500ED4", Offset = "0x1500ED4", VA = "0x1500ED4", Slot = "45")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x1500FD8", Offset = "0x1500FD8", VA = "0x1500FD8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public float CurrentShield
		{
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x1501044", Offset = "0x1501044", VA = "0x1501044", Slot = "46")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x150104C", Offset = "0x150104C", VA = "0x150104C")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public float TotalMaxHealth
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x15010B8", Offset = "0x15010B8", VA = "0x15010B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000225")]
		public float TotalCurrentHealth
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x15010F0", Offset = "0x15010F0", VA = "0x15010F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000226")]
		public float HealthAmount
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x1501100", Offset = "0x1501100", VA = "0x1501100", Slot = "47")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000227")]
		public float CollisionDamageTakenFactor
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0x1501124", Offset = "0x1501124", VA = "0x1501124")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000228")]
		public float CollisionDamageDealtFactor
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x1501220", Offset = "0x1501220", VA = "0x1501220")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000229")]
		public float ReflectedProjectileDamageTakenFactor
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x150131C", Offset = "0x150131C", VA = "0x150131C", Slot = "53")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700022A")]
		public bool IsAlive
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x1501324", Offset = "0x1501324", VA = "0x1501324", Slot = "38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022B")]
		public FlagGroup IsUntargetable
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x1501334", Offset = "0x1501334", VA = "0x1501334", Slot = "39")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEC58", Offset = "0x8CEC58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		public FlagGroup IsInvulnerable
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x150133C", Offset = "0x150133C", VA = "0x150133C", Slot = "40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEC68", Offset = "0x8CEC68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		public bool IsInvulnerableWithBuff
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x1501344", Offset = "0x1501344", VA = "0x1501344")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022E")]
		public bool DestroySpawnsEnabled
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x1501390", Offset = "0x1501390", VA = "0x1501390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEC78", Offset = "0x8CEC78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x1501398", Offset = "0x1501398", VA = "0x1501398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEC88", Offset = "0x8CEC88")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public Action<SpaceObject> ReviveAction
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x15013A4", Offset = "0x15013A4", VA = "0x15013A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEC98", Offset = "0x8CEC98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x15013AC", Offset = "0x15013AC", VA = "0x15013AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CECA8", Offset = "0x8CECA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public bool WillRevive
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x15013BC", Offset = "0x15013BC", VA = "0x15013BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000231")]
		public bool PlayCollisionEffects
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x15013CC", Offset = "0x15013CC", VA = "0x15013CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CECB8", Offset = "0x8CECB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x15013D4", Offset = "0x15013D4", VA = "0x15013D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CECC8", Offset = "0x8CECC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public float LastCollisionVFX
		{
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x15013E0", Offset = "0x15013E0", VA = "0x15013E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CECD8", Offset = "0x8CECD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x15013E8", Offset = "0x15013E8", VA = "0x15013E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CECE8", Offset = "0x8CECE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public float CalcDestroyAnticipationTime
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x15013F0", Offset = "0x15013F0", VA = "0x15013F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CECF8", Offset = "0x8CECF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x15013F8", Offset = "0x15013F8", VA = "0x15013F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CED08", Offset = "0x8CED08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public virtual Collider Collider
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x1501400", Offset = "0x1501400", VA = "0x1501400", Slot = "74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public Transform Transform
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x1501408", Offset = "0x1501408", VA = "0x1501408", Slot = "71")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public Rigidbody Body
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x1501410", Offset = "0x1501410", VA = "0x1501410", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x1501418", Offset = "0x1501418", VA = "0x1501418")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000238")]
		public DamageIndicator DamageIndicator
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x1501428", Offset = "0x1501428", VA = "0x1501428")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		public SurfaceTypeEnum SurfaceType
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x1501430", Offset = "0x1501430", VA = "0x1501430", Slot = "51")]
			get
			{
				return default(SurfaceTypeEnum);
			}
		}

		[Token(Token = "0x1700023A")]
		public PhysicsParameters PhysicsParameters
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x1501438", Offset = "0x1501438", VA = "0x1501438", Slot = "52")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public float DestroyEffectScale
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x1501440", Offset = "0x1501440", VA = "0x1501440")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023C")]
		public Faction Faction
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x1501448", Offset = "0x1501448", VA = "0x1501448", Slot = "50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x1501450", Offset = "0x1501450", VA = "0x1501450")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public BuffsUtil Buffs
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x1501FE8", Offset = "0x1501FE8", VA = "0x1501FE8", Slot = "69")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEE18", Offset = "0x8CEE18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x1501FF0", Offset = "0x1501FF0", VA = "0x1501FF0", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x1501FF8", Offset = "0x1501FF8", VA = "0x1501FF8", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		protected override bool EnableOnGameStart
		{
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x1501FFC", Offset = "0x1501FFC", VA = "0x1501FFC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x1502004", Offset = "0x1502004", VA = "0x1502004", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x1502008", Offset = "0x1502008", VA = "0x1502008", Slot = "14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x1502010", Offset = "0x1502010", VA = "0x1502010", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		protected override UpdateWaitMode WaitOnUpdate
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x1502014", Offset = "0x1502014", VA = "0x1502014", Slot = "22")]
			get
			{
				return default(UpdateWaitMode);
			}
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x150201C", Offset = "0x150201C", VA = "0x150201C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public bool IsBuffable
		{
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x1502020", Offset = "0x1502020", VA = "0x1502020", Slot = "70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000037")]
		public event IDamagable.FactionChange OnFactionChange
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x1501460", Offset = "0x1501460", VA = "0x1501460", Slot = "54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CED18", Offset = "0x8CED18")]
			add
			{
			}
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x1501504", Offset = "0x1501504", VA = "0x1501504", Slot = "55")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CED28", Offset = "0x8CED28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event IDamagable.HealthChange OnMaxHealthChange
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x15015A8", Offset = "0x15015A8", VA = "0x15015A8", Slot = "56")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CED38", Offset = "0x8CED38")]
			add
			{
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x150164C", Offset = "0x150164C", VA = "0x150164C", Slot = "57")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CED48", Offset = "0x8CED48")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event IDamagable.HealthChange OnHealthChange
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x15016F0", Offset = "0x15016F0", VA = "0x15016F0", Slot = "58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CED58", Offset = "0x8CED58")]
			add
			{
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x1501794", Offset = "0x1501794", VA = "0x1501794", Slot = "59")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CED68", Offset = "0x8CED68")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event IDamagable.HealthChange OnMaxShieldChange
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x1501838", Offset = "0x1501838", VA = "0x1501838", Slot = "60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CED78", Offset = "0x8CED78")]
			add
			{
			}
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x15018DC", Offset = "0x15018DC", VA = "0x15018DC", Slot = "61")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CED88", Offset = "0x8CED88")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event IDamagable.HealthChange OnShieldChange
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x1501980", Offset = "0x1501980", VA = "0x1501980", Slot = "62")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CED98", Offset = "0x8CED98")]
			add
			{
			}
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x1501A24", Offset = "0x1501A24", VA = "0x1501A24", Slot = "63")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEDA8", Offset = "0x8CEDA8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action<Collision> OnCollision
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x1501AC8", Offset = "0x1501AC8", VA = "0x1501AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEDB8", Offset = "0x8CEDB8")]
			add
			{
			}
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x1501B6C", Offset = "0x1501B6C", VA = "0x1501B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEDC8", Offset = "0x8CEDC8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public static event Action<SpaceObject, IDamagable> OnSpaceObjectDeath
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x1501C10", Offset = "0x1501C10", VA = "0x1501C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEDD8", Offset = "0x8CEDD8")]
			add
			{
			}
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x1501D04", Offset = "0x1501D04", VA = "0x1501D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEDE8", Offset = "0x8CEDE8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public static event Action<SpaceObject, IDamagable> OnSpaceObjectDestroy
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x1501DF8", Offset = "0x1501DF8", VA = "0x1501DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEDF8", Offset = "0x8CEDF8")]
			add
			{
			}
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x1501EF0", Offset = "0x1501EF0", VA = "0x1501EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEE08", Offset = "0x8CEE08")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1502030", Offset = "0x1502030", VA = "0x1502030", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x150219C", Offset = "0x150219C", VA = "0x150219C", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x15026CC", Offset = "0x15026CC", VA = "0x15026CC", Slot = "75")]
		public virtual void CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x15027A8", Offset = "0x15027A8", VA = "0x15027A8", Slot = "30")]
		protected override void OnGameStart()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1502950", Offset = "0x1502950", VA = "0x1502950", Slot = "76")]
		protected virtual void OnEnterGameSector()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1502988", Offset = "0x1502988", VA = "0x1502988", Slot = "32")]
		protected override void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1502A8C", Offset = "0x1502A8C", VA = "0x1502A8C", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1502C1C", Offset = "0x1502C1C", VA = "0x1502C1C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1502E60", Offset = "0x1502E60", VA = "0x1502E60", Slot = "67")]
		public void Heal(float baseHeal, HealTypeEnum type, Transform from, IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags, bool bypassBuffs = false)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x1502E6C", Offset = "0x1502E6C", VA = "0x1502E6C", Slot = "66")]
		public void Heal(float baseHeal, float maxHealthIncreaseCap, HealTypeEnum type, Transform from, IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags, bool bypassBuffs = false)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1503238", Offset = "0x1503238", VA = "0x1503238", Slot = "77")]
		public virtual IDamagable.DamageInfo Damage(float baseDamage, DamageTypeEnum type, Transform from, IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags, bool bypassShield = false)
		{
			return default(IDamagable.DamageInfo);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x150394C", Offset = "0x150394C", VA = "0x150394C")]
		public void Kill()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1503958", Offset = "0x1503958", VA = "0x1503958")]
		public void Kill(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x15028B8", Offset = "0x15028B8", VA = "0x15028B8")]
		private bool CheckHealth(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x15039A4", Offset = "0x15039A4", VA = "0x15039A4", Slot = "78")]
		protected virtual void Die(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x1503CC0", Offset = "0x1503CC0", VA = "0x1503CC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CEE28", Offset = "0x8CEE28")]
		private IEnumerator DestroyAnticipation(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
		{
			return null;
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x1503D68", Offset = "0x1503D68", VA = "0x1503D68", Slot = "79")]
		protected virtual void Destruction(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x1504694", Offset = "0x1504694", VA = "0x1504694")]
		public void Revive(float restoreHealthPercent, float restoreShieldPercent)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x15049F4", Offset = "0x15049F4", VA = "0x15049F4")]
		public void AddDestroySpawn(DestroySpawn destroySpawn)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x1504ADC", Offset = "0x1504ADC", VA = "0x1504ADC", Slot = "80")]
		protected virtual void OnRevive()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x1504AE0", Offset = "0x1504AE0", VA = "0x1504AE0", Slot = "64")]
		public void UpdateHealth()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x1504B6C", Offset = "0x1504B6C", VA = "0x1504B6C")]
		public void AddStartBuffs(List<BuffObject> startBuffsToAdd)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1504CD8", Offset = "0x1504CD8", VA = "0x1504CD8", Slot = "81")]
		protected virtual void SetFaction(Faction faction)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1504D24", Offset = "0x1504D24", VA = "0x1504D24")]
		public SpaceObject()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class SpaceObjectDestroySpawnActions : GameMonoBehaviour, IAddressableAssetPreload
	{
		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpaceObject spaceObject;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<SpaceObject.DestroySpawn> destroySpawns;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AddressableAssetDependencies assetDependencies;

		[Token(Token = "0x17000245")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x1504F38", Offset = "0x1504F38", VA = "0x1504F38", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x1504F40", Offset = "0x1504F40", VA = "0x1504F40", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x15050C8", Offset = "0x15050C8", VA = "0x15050C8", Slot = "38")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1505194", Offset = "0x1505194", VA = "0x1505194", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x15051C0", Offset = "0x15051C0", VA = "0x15051C0")]
		public void AddDestroySpawns()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x15052DC", Offset = "0x15052DC", VA = "0x15052DC")]
		public SpaceObjectDestroySpawnActions()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class SpaceObjectStatRecorder : StatRecorder
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpaceObject spaceObject;

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1505A30", Offset = "0x1505A30", VA = "0x1505A30", Slot = "4")]
		public override void Record()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1505BE4", Offset = "0x1505BE4", VA = "0x1505BE4")]
		public SpaceObjectStatRecorder()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A8E18", Offset = "0x8A8E18")]
	public class SpaceObjectSyncedDestruction : MonoBehaviour
	{
		[Token(Token = "0x20001FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8E78", Offset = "0x8A8E78")]
		private sealed class <DestroySpaceObjectDelayed>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpaceObjectSyncedDestruction <>4__this;

			[Token(Token = "0x17000246")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D6F")]
				[Address(RVA = "0xE9DBFC", Offset = "0xE9DBFC", VA = "0xE9DBFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000247")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D71")]
				[Address(RVA = "0xE9DC44", Offset = "0xE9DC44", VA = "0xE9DC44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0xE9DB10", Offset = "0xE9DB10", VA = "0xE9DB10")]
			[DebuggerHidden]
			public <DestroySpaceObjectDelayed>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0xE9DB3C", Offset = "0xE9DB3C", VA = "0xE9DB3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xE9DB40", Offset = "0xE9DB40", VA = "0xE9DB40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D70")]
			[Address(RVA = "0xE9DC04", Offset = "0xE9DC04", VA = "0xE9DC04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string destroyGroup;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 destroyDelayRange;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SpaceObject spaceObject;

		[Token(Token = "0x1400003F")]
		private static event Action<string> DestroyAction
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0x1505BEC", Offset = "0x1505BEC", VA = "0x1505BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEED8", Offset = "0x8CEED8")]
			add
			{
			}
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0x1505CA8", Offset = "0x1505CA8", VA = "0x1505CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CEEE8", Offset = "0x8CEEE8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1505D64", Offset = "0x1505D64", VA = "0x1505D64")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x1505EB8", Offset = "0x1505EB8", VA = "0x1505EB8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x1505F44", Offset = "0x1505F44", VA = "0x1505F44")]
		private void OnSpaceObjectDestroy(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1505FC0", Offset = "0x1505FC0", VA = "0x1505FC0")]
		private void OnDestroyAction(string group)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x15060B8", Offset = "0x15060B8", VA = "0x15060B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CEEF8", Offset = "0x8CEEF8")]
		private IEnumerator DestroySpaceObjectDelayed(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x1506140", Offset = "0x1506140", VA = "0x1506140")]
		private void DestroySpaceObject()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1506160", Offset = "0x1506160", VA = "0x1506160")]
		public SpaceObjectSyncedDestruction()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class SpecialBarFlash : MonoBehaviour
	{
		[Token(Token = "0x20001FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8E88", Offset = "0x8A8E88")]
		private sealed class <FlashIndicationRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpecialBarFlash <>4__this;

			[Token(Token = "0x17000249")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D7F")]
				[Address(RVA = "0xE9E0E8", Offset = "0xE9E0E8", VA = "0xE9E0E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D81")]
				[Address(RVA = "0xE9E130", Offset = "0xE9E130", VA = "0xE9E130", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0xE9DF68", Offset = "0xE9DF68", VA = "0xE9DF68")]
			[DebuggerHidden]
			public <FlashIndicationRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0xE9DF94", Offset = "0xE9DF94", VA = "0xE9DF94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0xE9DF98", Offset = "0xE9DF98", VA = "0xE9DF98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D80")]
			[Address(RVA = "0xE9E0F0", Offset = "0xE9E0F0", VA = "0xE9E0F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float flashIndicationTimeDelay;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImageColorLerp imageColorLerp;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine flashCoroutine;

		[Token(Token = "0x17000248")]
		private bool ShouldFlash
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x150E554", Offset = "0x150E554", VA = "0x150E554")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x150E95C", Offset = "0x150E95C", VA = "0x150E95C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x150E9B8", Offset = "0x150E9B8", VA = "0x150E9B8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x150EA74", Offset = "0x150EA74", VA = "0x150EA74")]
		public void SetTimer(bool active)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x150E62C", Offset = "0x150E62C", VA = "0x150E62C")]
		private int ActiveEngagements()
		{
			return default(int);
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x150EA80", Offset = "0x150EA80", VA = "0x150EA80")]
		private int PausedEngagements()
		{
			return default(int);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x150E960", Offset = "0x150E960", VA = "0x150E960")]
		private void StartTimer()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x150E9BC", Offset = "0x150E9BC", VA = "0x150E9BC")]
		private void StopTimer()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x150EDAC", Offset = "0x150EDAC", VA = "0x150EDAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CEFA8", Offset = "0x8CEFA8")]
		private IEnumerator FlashIndicationRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x150EE24", Offset = "0x150EE24", VA = "0x150EE24")]
		public SpecialBarFlash()
		{
		}
	}
}
namespace Game.Shop
{
	[Token(Token = "0x20001FD")]
	public struct ShopItem
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int price;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int amountLeft;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ShipAbilityPassive passiveAbility;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float discountMultiplier;

		[Token(Token = "0x1700024B")]
		public bool IsStockLeft
		{
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0xF5134C", Offset = "0xF5134C", VA = "0xF5134C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024C")]
		public bool IsSoldOut
		{
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0xF50F68", Offset = "0xF50F68", VA = "0xF50F68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024D")]
		public bool CanAfford
		{
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0xF50F78", Offset = "0xF50F78", VA = "0xF50F78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024E")]
		public bool IsPassiveAbility
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0xF51068", Offset = "0xF51068", VA = "0xF51068")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024F")]
		public Sprite Icon
		{
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0xF5135C", Offset = "0xF5135C", VA = "0xF5135C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		public LocalizationKey Title
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0xF513A0", Offset = "0xF513A0", VA = "0xF513A0")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xF50C0C", Offset = "0xF50C0C", VA = "0xF50C0C")]
		public ShopItem(ShipAbilityPassive passiveAbility, int level, int basePrice, float priceMultiplier = 1f)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xF51050", Offset = "0xF51050", VA = "0xF51050")]
		public ShopItem DecreaseAmount()
		{
			return default(ShopItem);
		}
	}
	[Token(Token = "0x20001FE")]
	public class ShopInstance : GameMonoBehaviour
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6200", Offset = "0x8B6200")]
		[SerializeField]
		private int passiveAbilitiesForSale;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SectorTag passiveAbilitiesCategoryForSale;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int passiveAbilitiesLevelBase;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int passiveAbilitiesLevelOverride;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int passiveAbilitiesPriceLevelOverride;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SectorTagCollectionHierarchy dataDiscRules;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B629C", Offset = "0x8B629C")]
		[SerializeField]
		private int passiveAbilitiesMaxPurchaseAmount;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnityEvent onPassiveAbilitiesMaxPurchaseAmountReached;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B62F8", Offset = "0x8B62F8")]
		[SerializeField]
		private ShopNPC shopNpc;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B6344", Offset = "0x8B6344")]
		private static ShopInstance <Instance>k__BackingField;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<ShopInstance> OnAnyPassiveAbilitiesMaxPurchaseAmountReached;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<ShopItem> items;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int passiveAbilitiesPurchaseCount;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x17000251")]
		public IReadOnlyList<ShopItem> Items
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0xF4FB00", Offset = "0xF4FB00", VA = "0xF4FB00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		public ShopNPC ShopNpc
		{
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0xF4FB08", Offset = "0xF4FB08", VA = "0xF4FB08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		public static ShopInstance Instance
		{
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0xF4FB10", Offset = "0xF4FB10", VA = "0xF4FB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF058", Offset = "0x8CF058")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0xF4FB74", Offset = "0xF4FB74", VA = "0xF4FB74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF068", Offset = "0x8CF068")]
			private set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public static bool HasInstance
		{
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0xF4FBE0", Offset = "0xF4FBE0", VA = "0xF4FBE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000255")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0xF4FCB8", Offset = "0xF4FCB8", VA = "0xF4FCB8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xF4FCC0", Offset = "0xF4FCC0", VA = "0xF4FCC0", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xF4FF14", Offset = "0xF4FF14", VA = "0xF4FF14", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xF50158", Offset = "0xF50158", VA = "0xF50158")]
		public void SetShopInstance()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xF50204", Offset = "0xF50204", VA = "0xF50204")]
		private void OnLoadWindDown(SectorTagsInput _)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xF50AF0", Offset = "0xF50AF0", VA = "0xF50AF0")]
		private bool TryGetAvailablePassiveAbility(out ShipAbilityPassive ability)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xF50C70", Offset = "0xF50C70", VA = "0xF50C70")]
		public bool PurchaseItem(int itemIndex, out bool maxPurchaseAmountReached)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xF510D4", Offset = "0xF510D4", VA = "0xF510D4")]
		public ShopInstance()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A8E98", Offset = "0x8A8E98")]
	public class ShopNPC : ScriptableObject
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6354", Offset = "0x8B6354")]
		public GameObject portrait;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B638C", Offset = "0x8B638C")]
		public LocalizationKey greeting;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SfxTrigger greetingSfx;

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xF52AC8", Offset = "0xF52AC8", VA = "0xF52AC8")]
		public ShopNPC()
		{
		}
	}
}
namespace Game.Ships
{
	[Token(Token = "0x2000200")]
	public class ChargerVisuals : MonoBehaviour
	{
		[Token(Token = "0x2000201")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8F00", Offset = "0x8A8F00")]
		private sealed class <FadeIn>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer renderer;

			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string materialProperty;

			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationCurve aCurve;

			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool reverseDirection;

			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float duration;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ChargerVisuals <>4__this;

			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <t>5__2;

			[Token(Token = "0x17000256")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DA3")]
				[Address(RVA = "0xC65064", Offset = "0xC65064", VA = "0xC65064", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000257")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DA5")]
				[Address(RVA = "0xC650AC", Offset = "0xC650AC", VA = "0xC650AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xC64E9C", Offset = "0xC64E9C", VA = "0xC64E9C")]
			[DebuggerHidden]
			public <FadeIn>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xC64EC8", Offset = "0xC64EC8", VA = "0xC64EC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0xC64ECC", Offset = "0xC64ECC", VA = "0xC64ECC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0xC6506C", Offset = "0xC6506C", VA = "0xC6506C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B63C4", Offset = "0x8B63C4")]
		[SerializeField]
		private Renderer chargeRenderer;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string materialProperty;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve chargeAnimationCurve;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float fadeDuration;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject chargeStart;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float materialPropertyDefaultState;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine coroutineProcess;

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xFE7E70", Offset = "0xFE7E70", VA = "0xFE7E70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xFE7EC4", Offset = "0xFE7EC4", VA = "0xFE7EC4")]
		public void ChargeStart()
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xFE7F40", Offset = "0xFE7F40", VA = "0xFE7F40")]
		public void ChargeEnd()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xFE8098", Offset = "0xFE8098", VA = "0xFE8098")]
		public void InstantChargeEnd()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xFE7FB8", Offset = "0xFE7FB8", VA = "0xFE7FB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CF078", Offset = "0x8CF078")]
		private IEnumerator FadeIn(Renderer renderer, string materialProperty, AnimationCurve aCurve, float duration = 0f, bool reverseDirection = false)
		{
			return null;
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xFE80B8", Offset = "0xFE80B8", VA = "0xFE80B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xFE80CC", Offset = "0xFE80CC", VA = "0xFE80CC")]
		public ChargerVisuals()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class DamageVolume : MonoBehaviour
	{
		[Token(Token = "0x2000203")]
		public enum VolumeType
		{
			[Token(Token = "0x4000BC3")]
			Sphere,
			[Token(Token = "0x4000BC4")]
			Cube
		}

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool triggerOnEnable;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6460", Offset = "0x8B6460")]
		private DamageTypeEnum damageType;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8B64AC", Offset = "0x8B64AC")]
		[SerializeField]
		protected List<SectorTag> buffSourceTags;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VolumeType volumeType;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool useWorldScale;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 volumeSize;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 volumeOffset;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float damage;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float knockBackForce;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool knockBackDirectionAuto;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector3 knockBackDirection;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6578", Offset = "0x8B6578")]
		[SerializeField]
		private SfxTrigger hitOtherSfx;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SfxTrigger hitAsteroidSfx;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SfxTrigger hitOrganicSfx;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SfxTrigger hitShieldSfx;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SfxTrigger hitForcefieldSfx;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Collider[] PHYSICS_OVERLAP_BUFFER;

		[Token(Token = "0x17000258")]
		private float VolumeRadius
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xC4C6A0", Offset = "0xC4C6A0", VA = "0xC4C6A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000259")]
		private Vector3 VolumeSize
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0xC4C730", Offset = "0xC4C730", VA = "0xC4C730")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xC4C7B4", Offset = "0xC4C7B4", VA = "0xC4C7B4")]
		protected void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xC4C990", Offset = "0xC4C990", VA = "0xC4C990")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xC4C9A0", Offset = "0xC4C9A0", VA = "0xC4C9A0")]
		public void DealDamageInVolume()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xC4CFC0", Offset = "0xC4CFC0", VA = "0xC4CFC0")]
		public void SetDamage(float damage)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xC4CC60", Offset = "0xC4CC60", VA = "0xC4CC60")]
		private void PlaySound(Collider collider)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xC4CE60", Offset = "0xC4CE60", VA = "0xC4CE60")]
		private void DealDamage(Collider collider, Vector3 volumeCenter)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xC4CFC8", Offset = "0xC4CFC8", VA = "0xC4CFC8")]
		private void AddForceOnHitObject(Collider collider, Vector3 volumeCenter)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xC4D12C", Offset = "0xC4D12C", VA = "0xC4D12C")]
		public DamageVolume()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class FXScaler : MonoBehaviour
	{
		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float scaleMultiplier;

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xC5AB58", Offset = "0xC5AB58", VA = "0xC5AB58")]
		public void TryMultiplyScale(Transform fxRoot)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xC5ABA4", Offset = "0xC5ABA4", VA = "0xC5ABA4")]
		public static void TryMultiplyScale(GameObject source, Transform fxRoot)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xC5AC24", Offset = "0xC5AC24", VA = "0xC5AC24")]
		public FXScaler()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class PlayerShipRangeCheck : GameMonoBehaviour
	{
		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6614", Offset = "0x8B6614")]
		private float distance;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnPlayerShipInRange;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnPlayerShipLeftRange;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isInRange;

		[Token(Token = "0x1700025A")]
		protected override bool EnableOnLoadBalancedUpdate
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0xCE3CC8", Offset = "0xCE3CC8", VA = "0xCE3CC8", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0xCE3CD0", Offset = "0xCE3CD0", VA = "0xCE3CD0", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xCE3CD4", Offset = "0xCE3CD4", VA = "0xCE3CD4", Slot = "35")]
		protected override void OnLoadBalancedUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xCE3ED8", Offset = "0xCE3ED8", VA = "0xCE3ED8")]
		public PlayerShipRangeCheck()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A8F10", Offset = "0x8A8F10")]
	public class PlayerShipSettings : ScriptableObject
	{
		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SectorTag playerShipTag;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6670", Offset = "0x8B6670")]
		private SectorTag defaultSkinTag;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SectorTag[] unlockableSkinTags;

		[Token(Token = "0x1700025B")]
		public SectorTag PlayerShipTag
		{
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0xCE3EE0", Offset = "0xCE3EE0", VA = "0xCE3EE0")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x1700025C")]
		public SectorTag DefaultSkinTag
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0xCE3EEC", Offset = "0xCE3EEC", VA = "0xCE3EEC")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x1700025D")]
		public SectorTag[] UnlockableSkinTags
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xCE3EF8", Offset = "0xCE3EF8", VA = "0xCE3EF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xCE3F00", Offset = "0xCE3F00", VA = "0xCE3F00")]
		public PlayerShipSettings()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class PlayerShipSkinHandler : GameMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000208")]
		public struct SkinSetting
		{
			[Token(Token = "0x4000BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorTag skinTag;

			[Token(Token = "0x4000BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material skinMaterial;
		}

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SectorTag playerShipTag;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SkinSetting[] skinSettings;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int currentIndex;

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xCE3F9C", Offset = "0xCE3F9C", VA = "0xCE3F9C", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xCE40E4", Offset = "0xCE40E4", VA = "0xCE40E4")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xCE437C", Offset = "0xCE437C", VA = "0xCE437C", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xCE44B4", Offset = "0xCE44B4", VA = "0xCE44B4")]
		private void OnSkinChanged(SectorTag shipTag, SectorTag skinTag)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xCE4274", Offset = "0xCE4274", VA = "0xCE4274")]
		private void SetSkin(SectorTag skinTag)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xCE454C", Offset = "0xCE454C", VA = "0xCE454C")]
		public PlayerShipSkinHandler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000209")]
	public class ProjectileReferences
	{
		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B66FC", Offset = "0x8B66FC")]
		public Rigidbody body;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject projectileArt;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem effectiveHitEffect;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem hitEffect;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider collider;

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xCE7A24", Offset = "0xCE7A24", VA = "0xCE7A24")]
		public ProjectileReferences()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class ProjectileFireData
	{
		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float abilityRange;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 abilityAimDirection;

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xCE7A1C", Offset = "0xCE7A1C", VA = "0xCE7A1C")]
		public ProjectileFireData()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class Projectile : MonoBehaviour, IProjectile, IBuffable
	{
		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6734", Offset = "0x8B6734")]
		[SerializeField]
		private float damage;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float health;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float lifetime;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float knockBackForce;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private ForceMode knockBackForceMode;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool adjustToAimDirectionAtTarget;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool ignoreSameFaction;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B67F0", Offset = "0x8B67F0")]
		[SerializeField]
		private ProjectileReferences references;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isMoving;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float lifetimeTimer;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8B682C", Offset = "0x8B682C")]
		[SerializeField]
		protected List<SectorTag> buffSourceTags;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B6878", Offset = "0x8B6878")]
		private IDamagable <Owner>k__BackingField;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B6888", Offset = "0x8B6888")]
		private bool <ProjectileDestroyed>k__BackingField;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B6898", Offset = "0x8B6898")]
		private readonly BuffsUtil <Buffs>k__BackingField;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B68A8", Offset = "0x8B68A8")]
		[SerializeField]
		private SfxTrigger hitOtherSfx;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SfxTrigger hitAsteroidSfx;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SfxTrigger hitOrganicSfx;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SfxTrigger hitShieldSfx;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SfxTrigger hitForcefieldSfx;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SfxTrigger hitDiminishedSfx;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SpaceEntitySteering.SteerPosition steerTarget;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IProjectileSource projectileSource;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool isHoming;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool hasPassedTarget;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		private bool isReflected;

		[Token(Token = "0x1700025E")]
		public Transform Transform
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xCE59E4", Offset = "0xCE59E4", VA = "0xCE59E4", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public float Lifetime
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0xCE59EC", Offset = "0xCE59EC", VA = "0xCE59EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000260")]
		public IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xCE59F4", Offset = "0xCE59F4", VA = "0xCE59F4", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public IDamagable Owner
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0xCE59FC", Offset = "0xCE59FC", VA = "0xCE59FC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF128", Offset = "0x8CF128")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0xCE5A04", Offset = "0xCE5A04", VA = "0xCE5A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF138", Offset = "0x8CF138")]
			private set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public float ProjectileHealth
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xCE5AF0", Offset = "0xCE5AF0", VA = "0xCE5AF0", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000263")]
		public bool ProjectileDestroyed
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xCE5AF8", Offset = "0xCE5AF8", VA = "0xCE5AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF148", Offset = "0x8CF148")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0xCE5B00", Offset = "0xCE5B00", VA = "0xCE5B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF158", Offset = "0x8CF158")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public float ProjectileSpeed
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0xCE5B0C", Offset = "0xCE5B0C", VA = "0xCE5B0C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000265")]
		public bool IsDestroyable
		{
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0xCE5BF0", Offset = "0xCE5BF0", VA = "0xCE5BF0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000266")]
		public DamageTypeEnum DamageType
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0xCE5BF8", Offset = "0xCE5BF8", VA = "0xCE5BF8", Slot = "8")]
			get
			{
				return default(DamageTypeEnum);
			}
		}

		[Token(Token = "0x17000267")]
		public float HomingDistanceFactor
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0xCE5C00", Offset = "0xCE5C00", VA = "0xCE5C00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000268")]
		public float KnockbackForce
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0xCE5CD8", Offset = "0xCE5CD8", VA = "0xCE5CD8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000269")]
		public BuffsUtil Buffs
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0xCE5DBC", Offset = "0xCE5DBC", VA = "0xCE5DBC", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF168", Offset = "0x8CF168")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		public bool IsBuffable
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0xCE5DC4", Offset = "0xCE5DC4", VA = "0xCE5DC4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xCE5A0C", Offset = "0xCE5A0C", VA = "0xCE5A0C", Slot = "5")]
		public float GetProjectileDamage(DamageTarget target)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xCE5DCC", Offset = "0xCE5DCC", VA = "0xCE5DCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xCE5E6C", Offset = "0xCE5E6C", VA = "0xCE5E6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xCE5EFC", Offset = "0xCE5EFC", VA = "0xCE5EFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xCE5F30", Offset = "0xCE5F30", VA = "0xCE5F30", Slot = "9")]
		public void Setup(IDamagable owner, SpaceEntitySteering.SteerPosition steerTarget, IProjectileSource projectileSource)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xCE6148", Offset = "0xCE6148", VA = "0xCE6148", Slot = "10")]
		public void Fire()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xCE6154", Offset = "0xCE6154", VA = "0xCE6154", Slot = "11")]
		public void DamageProjectile(IDamagable cause, float damage, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xCE6498", Offset = "0xCE6498", VA = "0xCE6498")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xCE676C", Offset = "0xCE676C", VA = "0xCE676C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xCE6334", Offset = "0xCE6334", VA = "0xCE6334")]
		private void Impact(bool isEffective = false)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xCE75BC", Offset = "0xCE75BC", VA = "0xCE75BC")]
		private void AddForceOnHitObject(Collider collider)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xCE778C", Offset = "0xCE778C", VA = "0xCE778C")]
		private void Reflect(IForcefield shield)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xCE738C", Offset = "0xCE738C", VA = "0xCE738C")]
		private bool CheckFriendlyFire(IDamagable damagable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xCE7158", Offset = "0xCE7158", VA = "0xCE7158")]
		public void ImpactedForcefield(IForcefield shield)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xCE6DF0", Offset = "0xCE6DF0", VA = "0xCE6DF0")]
		public static bool CheckProjectileIgnoreTriggerEnter(Collider other, IProjectile projectile, out float triggerDamage, out IProjectile otherProjectile)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xCE74EC", Offset = "0xCE74EC", VA = "0xCE74EC")]
		public static float CalculateProjectileDamage(float baseDamage, IDamagable damagable, bool isReflected)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xCE7990", Offset = "0xCE7990", VA = "0xCE7990")]
		public Projectile()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class RankVisuals : GameMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200020D")]
		private class RankUpTiers
		{
			[Token(Token = "0x4000BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string rankName;

			[Token(Token = "0x4000BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int ranklevelValue;

			[Token(Token = "0x4000BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool triggerRankBool;

			[Token(Token = "0x4000BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float lineWidth;

			[Token(Token = "0x4000BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lineCoreWidth;

			[Token(Token = "0x4000C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent rankEvents;

			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0xD705B4", Offset = "0xD705B4", VA = "0xD705B4")]
			public RankUpTiers()
			{
			}
		}

		[Token(Token = "0x200020E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8F7C", Offset = "0x8A8F7C")]
		private sealed class <RankUpFlow>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int tierrank;

			[Token(Token = "0x4000C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RankVisuals <>4__this;

			[Token(Token = "0x1700026C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DED")]
				[Address(RVA = "0xD70564", Offset = "0xD70564", VA = "0xD70564", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DEF")]
				[Address(RVA = "0xD705AC", Offset = "0xD705AC", VA = "0xD705AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0xD70204", Offset = "0xD70204", VA = "0xD70204")]
			[DebuggerHidden]
			public <RankUpFlow>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0xD70230", Offset = "0xD70230", VA = "0xD70230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0xD70234", Offset = "0xD70234", VA = "0xD70234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xD7056C", Offset = "0xD7056C", VA = "0xD7056C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int currentTier;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6944", Offset = "0x8B6944")]
		private string ranklevelVariable;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string rankboolVariable;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RankUpTiers[] rankUpTiers;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine rankUpCoroutine;

		[Token(Token = "0x1700026B")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0xCEA124", Offset = "0xCEA124", VA = "0xCEA124", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xCEA12C", Offset = "0xCEA12C", VA = "0xCEA12C")]
		public void PlayRankUpEffects(int tierrank)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xCEA230", Offset = "0xCEA230", VA = "0xCEA230")]
		public void PlayCurrentRankUpEffects()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xCEA1A8", Offset = "0xCEA1A8", VA = "0xCEA1A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CF178", Offset = "0x8CF178")]
		private IEnumerator RankUpFlow(int tierrank)
		{
			return null;
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xCEA288", Offset = "0xCEA288", VA = "0xCEA288")]
		public RankVisuals()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class SatelliteVisuals : MonoBehaviour
	{
		[Token(Token = "0x2000210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8F8C", Offset = "0x8A8F8C")]
		private sealed class <FadeOutPistons>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayStart;

			[Token(Token = "0x4000C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Renderer renderer;

			[Token(Token = "0x4000C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string materialProperty;

			[Token(Token = "0x4000C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public SatelliteVisuals <>4__this;

			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <t>5__2;

			[Token(Token = "0x1700026E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DF7")]
				[Address(RVA = "0xD73DD8", Offset = "0xD73DD8", VA = "0xD73DD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DF9")]
				[Address(RVA = "0xD73E20", Offset = "0xD73E20", VA = "0xD73E20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0xD73BA4", Offset = "0xD73BA4", VA = "0xD73BA4")]
			[DebuggerHidden]
			public <FadeOutPistons>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0xD73BD0", Offset = "0xD73BD0", VA = "0xD73BD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0xD73BD4", Offset = "0xD73BD4", VA = "0xD73BD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0xD73DE0", Offset = "0xD73DE0", VA = "0xD73DE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B69D0", Offset = "0x8B69D0")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string noSatelliteVariable;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6A2C", Offset = "0x8B6A2C")]
		private GameObject[] pistons;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6A78", Offset = "0x8B6A78")]
		private Renderer coreRenderer;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string corePistonVisibilityVariable;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool instantCorePistonVisibilitySwitch;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float corePistonVisibilityDuration;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float corePistonVisibilityDelayStart;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine coroutineProcess;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent noSatelliteLeftEvents;

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xCF71AC", Offset = "0xCF71AC", VA = "0xCF71AC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xCF72D4", Offset = "0xCF72D4", VA = "0xCF72D4")]
		public void TriggerNoSatellite()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xCF744C", Offset = "0xCF744C", VA = "0xCF744C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CF228", Offset = "0x8CF228")]
		private IEnumerator FadeOutPistons(Renderer renderer, string materialProperty, float duration = 0f, float delayStart = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xCF750C", Offset = "0xCF750C", VA = "0xCF750C")]
		public SatelliteVisuals()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class ShipDrone : AiSpaceShip
	{
		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6B04", Offset = "0x8B6B04")]
		[SerializeField]
		private float trackSpeed;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		[SerializeField]
		private float trackSpeedAtDistance;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[SerializeField]
		private float rotationDegreesPerSecond;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private Transform trackPoint;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private SpaceObject owner;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private bool isSetup;

		[Token(Token = "0x17000270")]
		public Transform TrackPoint
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0xF46954", Offset = "0xF46954", VA = "0xF46954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xF4695C", Offset = "0xF4695C", VA = "0xF4695C")]
		public void Setup(Transform trackPoint, SpaceObject owner)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xF46C40", Offset = "0xF46C40", VA = "0xF46C40")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xF46EB8", Offset = "0xF46EB8", VA = "0xF46EB8", Slot = "78")]
		protected override void Die(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xF46EE0", Offset = "0xF46EE0", VA = "0xF46EE0")]
		public ShipDrone()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class DataNotFoundException : Exception
	{
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xC4DE78", Offset = "0xC4DE78", VA = "0xC4DE78")]
		public DataNotFoundException()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xC4DEDC", Offset = "0xC4DEDC", VA = "0xC4DEDC")]
		public DataNotFoundException(string dataType)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xC4DF7C", Offset = "0xC4DF7C", VA = "0xC4DF7C")]
		public DataNotFoundException(string dataType, Exception inner)
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class ShipGuardian : AiSpaceShip
	{
		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6B70", Offset = "0x8B6B70")]
		[SerializeField]
		private string ramStateTag;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6BBC", Offset = "0x8B6BBC")]
		[SerializeField]
		private UnityEventDelayChain introDelayChain;

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xF46EFC", Offset = "0xF46EFC", VA = "0xF46EFC", Slot = "30")]
		protected override void OnGameStart()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xF46FE4", Offset = "0xF46FE4", VA = "0xF46FE4", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xF47054", Offset = "0xF47054", VA = "0xF47054", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xF470F4", Offset = "0xF470F4", VA = "0xF470F4")]
		private void ReviveGuardian(SpaceObject _)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xF471EC", Offset = "0xF471EC", VA = "0xF471EC")]
		public void GuardianDeath()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xF4738C", Offset = "0xF4738C", VA = "0xF4738C")]
		public ShipGuardian()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class ShipSatellite : AiSpaceShip
	{
		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6C08", Offset = "0x8B6C08")]
		[SerializeField]
		private float trackSpeed;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[SerializeField]
		private LineRenderer connectionLine;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[SerializeField]
		private UnityEvent onRankUp;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		[SerializeField]
		private bool setupConnectionLineVisibilityOnce;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private Transform trackPoint;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private bool isSetup;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private ShipAbilityPassiveSatellites ability;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6C84", Offset = "0x8B6C84")]
		[SerializeField]
		private AssetReferenceGameObject[] rankWeapons;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private List<GameObject> rankWeaponPrefabs;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private int currentRank;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private RankVisuals newRankVisualSystemCore;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private RankVisuals newRankVisualSystemLocal;

		[Token(Token = "0x17000271")]
		public Transform TrackPoint
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xF4BF04", Offset = "0xF4BF04", VA = "0xF4BF04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0xF4BF0C", Offset = "0xF4BF0C", VA = "0xF4BF0C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xF4BF14", Offset = "0xF4BF14", VA = "0xF4BF14", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xF4C078", Offset = "0xF4C078", VA = "0xF4C078", Slot = "75")]
		public override void CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xF4C11C", Offset = "0xF4C11C", VA = "0xF4C11C")]
		public void Setup(Transform trackPoint, ShipAbilityPassiveSatellites ability, int startingRank)
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xF4C384", Offset = "0xF4C384", VA = "0xF4C384")]
		public void UpdateTrackPointPos(Vector3 newPos)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xF4C3A0", Offset = "0xF4C3A0", VA = "0xF4C3A0")]
		public void Upgrade()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xF4C3AC", Offset = "0xF4C3AC", VA = "0xF4C3AC")]
		public void SetRank(int newRank)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xF4C578", Offset = "0xF4C578", VA = "0xF4C578")]
		private void OnSlotableLoaded(GameObject slotablePrefab)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xF4C6B0", Offset = "0xF4C6B0", VA = "0xF4C6B0")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xF4C930", Offset = "0xF4C930", VA = "0xF4C930", Slot = "88")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xF4CAF4", Offset = "0xF4CAF4", VA = "0xF4CAF4", Slot = "78")]
		protected override void Die(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xF4CB30", Offset = "0xF4CB30", VA = "0xF4CB30")]
		public ShipSatellite()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class ShipSectorTagEvents : MonoBehaviour
	{
		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SectorTagCollectionHierarchy tags;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool triggerOncePerSector;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onTagsMatch;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool hasTriggeredThisSector;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xF4CB48", Offset = "0xF4CB48", VA = "0xF4CB48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xF4CBF0", Offset = "0xF4CBF0", VA = "0xF4CBF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xF4CC98", Offset = "0xF4CC98", VA = "0xF4CC98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xF4CD40", Offset = "0xF4CD40", VA = "0xF4CD40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xF4CDE8", Offset = "0xF4CDE8", VA = "0xF4CDE8")]
		private void OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xF4CED8", Offset = "0xF4CED8", VA = "0xF4CED8")]
		private void OnTagsChanged()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xF4CE94", Offset = "0xF4CE94", VA = "0xF4CE94")]
		private void TriggerEvent()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xF4D02C", Offset = "0xF4D02C", VA = "0xF4D02C")]
		public ShipSectorTagEvents()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class ShipShieldGraphic : MonoBehaviour
	{
		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer renderer;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string materialProperty;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xF4D0B4", Offset = "0xF4D0B4", VA = "0xF4D0B4")]
		public float GetShieldMaterialProperty()
		{
			return default(float);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xF4D1B0", Offset = "0xF4D1B0", VA = "0xF4D1B0")]
		public void SetShieldMaterialProperty(float value)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xF4D2D0", Offset = "0xF4D2D0", VA = "0xF4D2D0")]
		public ShipShieldGraphic()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public abstract class SlotableFXController : MonoBehaviour
	{
		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ShipSlotable slotable;

		[Token(Token = "0x17000273")]
		public float Effect
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0xF532C0", Offset = "0xF532C0", VA = "0xF532C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xF532CC", Offset = "0xF532CC", VA = "0xF532CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E23")]
		protected abstract float CalculateEffect();

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xF53328", Offset = "0xF53328", VA = "0xF53328")]
		protected SlotableFXController()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class SlotableFXControllerProximitySensor : SlotableFXController
	{
		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6D00", Offset = "0x8B6D00")]
		[SerializeField]
		private Vector2 range;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Faction targetFaction;

		[Token(Token = "0x17000274")]
		private Vector3 OwnerPosition
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xF53330", Offset = "0xF53330", VA = "0xF53330")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xF53360", Offset = "0xF53360", VA = "0xF53360", Slot = "4")]
		protected override float CalculateEffect()
		{
			return default(float);
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xF53630", Offset = "0xF53630", VA = "0xF53630")]
		public SlotableFXControllerProximitySensor()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class SlotableFXParticleSystemEmission : MonoBehaviour
	{
		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SlotableFXController effectController;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem targetParticleSystem;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float baseEmissionRate;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem.EmissionModule emissionModule;

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xF53638", Offset = "0xF53638", VA = "0xF53638")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xF53790", Offset = "0xF53790", VA = "0xF53790")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xF53804", Offset = "0xF53804", VA = "0xF53804")]
		public SlotableFXParticleSystemEmission()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class SpaceEntityTeleportAnticipationEffect : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200021B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8F9C", Offset = "0x8A8F9C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SpaceEntityTeleportAnticipationEffect> <>9__4_0;

			[Token(Token = "0x4000C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<SpaceEntityTeleportAnticipationEffect> <>9__5_0;

			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x1004040", Offset = "0x1004040", VA = "0x1004040")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x1004048", Offset = "0x1004048", VA = "0x1004048")]
			internal void <InvokeAnticipationStart>b__4_0(SpaceEntityTeleportAnticipationEffect p)
			{
			}

			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x100406C", Offset = "0x100406C", VA = "0x100406C")]
			internal void <InvokeAnticipationEnd>b__5_0(SpaceEntityTeleportAnticipationEffect p)
			{
			}
		}

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6D8C", Offset = "0x8B6D8C")]
		public float destroyAfterEndSeconds;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6DC4", Offset = "0x8B6DC4")]
		public UnityEvent onAnticipationStart;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onAnticipationEnd;

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x14FE68C", Offset = "0x14FE68C", VA = "0x14FE68C")]
		public static void DestroyEffect(GameObject effectObj, bool instant = false)
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x14FE7C4", Offset = "0x14FE7C4", VA = "0x14FE7C4")]
		public static void InvokeAnticipationStart(GameObject effectObj)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x14FE9A4", Offset = "0x14FE9A4", VA = "0x14FE9A4")]
		public static void InvokeAnticipationEnd(GameObject effectObj)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x14FE8CC", Offset = "0x14FE8CC", VA = "0x14FE8CC")]
		public static void AnticipationAction(GameObject effectObj, Action<SpaceEntityTeleportAnticipationEffect> action)
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x14FEAAC", Offset = "0x14FEAAC", VA = "0x14FEAAC")]
		public SpaceEntityTeleportAnticipationEffect()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class SpaceEntityVisuals : SpaceObjectVisuals
	{
		[Token(Token = "0x200021D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8FAC", Offset = "0x8A8FAC")]
		private sealed class <DeathImplosionStep>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpaceEntityVisuals <>4__this;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool hasEmissionProperty;

			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <t>5__2;

			[Token(Token = "0x1700027E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E59")]
				[Address(RVA = "0x10045F0", Offset = "0x10045F0", VA = "0x10045F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E5B")]
				[Address(RVA = "0x1004638", Offset = "0x1004638", VA = "0x1004638", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x1004090", Offset = "0x1004090", VA = "0x1004090")]
			[DebuggerHidden]
			public <DeathImplosionStep>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x10040BC", Offset = "0x10040BC", VA = "0x10040BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x10040C0", Offset = "0x10040C0", VA = "0x10040C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x10045F8", Offset = "0x10045F8", VA = "0x10045F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200021E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8FBC", Offset = "0x8A8FBC")]
		private sealed class <LerpingFloatProperty>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer renderer;

			[Token(Token = "0x4000C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string property;

			[Token(Token = "0x4000C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float from;

			[Token(Token = "0x4000C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float to;

			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Coroutine cRoutine;

			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <t>5__2;

			[Token(Token = "0x17000280")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E5F")]
				[Address(RVA = "0x1005EBC", Offset = "0x1005EBC", VA = "0x1005EBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000281")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E61")]
				[Address(RVA = "0x1005F04", Offset = "0x1005F04", VA = "0x1005F04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x1005D58", Offset = "0x1005D58", VA = "0x1005D58")]
			[DebuggerHidden]
			public <LerpingFloatProperty>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x1005D84", Offset = "0x1005D84", VA = "0x1005D84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x1005D88", Offset = "0x1005D88", VA = "0x1005D88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x1005EC4", Offset = "0x1005EC4", VA = "0x1005EC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200021F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8FCC", Offset = "0x8A8FCC")]
		private sealed class <FlickerToRoutine>d__98 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer renderer;

			[Token(Token = "0x4000C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string property;

			[Token(Token = "0x4000C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SpaceEntityVisuals <>4__this;

			[Token(Token = "0x4000C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool from;

			[Token(Token = "0x4000C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float duration;

			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool to;

			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Coroutine cRoutine;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private bool <current>5__2;

			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private WaitForSeconds <wait>5__3;

			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <count>5__4;

			[Token(Token = "0x17000282")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E65")]
				[Address(RVA = "0x1004888", Offset = "0x1004888", VA = "0x1004888", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000283")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E67")]
				[Address(RVA = "0x10048D0", Offset = "0x10048D0", VA = "0x10048D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x1004640", Offset = "0x1004640", VA = "0x1004640")]
			[DebuggerHidden]
			public <FlickerToRoutine>d__98(int <>1__state)
			{
			}

			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x100466C", Offset = "0x100466C", VA = "0x100466C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x1004670", Offset = "0x1004670", VA = "0x1004670", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x1004890", Offset = "0x1004890", VA = "0x1004890", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8FDC", Offset = "0x8A8FDC")]
		private sealed class <TelegraphRoutine>d__102 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float activateTimer;

			[Token(Token = "0x4000C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpaceEntityVisuals <>4__this;

			[Token(Token = "0x4000C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onActivation;

			[Token(Token = "0x4000CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <timer>5__2;

			[Token(Token = "0x17000284")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E6B")]
				[Address(RVA = "0x10060F0", Offset = "0x10060F0", VA = "0x10060F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000285")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E6D")]
				[Address(RVA = "0x1006138", Offset = "0x1006138", VA = "0x1006138", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E68")]
			[Address(RVA = "0x1005F0C", Offset = "0x1005F0C", VA = "0x1005F0C")]
			[DebuggerHidden]
			public <TelegraphRoutine>d__102(int <>1__state)
			{
			}

			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x1005F38", Offset = "0x1005F38", VA = "0x1005F38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x1005F3C", Offset = "0x1005F3C", VA = "0x1005F3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x10060F8", Offset = "0x10060F8", VA = "0x10060F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000221")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8FEC", Offset = "0x8A8FEC")]
		private sealed class <LerpToTeleport>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpaceEntityVisuals <>4__this;

			[Token(Token = "0x4000CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x4000CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <tTotal>5__3;

			[Token(Token = "0x17000286")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E71")]
				[Address(RVA = "0x1005D08", Offset = "0x1005D08", VA = "0x1005D08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000287")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E73")]
				[Address(RVA = "0x1005D50", Offset = "0x1005D50", VA = "0x1005D50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x1005194", Offset = "0x1005194", VA = "0x1005194")]
			[DebuggerHidden]
			public <LerpToTeleport>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x10051C0", Offset = "0x10051C0", VA = "0x10051C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x10051C4", Offset = "0x10051C4", VA = "0x10051C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x1005D10", Offset = "0x1005D10", VA = "0x1005D10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000222")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A8FFC", Offset = "0x8A8FFC")]
		private sealed class <LerpOutTeleport>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpaceEntityVisuals <>4__this;

			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000288")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E77")]
				[Address(RVA = "0x1005144", Offset = "0x1005144", VA = "0x1005144", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000289")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E79")]
				[Address(RVA = "0x100518C", Offset = "0x100518C", VA = "0x100518C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x10048D8", Offset = "0x10048D8", VA = "0x10048D8")]
			[DebuggerHidden]
			public <LerpOutTeleport>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x1004904", Offset = "0x1004904", VA = "0x1004904", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x1004908", Offset = "0x1004908", VA = "0x1004908", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x100514C", Offset = "0x100514C", VA = "0x100514C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6DFC", Offset = "0x8B6DFC")]
		[SerializeField]
		private Animator entityAnimator;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool sendNormalizedSpeedToAnimator;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string normalizedMovementProperty;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6E68", Offset = "0x8B6E68")]
		[SerializeField]
		private GameObject[] abilityTelegraphToggles;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve abilityTelegraphToggleCurve;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6EC4", Offset = "0x8B6EC4")]
		[SerializeField]
		private GameObject[] teleportPositionObjects;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B6F10", Offset = "0x8B6F10")]
		private GameObject teleportGameObject;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Renderer teleportRenderer;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B6F6C", Offset = "0x8B6F6C")]
		[SerializeField]
		private Vector3 teleportPositionOffset;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6FB8", Offset = "0x8B6FB8")]
		[SerializeField]
		private bool enableOnTeleportCurve;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationCurve onTeleportCurve;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float delayBeforeTeleportVisualisation;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float ToTeleportDuration;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float ToTeleportSmearDuration;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float OutTeleportDuration;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float OutTeleportSmearDuration;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly string materialDestructionProperty;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly string materialHyperspeedJumpProperty;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly string materialEmissionProperty;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private string teleportJumpProperty;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private bool playTeleportSfx;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[SerializeField]
		private bool playTeleportWindupEffect;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		[SerializeField]
		private bool disableThrustersOnTeleportIn;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		[SerializeField]
		private bool disableThrustersOnTeleportOut;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B70B4", Offset = "0x8B70B4")]
		private GameObject[] thrusterFlames;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private AnimationCurve thrusterFXScaleCurve;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrailRenderer thrusterTrail;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private bool thrusterScaleX;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[SerializeField]
		private bool thrusterScaleY;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		[SerializeField]
		private bool thrusterScaleZ;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7150", Offset = "0x8B7150")]
		[SerializeField]
		private Renderer deathObjectRenderer;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Renderer deathBubbleRenderer;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private bool useSecondAnticipationStep;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		[SerializeField]
		private bool useDeathBubble;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private float deathDiffuseDuration;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private bool usePercantagesInsteadOfDuration;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B71EC", Offset = "0x8B71EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B71EC", Offset = "0x8B71EC")]
		private float deathDiffusePercantage;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float deathEmissionFlickerDuration;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private string materialImplosionProperty;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float deathImplosionDuration;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private string materialBubbleProperty;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private AnimationCurve deathImplosionAnimationCurve;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private AnimationCurve deathBubbleAnimationAlphaCurve;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Vector3 deathBubbleStartScale;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private Vector3 deathBubbleEndScale;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private bool disableThrustersOnDeath;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[HideInInspector]
		public float currentToTeleportDuration;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public float currentToTeleportSmearDuration;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[HideInInspector]
		public float currentOutTeleportDuration;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public float currentOutTeleportSmearDuration;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private SpaceEntity spaceEntity;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Vector3 thrusterScale;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float newThrusterValue;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Coroutine destructionCoroutineProcess;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Coroutine teleportCoroutineProcess;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Coroutine flickerCoroutineProcess;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Coroutine abilityTelegraphProcess;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Coroutine anticipationBubbleCoroutineProcess;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool disableThrusters;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float thrusterFXScaleMultiplier;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool bubbleHasProperty;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private int emissionPropertyDefault;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private GameObject localRendererParent;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Vector3 currentPosition;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3[] teleportPositionObjectStartPosition;

		[Token(Token = "0x17000275")]
		public float GetToTeleportDuration
		{
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x14FEAB4", Offset = "0x14FEAB4", VA = "0x14FEAB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000276")]
		public float GetToTeleportSmearDuration
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x14FEABC", Offset = "0x14FEABC", VA = "0x14FEABC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000277")]
		public float GetOutTeleportDuration
		{
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x14FEAC4", Offset = "0x14FEAC4", VA = "0x14FEAC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000278")]
		public float GetOutTeleportSmearDuration
		{
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x14FEACC", Offset = "0x14FEACC", VA = "0x14FEACC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000279")]
		public bool PlayTeleportWindupEffect
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x14FEAD4", Offset = "0x14FEAD4", VA = "0x14FEAD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027A")]
		public float TotalTeleportToDuration
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x14FEADC", Offset = "0x14FEADC", VA = "0x14FEADC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027B")]
		public float TotalTeleportOutDuration
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x14FEAF4", Offset = "0x14FEAF4", VA = "0x14FEAF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027C")]
		public float FunctionalTeleportToDuration
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x14FEB04", Offset = "0x14FEB04", VA = "0x14FEB04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027D")]
		public float FunctionalTeleportOutDuration
		{
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x14FEB1C", Offset = "0x14FEB1C", VA = "0x14FEB1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x14FEB24", Offset = "0x14FEB24", VA = "0x14FEB24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x14FEF7C", Offset = "0x14FEF7C", VA = "0x14FEF7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x14FF154", Offset = "0x14FF154", VA = "0x14FF154")]
		public void EnableThrusterTrailEmission()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x14FF294", Offset = "0x14FF294", VA = "0x14FF294")]
		public void DisableThrusterTrailEmission()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x14FF3D8", Offset = "0x14FF3D8", VA = "0x14FF3D8")]
		public void SetThrusterFXScaleMultiplier(float scaleMultiplier)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x14FF3E0", Offset = "0x14FF3E0", VA = "0x14FF3E0")]
		public void ResetThrusterFXScaleMultiplier()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x14FF3EC", Offset = "0x14FF3EC", VA = "0x14FF3EC")]
		public void DestructionMaterialEffects()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x14FF7BC", Offset = "0x14FF7BC", VA = "0x14FF7BC")]
		public void ResetDestructionMaterialEffects()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x14FFA70", Offset = "0x14FFA70", VA = "0x14FFA70")]
		public void EnableHyperspeedJumpMaterialEffects(bool instant)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x15001B0", Offset = "0x15001B0", VA = "0x15001B0")]
		public void DisableHyperspeedJumpMaterialEffects(bool instant)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x1500288", Offset = "0x1500288", VA = "0x1500288")]
		public void DisableHyperspeedJumpMaterialEffectsOnDeath(bool keepPosition)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x14FF730", Offset = "0x14FF730", VA = "0x14FF730")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CF2D8", Offset = "0x8CF2D8")]
		private IEnumerator DeathImplosionStep(bool hasEmissionProperty)
		{
			return null;
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x14FF5E0", Offset = "0x14FF5E0", VA = "0x14FF5E0")]
		private void LerpMaterialFloatProperty(Coroutine cRoutine, Renderer renderer, string property, float from = 0f, float to = 1f, float duration = 3f)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x14FF67C", Offset = "0x14FF67C", VA = "0x14FF67C")]
		private void FlickerMaterialProterty(Coroutine cRoutine, Renderer renderer, string property, bool from, bool to, float duration = 3f)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x1500360", Offset = "0x1500360", VA = "0x1500360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CF338", Offset = "0x8CF338")]
		private IEnumerator LerpingFloatProperty(Coroutine cRoutine, Renderer renderer, string property, float from = 0f, float to = 1f, float duration = 3f)
		{
			return null;
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x150042C", Offset = "0x150042C", VA = "0x150042C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CF398", Offset = "0x8CF398")]
		private IEnumerator FlickerToRoutine(Coroutine cRoutine, Renderer renderer, string property, bool from, bool to, float duration = 3f)
		{
			return null;
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x14FFA68", Offset = "0x14FFA68", VA = "0x14FFA68")]
		private int BoolToInt(bool val)
		{
			return default(int);
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x1500520", Offset = "0x1500520", VA = "0x1500520")]
		public void TelegraphAbilityUse(float activateTime, Action onActivation)
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x1500600", Offset = "0x1500600", VA = "0x1500600")]
		private void TelegraphAbilityStop()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x1500640", Offset = "0x1500640", VA = "0x1500640")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CF3F8", Offset = "0x8CF3F8")]
		private IEnumerator TelegraphRoutine(float activateTimer, Action onActivation)
		{
			return null;
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x14FFB48", Offset = "0x14FFB48", VA = "0x14FFB48")]
		private void TeleportFlow(bool direction, bool instant, bool keepPosition)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x15006E4", Offset = "0x15006E4", VA = "0x15006E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CF458", Offset = "0x8CF458")]
		private IEnumerator LerpToTeleport()
		{
			return null;
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x150075C", Offset = "0x150075C", VA = "0x150075C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CF4B8", Offset = "0x8CF4B8")]
		private IEnumerator LerpOutTeleport()
		{
			return null;
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x15007D4", Offset = "0x15007D4", VA = "0x15007D4")]
		public SpaceEntityVisuals()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x1500AD4", Offset = "0x1500AD4", VA = "0x1500AD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF518", Offset = "0x8CF518")]
		private void <Awake>b__83_0(SpaceObject p)
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class SpaceObjectVisuals : MonoBehaviour
	{
		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7320", Offset = "0x8B7320")]
		private GameObject rendererParent;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B736C", Offset = "0x8B736C")]
		[SerializeField]
		private Renderer objectRenderer;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer shieldRenderer;

		[Token(Token = "0x1700028A")]
		public Renderer ObjectRenderer
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x15061D0", Offset = "0x15061D0", VA = "0x15061D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028B")]
		public Renderer ShieldRenderer
		{
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x15061D8", Offset = "0x15061D8", VA = "0x15061D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		public GameObject RendererParent
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x15061E0", Offset = "0x15061E0", VA = "0x15061E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x1500ACC", Offset = "0x1500ACC", VA = "0x1500ACC")]
		public SpaceObjectVisuals()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class SpaceShip : SpaceEntity
	{
		[Token(Token = "0x2000225")]
		public enum AbilityChangeType
		{
			[Token(Token = "0x4000CD3")]
			Added,
			[Token(Token = "0x4000CD4")]
			Removed,
			[Token(Token = "0x4000CD5")]
			Order,
			[Token(Token = "0x4000CD6")]
			Any
		}

		[Token(Token = "0x2000226")]
		public struct ActiveProjectile
		{
			[Token(Token = "0x4000CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ShipAbilityProjectile projectile;

			[Token(Token = "0x4000CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Faction faction;

			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0xE9DDF4", Offset = "0xE9DDF4", VA = "0xE9DDF4")]
			public ActiveProjectile(ShipAbilityProjectile projectile, Faction faction)
			{
			}
		}

		[Token(Token = "0x2000227")]
		public delegate void AbilityChangeCallback<TAbility>(AbilityChangeType type, TAbility ability);

		[Serializable]
		[Token(Token = "0x2000228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A900C", Offset = "0x8A900C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<ShipAbilityActive> <>9__113_0;

			[Token(Token = "0x4000CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<ShipAbilityPassive> <>9__116_0;

			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0xE9DCB0", Offset = "0xE9DCB0", VA = "0xE9DCB0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0xE9DCB8", Offset = "0xE9DCB8", VA = "0xE9DCB8")]
			internal bool <AddActiveAbility>b__113_0(ShipAbilityActive p)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0xE9DD20", Offset = "0xE9DD20", VA = "0xE9DD20")]
			internal bool <AddPassiveAbility>b__116_0(ShipAbilityPassive p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000229")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A901C", Offset = "0x8A901C")]
		private sealed class <>c__DisplayClass115_0
		{
			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int abilityLevel;

			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0xE9DD88", Offset = "0xE9DD88", VA = "0xE9DD88")]
			public <>c__DisplayClass115_0()
			{
			}

			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0xE9DD90", Offset = "0xE9DD90", VA = "0xE9DD90")]
			internal void <SetPassiveAbility>b__0(ShipAbilityPassive p)
			{
			}
		}

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B73C8", Offset = "0x8B73C8")]
		[SerializeField]
		private bool invulnerableHideHealthbar;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x289")]
		[SerializeField]
		private bool invulnerableDisableTargeting;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7424", Offset = "0x8B7424")]
		private int maxActiveAbilitySlots;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private int maxPassiveAbilitySlots;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		private AssetReferenceGameObject[] startSlotables;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private bool logEquippedStatusForEquippedAbilities;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B74A0", Offset = "0x8B74A0")]
		[SerializeField]
		private Transform slotPoint;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B74EC", Offset = "0x8B74EC")]
		[SerializeField]
		private SfxTrigger accelerateSfx;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[SerializeField]
		private SfxTrigger cruzingSfx;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private float cruzingVolume;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[SerializeField]
		private SfxTrigger passiveAbilityEquipSfx;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[SerializeField]
		private SfxTrigger passiveDefectEquipSfx;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public SfxTrigger passiveAbilityUpgradeSfx;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public SfxTrigger passiveAbilityRecycleSfx;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7568", Offset = "0x8B7568")]
		[SerializeField]
		private AssetReferenceGameObject passiveAbilityEquipVfx;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B75B4", Offset = "0x8B75B4")]
		[SerializeField]
		private LocalizationKey shipName;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7600", Offset = "0x8B7600")]
		[SerializeField]
		private HapticPreset passiveDefectEquipHaptic;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B764C", Offset = "0x8B764C")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8B764C", Offset = "0x8B764C")]
		[SerializeField]
		private List<SectorTag> buffSourceTags;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private bool isShipActive;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B76AC", Offset = "0x8B76AC")]
		private float <CurrentDelta>k__BackingField;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B76EC", Offset = "0x8B76EC")]
		private ShipPartModAssignerHead <ShipPartModAssignerHead>k__BackingField;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private List<AssignableShipPartMod> activeShipPartMods;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private List<ShipAbilityActive> activeAbilitySlots;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private List<ShipAbilityPassive> passiveAbilitySlots;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private List<AddressableAssetDependency<GameObject>> startSlotableAssets;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private int startSlotablesAbilityActive;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private AddressableAssetDependency<GameObject> passiveAbilityEquipVfxAsset;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public UnityEvent<bool> onShipActiveChanged;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SpaceShip> activeSpaceShips;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<ActiveProjectile> activeProjectiles;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool sectorClear;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private static bool forceSectorNotClear;

		[Token(Token = "0x1700028D")]
		public LocalizationKey ShipName
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x15061E8", Offset = "0x15061E8", VA = "0x15061E8")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x1700028E")]
		public override IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x15061F8", Offset = "0x15061F8", VA = "0x15061F8", Slot = "73")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		public virtual bool IsShipActive
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x1506200", Offset = "0x1506200", VA = "0x1506200", Slot = "86")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x1506208", Offset = "0x1506208", VA = "0x1506208", Slot = "87")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public float CurrentDelta
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x150627C", Offset = "0x150627C", VA = "0x150627C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF708", Offset = "0x8CF708")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x1506284", Offset = "0x1506284", VA = "0x1506284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF718", Offset = "0x8CF718")]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public IReadOnlyList<ShipAbilityActive> ActiveAbilitySlots
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x150628C", Offset = "0x150628C", VA = "0x150628C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		public IReadOnlyList<ShipAbilityPassive> PassiveAbilitySlots
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x1506294", Offset = "0x1506294", VA = "0x1506294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000293")]
		public AssetReferenceGameObject[] StartSlotables
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x150629C", Offset = "0x150629C", VA = "0x150629C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		public bool LogEquippedStatusForEquippedAbilities
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x150667C", Offset = "0x150667C", VA = "0x150667C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000295")]
		public Transform SlotPoint
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x1506684", Offset = "0x1506684", VA = "0x1506684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		public ShipPartModAssignerHead ShipPartModAssignerHead
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x1506710", Offset = "0x1506710", VA = "0x1506710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF788", Offset = "0x8CF788")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x1506718", Offset = "0x1506718", VA = "0x1506718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF798", Offset = "0x8CF798")]
			private set
			{
			}
		}

		[Token(Token = "0x17000297")]
		private bool HideHealthbar
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x1506728", Offset = "0x1506728", VA = "0x1506728")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000298")]
		protected override bool EnableOnLoadBalancedUpdate
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x150677C", Offset = "0x150677C", VA = "0x150677C", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x1506784", Offset = "0x1506784", VA = "0x1506784", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		protected override UpdateWaitMode WaitOnLoadBalancedUpdate
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x1506788", Offset = "0x1506788", VA = "0x1506788", Slot = "28")]
			get
			{
				return default(UpdateWaitMode);
			}
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x1506790", Offset = "0x1506790", VA = "0x1506790", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public static IReadOnlyList<SpaceShip> ActiveSpaceShips
		{
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x1506794", Offset = "0x1506794", VA = "0x1506794")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		public static IReadOnlyList<ActiveProjectile> ActiveProjectiles
		{
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x15067F8", Offset = "0x15067F8", VA = "0x15067F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		public static bool SectorClear
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x1506C3C", Offset = "0x1506C3C", VA = "0x1506C3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x1506D0C", Offset = "0x1506D0C", VA = "0x1506D0C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public static bool ForceSectorNotClear
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x1506DE0", Offset = "0x1506DE0", VA = "0x1506DE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x1506E44", Offset = "0x1506E44", VA = "0x1506E44")]
			set
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event AbilityChangeCallback<ShipAbilityActive> ActiveAbilitiesChanged
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x15062A4", Offset = "0x15062A4", VA = "0x15062A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF728", Offset = "0x8CF728")]
			add
			{
			}
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x1506348", Offset = "0x1506348", VA = "0x1506348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF738", Offset = "0x8CF738")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event AbilityChangeCallback<ShipAbilityPassive> PassiveAbilitiesChanged
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x15063EC", Offset = "0x15063EC", VA = "0x15063EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF748", Offset = "0x8CF748")]
			add
			{
			}
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x1506490", Offset = "0x1506490", VA = "0x1506490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF758", Offset = "0x8CF758")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event Action<SpaceShip> StartSlotablesAdded
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x1506534", Offset = "0x1506534", VA = "0x1506534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF768", Offset = "0x8CF768")]
			add
			{
			}
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x15065D8", Offset = "0x15065D8", VA = "0x15065D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF778", Offset = "0x8CF778")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public static event Action<SpaceShip> ActiveSpaceShipAdded
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x150685C", Offset = "0x150685C", VA = "0x150685C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF7A8", Offset = "0x8CF7A8")]
			add
			{
			}
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x1506954", Offset = "0x1506954", VA = "0x1506954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF7B8", Offset = "0x8CF7B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public static event Action<bool> SectorClearChanged
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x1506A4C", Offset = "0x1506A4C", VA = "0x1506A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF7C8", Offset = "0x8CF7C8")]
			add
			{
			}
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x1506B44", Offset = "0x1506B44", VA = "0x1506B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF7D8", Offset = "0x8CF7D8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1506F54", Offset = "0x1506F54", VA = "0x1506F54", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1508350", Offset = "0x1508350", VA = "0x1508350", Slot = "82")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x1508468", Offset = "0x1508468", VA = "0x1508468", Slot = "83")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x150849C", Offset = "0x150849C", VA = "0x150849C")]
		private void UpdateAbilityShipPartMods(AbilityChangeType type, ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1508720", Offset = "0x1508720", VA = "0x1508720")]
		private void PlayAbilityEquipEffects(AbilityChangeType type, ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x1508944", Offset = "0x1508944", VA = "0x1508944")]
		private void TriggerAbilityEquipHapticFeedback(AbilityChangeType type, ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x1508554", Offset = "0x1508554", VA = "0x1508554")]
		private void RefreshActiveShipPartMods()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x1508A80", Offset = "0x1508A80", VA = "0x1508A80")]
		public bool HasPassiveAblility(ShipAbilityPassive passiveAbility, out int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x1508B6C", Offset = "0x1508B6C", VA = "0x1508B6C", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x1508C7C", Offset = "0x1508C7C", VA = "0x1508C7C")]
		private void OnCruzingLoadCompleted(AsyncOperationHandle obj)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x1508D28", Offset = "0x1508D28", VA = "0x1508D28", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x15090B0", Offset = "0x15090B0", VA = "0x15090B0", Slot = "75")]
		public override void CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x1509170", Offset = "0x1509170", VA = "0x1509170", Slot = "30")]
		protected override void OnGameStart()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x15092D4", Offset = "0x15092D4", VA = "0x15092D4", Slot = "88")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x150937C", Offset = "0x150937C", VA = "0x150937C")]
		private void AddStartSlotable(GameObject slotablePrefab)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x15096C8", Offset = "0x15096C8", VA = "0x15096C8", Slot = "84")]
		protected override void OnAccelerate()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1509760", Offset = "0x1509760", VA = "0x1509760", Slot = "85")]
		protected override void OnBreak()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x1509768", Offset = "0x1509768", VA = "0x1509768", Slot = "78")]
		protected override void Die(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1509838", Offset = "0x1509838", VA = "0x1509838", Slot = "80")]
		protected override void OnRevive()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x15098EC", Offset = "0x15098EC", VA = "0x15098EC", Slot = "81")]
		protected override void SetFaction(Faction faction)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x1509960", Offset = "0x1509960", VA = "0x1509960")]
		public bool AddSlotable(GameObject slotablePrefab, out GameObject newSlotable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x150949C", Offset = "0x150949C", VA = "0x150949C")]
		public bool SetActiveAbility(int index, ShipAbilityActive abilityPrefab, out ShipAbilityActive result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x1509AFC", Offset = "0x1509AFC", VA = "0x1509AFC")]
		public bool AddActiveAbility(ShipAbilityActive abilityPrefab, out ShipAbilityActive result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x1509C80", Offset = "0x1509C80", VA = "0x1509C80")]
		public bool RemoveActiveAbility(ShipAbilityActive ability)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x1509D04", Offset = "0x1509D04", VA = "0x1509D04")]
		public bool SetPassiveAbility(int index, ShipAbilityPassive abilityPrefab, int abilityLevel, out ShipAbilityPassive result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x1509534", Offset = "0x1509534", VA = "0x1509534")]
		public bool AddPassiveAbility(ShipAbilityPassive abilityPrefab, int abilityLevel, out ShipAbilityPassive result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1509E2C", Offset = "0x1509E2C", VA = "0x1509E2C")]
		public bool RemovePassiveAbility(ShipAbilityPassive ability)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBB")]
		private bool SetAbility<T>(List<T> abilities, AbilityChangeCallback<T> changeEvent, int index, T abilityPrefab, Action<T> afterEquipAction, int maxAbilitySlots, out T result) where T : ShipAbilityBase
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x1509EB4", Offset = "0x1509EB4", VA = "0x1509EB4")]
		private void OnInvulnerableChange(bool wasInvulnerable, bool isInvulnerable)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x1508378", Offset = "0x1508378", VA = "0x1508378")]
		protected void UpdateHealthbarVisible()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x15072FC", Offset = "0x15072FC", VA = "0x15072FC")]
		public static void UpdateSectorClear()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x1509EB8", Offset = "0x1509EB8", VA = "0x1509EB8")]
		public static void AddActiveProjectile(ShipAbilityProjectile projectile, Faction faction)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1509F7C", Offset = "0x1509F7C", VA = "0x1509F7C")]
		public static void RemoveActiveProjectile(ShipAbilityProjectile projectile)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x150A110", Offset = "0x150A110", VA = "0x150A110")]
		public SpaceShip()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x150A404", Offset = "0x150A404", VA = "0x150A404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF7E8", Offset = "0x8CF7E8")]
		private void <OnGameSetupAsync>b__101_0(GameObject go)
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class SpaceShipController : GameMonoBehaviour
	{
		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpaceEntity entity;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B772C", Offset = "0x8B772C")]
		[SerializeField]
		private bool renderMovement;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LineRenderer moveLinePrefab;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VRPlayerSelectorMoveNode moveNodePrefab;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int maxMoveNodeCount;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float maxMoveRadius;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRPlayerSelectorMoveActionMode moveMode;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private VRPlayerSelectorRayType moveRay;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector2 moveRayActivateRange;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float outOfBoundsMoveBackDistance;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LineRenderer moveLine;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isLoading;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<VRPlayerSelectorMoveNode> moveNodesActive;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<VRPlayerSelectorMoveNode> moveNodesInactive;

		[Token(Token = "0x1700029E")]
		public SpaceEntity Entity
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x150A480", Offset = "0x150A480", VA = "0x150A480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		public int MaxMoveNodeCount
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x150A488", Offset = "0x150A488", VA = "0x150A488")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A0")]
		public float MaxMoveRadius
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x150A590", Offset = "0x150A590", VA = "0x150A590")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A1")]
		public VRPlayerSelectorMoveActionMode MoveMode
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x150A598", Offset = "0x150A598", VA = "0x150A598")]
			get
			{
				return default(VRPlayerSelectorMoveActionMode);
			}
		}

		[Token(Token = "0x170002A2")]
		public VRPlayerSelectorRayType MoveRay
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x150A5A0", Offset = "0x150A5A0", VA = "0x150A5A0")]
			get
			{
				return default(VRPlayerSelectorRayType);
			}
		}

		[Token(Token = "0x170002A3")]
		public Vector2 MoveRayActivateRange
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x150A5A8", Offset = "0x150A5A8", VA = "0x150A5A8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170002A4")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x150A830", Offset = "0x150A830", VA = "0x150A830", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x150A838", Offset = "0x150A838", VA = "0x150A838", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event Action<int> MoveNodeAdded
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x150A5B0", Offset = "0x150A5B0", VA = "0x150A5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF7F8", Offset = "0x8CF7F8")]
			add
			{
			}
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x150A650", Offset = "0x150A650", VA = "0x150A650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF808", Offset = "0x8CF808")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event Action<int> MoveNodeRemoved
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x150A6F0", Offset = "0x150A6F0", VA = "0x150A6F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF818", Offset = "0x8CF818")]
			add
			{
			}
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x150A790", Offset = "0x150A790", VA = "0x150A790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF828", Offset = "0x8CF828")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x150A83C", Offset = "0x150A83C", VA = "0x150A83C", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x150A8EC", Offset = "0x150A8EC", VA = "0x150A8EC")]
		private void OnLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x150A918", Offset = "0x150A918", VA = "0x150A918")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x150B378", Offset = "0x150B378", VA = "0x150B378")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x150B80C", Offset = "0x150B80C", VA = "0x150B80C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x150BA30", Offset = "0x150BA30", VA = "0x150BA30", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x150BB3C", Offset = "0x150BB3C", VA = "0x150BB3C", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x150BFA4", Offset = "0x150BFA4", VA = "0x150BFA4")]
		private void OnGameLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x150BFB0", Offset = "0x150BFB0", VA = "0x150BFB0")]
		private void OnGameLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x150BFB8", Offset = "0x150BFB8", VA = "0x150BFB8")]
		public void MoveToPoint(SpaceEntitySteering.SteerPosition steerPosition)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x150C04C", Offset = "0x150C04C", VA = "0x150C04C")]
		public void MoveWanderOrbitTarget(SpaceEntitySteering.SteerPosition steerPosition, SpaceEntitySteering.SteerKeepRangeParameters keepRangeParameters)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x150C140", Offset = "0x150C140", VA = "0x150C140")]
		public void AddPointToMovePath(SpaceEntitySteering.SteerPosition steerPosition, int index = int.MaxValue)
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x150A8F0", Offset = "0x150A8F0", VA = "0x150A8F0")]
		public void StopAllMovement()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x150B1CC", Offset = "0x150B1CC", VA = "0x150B1CC")]
		private void MoveShipInBounds()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x150B388", Offset = "0x150B388", VA = "0x150B388")]
		private void RenderMovement()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x150AA10", Offset = "0x150AA10", VA = "0x150AA10")]
		public void UpdateMoveNodes()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x150B810", Offset = "0x150B810", VA = "0x150B810")]
		private void ClearMoveNodes()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x150C2DC", Offset = "0x150C2DC", VA = "0x150C2DC")]
		public static void DestroyGameObject(ref GameObject obj)
		{
		}

		[Token(Token = "0x6000EED")]
		public static void DestroyComponentObject<T>(ref T component) where T : Component
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x150C39C", Offset = "0x150C39C", VA = "0x150C39C")]
		public SpaceShipController()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public enum ReticleType
	{
		[Token(Token = "0x4000CEE")]
		Move = 0,
		[Token(Token = "0x4000CEF")]
		Charge = 10,
		[Token(Token = "0x4000CF0")]
		Hold = 20,
		[Token(Token = "0x4000CF1")]
		Shoot = 30
	}
	[Token(Token = "0x200022C")]
	public class SpaceShipControllerReticle : MonoBehaviour
	{
		[Token(Token = "0x200022D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A902C", Offset = "0x8A902C")]
		private sealed class <AnimationDelay>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpaceShipControllerReticle <>4__this;

			[Token(Token = "0x170002A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F01")]
				[Address(RVA = "0xE9DF18", Offset = "0xE9DF18", VA = "0xE9DF18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F03")]
				[Address(RVA = "0xE9DF60", Offset = "0xE9DF60", VA = "0xE9DF60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0xE9DE28", Offset = "0xE9DE28", VA = "0xE9DE28")]
			[DebuggerHidden]
			public <AnimationDelay>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0xE9DE54", Offset = "0xE9DE54", VA = "0xE9DE54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F00")]
			[Address(RVA = "0xE9DE58", Offset = "0xE9DE58", VA = "0xE9DE58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F02")]
			[Address(RVA = "0xE9DF20", Offset = "0xE9DF20", VA = "0xE9DF20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7818", Offset = "0x8B7818")]
		private List<Transform> lockOnScaleTransform;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float lockedOnScale;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7874", Offset = "0x8B7874")]
		[SerializeField]
		private Graphic[] colorGraphics;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Graphic[] rangeColorGraphics;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color colorDefault;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color colorInvalid;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color colorLockingOn;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Color colorLockedOn;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7910", Offset = "0x8B7910")]
		private Transform reticleTransform;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform rangeTransform;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform ammoTransform;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B797C", Offset = "0x8B797C")]
		public SpaceShipReticleAmmoVisualizerBase ammoVisualizerBase;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AnimationCurve noAmmoAnimationCurve;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float noAmmoAnimationTime;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private bool noAmmoAnimationOnAmmo;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		[SerializeField]
		private bool noAmmoAnimationOnRange;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Vector3 noAmmoMaxScale;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float animationDelay;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7A14", Offset = "0x8B7A14")]
		[SerializeField]
		private bool rangeFacePlayer;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float rangeBounceSpeed;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private float rangeBounceOffset;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private AnimationCurve rangeBounceOffsetCurve;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7A90", Offset = "0x8B7A90")]
		[SerializeField]
		private SfxTrigger noAmmoSfx;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7ADC", Offset = "0x8B7ADC")]
		private bool <IsSetup>k__BackingField;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7AEC", Offset = "0x8B7AEC")]
		private ShipPartModAssignerHead <AbilityShipPartModAssignerHead>k__BackingField;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 defaultScale;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rangeBounceStart;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool lastLockOnAttempted;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float noAmmoAnimationProgress;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float animationCurrentDelay;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine animationDelayCoroutine;

		[Token(Token = "0x170002A5")]
		public bool IsSetup
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x150C468", Offset = "0x150C468", VA = "0x150C468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF838", Offset = "0x8CF838")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x150C470", Offset = "0x150C470", VA = "0x150C470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF848", Offset = "0x8CF848")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public ShipPartModAssignerHead AbilityShipPartModAssignerHead
		{
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x150C47C", Offset = "0x150C47C", VA = "0x150C47C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF858", Offset = "0x8CF858")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x150C484", Offset = "0x150C484", VA = "0x150C484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF868", Offset = "0x8CF868")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x150C48C", Offset = "0x150C48C", VA = "0x150C48C")]
		protected void OnAwake()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x150C4C0", Offset = "0x150C4C0", VA = "0x150C4C0")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x150C4E0", Offset = "0x150C4E0", VA = "0x150C4E0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x150C4EC", Offset = "0x150C4EC", VA = "0x150C4EC")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x150C54C", Offset = "0x150C54C", VA = "0x150C54C")]
		public void SetupReticle(SpaceShip owner)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x150C63C", Offset = "0x150C63C", VA = "0x150C63C")]
		public void UpdateReticle(Vector3 position, float progress, bool lockOnAttempted, bool valid = true, bool forceDefault = false, [System.Runtime.InteropServices.Optional] Vector3 rangeDirection, float rangeOvershootDistance = 0f, [System.Runtime.InteropServices.Optional] CooldownTimer timer)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x150D0B8", Offset = "0x150D0B8", VA = "0x150D0B8")]
		private void SetColor(Graphic[] graphics, Color color)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x150D15C", Offset = "0x150D15C", VA = "0x150D15C")]
		private void NoAmmoAnimation()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x150D418", Offset = "0x150D418", VA = "0x150D418")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CF878", Offset = "0x8CF878")]
		private IEnumerator AnimationDelay()
		{
			return null;
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x150C510", Offset = "0x150C510", VA = "0x150C510")]
		private void ResetNoAmmoAnimation()
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x150D490", Offset = "0x150D490", VA = "0x150D490")]
		public SpaceShipControllerReticle()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class SpaceShipReticleAmmoVisualizerBase : GameMonoBehaviour
	{
		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7AFC", Offset = "0x8B7AFC")]
		private float <CurrentAmmo>k__BackingField;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B7B0C", Offset = "0x8B7B0C")]
		private float <MaxAmmo>k__BackingField;

		[Token(Token = "0x170002A9")]
		public float CurrentAmmo
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x150D664", Offset = "0x150D664", VA = "0x150D664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF928", Offset = "0x8CF928")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x150D66C", Offset = "0x150D66C", VA = "0x150D66C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF938", Offset = "0x8CF938")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public float MaxAmmo
		{
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x150D674", Offset = "0x150D674", VA = "0x150D674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF948", Offset = "0x8CF948")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x150D67C", Offset = "0x150D67C", VA = "0x150D67C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CF958", Offset = "0x8CF958")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x150D684", Offset = "0x150D684", VA = "0x150D684", Slot = "38")]
		public virtual void OnUpdateAmmo(CooldownTimer cooldownTimer)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x150D6CC", Offset = "0x150D6CC", VA = "0x150D6CC")]
		public SpaceShipReticleAmmoVisualizerBase()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class SpaceShipReticleAmmoVisualizerBlaster : SpaceShipReticleAmmoVisualizerBase
	{
		[Serializable]
		[Token(Token = "0x2000230")]
		private struct AmmoVisualizerType
		{
			[Token(Token = "0x4000D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorTag[] shipTags;

			[Token(Token = "0x4000D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Sprite ammoSprite;

			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 size;
		}

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float angleOffset;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Vector2 angleAxisScale;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RectTransform[] ammoObjects;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AmmoVisualizerType[] ammoVisualizerTypes;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SectorTag currentShipTag;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int maxAmmo;

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x150D6D4", Offset = "0x150D6D4", VA = "0x150D6D4", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x150D878", Offset = "0x150D878", VA = "0x150D878", Slot = "38")]
		public override void OnUpdateAmmo(CooldownTimer cooldownTimer)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x150D700", Offset = "0x150D700", VA = "0x150D700")]
		private void UpdateMaxAmmo(int maxAmmo)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x150DC8C", Offset = "0x150DC8C", VA = "0x150DC8C")]
		private void UpdateCurrentAmmo(int currentAmmo, float cooldownLeft, float cooldownMax)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x150D948", Offset = "0x150D948", VA = "0x150D948")]
		private void UpdateAmmoVisuals()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x150DD74", Offset = "0x150DD74", VA = "0x150DD74")]
		public SpaceShipReticleAmmoVisualizerBlaster()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class SpaceShipReticleAmmoVisualizerLaser : SpaceShipReticleAmmoVisualizerBase
	{
		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image image;

		[Token(Token = "0x170002AB")]
		private float BarFill
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x150DE08", Offset = "0x150DE08", VA = "0x150DE08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x150DE2C", Offset = "0x150DE2C", VA = "0x150DE2C", Slot = "38")]
		public override void OnUpdateAmmo(CooldownTimer cooldownTimer)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x150DEC0", Offset = "0x150DEC0", VA = "0x150DEC0")]
		public SpaceShipReticleAmmoVisualizerLaser()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class SpaceShipReticleAmmoVisualizerMissile : SpaceShipReticleAmmoVisualizerBase
	{
		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float imageOffset;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float ammoOffset;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7B9C", Offset = "0x8B7B9C")]
		private List<GameObject> topAmmoObjects;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<GameObject> bottomAmmoObjects;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> ammoObjects;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7BF8", Offset = "0x8B7BF8")]
		private Color colorDefault;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color colorNoAmmo;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Graphic> ammoGraphics;

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x150DEC8", Offset = "0x150DEC8", VA = "0x150DEC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x150E0D4", Offset = "0x150E0D4", VA = "0x150E0D4", Slot = "38")]
		public override void OnUpdateAmmo(CooldownTimer cooldownTimer)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x150E24C", Offset = "0x150E24C", VA = "0x150E24C")]
		private void UpdateCurrentAmmo()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x150E160", Offset = "0x150E160", VA = "0x150E160")]
		private void UpdateMaxAmmo(int maxAmmo)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x150E40C", Offset = "0x150E40C", VA = "0x150E40C")]
		public SpaceShipReticleAmmoVisualizerMissile()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class VRDirectionAbilityTargetable : VRDirectionTargetableBase
	{
		[Token(Token = "0x4000D29")]
		public const string TARGETABLE_LAYER = "ship_ability_targetable";

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isTargetable;

		[Token(Token = "0x170002AC")]
		protected override bool IsTargetable
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x10BBA68", Offset = "0x10BBA68", VA = "0x10BBA68", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x10BBA98", Offset = "0x10BBA98", VA = "0x10BBA98")]
		public static VRDirectionAbilityTargetable AddToObject(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x10BBB64", Offset = "0x10BBB64", VA = "0x10BBB64")]
		public static bool GetObjectIsTargetable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x10BBC1C", Offset = "0x10BBC1C", VA = "0x10BBC1C")]
		public static void SetObjectIsTargetable(GameObject obj, bool isTargetable)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x10BBCFC", Offset = "0x10BBCFC", VA = "0x10BBCFC", Slot = "5")]
		protected override void RegisterTargetableLayers(Action<string> addToLayer)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x10BBD68", Offset = "0x10BBD68", VA = "0x10BBD68")]
		public VRDirectionAbilityTargetable()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public enum DamageTypeEnum
	{
		[Token(Token = "0x4000D2C")]
		projectile,
		[Token(Token = "0x4000D2D")]
		energy,
		[Token(Token = "0x4000D2E")]
		explotion,
		[Token(Token = "0x4000D2F")]
		collision,
		[Token(Token = "0x4000D30")]
		all,
		[Token(Token = "0x4000D31")]
		flat
	}
	[Token(Token = "0x2000235")]
	public enum HealTypeEnum
	{
		[Token(Token = "0x4000D33")]
		Shield,
		[Token(Token = "0x4000D34")]
		Hull,
		[Token(Token = "0x4000D35")]
		All
	}
	[Token(Token = "0x2000236")]
	public enum SurfaceTypeEnum
	{
		[Token(Token = "0x4000D37")]
		Ship,
		[Token(Token = "0x4000D38")]
		Asteroid,
		[Token(Token = "0x4000D39")]
		Organic
	}
	[Serializable]
	[Token(Token = "0x2000237")]
	public class PhysicsParameters
	{
		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float pullForceFactor;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float knockbackFactor;

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x2494428", Offset = "0x2494428", VA = "0x2494428")]
		public PhysicsParameters()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public interface IDamagable : IBuffable
	{
		[Token(Token = "0x2000239")]
		public delegate void HealthChange(float previousValue, float newValue);

		[Token(Token = "0x200023A")]
		public delegate void FactionChange(Faction previousValue, Faction newValue);

		[Token(Token = "0x200023B")]
		public struct DamageInfo
		{
			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IDamagable cause;

			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IDamagable target;

			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float healthDamageDealt;

			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float shieldDamageDealt;

			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isEffectiveOnHealth;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool isEffectiveOnShields;

			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool isDiminishedOnHealth;

			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			public bool isDiminishedOnShields;

			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public DamageTypeEnum damageType;

			[Token(Token = "0x170002BD")]
			public bool DidDamageShield
			{
				[Token(Token = "0x6000F45")]
				[Address(RVA = "0xED4E98", Offset = "0xED4E98", VA = "0xED4E98")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002BE")]
			public float TotalDamageDealt
			{
				[Token(Token = "0x6000F46")]
				[Address(RVA = "0xED4EA8", Offset = "0xED4EA8", VA = "0xED4EA8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170002BF")]
			public bool IsEffective
			{
				[Token(Token = "0x6000F47")]
				[Address(RVA = "0xED4EB4", Offset = "0xED4EB4", VA = "0xED4EB4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002C0")]
			public bool IsDiminished
			{
				[Token(Token = "0x6000F48")]
				[Address(RVA = "0xED4ED0", Offset = "0xED4ED0", VA = "0xED4ED0")]
				get
				{
					return default(bool);
				}
			}
		}

		[Token(Token = "0x170002AD")]
		bool IsAlive
		{
			[Token(Token = "0x6000F1F")]
			get;
		}

		[Token(Token = "0x170002AE")]
		FlagGroup IsUntargetable
		{
			[Token(Token = "0x6000F20")]
			get;
		}

		[Token(Token = "0x170002AF")]
		FlagGroup IsInvulnerable
		{
			[Token(Token = "0x6000F21")]
			get;
		}

		[Token(Token = "0x170002B0")]
		float BaseMaxHealth
		{
			[Token(Token = "0x6000F22")]
			get;
		}

		[Token(Token = "0x170002B1")]
		float MaxHealth
		{
			[Token(Token = "0x6000F23")]
			get;
		}

		[Token(Token = "0x170002B2")]
		float CurrentHealth
		{
			[Token(Token = "0x6000F24")]
			get;
		}

		[Token(Token = "0x170002B3")]
		float BaseMaxShield
		{
			[Token(Token = "0x6000F25")]
			get;
		}

		[Token(Token = "0x170002B4")]
		float MaxShield
		{
			[Token(Token = "0x6000F26")]
			get;
		}

		[Token(Token = "0x170002B5")]
		float CurrentShield
		{
			[Token(Token = "0x6000F27")]
			get;
		}

		[Token(Token = "0x170002B6")]
		float HealthAmount
		{
			[Token(Token = "0x6000F28")]
			get;
		}

		[Token(Token = "0x170002B7")]
		Collider Collider
		{
			[Token(Token = "0x6000F29")]
			get;
		}

		[Token(Token = "0x170002B8")]
		Rigidbody Body
		{
			[Token(Token = "0x6000F2A")]
			get;
		}

		[Token(Token = "0x170002B9")]
		Faction Faction
		{
			[Token(Token = "0x6000F2B")]
			get;
		}

		[Token(Token = "0x170002BA")]
		SurfaceTypeEnum SurfaceType
		{
			[Token(Token = "0x6000F2C")]
			get;
		}

		[Token(Token = "0x170002BB")]
		PhysicsParameters PhysicsParameters
		{
			[Token(Token = "0x6000F2D")]
			get;
		}

		[Token(Token = "0x170002BC")]
		float ReflectedProjectileDamageTakenFactor
		{
			[Token(Token = "0x6000F2E")]
			get;
		}

		[Token(Token = "0x14000047")]
		event FactionChange OnFactionChange;

		[Token(Token = "0x14000048")]
		event HealthChange OnMaxHealthChange;

		[Token(Token = "0x14000049")]
		event HealthChange OnHealthChange;

		[Token(Token = "0x1400004A")]
		event HealthChange OnMaxShieldChange;

		[Token(Token = "0x1400004B")]
		event HealthChange OnShieldChange;

		[Token(Token = "0x6000F39")]
		void UpdateHealth();

		[Token(Token = "0x6000F3A")]
		DamageInfo Damage(float baseDamage, DamageTypeEnum type, Transform from, IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags, bool bypassShield = false);

		[Token(Token = "0x6000F3B")]
		void Heal(float baseHeal, float maxHealthIncreaseCap, HealTypeEnum type, Transform from, IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags, bool bypassBuffs = false);

		[Token(Token = "0x6000F3C")]
		void Heal(float baseHeal, HealTypeEnum type, Transform from, IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags, bool bypassBuffs = false);
	}
	[Token(Token = "0x200023C")]
	public interface IBuffable
	{
		[Token(Token = "0x170002C1")]
		IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x6000F49")]
			get;
		}

		[Token(Token = "0x170002C2")]
		BuffsUtil Buffs
		{
			[Token(Token = "0x6000F4A")]
			get;
		}

		[Token(Token = "0x170002C3")]
		bool IsBuffable
		{
			[Token(Token = "0x6000F4B")]
			get;
		}

		[Token(Token = "0x170002C4")]
		Transform Transform
		{
			[Token(Token = "0x6000F4C")]
			get;
		}
	}
	[Token(Token = "0x200023D")]
	public interface IProjectile : IBuffable
	{
		[Token(Token = "0x170002C5")]
		IDamagable Owner
		{
			[Token(Token = "0x6000F4D")]
			get;
		}

		[Token(Token = "0x170002C6")]
		float ProjectileHealth
		{
			[Token(Token = "0x6000F4F")]
			get;
		}

		[Token(Token = "0x170002C7")]
		bool IsDestroyable
		{
			[Token(Token = "0x6000F50")]
			get;
		}

		[Token(Token = "0x170002C8")]
		DamageTypeEnum DamageType
		{
			[Token(Token = "0x6000F51")]
			get;
		}

		[Token(Token = "0x6000F4E")]
		float GetProjectileDamage(DamageTarget target);

		[Token(Token = "0x6000F52")]
		void Setup(IDamagable owner, SpaceEntitySteering.SteerPosition steerTarget, IProjectileSource projectileSource);

		[Token(Token = "0x6000F53")]
		void Fire();

		[Token(Token = "0x6000F54")]
		void DamageProjectile(IDamagable cause, float damage, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags);
	}
	[Token(Token = "0x200023E")]
	public interface IProjectileSource
	{
		[Token(Token = "0x6000F55")]
		void OnDamageDealt(IDamagable.DamageInfo damageInfo);
	}
	[Token(Token = "0x200023F")]
	public interface IForcefield
	{
		[Token(Token = "0x170002C9")]
		Transform Transform
		{
			[Token(Token = "0x6000F56")]
			get;
		}

		[Token(Token = "0x170002CA")]
		IDamagable Owner
		{
			[Token(Token = "0x6000F57")]
			get;
		}

		[Token(Token = "0x170002CB")]
		Faction Faction
		{
			[Token(Token = "0x6000F58")]
			get;
		}

		[Token(Token = "0x170002CC")]
		bool ReflectProjectiles
		{
			[Token(Token = "0x6000F59")]
			get;
		}

		[Token(Token = "0x6000F5A")]
		Vector3 GetReflectionVector(IProjectile projectile);

		[Token(Token = "0x6000F5B")]
		void GotHit(IProjectile projectile);
	}
	[Token(Token = "0x2000240")]
	public interface IAiVisionContainer
	{
		[Token(Token = "0x170002CD")]
		AiVision AiVision
		{
			[Token(Token = "0x6000F5C")]
			get;
		}
	}
	[Token(Token = "0x2000241")]
	public interface IAbilityPassiveState
	{
		[Token(Token = "0x6000F5D")]
		string GetState();

		[Token(Token = "0x6000F5E")]
		void SetState(string state);
	}
}
namespace Game.Ships.Specials
{
	[Token(Token = "0x2000242")]
	public class SpeedBoostVisuals : MonoBehaviour
	{
		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrailRenderer trail;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Gradient trailBoostGradient;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lerpDuration;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve lerpCurve;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Gradient tmpGradient;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GradientColorKey[] gradientColorKeys;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GradientAlphaKey[] gradientAlphaKeys;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Gradient trailDefaultGradient;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float t;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool toDefaultGradient;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool toBoostGradient;

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xF237EC", Offset = "0xF237EC", VA = "0xF237EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xF23908", Offset = "0xF23908", VA = "0xF23908")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xF239F4", Offset = "0xF239F4", VA = "0xF239F4")]
		private void LerpGradient(float k, Gradient currentGradient, Gradient newGradient)
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xF23B5C", Offset = "0xF23B5C", VA = "0xF23B5C")]
		public void LerpToDefault(bool defaultGradient)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xF23B78", Offset = "0xF23B78", VA = "0xF23B78")]
		public SpeedBoostVisuals()
		{
		}
	}
}
namespace Game.Ships.Abilities
{
	[Token(Token = "0x2000243")]
	public enum TelegraphType
	{
		[Token(Token = "0x4000D51")]
		None = 0,
		[Token(Token = "0x4000D52")]
		Attack = 1,
		[Token(Token = "0x4000D53")]
		Defend = 10
	}
	[Token(Token = "0x2000244")]
	public struct TelegraphVisual
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ITelegraphVisual visual;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TelegraphType type;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 worldOffset;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion worldRotation;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float worldScale;

		[Token(Token = "0x170002CE")]
		public bool IsValid
		{
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0xF32180", Offset = "0xF32180", VA = "0xF32180")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CF")]
		public static TelegraphVisual Default
		{
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0xF32204", Offset = "0xF32204", VA = "0xF32204")]
			get
			{
				return default(TelegraphVisual);
			}
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xF32228", Offset = "0xF32228", VA = "0xF32228")]
		public TelegraphVisual(ITelegraphVisual visual, TelegraphType type, Mesh mesh)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xF322C4", Offset = "0xF322C4", VA = "0xF322C4")]
		public TelegraphVisual(ITelegraphVisual visual, TelegraphType type, Mesh mesh, Vector3 worldOffset, Quaternion worldRotation, float worldScale)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xF3235C", Offset = "0xF3235C", VA = "0xF3235C")]
		public TelegraphVisual Update(SpaceShip owner)
		{
			return default(TelegraphVisual);
		}
	}
	[Token(Token = "0x2000245")]
	public interface ITelegraphVisual
	{
		[Token(Token = "0x6000F69")]
		TelegraphVisual GetTelegraphVisual(SpaceShip owner);

		[Token(Token = "0x6000F6A")]
		TelegraphVisual UpdateTelegraphVisual(SpaceShip owner, TelegraphVisual current);
	}
	[Token(Token = "0x2000246")]
	public static class Telegraph
	{
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xF31D54", Offset = "0xF31D54", VA = "0xF31D54")]
		public static bool TelegraphFromPrefabModel(GameObject meshFilterObj, out Mesh mesh, out Vector3 worldOffset, out Quaternion worldRotation, out float worldScale)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xF31E74", Offset = "0xF31E74", VA = "0xF31E74")]
		public static bool TelegraphFromPrefabModel(MeshFilter meshFilter, out Mesh mesh, out Vector3 worldOffset, out Quaternion worldRotation, out float worldScale)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000247")]
	public class LaserVisual : MonoBehaviour
	{
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7C94", Offset = "0x8B7C94")]
		[SerializeField]
		private LineRenderer line;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform start;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool enableStartObject;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent startShow;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent startHide;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform end;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool enableEndObject;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent endShow;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEvent endHide;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject effectiveHitEffect;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject hitEffect;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string fadeOutProperty;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ParticleSystem[] allParticleSystems;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool clearParticlesOnHide;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[SerializeField]
		private bool playParticlesOnShow;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private PlayerLaserVisual playerLaserVisual;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7DD0", Offset = "0x8B7DD0")]
		private float flickerInterval;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Vector2 flickerWidthRange;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private Color flickerColorRangeStart;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private Color flickerColorRangeEnd;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float fadeOutDuration;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7E5C", Offset = "0x8B7E5C")]
		[SerializeField]
		private float widthDistanceCloseProx;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float widthDistanceFarProx;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Vector2 widthDistanceRangeMultiplier;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float closestPosition;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ParticleSystem[] effectiveHitEffectParticleSystems;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ParticleSystem[] hitEffectParticleSystems;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int lastUpdateFrame;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float lastFlickerTime;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector2 defaultFlickerRange;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float fadeOut;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float currentWidth;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float widthMultiplier;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Color defaultColor;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Color currentColor;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool initialized;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Material lineRendererMaterial;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private SpaceEntitySteering.SteerPosition lineStart;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private SpaceEntitySteering.SteerPosition lineEnd;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private bool playedParticlesOnce;

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xD57D48", Offset = "0xD57D48", VA = "0xD57D48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xD57E60", Offset = "0xD57E60", VA = "0xD57E60")]
		public void Show(SpaceEntitySteering.SteerPosition start, SpaceEntitySteering.SteerPosition end)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xD583EC", Offset = "0xD583EC", VA = "0xD583EC")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xD58604", Offset = "0xD58604", VA = "0xD58604")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xD58928", Offset = "0xD58928", VA = "0xD58928")]
		public void SetStartEndPositions(SpaceEntitySteering.SteerPosition start, SpaceEntitySteering.SteerPosition end)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xD58998", Offset = "0xD58998", VA = "0xD58998")]
		public void SetWidthMultiplier(float widthMultiplier)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xD589A0", Offset = "0xD589A0", VA = "0xD589A0")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xD5856C", Offset = "0xD5856C", VA = "0xD5856C")]
		private void KillParticles()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xD5837C", Offset = "0xD5837C", VA = "0xD5837C")]
		private void PlayParticles()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xD58D70", Offset = "0xD58D70", VA = "0xD58D70")]
		private void HideLine()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xD58B94", Offset = "0xD58B94", VA = "0xD58B94")]
		private void FadeOutLine()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xD587A4", Offset = "0xD587A4", VA = "0xD587A4")]
		private void UpdateFlicker()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xD580CC", Offset = "0xD580CC", VA = "0xD580CC")]
		private void UpdateLine()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xD58A4C", Offset = "0xD58A4C", VA = "0xD58A4C")]
		private float CheckClosestLaserPosition()
		{
			return default(float);
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xD58DCC", Offset = "0xD58DCC", VA = "0xD58DCC")]
		private float Remap(float from, float fromMin, float fromMax, float toMin, float toMax)
		{
			return default(float);
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xD58E14", Offset = "0xD58E14", VA = "0xD58E14")]
		public void SetActiveHitEffect(bool isEffective)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xD58FB0", Offset = "0xD58FB0", VA = "0xD58FB0")]
		public void ChangeColor(string newColorHex)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xD59080", Offset = "0xD59080", VA = "0xD59080")]
		public void ResetColor()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xD59130", Offset = "0xD59130", VA = "0xD59130")]
		public void ChangeFlickerWidthX(float newFlickerRangeX)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xD59138", Offset = "0xD59138", VA = "0xD59138")]
		public void ChangeFlickerWidthY(float newFlickerRangeY)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xD59140", Offset = "0xD59140", VA = "0xD59140")]
		public void ResetWidth()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xD5914C", Offset = "0xD5914C", VA = "0xD5914C")]
		public LaserVisual()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class ShipAbilityActiveCannon : ShipAbilityActive, IProjectileSource, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Token(Token = "0x2000249")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A903C", Offset = "0x8A903C")]
		private sealed class <FireChargeUpRoutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveCannon <>4__this;

			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x170002D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F9E")]
				[Address(RVA = "0xFF866C", Offset = "0xFF866C", VA = "0xFF866C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FA0")]
				[Address(RVA = "0xFF86B4", Offset = "0xFF86B4", VA = "0xFF86B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0xFF8464", Offset = "0xFF8464", VA = "0xFF8464")]
			[DebuggerHidden]
			public <FireChargeUpRoutine>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0xFF8490", Offset = "0xFF8490", VA = "0xFF8490", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xFF8494", Offset = "0xFF8494", VA = "0xFF8494", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0xFF8674", Offset = "0xFF8674", VA = "0xFF8674", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200024A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A904C", Offset = "0x8A904C")]
		private sealed class <ForceFireWithDelayRoutine>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveCannon <>4__this;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delayInSeconds;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool triggerOnFire;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SpaceEntitySteering.SteerPosition <targetPos>5__2;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3 <dir>5__3;

			[Token(Token = "0x170002D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FA4")]
				[Address(RVA = "0xFF8A70", Offset = "0xFF8A70", VA = "0xFF8A70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FA6")]
				[Address(RVA = "0xFF8AB8", Offset = "0xFF8AB8", VA = "0xFF8AB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0xFF86BC", Offset = "0xFF86BC", VA = "0xFF86BC")]
			[DebuggerHidden]
			public <ForceFireWithDelayRoutine>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0xFF86E8", Offset = "0xFF86E8", VA = "0xFF86E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xFF86EC", Offset = "0xFF86EC", VA = "0xFF86EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xFF8A78", Offset = "0xFF8A78", VA = "0xFF8A78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D82")]
		public const float COOLDOWN_TIMER_EXT_REP_BY_USES_THRESHOLD = 1f;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7EC8", Offset = "0x8B7EC8")]
		[SerializeField]
		private float fireInterval;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private float chargeUpTime;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private float spread;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		private float range;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private AnimationCurve spreadDistribution;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private bool waitForFullUsesUntilFire;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7F64", Offset = "0x8B7F64")]
		[SerializeField]
		private Transform muzzle;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Transform chargeupTransfom;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private AssetReferenceGameObject projectilePrefab;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7FD0", Offset = "0x8B7FD0")]
		[SerializeField]
		private bool instantFireOnActivate;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private VROptionMenuInteraction interaction;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[SerializeField]
		private bool shouldShowMaxUses;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B803C", Offset = "0x8B803C")]
		[SerializeField]
		private UnityEvent<IDamagable.DamageInfo> onDamageDealt;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private ChargeUpCallbacks satelliteCallbacks;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private ChargeUpCallbacks ownerChargeUpCallbacks;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Type signatureType;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private AddressableAssetDependency<GameObject> projectileAsset;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private SpaceEntitySteering.SteerPosition targetPos;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float fireTimer;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float lastFireTime;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8098", Offset = "0x8B8098")]
		[SerializeField]
		private SfxTrigger fireSfx;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private SfxTrigger chargeupSfx;

		[Token(Token = "0x170002D0")]
		public float Range
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0xE1C678", Offset = "0xE1C678", VA = "0xE1C678")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D1")]
		public float FireInterval
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0xE1C770", Offset = "0xE1C770", VA = "0xE1C770")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D2")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0xE1C868", Offset = "0xE1C868", VA = "0xE1C868", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x170002D3")]
		public override Type SignatureType
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0xE1C9F8", Offset = "0xE1C9F8", VA = "0xE1C9F8", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004C")]
		public event Action OnFire
		{
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0xE1C530", Offset = "0xE1C530", VA = "0xE1C530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFA08", Offset = "0x8CFA08")]
			add
			{
			}
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0xE1C5D4", Offset = "0xE1C5D4", VA = "0xE1C5D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFA18", Offset = "0x8CFA18")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xE1CB60", Offset = "0xE1CB60", VA = "0xE1CB60", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xE1CBC4", Offset = "0xE1CBC4", VA = "0xE1CBC4", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xE1CC0C", Offset = "0xE1CC0C", VA = "0xE1CC0C", Slot = "76")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xE1CC80", Offset = "0xE1CC80", VA = "0xE1CC80", Slot = "77")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xE1CCE4", Offset = "0xE1CCE4", VA = "0xE1CCE4", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xE1CE4C", Offset = "0xE1CE4C", VA = "0xE1CE4C", Slot = "63")]
		protected override void UpdateCooldownAndActivation(float deltaTime)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xE1CFA0", Offset = "0xE1CFA0", VA = "0xE1CFA0")]
		private void Fire()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xE1D0DC", Offset = "0xE1D0DC", VA = "0xE1D0DC")]
		private void Fire(SpaceEntitySteering.SteerPosition targetPos, Vector3 dir, bool triggerOnFire = true)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xE1CF28", Offset = "0xE1CF28", VA = "0xE1CF28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CFA28", Offset = "0x8CFA28")]
		private IEnumerator FireChargeUpRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xE1D5A4", Offset = "0xE1D5A4", VA = "0xE1D5A4")]
		public void ForceFireWithDelay(float delayInSeconds, bool triggerOnFire = true)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xE1D5D4", Offset = "0xE1D5D4", VA = "0xE1D5D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CFA88", Offset = "0x8CFA88")]
		private IEnumerator ForceFireWithDelayRoutine(float delayInSeconds, bool triggerOnFire)
		{
			return null;
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xE1D670", Offset = "0xE1D670", VA = "0xE1D670", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xE1D7BC", Offset = "0xE1D7BC", VA = "0xE1D7BC", Slot = "70")]
		public override void DeActivate()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xE1D80C", Offset = "0xE1D80C", VA = "0xE1D80C", Slot = "64")]
		protected override void UseAndStartCooldownOnActivation()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xE1D810", Offset = "0xE1D810", VA = "0xE1D810", Slot = "72")]
		public override TelegraphVisual GetTelegraphVisual(SpaceShip owner)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xE1D960", Offset = "0xE1D960", VA = "0xE1D960", Slot = "75")]
		public void OnDamageDealt(IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xE1D050", Offset = "0xE1D050", VA = "0xE1D050")]
		public static Vector3 GetSpreadOffsetPosition(float spread, AnimationCurve spreadDistribution)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xE1D9DC", Offset = "0xE1D9DC", VA = "0xE1D9DC")]
		public ShipAbilityActiveCannon()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class ShipAbilityActiveChainTeleport : ShipAbilityActive, IProjectileSource, IAddressableAssetDependency, IAddressableAssetPreload, IEnergyBarAbility
	{
		[Token(Token = "0x200024C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A905C", Offset = "0x8A905C")]
		private sealed class <TeleportRoutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveChainTeleport <>4__this;

			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170002DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FC2")]
				[Address(RVA = "0xFF9048", Offset = "0xFF9048", VA = "0xFF9048", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FC4")]
				[Address(RVA = "0xFF9090", Offset = "0xFF9090", VA = "0xFF9090", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0xFF8AC0", Offset = "0xFF8AC0", VA = "0xFF8AC0")]
			[DebuggerHidden]
			public <TeleportRoutine>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0xFF8AEC", Offset = "0xFF8AEC", VA = "0xFF8AEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0xFF8AF0", Offset = "0xFF8AF0", VA = "0xFF8AF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0xFF9050", Offset = "0xFF9050", VA = "0xFF9050", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B80F4", Offset = "0x8B80F4")]
		protected AssetReferenceGameObject projectilePrefab;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		protected AssetReferenceGameObject projectileDrifterPrefab;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		protected SfxTrigger projectileFireSfx;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private SfxTrigger teleportSfx;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		protected int projectileFireAmount;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		protected float projectileFireDelayBefore;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		protected float projectileFireDelayAfter;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		protected float projectileDrifterMaxDistance;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private UnityEvent<IDamagable.DamageInfo> onDamageDealt;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B81C0", Offset = "0x8B81C0")]
		[SerializeField]
		private float teleportSpeedModifier;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B820C", Offset = "0x8B820C")]
		private AbilityStatusChange <OnAbilityRecharge>k__BackingField;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B821C", Offset = "0x8B821C")]
		private AbilityStatusChange <OnAbilityCooldownUpdated>k__BackingField;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B822C", Offset = "0x8B822C")]
		private bool <IsTeleporting>k__BackingField;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Coroutine teleportRoutine;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private AsyncFlag teleportDisableSteeringFlag;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected List<SpaceEntitySteering.SteerPosition> teleportPositions;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float currentTeleportDuration;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private TeleportMineCallbacks teleportMineCallbacks;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected AddressableAssetDependency<GameObject> projectileAsset;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected AddressableAssetDependency<GameObject> projectileDrifterAsset;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected IAiVisionContainer aiVisionContainer;

		[Token(Token = "0x170002D8")]
		public AbilityStatusChange OnAbilityRecharge
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0xE1DA44", Offset = "0xE1DA44", VA = "0xE1DA44", Slot = "86")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFB88", Offset = "0x8CFB88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0xE1DA4C", Offset = "0xE1DA4C", VA = "0xE1DA4C", Slot = "87")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFB98", Offset = "0x8CFB98")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public AbilityStatusChange OnAbilityCooldownUpdated
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0xE1DA5C", Offset = "0xE1DA5C", VA = "0xE1DA5C", Slot = "88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFBA8", Offset = "0x8CFBA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0xE1DA64", Offset = "0xE1DA64", VA = "0xE1DA64", Slot = "89")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFBB8", Offset = "0x8CFBB8")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public bool IsTeleporting
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0xE1DA74", Offset = "0xE1DA74", VA = "0xE1DA74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFBC8", Offset = "0x8CFBC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0xE1DA7C", Offset = "0xE1DA7C", VA = "0xE1DA7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFBD8", Offset = "0x8CFBD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public float Duration
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0xE1DA88", Offset = "0xE1DA88", VA = "0xE1DA88", Slot = "82")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DC")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xE1DA90", Offset = "0xE1DA90", VA = "0xE1DA90", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xE1DAB0", Offset = "0xE1DAB0", VA = "0xE1DAB0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xE1DBD8", Offset = "0xE1DBD8", VA = "0xE1DBD8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xE1DD00", Offset = "0xE1DD00", VA = "0xE1DD00", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xE1DD48", Offset = "0xE1DD48", VA = "0xE1DD48", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xE1DE54", Offset = "0xE1DE54", VA = "0xE1DE54", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xE1DEE4", Offset = "0xE1DEE4", VA = "0xE1DEE4", Slot = "76")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xE1DF78", Offset = "0xE1DF78", VA = "0xE1DF78", Slot = "77")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xE1DFDC", Offset = "0xE1DFDC", VA = "0xE1DFDC", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xE1E2BC", Offset = "0xE1E2BC", VA = "0xE1E2BC", Slot = "70")]
		public override void DeActivate()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xE1E2E0", Offset = "0xE1E2E0", VA = "0xE1E2E0", Slot = "74")]
		public override void ReduceCooldownByPercentage(float perc)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xE1DE78", Offset = "0xE1DE78", VA = "0xE1DE78")]
		private void StopTeleport()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xE1E244", Offset = "0xE1E244", VA = "0xE1E244")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CFBE8", Offset = "0x8CFBE8")]
		private IEnumerator TeleportRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xE1E36C", Offset = "0xE1E36C", VA = "0xE1E36C")]
		protected void FireProjectiles(int projectileAmount)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xE1EA88", Offset = "0xE1EA88", VA = "0xE1EA88")]
		private void OnExitGameSector()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xE1EA98", Offset = "0xE1EA98", VA = "0xE1EA98", Slot = "75")]
		public void OnDamageDealt(IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xE1EB14", Offset = "0xE1EB14", VA = "0xE1EB14")]
		public ShipAbilityActiveChainTeleport()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class ShipAbilityActiveChargeLaser : ShipAbilityActive, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Serializable]
		[Token(Token = "0x200024E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A906C", Offset = "0x8A906C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_0;

			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_1;

			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_2;

			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_3;

			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_4;

			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_5;

			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_6;

			[Token(Token = "0x4000DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_7;

			[Token(Token = "0x4000DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_8;

			[Token(Token = "0x4000DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_9;

			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_10;

			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__45_11;

			[Token(Token = "0x4000DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__49_0;

			[Token(Token = "0x4000DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__49_1;

			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__49_2;

			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__49_3;

			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__49_4;

			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__49_5;

			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0xFF90FC", Offset = "0xFF90FC", VA = "0xFF90FC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0xFF9104", Offset = "0xFF9104", VA = "0xFF9104")]
			internal UnityEvent <FireRoutine>b__45_0(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0xFF911C", Offset = "0xFF911C", VA = "0xFF911C")]
			internal UnityEvent <FireRoutine>b__45_1(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0xFF9134", Offset = "0xFF9134", VA = "0xFF9134")]
			internal UnityEvent <FireRoutine>b__45_2(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0xFF914C", Offset = "0xFF914C", VA = "0xFF914C")]
			internal UnityEvent <FireRoutine>b__45_3(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0xFF9164", Offset = "0xFF9164", VA = "0xFF9164")]
			internal UnityEvent <FireRoutine>b__45_4(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0xFF917C", Offset = "0xFF917C", VA = "0xFF917C")]
			internal UnityEvent <FireRoutine>b__45_5(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0xFF9194", Offset = "0xFF9194", VA = "0xFF9194")]
			internal UnityEvent <FireRoutine>b__45_6(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0xFF91AC", Offset = "0xFF91AC", VA = "0xFF91AC")]
			internal UnityEvent <FireRoutine>b__45_7(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0xFF91C4", Offset = "0xFF91C4", VA = "0xFF91C4")]
			internal UnityEvent <FireRoutine>b__45_8(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0xFF91DC", Offset = "0xFF91DC", VA = "0xFF91DC")]
			internal UnityEvent <FireRoutine>b__45_9(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0xFF91F4", Offset = "0xFF91F4", VA = "0xFF91F4")]
			internal UnityEvent <FireRoutine>b__45_10(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0xFF920C", Offset = "0xFF920C", VA = "0xFF920C")]
			internal UnityEvent <FireRoutine>b__45_11(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0xFF9224", Offset = "0xFF9224", VA = "0xFF9224")]
			internal UnityEvent <DeActivate>b__49_0(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0xFF923C", Offset = "0xFF923C", VA = "0xFF923C")]
			internal UnityEvent <DeActivate>b__49_1(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xFF9254", Offset = "0xFF9254", VA = "0xFF9254")]
			internal UnityEvent <DeActivate>b__49_2(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xFF926C", Offset = "0xFF926C", VA = "0xFF926C")]
			internal UnityEvent <DeActivate>b__49_3(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xFF9284", Offset = "0xFF9284", VA = "0xFF9284")]
			internal UnityEvent <DeActivate>b__49_4(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0xFF929C", Offset = "0xFF929C", VA = "0xFF929C")]
			internal UnityEvent <DeActivate>b__49_5(ChargeUpCallbacks p)
			{
				return null;
			}
		}

		[Token(Token = "0x200024F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A907C", Offset = "0x8A907C")]
		private sealed class <FireRoutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveChargeLaser <>4__this;

			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <fireVisualTransform>5__2;

			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <fireDuration>5__3;

			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <damageTickTimer>5__4;

			[Token(Token = "0x170002E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FED")]
				[Address(RVA = "0xFFA2E0", Offset = "0xFFA2E0", VA = "0xFFA2E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FEF")]
				[Address(RVA = "0xFFA328", Offset = "0xFFA328", VA = "0xFFA328", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0xFF9460", Offset = "0xFF9460", VA = "0xFF9460")]
			[DebuggerHidden]
			public <FireRoutine>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0xFF948C", Offset = "0xFF948C", VA = "0xFF948C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xFF9490", Offset = "0xFF9490", VA = "0xFF9490", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0xFFA2E8", Offset = "0xFFA2E8", VA = "0xFFA2E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A908C", Offset = "0x8A908C")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpaceEntitySteering.SteerPosition targetPos;

			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SpaceEntitySteering.SteerPosition localStartPosition;

			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public float targetExtend;

			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public Vector3 targetStartPosition;

			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0xFF92B4", Offset = "0xFF92B4", VA = "0xFF92B4")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0xFF92BC", Offset = "0xFF92BC", VA = "0xFF92BC")]
			internal SpaceEntitySteering.PositionData <Activate>b__0()
			{
				return default(SpaceEntitySteering.PositionData);
			}

			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xFF93CC", Offset = "0xFF93CC", VA = "0xFF93CC")]
			internal SpaceEntitySteering.PositionData <Activate>b__1()
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B823C", Offset = "0x8B823C")]
		private float extendDistance;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private bool trackTarget;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8298", Offset = "0x8B8298")]
		[SerializeField]
		private float chargeupTime;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private AssetReferenceGameObject laserChargeVisualPrefab;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B82F4", Offset = "0x8B82F4")]
		private float fireTime;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private AssetReferenceGameObject laserFireVisualPrefab;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private float fireRadius;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		private float fireRadiusTransitionInTime;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private AnimationCurve fireRadiusTransitionInCurve;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private float fireRadiusTransitionOutTime;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private AnimationCurve fireRadiusTransitionOutCurve;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private float fireDamageTickSpeed;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[SerializeField]
		private float fireDamage;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B83C0", Offset = "0x8B83C0")]
		[SerializeField]
		private SfxTrigger chargeUpSfx;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private SfxTrigger chargeUpLoopSfx;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private SfxTrigger fireSfx;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private SfxTrigger fireLoopSfx;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private SfxTrigger fireEndSfx;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B844C", Offset = "0x8B844C")]
		private VROptionMenuInteraction interaction;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool chargeUpFinished;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Coroutine fireRoutine;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private SpaceEntitySteering.SteerPosition startPos;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private SpaceEntitySteering.SteerPosition targetPos;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private ChargeUpCallbacks localChargeUpCallbacks;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private ChargeUpCallbacks ownerChargeUpCallbacks;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private ChargeUpCallbacks chargeLaserChargeUpCallbacks;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private AddressableAssetDependency<GameObject> laserChargeVisualAsset;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private LaserVisual laserChargeVisual;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private ChargeLaserVisuals chargeLaserEndStartVisuals;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private ClosestPointToVRTransformOnLine closestPointOnLine;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private AddressableAssetDependency<GameObject> laserFireVisualAsset;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private PhysicsTriggerContainer laserFireVisual;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private List<SpaceObject> damageObjects;

		[Token(Token = "0x170002DF")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0xE1EBBC", Offset = "0xE1EBBC", VA = "0xE1EBBC", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x170002E0")]
		public float ChargeUpTime
		{
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0xE1EBDC", Offset = "0xE1EBDC", VA = "0xE1EBDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0xE1EBE4", Offset = "0xE1EBE4", VA = "0xE1EBE4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public float FireTime
		{
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0xE1EBEC", Offset = "0xE1EBEC", VA = "0xE1EBEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0xE1EBF4", Offset = "0xE1EBF4", VA = "0xE1EBF4")]
			set
			{
			}
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xE1EBFC", Offset = "0xE1EBFC", VA = "0xE1EBFC", Slot = "75")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xE1EC90", Offset = "0xE1EC90", VA = "0xE1EC90", Slot = "76")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xE1ED04", Offset = "0xE1ED04", VA = "0xE1ED04", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xE1EE08", Offset = "0xE1EE08", VA = "0xE1EE08", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xE1EF04", Offset = "0xE1EF04", VA = "0xE1EF04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CFC98", Offset = "0x8CFC98")]
		private IEnumerator FireRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xE1EF7C", Offset = "0xE1EF7C", VA = "0xE1EF7C")]
		private void UpdateLaserFireVisual(Transform fireVisualTransform, float duration, float transitionTime, AnimationCurve transitionCurve)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xE1F2DC", Offset = "0xE1F2DC", VA = "0xE1F2DC")]
		private void DamageInLaserArea()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xE1F80C", Offset = "0xE1F80C", VA = "0xE1F80C", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xE1FEA0", Offset = "0xE1FEA0", VA = "0xE1FEA0", Slot = "70")]
		public override void DeActivate()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xE20458", Offset = "0xE20458", VA = "0xE20458", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xE20398", Offset = "0xE20398", VA = "0xE20398")]
		private static void InvokeChargeUpCallback(ChargeUpCallbacks callbacks, Func<ChargeUpCallbacks, UnityEvent> getEvent)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xE205B0", Offset = "0xE205B0", VA = "0xE205B0")]
		public ShipAbilityActiveChargeLaser()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class ShipAbilityActiveClusterCannon : ShipAbilityActive, IProjectileSource, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Serializable]
		[Token(Token = "0x2000252")]
		private class RingData
		{
			[Token(Token = "0x4000E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string elementName;

			[Token(Token = "0x4000E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float ringRadius;

			[Token(Token = "0x4000E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float ringRadiusAtDistance;

			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int shotsInRing;

			[Token(Token = "0x4000E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float ringShotDelay;

			[Token(Token = "0x4000E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string mask;

			[Token(Token = "0x6001004")]
			[Address(RVA = "0xFFA9DC", Offset = "0xFFA9DC", VA = "0xFFA9DC")]
			public RingData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000253")]
		private class ShotRings
		{
			[Token(Token = "0x4000E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RingData[] ringData;

			[Token(Token = "0x4000E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int selectionWeight;

			[Token(Token = "0x4000E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool useHealthThreshold;

			[Token(Token = "0x4000E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector2 healthThreshold;

			[Token(Token = "0x6001005")]
			[Address(RVA = "0xFFA9EC", Offset = "0xFFA9EC", VA = "0xFFA9EC")]
			public bool CheckHealthThreshold(float totalCurrentHealthPerc)
			{
				return default(bool);
			}

			[Token(Token = "0x6001006")]
			[Address(RVA = "0xFFAA20", Offset = "0xFFAA20", VA = "0xFFAA20")]
			public ShotRings()
			{
			}
		}

		[Token(Token = "0x2000254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A909C", Offset = "0x8A909C")]
		private sealed class <ClusterShotRoutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveClusterCannon <>4__this;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject projectilePrefab;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <targetPos>5__2;

			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__3;

			[Token(Token = "0x170002E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600100A")]
				[Address(RVA = "0xFFA694", Offset = "0xFFA694", VA = "0xFFA694", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600100C")]
				[Address(RVA = "0xFFA6DC", Offset = "0xFFA6DC", VA = "0xFFA6DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001007")]
			[Address(RVA = "0xFFA330", Offset = "0xFFA330", VA = "0xFFA330")]
			[DebuggerHidden]
			public <ClusterShotRoutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6001008")]
			[Address(RVA = "0xFFA35C", Offset = "0xFFA35C", VA = "0xFFA35C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001009")]
			[Address(RVA = "0xFFA360", Offset = "0xFFA360", VA = "0xFFA360", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600100B")]
			[Address(RVA = "0xFFA69C", Offset = "0xFFA69C", VA = "0xFFA69C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000255")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A90AC", Offset = "0x8A90AC")]
		private sealed class <FireChargeUpRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveClusterCannon <>4__this;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x170002E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001010")]
				[Address(RVA = "0xFFA98C", Offset = "0xFFA98C", VA = "0xFFA98C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001012")]
				[Address(RVA = "0xFFA9D4", Offset = "0xFFA9D4", VA = "0xFFA9D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600100D")]
			[Address(RVA = "0xFFA6E4", Offset = "0xFFA6E4", VA = "0xFFA6E4")]
			[DebuggerHidden]
			public <FireChargeUpRoutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x600100E")]
			[Address(RVA = "0xFFA710", Offset = "0xFFA710", VA = "0xFFA710", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600100F")]
			[Address(RVA = "0xFFA714", Offset = "0xFFA714", VA = "0xFFA714", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001011")]
			[Address(RVA = "0xFFA994", Offset = "0xFFA994", VA = "0xFFA994", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8498", Offset = "0x8B8498")]
		private ShotRings[] shotRings;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private bool useRingsSelectionWeight;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		private float fireInterval;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private float chargeupTime;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		private float range;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8524", Offset = "0x8B8524")]
		[SerializeField]
		private Transform muzzle;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Transform chargeupTransfom;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private AssetReferenceGameObject projectilePrefab;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8590", Offset = "0x8B8590")]
		[SerializeField]
		private bool instantFireOnActivate;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[SerializeField]
		private VROptionMenuInteraction interaction;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B85EC", Offset = "0x8B85EC")]
		private SfxTrigger fireSfx;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private SfxTrigger chargeupSfx;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8648", Offset = "0x8B8648")]
		private UnityEvent<IDamagable.DamageInfo> onDamageDealt;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private AddressableAssetDependency<GameObject> projectileAsset;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private SpaceEntitySteering.SteerPosition targetPos;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private float fireTimer;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private float lastFireTime;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private ChargeUpCallbacks localChargeUpCallbacks;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private ChargeUpCallbacks ownerChargeUpCallbacks;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Coroutine fireChargeUpRoutine;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Coroutine fireClusterShotRoutine;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private int currentShotRingsIndex;

		[Token(Token = "0x170002E4")]
		public float Range
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0xE206AC", Offset = "0xE206AC", VA = "0xE206AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E5")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0xE206B4", Offset = "0xE206B4", VA = "0xE206B4", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xE206D8", Offset = "0xE206D8", VA = "0xE206D8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xE20A34", Offset = "0xE20A34", VA = "0xE20A34", Slot = "76")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xE20AA8", Offset = "0xE20AA8", VA = "0xE20AA8", Slot = "77")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xE20B0C", Offset = "0xE20B0C", VA = "0xE20B0C", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xE20C90", Offset = "0xE20C90", VA = "0xE20C90", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xE20CD8", Offset = "0xE20CD8", VA = "0xE20CD8", Slot = "63")]
		protected override void UpdateCooldownAndActivation(float deltaTime)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xE20E44", Offset = "0xE20E44", VA = "0xE20E44")]
		private void Fire()
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xE20EEC", Offset = "0xE20EEC", VA = "0xE20EEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CFD48", Offset = "0x8CFD48")]
		private IEnumerator ClusterShotRoutine(GameObject projectilePrefab)
		{
			return null;
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xE20F80", Offset = "0xE20F80", VA = "0xE20F80")]
		private void FireCluster(RingData ring, Vector3 targetPos, GameObject projectilePrefab)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xE20DCC", Offset = "0xE20DCC", VA = "0xE20DCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CFDA8", Offset = "0x8CFDA8")]
		private IEnumerator FireChargeUpRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xE21530", Offset = "0xE21530", VA = "0xE21530", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xE215D4", Offset = "0xE215D4", VA = "0xE215D4", Slot = "70")]
		public override void DeActivate()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xE21674", Offset = "0xE21674", VA = "0xE21674")]
		public int GetRandomWeightSelectionIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xE217D4", Offset = "0xE217D4", VA = "0xE217D4", Slot = "75")]
		public void OnDamageDealt(IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xE21850", Offset = "0xE21850", VA = "0xE21850")]
		public ShipAbilityActiveClusterCannon()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class ShipAbilityActiveClusterLauncher : ShipAbilityActive, IProjectileSource, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B86A4", Offset = "0x8B86A4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B86A4", Offset = "0x8B86A4")]
		[SerializeField]
		private float friendlyFireRadious;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private float clusterRadious;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private int projectileNumer;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8734", Offset = "0x8B8734")]
		[SerializeField]
		private Transform muzzle;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private UnityEvent onLaunch;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private AssetReferenceGameObject projectilePrefab;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private VROptionMenuInteraction interaction;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B87B0", Offset = "0x8B87B0")]
		private SfxTrigger fireSfx;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B87FC", Offset = "0x8B87FC")]
		[SerializeField]
		private UnityEvent<IDamagable.DamageInfo> onDamageDealt;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private IProjectile projectile;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Type signatureType;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Collider[] ffBuffer;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private AddressableAssetDependency<GameObject> projectileAsset;

		[Token(Token = "0x170002EA")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x1137208", Offset = "0x1137208", VA = "0x1137208", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x170002EB")]
		public override Type SignatureType
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x1137228", Offset = "0x1137228", VA = "0x1137228", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x1137450", Offset = "0x1137450", VA = "0x1137450")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x113746C", Offset = "0x113746C", VA = "0x113746C", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x11374A4", Offset = "0x11374A4", VA = "0x11374A4", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x1137508", Offset = "0x1137508", VA = "0x1137508", Slot = "76")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x113757C", Offset = "0x113757C", VA = "0x113757C", Slot = "77")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x11375E0", Offset = "0x11375E0", VA = "0x11375E0", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition steerTarget)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x11378DC", Offset = "0x11378DC", VA = "0x11378DC")]
		private bool CreateProjectile(SpaceEntitySteering.SteerPosition steerTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x1137824", Offset = "0x1137824", VA = "0x1137824")]
		private void FireCluster(Vector3 atPosition)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1137658", Offset = "0x1137658", VA = "0x1137658")]
		private bool FriendlyFire(Vector3 atPos)
		{
			return default(bool);
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x1137C14", Offset = "0x1137C14", VA = "0x1137C14", Slot = "72")]
		public override TelegraphVisual GetTelegraphVisual(SpaceShip owner)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1137D64", Offset = "0x1137D64", VA = "0x1137D64", Slot = "75")]
		public void OnDamageDealt(IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x1137DE0", Offset = "0x1137DE0", VA = "0x1137DE0")]
		public ShipAbilityActiveClusterLauncher()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class ShipAbilityActiveContinuousLaser : ShipAbilityActiveContinuousLaserBase, IProjectile, IBuffable
	{
		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8848", Offset = "0x8B8848")]
		private float laserDamage;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		private bool ignoreSameFaction;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B88A4", Offset = "0x8B88A4")]
		private BaseDamageModifierAction[] baseDamageModifiers;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private UnityEvent<IDamagable.DamageInfo> onDamageDealt;

		[Token(Token = "0x170002EC")]
		private Transform Game.Ships.IBuffable.Transform
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x11385B4", Offset = "0x11385B4", VA = "0x11385B4", Slot = "54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		private IDamagable Game.Ships.IProjectile.Owner
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x11385BC", Offset = "0x11385BC", VA = "0x11385BC", Slot = "79")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		public float ProjectileHealth
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x11385C8", Offset = "0x11385C8", VA = "0x11385C8", Slot = "81")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002EF")]
		public bool IsDestroyable
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x11385D0", Offset = "0x11385D0", VA = "0x11385D0", Slot = "82")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F0")]
		public DamageTypeEnum DamageType
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x11385A8", Offset = "0x11385A8", VA = "0x11385A8", Slot = "83")]
			get
			{
				return default(DamageTypeEnum);
			}
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x1137E50", Offset = "0x1137E50", VA = "0x1137E50")]
		public float GetBuffedDamage(DamageTarget target)
		{
			return default(float);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x1137F58", Offset = "0x1137F58", VA = "0x1137F58")]
		public float GetBaseDamage(DamageTarget target)
		{
			return default(float);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1137F78", Offset = "0x1137F78", VA = "0x1137F78", Slot = "77")]
		public override void OnLaserTick(Transform target)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1137F7C", Offset = "0x1137F7C", VA = "0x1137F7C")]
		private void TryDealDamage(Transform obj)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x11385B0", Offset = "0x11385B0", VA = "0x11385B0", Slot = "64")]
		protected override void UseAndStartCooldownOnActivation()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x11385C4", Offset = "0x11385C4", VA = "0x11385C4", Slot = "80")]
		private float Game.Ships.IProjectile.GetProjectileDamage(DamageTarget target)
		{
			return default(float);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x11385D8", Offset = "0x11385D8", VA = "0x11385D8", Slot = "84")]
		private void Game.Ships.IProjectile.Setup(IDamagable owner, SpaceEntitySteering.SteerPosition steerTarget, IProjectileSource projectileSource)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x11385DC", Offset = "0x11385DC", VA = "0x11385DC", Slot = "85")]
		private void Game.Ships.IProjectile.Fire()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x11385E0", Offset = "0x11385E0", VA = "0x11385E0", Slot = "86")]
		public void DamageProjectile(IDamagable cause, float damage, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x11385E4", Offset = "0x11385E4", VA = "0x11385E4")]
		public ShipAbilityActiveContinuousLaser()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class ShipAbilityActiveContinuousLaserBase : ShipAbilityActive, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Serializable]
		[Token(Token = "0x2000259")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A90BC", Offset = "0x8A90BC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__44_0;

			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__49_0;

			[Token(Token = "0x6001044")]
			[Address(RVA = "0xFFAA98", Offset = "0xFFAA98", VA = "0xFFAA98")]
			public <>c()
			{
			}

			[Token(Token = "0x6001045")]
			[Address(RVA = "0xFFAAA0", Offset = "0xFFAAA0", VA = "0xFFAAA0")]
			internal UnityEvent <UpdateCooldownAndActivation>b__44_0(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6001046")]
			[Address(RVA = "0xFFAAB8", Offset = "0xFFAAB8", VA = "0xFFAAB8")]
			internal UnityEvent <DeActivate>b__49_0(ChargeUpCallbacks p)
			{
				return null;
			}
		}

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B8900", Offset = "0x8B8900")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8900", Offset = "0x8B8900")]
		public float laserTickSpeed;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8960", Offset = "0x8B8960")]
		public float laserMaxRange;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8998", Offset = "0x8B8998")]
		public float usesTickSpeed;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B89D0", Offset = "0x8B89D0")]
		public int usesMinActivateThreshold;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8A08", Offset = "0x8B8A08")]
		public float chargeUpTime;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8A40", Offset = "0x8B8A40")]
		public bool sendChargeUpCallbacks;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B8A78", Offset = "0x8B8A78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8A78", Offset = "0x8B8A78")]
		public float maxTickStartAmount;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8ACC", Offset = "0x8B8ACC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8ACC", Offset = "0x8B8ACC")]
		public AssetReferenceGameObject laserVisualPrefab;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public VROptionMenuInteraction interaction;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		protected bool raycastIgnoreFriendlyFaction;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B8B3C", Offset = "0x8B8B3C")]
		private LaserVisual <LaserVisual>k__BackingField;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private AddressableAssetDependency<GameObject> laserVisualAsset;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private ChargeUpCallbacks ownerChargeUpCallbacks;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private SpaceEntitySteering.SteerPosition startPos;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private SpaceEntitySteering.SteerPosition targetPos;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float tickTimer;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private float usesTimer;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private float lastTickTime;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private float chargeUpTimer;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly RaycastHit[] RAYCAST_HIT_BUFFER;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8B4C", Offset = "0x8B8B4C")]
		public SfxTrigger laserFireSfx;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public SfxTrigger laserLoopSfx;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public SfxTrigger laserHitShieldSfx;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public SfxTrigger laserHitOtherSfx;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public SfxTrigger laserHitAsteroidSfx;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public SfxTrigger laserHitOrganicSfx;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public SfxTrigger laserHitForcefieldSfx;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public SfxTrigger laserHitDiminishedSfx;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public SfxTrigger chargedLaserFireSfx;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8B8B84", Offset = "0x8B8B84")]
		public SectorTag chargedLaserAbilityTag;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private SfxTrigger currentHitSfx;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private bool isChargedLaser;

		[Token(Token = "0x170002F1")]
		public float Range
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x1138688", Offset = "0x1138688", VA = "0x1138688")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F2")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6001031")]
			[Address(RVA = "0x1138690", Offset = "0x1138690", VA = "0x1138690", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x170002F3")]
		public LaserVisual LaserVisual
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x11386B0", Offset = "0x11386B0", VA = "0x11386B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFEA8", Offset = "0x8CFEA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x11386B8", Offset = "0x11386B8", VA = "0x11386B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CFEB8", Offset = "0x8CFEB8")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x11386C8", Offset = "0x11386C8", VA = "0x11386C8", Slot = "75")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x113873C", Offset = "0x113873C", VA = "0x113873C", Slot = "76")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x11387A0", Offset = "0x11387A0", VA = "0x11387A0", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x11389B8", Offset = "0x11389B8", VA = "0x11389B8", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x1138B58", Offset = "0x1138B58", VA = "0x1138B58")]
		private void OnPassiveAbilityChanged(SpaceShip.AbilityChangeType changeType, ShipAbilityPassive abilityPassive)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x1138EAC", Offset = "0x1138EAC", VA = "0x1138EAC", Slot = "63")]
		protected override void UpdateCooldownAndActivation(float deltaTime)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x113992C", Offset = "0x113992C", VA = "0x113992C", Slot = "77")]
		public virtual void OnLaserTick(Transform target)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x11391D0", Offset = "0x11391D0", VA = "0x11391D0")]
		private void RaycastUpdateTargetPosition(out SpaceEntitySteering.SteerPosition resultTargetPos)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x1139930", Offset = "0x1139930", VA = "0x1139930", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1139D34", Offset = "0x1139D34", VA = "0x1139D34", Slot = "78")]
		public virtual void ChangeHitSfx(SfxTrigger to)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1139DE8", Offset = "0x1139DE8", VA = "0x1139DE8", Slot = "70")]
		public override void DeActivate()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x113986C", Offset = "0x113986C", VA = "0x113986C")]
		private static void InvokeChargeUpCallback(ChargeUpCallbacks callbacks, Func<ChargeUpCallbacks, UnityEvent> getEvent)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1139FFC", Offset = "0x1139FFC", VA = "0x1139FFC", Slot = "64")]
		protected override void UseAndStartCooldownOnActivation()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1138668", Offset = "0x1138668", VA = "0x1138668")]
		public ShipAbilityActiveContinuousLaserBase()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class ShipAbilityActiveContinuousLaserHeal : ShipAbilityActiveContinuousLaserBase, IProjectile, IBuffable
	{
		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8BBC", Offset = "0x8B8BBC")]
		[SerializeField]
		private float laserHeal;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8C08", Offset = "0x8B8C08")]
		[SerializeField]
		private float maxHealthIncreaseCap;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		private HealTypeEnum healType;

		[Token(Token = "0x170002F4")]
		private float Heal
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x113A074", Offset = "0x113A074", VA = "0x113A074")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F5")]
		private Transform Game.Ships.IBuffable.Transform
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x113A4E4", Offset = "0x113A4E4", VA = "0x113A4E4", Slot = "54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		private IDamagable Game.Ships.IProjectile.Owner
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x113A4EC", Offset = "0x113A4EC", VA = "0x113A4EC", Slot = "79")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F7")]
		public float ProjectileHealth
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0x113A500", Offset = "0x113A500", VA = "0x113A500", Slot = "81")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F8")]
		public bool IsDestroyable
		{
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x113A508", Offset = "0x113A508", VA = "0x113A508", Slot = "82")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F9")]
		public DamageTypeEnum DamageType
		{
			[Token(Token = "0x6001050")]
			[Address(RVA = "0x113A510", Offset = "0x113A510", VA = "0x113A510", Slot = "83")]
			get
			{
				return default(DamageTypeEnum);
			}
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x113A07C", Offset = "0x113A07C", VA = "0x113A07C", Slot = "77")]
		public override void OnLaserTick(Transform target)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x113A084", Offset = "0x113A084", VA = "0x113A084")]
		private void TryHeal(float heal, Transform obj)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x113A4E0", Offset = "0x113A4E0", VA = "0x113A4E0", Slot = "64")]
		protected override void UseAndStartCooldownOnActivation()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x113A4F4", Offset = "0x113A4F4", VA = "0x113A4F4", Slot = "80")]
		private float Game.Ships.IProjectile.GetProjectileDamage(DamageTarget target)
		{
			return default(float);
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x113A518", Offset = "0x113A518", VA = "0x113A518", Slot = "84")]
		private void Game.Ships.IProjectile.Setup(IDamagable owner, SpaceEntitySteering.SteerPosition steerTarget, IProjectileSource projectileSource)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x113A51C", Offset = "0x113A51C", VA = "0x113A51C", Slot = "85")]
		private void Game.Ships.IProjectile.Fire()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x113A520", Offset = "0x113A520", VA = "0x113A520", Slot = "86")]
		public void DamageProjectile(IDamagable cause, float damage, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x113A524", Offset = "0x113A524", VA = "0x113A524")]
		public ShipAbilityActiveContinuousLaserHeal()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class ShipAbilityActiveCutLaser : ShipAbilityActive, IProjectileSource
	{
		[Token(Token = "0x200025C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A90CC", Offset = "0x8A90CC")]
		private sealed class <FireChargeUpRoutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveCutLaser <>4__this;

			[Token(Token = "0x170002FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001068")]
				[Address(RVA = "0xFFAD54", Offset = "0xFFAD54", VA = "0xFFAD54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600106A")]
				[Address(RVA = "0xFFAD9C", Offset = "0xFFAD9C", VA = "0xFFAD9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001065")]
			[Address(RVA = "0xFFAAD0", Offset = "0xFFAAD0", VA = "0xFFAAD0")]
			[DebuggerHidden]
			public <FireChargeUpRoutine>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001066")]
			[Address(RVA = "0xFFAAFC", Offset = "0xFFAAFC", VA = "0xFFAAFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001067")]
			[Address(RVA = "0xFFAB00", Offset = "0xFFAB00", VA = "0xFFAB00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001069")]
			[Address(RVA = "0xFFAD5C", Offset = "0xFFAD5C", VA = "0xFFAD5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A90DC", Offset = "0x8A90DC")]
		private sealed class <WaitUntilFireCompletion>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveCutLaser <>4__this;

			[Token(Token = "0x17000300")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600106E")]
				[Address(RVA = "0xFFAF98", Offset = "0xFFAF98", VA = "0xFFAF98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000301")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001070")]
				[Address(RVA = "0xFFAFE0", Offset = "0xFFAFE0", VA = "0xFFAFE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600106B")]
			[Address(RVA = "0xFFADA4", Offset = "0xFFADA4", VA = "0xFFADA4")]
			[DebuggerHidden]
			public <WaitUntilFireCompletion>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x600106C")]
			[Address(RVA = "0xFFADD0", Offset = "0xFFADD0", VA = "0xFFADD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600106D")]
			[Address(RVA = "0xFFADD4", Offset = "0xFFADD4", VA = "0xFFADD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600106F")]
			[Address(RVA = "0xFFAFA0", Offset = "0xFFAFA0", VA = "0xFFAFA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E5D")]
		private const float ANGLE_OFF_PER_LASER_5 = 72f;

		[Token(Token = "0x4000E5E")]
		private const float ANGLE_OFF_PER_LASER_7 = 51.42857f;

		[Token(Token = "0x4000E5F")]
		private const float ANGLE_OFF_PER_LASER_8 = 45f;

		[Token(Token = "0x4000E60")]
		private const float ANGLE_OFF_PER_LASER_9 = 40f;

		[Token(Token = "0x4000E61")]
		private const float ANGLE_OFF_PER_LASER_10 = 36f;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8C64", Offset = "0x8B8C64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B8C64", Offset = "0x8B8C64")]
		[SerializeField]
		private int laserCount;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private VROptionMenuInteraction interaction;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private GameObject laserPrefab;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private float range;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private float rotationSpeed;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private SfxTrigger fireSfx;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private SfxTrigger fireLoopSfx;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private SfxTrigger chargeupSfx;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private SfxTrigger fireEndSfx;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8D48", Offset = "0x8B8D48")]
		[SerializeField]
		private float chargeupTime;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private SpaceEntitySteering.SteerPosition targetPos;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8D94", Offset = "0x8B8D94")]
		[SerializeField]
		private UnityEvent<IDamagable.DamageInfo> onDamageDealt;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private ShipAbilityCutLaserEmitter[] lasers;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private int lasersToFireCount;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private ChargeUpCallbacks localChargeUpCallbacks;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private ChargeUpCallbacks ownerChargeUpCallbacks;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Coroutine fireChargeUpRoutine;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Coroutine fireCompletionCoroutine;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool isChargeUp;

		[Token(Token = "0x170002FA")]
		public float Range
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x113A5A8", Offset = "0x113A5A8", VA = "0x113A5A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FB")]
		public float FireTime
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x113A5B0", Offset = "0x113A5B0", VA = "0x113A5B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FC")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x113A5F4", Offset = "0x113A5F4", VA = "0x113A5F4", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x170002FD")]
		public int LasersToFireCount
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x113A618", Offset = "0x113A618", VA = "0x113A618")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x113A620", Offset = "0x113A620", VA = "0x113A620")]
			set
			{
			}
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x113A628", Offset = "0x113A628", VA = "0x113A628", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x113A690", Offset = "0x113A690", VA = "0x113A690")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x113A6AC", Offset = "0x113A6AC", VA = "0x113A6AC", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x113A70C", Offset = "0x113A70C", VA = "0x113A70C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CFEC8", Offset = "0x8CFEC8")]
		private IEnumerator FireChargeUpRoutine()
		{
			return null;
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x113A784", Offset = "0x113A784", VA = "0x113A784")]
		private void Fire()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x113C124", Offset = "0x113C124", VA = "0x113C124")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8CFF28", Offset = "0x8CFF28")]
		private IEnumerator WaitUntilFireCompletion()
		{
			return null;
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x113C19C", Offset = "0x113C19C", VA = "0x113C19C", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x113C248", Offset = "0x113C248", VA = "0x113C248", Slot = "70")]
		public override void DeActivate()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x113C684", Offset = "0x113C684", VA = "0x113C684", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x113CA60", Offset = "0x113CA60", VA = "0x113CA60", Slot = "75")]
		public void OnDamageDealt(IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x113CADC", Offset = "0x113CADC", VA = "0x113CADC")]
		public ShipAbilityActiveCutLaser()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class ShipAbilityActiveHiveLauncher : ShipAbilityActiveLauncher
	{
		[Serializable]
		[Token(Token = "0x200025F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A90EC", Offset = "0x8A90EC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__14_0;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__15_0;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__15_1;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__15_3;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__15_4;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__15_2;

			[Token(Token = "0x600107C")]
			[Address(RVA = "0xFFB04C", Offset = "0xFFB04C", VA = "0xFFB04C")]
			public <>c()
			{
			}

			[Token(Token = "0x600107D")]
			[Address(RVA = "0xFFB054", Offset = "0xFFB054", VA = "0xFFB054")]
			internal UnityEvent <DeActivate>b__14_0(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x600107E")]
			[Address(RVA = "0xFFB06C", Offset = "0xFFB06C", VA = "0xFFB06C")]
			internal UnityEvent <CreateAndFireProjectiles>b__15_0(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x600107F")]
			[Address(RVA = "0xFFB084", Offset = "0xFFB084", VA = "0xFFB084")]
			internal UnityEvent <CreateAndFireProjectiles>b__15_1(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6001080")]
			[Address(RVA = "0xFFB09C", Offset = "0xFFB09C", VA = "0xFFB09C")]
			internal UnityEvent <CreateAndFireProjectiles>b__15_3(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6001081")]
			[Address(RVA = "0xFFB0B4", Offset = "0xFFB0B4", VA = "0xFFB0B4")]
			internal UnityEvent <CreateAndFireProjectiles>b__15_4(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x6001082")]
			[Address(RVA = "0xFFB0CC", Offset = "0xFFB0CC", VA = "0xFFB0CC")]
			internal UnityEvent <CreateAndFireProjectiles>b__15_2(ChargeUpCallbacks p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A90FC", Offset = "0x8A90FC")]
		private sealed class <CreateAndFireProjectiles>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveHiveLauncher <>4__this;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject projectilePrefab;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SpaceEntitySteering.SteerPosition steerTarget;

			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <createdProjectiles>5__2;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Vector3[] <launchVectors>5__3;

			[Token(Token = "0x17000304")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001086")]
				[Address(RVA = "0xFFBB1C", Offset = "0xFFBB1C", VA = "0xFFBB1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000305")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001088")]
				[Address(RVA = "0xFFBB64", Offset = "0xFFBB64", VA = "0xFFBB64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001083")]
			[Address(RVA = "0xFFB0E4", Offset = "0xFFB0E4", VA = "0xFFB0E4")]
			[DebuggerHidden]
			public <CreateAndFireProjectiles>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001084")]
			[Address(RVA = "0xFFB110", Offset = "0xFFB110", VA = "0xFFB110", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001085")]
			[Address(RVA = "0xFFB114", Offset = "0xFFB114", VA = "0xFFB114", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001087")]
			[Address(RVA = "0xFFBB24", Offset = "0xFFBB24", VA = "0xFFBB24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8DE0", Offset = "0x8B8DE0")]
		[SerializeField]
		private int projectileCount;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		private int targetAngle;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private float delayBetweenProjectilesInSeconds;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		private float range;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private float chargeupTime;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Coroutine fireProjectileRoutine;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private ChargeUpCallbacks ownerChargeUpCallbacks;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool chargeUpFinished;

		[Token(Token = "0x17000302")]
		public float ChargeUpTime
		{
			[Token(Token = "0x6001071")]
			[Address(RVA = "0x113CB00", Offset = "0x113CB00", VA = "0x113CB00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001072")]
			[Address(RVA = "0x113CB08", Offset = "0x113CB08", VA = "0x113CB08")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public float Range
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0x113CB10", Offset = "0x113CB10", VA = "0x113CB10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x113CBF4", Offset = "0x113CBF4", VA = "0x113CBF4", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition steerTarget)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x113CF98", Offset = "0x113CF98", VA = "0x113CF98", Slot = "70")]
		public override void DeActivate()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x113CEDC", Offset = "0x113CEDC", VA = "0x113CEDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0028", Offset = "0x8D0028")]
		private IEnumerator CreateAndFireProjectiles(SpaceEntitySteering.SteerPosition steerTarget, GameObject projectilePrefab)
		{
			return null;
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x113D1A8", Offset = "0x113D1A8", VA = "0x113D1A8")]
		private Vector3[] GetLaunchVectors()
		{
			return null;
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x113D398", Offset = "0x113D398", VA = "0x113D398", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x113D0E8", Offset = "0x113D0E8", VA = "0x113D0E8")]
		private static void InvokeChargeUpCallback(ChargeUpCallbacks callbacks, Func<ChargeUpCallbacks, UnityEvent> getEvent)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x113D478", Offset = "0x113D478", VA = "0x113D478")]
		public ShipAbilityActiveHiveLauncher()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class ShipAbilityActiveHullRepair : ShipAbilityActive
	{
		[Token(Token = "0x2000262")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A910C", Offset = "0x8A910C")]
		private sealed class <RepairRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveHullRepair <>4__this;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <toHeal>5__3;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <healCount>5__4;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <healTick>5__5;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <delayBetween>5__6;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <healTimer>5__7;

			[Token(Token = "0x17000307")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001094")]
				[Address(RVA = "0xFFBDA8", Offset = "0xFFBDA8", VA = "0xFFBDA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000308")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001096")]
				[Address(RVA = "0xFFBDF0", Offset = "0xFFBDF0", VA = "0xFFBDF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001091")]
			[Address(RVA = "0xFFBB6C", Offset = "0xFFBB6C", VA = "0xFFBB6C")]
			[DebuggerHidden]
			public <RepairRoutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001092")]
			[Address(RVA = "0xFFBB98", Offset = "0xFFBB98", VA = "0xFFBB98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001093")]
			[Address(RVA = "0xFFBB9C", Offset = "0xFFBB9C", VA = "0xFFBB9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001095")]
			[Address(RVA = "0xFFBDB0", Offset = "0xFFBDB0", VA = "0xFFBDB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8E6C", Offset = "0x8B8E6C")]
		[SerializeField]
		private float repairTime;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8EB8", Offset = "0x8B8EB8")]
		private int repairAmount;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8F04", Offset = "0x8B8F04")]
		private GameObject repairEffectPrefab;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Coroutine repairRoutine;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private GameObject repairEffectObj;

		[Token(Token = "0x17000306")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x113D544", Offset = "0x113D544", VA = "0x113D544", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x113D564", Offset = "0x113D564", VA = "0x113D564", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x113D5D4", Offset = "0x113D5D4", VA = "0x113D5D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D00D8", Offset = "0x8D00D8")]
		private IEnumerator RepairRoutine()
		{
			return null;
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x113D64C", Offset = "0x113D64C", VA = "0x113D64C", Slot = "70")]
		public override void DeActivate()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x113D744", Offset = "0x113D744", VA = "0x113D744", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x113D904", Offset = "0x113D904", VA = "0x113D904", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x113D6A0", Offset = "0x113D6A0", VA = "0x113D6A0")]
		private void SetRepairEffectVisible(bool visible)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x113D9C8", Offset = "0x113D9C8", VA = "0x113D9C8")]
		public ShipAbilityActiveHullRepair()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class ShipAbilityActiveLauncher : ShipAbilityActive, IProjectileSource, IAddressableAssetDependency, IAddressableAssetPreload, IEnergyBarAbility
	{
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8F50", Offset = "0x8B8F50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8F50", Offset = "0x8B8F50")]
		protected float friendlyFireRadious;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8FC0", Offset = "0x8B8FC0")]
		[SerializeField]
		protected Transform muzzle;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		protected UnityEvent onLaunch;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		protected AssetReferenceGameObject projectilePrefab;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		protected VROptionMenuInteraction interaction;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B903C", Offset = "0x8B903C")]
		[SerializeField]
		protected SfxTrigger fireSfx;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9088", Offset = "0x8B9088")]
		[SerializeField]
		private UnityEvent<IDamagable.DamageInfo> onDamageDealt;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B90D4", Offset = "0x8B90D4")]
		private AbilityStatusChange <OnAbilityRecharge>k__BackingField;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B90E4", Offset = "0x8B90E4")]
		private AbilityStatusChange <OnAbilityCooldownUpdated>k__BackingField;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected List<IProjectile> projectiles;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected Type signatureType;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected Collider[] ffBuffer;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected AddressableAssetDependency<GameObject> projectileAsset;

		[Token(Token = "0x17000309")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x113D9DC", Offset = "0x113D9DC", VA = "0x113D9DC", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x1700030A")]
		public override Type SignatureType
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x113D9F0", Offset = "0x113D9F0", VA = "0x113D9F0", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		public float Duration
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x113DC18", Offset = "0x113DC18", VA = "0x113DC18", Slot = "82")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030C")]
		public AbilityStatusChange OnAbilityRecharge
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x113DD08", Offset = "0x113DD08", VA = "0x113DD08", Slot = "86")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0188", Offset = "0x8D0188")]
			get
			{
				return null;
			}
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x113DD10", Offset = "0x113DD10", VA = "0x113DD10", Slot = "87")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0198", Offset = "0x8D0198")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public AbilityStatusChange OnAbilityCooldownUpdated
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0x113DD20", Offset = "0x113DD20", VA = "0x113DD20", Slot = "88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D01A8", Offset = "0x8D01A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600109D")]
			[Address(RVA = "0x113DD28", Offset = "0x113DD28", VA = "0x113DD28", Slot = "89")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D01B8", Offset = "0x8D01B8")]
			set
			{
			}
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x113D414", Offset = "0x113D414", VA = "0x113D414", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x113DD38", Offset = "0x113DD38", VA = "0x113DD38", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x113DD70", Offset = "0x113DD70", VA = "0x113DD70", Slot = "76")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x113DDE4", Offset = "0x113DDE4", VA = "0x113DDE4", Slot = "77")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x113DE48", Offset = "0x113DE48", VA = "0x113DE48", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition steerTarget)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x113E0A8", Offset = "0x113E0A8", VA = "0x113E0A8", Slot = "90")]
		protected virtual bool CreateProjectile(SpaceEntitySteering.SteerPosition steerTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x113CD10", Offset = "0x113CD10", VA = "0x113CD10")]
		protected bool FriendlyFire(Vector3 atPos)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x113E418", Offset = "0x113E418", VA = "0x113E418", Slot = "72")]
		public override TelegraphVisual GetTelegraphVisual(SpaceShip owner)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x113E568", Offset = "0x113E568", VA = "0x113E568", Slot = "75")]
		public void OnDamageDealt(IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x113D490", Offset = "0x113D490", VA = "0x113D490")]
		public ShipAbilityActiveLauncher()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class ShipAbilityActiveMineBurst : ShipAbilityActiveLauncher
	{
		[Serializable]
		[Token(Token = "0x2000265")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A911C", Offset = "0x8A911C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__19_1;

			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__19_0;

			[Token(Token = "0x60010B1")]
			[Address(RVA = "0xFFBE5C", Offset = "0xFFBE5C", VA = "0xFFBE5C")]
			public <>c()
			{
			}

			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xFFBE64", Offset = "0xFFBE64", VA = "0xFFBE64")]
			internal UnityEvent <CreateAndFireProjectiles>b__19_1(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x60010B3")]
			[Address(RVA = "0xFFBE7C", Offset = "0xFFBE7C", VA = "0xFFBE7C")]
			internal UnityEvent <CreateAndFireProjectiles>b__19_0(ChargeUpCallbacks p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000266")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A912C", Offset = "0x8A912C")]
		private sealed class <CreateAndFireProjectiles>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveMineBurst <>4__this;

			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject projectilePrefab;

			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <j>5__3;

			[Token(Token = "0x1700030E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B7")]
				[Address(RVA = "0xFFCCD4", Offset = "0xFFCCD4", VA = "0xFFCCD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B9")]
				[Address(RVA = "0xFFCD1C", Offset = "0xFFCD1C", VA = "0xFFCD1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xFFC3FC", Offset = "0xFFC3FC", VA = "0xFFC3FC")]
			[DebuggerHidden]
			public <CreateAndFireProjectiles>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xFFC428", Offset = "0xFFC428", VA = "0xFFC428", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xFFC42C", Offset = "0xFFC42C", VA = "0xFFC42C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xFFCCDC", Offset = "0xFFCCDC", VA = "0xFFCCDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000267")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A913C", Offset = "0x8A913C")]
		private sealed class <ChaseTargetDelay>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveMineBurst <>4__this;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IProjectile projectile;

			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <chaseAcceleration>5__2;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <chaseDeceleration>5__3;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector2 <chaseMoveSpeedRange>5__4;

			[Token(Token = "0x17000310")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010BD")]
				[Address(RVA = "0xFFC3AC", Offset = "0xFFC3AC", VA = "0xFFC3AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000311")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010BF")]
				[Address(RVA = "0xFFC3F4", Offset = "0xFFC3F4", VA = "0xFFC3F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xFFBE94", Offset = "0xFFBE94", VA = "0xFFBE94")]
			[DebuggerHidden]
			public <ChaseTargetDelay>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60010BB")]
			[Address(RVA = "0xFFBEC0", Offset = "0xFFBEC0", VA = "0xFFBEC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xFFBEC4", Offset = "0xFFBEC4", VA = "0xFFBEC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xFFC3B4", Offset = "0xFFC3B4", VA = "0xFFC3B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B90F4", Offset = "0x8B90F4")]
		[SerializeField]
		private float mineLaunchDelay;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		private int minesPerBurst;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private int burstAmount;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		private float burstDelay;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9170", Offset = "0x8B9170")]
		[SerializeField]
		private float innerCircleRadius;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		private float outerCircleRadius;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private float sphereDistance;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B91DC", Offset = "0x8B91DC")]
		private Transform innerCircleTransform;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private Transform outerCircleTransform;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9238", Offset = "0x8B9238")]
		[SerializeField]
		private float initialAcceleration;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		private float initialDeceleration;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private Vector2 initialMoveSpeedRange;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private Vector2 chaseMoveSpeedRange;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private float chaseAcceleration;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private float chaseDeceleration;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private Vector2 chaseTargetDelayRange;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private bool isActive;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private ChargeUpCallbacks ownerChargeUpCallbacks;

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x113E5E4", Offset = "0x113E5E4", VA = "0x113E5E4", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition steerTarget)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x113E69C", Offset = "0x113E69C", VA = "0x113E69C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D01C8", Offset = "0x8D01C8")]
		private IEnumerator CreateAndFireProjectiles(SpaceEntitySteering.SteerPosition steerTarget, GameObject projectilePrefab)
		{
			return null;
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x113E730", Offset = "0x113E730", VA = "0x113E730")]
		private Vector3 GetSpawnPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x113E788", Offset = "0x113E788", VA = "0x113E788")]
		private SpaceEntitySteering.SteerPosition GetOuterRingSteerTarget(int index)
		{
			return default(SpaceEntitySteering.SteerPosition);
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x113E848", Offset = "0x113E848", VA = "0x113E848")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0228", Offset = "0x8D0228")]
		private IEnumerator ChaseTargetDelay(IProjectile projectile)
		{
			return null;
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x113E8DC", Offset = "0x113E8DC", VA = "0x113E8DC", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x113E958", Offset = "0x113E958", VA = "0x113E958")]
		private static void InvokeChargeUpCallback(ChargeUpCallbacks callbacks, Func<ChargeUpCallbacks, UnityEvent> getEvent)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x113EA18", Offset = "0x113EA18", VA = "0x113EA18")]
		public ShipAbilityActiveMineBurst()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class ShipAbilityActiveSkipDrive : ShipAbilityActive
	{
		[Token(Token = "0x2000269")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A914C", Offset = "0x8A914C")]
		private sealed class <SkipDestinationRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveSkipDrive <>4__this;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpaceEntitySteering.SteerPosition targetPos;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <radious>5__2;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float <activationDistance>5__3;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3 <teleportPos>5__4;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private float <extraSpread>5__5;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int <maxTries>5__6;

			[Token(Token = "0x17000313")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010CA")]
				[Address(RVA = "0xFFD234", Offset = "0xFFD234", VA = "0xFFD234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000314")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010CC")]
				[Address(RVA = "0xFFD27C", Offset = "0xFFD27C", VA = "0xFFD27C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010C7")]
			[Address(RVA = "0xFFCD24", Offset = "0xFFCD24", VA = "0xFFCD24")]
			[DebuggerHidden]
			public <SkipDestinationRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60010C8")]
			[Address(RVA = "0xFFCD50", Offset = "0xFFCD50", VA = "0xFFCD50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010C9")]
			[Address(RVA = "0xFFCD54", Offset = "0xFFCD54", VA = "0xFFCD54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010CB")]
			[Address(RVA = "0xFFD23C", Offset = "0xFFD23C", VA = "0xFFD23C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B92E4", Offset = "0x8B92E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B92E4", Offset = "0x8B92E4")]
		private Vector2 accuracySpan;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B9354", Offset = "0x8B9354")]
		[SerializeField]
		private VROptionMenuInteraction interaction;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Coroutine skipRoutine;

		[Token(Token = "0x17000312")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x113EA1C", Offset = "0x113EA1C", VA = "0x113EA1C", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x113EA3C", Offset = "0x113EA3C", VA = "0x113EA3C", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x113EB14", Offset = "0x113EB14", VA = "0x113EB14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0328", Offset = "0x8D0328")]
		private IEnumerator SkipDestinationRoutine(SpaceEntitySteering.SteerPosition targetPos)
		{
			return null;
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x113EBC0", Offset = "0x113EBC0", VA = "0x113EBC0")]
		private bool CheckDestination(Vector3 point, float radious)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x113EC70", Offset = "0x113EC70", VA = "0x113EC70", Slot = "70")]
		public override void DeActivate()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x113EAD4", Offset = "0x113EAD4", VA = "0x113EAD4")]
		private void StopCurrentRoutine()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x113EC98", Offset = "0x113EC98", VA = "0x113EC98")]
		public ShipAbilityActiveSkipDrive()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class ShipAbilityActiveSpawnGuardianPod : ShipAbilityActiveSpawnShip
	{
		[Serializable]
		[Token(Token = "0x200026B")]
		public class LaunchDestinationPairing
		{
			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform launch;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform destination;

			[Token(Token = "0x60010D2")]
			[Address(RVA = "0xFFD2EC", Offset = "0xFFD2EC", VA = "0xFFD2EC")]
			public LaunchDestinationPairing()
			{
			}
		}

		[Token(Token = "0x200026C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A915C", Offset = "0x8A915C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShipAbilityActiveSpawnGuardianPod <>4__this;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpaceEntity podSpaceEntity;

			[Token(Token = "0x60010D3")]
			[Address(RVA = "0xFFD284", Offset = "0xFFD284", VA = "0xFFD284")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60010D4")]
			[Address(RVA = "0xFFD28C", Offset = "0xFFD28C", VA = "0xFFD28C")]
			internal void <OnSpawnShip>b__0(GameObject _)
			{
			}
		}

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9390", Offset = "0x8B9390")]
		[SerializeField]
		private LaunchDestinationPairing[] launchDestinationPairings;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private List<SpaceEntity> spawnedPods;

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x113ECAC", Offset = "0x113ECAC", VA = "0x113ECAC", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x113EDFC", Offset = "0x113EDFC", VA = "0x113EDFC", Slot = "78")]
		protected override void OnSpawnShip(GameObject shipObject, Transform launchTransform)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x113F248", Offset = "0x113F248", VA = "0x113F248", Slot = "77")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x113F730", Offset = "0x113F730", VA = "0x113F730")]
		private void DestroyPods(SpaceObject so)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x113F834", Offset = "0x113F834", VA = "0x113F834")]
		public ShipAbilityActiveSpawnGuardianPod()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public enum ShipAbilityActiveSpawnShipOrder
	{
		[Token(Token = "0x4000EE1")]
		Random,
		[Token(Token = "0x4000EE2")]
		ClosestToTarget
	}
	[Token(Token = "0x200026E")]
	public class ShipAbilityActiveSpawnShip : ShipAbilityActive, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Serializable]
		[Token(Token = "0x200026F")]
		public class ShipLaunchPositionGroup
		{
			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform[] shipLaunchPositions;

			[NonSerialized]
			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8B94B8", Offset = "0x8B94B8")]
			public List<(Transform, float)> shipLaunchPositionsOrder;

			[Token(Token = "0x60010EA")]
			[Address(RVA = "0xFFD664", Offset = "0xFFD664", VA = "0xFFD664")]
			public ShipLaunchPositionGroup()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000270")]
		public struct SpawnShipPrefab
		{
			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AssetReferenceGameObject shipPrefab;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int selectionWeight;
		}

		[Token(Token = "0x2000271")]
		private struct SpawnShipAsset
		{
			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AddressableAssetDependency<GameObject> shipAsset;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int selectionWeight;

			[Token(Token = "0x17000317")]
			public string Name
			{
				[Token(Token = "0x60010EB")]
				[Address(RVA = "0xFFD6E8", Offset = "0xFFD6E8", VA = "0xFFD6E8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010EC")]
			[Address(RVA = "0xFFD710", Offset = "0xFFD710", VA = "0xFFD710")]
			public SpawnShipAsset(AddressableAssetDependency<GameObject> shipAsset, int selectionWeight)
			{
			}

			[Token(Token = "0x60010ED")]
			[Address(RVA = "0xFFD73C", Offset = "0xFFD73C", VA = "0xFFD73C")]
			public static int GetSelectionWeight(SpawnShipAsset spawnShip)
			{
				return default(int);
			}

			[Token(Token = "0x60010EE")]
			[Address(RVA = "0xFFD744", Offset = "0xFFD744", VA = "0xFFD744")]
			public static bool GetSelectionValid(SpawnShipAsset spawnShip)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000272")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A916C", Offset = "0x8A916C")]
		private sealed class <DelayedActivation>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ShipAbilityActiveSpawnShip <>4__this;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SpaceEntitySteering.SteerPosition targetPos;

			[Token(Token = "0x17000318")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010F2")]
				[Address(RVA = "0xFFD614", Offset = "0xFFD614", VA = "0xFFD614", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000319")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010F4")]
				[Address(RVA = "0xFFD65C", Offset = "0xFFD65C", VA = "0xFFD65C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010EF")]
			[Address(RVA = "0xFFD3C0", Offset = "0xFFD3C0", VA = "0xFFD3C0")]
			[DebuggerHidden]
			public <DelayedActivation>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60010F0")]
			[Address(RVA = "0xFFD3EC", Offset = "0xFFD3EC", VA = "0xFFD3EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F1")]
			[Address(RVA = "0xFFD3F0", Offset = "0xFFD3F0", VA = "0xFFD3F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F3")]
			[Address(RVA = "0xFFD61C", Offset = "0xFFD61C", VA = "0xFFD61C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000273")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A917C", Offset = "0x8A917C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__32_1;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ChargeUpCallbacks, UnityEvent> <>9__32_0;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8B9564", Offset = "0x8B9564")]
			public static Comparison<(Transform, float)> <>9__34_0;

			[Token(Token = "0x60010F6")]
			[Address(RVA = "0xFFD358", Offset = "0xFFD358", VA = "0xFFD358")]
			public <>c()
			{
			}

			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xFFD360", Offset = "0xFFD360", VA = "0xFFD360")]
			internal UnityEvent <SpawnShip>b__32_1(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xFFD378", Offset = "0xFFD378", VA = "0xFFD378")]
			internal UnityEvent <SpawnShip>b__32_0(ChargeUpCallbacks p)
			{
				return null;
			}

			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xFFD390", Offset = "0xFFD390", VA = "0xFFD390")]
			internal int <SetupLaunchPositions>b__34_0([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8D7F70", Offset = "0x8D7F70")] (Transform, float) a, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8D800C", Offset = "0x8D800C")] (Transform, float) b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B93DC", Offset = "0x8B93DC")]
		[SerializeField]
		private SpawnShipPrefab[] shipLaunchPrefabs;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private AssetReferenceGameObject launchEffect;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private ShipAbilityActiveSpawnShipOrder shipLaunchOrder;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private ShipLaunchPositionGroup[] shipLaunchPositionGroups;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private float initialSpawnDelay;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private Vector2 spawnIntervalRange;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		private Vector2 shipsPerLaunchRange;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[SerializeField]
		private float launchPositionOverlapCheckRadius;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private float vfxActivateTimer;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private bool sendChargeUpCallbacks;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Coroutine delayedActivationCoroutine;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private ChargeUpCallbacks ownerChargeUpCallbacks;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private SpaceEntitySteering.SteerPosition target;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private SpawnShipAsset[] shipLaunchAssets;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private AddressableAssetDependency<GameObject> launchEffectAsset;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Collider[] shipLaunchBlockCheck;

		[Token(Token = "0x17000315")]
		public Vector2 ShipsPerLaunchRange
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x113F924", Offset = "0x113F924", VA = "0x113F924")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x113F930", Offset = "0x113F930", VA = "0x113F930")]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x113F93C", Offset = "0x113F93C", VA = "0x113F93C", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x113F574", Offset = "0x113F574", VA = "0x113F574", Slot = "77")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x113F95C", Offset = "0x113F95C", VA = "0x113F95C", Slot = "75")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x113FAEC", Offset = "0x113FAEC", VA = "0x113FAEC", Slot = "76")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x113FBC4", Offset = "0x113FBC4", VA = "0x113FBC4", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x113FE2C", Offset = "0x113FE2C", VA = "0x113FE2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D03D8", Offset = "0x8D03D8")]
		private IEnumerator DelayedActivation(SpaceEntitySteering.SteerPosition targetPos, float delay)
		{
			return null;
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x113FEE4", Offset = "0x113FEE4", VA = "0x113FEE4")]
		private void OnActivated()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x113F18C", Offset = "0x113F18C", VA = "0x113F18C", Slot = "78")]
		protected virtual void OnSpawnShip(GameObject shipObject, Transform launchPosition)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x11409FC", Offset = "0x11409FC", VA = "0x11409FC")]
		private static void RechargeOne(ShipAbilityActiveSpawnShip spawnAbility)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x113FFB0", Offset = "0x113FFB0", VA = "0x113FFB0")]
		private bool SpawnShip(Action<GameObject, Transform> newShipAction)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x1140AC0", Offset = "0x1140AC0", VA = "0x1140AC0")]
		private void SetupLaunchPositionGroups()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1140BF8", Offset = "0x1140BF8", VA = "0x1140BF8")]
		private void SetupLaunchPositions(ShipLaunchPositionGroup launchPositionGroup)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1140F78", Offset = "0x1140F78", VA = "0x1140F78", Slot = "64")]
		protected override void UseAndStartCooldownOnActivation()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x113ED7C", Offset = "0x113ED7C", VA = "0x113ED7C", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x1140B38", Offset = "0x1140B38", VA = "0x1140B38")]
		private static void InvokeChargeUpCallback(ChargeUpCallbacks callbacks, Func<ChargeUpCallbacks, UnityEvent> getEvent)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x113F900", Offset = "0x113F900", VA = "0x113F900")]
		public ShipAbilityActiveSpawnShip()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1140FF4", Offset = "0x1140FF4", VA = "0x1140FF4")]
		[DebuggerHidden]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0438", Offset = "0x8D0438")]
		private void <>n__0(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1141030", Offset = "0x1141030", VA = "0x1141030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0470", Offset = "0x8D0470")]
		private void <OnSpawnShip>b__30_0(GameObject p)
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class ShipAbilityActiveSpeedBoost : ShipAbilityActive, IEnergyBarAbility
	{
		[Token(Token = "0x2000275")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A918C", Offset = "0x8A918C")]
		private sealed class <BoostRoutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityActiveSpeedBoost <>4__this;

			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <resetBreakingForce>5__2;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <t>5__3;

			[Token(Token = "0x17000320")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001112")]
				[Address(RVA = "0xFFDFB0", Offset = "0xFFDFB0", VA = "0xFFDFB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000321")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001114")]
				[Address(RVA = "0xFFDFF8", Offset = "0xFFDFF8", VA = "0xFFDFF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600110F")]
			[Address(RVA = "0xFFD774", Offset = "0xFFD774", VA = "0xFFD774")]
			[DebuggerHidden]
			public <BoostRoutine>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6001110")]
			[Address(RVA = "0xFFD7A0", Offset = "0xFFD7A0", VA = "0xFFD7A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0xFFD7A4", Offset = "0xFFD7A4", VA = "0xFFD7A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001113")]
			[Address(RVA = "0xFFDFB8", Offset = "0xFFDFB8", VA = "0xFFDFB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9600", Offset = "0x8B9600")]
		private List<BuffObject> boostBuffs;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private SpaceEntitySteering boostSteeringOverride;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private float boostDuration;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		private float breakDuration;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private float boostStartImpulse;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		private float boostStartResetVelocityFactor;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private float boostStartVelocityInstantTurnFactor;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private bool boostIfStationary;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		[SerializeField]
		private bool boostStationaryTowardFirstPath;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B96CC", Offset = "0x8B96CC")]
		[SerializeField]
		private bool boostStationaryAlwaysClearPath;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Vector2 boostBreakDragRange;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private float boostBreakDragTime;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9738", Offset = "0x8B9738")]
		[SerializeField]
		private BuffObject collisionImmuneBuff;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private UnityEvent onCollisionShieldEnabled;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private UnityEvent onCollisionShieldDisabled;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B97A4", Offset = "0x8B97A4")]
		private SfxTrigger useSfxTrigger;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Coroutine boostRoutine;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private List<BuffBase> boostAssignedBuffs;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private BuffBase collisionImmuneAssignedBuff;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private SpaceEntitySteering previousSteering;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private SpeedBoostCallbacks boostCallbacks;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B97F0", Offset = "0x8B97F0")]
		private AbilityStatusChange <OnAbilityRecharge>k__BackingField;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9800", Offset = "0x8B9800")]
		private AbilityStatusChange <OnAbilityCooldownUpdated>k__BackingField;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9810", Offset = "0x8B9810")]
		private bool <IsBoosting>k__BackingField;

		[Token(Token = "0x1700031A")]
		public AbilityStatusChange OnAbilityRecharge
		{
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x1141090", Offset = "0x1141090", VA = "0x1141090", Slot = "83")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D04D0", Offset = "0x8D04D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x1141098", Offset = "0x1141098", VA = "0x1141098", Slot = "84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D04E0", Offset = "0x8D04E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		public AbilityStatusChange OnAbilityCooldownUpdated
		{
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x11410A8", Offset = "0x11410A8", VA = "0x11410A8", Slot = "85")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D04F0", Offset = "0x8D04F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x11410B0", Offset = "0x11410B0", VA = "0x11410B0", Slot = "86")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0500", Offset = "0x8D0500")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public bool IsBoosting
		{
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x11410C0", Offset = "0x11410C0", VA = "0x11410C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0510", Offset = "0x8D0510")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x11410C8", Offset = "0x11410C8", VA = "0x11410C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0520", Offset = "0x8D0520")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public float Duration
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0x11410D4", Offset = "0x11410D4", VA = "0x11410D4", Slot = "79")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700031E")]
		private bool IsCollisionImmuneWhenBoosting
		{
			[Token(Token = "0x6001101")]
			[Address(RVA = "0x11411BC", Offset = "0x11411BC", VA = "0x11411BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031F")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0x1141290", Offset = "0x1141290", VA = "0x1141290", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x11412B0", Offset = "0x11412B0", VA = "0x11412B0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x11413EC", Offset = "0x11413EC", VA = "0x11413EC")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1141518", Offset = "0x1141518", VA = "0x1141518", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x11418F4", Offset = "0x11418F4", VA = "0x11418F4", Slot = "70")]
		public override void DeActivate()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x114191C", Offset = "0x114191C", VA = "0x114191C", Slot = "74")]
		public override void ReduceCooldownByPercentage(float perc)
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x11419A8", Offset = "0x11419A8", VA = "0x11419A8", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x1141A28", Offset = "0x1141A28", VA = "0x1141A28", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x11415B0", Offset = "0x11415B0", VA = "0x11415B0")]
		private void StopBoost()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x1141A50", Offset = "0x1141A50", VA = "0x1141A50")]
		private void TryStartStationaryBoost()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x114187C", Offset = "0x114187C", VA = "0x114187C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0530", Offset = "0x8D0530")]
		private IEnumerator BoostRoutine()
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x1141E38", Offset = "0x1141E38", VA = "0x1141E38")]
		private void OnExitGameSector()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x1141E48", Offset = "0x1141E48", VA = "0x1141E48")]
		public ShipAbilityActiveSpeedBoost()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class ShipAbilityActiveSurroundSpawner : ShipAbilityActive, IProjectileSource, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Token(Token = "0x2000277")]
		public enum SpawnPointTargeting
		{
			[Token(Token = "0x4000F2C")]
			BelowTarget = 0,
			[Token(Token = "0x4000F2D")]
			AboveTarget = 1,
			[Token(Token = "0x4000F2E")]
			AroundTargetSphere = 10,
			[Token(Token = "0x4000F2F")]
			AroundTargetCameraHalfSphere = 11
		}

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9820", Offset = "0x8B9820")]
		protected SpawnPointTargeting spawnTargeting;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		protected Vector2 spawnDistanceRange;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		protected AssetReferenceGameObject spawnPrefab;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private float spawnPositionOverlapCheckRadius;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		protected UnityEvent onSpawn;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		protected VROptionMenuInteraction interaction;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B98BC", Offset = "0x8B98BC")]
		protected SfxTrigger spawnSfx;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9908", Offset = "0x8B9908")]
		private UnityEvent<IDamagable.DamageInfo> onDamageDealt;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected List<IProjectile> spawns;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected Type signatureType;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected AddressableAssetDependency<GameObject> spawnAsset;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Collider[] SPAWN_BLOCK_CHECK;

		[Token(Token = "0x17000322")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6001115")]
			[Address(RVA = "0x1141EF0", Offset = "0x1141EF0", VA = "0x1141EF0", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x17000323")]
		public override Type SignatureType
		{
			[Token(Token = "0x6001116")]
			[Address(RVA = "0x1141F10", Offset = "0x1141F10", VA = "0x1141F10", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x1142138", Offset = "0x1142138", VA = "0x1142138")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x1142290", Offset = "0x1142290", VA = "0x1142290", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x11422D8", Offset = "0x11422D8", VA = "0x11422D8", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1142310", Offset = "0x1142310", VA = "0x1142310", Slot = "76")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x1142384", Offset = "0x1142384", VA = "0x1142384", Slot = "77")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x11423E8", Offset = "0x11423E8", VA = "0x11423E8", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition target)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x1142630", Offset = "0x1142630", VA = "0x1142630", Slot = "78")]
		protected virtual bool CreateProjectile(SpaceEntitySteering.SteerPosition target)
		{
			return default(bool);
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x1142978", Offset = "0x1142978", VA = "0x1142978")]
		private bool TryGetSpawnPoint(Vector3 target, out Vector3 position, out Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x1142AA0", Offset = "0x1142AA0", VA = "0x1142AA0")]
		private bool TryGetSpawnPointBelow(Vector3 target, float distance, out Vector3 position, out Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x1142B78", Offset = "0x1142B78", VA = "0x1142B78")]
		private bool TryGetSpawnPointAbove(Vector3 target, float distance, out Vector3 position, out Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x1142C50", Offset = "0x1142C50", VA = "0x1142C50")]
		private bool TryGetSpawnPointAroundSphere(Vector3 target, float distance, out Vector3 position, out Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x1142DBC", Offset = "0x1142DBC", VA = "0x1142DBC")]
		private bool TryGetSpawnPointAroundCameraHalfSphere(Vector3 target, float distance, out Vector3 position, out Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x114309C", Offset = "0x114309C", VA = "0x114309C")]
		private bool IsSpawnPointBlocked(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x11431DC", Offset = "0x11431DC", VA = "0x11431DC", Slot = "72")]
		public override TelegraphVisual GetTelegraphVisual(SpaceShip owner)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x114332C", Offset = "0x114332C", VA = "0x114332C", Slot = "75")]
		public void OnDamageDealt(IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x11433A8", Offset = "0x11433A8", VA = "0x11433A8")]
		public ShipAbilityActiveSurroundSpawner()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class ShipAbilityActiveTeleport : ShipAbilityActive
	{
		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9954", Offset = "0x8B9954")]
		[SerializeField]
		private Vector2 teleportDistanceRange;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B99A0", Offset = "0x8B99A0")]
		private List<Vector2> teleportAngles;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B99EC", Offset = "0x8B99EC")]
		private Vector2 teleportHeightAngle;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private VROptionMenuInteraction interaction;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9A48", Offset = "0x8B9A48")]
		[SerializeField]
		private SfxTrigger teleportSfx;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9A94", Offset = "0x8B9A94")]
		[SerializeField]
		private float teleportSpeedModifier;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private SpaceEntitySteering.SteerPosition targetSteerPos;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private List<Vector2> possibleAngles;

		[Token(Token = "0x17000324")]
		public override VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6001128")]
			[Address(RVA = "0x11434B0", Offset = "0x11434B0", VA = "0x11434B0", Slot = "55")]
			get
			{
				return default(VROptionMenuInteraction);
			}
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x11434D0", Offset = "0x11434D0", VA = "0x11434D0", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x1143508", Offset = "0x1143508", VA = "0x1143508", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x1143550", Offset = "0x1143550", VA = "0x1143550", Slot = "69")]
		public override void Activate(SpaceEntitySteering.SteerPosition targetPosition)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x11435D8", Offset = "0x11435D8", VA = "0x11435D8", Slot = "64")]
		protected override void UseAndStartCooldownOnActivation()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x11437F8", Offset = "0x11437F8", VA = "0x11437F8")]
		private Vector3 GetTeleportPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x1143B08", Offset = "0x1143B08", VA = "0x1143B08")]
		private Quaternion FaceAwayFromTargetQuaternion(Vector3 teleportPosition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x1143B70", Offset = "0x1143B70", VA = "0x1143B70")]
		public ShipAbilityActiveTeleport()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class UnityEventProjectile : MonoBehaviour, IProjectile, IBuffable
	{
		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9AE0", Offset = "0x8B9AE0")]
		private UnityEvent onSetup;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onFire;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<SectorTag> buffSourceTags;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9B4C", Offset = "0x8B9B4C")]
		private IDamagable <Owner>k__BackingField;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9B5C", Offset = "0x8B9B5C")]
		private SpaceEntitySteering.SteerPosition <Target>k__BackingField;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B9B6C", Offset = "0x8B9B6C")]
		private readonly BuffsUtil <Buffs>k__BackingField;

		[Token(Token = "0x17000325")]
		public IDamagable Owner
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x10B8C24", Offset = "0x10B8C24", VA = "0x10B8C24", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D05E0", Offset = "0x8D05E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001131")]
			[Address(RVA = "0x10B8C2C", Offset = "0x10B8C2C", VA = "0x10B8C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D05F0", Offset = "0x8D05F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public Transform Transform
		{
			[Token(Token = "0x6001132")]
			[Address(RVA = "0x10B8C34", Offset = "0x10B8C34", VA = "0x10B8C34", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		public float ProjectileHealth
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x10B8C44", Offset = "0x10B8C44", VA = "0x10B8C44", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000328")]
		public bool IsDestroyable
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x10B8C4C", Offset = "0x10B8C4C", VA = "0x10B8C4C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000329")]
		public DamageTypeEnum DamageType
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x10B8C54", Offset = "0x10B8C54", VA = "0x10B8C54", Slot = "8")]
			get
			{
				return default(DamageTypeEnum);
			}
		}

		[Token(Token = "0x1700032A")]
		public SpaceEntitySteering.SteerPosition Target
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0x10B8C5C", Offset = "0x10B8C5C", VA = "0x10B8C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0600", Offset = "0x8D0600")]
			get
			{
				return default(SpaceEntitySteering.SteerPosition);
			}
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x10B8C7C", Offset = "0x10B8C7C", VA = "0x10B8C7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0610", Offset = "0x8D0610")]
			private set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x10B8CA8", Offset = "0x10B8CA8", VA = "0x10B8CA8", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		public BuffsUtil Buffs
		{
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x10B8CB0", Offset = "0x10B8CB0", VA = "0x10B8CB0", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0620", Offset = "0x8D0620")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		public bool IsBuffable
		{
			[Token(Token = "0x600113B")]
			[Address(RVA = "0x10B8CB8", Offset = "0x10B8CB8", VA = "0x10B8CB8", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x10B8C3C", Offset = "0x10B8C3C", VA = "0x10B8C3C", Slot = "5")]
		public float GetProjectileDamage(DamageTarget target)
		{
			return default(float);
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x10B8D64", Offset = "0x10B8D64", VA = "0x10B8D64", Slot = "16")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x10B8D80", Offset = "0x10B8D80", VA = "0x10B8D80", Slot = "9")]
		public void Setup(IDamagable owner, SpaceEntitySteering.SteerPosition target, IProjectileSource projectileSource)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x10B8DEC", Offset = "0x10B8DEC", VA = "0x10B8DEC", Slot = "10")]
		public void Fire()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x10B8E00", Offset = "0x10B8E00", VA = "0x10B8E00", Slot = "11")]
		public void DamageProjectile(IDamagable cause, float damage, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x10B8E04", Offset = "0x10B8E04", VA = "0x10B8E04")]
		public void DestroyProjectile()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x10B8E7C", Offset = "0x10B8E7C", VA = "0x10B8E7C")]
		public UnityEventProjectile()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class RunCountdownAction : GameMonoBehaviour, IAbilityPassiveState
	{
		[Serializable]
		[Token(Token = "0x200027B")]
		private struct SerializedState
		{
			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string isCountingDown;

			[Token(Token = "0x4000F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string timer;
		}

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float countdownTimeInSeconds;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SectorTagCollectionHierarchy sectorLoadTimerCancelTags;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9B9C", Offset = "0x8B9B9C")]
		private UnityEvent onCountdownStart;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent onCountdownStop;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEvent onCountdownPause;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEvent onCountdownUnpause;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEvent onCountdownCompleted;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnityEvent onCountdownCancelled;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isCountingDown;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool isPaused;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float timer;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x1700032E")]
		public float Timer
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0xCEB138", Offset = "0xCEB138", VA = "0xCEB138")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700032F")]
		public bool IsCountingDown
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0xCEB140", Offset = "0xCEB140", VA = "0xCEB140")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000330")]
		public bool IsPaused
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0xCEB148", Offset = "0xCEB148", VA = "0xCEB148")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000331")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0xCEB150", Offset = "0xCEB150", VA = "0xCEB150", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xCEB158", Offset = "0xCEB158", VA = "0xCEB158", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xCEB2CC", Offset = "0xCEB2CC", VA = "0xCEB2CC", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xCEB3C4", Offset = "0xCEB3C4", VA = "0xCEB3C4")]
		private void OnGameLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xCEB3C8", Offset = "0xCEB3C8", VA = "0xCEB3C8")]
		private void OnGameLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xCEB4DC", Offset = "0xCEB4DC", VA = "0xCEB4DC", Slot = "32")]
		protected override void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xCEB56C", Offset = "0xCEB56C", VA = "0xCEB56C")]
		public void StartCountdown()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xCEB4B0", Offset = "0xCEB4B0", VA = "0xCEB4B0")]
		public void StopCountdown()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xCEB278", Offset = "0xCEB278", VA = "0xCEB278")]
		public void PauseCountdown()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xCEB2A4", Offset = "0xCEB2A4", VA = "0xCEB2A4")]
		public void UnpauseCountdown()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xCEB5D0", Offset = "0xCEB5D0", VA = "0xCEB5D0")]
		public void ModifyCountdown(float modificationSeconds)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xCEB5E8", Offset = "0xCEB5E8", VA = "0xCEB5E8", Slot = "38")]
		public string GetState()
		{
			return null;
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xCEB6DC", Offset = "0xCEB6DC", VA = "0xCEB6DC", Slot = "39")]
		public void SetState(string state)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xCEB828", Offset = "0xCEB828", VA = "0xCEB828")]
		public RunCountdownAction()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class SystemOverloadAction : MonoBehaviour
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float damagePercentage;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool bypassShield;

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xF2B4A4", Offset = "0xF2B4A4", VA = "0xF2B4A4")]
		public void DamageOwnerOnComponentGain(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xF2B530", Offset = "0xF2B530", VA = "0xF2B530")]
		public SystemOverloadAction()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class ShipAbilityPassiveAutoUseSlotable : ShipAbilityPassive, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Serializable]
		[Token(Token = "0x200027E")]
		public struct UpgradeLevel
		{
			[Token(Token = "0x4000F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AssetReferenceGameObject slotablePrefab;

			[Token(Token = "0x4000F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool canTargetProjectiles;
		}

		[Token(Token = "0x200027F")]
		private struct UpgradeLevelAsset
		{
			[Token(Token = "0x4000F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AddressableAssetDependency<GameObject> slotableAsset;

			[Token(Token = "0x17000336")]
			public string Name
			{
				[Token(Token = "0x6001169")]
				[Address(RVA = "0xFFEB5C", Offset = "0xFFEB5C", VA = "0xFFEB5C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0xFFEB84", Offset = "0xFFEB84", VA = "0xFFEB84")]
			public UpgradeLevelAsset(AddressableAssetDependency<GameObject> slotableAsset)
			{
			}
		}

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private List<UpgradeLevel> upgradeLevels;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private UpgradeLevelAsset[] upgradeLevelAssets;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private SpaceShip owner;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private IAiVisionContainer aiVisionContainer;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private ShipSlotable currentSlotable;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private AddressableAssetDependencies assetDependencies;

		[Token(Token = "0x17000332")]
		public override int Level
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x1146408", Offset = "0x1146408", VA = "0x1146408", Slot = "49")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x1146410", Offset = "0x1146410", VA = "0x1146410", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x17000333")]
		public UpgradeLevel CurrentLevel
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x114678C", Offset = "0x114678C", VA = "0x114678C")]
			get
			{
				return default(UpgradeLevel);
			}
		}

		[Token(Token = "0x17000334")]
		protected override bool EnableOnLoadBalancedUpdate
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0x114680C", Offset = "0x114680C", VA = "0x114680C", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600115A")]
			[Address(RVA = "0x1146814", Offset = "0x1146814", VA = "0x1146814", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000335")]
		private UpgradeLevelAsset CurrentLevelAsset
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0x1146818", Offset = "0x1146818", VA = "0x1146818")]
			get
			{
				return default(UpgradeLevelAsset);
			}
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x114686C", Offset = "0x114686C", VA = "0x114686C", Slot = "57")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x1146A78", Offset = "0x1146A78", VA = "0x1146A78", Slot = "58")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x1146B44", Offset = "0x1146B44", VA = "0x1146B44", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x1146BE0", Offset = "0x1146BE0", VA = "0x1146BE0", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x1146BE8", Offset = "0x1146BE8", VA = "0x1146BE8", Slot = "35")]
		protected override void OnLoadBalancedUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x1146C98", Offset = "0x1146C98", VA = "0x1146C98")]
		private void Tick(ShipAbilityActive activeAbility)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x114700C", Offset = "0x114700C", VA = "0x114700C")]
		private bool TryActivateOnEnemy(AiVision aiVision, ShipAbilityActive activeAbility)
		{
			return default(bool);
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x1146DB8", Offset = "0x1146DB8", VA = "0x1146DB8")]
		private bool TryActivateOnProjectile(AiVision aiVision, ShipAbilityActive activeAbility)
		{
			return default(bool);
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x1147260", Offset = "0x1147260", VA = "0x1147260")]
		private bool IsInRange(ShipAbilityActive activeAbility, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x1146460", Offset = "0x1146460", VA = "0x1146460")]
		private void UnequipCurrentSlotable()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x114653C", Offset = "0x114653C", VA = "0x114653C")]
		private void EquipCurrentLevelSlotable()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x11473C8", Offset = "0x11473C8", VA = "0x11473C8")]
		public ShipAbilityPassiveAutoUseSlotable()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x11473E0", Offset = "0x11473E0", VA = "0x11473E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0630", Offset = "0x8D0630")]
		private void <Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies>b__18_0()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class ShipAbilityPassiveBuffAssigner : ShipAbilityPassive
	{
		[Serializable]
		[Token(Token = "0x2000281")]
		public class UpgradeLevel
		{
			[Token(Token = "0x4000F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9D30", Offset = "0x8B9D30")]
			[SerializeField]
			private BuffObject[] buffs;

			[Token(Token = "0x6001173")]
			[Address(RVA = "0xFFEB8C", Offset = "0xFFEB8C", VA = "0xFFEB8C")]
			public BuffObject[] GetBuffs()
			{
				return null;
			}

			[Token(Token = "0x6001174")]
			[Address(RVA = "0xFFEB94", Offset = "0xFFEB94", VA = "0xFFEB94")]
			public UpgradeLevel()
			{
			}
		}

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9C68", Offset = "0x8B9C68")]
		private UpgradeLevel[] upgradeLevels;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9CB4", Offset = "0x8B9CB4")]
		private UnityEvent onBeforeApply;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private UnityEvent onAfterApply;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private UnityEvent onBeforeClear;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private UnityEvent onAfterClear;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<BuffBase> currentBuffObjs;

		[Token(Token = "0x17000337")]
		public override int Level
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x1147404", Offset = "0x1147404", VA = "0x1147404", Slot = "49")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x114740C", Offset = "0x114740C", VA = "0x114740C", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x17000338")]
		private BuffObject[] CurrentLevelBuffs
		{
			[Token(Token = "0x600116D")]
			[Address(RVA = "0x1147554", Offset = "0x1147554", VA = "0x1147554")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x11477D0", Offset = "0x11477D0", VA = "0x11477D0", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x114782C", Offset = "0x114782C", VA = "0x114782C", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x11475DC", Offset = "0x11475DC", VA = "0x11475DC")]
		private void AddBuffs(BuffObject[] buffsToAdd)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x1147488", Offset = "0x1147488", VA = "0x1147488")]
		private void ClearBuffs()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x1147880", Offset = "0x1147880", VA = "0x1147880")]
		public ShipAbilityPassiveBuffAssigner()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class ShipAbilityPassiveBuffGroupStartBuffs : ShipAbilityPassive
	{
		[Serializable]
		[Token(Token = "0x2000283")]
		public class UpgradeLevel
		{
			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9DD8", Offset = "0x8B9DD8")]
			public BuffObject[] buffs;

			[Token(Token = "0x600117E")]
			[Address(RVA = "0xFFEB9C", Offset = "0xFFEB9C", VA = "0xFFEB9C")]
			public UpgradeLevel()
			{
			}
		}

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9D7C", Offset = "0x8B9D7C")]
		[SerializeField]
		private string buffGroup;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private UpgradeLevel[] upgradeLevels;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<BuffObject> currentBuffObjs;

		[Token(Token = "0x17000339")]
		public override int Level
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0x1147898", Offset = "0x1147898", VA = "0x1147898", Slot = "49")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x11478A0", Offset = "0x11478A0", VA = "0x11478A0", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x1700033A")]
		private BuffObject[] CurrentLevelBuffs
		{
			[Token(Token = "0x6001177")]
			[Address(RVA = "0x1147A7C", Offset = "0x1147A7C", VA = "0x1147A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x1147D24", Offset = "0x1147D24", VA = "0x1147D24", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x1147D54", Offset = "0x1147D54", VA = "0x1147D54", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x1147D84", Offset = "0x1147D84", VA = "0x1147D84", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x1147B04", Offset = "0x1147B04", VA = "0x1147B04")]
		private void AddBuffs(BuffObject[] buffsToAdd)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x11478EC", Offset = "0x11478EC", VA = "0x11478EC")]
		private void ClearBuffs()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x1147DAC", Offset = "0x1147DAC", VA = "0x1147DAC")]
		public ShipAbilityPassiveBuffGroupStartBuffs()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class ShipAbilityPassiveCloneShip : ShipAbilityPassive, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Token(Token = "0x2000285")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A919C", Offset = "0x8A919C")]
		private sealed class <InitialDelay>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityPassiveCloneShip <>4__this;

			[Token(Token = "0x1700033B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600118D")]
				[Address(RVA = "0xFFED00", Offset = "0xFFED00", VA = "0xFFED00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600118F")]
				[Address(RVA = "0xFFED48", Offset = "0xFFED48", VA = "0xFFED48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600118A")]
			[Address(RVA = "0xFFEBA4", Offset = "0xFFEBA4", VA = "0xFFEBA4")]
			[DebuggerHidden]
			public <InitialDelay>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600118B")]
			[Address(RVA = "0xFFEBD0", Offset = "0xFFEBD0", VA = "0xFFEBD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600118C")]
			[Address(RVA = "0xFFEBD4", Offset = "0xFFEBD4", VA = "0xFFEBD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600118E")]
			[Address(RVA = "0xFFED08", Offset = "0xFFED08", VA = "0xFFED08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private AssetReferenceGameObject cloneShipPrefab;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private int clonesSpawnAmount;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9E30", Offset = "0x8B9E30")]
		[SerializeField]
		private Vector2 cloneInitialDelay;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9E7C", Offset = "0x8B9E7C")]
		[SerializeField]
		private float cloneMaxSpawnRadius;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9EC8", Offset = "0x8B9EC8")]
		private float collisionSphereCheckRadius;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9F14", Offset = "0x8B9F14")]
		[SerializeField]
		private int collisionCheckMaxTries;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private readonly List<SpaceShip> spawnedClones;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private AddressableAssetDependency<GameObject> cloneShipAsset;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Coroutine delayCoroutine;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly RaycastHit[] RESULT;

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x1147DC4", Offset = "0x1147DC4", VA = "0x1147DC4")]
		private bool IsPositionOccupied(Vector3 origin)
		{
			return default(bool);
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x1147EE4", Offset = "0x1147EE4", VA = "0x1147EE4", Slot = "57")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x1147F58", Offset = "0x1147F58", VA = "0x1147F58", Slot = "58")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x1147FBC", Offset = "0x1147FBC", VA = "0x1147FBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x1148078", Offset = "0x1148078", VA = "0x1148078")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0640", Offset = "0x8D0640")]
		private IEnumerator InitialDelay()
		{
			return null;
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x11480F0", Offset = "0x11480F0", VA = "0x11480F0")]
		private void SpawnCloneShips()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x11484E4", Offset = "0x11484E4", VA = "0x11484E4")]
		private Vector3 TryGetPositionInSphere()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x11485EC", Offset = "0x11485EC", VA = "0x11485EC")]
		private void OnOwnerHealthChange(float previousValue, float newValue)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x11487D0", Offset = "0x11487D0", VA = "0x11487D0")]
		private void OnCloneHealthChange(float previousValue, float newValue)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x1148970", Offset = "0x1148970", VA = "0x1148970")]
		public ShipAbilityPassiveCloneShip()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class ShipAbilityPassiveCompanionSpawner : ShipAbilityPassive, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Serializable]
		[Token(Token = "0x2000287")]
		public class UpgradeLevel
		{
			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetReferenceGameObject companionPrefab;

			[Token(Token = "0x600119D")]
			[Address(RVA = "0xFFEE38", Offset = "0xFFEE38", VA = "0xFFEE38")]
			public UpgradeLevel()
			{
			}
		}

		[Token(Token = "0x2000288")]
		private struct UpgradeLevelAsset
		{
			[Token(Token = "0x4000F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AddressableAssetDependency<GameObject> companionAsset;

			[Token(Token = "0x1700033F")]
			public string Name
			{
				[Token(Token = "0x600119E")]
				[Address(RVA = "0xFFEE40", Offset = "0xFFEE40", VA = "0xFFEE40")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600119F")]
			[Address(RVA = "0xFFEE68", Offset = "0xFFEE68", VA = "0xFFEE68")]
			public UpgradeLevelAsset(AddressableAssetDependency<GameObject> companionAsset)
			{
			}
		}

		[Token(Token = "0x2000289")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A91AC", Offset = "0x8A91AC")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShipAbilityPassiveCompanionSpawner <>4__this;

			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onAfterDespawn;

			[Token(Token = "0x60011A0")]
			[Address(RVA = "0xFFED50", Offset = "0xFFED50", VA = "0xFFED50")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xFFED58", Offset = "0xFFED58", VA = "0xFFED58")]
			internal void <DespawnCompanion>b__0(SpaceEntity se)
			{
			}
		}

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9F60", Offset = "0x8B9F60")]
		[SerializeField]
		private List<UpgradeLevel> upgradeLevels;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9FAC", Offset = "0x8B9FAC")]
		[SerializeField]
		private float spawnSphereRadius;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private UpgradeLevelAsset[] upgradeLevelAssets;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private SpaceShip owner;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private AiSpaceShip companion;

		[Token(Token = "0x1700033D")]
		private UpgradeLevelAsset CurrentLevel
		{
			[Token(Token = "0x6001190")]
			[Address(RVA = "0x1148A84", Offset = "0x1148A84", VA = "0x1148A84")]
			get
			{
				return default(UpgradeLevelAsset);
			}
		}

		[Token(Token = "0x1700033E")]
		private Vector3 OutOfSightPosition
		{
			[Token(Token = "0x6001191")]
			[Address(RVA = "0x1148AD8", Offset = "0x1148AD8", VA = "0x1148AD8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x1148B04", Offset = "0x1148B04", VA = "0x1148B04", Slot = "57")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x1148CF4", Offset = "0x1148CF4", VA = "0x1148CF4", Slot = "58")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x1148DC0", Offset = "0x1148DC0", VA = "0x1148DC0", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x1148EB8", Offset = "0x1148EB8", VA = "0x1148EB8", Slot = "54")]
		public override void Upgrade()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x114914C", Offset = "0x114914C", VA = "0x114914C", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x1149258", Offset = "0x1149258", VA = "0x1149258", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x1149374", Offset = "0x1149374", VA = "0x1149374")]
		private void OnSectorLoaded(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x1149714", Offset = "0x1149714", VA = "0x1149714")]
		private void OnStartLoad(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x1149378", Offset = "0x1149378", VA = "0x1149378")]
		private void SpawnCompanion()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x1148F3C", Offset = "0x1148F3C", VA = "0x1148F3C")]
		private void DespawnCompanion([System.Runtime.InteropServices.Optional] Action onAfterDespawn)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x114971C", Offset = "0x114971C", VA = "0x114971C")]
		public ShipAbilityPassiveCompanionSpawner()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class ShipAbilityPassiveCrystalClone : ShipAbilityPassive, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Serializable]
		[Token(Token = "0x200028B")]
		public struct CloneShipPrefab
		{
			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AssetReferenceGameObject cloneShipPrefab;

			[Token(Token = "0x4000F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int selectionWeight;

			[NonSerialized]
			[Token(Token = "0x4000F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AddressableAssetDependency<GameObject> cloneShipAsset;
		}

		[Token(Token = "0x200028C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A91BC", Offset = "0x8A91BC")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4000F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShipAbilityPassiveCrystalClone <>4__this;

			[Token(Token = "0x4000F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject effectPrefab;

			[Token(Token = "0x60011B2")]
			[Address(RVA = "0xFFEE70", Offset = "0xFFEE70", VA = "0xFFEE70")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60011B3")]
			[Address(RVA = "0xFFEE78", Offset = "0xFFEE78", VA = "0xFFEE78")]
			internal void <CrystalPhase>b__0(BuffBase p)
			{
			}
		}

		[Token(Token = "0x200028D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A91CC", Offset = "0x8A91CC")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4000F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BuffBase cloneSpawnBuffBase;

			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ShipAbilityPassiveCrystalClone <>4__this;

			[Token(Token = "0x60011B4")]
			[Address(RVA = "0xFFEE9C", Offset = "0xFFEE9C", VA = "0xFFEE9C")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60011B5")]
			[Address(RVA = "0xFFEEA4", Offset = "0xFFEEA4", VA = "0xFFEEA4")]
			internal void <SpawnCloneShips>b__0(SpaceObject p)
			{
			}
		}

		[Token(Token = "0x200028E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A91DC", Offset = "0x8A91DC")]
		private sealed class <>c__DisplayClass28_1
		{
			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject effectPrefab;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass28_0 CS$<>8__locals1;

			[Token(Token = "0x60011B6")]
			[Address(RVA = "0xFFEF1C", Offset = "0xFFEF1C", VA = "0xFFEF1C")]
			public <>c__DisplayClass28_1()
			{
			}

			[Token(Token = "0x60011B7")]
			[Address(RVA = "0xFFEF24", Offset = "0xFFEF24", VA = "0xFFEF24")]
			internal void <SpawnCloneShips>b__1(BuffBase p)
			{
			}
		}

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private CloneShipPrefab[] cloneShips;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA008", Offset = "0x8BA008")]
		private Vector2 clonesSpawnAmount;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private BuffObject cloneSpawnBuff;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private BuffObject mainShipDespawnBuff;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA074", Offset = "0x8BA074")]
		[SerializeField]
		private Vector2 cloneInitialDelay;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA0C0", Offset = "0x8BA0C0")]
		[SerializeField]
		private Vector2 forceRange;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA10C", Offset = "0x8BA10C")]
		[SerializeField]
		private float cloneMaxSpawnRadius;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA158", Offset = "0x8BA158")]
		private float collisionSphereCheckRadius;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA1A4", Offset = "0x8BA1A4")]
		private int collisionCheckMaxTries;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private AssetReferenceGameObject crystalExplosionPrefab;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA200", Offset = "0x8BA200")]
		private SfxTrigger crystalSpawnSfx;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private SfxTrigger crystalCloneSpawnSfx;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private SfxTrigger cloneCrystalShatterSfx;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private AddressableAssetDependency<GameObject> crystalExplosionAsset;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float crystalPhaseTimer;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float currentCrystalPhaseTimer;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private BuffBase buffBase;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool isOwnerDead;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly RaycastHit[] RESULT;

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x114973C", Offset = "0x114973C", VA = "0x114973C")]
		private bool IsPositionOccupied(Vector3 origin)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x114985C", Offset = "0x114985C", VA = "0x114985C", Slot = "57")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x1149940", Offset = "0x1149940", VA = "0x1149940", Slot = "58")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1149A04", Offset = "0x1149A04", VA = "0x1149A04", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x1149A90", Offset = "0x1149A90", VA = "0x1149A90")]
		private void OnOwnerDeath(SpaceObject spaceObject)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x1149BE8", Offset = "0x1149BE8", VA = "0x1149BE8", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x1149CF4", Offset = "0x1149CF4", VA = "0x1149CF4")]
		protected void Update()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x1149D8C", Offset = "0x1149D8C", VA = "0x1149D8C")]
		private void CrystalPhase()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x1149FE0", Offset = "0x1149FE0", VA = "0x1149FE0")]
		private void SpawnCloneShips()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x114A6B4", Offset = "0x114A6B4", VA = "0x114A6B4")]
		private Vector3 TryGetPositionInSphere()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x114A5E8", Offset = "0x114A5E8", VA = "0x114A5E8")]
		public int GetRandomWeightSelectionIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x114A7BC", Offset = "0x114A7BC", VA = "0x114A7BC")]
		private void CrystalPhaseEnd(BuffBase cloneSpawnBuffBase, GameObject effectPrefab)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x114A91C", Offset = "0x114A91C", VA = "0x114A91C")]
		private static void CloneSpawnBuffBaseEnd(BuffBase cloneSpawnBuffBase, GameObject effectPrefab, SfxTrigger sfxTrigger)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x114AC48", Offset = "0x114AC48", VA = "0x114AC48")]
		private static void OnCloneCrystalDestroyed(SpaceObject spaceObject, BuffBase cloneSpawnBuffBase)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x114AC64", Offset = "0x114AC64", VA = "0x114AC64")]
		public ShipAbilityPassiveCrystalClone()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class ShipAbilityPassiveDroneSpawner : ShipAbilityPassive, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Serializable]
		[Token(Token = "0x2000290")]
		public class TrackPoint
		{
			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform parent;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform trackPoint;

			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xFFF0C0", Offset = "0xFFF0C0", VA = "0xFFF0C0")]
			public TrackPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000291")]
		public struct DronePrefab
		{
			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorTag playerShipTag;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetReferenceGameObject dronePrefab;
		}

		[Serializable]
		[Token(Token = "0x2000292")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A91EC", Offset = "0x8A91EC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SpaceEntity> <>9__24_0;

			[Token(Token = "0x60011CA")]
			[Address(RVA = "0xFFF01C", Offset = "0xFFF01C", VA = "0xFFF01C")]
			public <>c()
			{
			}

			[Token(Token = "0x60011CB")]
			[Address(RVA = "0xFFF024", Offset = "0xFFF024", VA = "0xFFF024")]
			internal void <TryDespawnDrone>b__24_0(SpaceEntity se)
			{
			}
		}

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private AssetReferenceGameObject defaultDronePrefab;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private List<DronePrefab> shipDronePrefabs;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private TrackPoint[] trackPoints;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private int[] dronesPerLevel;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<ShipDrone> drones;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private AddressableAssetDependency<GameObject> droneAssetDependency;

		[Token(Token = "0x17000340")]
		private int TargetDroneCount
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x114AD08", Offset = "0x114AD08", VA = "0x114AD08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000341")]
		private static Vector3 OutOfSightPosition
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x114AD5C", Offset = "0x114AD5C", VA = "0x114AD5C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000342")]
		public override int Level
		{
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x114AD88", Offset = "0x114AD88", VA = "0x114AD88", Slot = "49")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x114AD90", Offset = "0x114AD90", VA = "0x114AD90", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x114AEF8", Offset = "0x114AEF8", VA = "0x114AEF8", Slot = "57")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x114B1EC", Offset = "0x114B1EC", VA = "0x114B1EC", Slot = "58")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x114B454", Offset = "0x114B454", VA = "0x114B454", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x114B684", Offset = "0x114B684", VA = "0x114B684", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x114B780", Offset = "0x114B780", VA = "0x114B780", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x114BB24", Offset = "0x114BB24", VA = "0x114BB24")]
		private void OnSectorLoaded(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x114BB80", Offset = "0x114BB80", VA = "0x114BB80")]
		private void OnStartLoad(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x114ADE8", Offset = "0x114ADE8", VA = "0x114ADE8")]
		private void AdaptToTargetDroneCount()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x114BCB0", Offset = "0x114BCB0", VA = "0x114BCB0")]
		private bool TrySpawnDroneForTrackpoint(TrackPoint trackPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x114B8F8", Offset = "0x114B8F8", VA = "0x114B8F8")]
		private bool TryDespawnDrone(ShipDrone drone)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x114BC2C", Offset = "0x114BC2C", VA = "0x114BC2C")]
		private TrackPoint GetFirstFreeTrackPoint()
		{
			return null;
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x114BF70", Offset = "0x114BF70", VA = "0x114BF70")]
		public ShipAbilityPassiveDroneSpawner()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class ShipAbilityPassiveOnComponentChange : ShipAbilityPassive
	{
		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private UnityEvent<ShipAbilityPassive> onPassiveAbilityAdded;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private UnityEvent<ShipAbilityPassive> onPassiveAbilityRemoved;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private UnityEvent<ShipAbilityPassive> onPassiveAbilityOrder;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private UnityEvent<ShipAbilityPassive> onPassiveAbilityAny;

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x114C004", Offset = "0x114C004", VA = "0x114C004", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x114C10C", Offset = "0x114C10C", VA = "0x114C10C", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x114C1C4", Offset = "0x114C1C4", VA = "0x114C1C4", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x114C280", Offset = "0x114C280", VA = "0x114C280")]
		private void OnPassiveAbilitiesChanged(SpaceShip.AbilityChangeType type, ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x114C334", Offset = "0x114C334", VA = "0x114C334")]
		public ShipAbilityPassiveOnComponentChange()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class ShipAbilityPassiveOnDamageTaken : ShipAbilityPassive
	{
		[Serializable]
		[Token(Token = "0x2000295")]
		public class UpgradeLevel
		{
			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float triggerChance;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent<SpaceObject, IDamagable.DamageInfo> onDamageTaken;

			[Token(Token = "0x60011D7")]
			[Address(RVA = "0xFFF0C8", Offset = "0xFFF0C8", VA = "0xFFF0C8")]
			public UpgradeLevel()
			{
			}
		}

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private UpgradeLevel[] upgradeLevels;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private bool triggerChanceModifiable;

		[Token(Token = "0x17000343")]
		public UpgradeLevel CurrentLevel
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x114C34C", Offset = "0x114C34C", VA = "0x114C34C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x114C3A0", Offset = "0x114C3A0", VA = "0x114C3A0", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x114C4C4", Offset = "0x114C4C4", VA = "0x114C4C4", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x114C5EC", Offset = "0x114C5EC", VA = "0x114C5EC", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x114C708", Offset = "0x114C708", VA = "0x114C708")]
		private void OnDamageTaken(SpaceObject spaceObject, IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x114C83C", Offset = "0x114C83C", VA = "0x114C83C")]
		public ShipAbilityPassiveOnDamageTaken()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class ShipAbilityPassiveOnHostileDestroyed : ShipAbilityPassive
	{
		[Serializable]
		[Token(Token = "0x2000297")]
		public class UpgradeLevel
		{
			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float triggerChance;

			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent onHostileDestroyed;

			[Token(Token = "0x60011DE")]
			[Address(RVA = "0xFFF0D0", Offset = "0xFFF0D0", VA = "0xFFF0D0")]
			public UpgradeLevel()
			{
			}
		}

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private UpgradeLevel[] upgradeLevels;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private bool triggerChanceModifiable;

		[Token(Token = "0x17000344")]
		public UpgradeLevel CurrentLevel
		{
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x114C858", Offset = "0x114C858", VA = "0x114C858")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x114C8AC", Offset = "0x114C8AC", VA = "0x114C8AC", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x114C974", Offset = "0x114C974", VA = "0x114C974", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x114CA9C", Offset = "0x114CA9C", VA = "0x114CA9C", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x114CBB8", Offset = "0x114CBB8", VA = "0x114CBB8")]
		private void OnSpaceObjectDeath(SpaceObject spaceObject, IDamagable cause)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x114CDB0", Offset = "0x114CDB0", VA = "0x114CDB0")]
		public ShipAbilityPassiveOnHostileDestroyed()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class ShipAbilityPassiveOnMissileFire : ShipAbilityPassive
	{
		[Serializable]
		[Token(Token = "0x2000299")]
		public class UpgradeLevel
		{
			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float triggerChance;

			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent<ShipAbilityActiveCannon> onMissileFired;

			[Token(Token = "0x60011E5")]
			[Address(RVA = "0xFFF0D8", Offset = "0xFFF0D8", VA = "0xFFF0D8")]
			public UpgradeLevel()
			{
			}
		}

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private UpgradeLevel[] upgradeLevels;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private bool triggerChanceModifiable;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ShipAbilityActiveCannon abilityActiveCannon;

		[Token(Token = "0x17000345")]
		public UpgradeLevel CurrentLevel
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x114CDCC", Offset = "0x114CDCC", VA = "0x114CDCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x114CE20", Offset = "0x114CE20", VA = "0x114CE20", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x114CF14", Offset = "0x114CF14", VA = "0x114CF14", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x114D3B4", Offset = "0x114D3B4", VA = "0x114D3B4", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x114D4A0", Offset = "0x114D4A0", VA = "0x114D4A0")]
		private void OnMissileFire()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x114D658", Offset = "0x114D658", VA = "0x114D658")]
		public ShipAbilityPassiveOnMissileFire()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class ShipAbilityPassiveSatellites : ShipAbilityPassive
	{
		[Token(Token = "0x200029B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A91FC", Offset = "0x8A91FC")]
		private sealed class <DelayedSatelliteSpawn>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityPassiveSatellites <>4__this;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <count>5__2;

			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<int> <previous>5__3;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3[] <positions>5__4;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__5;

			[Token(Token = "0x17000347")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011F5")]
				[Address(RVA = "0xFFF814", Offset = "0xFFF814", VA = "0xFFF814", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000348")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011F7")]
				[Address(RVA = "0xFFF85C", Offset = "0xFFF85C", VA = "0xFFF85C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xFFF0E0", Offset = "0xFFF0E0", VA = "0xFFF0E0")]
			[DebuggerHidden]
			public <DelayedSatelliteSpawn>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60011F3")]
			[Address(RVA = "0xFFF10C", Offset = "0xFFF10C", VA = "0xFFF10C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011F4")]
			[Address(RVA = "0xFFF110", Offset = "0xFFF110", VA = "0xFFF110", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xFFF81C", Offset = "0xFFF81C", VA = "0xFFF81C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA34C", Offset = "0x8BA34C")]
		[SerializeField]
		private GameObject[] satellitePrefabs;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BA398", Offset = "0x8BA398")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA398", Offset = "0x8BA398")]
		private int startingRank;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private float satelliteSpawnDelay;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA40C", Offset = "0x8BA40C")]
		[SerializeField]
		private bool avoidReuse;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private float extraOrbitDistance;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private float orbitSpeed;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		private Vector2Int satelliteCountSpan;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private int satelliteCountUpgradeThreshold;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA498", Offset = "0x8BA498")]
		[SerializeField]
		private BuffObject[] buffsFromSatellites;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BA4E4", Offset = "0x8BA4E4")]
		[SerializeField]
		private float hullHealPercentage;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BA524", Offset = "0x8BA524")]
		private float shieldHealPercentage;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<ShipSatellite> satellites;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<BuffBase> assignedBuffs;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Transform satelliteParent;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SatelliteVisuals satelliteVisualsOwner;

		[Token(Token = "0x17000346")]
		protected override bool EnableOnGameStart
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x114D674", Offset = "0x114D674", VA = "0x114D674", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x114D67C", Offset = "0x114D67C", VA = "0x114D67C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x114D680", Offset = "0x114D680", VA = "0x114D680")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x114D6B0", Offset = "0x114D6B0", VA = "0x114D6B0", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x114D838", Offset = "0x114D838", VA = "0x114D838", Slot = "30")]
		protected override void OnGameStart()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x114D870", Offset = "0x114D870", VA = "0x114D870")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D06F0", Offset = "0x8D06F0")]
		private IEnumerator DelayedSatelliteSpawn()
		{
			return null;
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x114D8E8", Offset = "0x114D8E8", VA = "0x114D8E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x114D9EC", Offset = "0x114D9EC", VA = "0x114D9EC", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x114DB6C", Offset = "0x114DB6C", VA = "0x114DB6C")]
		private void RemoveBuffs()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x114DC38", Offset = "0x114DC38", VA = "0x114DC38")]
		public void OnSatelliteDeath()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x114E0E0", Offset = "0x114E0E0", VA = "0x114E0E0")]
		private Vector3[] GetLocalTrackpointPositions(int count, int aliveCount, bool forAll)
		{
			return null;
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x114E3F0", Offset = "0x114E3F0", VA = "0x114E3F0")]
		public ShipAbilityPassiveSatellites()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class ShipAbilityPassiveSectorCountdown : ShipAbilityPassive
	{
		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private int sectorsCount;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA574", Offset = "0x8BA574")]
		private UnityEvent onSectorCountdownCompleted;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] ReusableLevelBonusDescriptionsArray;

		[Token(Token = "0x17000349")]
		public override string[] LevelBonusDescriptions
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x114E4AC", Offset = "0x114E4AC", VA = "0x114E4AC", Slot = "51")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x114E588", Offset = "0x114E588", VA = "0x114E588", Slot = "55")]
		public override string GetState()
		{
			return null;
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x114E594", Offset = "0x114E594", VA = "0x114E594", Slot = "56")]
		public override void SetState(string state)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x114E5D4", Offset = "0x114E5D4", VA = "0x114E5D4", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x114E694", Offset = "0x114E694", VA = "0x114E694", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x114E758", Offset = "0x114E758", VA = "0x114E758")]
		private void OnSectorLoaded(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x114E780", Offset = "0x114E780", VA = "0x114E780")]
		public ShipAbilityPassiveSectorCountdown()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public interface IShipAbilityPassiveSectorTags
	{
		[Token(Token = "0x1700034A")]
		IReadOnlyList<SectorTag> SectorTags
		{
			[Token(Token = "0x6001200")]
			get;
		}
	}
	[Token(Token = "0x200029E")]
	public class ShipAbilityPassiveSectorTags : ShipAbilityPassive, IShipAbilityPassiveSectorTags
	{
		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private SectorTag[] sectorTags;

		[Token(Token = "0x1700034B")]
		public IReadOnlyList<SectorTag> SectorTags
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0x114E80C", Offset = "0x114E80C", VA = "0x114E80C", Slot = "57")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x114E814", Offset = "0x114E814", VA = "0x114E814")]
		public ShipAbilityPassiveSectorTags()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class ShipAbilityPassiveSectorTagsCompanion : MonoBehaviour, IShipAbilityPassiveSectorTags
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SectorTag[] sectorTags;

		[Token(Token = "0x1700034C")]
		public IReadOnlyList<SectorTag> SectorTags
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0x114E82C", Offset = "0x114E82C", VA = "0x114E82C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x114E834", Offset = "0x114E834", VA = "0x114E834")]
		public ShipAbilityPassiveSectorTagsCompanion()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class ShipAbilityPassiveShipSplit : ShipAbilityPassive, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Token(Token = "0x20002A1")]
		private class SplitSpaceObject
		{
			[Token(Token = "0x4000FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AiSpaceShip ship;

			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AsyncFlag shipInvulnerable;

			[Token(Token = "0x600120F")]
			[Address(RVA = "0x10000D0", Offset = "0x10000D0", VA = "0x10000D0")]
			public SplitSpaceObject(AiSpaceShip ship)
			{
			}

			[Token(Token = "0x6001210")]
			[Address(RVA = "0x1000114", Offset = "0x1000114", VA = "0x1000114")]
			public void SetShipEnabled(bool isActive)
			{
			}
		}

		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A920C", Offset = "0x8A920C")]
		private sealed class <AddSplitShipForce>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityPassiveShipSplit <>4__this;

			[Token(Token = "0x1700034D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001214")]
				[Address(RVA = "0x1000080", Offset = "0x1000080", VA = "0x1000080", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001216")]
				[Address(RVA = "0x10000C8", Offset = "0x10000C8", VA = "0x10000C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001211")]
			[Address(RVA = "0xFFF864", Offset = "0xFFF864", VA = "0xFFF864")]
			[DebuggerHidden]
			public <AddSplitShipForce>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001212")]
			[Address(RVA = "0xFFF890", Offset = "0xFFF890", VA = "0xFFF890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001213")]
			[Address(RVA = "0xFFF894", Offset = "0xFFF894", VA = "0xFFF894", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001215")]
			[Address(RVA = "0x1000088", Offset = "0x1000088", VA = "0x1000088", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA5E0", Offset = "0x8BA5E0")]
		[SerializeField]
		private AssetReferenceGameObject splitShipLeftPrefab;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private AssetReferenceGameObject splitShipRightPrefab;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private AssetReferenceGameObject reconstructCenterPrefab;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AddressableAssetDependency<GameObject> splitShipLeftAsset;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private AddressableAssetDependency<GameObject> splitShipRightAsset;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private AddressableAssetDependency<GameObject> reconstructCenterAsset;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA64C", Offset = "0x8BA64C")]
		private ShipAbilityActive lastShipStandingAbility;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA698", Offset = "0x8BA698")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA698", Offset = "0x8BA698")]
		[SerializeField]
		private float spawnDistance;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA708", Offset = "0x8BA708")]
		[SerializeField]
		private float reconstructForce;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA754", Offset = "0x8BA754")]
		private float reconstructForceRate;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA7A0", Offset = "0x8BA7A0")]
		private float reconstructDistance;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BA7EC", Offset = "0x8BA7EC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA7EC", Offset = "0x8BA7EC")]
		private float shieldRechargeValue;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private SectorTag onDeathTag;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA860", Offset = "0x8BA860")]
		[SerializeField]
		private UnityEvent onSplit;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private UnityEvent onReconstruct;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private UnityEvent onSplitShipDestroyed;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA8CC", Offset = "0x8BA8CC")]
		[SerializeField]
		private SfxTrigger splitShipSfxTrigger;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private SplitSpaceObject ownerSpaceObject;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private List<SplitSpaceObject> splitSpaceObjects;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private IDamagable ownerDamagable;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private GameObject reconstructCenterObject;

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x114E83C", Offset = "0x114E83C", VA = "0x114E83C")]
		private Vector3 GetSpawnPosition(Vector3 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x114E8AC", Offset = "0x114E8AC", VA = "0x114E8AC")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x114E9D4", Offset = "0x114E9D4", VA = "0x114E9D4")]
		private void OnShieldChange(float previousValue, float newValue)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x114EA00", Offset = "0x114EA00", VA = "0x114EA00")]
		private void SplitShip()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x114F468", Offset = "0x114F468", VA = "0x114F468")]
		private void ReconStructShip()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x114F3F0", Offset = "0x114F3F0", VA = "0x114F3F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D07A0", Offset = "0x8D07A0")]
		private IEnumerator AddSplitShipForce()
		{
			return null;
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x114F79C", Offset = "0x114F79C", VA = "0x114F79C")]
		private void OnSplitShipDestroyed()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x114FB04", Offset = "0x114FB04", VA = "0x114FB04", Slot = "57")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x114FBB8", Offset = "0x114FBB8", VA = "0x114FBB8", Slot = "58")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x114FC3C", Offset = "0x114FC3C", VA = "0x114FC3C")]
		public ShipAbilityPassiveShipSplit()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public abstract class ShipAbilityPassiveStartAbilitiesBase : ShipAbilityPassive
	{
		[Token(Token = "0x6001217")]
		public abstract void AddStartAbilities(List<RunManager.StartAbilityPassive> startAbilities);

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xF3B8DC", Offset = "0xF3B8DC", VA = "0xF3B8DC")]
		protected ShipAbilityPassiveStartAbilitiesBase()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class ShipAbilityPassiveStartAbilitiesRandom : ShipAbilityPassiveStartAbilitiesBase
	{
		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA918", Offset = "0x8BA918")]
		private bool includeAbilities;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[SerializeField]
		private bool includeDefects;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private SectorTag passiveAbilityCategory;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private int passiveAbilityAmount;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA994", Offset = "0x8BA994")]
		private int passiveAbilityLevel;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xF3B8E4", Offset = "0xF3B8E4", VA = "0xF3B8E4", Slot = "57")]
		public override void AddStartAbilities(List<RunManager.StartAbilityPassive> startAbilities)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xF3C178", Offset = "0xF3C178", VA = "0xF3C178")]
		private static int GetAbilitySelectionWeight(SectorAsset<ShipAbilityPassive> ability)
		{
			return default(int);
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xF3C180", Offset = "0xF3C180", VA = "0xF3C180")]
		private static bool GetAbilitySelectionValid(SectorAsset<ShipAbilityPassive> ability)
		{
			return default(bool);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xF3C18C", Offset = "0xF3C18C", VA = "0xF3C18C")]
		public ShipAbilityPassiveStartAbilitiesRandom()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A921C", Offset = "0x8A921C")]
	public class ShipAbilityPassiveThreat : MonoBehaviour
	{
		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int order;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int unlockLevel;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ShipAbilityPassive ability;

		[Token(Token = "0x1700034F")]
		public int Order
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0xF3C214", Offset = "0xF3C214", VA = "0xF3C214")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000350")]
		public int UnlockLevel
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0xF3C21C", Offset = "0xF3C21C", VA = "0xF3C21C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000351")]
		public ShipAbilityPassive Ability
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0xF3C224", Offset = "0xF3C224", VA = "0xF3C224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xF3C22C", Offset = "0xF3C22C", VA = "0xF3C22C")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xF3C288", Offset = "0xF3C288", VA = "0xF3C288")]
		public static bool IsThreat(ShipAbilityPassive ability)
		{
			return default(bool);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xF3C2B0", Offset = "0xF3C2B0", VA = "0xF3C2B0")]
		public static bool IsThreat(ShipAbilityPassive ability, out ShipAbilityPassiveThreat threat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xF3C314", Offset = "0xF3C314", VA = "0xF3C314")]
		public ShipAbilityPassiveThreat()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class ShipAbilityPassiveThreats : ShipAbilityPassive, IAddressableAssetDependency
	{
		[Serializable]
		[Token(Token = "0x20002A7")]
		private struct ThreatStates
		{
			[Serializable]
			[Token(Token = "0x20002A8")]
			public struct State
			{
				[Token(Token = "0x4000FF3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string abilityTag;

				[Token(Token = "0x4000FF4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public string state;
			}

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<State> states;
		}

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BAA10", Offset = "0x8BAA10")]
		[SerializeField]
		private Sprite[] slotableIconThreatLevels;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<ShipAbilityPassive> threatAbilities;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<BuffBase> bonusBuffs;

		[Token(Token = "0x17000352")]
		public override Sprite SlotableIcon
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0xF3C31C", Offset = "0xF3C31C", VA = "0xF3C31C", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xF3C514", Offset = "0xF3C514", VA = "0xF3C514", Slot = "57")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xF3C5D0", Offset = "0xF3C5D0", VA = "0xF3C5D0", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xF3CF54", Offset = "0xF3CF54", VA = "0xF3CF54", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xF3D1E0", Offset = "0xF3D1E0", VA = "0xF3D1E0")]
		public bool HasThreat(ShipAbilityPassiveThreat threat)
		{
			return default(bool);
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xF3D204", Offset = "0xF3D204", VA = "0xF3D204")]
		public bool HasThreat(SectorTag abilityTag)
		{
			return default(bool);
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xF3D3A0", Offset = "0xF3D3A0", VA = "0xF3D3A0", Slot = "55")]
		public override string GetState()
		{
			return null;
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xF3D708", Offset = "0xF3D708", VA = "0xF3D708", Slot = "56")]
		public override void SetState(string state)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xF3DB4C", Offset = "0xF3DB4C", VA = "0xF3DB4C")]
		public ShipAbilityPassiveThreats()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class ShipAblilityPassiveHullHealer : ShipAbilityPassive
	{
		[Token(Token = "0x20002AA")]
		public enum HealMode
		{
			[Token(Token = "0x4000FFB")]
			HealAlways,
			[Token(Token = "0x4000FFC")]
			HealUpTo
		}

		[Serializable]
		[Token(Token = "0x20002AB")]
		public struct UpgradeLevel
		{
			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float healPercentage;
		}

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private List<UpgradeLevel> upgradeLevels;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private HealMode healMode;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private GameObject repairVisual;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private UnityEvent onHullHeal;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private SpaceShip owner;

		[Token(Token = "0x17000353")]
		public UpgradeLevel CurrentLevel
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0xF45364", Offset = "0xF45364", VA = "0xF45364")]
			get
			{
				return default(UpgradeLevel);
			}
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xF453E4", Offset = "0xF453E4", VA = "0xF453E4", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xF45498", Offset = "0xF45498", VA = "0xF45498", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xF458A0", Offset = "0xF458A0", VA = "0xF458A0", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xF45960", Offset = "0xF45960", VA = "0xF45960")]
		private void OnSectorLoaded(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xF45964", Offset = "0xF45964", VA = "0xF45964")]
		public void HealHull()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xF45B68", Offset = "0xF45B68", VA = "0xF45B68")]
		public ShipAblilityPassiveHullHealer()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class ShipAblilityPassiveResourceGenerator : ShipAbilityPassive
	{
		[Serializable]
		[Token(Token = "0x20002AD")]
		public struct ResourceDrop
		{
			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private PickupType pickupType;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			private Vector2Int amountRange;

			[Token(Token = "0x17000355")]
			public PickupType PickupType
			{
				[Token(Token = "0x600123E")]
				[Address(RVA = "0x1001600", Offset = "0x1001600", VA = "0x1001600")]
				get
				{
					return default(PickupType);
				}
			}

			[Token(Token = "0x17000356")]
			public int DropAmount
			{
				[Token(Token = "0x600123F")]
				[Address(RVA = "0x1001608", Offset = "0x1001608", VA = "0x1001608")]
				get
				{
					return default(int);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002AE")]
		public class UpgradeLevel
		{
			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ResourceDrop> resourceDrops;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int sectorsBetweenDrops;

			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float dropChance;

			[Token(Token = "0x6001240")]
			[Address(RVA = "0x1001618", Offset = "0x1001618", VA = "0x1001618")]
			public UpgradeLevel()
			{
			}
		}

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		public List<UpgradeLevel> upgradeLevels;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private bool dropChanceModifiable;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private float autoPickupDelay;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Vector2 spawnDistanceRange;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int sectorsSinceLastDrop;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private UnityEvent onPickupsSpawned;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private UnityEvent onAutoCollect;

		[Token(Token = "0x17000354")]
		public UpgradeLevel CurrentLevel
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xF45B70", Offset = "0xF45B70", VA = "0xF45B70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xF45BF0", Offset = "0xF45BF0", VA = "0xF45BF0", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xF45CA4", Offset = "0xF45CA4", VA = "0xF45CA4", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xF45D68", Offset = "0xF45D68", VA = "0xF45D68", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xF45E18", Offset = "0xF45E18", VA = "0xF45E18")]
		private void OnSectorLoaded(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xF45F1C", Offset = "0xF45F1C", VA = "0xF45F1C")]
		public void SpawnPickups()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xF462F8", Offset = "0xF462F8", VA = "0xF462F8")]
		public ShipAblilityPassiveResourceGenerator()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xF463AC", Offset = "0xF463AC", VA = "0xF463AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0850", Offset = "0x8D0850")]
		private void <SpawnPickups>b__15_0()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xF463C0", Offset = "0xF463C0", VA = "0xF463C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0860", Offset = "0x8D0860")]
		private void <SpawnPickups>b__15_1()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class ShipAblilityPassiveRevive : ShipAbilityPassive, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Serializable]
		[Token(Token = "0x20002B0")]
		public struct UpgradeLevel
		{
			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float restoreHealthPercentage;

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float restoreShieldPercentage;
		}

		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A927C", Offset = "0x8A927C")]
		private sealed class <ReviveRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAblilityPassiveRevive <>4__this;

			[Token(Token = "0x4001016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpaceObject ship;

			[Token(Token = "0x17000358")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600124D")]
				[Address(RVA = "0x1001958", Offset = "0x1001958", VA = "0x1001958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000359")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600124F")]
				[Address(RVA = "0x10019A0", Offset = "0x10019A0", VA = "0x10019A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600124A")]
			[Address(RVA = "0x1001628", Offset = "0x1001628", VA = "0x1001628")]
			[DebuggerHidden]
			public <ReviveRoutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600124B")]
			[Address(RVA = "0x1001654", Offset = "0x1001654", VA = "0x1001654", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600124C")]
			[Address(RVA = "0x1001658", Offset = "0x1001658", VA = "0x1001658", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600124E")]
			[Address(RVA = "0x1001960", Offset = "0x1001960", VA = "0x1001960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BAB1C", Offset = "0x8BAB1C")]
		private List<UpgradeLevel> upgradeLevels;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private int reviveCount;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private float reviveInvulnerableDuration;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BAB88", Offset = "0x8BAB88")]
		[SerializeField]
		private AssetReferenceGameObject reviveEffectPrefab;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool isReviveAction;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private AddressableAssetDependency<GameObject> reviveEffectAsset;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private AsyncFlag reviveInvulnerable;

		[Token(Token = "0x17000357")]
		public UpgradeLevel CurrentLevel
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xF463D4", Offset = "0xF463D4", VA = "0xF463D4")]
			get
			{
				return default(UpgradeLevel);
			}
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xF46454", Offset = "0xF46454", VA = "0xF46454", Slot = "57")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xF464C8", Offset = "0xF464C8", VA = "0xF464C8", Slot = "58")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xF4652C", Offset = "0xF4652C", VA = "0xF4652C", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xF465D8", Offset = "0xF465D8", VA = "0xF465D8", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xF466F0", Offset = "0xF466F0", VA = "0xF466F0", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xF46798", Offset = "0xF46798", VA = "0xF46798")]
		private void OnRevive(SpaceObject ship)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xF468B0", Offset = "0xF468B0", VA = "0xF468B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0870", Offset = "0x8D0870")]
		private IEnumerator ReviveRoutine(SpaceObject ship)
		{
			return null;
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xF46944", Offset = "0xF46944", VA = "0xF46944")]
		public ShipAblilityPassiveRevive()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class BlackHoleMissileExplodeEvents : MissileExplodeEvents
	{
		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A928C", Offset = "0x8A928C")]
		private sealed class <BlackHoleExplodeAfterTime>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BlackHoleMissileExplodeEvents <>4__this;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isEffective;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timer>5__2;

			[Token(Token = "0x1700035B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001261")]
				[Address(RVA = "0xC62CE8", Offset = "0xC62CE8", VA = "0xC62CE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001263")]
				[Address(RVA = "0xC62D30", Offset = "0xC62D30", VA = "0xC62D30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600125E")]
			[Address(RVA = "0xC628A0", Offset = "0xC628A0", VA = "0xC628A0")]
			[DebuggerHidden]
			public <BlackHoleExplodeAfterTime>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x600125F")]
			[Address(RVA = "0xC628CC", Offset = "0xC628CC", VA = "0xC628CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001260")]
			[Address(RVA = "0xC628D0", Offset = "0xC628D0", VA = "0xC628D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001262")]
			[Address(RVA = "0xC62CF0", Offset = "0xC62CF0", VA = "0xC62CF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int MAXIMUM_CONCURRENT_BLACK_HOLES;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BABD4", Offset = "0x8BABD4")]
		private float blackHoleTime;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float affectedRadius;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float basePullForce;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve pullForceCurve;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool friendlyFire;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BAC60", Offset = "0x8BAC60")]
		[SerializeField]
		private int maximumAffectedObjects;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BAC9C", Offset = "0x8BAC9C")]
		[SerializeField]
		private ShipAbilityProjectileMissile missile;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BACE8", Offset = "0x8BACE8")]
		[SerializeField]
		private UnityEvent onBlackHoleStart;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent onBlackHoleEnd;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BAD44", Offset = "0x8BAD44")]
		[SerializeField]
		private SfxTrigger blackHoleStartSfx;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SfxTrigger blackHoleLoopSfx;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float pullForceFactor;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float affectedRadiusInverse;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Collider[] physicsOverlapBuffer;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine blackHoleRoutine;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BADA0", Offset = "0x8BADA0")]
		private bool <CloseInstantly>k__BackingField;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<BlackHoleMissileExplodeEvents> ActiveBlackHoles;

		[Token(Token = "0x1700035A")]
		private bool CloseInstantly
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0xFDDB5C", Offset = "0xFDDB5C", VA = "0xFDDB5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0920", Offset = "0x8D0920")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xFDDB64", Offset = "0xFDDB64", VA = "0xFDDB64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0930", Offset = "0x8D0930")]
			set
			{
			}
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xFDDB70", Offset = "0xFDDB70", VA = "0xFDDB70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xFDDBC8", Offset = "0xFDDBC8", VA = "0xFDDBC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xFDDC7C", Offset = "0xFDDC7C", VA = "0xFDDC7C")]
		public void Setup()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xFDE020", Offset = "0xFDE020", VA = "0xFDE020", Slot = "4")]
		public override void OnExplode(ref bool isEffective)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xFDE10C", Offset = "0xFDE10C", VA = "0xFDE10C", Slot = "5")]
		public override void OnExplodeAtDestination(ref bool isEffective)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xFDE16C", Offset = "0xFDE16C", VA = "0xFDE16C", Slot = "6")]
		public override void OnExplodeOnDestruction(ref bool isEffective)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xFDE080", Offset = "0xFDE080", VA = "0xFDE080")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0940", Offset = "0x8D0940")]
		private IEnumerator BlackHoleExplodeAfterTime(bool isEffective)
		{
			return null;
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xFDE1CC", Offset = "0xFDE1CC", VA = "0xFDE1CC")]
		private void ApplyPullForce(IDamagable damagable)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xFDE514", Offset = "0xFDE514", VA = "0xFDE514")]
		private void CloseBlackHoles(int blackHolesToKeepCount)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xFDE608", Offset = "0xFDE608", VA = "0xFDE608")]
		protected void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xFDE6D0", Offset = "0xFDE6D0", VA = "0xFDE6D0")]
		public BlackHoleMissileExplodeEvents()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public abstract class MissileExplodeEvents : MonoBehaviour
	{
		[Token(Token = "0x6001264")]
		public abstract void OnExplode(ref bool isEffective);

		[Token(Token = "0x6001265")]
		public abstract void OnExplodeAtDestination(ref bool isEffective);

		[Token(Token = "0x6001266")]
		public abstract void OnExplodeOnDestruction(ref bool isEffective);

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x2487010", Offset = "0x2487010", VA = "0x2487010")]
		protected MissileExplodeEvents()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A929C", Offset = "0x8A929C")]
	public class MagneticProjectile : GameMonoBehaviour
	{
		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float magneticRange;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float magneticForce;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody body;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDamagable target;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isMagnetic;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Faction faction;

		[Token(Token = "0x1700035D")]
		protected override bool EnableOnLoadBalancedUpdate
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0xD5F96C", Offset = "0xD5F96C", VA = "0xD5F96C", Slot = "20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xD5F974", Offset = "0xD5F974", VA = "0xD5F974")]
		public void Setup(Faction faction)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xD5F9EC", Offset = "0xD5F9EC", VA = "0xD5F9EC")]
		public void BecomeMagnetic(bool on)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xD5F9F8", Offset = "0xD5F9F8", VA = "0xD5F9F8")]
		private void StartMoving()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xD5F9FC", Offset = "0xD5F9FC", VA = "0xD5F9FC")]
		private void ReachedTarget()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xD5FA00", Offset = "0xD5FA00", VA = "0xD5FA00")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xD5FCE4", Offset = "0xD5FCE4", VA = "0xD5FCE4", Slot = "35")]
		protected override void OnLoadBalancedUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xD5FD2C", Offset = "0xD5FD2C", VA = "0xD5FD2C")]
		private bool TryGetTargetInRange(out IDamagable found)
		{
			return default(bool);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xD5FFD8", Offset = "0xD5FFD8", VA = "0xD5FFD8")]
		public MagneticProjectile()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class ShipAbilityCutLaserEmitter : MonoBehaviour, IProjectile, IBuffable
	{
		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A92FC", Offset = "0x8A92FC")]
		private sealed class <FireRoutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityCutLaserEmitter <>4__this;

			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpaceEntitySteering.SteerPosition targetPos;

			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <timer>5__2;

			[Token(Token = "0x17000369")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001290")]
				[Address(RVA = "0xFFE560", Offset = "0xFFE560", VA = "0xFFE560", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001292")]
				[Address(RVA = "0xFFE5A8", Offset = "0xFFE5A8", VA = "0xFFE5A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600128D")]
			[Address(RVA = "0xFFE000", Offset = "0xFFE000", VA = "0xFFE000")]
			[DebuggerHidden]
			public <FireRoutine>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x600128E")]
			[Address(RVA = "0xFFE02C", Offset = "0xFFE02C", VA = "0xFFE02C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600128F")]
			[Address(RVA = "0xFFE030", Offset = "0xFFE030", VA = "0xFFE030", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001291")]
			[Address(RVA = "0xFFE568", Offset = "0xFFE568", VA = "0xFFE568", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float damage;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BADE0", Offset = "0x8BADE0")]
		[SerializeField]
		private float cutTime;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAE2C", Offset = "0x8BAE2C")]
		[SerializeField]
		private float trackDuring;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAE78", Offset = "0x8BAE78")]
		[SerializeField]
		private float extendTime;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float trackSpeed;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve cutCurve;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve rotationCurve;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform laserEnd;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform aim;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform offset;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform emitter;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAF34", Offset = "0x8BAF34")]
		[SerializeField]
		private Vector2 cutAngles;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BAF80", Offset = "0x8BAF80")]
		protected List<SectorTag> buffSourceTags;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lastHit;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine fireRoutine;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LaserVisual laserVisual;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SpaceEntitySteering.SteerPosition lastTargetPos;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private SfxTrigger cutLaserHitShieldSfx;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private SfxTrigger cutLaserHitOtherSfx;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private SfxTrigger cutLaserLoopSfx;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float rotationSpeed;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float rotationAmount;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BAFFC", Offset = "0x8BAFFC")]
		private float <Range>k__BackingField;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB00C", Offset = "0x8BB00C")]
		private Transform <Transform>k__BackingField;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB01C", Offset = "0x8BB01C")]
		private IDamagable <Owner>k__BackingField;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB02C", Offset = "0x8BB02C")]
		private readonly BuffsUtil <Buffs>k__BackingField;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 offsetAngle;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private IProjectileSource projectileSource;

		[Token(Token = "0x1700035E")]
		public float CutTime
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x1143C58", Offset = "0x1143C58", VA = "0x1143C58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035F")]
		public float ExtendTime
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x1143C60", Offset = "0x1143C60", VA = "0x1143C60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000360")]
		public float Range
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x1143C68", Offset = "0x1143C68", VA = "0x1143C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D09F0", Offset = "0x8D09F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x1143C70", Offset = "0x1143C70", VA = "0x1143C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0A00", Offset = "0x8D0A00")]
			set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public Transform Transform
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x1143C78", Offset = "0x1143C78", VA = "0x1143C78", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0A10", Offset = "0x8D0A10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001276")]
			[Address(RVA = "0x1143C80", Offset = "0x1143C80", VA = "0x1143C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0A20", Offset = "0x8D0A20")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public IDamagable Owner
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x1143C88", Offset = "0x1143C88", VA = "0x1143C88", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0A30", Offset = "0x8D0A30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x1143C90", Offset = "0x1143C90", VA = "0x1143C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0A40", Offset = "0x8D0A40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public float ProjectileHealth
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0x1143CA0", Offset = "0x1143CA0", VA = "0x1143CA0", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000364")]
		public bool IsDestroyable
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x1143CA8", Offset = "0x1143CA8", VA = "0x1143CA8", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000365")]
		public DamageTypeEnum DamageType
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x1143CB0", Offset = "0x1143CB0", VA = "0x1143CB0", Slot = "8")]
			get
			{
				return default(DamageTypeEnum);
			}
		}

		[Token(Token = "0x17000366")]
		public IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x1143CB8", Offset = "0x1143CB8", VA = "0x1143CB8", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		public BuffsUtil Buffs
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x1143CC0", Offset = "0x1143CC0", VA = "0x1143CC0", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0A50", Offset = "0x8D0A50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		public bool IsBuffable
		{
			[Token(Token = "0x600127F")]
			[Address(RVA = "0x1143CC8", Offset = "0x1143CC8", VA = "0x1143CC8", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x1143C98", Offset = "0x1143C98", VA = "0x1143C98", Slot = "5")]
		public float GetProjectileDamage(DamageTarget target)
		{
			return default(float);
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x1143CD0", Offset = "0x1143CD0", VA = "0x1143CD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x1143D40", Offset = "0x1143D40", VA = "0x1143D40")]
		private void Update()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x113C92C", Offset = "0x113C92C", VA = "0x113C92C", Slot = "9")]
		public void Setup(IDamagable owner, SpaceEntitySteering.SteerPosition steerTarget, IProjectileSource projectileSource)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x1143D74", Offset = "0x1143D74", VA = "0x1143D74")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x1143DDC", Offset = "0x1143DDC", VA = "0x1143DDC", Slot = "10")]
		public void Fire()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x1143DE0", Offset = "0x1143DE0", VA = "0x1143DE0", Slot = "11")]
		public void DamageProjectile(IDamagable cause, float damage, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x113C02C", Offset = "0x113C02C", VA = "0x113C02C")]
		public void Fire(SpaceEntitySteering.SteerPosition targetPos, float angleOff, float rotationSpeed)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x113C520", Offset = "0x113C520", VA = "0x113C520")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x1143DE4", Offset = "0x1143DE4", VA = "0x1143DE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0A60", Offset = "0x8D0A60")]
		private IEnumerator FireRoutine(SpaceEntitySteering.SteerPosition targetPos)
		{
			return null;
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x114418C", Offset = "0x114418C", VA = "0x114418C")]
		private void RotateAimTowards(Vector3 target)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x11442A4", Offset = "0x11442A4", VA = "0x11442A4")]
		private void CheckForDamage()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x1143E90", Offset = "0x1143E90", VA = "0x1143E90")]
		private void UpdateLaserVisuals(Vector3 startPos, Vector3 hitPos, bool killVisuals = false)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x1144A50", Offset = "0x1144A50", VA = "0x1144A50")]
		public ShipAbilityCutLaserEmitter()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class ShipAbilityGuardianPod : GameMonoBehaviour, IAddressableAssetPreload
	{
		[Serializable]
		[Token(Token = "0x20002B9")]
		public struct DestroySpawn
		{
			[Serializable]
			[Token(Token = "0x20002BA")]
			public struct DestroySpawnAsset
			{
				[Token(Token = "0x400106B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public AssetReferenceGameObject spawnPrefab;

				[Token(Token = "0x400106C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public int selectionWeight;

				[NonSerialized]
				[Token(Token = "0x400106D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[HideInInspector]
				public AddressableAssetDependency<GameObject> spawnPrefabAsset;

				[Token(Token = "0x600129F")]
				[Address(RVA = "0xEAE780", Offset = "0xEAE780", VA = "0xEAE780")]
				public static int GetSelectionWeight(DestroySpawnAsset spawnAsset)
				{
					return default(int);
				}

				[Token(Token = "0x60012A0")]
				[Address(RVA = "0xEAE788", Offset = "0xEAE788", VA = "0xEAE788")]
				public static bool GetSelectionValid(DestroySpawnAsset spawnAsset)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float growthThreshold;

			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public DestroySpawnAsset[] spawnAssets;
		}

		[Serializable]
		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A930C", Offset = "0x8A930C")]
		private sealed class <>c
		{
			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<DestroySpawn> <>9__28_0;

			[Token(Token = "0x60012A2")]
			[Address(RVA = "0xFFEB28", Offset = "0xFFEB28", VA = "0xFFEB28")]
			public <>c()
			{
			}

			[Token(Token = "0x60012A3")]
			[Address(RVA = "0xFFEB30", Offset = "0xFFEB30", VA = "0xFFEB30")]
			internal int <Awake>b__28_0(DestroySpawn a, DestroySpawn b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve growthCurve;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float relativeTargetScale;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float growthDelayTime;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float growthTime;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float selfDestroyTime;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB08C", Offset = "0x8BB08C")]
		private SpaceObject podSpaceObject;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform podArtTransform;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB0E8", Offset = "0x8BB0E8")]
		[SerializeField]
		private DestroySpawn[] destroySpawns;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB134", Offset = "0x8BB134")]
		[SerializeField]
		private SfxTrigger crackSpawnSfx;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SfxTrigger crackWithoutSpawnSfx;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SfxTrigger growthLevelIncreaseSfx;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB1A0", Offset = "0x8BB1A0")]
		private UnityEvent onGrowthLevelIncrease;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BB1EC", Offset = "0x8BB1EC")]
		private bool <EnableSpawn>k__BackingField;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected AddressableAssetDependencies assetDependencies;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 startScale;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 targetScale;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool growthDelayCompleted;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float timer;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float growthValue;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float nextGrowthLevelAtValue;

		[Token(Token = "0x1700036B")]
		public bool EnableSpawn
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0x11452A4", Offset = "0x11452A4", VA = "0x11452A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0B10", Offset = "0x8D0B10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001294")]
			[Address(RVA = "0x11452AC", Offset = "0x11452AC", VA = "0x11452AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0B20", Offset = "0x8D0B20")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0x11452B8", Offset = "0x11452B8", VA = "0x11452B8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036D")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x6001296")]
			[Address(RVA = "0x11452C0", Offset = "0x11452C0", VA = "0x11452C0", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x11452C8", Offset = "0x11452C8", VA = "0x11452C8", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x1145504", Offset = "0x1145504", VA = "0x1145504", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x1145564", Offset = "0x1145564", VA = "0x1145564", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x1145760", Offset = "0x1145760", VA = "0x1145760", Slot = "38")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x1145868", Offset = "0x1145868", VA = "0x1145868", Slot = "32")]
		protected override void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x11459B0", Offset = "0x11459B0", VA = "0x11459B0")]
		public void Spawn()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x11454A0", Offset = "0x11454A0", VA = "0x11454A0")]
		private float GetNextGrowthLevelValue()
		{
			return default(float);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x1145D04", Offset = "0x1145D04", VA = "0x1145D04")]
		public ShipAbilityGuardianPod()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BC")]
	public class ForcefieldReferences
	{
		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB20C", Offset = "0x8BB20C")]
		public GameObject shieldArt;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool materialLerp;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer renderer;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string materialProperty;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SphereCollider trigger;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB244", Offset = "0x8BB244")]
		public AnimationCurve flashingCurve;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float flashingDurationActivate;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float flashingDurationDeactivate;

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xC5D5FC", Offset = "0xC5D5FC", VA = "0xC5D5FC")]
		public ForcefieldReferences()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class ShipAbilityProjectileForcefield : ShipAbilityProjectile, IForcefield
	{
		[Token(Token = "0x20002BE")]
		public enum ReflectType
		{
			[Token(Token = "0x4001085")]
			Reverse,
			[Token(Token = "0x4001086")]
			Normal
		}

		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A931C", Offset = "0x8A931C")]
		private sealed class <ActivateRoutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityProjectileForcefield <>4__this;

			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000371")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012BA")]
				[Address(RVA = "0x1000C6C", Offset = "0x1000C6C", VA = "0x1000C6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000372")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012BC")]
				[Address(RVA = "0x1000CB4", Offset = "0x1000CB4", VA = "0x1000CB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012B7")]
			[Address(RVA = "0x10009D0", Offset = "0x10009D0", VA = "0x10009D0")]
			[DebuggerHidden]
			public <ActivateRoutine>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x10009FC", Offset = "0x10009FC", VA = "0x10009FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x1000A00", Offset = "0x1000A00", VA = "0x1000A00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x1000C74", Offset = "0x1000C74", VA = "0x1000C74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A932C", Offset = "0x8A932C")]
		private sealed class <DeActivateRoutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityProjectileForcefield <>4__this;

			[Token(Token = "0x400108E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000373")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012C0")]
				[Address(RVA = "0x1000F18", Offset = "0x1000F18", VA = "0x1000F18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000374")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012C2")]
				[Address(RVA = "0x1000F60", Offset = "0x1000F60", VA = "0x1000F60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x1000CBC", Offset = "0x1000CBC", VA = "0x1000CBC")]
			[DebuggerHidden]
			public <DeActivateRoutine>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x1000CE8", Offset = "0x1000CE8", VA = "0x1000CE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x1000CEC", Offset = "0x1000CEC", VA = "0x1000CEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012C1")]
			[Address(RVA = "0x1000F20", Offset = "0x1000F20", VA = "0x1000F20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB27C", Offset = "0x8BB27C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB27C", Offset = "0x8BB27C")]
		private float health;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private float size;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private bool reflectProjectiles;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private ReflectType reflectType;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BB31C", Offset = "0x8BB31C")]
		private ForcefieldReferences ForcefieldReferences;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB358", Offset = "0x8BB358")]
		private BuffObject[] buffsWhileActive;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB3A4", Offset = "0x8BB3A4")]
		private SfxTrigger shieldActivateSfx;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private SfxTrigger shieldContinousSfx;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private SfxTrigger shieldDeActivateSfx;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<SectorTag> buffSourceTags;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private IDamagable targetDamagable;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<BuffBase> assignedBuffs;

		[Token(Token = "0x1700036E")]
		public Faction Faction
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0xF3F0FC", Offset = "0xF3F0FC", VA = "0xF3F0FC", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036F")]
		public override IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0xF3F1AC", Offset = "0xF3F1AC", VA = "0xF3F1AC", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		public bool ReflectProjectiles
		{
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0xF3F1B4", Offset = "0xF3F1B4", VA = "0xF3F1B4", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xF3F1BC", Offset = "0xF3F1BC", VA = "0xF3F1BC", Slot = "20")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xF3F23C", Offset = "0xF3F23C", VA = "0xF3F23C", Slot = "21")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xF3F298", Offset = "0xF3F298", VA = "0xF3F298", Slot = "17")]
		public override void Setup(IDamagable owner, SpaceEntitySteering.SteerPosition steerTarget, IProjectileSource projectileSource)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xF3F7A8", Offset = "0xF3F7A8", VA = "0xF3F7A8", Slot = "18")]
		public override void Fire()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xF3F814", Offset = "0xF3F814", VA = "0xF3F814")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xF3F880", Offset = "0xF3F880", VA = "0xF3F880", Slot = "19")]
		protected override void OnAtDestination()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xF3FB38", Offset = "0xF3FB38", VA = "0xF3FB38", Slot = "32")]
		public void GotHit(IProjectile projectile)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xF3FB3C", Offset = "0xF3FB3C", VA = "0xF3FB3C", Slot = "31")]
		public Vector3 GetReflectionVector(IProjectile projectile)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xF3FD00", Offset = "0xF3FD00", VA = "0xF3FD00", Slot = "25")]
		protected override void OnDestruction(IDamagable cause)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xF3FAC0", Offset = "0xF3FAC0", VA = "0xF3FAC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0B30", Offset = "0x8D0B30")]
		private IEnumerator ActivateRoutine()
		{
			return null;
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xF3FE34", Offset = "0xF3FE34", VA = "0xF3FE34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0B90", Offset = "0x8D0B90")]
		private IEnumerator DeActivateRoutine()
		{
			return null;
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xF3FEAC", Offset = "0xF3FEAC", VA = "0xF3FEAC")]
		private void AddBuffs()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xF3FD74", Offset = "0xF3FD74", VA = "0xF3FD74")]
		private void RemoveBuffs()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xF4006C", Offset = "0xF4006C", VA = "0xF4006C")]
		public ShipAbilityProjectileForcefield()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xF40178", Offset = "0xF40178", VA = "0xF40178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0BF0", Offset = "0x8D0BF0")]
		[DebuggerHidden]
		private void <>n__0(IDamagable cause)
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class ShipAbilityProjectileGlueShot : ShipAbilityProjectile
	{
		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB410", Offset = "0x8BB410")]
		private int glueCount;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB45C", Offset = "0x8BB45C")]
		private float damage;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB4A8", Offset = "0x8BB4A8")]
		[SerializeField]
		private GameObject glueStickMesh;

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xF4017C", Offset = "0xF4017C", VA = "0xF4017C", Slot = "23")]
		protected override void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xF403F8", Offset = "0xF403F8", VA = "0xF403F8")]
		private void OnHit(IDamagable targetDamagable)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xF406F0", Offset = "0xF406F0", VA = "0xF406F0")]
		public ShipAbilityProjectileGlueShot()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class ShipAbilityProjectileGlueShotTargetHandler : MonoBehaviour
	{
		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IDamagable damagableTarget;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int glueCount;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int maxGlueCount;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float explosionDamage;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject glueMesh;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> gluePool;

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xF406F4", Offset = "0xF406F4", VA = "0xF406F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xF407E8", Offset = "0xF407E8", VA = "0xF407E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xF4064C", Offset = "0xF4064C", VA = "0xF4064C")]
		public void Setup(IDamagable target, float damage, int maxCount, GameObject mesh)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xF406A4", Offset = "0xF406A4", VA = "0xF406A4")]
		public void OnTargetHit(Vector3 hitPos, IDamagable cause)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xF408DC", Offset = "0xF408DC", VA = "0xF408DC")]
		private void StickToTarget(Vector3 hitPos)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xF40AC4", Offset = "0xF40AC4", VA = "0xF40AC4")]
		private void DetonateGlue(IDamagable cause)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xF40CBC", Offset = "0xF40CBC", VA = "0xF40CBC")]
		private GameObject GetSlot()
		{
			return null;
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xF40F28", Offset = "0xF40F28", VA = "0xF40F28")]
		private void OnSectorObjectiveClearedChange(bool cleared)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xF41090", Offset = "0xF41090", VA = "0xF41090")]
		public ShipAbilityProjectileGlueShotTargetHandler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C3")]
	public class MegaMineReferences
	{
		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB4F4", Offset = "0x8BB4F4")]
		public SphereCollider trigger;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject rangeDisplay;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem hitEffect;

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xD62484", Offset = "0xD62484", VA = "0xD62484")]
		public MegaMineReferences()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class ShipAbilityProjectileMegaMine : ShipAbilityProjectile, ITelegraphVisual
	{
		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A933C", Offset = "0x8A933C")]
		private sealed class <DetonateRoutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityProjectileMegaMine <>4__this;

			[Token(Token = "0x40010A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x40010A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <flashTimer>5__3;

			[Token(Token = "0x40010A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <flashDelay>5__4;

			[Token(Token = "0x17000376")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012E0")]
				[Address(RVA = "0x1001104", Offset = "0x1001104", VA = "0x1001104", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000377")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E2")]
				[Address(RVA = "0x100114C", Offset = "0x100114C", VA = "0x100114C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x1000F68", Offset = "0x1000F68", VA = "0x1000F68")]
			[DebuggerHidden]
			public <DetonateRoutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x1000F94", Offset = "0x1000F94", VA = "0x1000F94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x1000F98", Offset = "0x1000F98", VA = "0x1000F98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x100110C", Offset = "0x100110C", VA = "0x100110C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB52C", Offset = "0x8BB52C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB52C", Offset = "0x8BB52C")]
		[SerializeField]
		private float damage;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB59C", Offset = "0x8BB59C")]
		[SerializeField]
		private float explosionRadius;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB5E8", Offset = "0x8BB5E8")]
		private float detonationTime;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BB634", Offset = "0x8BB634")]
		private MegaMineReferences megaMineReferences;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB670", Offset = "0x8BB670")]
		private SfxTrigger megaMineExplodeSfx;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool isDetonating;

		[Token(Token = "0x17000375")]
		public SphereCollider TriggerCollider
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0xF41114", Offset = "0xF41114", VA = "0xF41114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xF41130", Offset = "0xF41130", VA = "0xF41130", Slot = "20")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xF41180", Offset = "0xF41180", VA = "0xF41180", Slot = "21")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xF411B4", Offset = "0xF411B4", VA = "0xF411B4", Slot = "17")]
		public override void Setup(IDamagable owner, SpaceEntitySteering.SteerPosition steerTarget, IProjectileSource projectileSource)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xF412B8", Offset = "0xF412B8", VA = "0xF412B8", Slot = "19")]
		protected override void OnAtDestination()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xF41238", Offset = "0xF41238", VA = "0xF41238")]
		private void UpdateExpotionRadious()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xF41310", Offset = "0xF41310", VA = "0xF41310", Slot = "23")]
		protected override void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xF4143C", Offset = "0xF4143C", VA = "0xF4143C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0CC8", Offset = "0x8D0CC8")]
		private IEnumerator DetonateRoutine()
		{
			return null;
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xF414B4", Offset = "0xF414B4", VA = "0xF414B4")]
		private void Detonate()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xF41820", Offset = "0xF41820", VA = "0xF41820", Slot = "25")]
		protected override void OnDestruction(IDamagable cause)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xF41950", Offset = "0xF41950", VA = "0xF41950", Slot = "27")]
		public TelegraphVisual GetTelegraphVisual(SpaceShip owner)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xF41A24", Offset = "0xF41A24", VA = "0xF41A24", Slot = "28")]
		public TelegraphVisual UpdateTelegraphVisual(SpaceShip owner, TelegraphVisual visual)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xF41A40", Offset = "0xF41A40", VA = "0xF41A40")]
		public ShipAbilityProjectileMegaMine()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C6")]
	public class MineReferences
	{
		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB6BC", Offset = "0x8BB6BC")]
		public SphereCollider trigger;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject rangeDisplay;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem hitEffect;

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x2487008", Offset = "0x2487008", VA = "0x2487008")]
		public MineReferences()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class ShipAbilityProjectileMine : ShipAbilityProjectile, ITelegraphVisual
	{
		[Token(Token = "0x20002C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A934C", Offset = "0x8A934C")]
		private sealed class <DetonateAfterTime>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityProjectileMine <>4__this;

			[Token(Token = "0x1700037A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012F7")]
				[Address(RVA = "0x1001244", Offset = "0x1001244", VA = "0x1001244", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012F9")]
				[Address(RVA = "0x100128C", Offset = "0x100128C", VA = "0x100128C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012F4")]
			[Address(RVA = "0x1001154", Offset = "0x1001154", VA = "0x1001154")]
			[DebuggerHidden]
			public <DetonateAfterTime>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x1001180", Offset = "0x1001180", VA = "0x1001180", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x1001184", Offset = "0x1001184", VA = "0x1001184", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012F8")]
			[Address(RVA = "0x100124C", Offset = "0x100124C", VA = "0x100124C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB6F4", Offset = "0x8BB6F4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB6F4", Offset = "0x8BB6F4")]
		private float damage;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB764", Offset = "0x8BB764")]
		private float explosionRadius;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB7B0", Offset = "0x8BB7B0")]
		private bool timedDetonation;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB7FC", Offset = "0x8BB7FC")]
		private float detonationTimer;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB848", Offset = "0x8BB848")]
		private bool explodeAtDestination;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private List<SectorTag> buffSourceTags;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float knockBackForce;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BB8B4", Offset = "0x8BB8B4")]
		[SerializeField]
		private MineReferences mineReferences;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB8F0", Offset = "0x8BB8F0")]
		[SerializeField]
		private SfxTrigger mineExplodeSfx;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Coroutine timedDetonationCoroutine;

		[Token(Token = "0x17000378")]
		public SphereCollider TriggerCollider
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0xF41A58", Offset = "0xF41A58", VA = "0xF41A58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		public override IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0xF41A74", Offset = "0xF41A74", VA = "0xF41A74", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xF41A7C", Offset = "0xF41A7C", VA = "0xF41A7C", Slot = "20")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xF41ACC", Offset = "0xF41ACC", VA = "0xF41ACC", Slot = "21")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xF41B00", Offset = "0xF41B00", VA = "0xF41B00", Slot = "17")]
		public override void Setup(IDamagable owner, SpaceEntitySteering.SteerPosition steerTarget, IProjectileSource projectileSource)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xF41BAC", Offset = "0xF41BAC", VA = "0xF41BAC", Slot = "18")]
		public override void Fire()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xF41C04", Offset = "0xF41C04", VA = "0xF41C04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0D78", Offset = "0x8D0D78")]
		private IEnumerator DetonateAfterTime()
		{
			return null;
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xF41B48", Offset = "0xF41B48", VA = "0xF41B48")]
		private void UpdateExplosionRadius()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xF41C7C", Offset = "0xF41C7C", VA = "0xF41C7C", Slot = "19")]
		protected override void OnAtDestination()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xF42074", Offset = "0xF42074", VA = "0xF42074", Slot = "23")]
		protected override void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xF41CB4", Offset = "0xF41CB4", VA = "0xF41CB4")]
		private void Detonate()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xF4248C", Offset = "0xF4248C", VA = "0xF4248C")]
		private void AddForceOnHitObject(Collider collider)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xF425A0", Offset = "0xF425A0", VA = "0xF425A0", Slot = "25")]
		protected override void OnDestruction(IDamagable cause)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xF426D0", Offset = "0xF426D0", VA = "0xF426D0", Slot = "27")]
		public TelegraphVisual GetTelegraphVisual(SpaceShip owner)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xF427A4", Offset = "0xF427A4", VA = "0xF427A4", Slot = "28")]
		public TelegraphVisual UpdateTelegraphVisual(SpaceShip owner, TelegraphVisual visual)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xF427C0", Offset = "0xF427C0", VA = "0xF427C0")]
		public ShipAbilityProjectileMine()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C9")]
	public class MissileReferences
	{
		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB93C", Offset = "0x8BB93C")]
		public ParticleSystem missileExplotion;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem effectiveMissileExplosion;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider missileCollider;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject rangeDisplay;

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x2487018", Offset = "0x2487018", VA = "0x2487018")]
		public MissileReferences()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class ShipAbilityProjectileMissile : ShipAbilityProjectile, ITelegraphVisual
	{
		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB974", Offset = "0x8BB974")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB974", Offset = "0x8BB974")]
		private float hitDamage;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB9E4", Offset = "0x8BB9E4")]
		[SerializeField]
		private float explotionDamage;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBA30", Offset = "0x8BBA30")]
		[SerializeField]
		private float explotionRadius;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBA7C", Offset = "0x8BBA7C")]
		[SerializeField]
		private float knockBackForce;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBAC8", Offset = "0x8BBAC8")]
		private bool explodeOnAsteroidImpacts;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		[SerializeField]
		private bool ignoreSameFaction;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BBB24", Offset = "0x8BBB24")]
		[SerializeField]
		private MissileReferences missileReferences;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private MissileExplodeEvents missileExplodeEvents;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBB70", Offset = "0x8BBB70")]
		[SerializeField]
		private SfxTrigger hitOtherSfx;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private SfxTrigger hitAsteroidSfx;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private SfxTrigger hitOrganicSfx;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private SfxTrigger hitShieldSfx;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private SfxTrigger hitForcefieldSfx;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<SectorTag> buffSourceTags;

		[Token(Token = "0x1700037C")]
		public Faction Faction
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0xF428D8", Offset = "0xF428D8", VA = "0xF428D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		public override IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0xF42988", Offset = "0xF42988", VA = "0xF42988", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037E")]
		public float ExplosionRadius
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0xF42A90", Offset = "0xF42A90", VA = "0xF42A90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xF42990", Offset = "0xF42990", VA = "0xF42990")]
		public float GetKnockBackForce(IBuffable owner)
		{
			return default(float);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xF42A98", Offset = "0xF42A98", VA = "0xF42A98")]
		public float GetExplosionRadius(IBuffable owner)
		{
			return default(float);
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xF42B98", Offset = "0xF42B98", VA = "0xF42B98", Slot = "20")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xF42C48", Offset = "0xF42C48", VA = "0xF42C48", Slot = "21")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xF42CCC", Offset = "0xF42CCC", VA = "0xF42CCC", Slot = "17")]
		public override void Setup(IDamagable owner, SpaceEntitySteering.SteerPosition steerTarget, IProjectileSource projectileSource)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xF42EA8", Offset = "0xF42EA8", VA = "0xF42EA8", Slot = "19")]
		protected override void OnAtDestination()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xF43390", Offset = "0xF43390", VA = "0xF43390", Slot = "23")]
		protected override void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xF42F5C", Offset = "0xF42F5C", VA = "0xF42F5C")]
		public void Explode(ref bool isEffective)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xF43D0C", Offset = "0xF43D0C", VA = "0xF43D0C")]
		private void AddForceOnHitObject(Collider collider)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xF43BAC", Offset = "0xF43BAC", VA = "0xF43BAC")]
		private bool CheckFriendlyFire(IDamagable damagable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xF43E40", Offset = "0xF43E40", VA = "0xF43E40", Slot = "25")]
		protected override void OnDestruction(IDamagable cause)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xF43EEC", Offset = "0xF43EEC", VA = "0xF43EEC", Slot = "27")]
		public TelegraphVisual GetTelegraphVisual(SpaceShip owner)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xF44010", Offset = "0xF44010", VA = "0xF44010", Slot = "28")]
		public TelegraphVisual UpdateTelegraphVisual(SpaceShip owner, TelegraphVisual visual)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xF44054", Offset = "0xF44054", VA = "0xF44054")]
		public void SetMissileExplodeEvents(MissileExplodeEvents missileExplodeEvents)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xF44064", Offset = "0xF44064", VA = "0xF44064")]
		public ShipAbilityProjectileMissile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CB")]
	public class ShieldReferences
	{
		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBBFC", Offset = "0x8BBBFC")]
		public GameObject shieldArt;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider trigger;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBC34", Offset = "0x8BBC34")]
		public AnimationCurve flashingCurve;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float flashingDurationActivate;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float flashingDurationDeactivate;

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xE1B450", Offset = "0xE1B450", VA = "0xE1B450")]
		public ShieldReferences()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class ShipAbilityProjectileShield : ShipAbilityProjectile, IForcefield, ITelegraphVisual
	{
		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A935C", Offset = "0x8A935C")]
		private sealed class <ActivateRoutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityProjectileShield <>4__this;

			[Token(Token = "0x40010D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000381")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001322")]
				[Address(RVA = "0x1001400", Offset = "0x1001400", VA = "0x1001400", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001324")]
				[Address(RVA = "0x1001448", Offset = "0x1001448", VA = "0x1001448", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600131F")]
			[Address(RVA = "0x1001294", Offset = "0x1001294", VA = "0x1001294")]
			[DebuggerHidden]
			public <ActivateRoutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001320")]
			[Address(RVA = "0x10012C0", Offset = "0x10012C0", VA = "0x10012C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001321")]
			[Address(RVA = "0x10012C4", Offset = "0x10012C4", VA = "0x10012C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001323")]
			[Address(RVA = "0x1001408", Offset = "0x1001408", VA = "0x1001408", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A936C", Offset = "0x8A936C")]
		private sealed class <DeActivateRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityProjectileShield <>4__this;

			[Token(Token = "0x40010D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000383")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001328")]
				[Address(RVA = "0x10015B0", Offset = "0x10015B0", VA = "0x10015B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000384")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600132A")]
				[Address(RVA = "0x10015F8", Offset = "0x10015F8", VA = "0x10015F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001325")]
			[Address(RVA = "0x1001450", Offset = "0x1001450", VA = "0x1001450")]
			[DebuggerHidden]
			public <DeActivateRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001326")]
			[Address(RVA = "0x100147C", Offset = "0x100147C", VA = "0x100147C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001327")]
			[Address(RVA = "0x1001480", Offset = "0x1001480", VA = "0x1001480", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001329")]
			[Address(RVA = "0x10015B8", Offset = "0x10015B8", VA = "0x10015B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBC6C", Offset = "0x8BBC6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBC6C", Offset = "0x8BBC6C")]
		[SerializeField]
		private float shieldStrenght;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBCDC", Offset = "0x8BBCDC")]
		[SerializeField]
		private float shieldRadius;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BBD28", Offset = "0x8BBD28")]
		[SerializeField]
		private ShieldReferences shieldReferences;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private SfxTrigger shieldHitSfx;

		[Token(Token = "0x1700037F")]
		public Faction Faction
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0xF4417C", Offset = "0xF4417C", VA = "0xF4417C", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		public bool ReflectProjectiles
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0xF4422C", Offset = "0xF4422C", VA = "0xF4422C", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xF44234", Offset = "0xF44234", VA = "0xF44234", Slot = "20")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xF44284", Offset = "0xF44284", VA = "0xF44284", Slot = "21")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xF442B8", Offset = "0xF442B8", VA = "0xF442B8", Slot = "17")]
		public override void Setup(IDamagable owner, SpaceEntitySteering.SteerPosition steerTarget, IProjectileSource projectileSource)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xF4435C", Offset = "0xF4435C", VA = "0xF4435C", Slot = "19")]
		protected override void OnAtDestination()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xF444C4", Offset = "0xF444C4", VA = "0xF444C4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xF443F8", Offset = "0xF443F8", VA = "0xF443F8")]
		private void UpdateShieldRadious()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xF444C8", Offset = "0xF444C8", VA = "0xF444C8", Slot = "32")]
		public void GotHit(IProjectile projectile)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xF446F8", Offset = "0xF446F8", VA = "0xF446F8", Slot = "25")]
		protected override void OnDestruction(IDamagable cause)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xF447C0", Offset = "0xF447C0", VA = "0xF447C0", Slot = "33")]
		public TelegraphVisual GetTelegraphVisual(SpaceShip owner)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xF44944", Offset = "0xF44944", VA = "0xF44944", Slot = "34")]
		public TelegraphVisual UpdateTelegraphVisual(SpaceShip owner, TelegraphVisual visual)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xF4444C", Offset = "0xF4444C", VA = "0xF4444C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0E28", Offset = "0x8D0E28")]
		private IEnumerator ActivateRoutine()
		{
			return null;
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xF44748", Offset = "0xF44748", VA = "0xF44748")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D0E88", Offset = "0x8D0E88")]
		private IEnumerator DeActivateRoutine()
		{
			return null;
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xF44960", Offset = "0xF44960", VA = "0xF44960", Slot = "31")]
		public Vector3 GetReflectionVector(IProjectile projectile)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xF44A28", Offset = "0xF44A28", VA = "0xF44A28")]
		public ShipAbilityProjectileShield()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xF44A38", Offset = "0xF44A38", VA = "0xF44A38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0EE8", Offset = "0x8D0EE8")]
		[DebuggerHidden]
		private void <>n__0(IDamagable cause)
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class ShipAbilityProjectileSplitMissile : ShipAbilityProjectileMissile
	{
		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBD74", Offset = "0x8BBD74")]
		[SerializeField]
		private GameObject splitMissilePrefab;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBDC0", Offset = "0x8BBDC0")]
		[SerializeField]
		private int splitProjectileCount;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBE0C", Offset = "0x8BBE0C")]
		[SerializeField]
		private float splitFixedDistance;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBE58", Offset = "0x8BBE58")]
		[SerializeField]
		private float splitMinDistance;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBEA4", Offset = "0x8BBEA4")]
		[SerializeField]
		private int targetAngle;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBEF0", Offset = "0x8BBEF0")]
		[SerializeField]
		private GameObject splitVfxObject;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private float splitVfxScaleMultiplier;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBF4C", Offset = "0x8BBF4C")]
		[SerializeField]
		private SfxTrigger splitMissileSfxTrigger;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool isSplit;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool canSplit;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Vector3 launchPosition;

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xF44A3C", Offset = "0xF44A3C", VA = "0xF44A3C", Slot = "18")]
		public override void Fire()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xF44B0C", Offset = "0xF44B0C", VA = "0xF44B0C", Slot = "22")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xF44BEC", Offset = "0xF44BEC", VA = "0xF44BEC")]
		private void CreateAndFireProjectiles()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xF45160", Offset = "0xF45160", VA = "0xF45160")]
		private Vector3[] GetLaunchVectors()
		{
			return null;
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xF45350", Offset = "0xF45350", VA = "0xF45350")]
		public ShipAbilityProjectileSplitMissile()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public abstract class ShipAbilityActive : ShipAbilityBase, ICooldownTimer, ITelegraphVisual, IBuffable
	{
		[Token(Token = "0x20002D1")]
		public delegate void AbilityStatusChange();

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BBF98", Offset = "0x8BBF98")]
		[SerializeField]
		protected List<SectorTag> buffSourceTags;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BBFE4", Offset = "0x8BBFE4")]
		private ShipPartModAssignerHead <AbilityShipPartModAssignerHead>k__BackingField;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBFF4", Offset = "0x8BBFF4")]
		protected int maxUses;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private bool ammoInsteadOfCooldown;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private float cooldown;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private bool resetCooldownOnUse;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float onEquipCooldown;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private CooldownTimerFormatting cooldownFormatting;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC090", Offset = "0x8BC090")]
		[SerializeField]
		private SfxTrigger rechargedSfx;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private bool playRechargeSfxOnShip;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private SfxTrigger failedActivationSfx;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private SfxTrigger outOfUsesSfx;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public SfxTrigger selectSfx;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public SfxTrigger hoverSfx;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC10C", Offset = "0x8BC10C")]
		private HapticPreset outOfUsesHapticPreset;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC158", Offset = "0x8BC158")]
		private bool displayAsEnergyBar;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC1A4", Offset = "0x8BC1A4")]
		private bool <IsActivated>k__BackingField;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected float cooldownTimer;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		protected int uses;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected bool isSetup;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC1B4", Offset = "0x8BC1B4")]
		private AbilityStatusChange <OnAbilityActivated>k__BackingField;

		[Token(Token = "0x17000385")]
		public IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x6001330")]
			[Address(RVA = "0xE1B460", Offset = "0xE1B460", VA = "0xE1B460", Slot = "51")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		public ShipPartModAssignerHead AbilityShipPartModAssignerHead
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0xE1B468", Offset = "0xE1B468", VA = "0xE1B468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0FC0", Offset = "0x8D0FC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001332")]
			[Address(RVA = "0xE1B470", Offset = "0xE1B470", VA = "0xE1B470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0FD0", Offset = "0x8D0FD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000387")]
		private int FixedMaxUses
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0xE1B478", Offset = "0xE1B478", VA = "0xE1B478")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000388")]
		public abstract VROptionMenuInteraction Interaction
		{
			[Token(Token = "0x6001334")]
			get;
		}

		[Token(Token = "0x17000389")]
		public bool IsActivated
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0xE1B564", Offset = "0xE1B564", VA = "0xE1B564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0FE0", Offset = "0x8D0FE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001336")]
			[Address(RVA = "0xE1B56C", Offset = "0xE1B56C", VA = "0xE1B56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0FF0", Offset = "0x8D0FF0")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700038A")]
		public bool IsReady
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0xE1B578", Offset = "0xE1B578", VA = "0xE1B578")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038B")]
		public int MaxUses
		{
			[Token(Token = "0x6001338")]
			[Address(RVA = "0xE1B59C", Offset = "0xE1B59C", VA = "0xE1B59C", Slot = "56")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038C")]
		public int Uses
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0xE1B6C0", Offset = "0xE1B6C0", VA = "0xE1B6C0", Slot = "57")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038D")]
		public bool AmmoInsteadOfCooldown
		{
			[Token(Token = "0x600133A")]
			[Address(RVA = "0xE1B6C8", Offset = "0xE1B6C8", VA = "0xE1B6C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038E")]
		public float Cooldown
		{
			[Token(Token = "0x600133B")]
			[Address(RVA = "0xE1B6D0", Offset = "0xE1B6D0", VA = "0xE1B6D0", Slot = "58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038F")]
		public float CooldownTimer
		{
			[Token(Token = "0x600133C")]
			[Address(RVA = "0xE1B7C8", Offset = "0xE1B7C8", VA = "0xE1B7C8", Slot = "59")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000390")]
		public float CooldownNormalized
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0xE1B7D0", Offset = "0xE1B7D0", VA = "0xE1B7D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000391")]
		public CooldownTimerFormatting CooldownFormatting
		{
			[Token(Token = "0x600133E")]
			[Address(RVA = "0xE1B7F4", Offset = "0xE1B7F4", VA = "0xE1B7F4")]
			get
			{
				return default(CooldownTimerFormatting);
			}
		}

		[Token(Token = "0x17000392")]
		public bool DisplayAsEnergyBar
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0xE1B800", Offset = "0xE1B800", VA = "0xE1B800", Slot = "60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000393")]
		private float Shared.ICooldownTimer.CooldownTimerLeft
		{
			[Token(Token = "0x6001340")]
			[Address(RVA = "0xE1B808", Offset = "0xE1B808", VA = "0xE1B808", Slot = "42")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000394")]
		private float Shared.ICooldownTimer.CooldownTimerMax
		{
			[Token(Token = "0x6001341")]
			[Address(RVA = "0xE1B810", Offset = "0xE1B810", VA = "0xE1B810", Slot = "43")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000395")]
		private float Shared.ICooldownTimer.CooldownTimerMaxBase
		{
			[Token(Token = "0x6001342")]
			[Address(RVA = "0xE1B814", Offset = "0xE1B814", VA = "0xE1B814", Slot = "44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000396")]
		private int Shared.ICooldownTimer.CooldownTimerCount
		{
			[Token(Token = "0x6001343")]
			[Address(RVA = "0xE1B81C", Offset = "0xE1B81C", VA = "0xE1B81C", Slot = "45")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000397")]
		private int Shared.ICooldownTimer.CooldownTimerCountMax
		{
			[Token(Token = "0x6001344")]
			[Address(RVA = "0xE1B824", Offset = "0xE1B824", VA = "0xE1B824", Slot = "46")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000398")]
		private int Shared.ICooldownTimer.CooldownTimerCountMaxBase
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0xE1B828", Offset = "0xE1B828", VA = "0xE1B828", Slot = "47")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000399")]
		private CooldownTimerFormatting Shared.ICooldownTimer.CooldownTimerFormatting
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0xE1B830", Offset = "0xE1B830", VA = "0xE1B830", Slot = "48")]
			get
			{
				return default(CooldownTimerFormatting);
			}
		}

		[Token(Token = "0x1700039A")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x6001347")]
			[Address(RVA = "0xE1B83C", Offset = "0xE1B83C", VA = "0xE1B83C", Slot = "14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001348")]
			[Address(RVA = "0xE1B844", Offset = "0xE1B844", VA = "0xE1B844", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public BuffsUtil Buffs
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0xE1B848", Offset = "0xE1B848", VA = "0xE1B848", Slot = "52")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039C")]
		public bool IsBuffable
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0xE1B864", Offset = "0xE1B864", VA = "0xE1B864", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039D")]
		public bool IsDisabled
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0xE1B8F8", Offset = "0xE1B8F8", VA = "0xE1B8F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039E")]
		public Transform Transform
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0xE1B9E0", Offset = "0xE1B9E0", VA = "0xE1B9E0", Slot = "54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		public AbilityStatusChange OnAbilityActivated
		{
			[Token(Token = "0x600134D")]
			[Address(RVA = "0xE1B9FC", Offset = "0xE1B9FC", VA = "0xE1B9FC", Slot = "61")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1000", Offset = "0x8D1000")]
			get
			{
				return null;
			}
			[Token(Token = "0x600134E")]
			[Address(RVA = "0xE1BA04", Offset = "0xE1BA04", VA = "0xE1BA04", Slot = "62")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1010", Offset = "0x8D1010")]
			set
			{
			}
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xE1BA14", Offset = "0xE1BA14", VA = "0xE1BA14", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xE1BABC", Offset = "0xE1BABC", VA = "0xE1BABC", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xE1BB50", Offset = "0xE1BB50", VA = "0xE1BB50", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xE1BC94", Offset = "0xE1BC94", VA = "0xE1BC94", Slot = "41")]
		protected override void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xE1BCCC", Offset = "0xE1BCCC", VA = "0xE1BCCC", Slot = "32")]
		protected override void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xE1BD4C", Offset = "0xE1BD4C", VA = "0xE1BD4C", Slot = "63")]
		protected virtual void UpdateCooldownAndActivation(float deltaTime)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xE1BF34", Offset = "0xE1BF34", VA = "0xE1BF34", Slot = "64")]
		protected virtual void UseAndStartCooldownOnActivation()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xE1C1A4", Offset = "0xE1C1A4", VA = "0xE1C1A4", Slot = "65")]
		protected virtual void StartCooldownOnCooldownFinish()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xE1C178", Offset = "0xE1C178", VA = "0xE1C178")]
		protected void TryStartDefaultCooldown()
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xE1BC80", Offset = "0xE1BC80", VA = "0xE1BC80")]
		protected void TryStartCooldown(float cooldown)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xE1C1D0", Offset = "0xE1C1D0", VA = "0xE1C1D0")]
		protected void StopCooldown()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xE1BF7C", Offset = "0xE1BF7C", VA = "0xE1BF7C")]
		protected bool Use()
		{
			return default(bool);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xE1C1D8", Offset = "0xE1C1D8", VA = "0xE1C1D8", Slot = "66")]
		public virtual void RechargeAll()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xE1C1FC", Offset = "0xE1C1FC", VA = "0xE1C1FC", Slot = "67")]
		public virtual void RechargeOne()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xE1C210", Offset = "0xE1C210", VA = "0xE1C210", Slot = "68")]
		public virtual void Recharge(int amount)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xE1C258", Offset = "0xE1C258", VA = "0xE1C258", Slot = "69")]
		public virtual void Activate(SpaceEntitySteering.SteerPosition targetPos)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xE1C2FC", Offset = "0xE1C2FC", VA = "0xE1C2FC", Slot = "70")]
		public virtual void DeActivate()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xE1C370", Offset = "0xE1C370", VA = "0xE1C370", Slot = "71")]
		public virtual void ActivateFailed()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xE1C47C", Offset = "0xE1C47C", VA = "0xE1C47C", Slot = "72")]
		public virtual TelegraphVisual GetTelegraphVisual(SpaceShip owner)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xE1C4C8", Offset = "0xE1C4C8", VA = "0xE1C4C8", Slot = "73")]
		public virtual TelegraphVisual UpdateTelegraphVisual(SpaceShip owner, TelegraphVisual visual)
		{
			return default(TelegraphVisual);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xE1C4E4", Offset = "0xE1C4E4", VA = "0xE1C4E4", Slot = "74")]
		public virtual void ReduceCooldownByPercentage(float perc)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xE1C518", Offset = "0xE1C518", VA = "0xE1C518")]
		public void SetUses(int uses)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xE1C520", Offset = "0xE1C520", VA = "0xE1C520")]
		protected ShipAbilityActive()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public abstract class ShipAbilityBase : ShipSlotable
	{
		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<AssignableShipPartMod> shipPartModifications;

		[Token(Token = "0x170003A0")]
		public LocalizationKey AbilityName
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0x1143BFC", Offset = "0x1143BFC", VA = "0x1143BFC")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x170003A1")]
		public LocalizationKey AbilityDescription
		{
			[Token(Token = "0x600136B")]
			[Address(RVA = "0x1143C08", Offset = "0x1143C08", VA = "0x1143C08")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x170003A2")]
		public LocalizationKey AbilityFlavour
		{
			[Token(Token = "0x600136C")]
			[Address(RVA = "0x1143C14", Offset = "0x1143C14", VA = "0x1143C14")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x170003A3")]
		public Sprite AbilityIcon
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x1143C20", Offset = "0x1143C20", VA = "0x1143C20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x1143C30", Offset = "0x1143C30", VA = "0x1143C30")]
		protected ShipAbilityBase()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A937C", Offset = "0x8A937C")]
	public class ShipAbilityCostStructure : ScriptableObject
	{
		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int[] recycleScrapGain;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int[] upgradeScrapCost;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int[] purchaseScrapCost;

		[Token(Token = "0x170003A4")]
		public IReadOnlyList<int> RecycleScrapGain
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0x1143C38", Offset = "0x1143C38", VA = "0x1143C38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		public IReadOnlyList<int> UpgradeScrapCost
		{
			[Token(Token = "0x6001370")]
			[Address(RVA = "0x1143C40", Offset = "0x1143C40", VA = "0x1143C40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		public IReadOnlyList<int> PurchaseScrapCost
		{
			[Token(Token = "0x6001371")]
			[Address(RVA = "0x1143C48", Offset = "0x1143C48", VA = "0x1143C48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x1143C50", Offset = "0x1143C50", VA = "0x1143C50")]
		public ShipAbilityCostStructure()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public abstract class ShipAbilityPassive : ShipAbilityBase, ISectorAsset, IAbilityPassiveState
	{
		[Serializable]
		[Token(Token = "0x20002D5")]
		public struct LevelFloatValue
		{
			[Token(Token = "0x400110D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float value;

			[Token(Token = "0x400110E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string format;
		}

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool isDailyJourneyModifier;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[SerializeField]
		private bool isThreat;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		[SerializeField]
		private bool isDefect;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		[SerializeField]
		private bool isPermanent;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC234", Offset = "0x8BC234")]
		private LocalizationKey levelEffectSummary;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string[] levelBonusDescriptions;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private LevelFloatValue[] levelBonusDescriptionsFloat;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private LocalizationKey[] levelBonusDescriptionKeys;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private bool showLevelHeaderText;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private SectorTagValue selectionWeight;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private SectorTagCollectionHierarchy selectionTags;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private int level;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private int levelMax;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC300", Offset = "0x8BC300")]
		[SerializeField]
		private ShipAbilityCostStructure costStructure;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC34C", Offset = "0x8BC34C")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BC34C", Offset = "0x8BC34C")]
		[SerializeField]
		protected SectorTag abilityTag;

		[Token(Token = "0x170003A7")]
		public IReadOnlyList<int> RecycleScrapGain
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0x1145D7C", Offset = "0x1145D7C", VA = "0x1145D7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public IReadOnlyList<int> UpgradeScrapCost
		{
			[Token(Token = "0x6001374")]
			[Address(RVA = "0x1145E3C", Offset = "0x1145E3C", VA = "0x1145E3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		public IReadOnlyList<int> PurchaseScrapCost
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0x1145EFC", Offset = "0x1145EFC", VA = "0x1145EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AA")]
		public bool IsDailyJourneyModifier
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0x1145FBC", Offset = "0x1145FBC", VA = "0x1145FBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AB")]
		public bool IsThreat
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0x1145FC4", Offset = "0x1145FC4", VA = "0x1145FC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AC")]
		public bool IsDefect
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0x1145FCC", Offset = "0x1145FCC", VA = "0x1145FCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AD")]
		public bool IsPermanent
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x1145FD4", Offset = "0x1145FD4", VA = "0x1145FD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AE")]
		public virtual int Level
		{
			[Token(Token = "0x600137A")]
			[Address(RVA = "0x1145FDC", Offset = "0x1145FDC", VA = "0x1145FDC", Slot = "49")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x1145FE4", Offset = "0x1145FE4", VA = "0x1145FE4", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public int LevelMax
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x1146018", Offset = "0x1146018", VA = "0x1146018")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B0")]
		public int DisplayedLevel
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x1146020", Offset = "0x1146020", VA = "0x1146020")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B1")]
		public SectorTag AbilityTag
		{
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x1146044", Offset = "0x1146044", VA = "0x1146044")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x170003B2")]
		public SectorTagCollectionHierarchy SelectionTags
		{
			[Token(Token = "0x600137F")]
			[Address(RVA = "0x1146050", Offset = "0x1146050", VA = "0x1146050")]
			get
			{
				return default(SectorTagCollectionHierarchy);
			}
		}

		[Token(Token = "0x170003B3")]
		public LocalizationKey LevelEffectSummary
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x114605C", Offset = "0x114605C", VA = "0x114605C")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x170003B4")]
		public virtual string[] LevelBonusDescriptions
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x1146068", Offset = "0x1146068", VA = "0x1146068", Slot = "51")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B5")]
		public virtual LevelFloatValue[] LevelBonusDescriptionsFloat
		{
			[Token(Token = "0x6001382")]
			[Address(RVA = "0x1146070", Offset = "0x1146070", VA = "0x1146070", Slot = "52")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B6")]
		public virtual LocalizationKey[] LevelBonusDescriptionKeys
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0x1146078", Offset = "0x1146078", VA = "0x1146078", Slot = "53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B7")]
		public bool ShowLevelHeaderText
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x1146080", Offset = "0x1146080", VA = "0x1146080")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B8")]
		private string Game.Sector.ISectorAsset.Name
		{
			[Token(Token = "0x6001385")]
			[Address(RVA = "0x1146088", Offset = "0x1146088", VA = "0x1146088", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x1146090", Offset = "0x1146090", VA = "0x1146090")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x114609C", Offset = "0x114609C", VA = "0x114609C", Slot = "54")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8D1020", Offset = "0x8D1020")]
		public virtual void Upgrade()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x11461A0", Offset = "0x11461A0", VA = "0x11461A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8D1058", Offset = "0x8D1058")]
		public void Downgrade()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x11461E0", Offset = "0x11461E0", VA = "0x11461E0", Slot = "55")]
		public virtual string GetState()
		{
			return null;
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x11461E8", Offset = "0x11461E8", VA = "0x11461E8", Slot = "56")]
		public virtual void SetState(string state)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x11461EC", Offset = "0x11461EC", VA = "0x11461EC")]
		public bool CheckTagMatch(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(bool);
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x1146228", Offset = "0x1146228", VA = "0x1146228")]
		public bool CheckTagMatch(SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(bool);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x1146264", Offset = "0x1146264", VA = "0x1146264", Slot = "43")]
		public int GetSelectionWeight(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x11462BC", Offset = "0x11462BC", VA = "0x11462BC", Slot = "44")]
		public int GetSelectionWeight(SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x1146314", Offset = "0x1146314", VA = "0x1146314", Slot = "45")]
		public int GetSelectionPoints(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x114631C", Offset = "0x114631C", VA = "0x114631C", Slot = "46")]
		public int GetSelectionPoints(SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x1146324", Offset = "0x1146324", VA = "0x1146324", Slot = "40")]
		protected override void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x11463F0", Offset = "0x11463F0", VA = "0x11463F0")]
		protected ShipAbilityPassive()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D6")]
	public class AbilityProjectileReferences
	{
		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC3BC", Offset = "0x8BC3BC")]
		public GameObject projectileArt;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SphereCollider projectileCollider;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody body;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] activateObjects;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MagneticProjectile magnetic;

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xEE2CD8", Offset = "0xEE2CD8", VA = "0xEE2CD8")]
		public AbilityProjectileReferences()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public abstract class ShipAbilityProjectile : MonoBehaviour, IProjectile, IBuffable
	{
		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A93E8", Offset = "0x8A93E8")]
		private sealed class <TravelCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400113A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipAbilityProjectile <>4__this;

			[Token(Token = "0x400113B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpaceEntitySteering.SteerPosition steerTarget;

			[Token(Token = "0x400113C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <distance>5__2;

			[Token(Token = "0x400113D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float <launchRotation>5__3;

			[Token(Token = "0x400113E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private float <timeSinceTravelStart>5__4;

			[Token(Token = "0x400113F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float <driftTime>5__5;

			[Token(Token = "0x170003C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013B6")]
				[Address(RVA = "0x1000980", Offset = "0x1000980", VA = "0x1000980", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013B8")]
				[Address(RVA = "0x10009C8", Offset = "0x10009C8", VA = "0x10009C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x1000194", Offset = "0x1000194", VA = "0x1000194")]
			[DebuggerHidden]
			public <TravelCoroutine>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x10001C0", Offset = "0x10001C0", VA = "0x10001C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x10001C4", Offset = "0x10001C4", VA = "0x10001C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x1000988", Offset = "0x1000988", VA = "0x1000988", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC3F4", Offset = "0x8BC3F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC3F4", Offset = "0x8BC3F4")]
		public float moveSpeed;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC454", Offset = "0x8BC454")]
		[SerializeField]
		private float moveSpeedStart;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC4A0", Offset = "0x8BC4A0")]
		public float moveAcceleration;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC4D8", Offset = "0x8BC4D8")]
		public float moveDeceleration;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float moveDriftTime;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float stopDistanceMultiplier;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC530", Offset = "0x8BC530")]
		[SerializeField]
		private float rotationSpeed;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC57C", Offset = "0x8BC57C")]
		[SerializeField]
		private float rotationStart;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC5C8", Offset = "0x8BC5C8")]
		private float rotationAcceleration;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC614", Offset = "0x8BC614")]
		[SerializeField]
		private float breakDistance;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC660", Offset = "0x8BC660")]
		private float lockRotationSecondsAtStart;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC6AC", Offset = "0x8BC6AC")]
		[SerializeField]
		private bool continuousTravelAfterTargetDeath;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC6F8", Offset = "0x8BC6F8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC6F8", Offset = "0x8BC6F8")]
		protected bool lifetimeStartOnDestination;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC768", Offset = "0x8BC768")]
		protected float lifetime;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC7B4", Offset = "0x8BC7B4")]
		[SerializeField]
		protected bool changeProjectileScale;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected float projectileSize;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC810", Offset = "0x8BC810")]
		[SerializeField]
		protected float projectileHealth;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC85C", Offset = "0x8BC85C")]
		[SerializeField]
		private UnityEvent onSetup;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC8A8", Offset = "0x8BC8A8")]
		private readonly IReadOnlyList<SectorTag> <BuffSourceTags>k__BackingField;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC8B8", Offset = "0x8BC8B8")]
		private IDamagable <Owner>k__BackingField;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC8C8", Offset = "0x8BC8C8")]
		private float <ProjectileHealth>k__BackingField;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC8D8", Offset = "0x8BC8D8")]
		private bool <ProjectileDestroyed>k__BackingField;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC8E8", Offset = "0x8BC8E8")]
		private readonly BuffsUtil <Buffs>k__BackingField;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BC8F8", Offset = "0x8BC8F8")]
		[SerializeField]
		protected AbilityProjectileReferences projectileReferences;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected SpaceEntitySteering.SteerPosition steerTarget;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3 startPos;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected IProjectileSource projectileSource;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool isActivated;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float lifeTimeLeft;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float projectileDamage;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool hasSetupHealth;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		private bool hasAddedActive;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		protected bool isReflected;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float currentSpeed;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool isContinuousTravel;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Coroutine travelRoutine;

		[Token(Token = "0x170003B9")]
		public virtual IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xF3DC1C", Offset = "0xF3DC1C", VA = "0xF3DC1C", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1090", Offset = "0x8D1090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BA")]
		public float ProjectileSpeed
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0xF3DC24", Offset = "0xF3DC24", VA = "0xF3DC24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BB")]
		public float ProjectileLifetime
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0xF3DD20", Offset = "0xF3DD20", VA = "0xF3DD20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BC")]
		public Transform Transform
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0xF3DD28", Offset = "0xF3DD28", VA = "0xF3DD28", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BD")]
		public IDamagable Owner
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0xF3DDB0", Offset = "0xF3DDB0", VA = "0xF3DDB0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D10A0", Offset = "0x8D10A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001399")]
			[Address(RVA = "0xF3DDB8", Offset = "0xF3DDB8", VA = "0xF3DDB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D10B0", Offset = "0x8D10B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public float ProjectileHealth
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0xF3DDC8", Offset = "0xF3DDC8", VA = "0xF3DDC8", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D10C0", Offset = "0x8D10C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600139C")]
			[Address(RVA = "0xF3DDD0", Offset = "0xF3DDD0", VA = "0xF3DDD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D10D0", Offset = "0x8D10D0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public bool ProjectileDestroyed
		{
			[Token(Token = "0x600139D")]
			[Address(RVA = "0xF3DDD8", Offset = "0xF3DDD8", VA = "0xF3DDD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D10E0", Offset = "0x8D10E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600139E")]
			[Address(RVA = "0xF3DDE0", Offset = "0xF3DDE0", VA = "0xF3DDE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D10F0", Offset = "0x8D10F0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public bool IsDestroyable
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0xF3DDEC", Offset = "0xF3DDEC", VA = "0xF3DDEC", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C1")]
		public DamageTypeEnum DamageType
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xF3DDF4", Offset = "0xF3DDF4", VA = "0xF3DDF4", Slot = "8")]
			get
			{
				return default(DamageTypeEnum);
			}
		}

		[Token(Token = "0x170003C2")]
		public BuffsUtil Buffs
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xF3DDFC", Offset = "0xF3DDFC", VA = "0xF3DDFC", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1100", Offset = "0x8D1100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C3")]
		public bool IsBuffable
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0xF3DE04", Offset = "0xF3DE04", VA = "0xF3DE04", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xF3DDC0", Offset = "0xF3DDC0", VA = "0xF3DDC0", Slot = "5")]
		public float GetProjectileDamage(DamageTarget target)
		{
			return default(float);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xF3DE0C", Offset = "0xF3DE0C", VA = "0xF3DE0C", Slot = "17")]
		public virtual void Setup(IDamagable owner, SpaceEntitySteering.SteerPosition steerTarget, IProjectileSource projectileSource)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xF3E198", Offset = "0xF3E198", VA = "0xF3E198", Slot = "18")]
		public virtual void Fire()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xF3E2C4", Offset = "0xF3E2C4", VA = "0xF3E2C4", Slot = "11")]
		public void DamageProjectile(IDamagable cause, float damage, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xF3E3F0", Offset = "0xF3E3F0", VA = "0xF3E3F0")]
		public void KillProjectile([System.Runtime.InteropServices.Optional] IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xF3E3C0", Offset = "0xF3E3C0", VA = "0xF3E3C0")]
		private void CheckProjectileHealth([System.Runtime.InteropServices.Optional] IDamagable cause)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xF3E218", Offset = "0xF3E218", VA = "0xF3E218")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D1110", Offset = "0x8D1110")]
		private IEnumerator TravelCoroutine(SpaceEntitySteering.SteerPosition steerTarget)
		{
			return null;
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xF3E424", Offset = "0xF3E424", VA = "0xF3E424", Slot = "19")]
		protected virtual void OnAtDestination()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xF3E5EC", Offset = "0xF3E5EC", VA = "0xF3E5EC")]
		private void InitProjectile()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xF3E720", Offset = "0xF3E720", VA = "0xF3E720", Slot = "20")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xF3E73C", Offset = "0xF3E73C", VA = "0xF3E73C", Slot = "21")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xF3E7B4", Offset = "0xF3E7B4", VA = "0xF3E7B4", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xF3E844", Offset = "0xF3E844", VA = "0xF3E844", Slot = "23")]
		protected virtual void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xF3E8D8", Offset = "0xF3E8D8", VA = "0xF3E8D8", Slot = "24")]
		protected virtual void OnShieldImpact(IForcefield shield)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xF3EA2C", Offset = "0xF3EA2C", VA = "0xF3EA2C", Slot = "25")]
		protected virtual void OnDestruction(IDamagable cause)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xF3EAA4", Offset = "0xF3EAA4", VA = "0xF3EAA4", Slot = "26")]
		protected virtual void Reflect(IForcefield forcefield)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xF3F048", Offset = "0xF3F048", VA = "0xF3F048")]
		protected ShipAbilityProjectile()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public abstract class ShipSlotable : GameMonoBehaviour
	{
		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC934", Offset = "0x8BC934")]
		[SerializeField]
		private LocalizationKey slotableName;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizationKey slotableDescription;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LocalizationKey slotableFlavour;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BC9A0", Offset = "0x8BC9A0")]
		[SerializeField]
		private Sprite slotableIcon;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC9EC", Offset = "0x8BC9EC")]
		[SerializeField]
		private UnityEvent onEquip;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UnityEvent onUnequip;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCA48", Offset = "0x8BCA48")]
		private SpaceShip <Owner>k__BackingField;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCA58", Offset = "0x8BCA58")]
		private bool <Equipped>k__BackingField;

		[Token(Token = "0x170003C6")]
		public LocalizationKey SlotableName
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0xF4D334", Offset = "0xF4D334", VA = "0xF4D334")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x170003C7")]
		public LocalizationKey SlotableDescription
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0xF4D340", Offset = "0xF4D340", VA = "0xF4D340")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x170003C8")]
		public LocalizationKey SlotableFlavour
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0xF4D34C", Offset = "0xF4D34C", VA = "0xF4D34C")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x170003C9")]
		public virtual Sprite SlotableIcon
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0xF4D358", Offset = "0xF4D358", VA = "0xF4D358", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CA")]
		public SpaceShip Owner
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0xF4D360", Offset = "0xF4D360", VA = "0xF4D360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D11C0", Offset = "0x8D11C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0xF4D368", Offset = "0xF4D368", VA = "0xF4D368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D11D0", Offset = "0x8D11D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		public bool Equipped
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0xF4D370", Offset = "0xF4D370", VA = "0xF4D370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D11E0", Offset = "0x8D11E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0xF4D378", Offset = "0xF4D378", VA = "0xF4D378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D11F0", Offset = "0x8D11F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CC")]
		public virtual Type SignatureType
		{
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0xF4D384", Offset = "0xF4D384", VA = "0xF4D384", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004D")]
		public event Action OnEquip
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xF4D38C", Offset = "0xF4D38C", VA = "0xF4D38C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1200", Offset = "0x8D1200")]
			add
			{
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0xF4D42C", Offset = "0xF4D42C", VA = "0xF4D42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1210", Offset = "0x8D1210")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event Action OnUnequip
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0xF4D4CC", Offset = "0xF4D4CC", VA = "0xF4D4CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1220", Offset = "0x8D1220")]
			add
			{
			}
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0xF4D56C", Offset = "0xF4D56C", VA = "0xF4D56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1230", Offset = "0x8D1230")]
			remove
			{
			}
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xF3CE3C", Offset = "0xF3CE3C", VA = "0xF3CE3C")]
		public void EquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xF3D120", Offset = "0xF3D120", VA = "0xF3D120")]
		public void UnequipSlot()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xF4D60C", Offset = "0xF4D60C", VA = "0xF4D60C", Slot = "40")]
		protected virtual void OnEquipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xF3D19C", Offset = "0xF3D19C", VA = "0xF3D19C", Slot = "41")]
		protected virtual void OnUnequipSlot(SpaceShip owner)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xF4D650", Offset = "0xF4D650", VA = "0xF4D650")]
		protected ShipSlotable()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A93F8", Offset = "0x8A93F8")]
	public class ShipSlotableEvents : MonoBehaviour
	{
		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCA88", Offset = "0x8BCA88")]
		private bool onActiveAbilitiesChangedEnabled;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onActiveAbilitiesChanged;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCAF4", Offset = "0x8BCAF4")]
		[SerializeField]
		private bool onPassiveAbilitiesChangedEnabled;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent onPassiveAbilitiesChanged;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCB60", Offset = "0x8BCB60")]
		[SerializeField]
		private bool onFactionChangeEnabled;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent<Faction, Faction> onFactionChange;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCBCC", Offset = "0x8BCBCC")]
		private bool onMaxHealthChangeEnabled;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEvent<float, float> onMaxHealthChange;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCC38", Offset = "0x8BCC38")]
		private bool onHealthChangeEnabled;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UnityEvent<float, float> onHealthChange;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCCA4", Offset = "0x8BCCA4")]
		[SerializeField]
		private bool onMaxShieldChangeEnabled;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private UnityEvent<float, float> onMaxShieldChange;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCD10", Offset = "0x8BCD10")]
		[SerializeField]
		private bool onShieldChangeEnabled;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private UnityEvent<float, float> onShieldChange;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCD7C", Offset = "0x8BCD7C")]
		[SerializeField]
		private bool onCollisionEnabled;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private UnityEvent<Collision> onCollision;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCDE8", Offset = "0x8BCDE8")]
		[SerializeField]
		private bool onDeathEnabled;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UnityEvent<SpaceObject> onDeath;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCE54", Offset = "0x8BCE54")]
		private bool onDestroyEnabled;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private UnityEvent<IDamagable, IReadOnlyList<SectorTag>> onDestroy;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCEC0", Offset = "0x8BCEC0")]
		private bool onReviveEnabled;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private UnityEvent<SpaceObject> onRevive;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private ShipSlotable slotable;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SpaceShip ship;

		[Token(Token = "0x1400004F")]
		public event SpaceShip.AbilityChangeCallback<ShipAbilityActive> OnActiveAbilitiesChanged
		{
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0xF4D658", Offset = "0xF4D658", VA = "0xF4D658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1240", Offset = "0x8D1240")]
			add
			{
			}
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0xF4D6F8", Offset = "0xF4D6F8", VA = "0xF4D6F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1250", Offset = "0x8D1250")]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event SpaceShip.AbilityChangeCallback<ShipAbilityPassive> OnPassiveAbilitiesChanged
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0xF4D798", Offset = "0xF4D798", VA = "0xF4D798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1260", Offset = "0x8D1260")]
			add
			{
			}
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xF4D838", Offset = "0xF4D838", VA = "0xF4D838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1270", Offset = "0x8D1270")]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event IDamagable.FactionChange OnFactionChange
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xF4D8D8", Offset = "0xF4D8D8", VA = "0xF4D8D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1280", Offset = "0x8D1280")]
			add
			{
			}
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xF4D978", Offset = "0xF4D978", VA = "0xF4D978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1290", Offset = "0x8D1290")]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event IDamagable.HealthChange OnMaxHealthChange
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xF4DA18", Offset = "0xF4DA18", VA = "0xF4DA18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D12A0", Offset = "0x8D12A0")]
			add
			{
			}
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xF4DAB8", Offset = "0xF4DAB8", VA = "0xF4DAB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D12B0", Offset = "0x8D12B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event IDamagable.HealthChange OnHealthChange
		{
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xF4DB58", Offset = "0xF4DB58", VA = "0xF4DB58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D12C0", Offset = "0x8D12C0")]
			add
			{
			}
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0xF4DBF8", Offset = "0xF4DBF8", VA = "0xF4DBF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D12D0", Offset = "0x8D12D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event IDamagable.HealthChange OnMaxShieldChange
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xF4DC98", Offset = "0xF4DC98", VA = "0xF4DC98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D12E0", Offset = "0x8D12E0")]
			add
			{
			}
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xF4DD38", Offset = "0xF4DD38", VA = "0xF4DD38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D12F0", Offset = "0x8D12F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event IDamagable.HealthChange OnShieldChange
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xF4DDD8", Offset = "0xF4DDD8", VA = "0xF4DDD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1300", Offset = "0x8D1300")]
			add
			{
			}
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xF4DE78", Offset = "0xF4DE78", VA = "0xF4DE78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1310", Offset = "0x8D1310")]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event Action<Collision> OnCollision
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0xF4DF18", Offset = "0xF4DF18", VA = "0xF4DF18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1320", Offset = "0x8D1320")]
			add
			{
			}
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0xF4DFB8", Offset = "0xF4DFB8", VA = "0xF4DFB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1330", Offset = "0x8D1330")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event Action<SpaceObject> OnDeath
		{
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0xF4E058", Offset = "0xF4E058", VA = "0xF4E058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1340", Offset = "0x8D1340")]
			add
			{
			}
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0xF4E0F8", Offset = "0xF4E0F8", VA = "0xF4E0F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1350", Offset = "0x8D1350")]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event Action<IDamagable, IReadOnlyList<SectorTag>> OnDestroyEvent
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0xF4E198", Offset = "0xF4E198", VA = "0xF4E198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1360", Offset = "0x8D1360")]
			add
			{
			}
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xF4E23C", Offset = "0xF4E23C", VA = "0xF4E23C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1370", Offset = "0x8D1370")]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event Action<SpaceObject> OnRevive
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0xF4E2E0", Offset = "0xF4E2E0", VA = "0xF4E2E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1380", Offset = "0x8D1380")]
			add
			{
			}
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xF4E384", Offset = "0xF4E384", VA = "0xF4E384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1390", Offset = "0x8D1390")]
			remove
			{
			}
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xF4E428", Offset = "0xF4E428", VA = "0xF4E428")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xF4EE74", Offset = "0xF4EE74", VA = "0xF4EE74")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xF4EF64", Offset = "0xF4EF64", VA = "0xF4EF64")]
		private void OnSlotableEquip()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xF4E508", Offset = "0xF4E508", VA = "0xF4E508")]
		private void SetShip(SpaceShip ship)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xF4F008", Offset = "0xF4F008", VA = "0xF4F008")]
		private void ActiveAbilitiesChanged(SpaceShip.AbilityChangeType type, ShipAbilityActive ability)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xF4F090", Offset = "0xF4F090", VA = "0xF4F090")]
		private void PassiveAbilitiesChanged(SpaceShip.AbilityChangeType type, ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xF4F118", Offset = "0xF4F118", VA = "0xF4F118")]
		private void FactionChange(Faction previousFaction, Faction newFaction)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xF4F1A8", Offset = "0xF4F1A8", VA = "0xF4F1A8")]
		private void MaxHealthChange(float previousValue, float newValue)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xF4F238", Offset = "0xF4F238", VA = "0xF4F238")]
		private void HealthChange(float previousValue, float newValue)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xF4F2C8", Offset = "0xF4F2C8", VA = "0xF4F2C8")]
		private void MaxShieldChange(float previousValue, float newValue)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xF4F358", Offset = "0xF4F358", VA = "0xF4F358")]
		private void ShieldChange(float previousValue, float newValue)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xF4F3E8", Offset = "0xF4F3E8", VA = "0xF4F3E8")]
		private void Collision(Collision collision)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xF4F480", Offset = "0xF4F480", VA = "0xF4F480")]
		private void Death(SpaceObject spaceObject)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xF4F518", Offset = "0xF4F518", VA = "0xF4F518")]
		private void Destroy(IDamagable cause, IReadOnlyList<SectorTag> sourceTags)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xF4F5BC", Offset = "0xF4F5BC", VA = "0xF4F5BC")]
		private void Revive(SpaceObject spaceObject)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xF4F654", Offset = "0xF4F654", VA = "0xF4F654")]
		public ShipSlotableEvents()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class ChargeLaserVisuals : MonoBehaviour
	{
		[Token(Token = "0x20002DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9458", Offset = "0x8A9458")]
		private sealed class <DuringAbilityFireEventFlow>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChargeLaserVisuals <>4__this;

			[Token(Token = "0x400118A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <currentAbilityFireTime>5__2;

			[Token(Token = "0x170003CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013FF")]
				[Address(RVA = "0xC64E4C", Offset = "0xC64E4C", VA = "0xC64E4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001401")]
				[Address(RVA = "0xC64E94", Offset = "0xC64E94", VA = "0xC64E94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xC64D64", Offset = "0xC64D64", VA = "0xC64D64")]
			[DebuggerHidden]
			public <DuringAbilityFireEventFlow>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xC64D90", Offset = "0xC64D90", VA = "0xC64D90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xC64D94", Offset = "0xC64D94", VA = "0xC64D94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001400")]
			[Address(RVA = "0xC64E54", Offset = "0xC64E54", VA = "0xC64E54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9468", Offset = "0x8A9468")]
		private sealed class <BeamFadeOutFlow>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400118B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChargeLaserVisuals <>4__this;

			[Token(Token = "0x170003D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001405")]
				[Address(RVA = "0xC64D14", Offset = "0xC64D14", VA = "0xC64D14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001407")]
				[Address(RVA = "0xC64D5C", Offset = "0xC64D5C", VA = "0xC64D5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001402")]
			[Address(RVA = "0xC64AA8", Offset = "0xC64AA8", VA = "0xC64AA8")]
			[DebuggerHidden]
			public <BeamFadeOutFlow>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001403")]
			[Address(RVA = "0xC64AD4", Offset = "0xC64AD4", VA = "0xC64AD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001404")]
			[Address(RVA = "0xC64AD8", Offset = "0xC64AD8", VA = "0xC64AD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001406")]
			[Address(RVA = "0xC64D1C", Offset = "0xC64D1C", VA = "0xC64D1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCF2C", Offset = "0x8BCF2C")]
		private Transform fireVisualTransform;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BCF78", Offset = "0x8BCF78")]
		private Transform startEffectTransform;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform startStaticMeshObject;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 startPositionalOffset;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem[] startParticleSystems;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Renderer startEffectRenderer;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string startEffectMaterialProperty;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationCurve startAnimationCurve;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD024", Offset = "0x8BD024")]
		[SerializeField]
		private Transform endEffectTransform;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform endStaticMeshObject;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Vector3 endPositionalOffset;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ParticleSystem[] endParticleSystems;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Renderer endEffectRenderer;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string endEffectMaterialProperty;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AnimationCurve endAnimationCurve;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD0D0", Offset = "0x8BD0D0")]
		private float fadeOutTime;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BD11C", Offset = "0x8BD11C")]
		private bool useDuringAbilityFireEvents;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float percantageFromAbilityFireTime;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BD178", Offset = "0x8BD178")]
		private UnityEvent duringAbilityFireEvent;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Coroutine abilityFireTimeCoroutine;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material startEffectMaterial;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material endEffectMaterial;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Coroutine fadeOutCoroutine;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float fadeOutProgress;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool materialsIsValid;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public float abilityFireTime;

		[Token(Token = "0x170003CD")]
		public Transform GetFireVisualTransform
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0xFE765C", Offset = "0xFE765C", VA = "0xFE765C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xFE7664", Offset = "0xFE7664", VA = "0xFE7664")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xFE77EC", Offset = "0xFE77EC", VA = "0xFE77EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D13A0", Offset = "0x8D13A0")]
		private IEnumerator DuringAbilityFireEventFlow()
		{
			return null;
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xFE7864", Offset = "0xFE7864", VA = "0xFE7864")]
		public void ShowLaserVisuals()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xFE7B44", Offset = "0xFE7B44", VA = "0xFE7B44")]
		public void HideLaserVisuals()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xFE7940", Offset = "0xFE7940", VA = "0xFE7940")]
		public void LerpChargeLaserVisuals(bool show)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xFE7BC4", Offset = "0xFE7BC4", VA = "0xFE7BC4")]
		public void ChargeLaserBeamSettings(Vector3 startPosition, Quaternion lookRotation, Vector3 laserScale)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xFE7B4C", Offset = "0xFE7B4C", VA = "0xFE7B4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D1400", Offset = "0x8D1400")]
		private IEnumerator BeamFadeOutFlow()
		{
			return null;
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xFE7C64", Offset = "0xFE7C64", VA = "0xFE7C64")]
		public void StartEffectTransformTracking(Vector3 startPosition, Quaternion startRotation)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xFE7CE8", Offset = "0xFE7CE8", VA = "0xFE7CE8")]
		public void EndEffectTransformTracking(Vector3 endPosition, Quaternion endRotation)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xFE7D6C", Offset = "0xFE7D6C", VA = "0xFE7D6C")]
		public ChargeLaserVisuals()
		{
		}
	}
}
namespace Game.Ships.Abilities.Actions
{
	[Token(Token = "0x20002DE")]
	public class BaseDamageDistanceLerpModifierAction : BaseDamageModifierAction
	{
		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 baseDamageMultiplierRange;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 distanceRange;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve distanceCurve;

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xEF87CC", Offset = "0xEF87CC", VA = "0xEF87CC", Slot = "4")]
		public override float ModifyDamage(float baseDamage, ShipAbilityBase source, DamageTarget target)
		{
			return default(float);
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xEF88C0", Offset = "0xEF88C0", VA = "0xEF88C0")]
		public float GetDistanceValue(Vector3 sourcePosition, Vector3 targetPosition)
		{
			return default(float);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xEF8890", Offset = "0xEF8890", VA = "0xEF8890")]
		public float GetMultiplier(Vector3 sourcePosition, Vector3 targetPosition)
		{
			return default(float);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xEF8940", Offset = "0xEF8940", VA = "0xEF8940")]
		public BaseDamageDistanceLerpModifierAction()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class BaseDamageDistanceLerpModifierLaserVisual : MonoBehaviour
	{
		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ShipAbilityActiveContinuousLaserBase laser;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BaseDamageDistanceLerpModifierAction laserDistanceModifier;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float laserDistanceModifierActiveThreshold;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DistanceLerpLaserVisual distanceLaser;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float lastDistanceActiveDamageTime;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool distanceLaserActive;

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xEF89A4", Offset = "0xEF89A4", VA = "0xEF89A4")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xEF8A64", Offset = "0xEF8A64", VA = "0xEF8A64")]
		protected void Update()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xEF8AEC", Offset = "0xEF8AEC", VA = "0xEF8AEC")]
		public void OnLaserDamageDealt(IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xEF89AC", Offset = "0xEF89AC", VA = "0xEF89AC")]
		private void SetDistanceLaserActive(bool active)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xEF8FA4", Offset = "0xEF8FA4", VA = "0xEF8FA4")]
		public BaseDamageDistanceLerpModifierLaserVisual()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public struct DamageTarget
	{
		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IDamagable targetDamagable;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IProjectile targetProjectile;

		[Token(Token = "0x170003D2")]
		public Transform TargetTransform
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0xC4C45C", Offset = "0xC4C45C", VA = "0xC4C45C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D3")]
		public IDamagable TargetOwner
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0xC4C568", Offset = "0xC4C568", VA = "0xC4C568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D4")]
		public bool IsDamagable
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0xC4C558", Offset = "0xC4C558", VA = "0xC4C558")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D5")]
		public bool IsProjectile
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0xC4C628", Offset = "0xC4C628", VA = "0xC4C628")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xC4C638", Offset = "0xC4C638", VA = "0xC4C638")]
		public DamageTarget(IDamagable targetDamagable)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xC4C668", Offset = "0xC4C668", VA = "0xC4C668")]
		public DamageTarget(IProjectile targetProjectile)
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public abstract class BaseDamageModifierAction : MonoBehaviour
	{
		[Token(Token = "0x6001417")]
		public abstract float ModifyDamage(float baseDamage, ShipAbilityBase source, DamageTarget target);

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xFDD6B8", Offset = "0xFDD6B8", VA = "0xFDD6B8")]
		public static float ModifyDamage(IReadOnlyList<BaseDamageModifierAction> modifiers, float baseDamage, ShipAbilityBase source, DamageTarget target)
		{
			return default(float);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xFDD848", Offset = "0xFDD848", VA = "0xFDD848")]
		protected BaseDamageModifierAction()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class DamageDealtHealAction : MonoBehaviour
	{
		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool healWhenDamageHostile;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float damageHostileHealFactor;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool healWhenDamageNeutral;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float damageNeutralHealFactor;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HealTypeEnum healType;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent<float> onHeal;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD294", Offset = "0x8BD294")]
		private List<SectorTag> buffSourceTags;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD2E0", Offset = "0x8BD2E0")]
		private List<SectorTag> buffStatTags;

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xC4AE98", Offset = "0xC4AE98", VA = "0xC4AE98")]
		public void DamageDealtHeal(IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xC4AF1C", Offset = "0xC4AF1C", VA = "0xC4AF1C")]
		private void DamageDealtHeal(IDamagable.DamageInfo damageInfo, float healFactor)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xC4B12C", Offset = "0xC4B12C", VA = "0xC4B12C")]
		public DamageDealtHealAction()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class CurseOfXbiuAction : MonoBehaviour
	{
		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9478", Offset = "0x8A9478")]
		private sealed class <OnReviveOwnerStartTimerOnEnable>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpaceShip ship;

			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RunCountdownAction countdownAction;

			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CurseOfXbiuAction <>4__this;

			[Token(Token = "0x170003D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001432")]
				[Address(RVA = "0xC6C080", Offset = "0xC6C080", VA = "0xC6C080", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001434")]
				[Address(RVA = "0xC6C0C8", Offset = "0xC6C0C8", VA = "0xC6C0C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600142F")]
			[Address(RVA = "0xC6BEBC", Offset = "0xC6BEBC", VA = "0xC6BEBC")]
			[DebuggerHidden]
			public <OnReviveOwnerStartTimerOnEnable>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001430")]
			[Address(RVA = "0xC6BEE8", Offset = "0xC6BEE8", VA = "0xC6BEE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001431")]
			[Address(RVA = "0xC6BEEC", Offset = "0xC6BEEC", VA = "0xC6BEEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001433")]
			[Address(RVA = "0xC6C088", Offset = "0xC6C088", VA = "0xC6C088", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float reviveTimerSecondsModification;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RunCountdownAction countdownAction;

		[Token(Token = "0x1400005A")]
		public static event Action<RunCountdownAction> OnCountdownStartEvent
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0xFF4960", Offset = "0xFF4960", VA = "0xFF4960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1500", Offset = "0x8D1500")]
			add
			{
			}
			[Token(Token = "0x600141E")]
			[Address(RVA = "0xFF4A54", Offset = "0xFF4A54", VA = "0xFF4A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1510", Offset = "0x8D1510")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public static event Action<RunCountdownAction> OnCountdownStopEvent
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0xFF4B48", Offset = "0xFF4B48", VA = "0xFF4B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1520", Offset = "0x8D1520")]
			add
			{
			}
			[Token(Token = "0x6001420")]
			[Address(RVA = "0xFF4C40", Offset = "0xFF4C40", VA = "0xFF4C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1530", Offset = "0x8D1530")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public static event Action<RunCountdownAction> OnCountdownPauseEvent
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0xFF4D38", Offset = "0xFF4D38", VA = "0xFF4D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1540", Offset = "0x8D1540")]
			add
			{
			}
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xFF4E30", Offset = "0xFF4E30", VA = "0xFF4E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1550", Offset = "0x8D1550")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public static event Action<RunCountdownAction> OnCountdownUnpauseEvent
		{
			[Token(Token = "0x6001423")]
			[Address(RVA = "0xFF4F28", Offset = "0xFF4F28", VA = "0xFF4F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1560", Offset = "0x8D1560")]
			add
			{
			}
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xFF5020", Offset = "0xFF5020", VA = "0xFF5020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1570", Offset = "0x8D1570")]
			remove
			{
			}
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xFF5118", Offset = "0xFF5118", VA = "0xFF5118")]
		public void OnCountdownStart(RunCountdownAction countdownAction)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xFF51CC", Offset = "0xFF51CC", VA = "0xFF51CC")]
		public void OnCountdownStop(RunCountdownAction countdownAction)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xFF5260", Offset = "0xFF5260", VA = "0xFF5260")]
		public void OnCountdownPause(RunCountdownAction countdownAction)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xFF52F4", Offset = "0xFF52F4", VA = "0xFF52F4")]
		public void OnCountdownUnpause(RunCountdownAction countdownAction)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xFF5388", Offset = "0xFF5388", VA = "0xFF5388")]
		public void OnCountdownCompleted(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xFF53AC", Offset = "0xFF53AC", VA = "0xFF53AC")]
		public void OnCountdownCancelled()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xFF5470", Offset = "0xFF5470", VA = "0xFF5470")]
		public void OnOwnerDeath(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xFF556C", Offset = "0xFF556C", VA = "0xFF556C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D1580", Offset = "0x8D1580")]
		private IEnumerator OnReviveOwnerStartTimerOnEnable(RunCountdownAction countdownAction, SpaceShip ship)
		{
			return null;
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xFF5614", Offset = "0xFF5614", VA = "0xFF5614")]
		public CurseOfXbiuAction()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class EquipActions : MonoBehaviour
	{
		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ShipAbilityPassive passiveAbility;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD38C", Offset = "0x8BD38C")]
		[SerializeField]
		private SectorTag abilityToEquipTag;

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xC5510C", Offset = "0xC5510C", VA = "0xC5510C")]
		public void UnequipSilently()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xC55220", Offset = "0xC55220", VA = "0xC55220")]
		public void EquipAbility()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xC55300", Offset = "0xC55300", VA = "0xC55300")]
		public EquipActions()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class ForceFireAction : MonoBehaviour
	{
		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float delay;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool triggerOnFire;

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xC5D5C4", Offset = "0xC5D5C4", VA = "0xC5D5C4")]
		public void ForceFireActiveCannon(ShipAbilityActiveCannon abilityActiveCannon)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xC5D5EC", Offset = "0xC5D5EC", VA = "0xC5D5EC")]
		public ForceFireAction()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class GainExperienceAction : MonoBehaviour
	{
		[Token(Token = "0x600143A")]
		[Address(RVA = "0xC5D660", Offset = "0xC5D660", VA = "0xC5D660")]
		public void GainExperience(int experience)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xC5D73C", Offset = "0xC5D73C", VA = "0xC5D73C")]
		public GainExperienceAction()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class HealthIncreaseActions : MonoBehaviour
	{
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float maxHealthBeforeApply;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float currentHealthBeforeApply;

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xE39870", Offset = "0xE39870", VA = "0xE39870")]
		public void OnBeforeApply(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xE398BC", Offset = "0xE398BC", VA = "0xE398BC")]
		public void OnAfterApply(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xE3990C", Offset = "0xE3990C", VA = "0xE3990C")]
		public HealthIncreaseActions()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class MaxUsesIncreasedRechargeAction : MonoBehaviour
	{
		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD3F8", Offset = "0x8BD3F8")]
		[SerializeField]
		private SectorTag abilitySourceTag;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int maxUsesBeforeApply;

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xD61F8C", Offset = "0xD61F8C", VA = "0xD61F8C")]
		public void OnBeforeApply(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xD62374", Offset = "0xD62374", VA = "0xD62374")]
		public void OnAfterApply(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xD623E0", Offset = "0xD623E0", VA = "0xD623E0")]
		public void OnAfterClear(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xD62430", Offset = "0xD62430", VA = "0xD62430")]
		public void RechargeAll(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xD61FD8", Offset = "0xD61FD8", VA = "0xD61FD8")]
		private bool TryGetAbility(SpaceShip owner, out ShipAbilityActive ability)
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xD6247C", Offset = "0xD6247C", VA = "0xD6247C")]
		public MaxUsesIncreasedRechargeAction()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class RefreshSelectorAction : MonoBehaviour
	{
		[Token(Token = "0x6001445")]
		[Address(RVA = "0xCEA3EC", Offset = "0xCEA3EC", VA = "0xCEA3EC")]
		public void UpdateMainSelectorDefaultAction()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xCEA484", Offset = "0xCEA484", VA = "0xCEA484")]
		public void ForceUpdateAbilityMenuVisible()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xCEA51C", Offset = "0xCEA51C", VA = "0xCEA51C")]
		public void EquipFirstAvailableAbility()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xCEA820", Offset = "0xCEA820", VA = "0xCEA820")]
		public RefreshSelectorAction()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class ShieldBoosterActions : MonoBehaviour
	{
		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float maxShieldBeforeApply;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float currentShieldBeforeApply;

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xE1B3AC", Offset = "0xE1B3AC", VA = "0xE1B3AC")]
		public void OnBeforeApply(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xE1B3F8", Offset = "0xE1B3F8", VA = "0xE1B3F8")]
		public void OnAfterApply(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xE1B448", Offset = "0xE1B448", VA = "0xE1B448")]
		public ShieldBoosterActions()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class SpecialChargerAction : MonoBehaviour
	{
		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float[] rechargeLevels;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ShipAbilityPassive passiveAbility;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD464", Offset = "0x8BD464")]
		[SerializeField]
		private float projectileDamageRechargeFactor;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float energyDamageRechargeFactor;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float explosionDamageRechargeFactor;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float collisionDamageRechargeFactor;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD4E0", Offset = "0x8BD4E0")]
		[SerializeField]
		private SfxTrigger onRechargeSfx;

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x150EE34", Offset = "0x150EE34", VA = "0x150EE34")]
		private void Awake()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x150EE68", Offset = "0x150EE68", VA = "0x150EE68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x150EE88", Offset = "0x150EE88", VA = "0x150EE88")]
		public void RechargeSpecialOnDamage(SpaceObject spaceObject, IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x150F354", Offset = "0x150F354", VA = "0x150F354")]
		private float GetRechargeFactor(DamageTypeEnum damageType)
		{
			return default(float);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x150F39C", Offset = "0x150F39C", VA = "0x150F39C")]
		public SpecialChargerAction()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class UseSlotableActions : MonoBehaviour, IAddressableAssetDependency, IAddressableAssetPreload
	{
		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ShipAbilityPassive passiveAbility;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssetReferenceGameObject slotablePrefab;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ShipSlotable slotable;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AddressableAssetDependency<GameObject> slotableAsset;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AddressableAssetDependencies assetDependencies;

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x10B8FB0", Offset = "0x10B8FB0", VA = "0x10B8FB0", Slot = "4")]
		private void Shared.AssetManagement.IAddressableAssetDependency.CollectAddressableDependencies(AddressableAssetDependencies dependencies)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x10B9094", Offset = "0x10B9094", VA = "0x10B9094", Slot = "5")]
		private void Game.GlobalAssets.IAddressableAssetPreload.CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x10B90F8", Offset = "0x10B90F8", VA = "0x10B90F8")]
		public void TryActivate()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x10B9234", Offset = "0x10B9234", VA = "0x10B9234")]
		public void UnequipSlotable()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x10B930C", Offset = "0x10B930C", VA = "0x10B930C")]
		private void EquipSlotable()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x10B9558", Offset = "0x10B9558", VA = "0x10B9558")]
		public UseSlotableActions()
		{
		}
	}
}
namespace Game.Ships.ShipPartMods
{
	[Serializable]
	[Token(Token = "0x20002EE")]
	public class AssignableShipPartMod
	{
		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD54C", Offset = "0x8BD54C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD54C", Offset = "0x8BD54C")]
		public SectorTag targetPart;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD5AC", Offset = "0x8BD5AC")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD5AC", Offset = "0x8BD5AC")]
		public SectorTag visualTag;

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xEF1AFC", Offset = "0xEF1AFC", VA = "0xEF1AFC")]
		public AssignableShipPartMod()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class ColorShipPartModAssigner : ShipPartModAssigner<ColorShipPartModAssigner.Target, ColorShipPartModAssigner.ColorPropertyContainer>
	{
		[Serializable]
		[Token(Token = "0x20002F0")]
		public struct Target
		{
			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Renderer renderer;

			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int materialIndex;

			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string colorPropertyName;

			[Token(Token = "0x170003D8")]
			public Material Material
			{
				[Token(Token = "0x600145B")]
				[Address(RVA = "0xC661E4", Offset = "0xC661E4", VA = "0xC661E4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D9")]
			public Color MaterialColor
			{
				[Token(Token = "0x600145C")]
				[Address(RVA = "0xC661B4", Offset = "0xC661B4", VA = "0xC661B4")]
				get
				{
					return default(Color);
				}
			}

			[Token(Token = "0x600145D")]
			[Address(RVA = "0xC6623C", Offset = "0xC6623C", VA = "0xC6623C")]
			public void SetMaterialColor(Color color)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002F1")]
		public class ColorPropertyContainer
		{
			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color color;

			[Token(Token = "0x600145E")]
			[Address(RVA = "0xC6617C", Offset = "0xC6617C", VA = "0xC6617C")]
			public ColorPropertyContainer(Target target)
			{
			}
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xFE8A30", Offset = "0xFE8A30", VA = "0xFE8A30", Slot = "7")]
		protected override void Apply(Target target, ColorPropertyContainer properties)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xFE8A54", Offset = "0xFE8A54", VA = "0xFE8A54", Slot = "6")]
		protected override ColorPropertyContainer GetCurrentValuesAsPropertyContainer(Target component)
		{
			return null;
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xFE8ACC", Offset = "0xFE8ACC", VA = "0xFE8ACC")]
		public ColorShipPartModAssigner()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class EventShipPartModAssigner : ShipPartModListener
	{
		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD60C", Offset = "0x8BD60C")]
		public SectorTag partTag;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD644", Offset = "0x8BD644")]
		public SectorTag modTag;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isActivated;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnActivated;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnDeactivated;

		[Token(Token = "0x170003DA")]
		public bool IsActivated
		{
			[Token(Token = "0x600145F")]
			[Address(RVA = "0xC59C14", Offset = "0xC59C14", VA = "0xC59C14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001460")]
			[Address(RVA = "0xC59C1C", Offset = "0xC59C1C", VA = "0xC59C1C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xC59C78", Offset = "0xC59C78", VA = "0xC59C78", Slot = "5")]
		protected override void OnPartModsUpdated(List<AssignableShipPartMod> partMods, ShipPartModAssignerHead source)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xC59CB0", Offset = "0xC59CB0", VA = "0xC59CB0")]
		private bool TryGetTagMatch(List<AssignableShipPartMod> partMods)
		{
			return default(bool);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xC59CC4", Offset = "0xC59CC4", VA = "0xC59CC4")]
		public static bool TryGetTagMatch(List<AssignableShipPartMod> partMods, SectorTag partTag, SectorTag modTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xC59EC0", Offset = "0xC59EC0", VA = "0xC59EC0")]
		public EventShipPartModAssigner()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class MaterialFloatShipPartModAssigner : ShipPartModAssigner<MaterialFloatShipPartModAssigner.Target, MaterialFloatShipPartModAssigner.FloatPropertyContainer>
	{
		[Serializable]
		[Token(Token = "0x20002F4")]
		public struct Target
		{
			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Renderer renderer;

			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int materialIndex;

			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string floatPropertyName;

			[Token(Token = "0x170003DB")]
			public Material Material
			{
				[Token(Token = "0x6001468")]
				[Address(RVA = "0xEDB720", Offset = "0xEDB720", VA = "0xEDB720")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DC")]
			public float MaterialFloat
			{
				[Token(Token = "0x6001469")]
				[Address(RVA = "0xEDB6F0", Offset = "0xEDB6F0", VA = "0xEDB6F0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x600146A")]
			[Address(RVA = "0xEDB778", Offset = "0xEDB778", VA = "0xEDB778")]
			public void SetMaterialFloat(float Float)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002F5")]
		public class FloatPropertyContainer
		{
			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Float;

			[Token(Token = "0x600146B")]
			[Address(RVA = "0xEDB6BC", Offset = "0xEDB6BC", VA = "0xEDB6BC")]
			public FloatPropertyContainer(Target target)
			{
			}
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xD61AF4", Offset = "0xD61AF4", VA = "0xD61AF4", Slot = "7")]
		protected override void Apply(Target target, FloatPropertyContainer properties)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xD61B14", Offset = "0xD61B14", VA = "0xD61B14", Slot = "6")]
		protected override FloatPropertyContainer GetCurrentValuesAsPropertyContainer(Target component)
		{
			return null;
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xD61B8C", Offset = "0xD61B8C", VA = "0xD61B8C")]
		public MaterialFloatShipPartModAssigner()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class ModelShipPartModAssigner : ShipPartModAssigner<MeshFilter, ModelShipPartModAssigner.MeshPropertyContainer>
	{
		[Serializable]
		[Token(Token = "0x20002F7")]
		public class MeshPropertyContainer
		{
			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh mesh;

			[Token(Token = "0x600146F")]
			[Address(RVA = "0xEDEAA8", Offset = "0xEDEAA8", VA = "0xEDEAA8")]
			public MeshPropertyContainer(MeshFilter meshFilter)
			{
			}
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x2487020", Offset = "0x2487020", VA = "0x2487020", Slot = "7")]
		protected override void Apply(MeshFilter component, MeshPropertyContainer properties)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x2487048", Offset = "0x2487048", VA = "0x2487048", Slot = "6")]
		protected override MeshPropertyContainer GetCurrentValuesAsPropertyContainer(MeshFilter component)
		{
			return null;
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x24870A8", Offset = "0x24870A8", VA = "0x24870A8")]
		public ModelShipPartModAssigner()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class ParticleShipPartModAssigner : ShipPartModAssigner<ParticleSystem, ParticleShipPartModAssigner.ParticleSystemPropertyContainer>
	{
		[Serializable]
		[Token(Token = "0x20002F9")]
		public class ParticleSystemPropertyContainer
		{
			[Token(Token = "0x6001473")]
			[Address(RVA = "0xD6C7D4", Offset = "0xD6C7D4", VA = "0xD6C7D4")]
			public ParticleSystemPropertyContainer(ParticleSystem particleSystem)
			{
			}
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x2491A04", Offset = "0x2491A04", VA = "0x2491A04", Slot = "7")]
		protected override void Apply(ParticleSystem component, ParticleSystemPropertyContainer properties)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x2491A44", Offset = "0x2491A44", VA = "0x2491A44", Slot = "6")]
		protected override ParticleSystemPropertyContainer GetCurrentValuesAsPropertyContainer(ParticleSystem component)
		{
			return null;
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x2491AA4", Offset = "0x2491AA4", VA = "0x2491AA4")]
		public ParticleShipPartModAssigner()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class PassiveAbilityLevelShipPartModAssigner : ShipPartModListener
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD67C", Offset = "0x8BD67C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD67C", Offset = "0x8BD67C")]
		private SectorTag partTag;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD6EC", Offset = "0x8BD6EC")]
		[SerializeField]
		private SectorTag modTag;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD738", Offset = "0x8BD738")]
		[SerializeField]
		private float[] levelValues;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD784", Offset = "0x8BD784")]
		protected SectorTag abilityTag;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD7D0", Offset = "0x8BD7D0")]
		[SerializeField]
		private UnityEvent<float> onValueUpdated;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SpaceShip spaceShip;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lastUpdatedValue;

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x249284C", Offset = "0x249284C", VA = "0x249284C", Slot = "5")]
		protected override void OnPartModsUpdated(List<AssignableShipPartMod> partMods, ShipPartModAssignerHead source)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x2492C3C", Offset = "0x2492C3C", VA = "0x2492C3C")]
		public PassiveAbilityLevelShipPartModAssigner()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class PassiveAbilityTagRulesShipPartModAssigner : ShipPartModListener
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD81C", Offset = "0x8BD81C")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD81C", Offset = "0x8BD81C")]
		private SectorTag partTag;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD88C", Offset = "0x8BD88C")]
		private SectorTag modTag;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD8D8", Offset = "0x8BD8D8")]
		private float valueNoPassiveAbilities;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float valuePerPassiveAbility;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector2 valuePerPassiveAbilityRange;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SectorTag[] passiveAbilityTags;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BD954", Offset = "0x8BD954")]
		[SerializeField]
		private UnityEvent<float> onValueUpdated;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SpaceShip spaceShip;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lastUpdatedValue;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x2492D20", Offset = "0x2492D20", VA = "0x2492D20", Slot = "5")]
		protected override void OnPartModsUpdated(List<AssignableShipPartMod> partMods, ShipPartModAssignerHead source)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x24930C0", Offset = "0x24930C0", VA = "0x24930C0")]
		public PassiveAbilityTagRulesShipPartModAssigner()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class RemotePlayerShipPartModAssignerHead : ShipPartModAssignerHead
	{
		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpaceShip playerShip;

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xCEA828", Offset = "0xCEA828", VA = "0xCEA828", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xCEA8F0", Offset = "0xCEA8F0", VA = "0xCEA8F0", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xCEA9B8", Offset = "0xCEA9B8", VA = "0xCEA9B8")]
		private void SetPlayerShip(SpaceShip ship)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xCEAA50", Offset = "0xCEAA50", VA = "0xCEAA50")]
		public RemotePlayerShipPartModAssignerHead()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public abstract class ShipPartModAssigner<ComponentType, PropertyContainer> : ShipPartModListener
	{
		[Serializable]
		[Token(Token = "0x20002FE")]
		public class VisualPart
		{
			[Token(Token = "0x40011E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD9A0", Offset = "0x8BD9A0")]
			public SectorTag partTag;

			[Token(Token = "0x40011EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ComponentType[] components;

			[Token(Token = "0x6001486")]
			public VisualPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002FF")]
		public class VisualChange
		{
			[Token(Token = "0x40011EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BD9D8", Offset = "0x8BD9D8")]
			public SectorTag visualTag;

			[Token(Token = "0x40011EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PropertyContainer properties;

			[Token(Token = "0x6001487")]
			public VisualChange()
			{
			}
		}

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<VisualPart> parts;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<VisualChange> changes;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<SectorTag, VisualPart> partDict;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<SectorTag, VisualChange> changeDict;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, PropertyContainer> initialValueDict;

		[Token(Token = "0x600147D")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600147E")]
		protected override void OnPartModsUpdated(List<AssignableShipPartMod> partMods, ShipPartModAssignerHead source)
		{
		}

		[Token(Token = "0x600147F")]
		private void PopulateDicts()
		{
		}

		[Token(Token = "0x6001480")]
		private void StoreInitialValues()
		{
		}

		[Token(Token = "0x6001481")]
		private void RestoreInitialValues()
		{
		}

		[Token(Token = "0x6001482")]
		private void ApplyVisualStack(List<AssignableShipPartMod> assignableVisualStack)
		{
		}

		[Token(Token = "0x6001483")]
		protected abstract PropertyContainer GetCurrentValuesAsPropertyContainer(ComponentType component);

		[Token(Token = "0x6001484")]
		protected abstract void Apply(ComponentType component, PropertyContainer properties);

		[Token(Token = "0x6001485")]
		protected ShipPartModAssigner()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class ShipPartModAssignerHead : MonoBehaviour
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<AssignableShipPartMod> activePartMods;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ShipPartModAssignerHead parent;

		[Token(Token = "0x170003DD")]
		public ShipPartModAssignerHead Parent
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0xF4B1EC", Offset = "0xF4B1EC", VA = "0xF4B1EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001489")]
			[Address(RVA = "0xF45630", Offset = "0xF45630", VA = "0xF45630")]
			set
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event Action<List<AssignableShipPartMod>, ShipPartModAssignerHead> OnUpdatePartMods
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0xF4B334", Offset = "0xF4B334", VA = "0xF4B334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1630", Offset = "0x8D1630")]
			add
			{
			}
			[Token(Token = "0x600148B")]
			[Address(RVA = "0xF4B1F4", Offset = "0xF4B1F4", VA = "0xF4B1F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1640", Offset = "0x8D1640")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		public event Action OnDestroyed
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0xF4B3D4", Offset = "0xF4B3D4", VA = "0xF4B3D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1650", Offset = "0x8D1650")]
			add
			{
			}
			[Token(Token = "0x600148D")]
			[Address(RVA = "0xF4B294", Offset = "0xF4B294", VA = "0xF4B294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1660", Offset = "0x8D1660")]
			remove
			{
			}
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xF4B4FC", Offset = "0xF4B4FC", VA = "0xF4B4FC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xF4B500", Offset = "0xF4B500", VA = "0xF4B500", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xF4B504", Offset = "0xF4B504", VA = "0xF4B504", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xF4B474", Offset = "0xF4B474", VA = "0xF4B474")]
		public void TriggerUpdatePartMods(List<AssignableShipPartMod> partMods, ShipPartModAssignerHead source)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xF4B538", Offset = "0xF4B538", VA = "0xF4B538")]
		public static bool TryTriggerUpdatePartMods(Component component, ShipPartModAssignerHead source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xF4B5E0", Offset = "0xF4B5E0", VA = "0xF4B5E0")]
		public static bool TryTriggerUpdatePartMods(GameObject gameObject, ShipPartModAssignerHead source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xF4B6B4", Offset = "0xF4B6B4", VA = "0xF4B6B4")]
		public static bool TrySetPartModParent(Component component, ShipPartModAssignerHead parent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xF4B75C", Offset = "0xF4B75C", VA = "0xF4B75C")]
		public static bool TrySetPartModParent(GameObject gameObject, ShipPartModAssignerHead parent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xF4B828", Offset = "0xF4B828", VA = "0xF4B828")]
		private void Cleanup()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xF4B858", Offset = "0xF4B858", VA = "0xF4B858")]
		public ShipPartModAssignerHead()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A9488", Offset = "0x8A9488")]
	public abstract class ShipPartModListener : MonoBehaviour
	{
		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDA40", Offset = "0x8BDA40")]
		private ShipPartModAssignerHead <Head>k__BackingField;

		[Token(Token = "0x170003DE")]
		public ShipPartModAssignerHead Head
		{
			[Token(Token = "0x6001498")]
			[Address(RVA = "0xF4B860", Offset = "0xF4B860", VA = "0xF4B860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1670", Offset = "0x8D1670")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001499")]
			[Address(RVA = "0xF4B868", Offset = "0xF4B868", VA = "0xF4B868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1680", Offset = "0x8D1680")]
			private set
			{
			}
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xF4B870", Offset = "0xF4B870", VA = "0xF4B870", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xF4B874", Offset = "0xF4B874", VA = "0xF4B874")]
		private void SubscribeToHead()
		{
		}

		[Token(Token = "0x600149C")]
		protected abstract void OnPartModsUpdated(List<AssignableShipPartMod> partMods, ShipPartModAssignerHead source);

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xF4B9D4", Offset = "0xF4B9D4", VA = "0xF4B9D4")]
		protected ShipPartModListener()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class TrailShipPartModAssigner : ShipPartModAssigner<TrailRenderer, TrailShipPartModAssigner.TrailPropertyContainer>
	{
		[Serializable]
		[Token(Token = "0x2000303")]
		public class TrailPropertyContainer
		{
			[Token(Token = "0x40011F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float length;

			[Token(Token = "0x60014A1")]
			[Address(RVA = "0xEA1858", Offset = "0xEA1858", VA = "0xEA1858")]
			public TrailPropertyContainer(TrailRenderer trailRenderer)
			{
			}
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xF3695C", Offset = "0xF3695C", VA = "0xF3695C", Slot = "7")]
		protected override void Apply(TrailRenderer component, TrailPropertyContainer properties)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xF36984", Offset = "0xF36984", VA = "0xF36984", Slot = "6")]
		protected override TrailPropertyContainer GetCurrentValuesAsPropertyContainer(TrailRenderer component)
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xF369E4", Offset = "0xF369E4", VA = "0xF369E4")]
		public TrailShipPartModAssigner()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class TransformShipPartModAssigner : ShipPartModAssigner<Transform, TransformShipPartModAssigner.TransformPropertyContainer>
	{
		[Serializable]
		[Token(Token = "0x2000305")]
		public class TransformPropertyContainer
		{
			[Token(Token = "0x40011F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 localPosition;

			[Token(Token = "0x40011F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 localScale;

			[Token(Token = "0x40011F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool applyLocalValues;

			[Token(Token = "0x40011F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float scaleMultiplier;

			[Token(Token = "0x60014A5")]
			[Address(RVA = "0xEA1A90", Offset = "0xEA1A90", VA = "0xEA1A90")]
			public TransformPropertyContainer(Transform transform)
			{
			}
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xF36EA4", Offset = "0xF36EA4", VA = "0xF36EA4", Slot = "7")]
		protected override void Apply(Transform component, TransformPropertyContainer properties)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xF36F2C", Offset = "0xF36F2C", VA = "0xF36F2C", Slot = "6")]
		protected override TransformPropertyContainer GetCurrentValuesAsPropertyContainer(Transform component)
		{
			return null;
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xF36F8C", Offset = "0xF36F8C", VA = "0xF36F8C")]
		public TransformShipPartModAssigner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000306")]
	public class ShipVisuals
	{
		[Token(Token = "0x2000307")]
		public enum VisualFlag
		{
			[Token(Token = "0x40011FD")]
			Thruster_Flame_Color,
			[Token(Token = "0x40011FE")]
			Bullet_Color,
			[Token(Token = "0x40011FF")]
			Bullet_Scale
		}

		[Serializable]
		[Token(Token = "0x2000308")]
		public class BodyVisuals
		{
			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject model;

			[Token(Token = "0x60014A7")]
			[Address(RVA = "0x1001B5C", Offset = "0x1001B5C", VA = "0x1001B5C")]
			public BodyVisuals()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000309")]
		public class ThrusterVisuals
		{
			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color flameColor;

			[Token(Token = "0x60014A8")]
			[Address(RVA = "0x1001B84", Offset = "0x1001B84", VA = "0x1001B84")]
			public ThrusterVisuals()
			{
			}
		}

		[Token(Token = "0x200030A")]
		public class WeaponVisuals
		{
			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Renderer renderer;

			[Token(Token = "0x4001203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float scale;

			[Token(Token = "0x4001204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Color color;

			[Token(Token = "0x4001205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioClip sound;

			[Token(Token = "0x60014A9")]
			[Address(RVA = "0x1001B6C", Offset = "0x1001B6C", VA = "0x1001B6C")]
			public WeaponVisuals()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200030B")]
		public class BulletVisuals : WeaponVisuals
		{
			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float trailLength;

			[Token(Token = "0x60014AA")]
			[Address(RVA = "0x1001B64", Offset = "0x1001B64", VA = "0x1001B64")]
			public BulletVisuals()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200030C")]
		public class LaserVisuals : WeaponVisuals
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0x1001B74", Offset = "0x1001B74", VA = "0x1001B74")]
			public LaserVisuals()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200030D")]
		public class MissileVisuals : WeaponVisuals
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0x1001B7C", Offset = "0x1001B7C", VA = "0x1001B7C")]
			public MissileVisuals()
			{
			}
		}

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BodyVisuals body;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ThrusterVisuals thrusters;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BulletVisuals bullets;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LaserVisuals laser;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MissileVisuals missiles;

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xF4FAF8", Offset = "0xF4FAF8", VA = "0xF4FAF8")]
		public ShipVisuals()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class ShipVisualProfile : ScriptableObject
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShipVisuals shipVisuals;

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xF4FAF0", Offset = "0xF4FAF0", VA = "0xF4FAF0")]
		public ShipVisualProfile()
		{
		}
	}
}
namespace Game.Ships.Buffs
{
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A94E8", Offset = "0x8A94E8")]
	public class AbilityGainBuffObject : BuffObject
	{
		[Token(Token = "0x2000310")]
		public enum AbilityType
		{
			[Token(Token = "0x400120F")]
			Ability,
			[Token(Token = "0x4001210")]
			Defect
		}

		[Token(Token = "0x2000311")]
		protected class AbilityGainBuffInstance : BuffBase
		{
			[Token(Token = "0x4001211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			protected readonly AbilityType passiveAbilityType;

			[Token(Token = "0x4001212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			protected readonly SectorTag passiveAbilityCategory;

			[Token(Token = "0x4001213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			protected readonly SectorTag passiveAbilityTag;

			[Token(Token = "0x4001214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			protected readonly int passiveAbilityAmount;

			[Token(Token = "0x4001215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			protected readonly int passiveAbilityLevel;

			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			protected readonly float passiveAbilityDelay;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			private float giveAbilityStartTime;

			[Token(Token = "0x60014B0")]
			[Address(RVA = "0xE03D88", Offset = "0xE03D88", VA = "0xE03D88")]
			public AbilityGainBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, AbilityType passiveAbilityType, SectorTag passiveAbilityCategory, SectorTag passiveAbilityTag, int passiveAbilityAmount, int passiveAbilityLevel, float passiveAbilityDelay)
			{
			}

			[Token(Token = "0x60014B1")]
			[Address(RVA = "0xE03E38", Offset = "0xE03E38", VA = "0xE03E38", Slot = "5")]
			protected override void OnAssign()
			{
			}

			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xE03F80", Offset = "0xE03F80", VA = "0xE03F80", Slot = "6")]
			protected override void OnReAssign()
			{
			}

			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xE03FCC", Offset = "0xE03FCC", VA = "0xE03FCC", Slot = "4")]
			public override void Tick(float delta)
			{
			}

			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xE03E84", Offset = "0xE03E84", VA = "0xE03E84")]
			private void GiveAbilities()
			{
			}

			[Token(Token = "0x60014B5")]
			[Address(RVA = "0xE04034", Offset = "0xE04034", VA = "0xE04034")]
			private void GiveAbility(SpaceShip ship)
			{
			}
		}

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AbilityType passiveAbilityType;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SectorTag passiveAbilityCategory;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BDA70", Offset = "0x8BDA70")]
		[SerializeField]
		private SectorTag passiveAbilityTag;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int passiveAbilityAmount;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDACC", Offset = "0x8BDACC")]
		[SerializeField]
		private int passiveAbilityLevel;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float passiveAbilityDelay;

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xEE29AC", Offset = "0xEE29AC", VA = "0xEE29AC", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xEE2A80", Offset = "0xEE2A80", VA = "0xEE2A80")]
		public AbilityGainBuffObject()
		{
		}
	}
	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9554", Offset = "0x8A9554")]
	public class BasicStatBuffObject : BuffObject
	{
		[Token(Token = "0x2000313")]
		public enum ApplyMode
		{
			[Token(Token = "0x400121E")]
			Add,
			[Token(Token = "0x400121F")]
			Multiply,
			[Token(Token = "0x4001220")]
			MultiplyAdditive,
			[Token(Token = "0x4001221")]
			MultiplyBaseAdditive,
			[Token(Token = "0x4001222")]
			Set
		}

		[Token(Token = "0x2000314")]
		protected class BasicBuffInstance : TimedBuffBase
		{
			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			protected readonly SectorTag targetSource;

			[Token(Token = "0x4001224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			protected readonly SectorTag targetStat;

			[Token(Token = "0x4001225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			protected readonly float modifier;

			[Token(Token = "0x4001226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			protected readonly ApplyMode applyMode;

			[Token(Token = "0x170003DF")]
			protected virtual float Modifier
			{
				[Token(Token = "0x60014BB")]
				[Address(RVA = "0xC626E0", Offset = "0xC626E0", VA = "0xC626E0", Slot = "13")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60014BA")]
			[Address(RVA = "0xC62658", Offset = "0xC62658", VA = "0xC62658")]
			public BasicBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, float modifier, ApplyMode applyMode, SectorTag targetSource, SectorTag targetStat, float timeLeftFull)
			{
			}

			[Token(Token = "0x60014BC")]
			[Address(RVA = "0xC626E8", Offset = "0xC626E8", VA = "0xC626E8", Slot = "8")]
			public override bool AppliesToSource(SectorTag source)
			{
				return default(bool);
			}

			[Token(Token = "0x60014BD")]
			[Address(RVA = "0xC627BC", Offset = "0xC627BC", VA = "0xC627BC", Slot = "9")]
			public override bool AppliesToStat(SectorTag statTag)
			{
				return default(bool);
			}

			[Token(Token = "0x60014BE")]
			[Address(RVA = "0xC626FC", Offset = "0xC626FC", VA = "0xC626FC")]
			protected bool TargetAppliesToTag(SectorTag targetTag, SectorTag testedTag)
			{
				return default(bool);
			}

			[Token(Token = "0x60014BF")]
			[Address(RVA = "0xC627D0", Offset = "0xC627D0", VA = "0xC627D0", Slot = "10")]
			public override void ApplyToValue(float baseValue, ref float outputValue, Transform target)
			{
			}
		}

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BDB28", Offset = "0x8BDB28")]
		public SectorTag targetSource;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BDB60", Offset = "0x8BDB60")]
		public SectorTag statTag;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float modifier;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDBA8", Offset = "0x8BDBA8")]
		[SerializeField]
		protected ApplyMode applyMode;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected float timeLeftFull;

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xFDD850", Offset = "0xFDD850", VA = "0xFDD850")]
		public static BuffBase CreateBuffInstance(float modifier, ApplyMode applyMode, SectorTag targetSource, SectorTag targetStat, [System.Runtime.InteropServices.Optional] GameObject effectPrefab, int hashId = 0, bool syncToGlobal = false, float timeLeftFull = -1f)
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xFDD924", Offset = "0xFDD924", VA = "0xFDD924", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xFDD9F4", Offset = "0xFDD9F4", VA = "0xFDD9F4")]
		public static bool TargetAppliesToTagCategory(SectorTag target, SectorTag testedTag)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xFDDB3C", Offset = "0xFDDB3C", VA = "0xFDDB3C")]
		public BasicStatBuffObject()
		{
		}
	}
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A95C0", Offset = "0x8A95C0")]
	public class BooleanBuffObject : BuffObject
	{
		[Token(Token = "0x2000316")]
		public class BooleanBuffInstance : TimedBuffBase
		{
			[Token(Token = "0x400122A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			protected readonly SectorTag targetSource;

			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			protected readonly SectorTag targetStat;

			[Token(Token = "0x60014C2")]
			[Address(RVA = "0xC62D38", Offset = "0xC62D38", VA = "0xC62D38")]
			public BooleanBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, SectorTag targetSource, SectorTag targetStat, float timeLeftFull)
			{
			}

			[Token(Token = "0x60014C3")]
			[Address(RVA = "0xC62DA4", Offset = "0xC62DA4", VA = "0xC62DA4", Slot = "8")]
			public override bool AppliesToSource(SectorTag source)
			{
				return default(bool);
			}

			[Token(Token = "0x60014C4")]
			[Address(RVA = "0xC62E78", Offset = "0xC62E78", VA = "0xC62E78", Slot = "9")]
			public override bool AppliesToStat(SectorTag statTag)
			{
				return default(bool);
			}

			[Token(Token = "0x60014C5")]
			[Address(RVA = "0xC62DB8", Offset = "0xC62DB8", VA = "0xC62DB8")]
			protected bool TargetAppliesToTag(SectorTag targetTag, SectorTag testedTag)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BDC04", Offset = "0x8BDC04")]
		public SectorTag targetSource;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BDC3C", Offset = "0x8BDC3C")]
		public SectorTag statTag;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float timeLeftFull;

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xFDF0CC", Offset = "0xFDF0CC", VA = "0xFDF0CC", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xFDF188", Offset = "0xFDF188", VA = "0xFDF188")]
		public BooleanBuffObject()
		{
		}
	}
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A962C", Offset = "0x8A962C")]
	public class BuffApplierBuff : BuffObject
	{
		[Token(Token = "0x2000318")]
		protected class BuffApplierBuffInstance : BuffBase
		{
			[Token(Token = "0x4001231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			protected readonly SectorTag targetSource;

			[Token(Token = "0x4001232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			protected readonly BuffObject[] buffsToApply;

			[Token(Token = "0x4001233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			protected readonly bool onlyAppliedSources;

			[Token(Token = "0x4001234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			protected readonly float applyChance;

			[Token(Token = "0x4001235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			protected readonly bool applyChanceModifiable;

			[Token(Token = "0x4001236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private List<BuffBase> assignedBuffs;

			[Token(Token = "0x60014C9")]
			[Address(RVA = "0xC62E8C", Offset = "0xC62E8C", VA = "0xC62E8C")]
			public BuffApplierBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, SectorTag targetSource, BuffObject[] buffsToApply, bool onlyAppliedSources, float applyChance, bool applyChanceModifiable)
			{
			}

			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xC62F1C", Offset = "0xC62F1C", VA = "0xC62F1C", Slot = "8")]
			public override bool AppliesToSource(SectorTag source)
			{
				return default(bool);
			}

			[Token(Token = "0x60014CB")]
			[Address(RVA = "0xC62FF0", Offset = "0xC62FF0", VA = "0xC62FF0", Slot = "11")]
			public override void ApplyToTarget(IBuffable target)
			{
			}

			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xC62F30", Offset = "0xC62F30", VA = "0xC62F30")]
			protected bool TargetAppliesToTag(SectorTag targetTag, SectorTag testedTag)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BDC84", Offset = "0x8BDC84")]
		public SectorTag targetSource;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BuffObject[] buffsToApply;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool onlyAppliedSources;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float applyChance;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool applyChanceModifiable;

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xFDF198", Offset = "0xFDF198", VA = "0xFDF198", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xFDF268", Offset = "0xFDF268", VA = "0xFDF268")]
		public static bool CheckChance(float chance, bool canModifyChance, IBuffable owner, SectorTag probabilityTag)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xFDF3B8", Offset = "0xFDF3B8", VA = "0xFDF3B8")]
		public BuffApplierBuff()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class BuffEffectEvents : MonoBehaviour
	{
		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool lookAtBuffOrigin;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onInterval;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onAssign;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onReAssign;

		[Token(Token = "0x170003E0")]
		public bool LookAtBuffOrigin
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xFE05E8", Offset = "0xFE05E8", VA = "0xFE05E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xFE05F0", Offset = "0xFE05F0", VA = "0xFE05F0")]
		public void TriggerOnInterval()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xFDFF00", Offset = "0xFDFF00", VA = "0xFDFF00")]
		public void TriggerOnAssign()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xFE01A4", Offset = "0xFE01A4", VA = "0xFE01A4")]
		public void TriggerOnReAssign()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xFDF780", Offset = "0xFDF780", VA = "0xFDF780")]
		public void LookAtPosition(Vector3 position)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xFE0604", Offset = "0xFE0604", VA = "0xFE0604")]
		public BuffEffectEvents()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public abstract class BuffObject : TechTreeActivationObjectBase
	{
		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDCFC", Offset = "0x8BDCFC")]
		[SerializeField]
		private GameObject effectPrefab;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDD48", Offset = "0x8BDD48")]
		[SerializeField]
		private bool syncToGlobal;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDD94", Offset = "0x8BDD94")]
		private int <Id>k__BackingField;

		[Token(Token = "0x170003E1")]
		protected GameObject EffectPrefab
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xFE060C", Offset = "0xFE060C", VA = "0xFE060C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E2")]
		protected bool SyncToGlobal
		{
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xFE0614", Offset = "0xFE0614", VA = "0xFE0614")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E3")]
		public int Id
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0xFE061C", Offset = "0xFE061C", VA = "0xFE061C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1690", Offset = "0x8D1690")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0xFE0624", Offset = "0xFE0624", VA = "0xFE0624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D16A0", Offset = "0x8D16A0")]
			private set
			{
			}
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xFE062C", Offset = "0xFE062C", VA = "0xFE062C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xFE0668", Offset = "0xFE0668", VA = "0xFE0668")]
		public bool TryAssignBuff(IBuffable target, int sectors, out BuffBase assignedBuff, IBuffable origin)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xFE0A9C", Offset = "0xFE0A9C", VA = "0xFE0A9C")]
		public bool TryAssignBuff(IBuffable target, int sectors, out BuffBase assignedBuff, SpaceEntitySteering.SteerPosition originPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xFE0800", Offset = "0xFE0800", VA = "0xFE0800")]
		public bool TryAssignBuff(IBuffable target, int sectors, out BuffBase assignedBuff, [System.Runtime.InteropServices.Optional] IBuffable origin, [System.Runtime.InteropServices.Optional] SpaceEntitySteering.SteerPosition originPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DB")]
		public abstract BuffBase GetBuff();

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xFE0C18", Offset = "0xFE0C18", VA = "0xFE0C18", Slot = "7")]
		public override void OnTechFetch(object collection)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xFE0CF0", Offset = "0xFE0CF0", VA = "0xFE0CF0")]
		public static bool AppliesToSource(BuffObject buffObject, IReadOnlyList<SectorTag> sourceTags)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xFDDB54", Offset = "0xFDDB54", VA = "0xFDDB54")]
		protected BuffObject()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public abstract class BuffBase
	{
		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GameObject effectPrefab;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected GameObject effectObj;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected IBuffable owner;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected IDamagable ownerDamagable;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IProjectile ownerProjectile;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform ownerTransform;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IBuffable origin;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SpaceEntitySteering.SteerPosition originPosition;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int endingSector;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected bool autoDissable;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		protected bool activated;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		protected bool abilityActivated;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BuffEffectEvents buffEffectEvents;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Action<BuffBase> onRemove;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDDA4", Offset = "0x8BDDA4")]
		private int <Id>k__BackingField;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDDB4", Offset = "0x8BDDB4")]
		private bool <SyncToGlobal>k__BackingField;

		[Token(Token = "0x170003E4")]
		public int Id
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0xFDF424", Offset = "0xFDF424", VA = "0xFDF424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D16B0", Offset = "0x8D16B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0xFDF42C", Offset = "0xFDF42C", VA = "0xFDF42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D16C0", Offset = "0x8D16C0")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E5")]
		public bool SyncToGlobal
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xFDF434", Offset = "0xFDF434", VA = "0xFDF434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D16D0", Offset = "0x8D16D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0xFDF43C", Offset = "0xFDF43C", VA = "0xFDF43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D16E0", Offset = "0x8D16E0")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public bool IsActive
		{
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xFDF448", Offset = "0xFDF448", VA = "0xFDF448")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E7")]
		public IBuffable Owner
		{
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0xFDF450", Offset = "0xFDF450", VA = "0xFDF450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E8")]
		public GameObject EffectObject
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0xFDF458", Offset = "0xFDF458", VA = "0xFDF458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E9")]
		public BuffEffectEvents BuffEffectEvents
		{
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0xFDF460", Offset = "0xFDF460", VA = "0xFDF460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xFDF3D0", Offset = "0xFDF3D0", VA = "0xFDF3D0")]
		public BuffBase(GameObject effectPrefab, int hashId, bool syncToGlobal)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xFDF468", Offset = "0xFDF468", VA = "0xFDF468", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xFDF470", Offset = "0xFDF470", VA = "0xFDF470", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xFDF5E4", Offset = "0xFDF5E4", VA = "0xFDF5E4", Slot = "4")]
		public virtual void Tick(float delta)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xFDF99C", Offset = "0xFDF99C", VA = "0xFDF99C")]
		public void Assign(IBuffable owner, int sectors = 0, [System.Runtime.InteropServices.Optional] IBuffable origin, [System.Runtime.InteropServices.Optional] SpaceEntitySteering.SteerPosition originPosition)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xFE0058", Offset = "0xFE0058", VA = "0xFE0058")]
		public void ReAssign(int sectors = 0, [System.Runtime.InteropServices.Optional] IBuffable origin, [System.Runtime.InteropServices.Optional] SpaceEntitySteering.SteerPosition originPosition)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xFDF820", Offset = "0xFDF820", VA = "0xFDF820")]
		public void Remove()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xFE0228", Offset = "0xFE0228", VA = "0xFE0228", Slot = "5")]
		protected virtual void OnAssign()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xFE022C", Offset = "0xFE022C", VA = "0xFE022C", Slot = "6")]
		protected virtual void OnReAssign()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xFE0230", Offset = "0xFE0230", VA = "0xFE0230", Slot = "7")]
		protected virtual void OnRemove()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xFE0234", Offset = "0xFE0234", VA = "0xFE0234", Slot = "8")]
		public virtual bool AppliesToSource(SectorTag sourceTag)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xFE023C", Offset = "0xFE023C", VA = "0xFE023C")]
		public bool AppliesToSource(IReadOnlyList<SectorTag> sourceTags)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xFE0454", Offset = "0xFE0454", VA = "0xFE0454", Slot = "9")]
		public virtual bool AppliesToStat(SectorTag statTag)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xFE045C", Offset = "0xFE045C", VA = "0xFE045C")]
		public bool AppliesToStat(IReadOnlyList<SectorTag> buffStatTags)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xFE05D4", Offset = "0xFE05D4", VA = "0xFE05D4", Slot = "10")]
		public virtual void ApplyToValue(float baseValue, ref float outputValue, Transform target)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xFE05D8", Offset = "0xFE05D8", VA = "0xFE05D8", Slot = "11")]
		public virtual void ApplyToTarget(IBuffable target)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xFE05DC", Offset = "0xFE05DC", VA = "0xFE05DC", Slot = "12")]
		public virtual void SetAbilityActivationStatus(bool abilityActivated)
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class BuffsGlobal : MonoBehaviourSingleton<BuffsGlobal>, IBuffable
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDDC4", Offset = "0x8BDDC4")]
		private readonly BuffsUtil <Buffs>k__BackingField;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, List<BuffObject>> buffGroupStartBuffs;

		[Token(Token = "0x170003EA")]
		public IReadOnlyList<SectorTag> BuffSourceTags
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0xFE2D34", Offset = "0xFE2D34", VA = "0xFE2D34", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EB")]
		public BuffsUtil Buffs
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0xFE2D98", Offset = "0xFE2D98", VA = "0xFE2D98", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D16F0", Offset = "0x8D16F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EC")]
		public bool IsBuffable
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0xFE2DA0", Offset = "0xFE2DA0", VA = "0xFE2DA0", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003ED")]
		public Transform Transform
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xFE2DA8", Offset = "0xFE2DA8", VA = "0xFE2DA8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xFE2DB0", Offset = "0xFE2DB0", VA = "0xFE2DB0")]
		public void AddBuffGroupStartBuff(string group, BuffObject buff)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xFE2EC4", Offset = "0xFE2EC4", VA = "0xFE2EC4")]
		public bool RemoveBuffGroupStartBuff(string group, BuffObject buff)
		{
			return default(bool);
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xFE2F78", Offset = "0xFE2F78", VA = "0xFE2F78")]
		public void AssignBuffGroupStartBuffs(string group, IBuffable target)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xFE309C", Offset = "0xFE309C", VA = "0xFE309C")]
		public BuffsGlobal()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class BuffsUtil
	{
		[Serializable]
		[Token(Token = "0x200031E")]
		public struct PermanentStatBuff
		{
			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float modifier;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public BasicStatBuffObject.ApplyMode mode;

			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SectorTag targetSource;

			[Token(Token = "0x400125E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorTag targetStat;

			[Token(Token = "0x400125F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool syncToGlobal;
		}

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDDD4", Offset = "0x8BDDD4")]
		private bool <SyncBuffsToGlobal>k__BackingField;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<BuffBase> buffs;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IBuffable parent;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<PermanentStatBuff> permanentStatBuffs;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<BuffBase> PooledBuffList;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<SectorTag> PooledSectorTagList;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDE14", Offset = "0x8BDE14")]
		private bool <InvulnerableBuff>k__BackingField;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDE24", Offset = "0x8BDE24")]
		private bool <HideHealthbar>k__BackingField;

		[Token(Token = "0x170003EE")]
		public IReadOnlyList<BuffBase> Buffs
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0xFE3270", Offset = "0xFE3270", VA = "0xFE3270")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EF")]
		public bool SyncBuffsToGlobal
		{
			[Token(Token = "0x6001501")]
			[Address(RVA = "0xFE3278", Offset = "0xFE3278", VA = "0xFE3278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1700", Offset = "0x8D1700")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001502")]
			[Address(RVA = "0xFE3280", Offset = "0xFE3280", VA = "0xFE3280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1710", Offset = "0x8D1710")]
			set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public IReadOnlyList<PermanentStatBuff> PermanentStatBuffs
		{
			[Token(Token = "0x6001509")]
			[Address(RVA = "0xFE364C", Offset = "0xFE364C", VA = "0xFE364C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F1")]
		public IBuffable Parent
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0xFE3654", Offset = "0xFE3654", VA = "0xFE3654")]
			get
			{
				return null;
			}
			[Token(Token = "0x600150B")]
			[Address(RVA = "0xFE365C", Offset = "0xFE365C", VA = "0xFE365C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F2")]
		public bool InvulnerableBuff
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0xFE5FEC", Offset = "0xFE5FEC", VA = "0xFE5FEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1780", Offset = "0x8D1780")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600152A")]
			[Address(RVA = "0xFE5FF4", Offset = "0xFE5FF4", VA = "0xFE5FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1790", Offset = "0x8D1790")]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		public bool HideHealthbar
		{
			[Token(Token = "0x600152B")]
			[Address(RVA = "0xFE6000", Offset = "0xFE6000", VA = "0xFE6000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D17A0", Offset = "0x8D17A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600152C")]
			[Address(RVA = "0xFE6008", Offset = "0xFE6008", VA = "0xFE6008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D17B0", Offset = "0x8D17B0")]
			set
			{
			}
		}

		[Token(Token = "0x14000060")]
		public event Action<BuffBase> OnBuffAdded
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0xFE328C", Offset = "0xFE328C", VA = "0xFE328C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1720", Offset = "0x8D1720")]
			add
			{
			}
			[Token(Token = "0x6001504")]
			[Address(RVA = "0xFE332C", Offset = "0xFE332C", VA = "0xFE332C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1730", Offset = "0x8D1730")]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		public event Action<BuffBase> OnBuffRemoved
		{
			[Token(Token = "0x6001505")]
			[Address(RVA = "0xFE33CC", Offset = "0xFE33CC", VA = "0xFE33CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1740", Offset = "0x8D1740")]
			add
			{
			}
			[Token(Token = "0x6001506")]
			[Address(RVA = "0xFE346C", Offset = "0xFE346C", VA = "0xFE346C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1750", Offset = "0x8D1750")]
			remove
			{
			}
		}

		[Token(Token = "0x14000062")]
		public event Action OnBuffsChanged
		{
			[Token(Token = "0x6001507")]
			[Address(RVA = "0xFE350C", Offset = "0xFE350C", VA = "0xFE350C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1760", Offset = "0x8D1760")]
			add
			{
			}
			[Token(Token = "0x6001508")]
			[Address(RVA = "0xFE35AC", Offset = "0xFE35AC", VA = "0xFE35AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1770", Offset = "0x8D1770")]
			remove
			{
			}
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xFDFF14", Offset = "0xFDFF14", VA = "0xFDFF14")]
		public void Add(BuffBase buff)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xFE01B8", Offset = "0xFE01B8", VA = "0xFE01B8")]
		public void Remove(BuffBase buff)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xFE3664", Offset = "0xFE3664", VA = "0xFE3664")]
		private void RemoveAt(int buffIndex)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xFE3818", Offset = "0xFE3818", VA = "0xFE3818")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xFE0ADC", Offset = "0xFE0ADC", VA = "0xFE0ADC")]
		public bool Contains(int buffId, out BuffBase currentBuff)
		{
			return default(bool);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xFE3A18", Offset = "0xFE3A18", VA = "0xFE3A18")]
		public void Tick(float delta)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xFE3B24", Offset = "0xFE3B24", VA = "0xFE3B24")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xFE3B38", Offset = "0xFE3B38", VA = "0xFE3B38")]
		public void AddPermanentStatBuff(PermanentStatBuff permanentStatBuff)
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xFE3BC8", Offset = "0xFE3BC8", VA = "0xFE3BC8")]
		public static int GetBuffedValue(int baseValue, IBuffable owner, SectorTag sourceTag, SectorTag statTag, [System.Runtime.InteropServices.Optional] Transform target)
		{
			return default(int);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xFE3D2C", Offset = "0xFE3D2C", VA = "0xFE3D2C")]
		public static int GetBuffedValue(int baseValue, IBuffable owner, SectorTag sourceTag, IReadOnlyList<SectorTag> buffStatTags, [System.Runtime.InteropServices.Optional] Transform target)
		{
			return default(int);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xFE3C78", Offset = "0xFE3C78", VA = "0xFE3C78")]
		public static float GetBuffedValue(float baseValue, IBuffable owner, SectorTag sourceTag, SectorTag statTag, [System.Runtime.InteropServices.Optional] Transform target)
		{
			return default(float);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xFE3EC8", Offset = "0xFE3EC8", VA = "0xFE3EC8")]
		private static float GetBuffedValue(float baseValue, float startOutputValue, IBuffable owner, SectorTag sourceTag, SectorTag statTag, [System.Runtime.InteropServices.Optional] Transform target)
		{
			return default(float);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xFE40D0", Offset = "0xFE40D0", VA = "0xFE40D0")]
		private static void GetBuffedValue(float baseValue, ref float outputValue, IBuffable owner, SectorTag sourceTag, SectorTag statTag, Transform target, HashSet<BuffBase> handledBuffs)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xFE4504", Offset = "0xFE4504", VA = "0xFE4504")]
		public static int GetBuffedValue(int baseValue, IBuffable owner, IReadOnlyList<SectorTag> sourceTags, SectorTag statTag, [System.Runtime.InteropServices.Optional] Transform target)
		{
			return default(int);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xFE45AC", Offset = "0xFE45AC", VA = "0xFE45AC")]
		public static int GetBuffedValue(int baseValue, IBuffable owner, IReadOnlyList<SectorTag> sourceTags, IReadOnlyList<SectorTag> buffStatTags, [System.Runtime.InteropServices.Optional] Transform target)
		{
			return default(int);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xFDDF28", Offset = "0xFDDF28", VA = "0xFDDF28")]
		public static float GetBuffedValue(float baseValue, IBuffable owner, IReadOnlyList<SectorTag> sourceTags, SectorTag statTag, [System.Runtime.InteropServices.Optional] Transform target)
		{
			return default(float);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xFE4644", Offset = "0xFE4644", VA = "0xFE4644")]
		public static float GetBuffedValue(float baseValue, IBuffable owner, IReadOnlyList<SectorTag> sourceTags, SectorTag statTag, IReadOnlyList<SectorTag> buffStatTags, [System.Runtime.InteropServices.Optional] Transform target)
		{
			return default(float);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xFE3E2C", Offset = "0xFE3E2C", VA = "0xFE3E2C")]
		public static float GetBuffedValue(float baseValue, IBuffable owner, IReadOnlyList<SectorTag> sourceTags, IReadOnlyList<SectorTag> buffStatTags, [System.Runtime.InteropServices.Optional] Transform target)
		{
			return default(float);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xFE4788", Offset = "0xFE4788", VA = "0xFE4788")]
		private static float GetBuffedValue(float baseValue, float startOutputValue, IBuffable owner, IReadOnlyList<SectorTag> sourceTags, IReadOnlyList<SectorTag> buffStatTags, [System.Runtime.InteropServices.Optional] Transform target)
		{
			return default(float);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xFE4970", Offset = "0xFE4970", VA = "0xFE4970")]
		private static void GetBuffedValue(float baseValue, ref float outputValue, IBuffable owner, IReadOnlyList<SectorTag> sourceTags, IReadOnlyList<SectorTag> buffStatTags, Transform target, HashSet<BuffBase> handledBuffs)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xFE4D80", Offset = "0xFE4D80", VA = "0xFE4D80")]
		public static void ApplyBuffs(IBuffable owner, IReadOnlyList<SectorTag> sourceTags, IBuffable target)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xFE4F28", Offset = "0xFE4F28", VA = "0xFE4F28")]
		private static void ApplyBuffs(IBuffable owner, IReadOnlyList<SectorTag> sourceTags, IBuffable target, HashSet<BuffBase> handledBuffs)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xFE5314", Offset = "0xFE5314", VA = "0xFE5314")]
		public static void SetAbilityActivationStatus(IBuffable owner, IReadOnlyList<SectorTag> sourceTags, bool abilityActivated)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xFE54BC", Offset = "0xFE54BC", VA = "0xFE54BC")]
		private static void SetAbilityActivationStatus(IBuffable owner, IReadOnlyList<SectorTag> sourceTags, bool abilityActivated, HashSet<BuffBase> handledBuffs)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xFE5844", Offset = "0xFE5844", VA = "0xFE5844")]
		public static bool GetIsBuffed(IBuffable owner, SectorTag sourceTag, SectorTag statTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xFE58EC", Offset = "0xFE58EC", VA = "0xFE58EC")]
		public static bool GetIsBuffed(IBuffable owner, SectorTag sourceTag, SectorTag statTag, out BuffBase matchingBuff)
		{
			return default(bool);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xFDDE90", Offset = "0xFDDE90", VA = "0xFDDE90")]
		public static bool GetIsBuffed(IBuffable owner, IReadOnlyList<SectorTag> sourceTags, SectorTag statTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xFE59E4", Offset = "0xFE59E4", VA = "0xFE59E4")]
		public static bool GetIsBuffed(IBuffable owner, IReadOnlyList<SectorTag> sourceTags, SectorTag statTag, out BuffBase matchingBuff)
		{
			return default(bool);
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xFE5BCC", Offset = "0xFE5BCC", VA = "0xFE5BCC")]
		private static bool GetIsBuffed(IBuffable owner, IReadOnlyList<SectorTag> sourceTags, SectorTag statTag, HashSet<BuffBase> handledBuffs, out BuffBase matchingBuff)
		{
			return default(bool);
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xFE31A0", Offset = "0xFE31A0", VA = "0xFE31A0")]
		public BuffsUtil()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class ChainLaserBuffEffect : MonoBehaviour
	{
		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LaserVisual[] laserVisuals;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool[] laserVisualsShowing;

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xFE6D00", Offset = "0xFE6D00", VA = "0xFE6D00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xFE6D68", Offset = "0xFE6D68", VA = "0xFE6D68")]
		public void ShowLaserVisual(int index, Transform start, Transform end)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xFE6F14", Offset = "0xFE6F14", VA = "0xFE6F14")]
		public void ShowAndHideLaserVisuals(Transform[] transforms)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xFE707C", Offset = "0xFE707C", VA = "0xFE707C")]
		public void ShowAndHideLaserVisuals(IReadOnlyList<IBuffable> buffables)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xFE6FD4", Offset = "0xFE6FD4", VA = "0xFE6FD4")]
		public void HideLaserVisual(int index)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xFE7374", Offset = "0xFE7374", VA = "0xFE7374")]
		public void HideAllLaserVisuals()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xFE73C4", Offset = "0xFE73C4", VA = "0xFE73C4")]
		public ChainLaserBuffEffect()
		{
		}
	}
	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9698", Offset = "0x8A9698")]
	public class ChainLaserBuffObject : BuffObject
	{
		[Token(Token = "0x2000321")]
		public class ChainLaserBuffInstance : BuffBase
		{
			[Token(Token = "0x4001267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			protected readonly SectorTag targetSource;

			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			protected readonly int chainTargetsCount;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			protected readonly float maxDistanceBetweenTargets;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			protected readonly float chainLaserDamageFactor;

			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			protected readonly bool prioritizeHostileTargets;

			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int physicsOverlapCollidersCount;

			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private readonly Collider[] physicsOverlapBuffer;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private ShipAbilityActiveContinuousLaser laserAbility;

			[Token(Token = "0x400126F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private ChainLaserBuffEffect chainLaserBuffEffect;

			[Token(Token = "0x4001270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private int chainLaserBuffEffectCount;

			[Token(Token = "0x4001271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private Faction ownerFaction;

			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private List<IBuffable> chainBuffables;

			[Token(Token = "0x170003F4")]
			private float MaxDistanceBetweenTargetsSqr
			{
				[Token(Token = "0x6001539")]
				[Address(RVA = "0xC6343C", Offset = "0xC6343C", VA = "0xC6343C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003F5")]
			private float TargetSearchRadius
			{
				[Token(Token = "0x600153A")]
				[Address(RVA = "0xC63448", Offset = "0xC63448", VA = "0xC63448")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003F6")]
			private int SearchTargetCount
			{
				[Token(Token = "0x600153B")]
				[Address(RVA = "0xC63434", Offset = "0xC63434", VA = "0xC63434")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001538")]
			[Address(RVA = "0xC63304", Offset = "0xC63304", VA = "0xC63304")]
			public ChainLaserBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, SectorTag targetSource, int chainTargetsCount, float maxDistanceBetweenTargets, float chainLaserDamageFactor, bool prioritizeHostileTargets)
			{
			}

			[Token(Token = "0x600153C")]
			[Address(RVA = "0xC63458", Offset = "0xC63458", VA = "0xC63458", Slot = "8")]
			public override bool AppliesToSource(SectorTag sourceTag)
			{
				return default(bool);
			}

			[Token(Token = "0x600153D")]
			[Address(RVA = "0xC634DC", Offset = "0xC634DC", VA = "0xC634DC", Slot = "11")]
			public override void ApplyToTarget(IBuffable targetBuffable)
			{
			}

			[Token(Token = "0x600153E")]
			[Address(RVA = "0xC63DEC", Offset = "0xC63DEC", VA = "0xC63DEC", Slot = "12")]
			public override void SetAbilityActivationStatus(bool abilityActivated)
			{
			}

			[Token(Token = "0x600153F")]
			[Address(RVA = "0xC63EBC", Offset = "0xC63EBC", VA = "0xC63EBC", Slot = "5")]
			protected override void OnAssign()
			{
			}

			[Token(Token = "0x6001540")]
			[Address(RVA = "0xC637BC", Offset = "0xC637BC", VA = "0xC637BC")]
			private void FillPhysicsOverlapBuffer(Transform originTransform)
			{
			}

			[Token(Token = "0x6001541")]
			[Address(RVA = "0xC63894", Offset = "0xC63894", VA = "0xC63894")]
			private IBuffable GetBuffableClosestToTargetBuffable(IBuffable targetBuffable, List<IBuffable> excludedBuffables)
			{
				return null;
			}

			[Token(Token = "0x6001542")]
			[Address(RVA = "0xC63B18", Offset = "0xC63B18", VA = "0xC63B18")]
			private void DealDamage(IBuffable buffable)
			{
			}

			[Token(Token = "0x6001543")]
			[Address(RVA = "0xC63D2C", Offset = "0xC63D2C", VA = "0xC63D2C")]
			private void TryShowLaserVisuals(List<IBuffable> chainBuffables, int thresholdCount = -1)
			{
			}

			[Token(Token = "0x6001544")]
			[Address(RVA = "0xC63E04", Offset = "0xC63E04", VA = "0xC63E04")]
			private void TryHideLaserVisuals(int thresholdCount = -1)
			{
			}

			[Token(Token = "0x6001545")]
			[Address(RVA = "0xC636C0", Offset = "0xC636C0", VA = "0xC636C0")]
			private bool TryEnsureLaserAbility()
			{
				return default(bool);
			}

			[Token(Token = "0x6001546")]
			[Address(RVA = "0xC6468C", Offset = "0xC6468C", VA = "0xC6468C")]
			private bool TryGetLaserAbility(out ShipAbilityActive laserAbility)
			{
				return default(bool);
			}

			[Token(Token = "0x6001547")]
			[Address(RVA = "0xC63F8C", Offset = "0xC63F8C", VA = "0xC63F8C")]
			private bool CheckBuffableValidChainTarget(IBuffable buffable, List<IBuffable> excludedBuffables, bool onlyHostileTargets)
			{
				return default(bool);
			}

			[Token(Token = "0x6001548")]
			[Address(RVA = "0xC64490", Offset = "0xC64490", VA = "0xC64490")]
			private bool CheckBuffableIsHostile(IBuffable buffable)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BDE44", Offset = "0x8BDE44")]
		public SectorTag targetSource;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int chainTargetsCount;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxDistanceBetweenTargets;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float chainLaserDamageFactor;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool prioritizeHostileTargets;

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xFE73CC", Offset = "0xFE73CC", VA = "0xFE73CC", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xFE7490", Offset = "0xFE7490", VA = "0xFE7490")]
		public ChainLaserBuffObject()
		{
		}
	}
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9704", Offset = "0x8A9704")]
	public class DistanceDependentStatBuffObject : BasicStatBuffObject
	{
		[Token(Token = "0x2000323")]
		private class Instance : BasicBuffInstance
		{
			[Token(Token = "0x4001274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private readonly float minDistance;

			[Token(Token = "0x4001275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			private readonly float maxDistance;

			[Token(Token = "0x600154B")]
			[Address(RVA = "0xC6D594", Offset = "0xC6D594", VA = "0xC6D594")]
			public Instance(GameObject effectPrefab, int hashId, bool syncToGlobal, float modifier, ApplyMode applyMode, SectorTag targetSource, SectorTag targetStat, Vector2 rangeMinMax, float timeLeftFull)
			{
			}

			[Token(Token = "0x600154C")]
			[Address(RVA = "0xC6D5E0", Offset = "0xC6D5E0", VA = "0xC6D5E0", Slot = "10")]
			public override void ApplyToValue(float baseValue, ref float outputValue, Transform target)
			{
			}
		}

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDE7C", Offset = "0x8BDE7C")]
		public Vector2 rangeMinMax;

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xC4F878", Offset = "0xC4F878", VA = "0xC4F878", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xC4F95C", Offset = "0xC4F95C", VA = "0xC4F95C")]
		public DistanceDependentStatBuffObject()
		{
		}
	}
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9770", Offset = "0x8A9770")]
	public class EmptyTimedBuffObject : BuffObject
	{
		[Token(Token = "0x2000325")]
		protected class EmptyTimedBuffInstance : TimedBuffBase
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0xC6DA28", Offset = "0xC6DA28", VA = "0xC6DA28")]
			public EmptyTimedBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, float timeLeftFull)
			{
			}
		}

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float timeLeftFull;

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xC527FC", Offset = "0xC527FC", VA = "0xC527FC", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xC52888", Offset = "0xC52888", VA = "0xC52888")]
		public EmptyTimedBuffObject()
		{
		}
	}
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A97DC", Offset = "0x8A97DC")]
	public class HealthDamageAndPushInstantBuffObject : HealthDamageInstantBuffObject
	{
		[Token(Token = "0x2000327")]
		protected class HealthDamageAndPushBuffInstance : HealthDamageBuffInstance
		{
			[Token(Token = "0x4001279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			protected readonly Vector2 pushForceRange;

			[Token(Token = "0x400127A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			protected readonly ForceMode pushForceMode;

			[Token(Token = "0x6001552")]
			[Address(RVA = "0xED3D3C", Offset = "0xED3D3C", VA = "0xED3D3C")]
			public HealthDamageAndPushBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, float damage, DamageTypeEnum damageType, List<SectorTag> buffSourceTags, bool bypassShield, Vector2 pushForceRange, ForceMode pushForceMode)
			{
			}

			[Token(Token = "0x6001553")]
			[Address(RVA = "0xED3E30", Offset = "0xED3E30", VA = "0xED3E30", Slot = "13")]
			protected override void Damage()
			{
			}
		}

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BDEC4", Offset = "0x8BDEC4")]
		[SerializeField]
		private Vector2 pushForceRange;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private ForceMode pushForceMode;

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xE39500", Offset = "0xE39500", VA = "0xE39500", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xE395D8", Offset = "0xE395D8", VA = "0xE395D8")]
		public HealthDamageAndPushInstantBuffObject()
		{
		}
	}
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9848", Offset = "0x8A9848")]
	public class HealthDamageInstantBuffObject : BuffObject
	{
		[Token(Token = "0x2000329")]
		protected class HealthDamageBuffInstance : BuffBase
		{
			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			protected readonly float damage;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			protected readonly DamageTypeEnum damageType;

			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			protected List<SectorTag> buffSourceTags;

			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			protected readonly bool bypassShield;

			[Token(Token = "0x6001556")]
			[Address(RVA = "0xED3DC8", Offset = "0xED3DC8", VA = "0xED3DC8")]
			public HealthDamageBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, float damage, DamageTypeEnum damageType, List<SectorTag> buffSourceTags, bool bypassShield)
			{
			}

			[Token(Token = "0x6001557")]
			[Address(RVA = "0xED4244", Offset = "0xED4244", VA = "0xED4244", Slot = "5")]
			protected override void OnAssign()
			{
			}

			[Token(Token = "0x6001558")]
			[Address(RVA = "0xED4278", Offset = "0xED4278", VA = "0xED4278", Slot = "6")]
			protected override void OnReAssign()
			{
			}

			[Token(Token = "0x6001559")]
			[Address(RVA = "0xED4020", Offset = "0xED4020", VA = "0xED4020", Slot = "13")]
			protected virtual void Damage()
			{
			}
		}

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BDF20", Offset = "0x8BDF20")]
		[SerializeField]
		protected float damage;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected DamageTypeEnum damageType;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BDF7C", Offset = "0x8BDF7C")]
		[SerializeField]
		protected List<SectorTag> buffSourceTags;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool bypassShield;

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xE39628", Offset = "0xE39628", VA = "0xE39628", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xE39614", Offset = "0xE39614", VA = "0xE39614")]
		public HealthDamageInstantBuffObject()
		{
		}
	}
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A98B4", Offset = "0x8A98B4")]
	public class HealthDrainBuffObject : BuffObject
	{
		[Token(Token = "0x200032B")]
		protected class HealthDrainBuffInstance : TimedBuffBase
		{
			[Token(Token = "0x4001289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			protected readonly bool drainShield;

			[Token(Token = "0x400128A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
			protected readonly bool drainHealth;

			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			protected readonly float drainAmount;

			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			protected readonly float drainInterval;

			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			protected readonly float drainTimeLeftFull;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			protected readonly List<SectorTag> buffSourceTags;

			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private float drainTimer;

			[Token(Token = "0x600155C")]
			[Address(RVA = "0xED42AC", Offset = "0xED42AC", VA = "0xED42AC")]
			public HealthDrainBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, bool drainShield, bool drainHealth, float drainAmount, float drainInterval, float drainTimeLeftFull, List<SectorTag> buffSourceTags)
			{
			}

			[Token(Token = "0x600155D")]
			[Address(RVA = "0xED431C", Offset = "0xED431C", VA = "0xED431C", Slot = "4")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool drainShield;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool drainHealth;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float drainAmount;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float drainInterval;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float drainTimeLeftFull;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BE028", Offset = "0x8BE028")]
		protected List<SectorTag> buffSourceTags;

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xE396DC", Offset = "0xE396DC", VA = "0xE396DC", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xE397A4", Offset = "0xE397A4", VA = "0xE397A4")]
		public HealthDrainBuffObject()
		{
		}
	}
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9920", Offset = "0x8A9920")]
	public class HealthGainInstantBuffObject : BuffObject
	{
		[Token(Token = "0x200032D")]
		protected class HealthDrainBuffInstance : BuffBase
		{
			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			protected readonly float gainShield;

			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			protected readonly float gainShieldPerc;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			protected readonly float gainHealth;

			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			protected readonly float gainHealthPerc;

			[Token(Token = "0x6001560")]
			[Address(RVA = "0xED476C", Offset = "0xED476C", VA = "0xED476C")]
			public HealthDrainBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, float gainShield, float gainShieldPerc, float gainHealth, float gainHealthPerc)
			{
			}

			[Token(Token = "0x6001561")]
			[Address(RVA = "0xED47BC", Offset = "0xED47BC", VA = "0xED47BC", Slot = "5")]
			protected override void OnAssign()
			{
			}

			[Token(Token = "0x6001562")]
			[Address(RVA = "0xED4C08", Offset = "0xED4C08", VA = "0xED4C08", Slot = "6")]
			protected override void OnReAssign()
			{
			}

			[Token(Token = "0x6001563")]
			[Address(RVA = "0xED47E4", Offset = "0xED47E4", VA = "0xED47E4")]
			private void Heal()
			{
			}
		}

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float gainShield;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float gainShieldPerc;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float gainHealth;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float gainHealthPerc;

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xE397C4", Offset = "0xE397C4", VA = "0xE397C4", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xE39868", Offset = "0xE39868", VA = "0xE39868")]
		public HealthGainInstantBuffObject()
		{
		}
	}
	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A998C", Offset = "0x8A998C")]
	public class HealthThresholdStatBuffObject : BasicStatBuffObject
	{
		[Token(Token = "0x200032F")]
		private class Instance : BasicBuffInstance
		{
			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private readonly float healthThresholdMin;

			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			private readonly float healthThresholdMax;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private readonly bool applyWhenShield;

			[Token(Token = "0x6001566")]
			[Address(RVA = "0xED4C30", Offset = "0xED4C30", VA = "0xED4C30")]
			public Instance(GameObject effectPrefab, int hashId, bool syncToGlobal, float modifier, ApplyMode applyMode, SectorTag targetSource, SectorTag targetStat, Vector2 healthThresholdMinMax, bool applyWhenShield, float timeLeftFull)
			{
			}

			[Token(Token = "0x6001567")]
			[Address(RVA = "0xED4C8C", Offset = "0xED4C8C", VA = "0xED4C8C", Slot = "10")]
			public override void ApplyToValue(float baseValue, ref float outputValue, Transform target)
			{
			}
		}

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector2 healthThresholdMinMax;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool applyWhenShield;

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xE39914", Offset = "0xE39914", VA = "0xE39914", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xE39A00", Offset = "0xE39A00", VA = "0xE39A00")]
		public HealthThresholdStatBuffObject()
		{
		}
	}
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A99F8", Offset = "0x8A99F8")]
	public class InvulnerableBuff : BuffObject
	{
		[Token(Token = "0x2000331")]
		private class Instance : BuffBase
		{
			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
			private bool hideHealthbar;

			[Token(Token = "0x600156A")]
			[Address(RVA = "0xED6740", Offset = "0xED6740", VA = "0xED6740")]
			public Instance(bool hideHealthbar, GameObject effectPrefab, int hashId, bool syncToGlobal)
			{
			}

			[Token(Token = "0x600156B")]
			[Address(RVA = "0xED6780", Offset = "0xED6780", VA = "0xED6780", Slot = "5")]
			protected override void OnAssign()
			{
			}

			[Token(Token = "0x600156C")]
			[Address(RVA = "0xED68CC", Offset = "0xED68CC", VA = "0xED68CC", Slot = "7")]
			protected override void OnRemove()
			{
			}
		}

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool hideHealthbar;

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xD55204", Offset = "0xD55204", VA = "0xD55204", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xD55290", Offset = "0xD55290", VA = "0xD55290")]
		public InvulnerableBuff()
		{
		}
	}
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9A64", Offset = "0x8A9A64")]
	public class OnShieldBreakBuffApplierBuffObject : BuffObject
	{
		[Token(Token = "0x2000333")]
		public class OnShieldBreakBuffInstance : BuffBase
		{
			[Token(Token = "0x40012A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE0FC", Offset = "0x8BE0FC")]
			private UnityEvent <OnShieldBreakEvent>k__BackingField;

			[Token(Token = "0x40012A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			protected readonly BuffObject[] buffsToApplyOwner;

			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			protected readonly BuffObject[] buffsToApplyHostiles;

			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			protected readonly float applyChance;

			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			protected readonly bool applyChanceModifiable;

			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			protected readonly int limitedAppliesPerSector;

			[Token(Token = "0x40012AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			protected readonly float applyCooldown;

			[Token(Token = "0x40012AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int appliesCountThisSector;

			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private float lastApplyTime;

			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private List<BuffBase> assignedBuffs;

			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private List<SpaceShip> hostileShips;

			[Token(Token = "0x170003F7")]
			public UnityEvent OnShieldBreakEvent
			{
				[Token(Token = "0x600156F")]
				[Address(RVA = "0xEE0C6C", Offset = "0xEE0C6C", VA = "0xEE0C6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D17C0", Offset = "0x8D17C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001570")]
				[Address(RVA = "0xEE0C74", Offset = "0xEE0C74", VA = "0xEE0C74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D17D0", Offset = "0x8D17D0")]
				set
				{
				}
			}

			[Token(Token = "0x6001571")]
			[Address(RVA = "0xEE0C7C", Offset = "0xEE0C7C", VA = "0xEE0C7C")]
			public OnShieldBreakBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, BuffObject[] buffsToApplyOwner, BuffObject[] buffsToApplyHostiles, float triggerChance, bool applyChanceModifiable, int limitedAppliesPerSector, float applyCooldown)
			{
			}

			[Token(Token = "0x6001572")]
			[Address(RVA = "0xEE0D08", Offset = "0xEE0D08", VA = "0xEE0D08", Slot = "5")]
			protected override void OnAssign()
			{
			}

			[Token(Token = "0x6001573")]
			[Address(RVA = "0xEE0E94", Offset = "0xEE0E94", VA = "0xEE0E94", Slot = "7")]
			protected override void OnRemove()
			{
			}

			[Token(Token = "0x6001574")]
			[Address(RVA = "0xEE1020", Offset = "0xEE1020", VA = "0xEE1020")]
			private void OnSectorLoaded(SectorTagsInput tags)
			{
			}

			[Token(Token = "0x6001575")]
			[Address(RVA = "0xEE1028", Offset = "0xEE1028", VA = "0xEE1028")]
			private void CheckShieldBreak(float previousShield, float newShield)
			{
			}
		}

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BE0C4", Offset = "0x8BE0C4")]
		public BuffObject[] buffsToApplyOwner;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BuffObject[] buffsToApplyHostiles;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float applyChance;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool applyChanceModifiable;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int limitedAppliesPerSector;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float applyCooldown;

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x2491760", Offset = "0x2491760", VA = "0x2491760", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x2491828", Offset = "0x2491828", VA = "0x2491828")]
		public OnShieldBreakBuffApplierBuffObject()
		{
		}
	}
	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9AD0", Offset = "0x8A9AD0")]
	public class OutOfCombatBuffObject : BasicStatBuffObject
	{
		[Token(Token = "0x2000335")]
		protected class OutOfCombatBuffInstance : BasicBuffInstance
		{
			[Token(Token = "0x170003F8")]
			private static bool IsOutOfCombat
			{
				[Token(Token = "0x6001579")]
				[Address(RVA = "0xD6C60C", Offset = "0xD6C60C", VA = "0xD6C60C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001578")]
			[Address(RVA = "0xD6C5F8", Offset = "0xD6C5F8", VA = "0xD6C5F8")]
			public OutOfCombatBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, float modifier, ApplyMode applyMode, SectorTag targetSource, SectorTag targetStat, float timeLeftFull)
			{
			}

			[Token(Token = "0x600157A")]
			[Address(RVA = "0xD6C76C", Offset = "0xD6C76C", VA = "0xD6C76C", Slot = "10")]
			public override void ApplyToValue(float baseValue, ref float outputValue, Transform target)
			{
			}
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x2491898", Offset = "0x2491898", VA = "0x2491898", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x2491968", Offset = "0x2491968", VA = "0x2491968")]
		public OutOfCombatBuffObject()
		{
		}
	}
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9B3C", Offset = "0x8A9B3C")]
	public class PassiveAbilityTagRulesStatBuffObject : BasicStatBuffObject
	{
		[Token(Token = "0x2000337")]
		private class Instance : BasicBuffInstance
		{
			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private SectorTag[] tags;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private float modifierPerPassiveAbility;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private Vector2 modifierPerPassiveAbilityRange;

			[Token(Token = "0x170003F9")]
			protected override float Modifier
			{
				[Token(Token = "0x600157F")]
				[Address(RVA = "0xD6C84C", Offset = "0xD6C84C", VA = "0xD6C84C", Slot = "13")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x600157E")]
			[Address(RVA = "0xD6C7DC", Offset = "0xD6C7DC", VA = "0xD6C7DC")]
			public Instance(GameObject effectPrefab, int hashId, bool syncToGlobal, float modifier, ApplyMode applyMode, SectorTag targetSource, SectorTag targetStat, float timeLeftFull, SectorTag[] tags, float modifierPerPassiveAbility, Vector2 modifierPerPassiveAbilityRange)
			{
			}
		}

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SectorTag[] tags;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float modifierPerPassiveAbility;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector2 modifierPerPassiveAbilityRange;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x2493170", Offset = "0x2493170", VA = "0x2493170", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x2493268", Offset = "0x2493268", VA = "0x2493268")]
		public PassiveAbilityTagRulesStatBuffObject()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9BA8", Offset = "0x8A9BA8")]
	public class RecursiveBasicStatBuffObject : BasicStatBuffObject
	{
		[Token(Token = "0x2000339")]
		protected class RecursiveBuffInstance : BasicBuffInstance
		{
			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BE17C", Offset = "0x8BE17C")]
			private readonly SectorTag[] recursiveSourceTags;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BE1B4", Offset = "0x8BE1B4")]
			private readonly SectorTag[] recursiveStatTags;

			[Token(Token = "0x170003FA")]
			protected override float Modifier
			{
				[Token(Token = "0x6001583")]
				[Address(RVA = "0xD70670", Offset = "0xD70670", VA = "0xD70670", Slot = "13")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001582")]
			[Address(RVA = "0xD70610", Offset = "0xD70610", VA = "0xD70610")]
			public RecursiveBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, float modifier, ApplyMode applyMode, SectorTag targetSource, SectorTag targetStat, float timeLeftFull, SectorTag[] recursiveSourceTags, SectorTag[] recursiveStatTags)
			{
			}
		}

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BE10C", Offset = "0x8BE10C")]
		public SectorTag[] recursiveSourceTags;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BE144", Offset = "0x8BE144")]
		public SectorTag[] recursiveStatTags;

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xCEA304", Offset = "0xCEA304", VA = "0xCEA304", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xCEA3E4", Offset = "0xCEA3E4", VA = "0xCEA3E4")]
		public RecursiveBasicStatBuffObject()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class SectorWideBuffApplier : GameMonoBehaviour
	{
		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BuffObject buff;

		[Token(Token = "0x170003FB")]
		protected override bool EnableOnGameStart
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0xE14250", Offset = "0xE14250", VA = "0xE14250", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001585")]
			[Address(RVA = "0xE14258", Offset = "0xE14258", VA = "0xE14258", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xE1425C", Offset = "0xE1425C", VA = "0xE1425C", Slot = "30")]
		protected override void OnGameStart()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xE14700", Offset = "0xE14700", VA = "0xE14700", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xE14844", Offset = "0xE14844", VA = "0xE14844")]
		private void OnLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xE14900", Offset = "0xE14900", VA = "0xE14900")]
		private void OnSpaceShipAdded(SpaceShip ship)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xE1457C", Offset = "0xE1457C", VA = "0xE1457C")]
		private void AddBuffToShip(SpaceShip ship)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xE14904", Offset = "0xE14904", VA = "0xE14904")]
		public SectorWideBuffApplier()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class SectorWideBuffApplierTrigger : GameMonoBehaviour
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BuffObject buff;

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xE1490C", Offset = "0xE1490C", VA = "0xE1490C")]
		private void AddBuffToShip(SpaceShip ship)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xE14A90", Offset = "0xE14A90", VA = "0xE14A90")]
		public void ReapplyBuffToShip()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xE14CB0", Offset = "0xE14CB0", VA = "0xE14CB0")]
		public SectorWideBuffApplierTrigger()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class SectorWideBuffEffectDirection : MonoBehaviour
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE20C", Offset = "0x8BE20C")]
		private Vector3 <WorldSpaceLookAtPosition>k__BackingField;

		[Token(Token = "0x170003FC")]
		public Vector3 WorldSpaceLookAtPosition
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0xE14CB8", Offset = "0xE14CB8", VA = "0xE14CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D17E0", Offset = "0x8D17E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001590")]
			[Address(RVA = "0xE14CC4", Offset = "0xE14CC4", VA = "0xE14CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D17F0", Offset = "0x8D17F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xE14CD0", Offset = "0xE14CD0", VA = "0xE14CD0")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xE14DA0", Offset = "0xE14DA0", VA = "0xE14DA0")]
		public SectorWideBuffEffectDirection()
		{
		}
	}
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9C14", Offset = "0x8A9C14")]
	public class SpecialRechargeInstantBuffObject : BooleanBuffObject
	{
		[Token(Token = "0x200033E")]
		public class SpecialRechargeInstantBuffInstance : BooleanBuffInstance
		{
			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			protected float applyChance;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			protected bool applyChanceModifiable;

			[Token(Token = "0x6001595")]
			[Address(RVA = "0xE9E138", Offset = "0xE9E138", VA = "0xE9E138")]
			public SpecialRechargeInstantBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, float timeLeftFull, SectorTag targetSource, SectorTag targetStat, float applyChance, bool applyChanceModifiable)
			{
			}

			[Token(Token = "0x6001596")]
			[Address(RVA = "0xE9E184", Offset = "0xE9E184", VA = "0xE9E184")]
			public bool TryTriggerRecharge()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float applyChance;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool applyChanceModifiable;

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x150F3AC", Offset = "0x150F3AC", VA = "0x150F3AC", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x150F47C", Offset = "0x150F47C", VA = "0x150F47C")]
		public SpecialRechargeInstantBuffObject()
		{
		}
	}
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9C80", Offset = "0x8A9C80")]
	public class StunBuffObject : BuffObject
	{
		[Token(Token = "0x2000340")]
		protected class StunBuffInstance : TimedBuffBase
		{
			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			protected IReadOnlyList<SectorTag> buffSourceTags;

			[Token(Token = "0x6001599")]
			[Address(RVA = "0xE9F34C", Offset = "0xE9F34C", VA = "0xE9F34C")]
			public StunBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, float timeLeftFull, IReadOnlyList<SectorTag> buffSourceTags)
			{
			}

			[Token(Token = "0x600159A")]
			[Address(RVA = "0xE9F384", Offset = "0xE9F384", VA = "0xE9F384", Slot = "5")]
			protected override void OnAssign()
			{
			}

			[Token(Token = "0x600159B")]
			[Address(RVA = "0xE9F544", Offset = "0xE9F544", VA = "0xE9F544", Slot = "6")]
			protected override void OnReAssign()
			{
			}

			[Token(Token = "0x600159C")]
			[Address(RVA = "0xE9F648", Offset = "0xE9F648", VA = "0xE9F648", Slot = "7")]
			protected override void OnRemove()
			{
			}
		}

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected float timeLeftFull;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8BE24C", Offset = "0x8BE24C")]
		[SerializeField]
		protected List<SectorTag> buffSourceTags;

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xF2A7BC", Offset = "0xF2A7BC", VA = "0xF2A7BC", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xF2A858", Offset = "0xF2A858", VA = "0xF2A858")]
		public StunBuffObject()
		{
		}
	}
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9CEC", Offset = "0x8A9CEC")]
	public class TimeLerpStatBuffObject : BasicStatBuffObject
	{
		[Token(Token = "0x2000342")]
		protected class TimeLerpBuffInstance : BasicBuffInstance
		{
			[Token(Token = "0x40012C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			protected Vector2 modifierLerpSpan;

			[Token(Token = "0x40012C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			protected float lerpTime;

			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private float activatedTime;

			[Token(Token = "0x170003FD")]
			protected float LerpFactor
			{
				[Token(Token = "0x60015A2")]
				[Address(RVA = "0xEA17E8", Offset = "0xEA17E8", VA = "0xEA17E8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003FE")]
			protected override float Modifier
			{
				[Token(Token = "0x60015A3")]
				[Address(RVA = "0xEA1800", Offset = "0xEA1800", VA = "0xEA1800", Slot = "13")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x600159F")]
			[Address(RVA = "0xEA1730", Offset = "0xEA1730", VA = "0xEA1730")]
			public TimeLerpBuffInstance(GameObject effectPrefab, int hashId, bool syncToGlobal, float modifier, Vector2 modifierLerpSpan, float lerpTime, ApplyMode applyMode, SectorTag targetSource, SectorTag targetStat, float timeLeftFull)
			{
			}

			[Token(Token = "0x60015A0")]
			[Address(RVA = "0xEA1790", Offset = "0xEA1790", VA = "0xEA1790", Slot = "4")]
			public override void Tick(float delta)
			{
			}

			[Token(Token = "0x60015A1")]
			[Address(RVA = "0xEA17D4", Offset = "0xEA17D4", VA = "0xEA17D4", Slot = "12")]
			public override void SetAbilityActivationStatus(bool abilityActivated)
			{
			}
		}

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		protected Vector2 modifierLerpSpan;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		protected float lerpTime;

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xF36218", Offset = "0xF36218", VA = "0xF36218", Slot = "8")]
		public override BuffBase GetBuff()
		{
			return null;
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xF36308", Offset = "0xF36308", VA = "0xF36308")]
		public TimeLerpStatBuffObject()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class TimedBuffBase : BuffBase
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected readonly float timeLeftFull;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float timeLeft;

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xF3688C", Offset = "0xF3688C", VA = "0xF3688C")]
		public TimedBuffBase(GameObject effectPrefab, int hashId, bool syncToGlobal, float timeLeftFull)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xF368DC", Offset = "0xF368DC", VA = "0xF368DC", Slot = "4")]
		public override void Tick(float delta)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xF36930", Offset = "0xF36930", VA = "0xF36930", Slot = "6")]
		protected override void OnReAssign()
		{
		}
	}
}
namespace Game.Sector
{
	[Token(Token = "0x2000344")]
	[ExecuteInEditMode]
	public class ApplyLightingSettings : MonoBehaviour
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE2B8", Offset = "0x8BE2B8")]
		private Material skyboxMaterial;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Cubemap skyboxReflection;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE314", Offset = "0x8BE314")]
		[SerializeField]
		private bool fogEnabled;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Color fogColor;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float fogDensity;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE380", Offset = "0x8BE380")]
		private bool ambientLightOverride;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool ambientColorSingle;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BE3DC", Offset = "0x8BE3DC")]
		private float ambientIntensity;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color ambientColorTop;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color ambientColorMiddle;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Color ambientColorBottom;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE44C", Offset = "0x8BE44C")]
		[SerializeField]
		private Color cardFogColor;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE498", Offset = "0x8BE498")]
		private Light mainLight;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Color mainLightColor;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float mainLightIntensity;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private bool mainLightRotationFromSceneObjects;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		[SerializeField]
		private bool overrideMainLightColorWithStarColor;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE524", Offset = "0x8BE524")]
		[SerializeField]
		private bool applyOnEnable;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
		[SerializeField]
		private bool autoApplyInEditor;

		[Token(Token = "0x170003FF")]
		public Color CardFogColor
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0xEEC6FC", Offset = "0xEEC6FC", VA = "0xEEC6FC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xEEC708", Offset = "0xEEC708", VA = "0xEEC708")]
		public void Apply()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xEECB54", Offset = "0xEECB54", VA = "0xEECB54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xEECBFC", Offset = "0xEECBFC", VA = "0xEECBFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xEECCA4", Offset = "0xEECCA4", VA = "0xEECCA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xEECCB4", Offset = "0xEECCB4", VA = "0xEECCB4")]
		private void OnLoadPrepare(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xEED4FC", Offset = "0xEED4FC", VA = "0xEED4FC")]
		public void ToggleFog(bool state)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xEED508", Offset = "0xEED508", VA = "0xEED508")]
		public ApplyLightingSettings()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[ExecuteInEditMode]
	public class ApplySceneObjectFogColor : MonoBehaviour
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer renderer;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string materialPropertyName;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ApplySceneObjectFogColor> fog;

		[Token(Token = "0x17000400")]
		public static IReadOnlyList<ApplySceneObjectFogColor> FogCards
		{
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0xEED5AC", Offset = "0xEED5AC", VA = "0xEED5AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xEED610", Offset = "0xEED610", VA = "0xEED610")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xEED69C", Offset = "0xEED69C", VA = "0xEED69C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xEED494", Offset = "0xEED494", VA = "0xEED494")]
		public void UpdateLighting(ApplyLightingSettings settings)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xEED728", Offset = "0xEED728", VA = "0xEED728")]
		public ApplySceneObjectFogColor()
		{
		}
	}
	[Token(Token = "0x2000346")]
	[ExecuteInEditMode]
	public class ApplySceneObjectLight : MonoBehaviour
	{
		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color starColor;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float starColorIntensity;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ApplySceneObjectLight> lights;

		[Token(Token = "0x17000401")]
		public static IReadOnlyList<ApplySceneObjectLight> Lights
		{
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0xEED7BC", Offset = "0xEED7BC", VA = "0xEED7BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xEED820", Offset = "0xEED820", VA = "0xEED820")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xEED8AC", Offset = "0xEED8AC", VA = "0xEED8AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xEED938", Offset = "0xEED938", VA = "0xEED938")]
		public ApplySceneObjectLight()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class DestroyEngagementAction : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9D88", Offset = "0x8A9D88")]
		private sealed class <>c
		{
			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8BE5B0", Offset = "0x8BE5B0")]
			public static Comparison<(SpaceObject, float)> <>9__1_0;

			[Token(Token = "0x60015C0")]
			[Address(RVA = "0xC6D2F4", Offset = "0xC6D2F4", VA = "0xC6D2F4")]
			public <>c()
			{
			}

			[Token(Token = "0x60015C1")]
			[Address(RVA = "0xC6D2FC", Offset = "0xC6D2FC", VA = "0xC6D2FC")]
			internal int <DestroyEngagement>b__1_0([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8D8144", Offset = "0x8D8144")] (SpaceObject, float) a, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8D81E0", Offset = "0x8D81E0")] (SpaceObject, float) b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000349")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9D98", Offset = "0x8A9D98")]
		private sealed class <DestroySpaceObjectRoutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8BE64C", Offset = "0x8BE64C")]
			public List<(SpaceObject, float)> destroyObjects;

			[Token(Token = "0x40012EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <destroyStartTime>5__2;

			[Token(Token = "0x40012EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x17000402")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015C5")]
				[Address(RVA = "0xC6D544", Offset = "0xC6D544", VA = "0xC6D544", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000403")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015C7")]
				[Address(RVA = "0xC6D58C", Offset = "0xC6D58C", VA = "0xC6D58C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015C2")]
			[Address(RVA = "0xC6D32C", Offset = "0xC6D32C", VA = "0xC6D32C")]
			[DebuggerHidden]
			public <DestroySpaceObjectRoutine>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60015C3")]
			[Address(RVA = "0xC6D358", Offset = "0xC6D358", VA = "0xC6D358", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015C4")]
			[Address(RVA = "0xC6D35C", Offset = "0xC6D35C", VA = "0xC6D35C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015C6")]
			[Address(RVA = "0xC6D54C", Offset = "0xC6D54C", VA = "0xC6D54C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Vector2 spaceObjectDestroyDelay;

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xC4E5A8", Offset = "0xC4E5A8", VA = "0xC4E5A8")]
		public void DestroyEngagement()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xC4EC34", Offset = "0xC4EC34", VA = "0xC4EC34", Slot = "4")]
		protected virtual List<(SpaceObject, float)> GetDestroyObjects(Faction playerFaction)
		{
			return null;
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xC4EBBC", Offset = "0xC4EBBC", VA = "0xC4EBBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D1800", Offset = "0x8D1800")]
		private IEnumerator DestroySpaceObjectRoutine([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8D80A8", Offset = "0x8D80A8")] List<(SpaceObject, float)> destroyObjects)
		{
			return null;
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xC4E84C", Offset = "0xC4E84C", VA = "0xC4E84C")]
		private void DestroyHostileProjectiles(Faction playerFaction)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xC4F090", Offset = "0xC4F090", VA = "0xC4F090")]
		public DestroyEngagementAction()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class ObjectBasedLighting : MonoBehaviour
	{
		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer objectRenderer;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string intensityPropertyToOverride;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string colorPropertyToOverride;

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x248FC68", Offset = "0x248FC68", VA = "0x248FC68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x248FD10", Offset = "0x248FD10", VA = "0x248FD10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x248FDB8", Offset = "0x248FDB8", VA = "0x248FDB8")]
		private void OnLoadPrepare(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x2490288", Offset = "0x2490288", VA = "0x2490288")]
		public ObjectBasedLighting()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public interface ISectorAsset
	{
		[Token(Token = "0x17000404")]
		string Name
		{
			[Token(Token = "0x60015CC")]
			get;
		}

		[Token(Token = "0x60015CD")]
		int GetSelectionWeight(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection);

		[Token(Token = "0x60015CE")]
		int GetSelectionWeight(SectorTagsInput tags, SectorTagCollection workTagCollection);

		[Token(Token = "0x60015CF")]
		int GetSelectionPoints(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection);

		[Token(Token = "0x60015D0")]
		int GetSelectionPoints(SectorTagsInput tags, SectorTagCollection workTagCollection);
	}
	[Token(Token = "0x200034C")]
	public struct SectorAsset<T> where T : ISectorAsset
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int selectionWeight;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int selectionPoints;

		[Token(Token = "0x60015D1")]
		public static SectorAsset<T> Create(T data, ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(SectorAsset<T>);
		}

		[Token(Token = "0x60015D2")]
		public static SectorAsset<T> Create(T data, SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(SectorAsset<T>);
		}
	}
	[Token(Token = "0x200034D")]
	public class SectorAssetSelection<T> where T : ISectorAsset
	{
		[Serializable]
		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9DA8", Offset = "0x8A9DA8")]
		private sealed class <>c
		{
			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<SectorAsset<T>> <>9__12_0;

			[Token(Token = "0x60015E2")]
			public <>c()
			{
			}

			[Token(Token = "0x60015E3")]
			internal int <SortAssets>b__12_0(SectorAsset<T> a, SectorAsset<T> b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40012F3")]
		public const int CATEGORY_WEIGHT_THRESHOLD = 1000;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<SectorAsset<T>> validObjects;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SectorTagsInput tags;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SectorTagCollection objTags;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WrappedRandom random;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int totalSelectionWeight;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int thresholdSelectionWeight;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int maxSelectionPoints;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentSelectionPoints;

		[Token(Token = "0x17000405")]
		public bool HasReachedMaxSelectionPoints
		{
			[Token(Token = "0x60015D3")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015D4")]
		public SectorAssetSelection(SectorTagsInput tags, SectorTagCollection objTags, List<SectorAsset<T>> validObjects, int maxSelectionPoints, WrappedRandom random)
		{
		}

		[Token(Token = "0x60015D5")]
		public void SortAssets()
		{
		}

		[Token(Token = "0x60015D6")]
		public virtual void RecalculateWeights()
		{
		}

		[Token(Token = "0x60015D7")]
		public void RefreshTotalSelectionWeight()
		{
		}

		[Token(Token = "0x60015D8")]
		public bool CanSelectNew()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D9")]
		public bool TrySelectNew(out T obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DA")]
		public bool CanSelectSpecific(Predicate<SectorAsset<T>> condition)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DB")]
		public bool TrySelectSpecific(Predicate<SectorAsset<T>> condition, out T obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DC")]
		private bool TrySelectIndex(int selectedIndex, out T obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DD")]
		protected virtual void OnAssetSelected(ref SectorAsset<T> obj)
		{
		}

		[Token(Token = "0x60015DE")]
		protected virtual void OnRecreateAsset(SectorAsset<T> obj, out SectorAsset<T> recreatedObj)
		{
		}

		[Token(Token = "0x60015DF")]
		protected virtual bool GetObjectValid(SectorAsset<T> obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E0")]
		protected virtual int GetObjectWeight(SectorAsset<T> obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9DB8", Offset = "0x8A9DB8")]
	public class SectorEngagement : ScriptableObject, ISectorAsset
	{
		[Token(Token = "0x2000350")]
		public enum EngagementNextWaveCondition
		{
			[Token(Token = "0x4001304")]
			None = 0,
			[Token(Token = "0x4001305")]
			OnShipsLeft = 10,
			[Token(Token = "0x4001306")]
			OnShipDestroyed = 20,
			[Token(Token = "0x4001307")]
			OnEventTrigger = 50
		}

		[Serializable]
		[Token(Token = "0x2000351")]
		public class EngagementWave
		{
			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string waveId;

			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private EngagementWaveSet[] sets;

			[Token(Token = "0x1700040B")]
			public string WaveId
			{
				[Token(Token = "0x60015EE")]
				[Address(RVA = "0xD73E28", Offset = "0xD73E28", VA = "0xD73E28")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040C")]
			public IReadOnlyList<EngagementWaveSet> Sets
			{
				[Token(Token = "0x60015EF")]
				[Address(RVA = "0xD73E30", Offset = "0xD73E30", VA = "0xD73E30")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xD73E38", Offset = "0xD73E38", VA = "0xD73E38")]
			public EngagementWave Validate()
			{
				return null;
			}

			[Token(Token = "0x60015F1")]
			[Address(RVA = "0xD73EE4", Offset = "0xD73EE4", VA = "0xD73EE4")]
			public EngagementWave()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000352")]
		public class EngagementWaveSet : ISectorAsset
		{
			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string setId;

			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SectorEngagementObjectCollection objects;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Vector2 delayBetweenObjects;

			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private SectorTagValue selectionWeight;

			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE804", Offset = "0x8BE804")]
			private float nextWaveDelay;

			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			private EngagementNextWaveCondition nextWaveCondition;

			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private int nextWaveConditionShipsLeft;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private string nextWaveConditionShipId;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE880", Offset = "0x8BE880")]
			private string nextWaveId;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private string nextWaveSetId;

			[Token(Token = "0x1700040D")]
			public string SetId
			{
				[Token(Token = "0x60015F2")]
				[Address(RVA = "0xD73EEC", Offset = "0xD73EEC", VA = "0xD73EEC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040E")]
			public SectorEngagementObjectCollection Objects
			{
				[Token(Token = "0x60015F3")]
				[Address(RVA = "0xD73EF4", Offset = "0xD73EF4", VA = "0xD73EF4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040F")]
			public Vector2 DelayBetweenObjects
			{
				[Token(Token = "0x60015F4")]
				[Address(RVA = "0xD73EFC", Offset = "0xD73EFC", VA = "0xD73EFC")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000410")]
			public SectorTagValue SelectionWeight
			{
				[Token(Token = "0x60015F5")]
				[Address(RVA = "0xD73F04", Offset = "0xD73F04", VA = "0xD73F04")]
				get
				{
					return default(SectorTagValue);
				}
			}

			[Token(Token = "0x17000411")]
			public float NextWaveDelay
			{
				[Token(Token = "0x60015F6")]
				[Address(RVA = "0xD73F10", Offset = "0xD73F10", VA = "0xD73F10")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000412")]
			public EngagementNextWaveCondition NextWaveCondition
			{
				[Token(Token = "0x60015F7")]
				[Address(RVA = "0xD73F18", Offset = "0xD73F18", VA = "0xD73F18")]
				get
				{
					return default(EngagementNextWaveCondition);
				}
			}

			[Token(Token = "0x17000413")]
			public int NextWaveConditionShipsLeft
			{
				[Token(Token = "0x60015F8")]
				[Address(RVA = "0xD73F20", Offset = "0xD73F20", VA = "0xD73F20")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000414")]
			public string NextWaveConditionShipId
			{
				[Token(Token = "0x60015F9")]
				[Address(RVA = "0xD73F28", Offset = "0xD73F28", VA = "0xD73F28")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000415")]
			public string NextWaveId
			{
				[Token(Token = "0x60015FA")]
				[Address(RVA = "0xD73F30", Offset = "0xD73F30", VA = "0xD73F30")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000416")]
			public string NextWaveSetId
			{
				[Token(Token = "0x60015FB")]
				[Address(RVA = "0xD73F38", Offset = "0xD73F38", VA = "0xD73F38")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000417")]
			private string Game.Sector.ISectorAsset.Name
			{
				[Token(Token = "0x60015FC")]
				[Address(RVA = "0xD73F40", Offset = "0xD73F40", VA = "0xD73F40", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015FD")]
			[Address(RVA = "0xD73F5C", Offset = "0xD73F5C", VA = "0xD73F5C", Slot = "5")]
			public int GetSelectionWeight(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
			{
				return default(int);
			}

			[Token(Token = "0x60015FE")]
			[Address(RVA = "0xD73F68", Offset = "0xD73F68", VA = "0xD73F68", Slot = "6")]
			public int GetSelectionWeight(SectorTagsInput tags, SectorTagCollection workTagCollection)
			{
				return default(int);
			}

			[Token(Token = "0x60015FF")]
			[Address(RVA = "0xD73F74", Offset = "0xD73F74", VA = "0xD73F74", Slot = "7")]
			public int GetSelectionPoints(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
			{
				return default(int);
			}

			[Token(Token = "0x6001600")]
			[Address(RVA = "0xD73F7C", Offset = "0xD73F7C", VA = "0xD73F7C", Slot = "8")]
			public int GetSelectionPoints(SectorTagsInput tags, SectorTagCollection workTagCollection)
			{
				return default(int);
			}

			[Token(Token = "0x6001601")]
			[Address(RVA = "0xD73EB8", Offset = "0xD73EB8", VA = "0xD73EB8")]
			public EngagementWaveSet Validate()
			{
				return null;
			}

			[Token(Token = "0x6001602")]
			[Address(RVA = "0xD73F84", Offset = "0xD73F84", VA = "0xD73F84")]
			public EngagementWaveSet()
			{
			}
		}

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE718", Offset = "0x8BE718")]
		[SerializeField]
		private bool firstWaveStartInScene;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float firstWaveDelay;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EngagementWave[] waves;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SectorTagValue selectionWeight;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SectorTagCollectionHierarchy engagementTags;

		[Token(Token = "0x17000406")]
		private string Game.Sector.ISectorAsset.Name
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xCFB9E0", Offset = "0xCFB9E0", VA = "0xCFB9E0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000407")]
		public bool FirstWaveStartInScene
		{
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0xCFBA10", Offset = "0xCFBA10", VA = "0xCFBA10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000408")]
		public float FirstWaveDelay
		{
			[Token(Token = "0x60015EA")]
			[Address(RVA = "0xCFBA18", Offset = "0xCFBA18", VA = "0xCFBA18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000409")]
		public IReadOnlyList<EngagementWave> Waves
		{
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0xCFBA20", Offset = "0xCFBA20", VA = "0xCFBA20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040A")]
		public SectorTagCollectionHierarchy EngagementTags
		{
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xCFBA28", Offset = "0xCFBA28", VA = "0xCFBA28")]
			get
			{
				return default(SectorTagCollectionHierarchy);
			}
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xCFB9E8", Offset = "0xCFB9E8", VA = "0xCFB9E8", Slot = "5")]
		public int GetSelectionWeight(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xCFB9F4", Offset = "0xCFB9F4", VA = "0xCFB9F4", Slot = "6")]
		public int GetSelectionWeight(SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xCFBA00", Offset = "0xCFBA00", VA = "0xCFBA00", Slot = "7")]
		public int GetSelectionPoints(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xCFBA08", Offset = "0xCFBA08", VA = "0xCFBA08", Slot = "8")]
		public int GetSelectionPoints(SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xCFBA34", Offset = "0xCFBA34", VA = "0xCFBA34")]
		public SectorEngagement()
		{
		}
	}
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9E24", Offset = "0x8A9E24")]
	public class SectorEngagementObjectCollection : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000354")]
		public class EngagementObject
		{
			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string id;

			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int amount;

			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private AssetReference asset;

			[Token(Token = "0x17000419")]
			public string Id
			{
				[Token(Token = "0x6001605")]
				[Address(RVA = "0xD73F8C", Offset = "0xD73F8C", VA = "0xD73F8C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041A")]
			public int Amount
			{
				[Token(Token = "0x6001606")]
				[Address(RVA = "0xD73F94", Offset = "0xD73F94", VA = "0xD73F94")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700041B")]
			public AssetReference Asset
			{
				[Token(Token = "0x6001607")]
				[Address(RVA = "0xD73F9C", Offset = "0xD73F9C", VA = "0xD73F9C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001608")]
			[Address(RVA = "0xD73FA4", Offset = "0xD73FA4", VA = "0xD73FA4")]
			public EngagementObject()
			{
			}
		}

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EngagementObject[] objects;

		[Token(Token = "0x17000418")]
		public IReadOnlyList<EngagementObject> Objects
		{
			[Token(Token = "0x6001603")]
			[Address(RVA = "0xCFBA44", Offset = "0xCFBA44", VA = "0xCFBA44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xCFBA4C", Offset = "0xCFBA4C", VA = "0xCFBA4C")]
		public SectorEngagementObjectCollection()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class SectorEngagementSlotLayer : SectorLayer, ISectorTransformMirror
	{
		[Token(Token = "0x2000356")]
		public enum EventTriggerConditionState
		{
			[Token(Token = "0x400132A")]
			None,
			[Token(Token = "0x400132B")]
			WaitingForTrigger,
			[Token(Token = "0x400132C")]
			Triggered
		}

		[Token(Token = "0x2000357")]
		public class SectorEngagementSelection : SectorAssetSelection<SectorEngagement>
		{
			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SectorEngagementSlotLayer layer;

			[Token(Token = "0x600162B")]
			[Address(RVA = "0xD74CE0", Offset = "0xD74CE0", VA = "0xD74CE0")]
			public SectorEngagementSelection(SectorEngagementSlotLayer layer, SectorTagsInput tags, SectorTagCollection objTags, List<SectorAsset<SectorEngagement>> validObjects, int maxSelectionPoints, WrappedRandom random)
			{
			}

			[Token(Token = "0x600162C")]
			[Address(RVA = "0xD79320", Offset = "0xD79320", VA = "0xD79320", Slot = "5")]
			protected override void OnAssetSelected(ref SectorAsset<SectorEngagement> obj)
			{
			}
		}

		[Token(Token = "0x2000358")]
		public class SectorEngagementWaveSetSelection : SectorAssetSelection<SectorEngagement.EngagementWaveSet>
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0xD79380", Offset = "0xD79380", VA = "0xD79380")]
			public SectorEngagementWaveSetSelection(SectorTagsInput tags, SectorTagCollection objTags, List<SectorAsset<SectorEngagement.EngagementWaveSet>> validObjects, int maxSelectionPoints, WrappedRandom random)
			{
			}
		}

		[Token(Token = "0x2000359")]
		public class SectorEngagementGameObject
		{
			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncFlag handle;

			[Token(Token = "0x400132F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject gameObject;

			[Token(Token = "0x4001330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isAlive;

			[Token(Token = "0x4001331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Coroutine instantiateRoutine;

			[Token(Token = "0x4001332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject instantiateEffect;

			[Token(Token = "0x600162E")]
			[Address(RVA = "0xD79318", Offset = "0xD79318", VA = "0xD79318")]
			public SectorEngagementGameObject()
			{
			}
		}

		[Token(Token = "0x200035A")]
		private class ActiveEngagement
		{
			[Token(Token = "0x4001333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorEngagement engagement;

			[Token(Token = "0x4001334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<ActiveEngagementWave> waves;

			[Token(Token = "0x4001335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int waveIndex;

			[Token(Token = "0x4001336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int setIndex;

			[Token(Token = "0x4001337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool hasFinishedSpawning;

			[Token(Token = "0x17000421")]
			public bool HasNextWave
			{
				[Token(Token = "0x600162F")]
				[Address(RVA = "0xD77230", Offset = "0xD77230", VA = "0xD77230")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000422")]
			public bool IsFirstWave
			{
				[Token(Token = "0x6001630")]
				[Address(RVA = "0xD7819C", Offset = "0xD7819C", VA = "0xD7819C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000423")]
			public bool IsLastWave
			{
				[Token(Token = "0x6001631")]
				[Address(RVA = "0xD783C4", Offset = "0xD783C4", VA = "0xD783C4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000424")]
			public SectorEngagement.EngagementWave NextWave
			{
				[Token(Token = "0x6001632")]
				[Address(RVA = "0xD786E8", Offset = "0xD786E8", VA = "0xD786E8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000425")]
			public ActiveEngagementWave NextWaveActive
			{
				[Token(Token = "0x6001633")]
				[Address(RVA = "0xD787A4", Offset = "0xD787A4", VA = "0xD787A4")]
				get
				{
					return default(ActiveEngagementWave);
				}
			}

			[Token(Token = "0x17000426")]
			public bool HasNextSet
			{
				[Token(Token = "0x6001634")]
				[Address(RVA = "0xD76FE4", Offset = "0xD76FE4", VA = "0xD76FE4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000427")]
			public SectorEngagement.EngagementWaveSet NextSet
			{
				[Token(Token = "0x6001635")]
				[Address(RVA = "0xD77170", Offset = "0xD77170", VA = "0xD77170")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000428")]
			public ActiveEngagementWaveSet NextSetActive
			{
				[Token(Token = "0x6001636")]
				[Address(RVA = "0xD78350", Offset = "0xD78350", VA = "0xD78350")]
				get
				{
					return default(ActiveEngagementWaveSet);
				}
			}

			[Token(Token = "0x6001637")]
			[Address(RVA = "0xD74FAC", Offset = "0xD74FAC", VA = "0xD74FAC")]
			public static ActiveEngagement Load(SectorEngagement engagement, LoadResult loadResult, HashSet<object> loadedObjectKeys)
			{
				return null;
			}

			[Token(Token = "0x6001638")]
			[Address(RVA = "0xD78A8C", Offset = "0xD78A8C", VA = "0xD78A8C")]
			public void Unload()
			{
			}

			[Token(Token = "0x6001639")]
			[Address(RVA = "0xD7662C", Offset = "0xD7662C", VA = "0xD7662C")]
			public void PrepareNextWave(SectorEngagementWaveSetSelection engagementWaveSetSelection)
			{
			}

			[Token(Token = "0x600163A")]
			[Address(RVA = "0xD78810", Offset = "0xD78810", VA = "0xD78810")]
			public ActiveEngagement()
			{
			}
		}

		[Token(Token = "0x200035B")]
		private struct ActiveEngagementWave
		{
			[Token(Token = "0x4001338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<ActiveEngagementWaveSet> sets;

			[Token(Token = "0x600163B")]
			[Address(RVA = "0xD78818", Offset = "0xD78818", VA = "0xD78818")]
			public static ActiveEngagementWave Load(SectorEngagement.EngagementWave wave, LoadResult loadResult, HashSet<object> loadedObjectKeys)
			{
				return default(ActiveEngagementWave);
			}

			[Token(Token = "0x600163C")]
			[Address(RVA = "0xD78BAC", Offset = "0xD78BAC", VA = "0xD78BAC")]
			public void Unload()
			{
			}
		}

		[Token(Token = "0x200035C")]
		private struct ActiveEngagementWaveSet
		{
			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<AsyncOperationHandle<GameObject>> objectHandles;

			[Token(Token = "0x600163D")]
			[Address(RVA = "0xD78CCC", Offset = "0xD78CCC", VA = "0xD78CCC")]
			public static ActiveEngagementWaveSet Load(SectorEngagement.EngagementWaveSet set, LoadResult loadResult, HashSet<object> loadedObjectKeys)
			{
				return default(ActiveEngagementWaveSet);
			}

			[Token(Token = "0x600163E")]
			[Address(RVA = "0xD790B0", Offset = "0xD790B0", VA = "0xD790B0")]
			public void Unload()
			{
			}
		}

		[Token(Token = "0x200035D")]
		private struct NextEngagementWaveSettings
		{
			[Token(Token = "0x400133A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorEngagement.EngagementNextWaveCondition nextWaveCondition;

			[Token(Token = "0x400133B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int nextWaveConditionShipsLeft;

			[Token(Token = "0x400133C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<SectorEngagementGameObject> nextWaveConditionShipsDestroyed;

			[Token(Token = "0x400133D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float nextWaveDelay;

			[Token(Token = "0x600163F")]
			[Address(RVA = "0xD770C4", Offset = "0xD770C4", VA = "0xD770C4")]
			public static NextEngagementWaveSettings CreateDefault()
			{
				return default(NextEngagementWaveSettings);
			}
		}

		[Token(Token = "0x200035E")]
		private struct EngagementSlots
		{
			[Serializable]
			[Token(Token = "0x200035F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9E90", Offset = "0x8A9E90")]
			private sealed class <>c
			{
				[Token(Token = "0x4001340")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4001341")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Predicate<SectorSlotEngagement> <>9__2_0;

				[Token(Token = "0x4001342")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static Comparison<SectorSlotEngagement> <>9__2_1;

				[Token(Token = "0x6001644")]
				[Address(RVA = "0xEAE4E4", Offset = "0xEAE4E4", VA = "0xEAE4E4")]
				public <>c()
				{
				}

				[Token(Token = "0x6001645")]
				[Address(RVA = "0xEAE4EC", Offset = "0xEAE4EC", VA = "0xEAE4EC")]
				internal bool <Create>b__2_0(SectorSlotEngagement p)
				{
					return default(bool);
				}

				[Token(Token = "0x6001646")]
				[Address(RVA = "0xEAE524", Offset = "0xEAE524", VA = "0xEAE524")]
				internal int <Create>b__2_1(SectorSlotEngagement a, SectorSlotEngagement b)
				{
					return default(int);
				}
			}

			[Token(Token = "0x400133E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<SectorSlotEngagement> availableSlots;

			[Token(Token = "0x400133F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private List<SectorSlotEngagement> spentSlots;

			[Token(Token = "0x6001640")]
			[Address(RVA = "0xD749C0", Offset = "0xD749C0", VA = "0xD749C0")]
			public static EngagementSlots Create(GameObject parent)
			{
				return default(EngagementSlots);
			}

			[Token(Token = "0x6001641")]
			[Address(RVA = "0xD78434", Offset = "0xD78434", VA = "0xD78434")]
			public bool TryGetRandomSlot(WrappedRandom random, out SectorSlotEngagement slot)
			{
				return default(bool);
			}

			[Token(Token = "0x6001642")]
			[Address(RVA = "0xD781D4", Offset = "0xD781D4", VA = "0xD781D4")]
			public void ResetSlots(bool checkBlocked)
			{
			}
		}

		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9EA0", Offset = "0x8A9EA0")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x4001343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorEngagementSlotLayer <>4__this;

			[Token(Token = "0x4001344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LoadParameters loadParams;

			[Token(Token = "0x4001345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ContinueLoadLayerAction continueAction;

			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LoadResult loadResult;

			[Token(Token = "0x6001647")]
			[Address(RVA = "0xD73FB4", Offset = "0xD73FB4", VA = "0xD73FB4")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x6001648")]
			[Address(RVA = "0xD73FBC", Offset = "0xD73FBC", VA = "0xD73FBC")]
			internal void <LoadLayerAction>b__0(AsyncOperationHandle<IList<SectorEngagement>> objs)
			{
			}
		}

		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9EB0", Offset = "0x8A9EB0")]
		private sealed class <EngagementRoutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorEngagementSlotLayer <>4__this;

			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ContinueLoadLayerAction continueAction;

			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SectorTagsInput tags;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public EngagementSlots slots;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private NextEngagementWaveSettings <nextWaveSettings>5__2;

			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <anticipationScale>5__3;

			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private List<ActiveEngagementWave>.Enumerator <>7__wrap3;

			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private List<ActiveEngagementWaveSet>.Enumerator <>7__wrap4;

			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private List<AsyncOperationHandle<GameObject>>.Enumerator <>7__wrap5;

			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private AsyncOperationHandle<GameObject> <handle>5__7;

			[Token(Token = "0x4001353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private IEnumerator <firstWaveRoutine>5__8;

			[Token(Token = "0x4001354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private Func<NextEngagementWaveSettings, bool> <nextWaveConditionFunc>5__9;

			[Token(Token = "0x4001355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private float <nextWaveTimer>5__10;

			[Token(Token = "0x17000429")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600164F")]
				[Address(RVA = "0xD77294", Offset = "0xD77294", VA = "0xD77294", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001651")]
				[Address(RVA = "0xD772DC", Offset = "0xD772DC", VA = "0xD772DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001649")]
			[Address(RVA = "0xD755A4", Offset = "0xD755A4", VA = "0xD755A4")]
			[DebuggerHidden]
			public <EngagementRoutine>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x600164A")]
			[Address(RVA = "0xD755D0", Offset = "0xD755D0", VA = "0xD755D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600164B")]
			[Address(RVA = "0xD75794", Offset = "0xD75794", VA = "0xD75794", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600164C")]
			[Address(RVA = "0xD75740", Offset = "0xD75740", VA = "0xD75740")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600164D")]
			[Address(RVA = "0xD756EC", Offset = "0xD756EC", VA = "0xD756EC")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600164E")]
			[Address(RVA = "0xD75698", Offset = "0xD75698", VA = "0xD75698")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x6001650")]
			[Address(RVA = "0xD7729C", Offset = "0xD7729C", VA = "0xD7729C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9EC0", Offset = "0x8A9EC0")]
		private sealed class <SpawnNextWave>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorEngagementSlotLayer <>4__this;

			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EngagementSlots slots;

			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool spawnInstant;

			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float spawnAnticipationScale;

			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public NextEngagementWaveSettings nextWaveSettings;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Scene <scene>5__2;

			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private SectorEngagement.EngagementWaveSet <nextSet>5__3;

			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private ActiveEngagementWaveSet <nextSetActive>5__4;

			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <i>5__5;

			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private SectorEngagementObjectCollection.EngagementObject <nextObj>5__6;

			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private int <j>5__7;

			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private SectorSlotEngagement <slot>5__8;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private float <delayBetweenObjects>5__9;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private float <delayBetweenObjectsTimer>5__10;

			[Token(Token = "0x1700042B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001655")]
				[Address(RVA = "0xD78698", Offset = "0xD78698", VA = "0xD78698", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001657")]
				[Address(RVA = "0xD786E0", Offset = "0xD786E0", VA = "0xD786E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001652")]
			[Address(RVA = "0xD77674", Offset = "0xD77674", VA = "0xD77674")]
			[DebuggerHidden]
			public <SpawnNextWave>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001653")]
			[Address(RVA = "0xD776A0", Offset = "0xD776A0", VA = "0xD776A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001654")]
			[Address(RVA = "0xD776A4", Offset = "0xD776A4", VA = "0xD776A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001656")]
			[Address(RVA = "0xD786A0", Offset = "0xD786A0", VA = "0xD786A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000363")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9ED0", Offset = "0x8A9ED0")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorEngagementGameObject engagementObj;

			[Token(Token = "0x6001658")]
			[Address(RVA = "0xD75274", Offset = "0xD75274", VA = "0xD75274")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x6001659")]
			[Address(RVA = "0xD7527C", Offset = "0xD7527C", VA = "0xD7527C")]
			internal void <InstantiateEngagementObjectAnticipation>b__0(AsyncFlag p)
			{
			}
		}

		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9EE0", Offset = "0x8A9EE0")]
		private sealed class <>c__DisplayClass54_1
		{
			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncFlag instantiateHandle;

			[Token(Token = "0x600165A")]
			[Address(RVA = "0xD752A4", Offset = "0xD752A4", VA = "0xD752A4")]
			public <>c__DisplayClass54_1()
			{
			}

			[Token(Token = "0x600165B")]
			[Address(RVA = "0xD752AC", Offset = "0xD752AC", VA = "0xD752AC")]
			internal void <InstantiateEngagementObjectAnticipation>b__1(AsyncFlag p)
			{
			}
		}

		[Token(Token = "0x2000365")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9EF0", Offset = "0x8A9EF0")]
		private sealed class <InstantiateEngagementObjectAnticipation>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorEngagementGameObject engagementObj;

			[Token(Token = "0x400136B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float anticipationTime;

			[Token(Token = "0x400136C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass54_0 <>8__1;

			[Token(Token = "0x400136D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SectorEngagementSlotLayer <>4__this;

			[Token(Token = "0x400136E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public SectorSlotEngagement slot;

			[Token(Token = "0x400136F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject prefab;

			[Token(Token = "0x4001370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 position;

			[Token(Token = "0x4001371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Quaternion rotation;

			[Token(Token = "0x4001372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Scene scene;

			[Token(Token = "0x1700042D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600165F")]
				[Address(RVA = "0xD77624", Offset = "0xD77624", VA = "0xD77624", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001661")]
				[Address(RVA = "0xD7766C", Offset = "0xD7766C", VA = "0xD7766C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600165C")]
			[Address(RVA = "0xD772E4", Offset = "0xD772E4", VA = "0xD772E4")]
			[DebuggerHidden]
			public <InstantiateEngagementObjectAnticipation>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x600165D")]
			[Address(RVA = "0xD77310", Offset = "0xD77310", VA = "0xD77310", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600165E")]
			[Address(RVA = "0xD77314", Offset = "0xD77314", VA = "0xD77314", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001660")]
			[Address(RVA = "0xD7762C", Offset = "0xD7762C", VA = "0xD7762C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000366")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F00", Offset = "0x8A9F00")]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x4001373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorSlotEngagement slot;

			[Token(Token = "0x4001374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorEngagementGameObject engagementObj;

			[Token(Token = "0x4001375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorEngagementSlotLayer <>4__this;

			[Token(Token = "0x4001376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool spawnInstant;

			[Token(Token = "0x4001377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 position;

			[Token(Token = "0x4001378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion rotation;

			[Token(Token = "0x4001379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<SectorSlot, GameObject> <>9__1;

			[Token(Token = "0x6001662")]
			[Address(RVA = "0xD752C8", Offset = "0xD752C8", VA = "0xD752C8")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x6001663")]
			[Address(RVA = "0xD752D0", Offset = "0xD752D0", VA = "0xD752D0")]
			internal void <InstantiatePrefabObject>b__0(GameObject p)
			{
			}

			[Token(Token = "0x6001664")]
			[Address(RVA = "0xD753AC", Offset = "0xD753AC", VA = "0xD753AC")]
			internal void <InstantiatePrefabObject>b__1(SectorSlot s, GameObject q)
			{
			}
		}

		[Token(Token = "0x2000367")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F10", Offset = "0x8A9F10")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x400137A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorEngagementSlotLayer <>4__this;

			[Token(Token = "0x400137B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action continueAction;

			[Token(Token = "0x400137C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__0;

			[Token(Token = "0x6001665")]
			[Address(RVA = "0xD75578", Offset = "0xD75578", VA = "0xD75578")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x6001666")]
			[Address(RVA = "0xD75580", Offset = "0xD75580", VA = "0xD75580")]
			internal void <UnloadLayerAction>b__0()
			{
			}
		}

		[Token(Token = "0x4001318")]
		public const string ENGAGEMENT_PREFIX = "engagement:";

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Faction overrideFaction;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE92C", Offset = "0x8BE92C")]
		private string <OverrideEngagementName>k__BackingField;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE93C", Offset = "0x8BE93C")]
		private EventTriggerConditionState <ConditionEventTrigger>k__BackingField;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE94C", Offset = "0x8BE94C")]
		private bool <Paused>k__BackingField;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AsyncOperationHandle<IList<SectorEngagement>> layerObjsHandle;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LoadResult currentLoadResult;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private WrappedRandom currentRandom;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ActiveEngagement currentEngagement;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine currentEngagementRoutine;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<SectorEngagementGameObject> currentEngagementObjects;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Faction spawnFaction;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SectorTagCollection objTags;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SectorEngagementWaveSetSelection engagementWaveSetSelection;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HashSet<SectorEngagementSlotLayer> loadedEngagementLayers;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static HashSet<SectorEngagementSlotLayer> activeEngagementLayers;

		[Token(Token = "0x1700041C")]
		public string OverrideEngagementName
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0xCFBA54", Offset = "0xCFBA54", VA = "0xCFBA54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D18B0", Offset = "0x8D18B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600160A")]
			[Address(RVA = "0xCFBA5C", Offset = "0xCFBA5C", VA = "0xCFBA5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D18C0", Offset = "0x8D18C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public EventTriggerConditionState ConditionEventTrigger
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0xCFBA64", Offset = "0xCFBA64", VA = "0xCFBA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D18D0", Offset = "0x8D18D0")]
			get
			{
				return default(EventTriggerConditionState);
			}
			[Token(Token = "0x600160C")]
			[Address(RVA = "0xCFBA6C", Offset = "0xCFBA6C", VA = "0xCFBA6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D18E0", Offset = "0x8D18E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700041E")]
		public bool Paused
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0xCFBA74", Offset = "0xCFBA74", VA = "0xCFBA74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D18F0", Offset = "0x8D18F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600160E")]
			[Address(RVA = "0xCFBA7C", Offset = "0xCFBA7C", VA = "0xCFBA7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1900", Offset = "0x8D1900")]
			set
			{
			}
		}

		[Token(Token = "0x1700041F")]
		public Faction EngagementFaction
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0xCFBA88", Offset = "0xCFBA88", VA = "0xCFBA88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000420")]
		public static IReadOnlyCollection<SectorEngagementSlotLayer> ActiveEngagementLayers
		{
			[Token(Token = "0x6001610")]
			[Address(RVA = "0xCFBB0C", Offset = "0xCFBB0C", VA = "0xCFBB0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000063")]
		public static event Action<bool> OnEngagementActiveChanged
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0xCFBB70", Offset = "0xCFBB70", VA = "0xCFBB70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1910", Offset = "0x8D1910")]
			add
			{
			}
			[Token(Token = "0x6001612")]
			[Address(RVA = "0xCFBC64", Offset = "0xCFBC64", VA = "0xCFBC64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1920", Offset = "0x8D1920")]
			remove
			{
			}
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xCFBD58", Offset = "0xCFBD58", VA = "0xCFBD58")]
		private static void ActivateEngagement(SectorEngagementSlotLayer layer)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xCFBE58", Offset = "0xCFBE58", VA = "0xCFBE58")]
		private static void DeactivateEngagement(SectorEngagementSlotLayer layer)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xCFBF88", Offset = "0xCFBF88", VA = "0xCFBF88")]
		public static SectorEngagementSlotLayer TryAddDependencyGameObject(GameObject parent, GameObject dependency, bool isAlive = true)
		{
			return null;
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xCFC31C", Offset = "0xCFC31C", VA = "0xCFC31C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xCFC5B8", Offset = "0xCFC5B8", VA = "0xCFC5B8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xCFC90C", Offset = "0xCFC90C", VA = "0xCFC90C", Slot = "8")]
		private void Game.Sector.ISectorTransformMirror.TransformSectorMirror(SectorTransformMirrorData data)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xCFCA74", Offset = "0xCFCA74", VA = "0xCFCA74", Slot = "5")]
		protected override void LoadLayerAction(LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xCFCDBC", Offset = "0xCFCDBC", VA = "0xCFCDBC")]
		private void StopEngagementOnLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xCFC758", Offset = "0xCFC758", VA = "0xCFC758")]
		public void StopEngagement()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xCFCDC0", Offset = "0xCFCDC0", VA = "0xCFCDC0")]
		private void OnSpaceObjectDeath(SpaceObject spaceObject, IDamagable cause)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xCFD21C", Offset = "0xCFD21C", VA = "0xCFD21C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D1930", Offset = "0x8D1930")]
		private IEnumerator EngagementRoutine(ContinueLoadLayerAction continueAction, EngagementSlots slots, SectorTagsInput tags)
		{
			return null;
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xCFD2E8", Offset = "0xCFD2E8", VA = "0xCFD2E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D1990", Offset = "0x8D1990")]
		private IEnumerator SpawnNextWave(EngagementSlots slots, NextEngagementWaveSettings nextWaveSettings, bool spawnInstant, float spawnAnticipationScale)
		{
			return null;
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xCFD3C8", Offset = "0xCFD3C8", VA = "0xCFD3C8")]
		private SectorEngagementGameObject InstantiateEngagementObject(SectorSlotEngagement slot, GameObject prefab, Vector3 position, Quaternion rotation, Scene scene, bool spawnInstant, float spawnAnticipationScale)
		{
			return null;
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xCFD778", Offset = "0xCFD778", VA = "0xCFD778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D19F0", Offset = "0x8D19F0")]
		private IEnumerator InstantiateEngagementObjectAnticipation(SectorSlotEngagement slot, SectorEngagementGameObject engagementObj, GameObject prefab, Vector3 position, Quaternion rotation, Scene scene, float anticipationTime)
		{
			return null;
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xCFD898", Offset = "0xCFD898", VA = "0xCFD898")]
		private AsyncFlag InstantiatePrefabObject(SectorSlotEngagement slot, SectorEngagementGameObject engagementObj, GameObject prefab, Vector3 position, Quaternion rotation, Scene scene, bool spawnInstant)
		{
			return null;
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xCFDAC8", Offset = "0xCFDAC8", VA = "0xCFDAC8")]
		private static void SpawnedObjectTeleport(GameObject obj, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xCFDBA4", Offset = "0xCFDBA4", VA = "0xCFDBA4")]
		private bool ConditionCheckOnShipsLeft(NextEngagementWaveSettings settings)
		{
			return default(bool);
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xCFDD48", Offset = "0xCFDD48", VA = "0xCFDD48")]
		private bool ConditionCheckOnShipDestroyed(NextEngagementWaveSettings settings)
		{
			return default(bool);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xCFDED0", Offset = "0xCFDED0", VA = "0xCFDED0")]
		private bool ConditionCheckOnEventTrigger(NextEngagementWaveSettings settings)
		{
			return default(bool);
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xCFDEF0", Offset = "0xCFDEF0", VA = "0xCFDEF0", Slot = "6")]
		protected override void UnloadLayerAction(UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, Action continueAction)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xCFE330", Offset = "0xCFE330", VA = "0xCFE330")]
		private void ReleaseAssetHandles(Action continueAction)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xCFC124", Offset = "0xCFC124", VA = "0xCFC124")]
		private bool TryAddDependencyGameObjectInternal(GameObject parent, GameObject dependency, bool isAlive)
		{
			return default(bool);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xCFE574", Offset = "0xCFE574", VA = "0xCFE574")]
		public SectorEngagementSlotLayer()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public abstract class SectorLayer : MonoBehaviour
	{
		[Token(Token = "0x2000369")]
		public delegate void ContinueLoadLayerAction(bool loadSuccess);

		[Token(Token = "0x200036A")]
		public enum LoadState
		{
			[Token(Token = "0x400138F")]
			Unloaded,
			[Token(Token = "0x4001390")]
			Loaded,
			[Token(Token = "0x4001391")]
			Loading,
			[Token(Token = "0x4001392")]
			Unloading
		}

		[Token(Token = "0x200036B")]
		private class LoadedLayers
		{
			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<SectorLayer> layers;

			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LoadParameters parameters;

			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LoadState state;

			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LoadResult result;

			[Token(Token = "0x4001397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Stack<WrappedRandom> randomStack;

			[Token(Token = "0x17000439")]
			public WrappedRandom CurrentRandom
			{
				[Token(Token = "0x60016A0")]
				[Address(RVA = "0xD7B204", Offset = "0xD7B204", VA = "0xD7B204")]
				get
				{
					return default(WrappedRandom);
				}
			}

			[Token(Token = "0x60016A1")]
			[Address(RVA = "0xD7B280", Offset = "0xD7B280", VA = "0xD7B280")]
			public WrappedRandom PushRandomStack()
			{
				return default(WrappedRandom);
			}

			[Token(Token = "0x60016A2")]
			[Address(RVA = "0xD7B3CC", Offset = "0xD7B3CC", VA = "0xD7B3CC")]
			public WrappedRandom PopRandomStack()
			{
				return default(WrappedRandom);
			}

			[Token(Token = "0x60016A3")]
			[Address(RVA = "0xD7B444", Offset = "0xD7B444", VA = "0xD7B444")]
			public LoadedLayers()
			{
			}
		}

		[Token(Token = "0x200036C")]
		public struct LoadParameters
		{
			[Token(Token = "0x4001398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorTagsInput tags;

			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public WrappedRandom random;

			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool debugLogMessages;

			[Token(Token = "0x60016A4")]
			[Address(RVA = "0xD7A76C", Offset = "0xD7A76C", VA = "0xD7A76C")]
			public LoadParameters(SectorTagsInput tags, WrappedRandom random, bool debugLogMessages = false)
			{
			}
		}

		[Token(Token = "0x200036D")]
		public struct UnloadParameters
		{
			[Token(Token = "0x400139B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool debugLogMessages;

			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xD7B4DC", Offset = "0xD7B4DC", VA = "0xD7B4DC")]
			public UnloadParameters(bool debugLogMessages = false)
			{
			}
		}

		[Token(Token = "0x200036E")]
		public class LoadResult
		{
			[Token(Token = "0x200036F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F20", Offset = "0x8A9F20")]
			private sealed class <FinishRoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40013A3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40013A4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40013A5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public LoadResult <>4__this;

				[Token(Token = "0x40013A6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private int <finishFrameCount>5__2;

				[Token(Token = "0x17000440")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60016BA")]
					[Address(RVA = "0xEAE730", Offset = "0xEAE730", VA = "0xEAE730", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000441")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60016BC")]
					[Address(RVA = "0xEAE778", Offset = "0xEAE778", VA = "0xEAE778", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60016B7")]
				[Address(RVA = "0xEAE5AC", Offset = "0xEAE5AC", VA = "0xEAE5AC")]
				[DebuggerHidden]
				public <FinishRoutine>d__30(int <>1__state)
				{
				}

				[Token(Token = "0x60016B8")]
				[Address(RVA = "0xEAE5D8", Offset = "0xEAE5D8", VA = "0xEAE5D8", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60016B9")]
				[Address(RVA = "0xEAE5DC", Offset = "0xEAE5DC", VA = "0xEAE5DC", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60016BB")]
				[Address(RVA = "0xEAE738", Offset = "0xEAE738", VA = "0xEAE738", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x400139C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEA80", Offset = "0x8BEA80")]
			private bool <IsValid>k__BackingField;

			[Token(Token = "0x400139D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<AsyncOperationHandle> asyncOperationHandles;

			[Token(Token = "0x400139E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private List<AsyncOperation> asyncOperations;

			[Token(Token = "0x400139F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<AsyncFlag> asyncFlags;

			[Token(Token = "0x40013A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Action> finishCallbacks;

			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private EmptyMonoBehaviour finishCoroutine;

			[Token(Token = "0x40013A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncFlag finishFlag;

			[Token(Token = "0x1700043A")]
			public bool IsValid
			{
				[Token(Token = "0x60016A6")]
				[Address(RVA = "0xD7A7B8", Offset = "0xD7A7B8", VA = "0xD7A7B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1B60", Offset = "0x8D1B60")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60016A7")]
				[Address(RVA = "0xD7A7C0", Offset = "0xD7A7C0", VA = "0xD7A7C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1B70", Offset = "0x8D1B70")]
				private set
				{
				}
			}

			[Token(Token = "0x1700043B")]
			public int OperationPendingCount
			{
				[Token(Token = "0x60016A8")]
				[Address(RVA = "0xD7A7CC", Offset = "0xD7A7CC", VA = "0xD7A7CC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700043C")]
			public int OperationFinishedCount
			{
				[Token(Token = "0x60016A9")]
				[Address(RVA = "0xD7A854", Offset = "0xD7A854", VA = "0xD7A854")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700043D")]
			public bool Finished
			{
				[Token(Token = "0x60016AA")]
				[Address(RVA = "0xD7ABF4", Offset = "0xD7ABF4", VA = "0xD7ABF4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700043E")]
			public float Progress
			{
				[Token(Token = "0x60016AB")]
				[Address(RVA = "0xD7AC28", Offset = "0xD7AC28", VA = "0xD7AC28")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700043F")]
			public AsyncFlag Flag
			{
				[Token(Token = "0x60016AC")]
				[Address(RVA = "0xD7AC60", Offset = "0xD7AC60", VA = "0xD7AC60")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x14000065")]
			public event Action OnFinish
			{
				[Token(Token = "0x60016AD")]
				[Address(RVA = "0xD7ADDC", Offset = "0xD7ADDC", VA = "0xD7ADDC")]
				add
				{
				}
				[Token(Token = "0x60016AE")]
				[Address(RVA = "0xD7AFBC", Offset = "0xD7AFBC", VA = "0xD7AFBC")]
				remove
				{
				}
			}

			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xD7B02C", Offset = "0xD7B02C", VA = "0xD7B02C")]
			public static LoadResult Valid()
			{
				return null;
			}

			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xD7B0BC", Offset = "0xD7B0BC", VA = "0xD7B0BC")]
			public static LoadResult Invalid()
			{
				return null;
			}

			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xD7B08C", Offset = "0xD7B08C", VA = "0xD7B08C")]
			public LoadResult(bool isValid)
			{
			}

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xD79218", Offset = "0xD79218", VA = "0xD79218")]
			public void AddOperation(AsyncOperationHandle handle)
			{
			}

			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xD7B118", Offset = "0xD7B118", VA = "0xD7B118")]
			public void AddOperation(AsyncOperation handle)
			{
			}

			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xD785E0", Offset = "0xD785E0", VA = "0xD785E0")]
			public void AddOperation(AsyncFlag handle)
			{
			}

			[Token(Token = "0x60016B5")]
			[Address(RVA = "0xD7B1D0", Offset = "0xD7B1D0", VA = "0xD7B1D0")]
			public void AddOperation(LoadResult result)
			{
			}

			[Token(Token = "0x60016B6")]
			[Address(RVA = "0xD7AF44", Offset = "0xD7AF44", VA = "0xD7AF44")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D1B80", Offset = "0x8D1B80")]
			private IEnumerator FinishRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F30", Offset = "0x8A9F30")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x40013A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LoadedLayers loadedLayers;

			[Token(Token = "0x40013A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<int, List<SectorLayer>, LoadParameters, LoadResult, SectorTagCollection> loadAction;

			[Token(Token = "0x60016BD")]
			[Address(RVA = "0xD79DD4", Offset = "0xD79DD4", VA = "0xD79DD4")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x60016BE")]
			[Address(RVA = "0xD79DDC", Offset = "0xD79DDC", VA = "0xD79DDC")]
			internal void <LoadLayers>b__0(int index, List<SectorLayer> layerList, LoadParameters param, LoadResult result, SectorTagCollection tags)
			{
			}
		}

		[Token(Token = "0x2000371")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F40", Offset = "0x8A9F40")]
		private sealed class <>c__DisplayClass50_1
		{
			[Token(Token = "0x40013A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x40013AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<SectorLayer> layerList;

			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadParameters param;

			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LoadResult result;

			[Token(Token = "0x40013AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public SectorTagCollection tags;

			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public <>c__DisplayClass50_0 CS$<>8__locals1;

			[Token(Token = "0x60016BF")]
			[Address(RVA = "0xD7A070", Offset = "0xD7A070", VA = "0xD7A070")]
			public <>c__DisplayClass50_1()
			{
			}

			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xD7A078", Offset = "0xD7A078", VA = "0xD7A078")]
			internal void <LoadLayers>b__1()
			{
			}
		}

		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F50", Offset = "0x8A9F50")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LoadedLayers loadedLayers;

			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<int, List<SectorLayer>, UnloadParameters, LoadResult> unloadAction;

			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xD7A114", Offset = "0xD7A114", VA = "0xD7A114")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xD7A11C", Offset = "0xD7A11C", VA = "0xD7A11C")]
			internal void <UnloadLayers>b__0(int index, List<SectorLayer> layerList, UnloadParameters param, LoadResult result)
			{
			}
		}

		[Token(Token = "0x2000373")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F60", Offset = "0x8A9F60")]
		private sealed class <>c__DisplayClass53_1
		{
			[Token(Token = "0x40013B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<SectorLayer> layerList;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnloadParameters param;

			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoadResult result;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public <>c__DisplayClass53_0 CS$<>8__locals1;

			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xD7A5F4", Offset = "0xD7A5F4", VA = "0xD7A5F4")]
			public <>c__DisplayClass53_1()
			{
			}

			[Token(Token = "0x60016C4")]
			[Address(RVA = "0xD7A5FC", Offset = "0xD7A5FC", VA = "0xD7A5FC")]
			internal void <UnloadLayers>b__1()
			{
			}
		}

		[Token(Token = "0x2000374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F70", Offset = "0x8A9F70")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorLayer <>4__this;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action continueAction;

			[Token(Token = "0x60016C5")]
			[Address(RVA = "0xD7A66C", Offset = "0xD7A66C", VA = "0xD7A66C")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xD7A674", Offset = "0xD7A674", VA = "0xD7A674")]
			internal void <LoadLayer>b__0(bool success)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000375")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F80", Offset = "0x8A9F80")]
		private sealed class <>c
		{
			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<SectorLayer> <>9__59_0;

			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xD79D44", Offset = "0xD79D44", VA = "0xD79D44")]
			public <>c()
			{
			}

			[Token(Token = "0x60016C9")]
			[Address(RVA = "0xD79D4C", Offset = "0xD79D4C", VA = "0xD79D4C")]
			internal int <GetSectorLayersInScene>b__59_0(SectorLayer a, SectorLayer b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400137D")]
		public const int MAX_GLOBAL_SECTOR_TAGS_HISTORY_LENGTH = 10;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IReadOnlyDictionary<string, int> EMPTY_TAG_DICTIONARY;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE96C", Offset = "0x8BE96C")]
		[SerializeField]
		private AssetLabelReference objectLabel;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int order;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE9C8", Offset = "0x8BE9C8")]
		[SerializeField]
		protected SectorTagCollectionHierarchy layerTags;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEA14", Offset = "0x8BEA14")]
		private UnityEvent onLoadSuccess;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onLoadFail;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool loaded;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, int> localSceneTags;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<string, int> globalSceneTags;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<string, int> globalSceneTagsHistoryNext;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<Dictionary<string, int>> globalSceneTagsHistory;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<string, int> globalSceneTagsAutoClear;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static bool globalSceneTagsHistoryClear;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<Dictionary<string, int>> globalSceneTagsHistoryQueue;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static LoadedLayers loadedLayers;

		[Token(Token = "0x1700042F")]
		public AssetLabelReference ObjectLabel
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0xD85EE8", Offset = "0xD85EE8", VA = "0xD85EE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000430")]
		public int Order
		{
			[Token(Token = "0x6001668")]
			[Address(RVA = "0xD85EF0", Offset = "0xD85EF0", VA = "0xD85EF0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000431")]
		public static IReadOnlyDictionary<string, int> SceneTags
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0xD85EF8", Offset = "0xD85EF8", VA = "0xD85EF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000432")]
		public static LoadState LoadedLayersState
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0xD85F5C", Offset = "0xD85F5C", VA = "0xD85F5C")]
			get
			{
				return default(LoadState);
			}
		}

		[Token(Token = "0x17000433")]
		public static IReadOnlyList<SectorTagAmount> LoadedLayersTags
		{
			[Token(Token = "0x600166B")]
			[Address(RVA = "0xD85FCC", Offset = "0xD85FCC", VA = "0xD85FCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000434")]
		public static WrappedRandom LoadedLayersRandom
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0xD86044", Offset = "0xD86044", VA = "0xD86044")]
			get
			{
				return default(WrappedRandom);
			}
		}

		[Token(Token = "0x17000435")]
		public static LoadResult LoadedLayersResult
		{
			[Token(Token = "0x600166D")]
			[Address(RVA = "0xD860B4", Offset = "0xD860B4", VA = "0xD860B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000436")]
		public static LoadParameters LoadedLayersParameters
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0xD86124", Offset = "0xD86124", VA = "0xD86124")]
			get
			{
				return default(LoadParameters);
			}
		}

		[Token(Token = "0x17000437")]
		public static IReadOnlyDictionary<string, int> GlobalSceneTagsHistoryNext
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0xD861A4", Offset = "0xD861A4", VA = "0xD861A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000438")]
		public static IReadOnlyList<Dictionary<string, int>> GlobalSceneTagsHistory
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0xD86208", Offset = "0xD86208", VA = "0xD86208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000064")]
		public static event Action OnSceneTagsChanged
		{
			[Token(Token = "0x6001671")]
			[Address(RVA = "0xD8626C", Offset = "0xD8626C", VA = "0xD8626C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1B40", Offset = "0x8D1B40")]
			add
			{
			}
			[Token(Token = "0x6001672")]
			[Address(RVA = "0xD86364", Offset = "0xD86364", VA = "0xD86364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1B50", Offset = "0x8D1B50")]
			remove
			{
			}
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xD8645C", Offset = "0xD8645C", VA = "0xD8645C", Slot = "4")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001674")]
		protected abstract void LoadLayerAction(LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction);

		[Token(Token = "0x6001675")]
		protected abstract void UnloadLayerAction(UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, Action continueAction);

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xD86468", Offset = "0xD86468", VA = "0xD86468")]
		public static LoadResult LoadLayers(LoadParameters loadParams, [System.Runtime.InteropServices.Optional] Action continueAction)
		{
			return null;
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xD86D60", Offset = "0xD86D60", VA = "0xD86D60")]
		public static LoadResult LoadLayers(Scene scene, LoadParameters loadParams, [System.Runtime.InteropServices.Optional] Action continueAction)
		{
			return null;
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xD86540", Offset = "0xD86540", VA = "0xD86540")]
		private static LoadResult LoadLayers(Scene scene, LoadedLayers loadedLayers, LoadParameters loadParams, Action continueAction)
		{
			return null;
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xD87250", Offset = "0xD87250", VA = "0xD87250")]
		public static LoadResult UnloadLayers(UnloadParameters unloadParams, [System.Runtime.InteropServices.Optional] Action continueAction)
		{
			return null;
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xD87728", Offset = "0xD87728", VA = "0xD87728")]
		public static LoadResult UnloadLayers(Scene scene, UnloadParameters unloadParams, [System.Runtime.InteropServices.Optional] Action continueAction)
		{
			return null;
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xD8730C", Offset = "0xD8730C", VA = "0xD8730C")]
		private static LoadResult UnloadLayers(Scene scene, LoadedLayers loadedLayers, UnloadParameters unloadParams, Action continueAction)
		{
			return null;
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xD87D0C", Offset = "0xD87D0C", VA = "0xD87D0C")]
		public void LoadLayer(LoadParameters loadParams, LoadResult loadResult, [System.Runtime.InteropServices.Optional] Action continueAction)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xD87FA8", Offset = "0xD87FA8", VA = "0xD87FA8")]
		public void UnloadLayer(UnloadParameters unloadParams, LoadResult loadResult, [System.Runtime.InteropServices.Optional] Action continueAction)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xD87FB8", Offset = "0xD87FB8", VA = "0xD87FB8")]
		private void UnloadLayerInternal(UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, [System.Runtime.InteropServices.Optional] Action continueAction)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xD8832C", Offset = "0xD8832C", VA = "0xD8832C", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xD88340", Offset = "0xD88340", VA = "0xD88340")]
		private void TriggerLoadEvent(bool success)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xD86E90", Offset = "0xD86E90", VA = "0xD86E90")]
		private static void GetSectorLayersInScene(Scene scene, out GameObject[] rootObjs, out List<SectorLayer> layers)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xD86E08", Offset = "0xD86E08", VA = "0xD86E08")]
		private static void LogDebug(string message, LoadParameters loadParams)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xD877A4", Offset = "0xD877A4", VA = "0xD877A4")]
		private static void LogDebug(string message, UnloadParameters loadParams)
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xD88360", Offset = "0xD88360", VA = "0xD88360")]
		protected void AddSceneTags(SectorTagCollection collection)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xD88AE4", Offset = "0xD88AE4", VA = "0xD88AE4")]
		public static void AddGlobalSceneTags(SectorTagCollection collection)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xD88EFC", Offset = "0xD88EFC", VA = "0xD88EFC")]
		public static void ModifyGlobalSceneTags(SectorTag sceneTag, SectorTagRuleModification modification, int modificationValue = 0)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xD84350", Offset = "0xD84350", VA = "0xD84350")]
		protected void AddSceneTag(string sceneTag, int count = 1)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xD8875C", Offset = "0xD8875C", VA = "0xD8875C")]
		protected static void AddSceneTag(Dictionary<string, int> localTags, string sceneTag, int count = 1)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xD8710C", Offset = "0xD8710C", VA = "0xD8710C")]
		protected static void AddGlobalSceneTag(string sceneTag, int count = 1)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xD891EC", Offset = "0xD891EC", VA = "0xD891EC")]
		protected void RemoveSceneTag(string sceneTag, int count = 1)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xD88850", Offset = "0xD88850", VA = "0xD88850")]
		protected static void RemoveSceneTag(Dictionary<string, int> localTags, string sceneTag, int count = 1)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xD881AC", Offset = "0xD881AC", VA = "0xD881AC")]
		private static void RemoveGlobalSceneTag(string sceneTag, int count = 1)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xD844B4", Offset = "0xD844B4", VA = "0xD844B4")]
		protected void SetSceneTag(string sceneTag, int count)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xD8898C", Offset = "0xD8898C", VA = "0xD8898C")]
		protected static void SetSceneTag(Dictionary<string, int> localTags, string sceneTag, int count)
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xD8782C", Offset = "0xD8782C", VA = "0xD8782C")]
		private static void SaveGlobalTagsToHistory()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xD89268", Offset = "0xD89268", VA = "0xD89268")]
		public static void ClearGlobalTagsHistory()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xD892D0", Offset = "0xD892D0", VA = "0xD892D0")]
		public static void SetupGlobalTagsHistory(List<OnGoingRunState.HistoryScene> historyScenes)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xD87B44", Offset = "0xD87B44", VA = "0xD87B44")]
		private static void AutoClearGlobalTags()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xD89654", Offset = "0xD89654", VA = "0xD89654")]
		public static bool TryGetPrefixTag(string tag, string prefix, out string suffix)
		{
			return default(bool);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xD896EC", Offset = "0xD896EC", VA = "0xD896EC")]
		public static int CountSceneTag(string tag, int sceneTagIndex = 0)
		{
			return default(int);
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xD898C0", Offset = "0xD898C0", VA = "0xD898C0")]
		public static WrappedRandom LoadedLayersRandomPushStack()
		{
			return default(WrappedRandom);
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xD89930", Offset = "0xD89930", VA = "0xD89930")]
		public static WrappedRandom LoadedLayersRandomPopStack()
		{
			return default(WrappedRandom);
		}

		[Token(Token = "0x6001697")]
		public static int GetRandomSelectionWeightTotal<T>(IReadOnlyList<T> objects, Func<T, int> getWeight, [System.Runtime.InteropServices.Optional] Func<T, bool> isValid)
		{
			return default(int);
		}

		[Token(Token = "0x6001698")]
		public static int GetRandomSelectionIndex<T>(IReadOnlyList<T> objects, int totalWeight, Func<T, int> getWeight, [System.Runtime.InteropServices.Optional] Func<T, bool> isValid, [System.Runtime.InteropServices.Optional] WrappedRandom random)
		{
			return default(int);
		}

		[Token(Token = "0x6001699")]
		public static T GetRandomSelection<T>(IReadOnlyList<T> objects, int totalWeight, Func<T, int> getWeight, [System.Runtime.InteropServices.Optional] Func<T, bool> isValid, [System.Runtime.InteropServices.Optional] WrappedRandom random)
		{
			return (T)null;
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xD85D7C", Offset = "0xD85D7C", VA = "0xD85D7C")]
		protected SectorLayer()
		{
		}
	}
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A9F90", Offset = "0x8A9F90")]
	public class SectorObject : ScriptableObject, ISectorAsset
	{
		[Token(Token = "0x2000377")]
		public enum AssetHandleType
		{
			[Token(Token = "0x40013C7")]
			None,
			[Token(Token = "0x40013C8")]
			GameObject,
			[Token(Token = "0x40013C9")]
			Scene
		}

		[Serializable]
		[Token(Token = "0x2000378")]
		public struct AssetPoolingSettings
		{
			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int poolMaxSize;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int loadDensity;
		}

		[Token(Token = "0x2000379")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9FFC", Offset = "0x8A9FFC")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorObject <>4__this;

			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<AsyncOperationHandle> onUnloadAsync;

			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xD7F0E8", Offset = "0xD7F0E8", VA = "0xD7F0E8")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x60016E3")]
			[Address(RVA = "0xD7F0F0", Offset = "0xD7F0F0", VA = "0xD7F0F0")]
			internal void <UnloadAsync>b__0(AsyncOperationHandle<SceneInstance> s)
			{
			}
		}

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEA90", Offset = "0x8BEA90")]
		[SerializeField]
		private AssetReference asset;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string assetName;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssetPoolingSettings assetPooling;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SectorTagValue selectionWeight;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SectorTagValue selectionPoints;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SectorTagCollectionHierarchy objectTags;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AsyncOperationHandle<GameObject> gameObjectHandle;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AsyncOperationHandle<SceneInstance> sceneHandle;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB2C", Offset = "0x8BEB2C")]
		private AssetHandleType <HandleType>k__BackingField;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB3C", Offset = "0x8BEB3C")]
		private int <HandleRefCount>k__BackingField;

		[Token(Token = "0x17000442")]
		public AssetHandleType HandleType
		{
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0xD948AC", Offset = "0xD948AC", VA = "0xD948AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1C30", Offset = "0x8D1C30")]
			get
			{
				return default(AssetHandleType);
			}
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0xD948B4", Offset = "0xD948B4", VA = "0xD948B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1C40", Offset = "0x8D1C40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000443")]
		public int HandleRefCount
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xD948BC", Offset = "0xD948BC", VA = "0xD948BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1C50", Offset = "0x8D1C50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0xD948C4", Offset = "0xD948C4", VA = "0xD948C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1C60", Offset = "0x8D1C60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000444")]
		public string AssetName
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xD948CC", Offset = "0xD948CC", VA = "0xD948CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000445")]
		public string AssetGuid
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0xD948D4", Offset = "0xD948D4", VA = "0xD948D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000446")]
		public AssetPoolingSettings AssetPooling
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0xD94924", Offset = "0xD94924", VA = "0xD94924")]
			get
			{
				return default(AssetPoolingSettings);
			}
		}

		[Token(Token = "0x17000447")]
		public AsyncOperationHandle<GameObject> GameObjectHandle
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0xD9492C", Offset = "0xD9492C", VA = "0xD9492C")]
			get
			{
				return default(AsyncOperationHandle<GameObject>);
			}
		}

		[Token(Token = "0x17000448")]
		public AsyncOperationHandle<SceneInstance> SceneHandle
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0xD94940", Offset = "0xD94940", VA = "0xD94940")]
			get
			{
				return default(AsyncOperationHandle<SceneInstance>);
			}
		}

		[Token(Token = "0x17000449")]
		private string Game.Sector.ISectorAsset.Name
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0xD94954", Offset = "0xD94954", VA = "0xD94954", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044A")]
		public SectorTagCollectionHierarchy ObjectTags
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0xD9498C", Offset = "0xD9498C", VA = "0xD9498C")]
			get
			{
				return default(SectorTagCollectionHierarchy);
			}
		}

		[Token(Token = "0x14000066")]
		public static event Action<SectorObject, AsyncOperationHandle<GameObject>> OnFirstLoadGameObject
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0xD94998", Offset = "0xD94998", VA = "0xD94998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1C70", Offset = "0x8D1C70")]
			add
			{
			}
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xD94A54", Offset = "0xD94A54", VA = "0xD94A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1C80", Offset = "0x8D1C80")]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public static event Action<SectorObject, AsyncOperationHandle<SceneInstance>> OnFirstLoadScene
		{
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0xD94B10", Offset = "0xD94B10", VA = "0xD94B10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1C90", Offset = "0x8D1C90")]
			add
			{
			}
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0xD94BD0", Offset = "0xD94BD0", VA = "0xD94BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1CA0", Offset = "0x8D1CA0")]
			remove
			{
			}
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xD9495C", Offset = "0xD9495C", VA = "0xD9495C", Slot = "5")]
		public int GetSelectionWeight(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xD94968", Offset = "0xD94968", VA = "0xD94968", Slot = "6")]
		public int GetSelectionWeight(SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xD94974", Offset = "0xD94974", VA = "0xD94974", Slot = "7")]
		public int GetSelectionPoints(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xD94980", Offset = "0xD94980", VA = "0xD94980", Slot = "8")]
		public int GetSelectionPoints(SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xD94C90", Offset = "0xD94C90", VA = "0xD94C90")]
		public bool AssetRuntimeKeyIsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xD94CAC", Offset = "0xD94CAC", VA = "0xD94CAC")]
		public AsyncOperationHandle<GameObject> LoadGameObjectAsync([System.Runtime.InteropServices.Optional] Action<SectorObject, AsyncOperationHandle> onFirstLoad, bool subsequentCallIncreaseRefCount = true)
		{
			return default(AsyncOperationHandle<GameObject>);
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xD94ED8", Offset = "0xD94ED8", VA = "0xD94ED8")]
		public AsyncOperationHandle<SceneInstance> LoadSceneAsync(LoadSceneMode loadSceneMode, [System.Runtime.InteropServices.Optional] Action<SectorObject, AsyncOperationHandle> onFirstLoad, bool subsequentCallIncreaseRefCount = true)
		{
			return default(AsyncOperationHandle<SceneInstance>);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xD950F0", Offset = "0xD950F0", VA = "0xD950F0")]
		public bool UnloadAsync([System.Runtime.InteropServices.Optional] Action<AsyncOperationHandle> onUnloadAsync)
		{
			return default(bool);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xD9539C", Offset = "0xD9539C", VA = "0xD9539C")]
		public SectorObject()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class SectorObjectCloneLayer : SectorLayer, ISectorPositions
	{
		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA00C", Offset = "0x8AA00C")]
		private sealed class <get_Positions>d__11 : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector3 <>2__current;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SectorObjectCloneLayer <>4__this;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700044F")]
			private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
			{
				[Token(Token = "0x60016EF")]
				[Address(RVA = "0xD7F35C", Offset = "0xD7F35C", VA = "0xD7F35C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000450")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016F1")]
				[Address(RVA = "0xD7F3A8", Offset = "0xD7F3A8", VA = "0xD7F3A8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xD7F238", Offset = "0xD7F238", VA = "0xD7F238")]
			[DebuggerHidden]
			public <get_Positions>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xD7F270", Offset = "0xD7F270", VA = "0xD7F270", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016EE")]
			[Address(RVA = "0xD7F274", Offset = "0xD7F274", VA = "0xD7F274", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016F0")]
			[Address(RVA = "0xD7F368", Offset = "0xD7F368", VA = "0xD7F368", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xD7F410", Offset = "0xD7F410", VA = "0xD7F410", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60016F3")]
			[Address(RVA = "0xD7F4C0", Offset = "0xD7F4C0", VA = "0xD7F4C0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SectorSlotPrefabSingle.InstantiateSpace instantiateSpace;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<GameObject> templateObjects;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> instanceObjects;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Vector3> instancePositions;

		[Token(Token = "0x1700044B")]
		public bool HasOriginPosition
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xD953A4", Offset = "0xD953A4", VA = "0xD953A4", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044C")]
		public Vector3 OriginPosition
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xD953AC", Offset = "0xD953AC", VA = "0xD953AC", Slot = "8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700044D")]
		public bool HasPositions
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xD953B4", Offset = "0xD953B4", VA = "0xD953B4", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044E")]
		public IEnumerable<Vector3> Positions
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xD953BC", Offset = "0xD953BC", VA = "0xD953BC", Slot = "10")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D1CB0", Offset = "0x8D1CB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xD95434", Offset = "0xD95434", VA = "0xD95434")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xD9550C", Offset = "0xD9550C", VA = "0xD9550C", Slot = "5")]
		protected override void LoadLayerAction(LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xD957A8", Offset = "0xD957A8", VA = "0xD957A8", Slot = "6")]
		protected override void UnloadLayerAction(UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, Action continueAction)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xD95914", Offset = "0xD95914", VA = "0xD95914")]
		public SectorObjectCloneLayer()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class SectorObjectPooled : MonoBehaviour
	{
		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEB7C", Offset = "0x8BEB7C")]
		private string <AssetGuid>k__BackingField;

		[Token(Token = "0x17000451")]
		public string AssetGuid
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0xD95A44", Offset = "0xD95A44", VA = "0xD95A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1D80", Offset = "0x8D1D80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0xD95A4C", Offset = "0xD95A4C", VA = "0xD95A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1D90", Offset = "0x8D1D90")]
			set
			{
			}
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xD95A54", Offset = "0xD95A54", VA = "0xD95A54")]
		public SectorObjectPooled()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class SectorObjectPooler : MonoBehaviourSingleton<SectorObjectPooler>
	{
		[Token(Token = "0x200037E")]
		private struct SectorObjectPoolEntry
		{
			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject gameObject;

			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncFlag handle;

			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xD7F838", Offset = "0xD7F838", VA = "0xD7F838")]
			public SectorObjectPoolEntry(GameObject gameObject)
			{
			}

			[Token(Token = "0x6001700")]
			[Address(RVA = "0xD7F8FC", Offset = "0xD7F8FC", VA = "0xD7F8FC")]
			public SectorObjectPoolEntry(GameObject gameObject, AsyncFlag handle)
			{
			}
		}

		[Token(Token = "0x200037F")]
		private struct SectorObjectPool
		{
			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string assetGuid;

			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int maxSize;

			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int loadDensity;

			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorObject sectorObject;

			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<SectorObjectPoolEntry> gameObjects;

			[Token(Token = "0x6001701")]
			[Address(RVA = "0xD7F770", Offset = "0xD7F770", VA = "0xD7F770")]
			public SectorObjectPool(SectorObject sectorObject)
			{
			}
		}

		[Token(Token = "0x2000380")]
		private struct PendingSectorObjectActive
		{
			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncFlag handle;

			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject gameObject;

			[Token(Token = "0x6001702")]
			[Address(RVA = "0xD7F73C", Offset = "0xD7F73C", VA = "0xD7F73C")]
			public PendingSectorObjectActive(AsyncFlag handle, GameObject gameObject)
			{
			}
		}

		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA01C", Offset = "0x8AA01C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40013E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<GameObject> callback;

			[Token(Token = "0x40013E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorSlotLayer.AddAssetFunctions addAssetFunctions;

			[Token(Token = "0x40013E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 localPosition;

			[Token(Token = "0x40013E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion localRotation;

			[Token(Token = "0x40013E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 localScale;

			[Token(Token = "0x40013E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform parent;

			[Token(Token = "0x40013E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Scene scene;

			[Token(Token = "0x40013EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int loadDensity;

			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Action<GameObject> instantiateCallback;

			[Token(Token = "0x6001703")]
			[Address(RVA = "0xD7F4C4", Offset = "0xD7F4C4", VA = "0xD7F4C4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001704")]
			[Address(RVA = "0xD7F4CC", Offset = "0xD7F4CC", VA = "0xD7F4CC")]
			internal void <InstantiateStaggered>b__0(AsyncOperationHandle<GameObject> prefabGameObject)
			{
			}
		}

		[Token(Token = "0x2000382")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA02C", Offset = "0x8AA02C")]
		private sealed class <>c__DisplayClass10_1
		{
			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string assetGuid;

			[Token(Token = "0x40013ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass10_0 CS$<>8__locals1;

			[Token(Token = "0x6001705")]
			[Address(RVA = "0xD7F5E8", Offset = "0xD7F5E8", VA = "0xD7F5E8")]
			public <>c__DisplayClass10_1()
			{
			}

			[Token(Token = "0x6001706")]
			[Address(RVA = "0xD7F5F0", Offset = "0xD7F5F0", VA = "0xD7F5F0")]
			internal void <InstantiateStaggered>b__1(GameObject g)
			{
			}
		}

		[Token(Token = "0x2000383")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA03C", Offset = "0x8AA03C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40013EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action callback;

			[Token(Token = "0x6001707")]
			[Address(RVA = "0xD7F6A0", Offset = "0xD7F6A0", VA = "0xD7F6A0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001708")]
			[Address(RVA = "0xD7F6A8", Offset = "0xD7F6A8", VA = "0xD7F6A8")]
			internal bool <DestroyStaggeredSafe>b__0(SectorObjectPoolEntry g)
			{
				return default(bool);
			}

			[Token(Token = "0x6001709")]
			[Address(RVA = "0xD7F720", Offset = "0xD7F720", VA = "0xD7F720")]
			internal void <DestroyStaggeredSafe>b__1(GameObject g)
			{
			}
		}

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, SectorObjectPool> pools;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<PendingSectorObjectActive> pendingObjects;

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xD95A5C", Offset = "0xD95A5C", VA = "0xD95A5C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xD95F80", Offset = "0xD95F80", VA = "0xD95F80", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xD9630C", Offset = "0xD9630C", VA = "0xD9630C")]
		public static AsyncOperationHandle<GameObject> Load(SectorObject prefab, [System.Runtime.InteropServices.Optional] SectorSlotLayer.AddAssetFunctions addAssetFunctions)
		{
			return default(AsyncOperationHandle<GameObject>);
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xD9653C", Offset = "0xD9653C", VA = "0xD9653C")]
		public static void LoadAndInstantiateStaggered(SectorObject prefab, Vector3 localPosition, Quaternion localRotation, Vector3 localScale, [System.Runtime.InteropServices.Optional] Transform parent, [System.Runtime.InteropServices.Optional] Scene scene, [System.Runtime.InteropServices.Optional] SectorSlotLayer.AddAssetFunctions addAssetFunctions, [System.Runtime.InteropServices.Optional] Action<GameObject> callback, bool addLoadRefCount = true)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xD96CD8", Offset = "0xD96CD8", VA = "0xD96CD8")]
		public static void InstantiateStaggered(SectorObject prefab, Vector3 localPosition, Quaternion localRotation, Vector3 localScale, [System.Runtime.InteropServices.Optional] Transform parent, [System.Runtime.InteropServices.Optional] Scene scene, [System.Runtime.InteropServices.Optional] SectorSlotLayer.AddAssetFunctions addAssetFunctions, [System.Runtime.InteropServices.Optional] Action<GameObject> callback)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xD96598", Offset = "0xD96598", VA = "0xD96598")]
		private static void InstantiateStaggered(SectorObject prefab, Vector3 localPosition, Quaternion localRotation, Vector3 localScale, bool loadPrefab, [System.Runtime.InteropServices.Optional] Transform parent, [System.Runtime.InteropServices.Optional] Scene scene, [System.Runtime.InteropServices.Optional] SectorSlotLayer.AddAssetFunctions addAssetFunctions, [System.Runtime.InteropServices.Optional] Action<GameObject> callback, bool addLoadRefCount = true)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xD95C1C", Offset = "0xD95C1C", VA = "0xD95C1C")]
		public static AsyncFlag DestroyStaggeredSafe(GameObject gameObject, [System.Runtime.InteropServices.Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xD96D30", Offset = "0xD96D30", VA = "0xD96D30")]
		public SectorObjectPooler()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class SectorPlayerLayer : SectorLayer, ISectorPositions, ISectorTransformMirror
	{
		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA04C", Offset = "0x8AA04C")]
		private sealed class <get_Positions>d__9 : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector3 <>2__current;

			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SectorPlayerLayer <>4__this;

			[Token(Token = "0x17000459")]
			private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
			{
				[Token(Token = "0x6001725")]
				[Address(RVA = "0xD80464", Offset = "0xD80464", VA = "0xD80464", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700045A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001727")]
				[Address(RVA = "0xD804B0", Offset = "0xD804B0", VA = "0xD804B0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001722")]
			[Address(RVA = "0xD803C0", Offset = "0xD803C0", VA = "0xD803C0")]
			[DebuggerHidden]
			public <get_Positions>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001723")]
			[Address(RVA = "0xD803F8", Offset = "0xD803F8", VA = "0xD803F8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001724")]
			[Address(RVA = "0xD803FC", Offset = "0xD803FC", VA = "0xD803FC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001726")]
			[Address(RVA = "0xD80470", Offset = "0xD80470", VA = "0xD80470", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001728")]
			[Address(RVA = "0xD80518", Offset = "0xD80518", VA = "0xD80518", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001729")]
			[Address(RVA = "0xD805C8", Offset = "0xD805C8", VA = "0xD805C8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000386")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA05C", Offset = "0x8AA05C")]
		private sealed class <SetupPlayerShipRoutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorPlayerLayer <>4__this;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject playerShip;

			[Token(Token = "0x4001407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AsyncFlag setupFlag;

			[Token(Token = "0x1700045B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600172D")]
				[Address(RVA = "0xD80370", Offset = "0xD80370", VA = "0xD80370", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600172F")]
				[Address(RVA = "0xD803B8", Offset = "0xD803B8", VA = "0xD803B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600172A")]
			[Address(RVA = "0xD801BC", Offset = "0xD801BC", VA = "0xD801BC")]
			[DebuggerHidden]
			public <SetupPlayerShipRoutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x600172B")]
			[Address(RVA = "0xD801E8", Offset = "0xD801E8", VA = "0xD801E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600172C")]
			[Address(RVA = "0xD801EC", Offset = "0xD801EC", VA = "0xD801EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600172E")]
			[Address(RVA = "0xD80378", Offset = "0xD80378", VA = "0xD80378", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA06C", Offset = "0x8AA06C")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4001408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorPlayerLayer <>4__this;

			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LoadResult loadResult;

			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 originPosition;

			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion originRotation;

			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ContinueLoadLayerAction continueAction;

			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<AsyncOperationHandle<GameObject>> <>9__1;

			[Token(Token = "0x6001730")]
			[Address(RVA = "0xD7F930", Offset = "0xD7F930", VA = "0xD7F930")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6001731")]
			[Address(RVA = "0xD7F938", Offset = "0xD7F938", VA = "0xD7F938")]
			internal void <LoadLayerAction>b__0(AsyncOperationHandle<IList<SectorObject>> objs)
			{
			}

			[Token(Token = "0x6001732")]
			[Address(RVA = "0xD7FEB0", Offset = "0xD7FEB0", VA = "0xD7FEB0")]
			internal void <LoadLayerAction>b__1(AsyncOperationHandle<GameObject> prefab)
			{
			}
		}

		[Token(Token = "0x2000388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA07C", Offset = "0x8AA07C")]
		private sealed class <>c__DisplayClass40_1
		{
			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncFlag shipSetupFlag;

			[Token(Token = "0x400140F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass40_0 CS$<>8__locals1;

			[Token(Token = "0x6001733")]
			[Address(RVA = "0xD80184", Offset = "0xD80184", VA = "0xD80184")]
			public <>c__DisplayClass40_1()
			{
			}

			[Token(Token = "0x6001734")]
			[Address(RVA = "0xD8018C", Offset = "0xD8018C", VA = "0xD8018C")]
			internal void <LoadLayerAction>b__2(GameObject p)
			{
			}
		}

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEB8C", Offset = "0x8BEB8C")]
		private Transform originTransform;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AssetReferenceGameObject[] startSlotables;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int loadedPlayerLayerCount;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AsyncOperationHandle<IList<SectorObject>> layerObjsHandle;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static SectorObject shipAsset;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AsyncFlag shipInstantiateHandle;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static SpaceShip playerShip;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Vector3 playerShipPosition;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static SectorPlayerLayerEvents playerLayerEvents;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isGameSceneReferenceObject;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool startSlotablesLoaded;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine startSlotablesLoadRoutine;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GameObject> startSlotablePrefabs;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AddressableAssetDependencies assetDependencies;

		[Token(Token = "0x17000452")]
		public bool HasOriginPosition
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0xD96E98", Offset = "0xD96E98", VA = "0xD96E98", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000453")]
		public Vector3 OriginPosition
		{
			[Token(Token = "0x600170B")]
			[Address(RVA = "0xD96EA0", Offset = "0xD96EA0", VA = "0xD96EA0", Slot = "8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000454")]
		public bool HasPositions
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0xD96F34", Offset = "0xD96F34", VA = "0xD96F34", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000455")]
		public IEnumerable<Vector3> Positions
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0xD96F3C", Offset = "0xD96F3C", VA = "0xD96F3C", Slot = "10")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D1DA0", Offset = "0x8D1DA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000456")]
		public static bool HasLoadedPlayerLayer
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0xD96FB4", Offset = "0xD96FB4", VA = "0xD96FB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000457")]
		public static Vector3 LastPlayerShipStartPosition
		{
			[Token(Token = "0x600170F")]
			[Address(RVA = "0xD97020", Offset = "0xD97020", VA = "0xD97020")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000458")]
		public static SpaceShip PlayerShip
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0xD97088", Offset = "0xD97088", VA = "0xD97088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000068")]
		public static event Action<SpaceShip> PlayerShipChanged
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0xD970EC", Offset = "0xD970EC", VA = "0xD970EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1E00", Offset = "0x8D1E00")]
			add
			{
			}
			[Token(Token = "0x6001712")]
			[Address(RVA = "0xD971E0", Offset = "0xD971E0", VA = "0xD971E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1E10", Offset = "0x8D1E10")]
			remove
			{
			}
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xD972D4", Offset = "0xD972D4", VA = "0xD972D4")]
		public static void ClearPlayerShip()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xD9732C", Offset = "0xD9732C", VA = "0xD9732C")]
		private static void ClearPlayerShip(GameObject shipObject)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xD97668", Offset = "0xD97668", VA = "0xD97668")]
		private static void SetPlayerShip(GameObject playerShip)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xD97940", Offset = "0xD97940", VA = "0xD97940")]
		private void SetupPlayerShip(GameObject playerShip, AsyncFlag setupFlag)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xD97AB4", Offset = "0xD97AB4", VA = "0xD97AB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D1E20", Offset = "0x8D1E20")]
		private IEnumerator SetupPlayerShipRoutine(GameObject playerShip, AsyncFlag setupFlag)
		{
			return null;
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xD97B5C", Offset = "0xD97B5C", VA = "0xD97B5C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xD97D44", Offset = "0xD97D44", VA = "0xD97D44")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xD97D50", Offset = "0xD97D50", VA = "0xD97D50")]
		protected void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xD97E00", Offset = "0xD97E00", VA = "0xD97E00", Slot = "12")]
		private void Game.Sector.ISectorTransformMirror.TransformSectorMirror(SectorTransformMirrorData data)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xD97EA0", Offset = "0xD97EA0", VA = "0xD97EA0", Slot = "5")]
		protected override void LoadLayerAction(LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xD983AC", Offset = "0xD983AC", VA = "0xD983AC", Slot = "6")]
		protected override void UnloadLayerAction(UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, Action continueAction)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xD98660", Offset = "0xD98660", VA = "0xD98660")]
		public SectorPlayerLayer()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xD98804", Offset = "0xD98804", VA = "0xD98804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1E80", Offset = "0x8D1E80")]
		private void <Awake>b__36_1(GameObject p)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xD98868", Offset = "0xD98868", VA = "0xD98868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1E90", Offset = "0x8D1E90")]
		private void <Awake>b__36_0()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class SectorPlayerLayerEvents : GameMonoBehaviour
	{
		[Token(Token = "0x1700045D")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6001735")]
			[Address(RVA = "0xD98874", Offset = "0xD98874", VA = "0xD98874", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001736")]
			[Address(RVA = "0xD9887C", Offset = "0xD9887C", VA = "0xD9887C", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xD98880", Offset = "0xD98880", VA = "0xD98880", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xD98904", Offset = "0xD98904", VA = "0xD98904", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xD98AE4", Offset = "0xD98AE4", VA = "0xD98AE4", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xD98C64", Offset = "0xD98C64", VA = "0xD98C64")]
		private void OnLoadRunEnd(bool success)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xD98C68", Offset = "0xD98C68", VA = "0xD98C68")]
		private void OnLoadRunStartOrEnd()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xD98CEC", Offset = "0xD98CEC", VA = "0xD98CEC")]
		public SectorPlayerLayerEvents()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public interface ISectorPositions
	{
		[Token(Token = "0x1700045E")]
		Vector3 OriginPosition
		{
			[Token(Token = "0x600173D")]
			get;
		}

		[Token(Token = "0x1700045F")]
		bool HasOriginPosition
		{
			[Token(Token = "0x600173E")]
			get;
		}

		[Token(Token = "0x17000460")]
		IEnumerable<Vector3> Positions
		{
			[Token(Token = "0x600173F")]
			get;
		}

		[Token(Token = "0x17000461")]
		bool HasPositions
		{
			[Token(Token = "0x6001740")]
			get;
		}
	}
	[Token(Token = "0x200038B")]
	public class SectorPosition : MonoBehaviour, ISectorPositions
	{
		[Token(Token = "0x200038C")]
		public enum SectorPositionType
		{
			[Token(Token = "0x4001412")]
			ThisTransform,
			[Token(Token = "0x4001413")]
			ChildTransforms
		}

		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA08C", Offset = "0x8AA08C")]
		private sealed class <get_Positions>d__10 : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector3 <>2__current;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SectorPosition <>4__this;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x17000466")]
			private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
			{
				[Token(Token = "0x600174A")]
				[Address(RVA = "0xD806DC", Offset = "0xD806DC", VA = "0xD806DC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000467")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600174C")]
				[Address(RVA = "0xD80728", Offset = "0xD80728", VA = "0xD80728", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001747")]
			[Address(RVA = "0xD805CC", Offset = "0xD805CC", VA = "0xD805CC")]
			[DebuggerHidden]
			public <get_Positions>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001748")]
			[Address(RVA = "0xD80604", Offset = "0xD80604", VA = "0xD80604", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001749")]
			[Address(RVA = "0xD80608", Offset = "0xD80608", VA = "0xD80608", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600174B")]
			[Address(RVA = "0xD806E8", Offset = "0xD806E8", VA = "0xD806E8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600174D")]
			[Address(RVA = "0xD80790", Offset = "0xD80790", VA = "0xD80790", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600174E")]
			[Address(RVA = "0xD80840", Offset = "0xD80840", VA = "0xD80840", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SectorPositionType positionType;

		[Token(Token = "0x17000462")]
		public bool HasOriginPosition
		{
			[Token(Token = "0x6001741")]
			[Address(RVA = "0xD98CF4", Offset = "0xD98CF4", VA = "0xD98CF4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000463")]
		public Vector3 OriginPosition
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0xD98D04", Offset = "0xD98D04", VA = "0xD98D04", Slot = "4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001743")]
			[Address(RVA = "0xD98D28", Offset = "0xD98D28", VA = "0xD98D28")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000464")]
		public bool HasPositions
		{
			[Token(Token = "0x6001744")]
			[Address(RVA = "0xD98D74", Offset = "0xD98D74", VA = "0xD98D74", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000465")]
		public IEnumerable<Vector3> Positions
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0xD98D84", Offset = "0xD98D84", VA = "0xD98D84", Slot = "6")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D1F60", Offset = "0x8D1F60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xD98DFC", Offset = "0xD98DFC", VA = "0xD98DFC")]
		public SectorPosition()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class SectorSceneLayer : SectorLayer
	{
		[Token(Token = "0x200038F")]
		public class SectorSceneSelection : SectorAssetSelection<SectorObject>
		{
			[Token(Token = "0x6001759")]
			[Address(RVA = "0xD813CC", Offset = "0xD813CC", VA = "0xD813CC")]
			public SectorSceneSelection(SectorTagsInput tags, SectorTagCollection objTags, List<SectorAsset<SectorObject>> validObjects, int maxSelectionPoints, WrappedRandom random)
			{
			}
		}

		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA09C", Offset = "0x8AA09C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LoadParameters loadParams;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ContinueLoadLayerAction continueAction;

			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SectorSceneLayer <>4__this;

			[Token(Token = "0x4001420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LoadResult loadResult;

			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ContinueLoadLayerAction <>9__1;

			[Token(Token = "0x600175A")]
			[Address(RVA = "0xD80E04", Offset = "0xD80E04", VA = "0xD80E04")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600175B")]
			[Address(RVA = "0xD80E0C", Offset = "0xD80E0C", VA = "0xD80E0C")]
			internal void <LoadLayerAction>b__0(AsyncOperationHandle<IList<SectorObject>> objs)
			{
			}

			[Token(Token = "0x600175C")]
			[Address(RVA = "0xD81458", Offset = "0xD81458", VA = "0xD81458")]
			internal void <LoadLayerAction>b__1(bool continueResult)
			{
			}
		}

		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA0AC", Offset = "0x8AA0AC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LoadParameters loadParams;

			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ContinueLoadLayerAction continueAction;

			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LoadResult loadResult;

			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action <>9__1;

			[Token(Token = "0x600175D")]
			[Address(RVA = "0xD814E4", Offset = "0xD814E4", VA = "0xD814E4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600175E")]
			[Address(RVA = "0xD814EC", Offset = "0xD814EC", VA = "0xD814EC")]
			internal void <LoadAddressableScene>b__0(AsyncOperationHandle<SceneInstance> scene)
			{
			}

			[Token(Token = "0x600175F")]
			[Address(RVA = "0xD81664", Offset = "0xD81664", VA = "0xD81664")]
			internal void <LoadAddressableScene>b__1()
			{
			}
		}

		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA0BC", Offset = "0x8AA0BC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sceneName;

			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LoadParameters loadParams;

			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ContinueLoadLayerAction continueAction;

			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LoadResult loadResult;

			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action <>9__1;

			[Token(Token = "0x6001760")]
			[Address(RVA = "0xD81678", Offset = "0xD81678", VA = "0xD81678")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001761")]
			[Address(RVA = "0xD81680", Offset = "0xD81680", VA = "0xD81680")]
			internal void <LoadBuildScene>b__0(AsyncOperation sceneHandle)
			{
			}

			[Token(Token = "0x6001762")]
			[Address(RVA = "0xD818B8", Offset = "0xD818B8", VA = "0xD818B8")]
			internal void <LoadBuildScene>b__1()
			{
			}
		}

		[Token(Token = "0x2000393")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA0CC", Offset = "0x8AA0CC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorSceneLayer <>4__this;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action continueAction;

			[Token(Token = "0x6001763")]
			[Address(RVA = "0xD80844", Offset = "0xD80844", VA = "0xD80844")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001764")]
			[Address(RVA = "0xD8084C", Offset = "0xD8084C", VA = "0xD8084C")]
			internal void <UnloadLayerAction>b__0()
			{
			}

			[Token(Token = "0x6001765")]
			[Address(RVA = "0xD80874", Offset = "0xD80874", VA = "0xD80874")]
			internal void <UnloadLayerAction>b__1()
			{
			}
		}

		[Token(Token = "0x2000394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA0DC", Offset = "0x8AA0DC")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x400142D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Scene scene;

			[Token(Token = "0x400142E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public UnloadParameters unloadParams;

			[Token(Token = "0x400142F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorObject obj;

			[Token(Token = "0x4001430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadResult loadResult;

			[Token(Token = "0x4001431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action continueAction;

			[Token(Token = "0x4001432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action unloadLayersAndScene;

			[Token(Token = "0x4001433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<AsyncOperationHandle> <>9__4;

			[Token(Token = "0x4001434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<AsyncOperationHandle> <>9__3;

			[Token(Token = "0x4001435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action <>9__2;

			[Token(Token = "0x6001766")]
			[Address(RVA = "0xD8089C", Offset = "0xD8089C", VA = "0xD8089C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001767")]
			[Address(RVA = "0xD808A4", Offset = "0xD808A4", VA = "0xD808A4")]
			internal void <UnloadAddressableScene>b__0()
			{
			}

			[Token(Token = "0x6001768")]
			[Address(RVA = "0xD809B0", Offset = "0xD809B0", VA = "0xD809B0")]
			internal void <UnloadAddressableScene>b__2()
			{
			}

			[Token(Token = "0x6001769")]
			[Address(RVA = "0xD80A98", Offset = "0xD80A98", VA = "0xD80A98")]
			internal void <UnloadAddressableScene>b__3(AsyncOperationHandle p)
			{
			}

			[Token(Token = "0x600176A")]
			[Address(RVA = "0xD80B7C", Offset = "0xD80B7C", VA = "0xD80B7C")]
			internal void <UnloadAddressableScene>b__4(AsyncOperationHandle r)
			{
			}

			[Token(Token = "0x600176B")]
			[Address(RVA = "0xD80B90", Offset = "0xD80B90", VA = "0xD80B90")]
			internal void <UnloadAddressableScene>b__1(AsyncOperationHandle<SceneInstance> s)
			{
			}
		}

		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA0EC", Offset = "0x8AA0EC")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Scene scene;

			[Token(Token = "0x4001437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public UnloadParameters unloadParams;

			[Token(Token = "0x4001438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string sceneName;

			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadResult loadResult;

			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action continueAction;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action unloadLayersAndScene;

			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<AsyncOperation> <>9__3;

			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action <>9__2;

			[Token(Token = "0x600176C")]
			[Address(RVA = "0xD80BAC", Offset = "0xD80BAC", VA = "0xD80BAC")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x600176D")]
			[Address(RVA = "0xD80BB4", Offset = "0xD80BB4", VA = "0xD80BB4")]
			internal void <UnloadBuildScene>b__0()
			{
			}

			[Token(Token = "0x600176E")]
			[Address(RVA = "0xD80CC0", Offset = "0xD80CC0", VA = "0xD80CC0")]
			internal void <UnloadBuildScene>b__2()
			{
			}

			[Token(Token = "0x600176F")]
			[Address(RVA = "0xD80DD4", Offset = "0xD80DD4", VA = "0xD80DD4")]
			internal void <UnloadBuildScene>b__3(AsyncOperation r)
			{
			}

			[Token(Token = "0x6001770")]
			[Address(RVA = "0xD80DE8", Offset = "0xD80DE8", VA = "0xD80DE8")]
			internal void <UnloadBuildScene>b__1(AsyncOperation s)
			{
			}
		}

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected SectorObject sceneObject;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected AsyncOperationHandle<SceneInstance> asyncSceneHandle;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected AsyncOperation buildSceneHandle;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected AsyncOperationHandle<IList<SectorObject>> layerObjsHandle;

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xD98E04", Offset = "0xD98E04", VA = "0xD98E04", Slot = "5")]
		protected override void LoadLayerAction(LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xD9907C", Offset = "0xD9907C", VA = "0xD9907C")]
		protected void LoadSectorObjectScene(SectorObject obj, SectorTagCollection objTags, LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xD991F8", Offset = "0xD991F8", VA = "0xD991F8")]
		protected void LoadAddressableScene(SectorObject obj, LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xD993F0", Offset = "0xD993F0", VA = "0xD993F0")]
		protected void LoadBuildScene(SectorObject obj, LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xD9946C", Offset = "0xD9946C", VA = "0xD9946C")]
		protected void LoadBuildScene(string sceneName, LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xD99630", Offset = "0xD99630", VA = "0xD99630", Slot = "6")]
		protected override void UnloadLayerAction(UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, Action continueAction)
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xD99D88", Offset = "0xD99D88", VA = "0xD99D88", Slot = "8")]
		protected virtual void ReleaseAssetHandles(Action continueAction)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xD9987C", Offset = "0xD9987C", VA = "0xD9987C")]
		protected static void UnloadAddressableScene(SectorObject obj, AsyncOperationHandle<SceneInstance> sceneHandle, UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, Action continueAction)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xD99AB4", Offset = "0xD99AB4", VA = "0xD99AB4")]
		protected static void UnloadBuildScene(string sceneName, AsyncOperation sceneHandle, UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, Action continueAction)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xD99E58", Offset = "0xD99E58", VA = "0xD99E58")]
		public SectorSceneLayer()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public abstract class SectorSlot : MonoBehaviour, ISectorPositions
	{
		[Token(Token = "0x2000397")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA0FC", Offset = "0x8AA0FC")]
		private sealed class <get_Positions>d__18 : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector3 <>2__current;

			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SectorSlot <>4__this;

			[Token(Token = "0x1700046F")]
			private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
			{
				[Token(Token = "0x6001780")]
				[Address(RVA = "0xD81A18", Offset = "0xD81A18", VA = "0xD81A18", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000470")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001782")]
				[Address(RVA = "0xD81A64", Offset = "0xD81A64", VA = "0xD81A64", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600177D")]
			[Address(RVA = "0xD81974", Offset = "0xD81974", VA = "0xD81974")]
			[DebuggerHidden]
			public <get_Positions>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600177E")]
			[Address(RVA = "0xD819AC", Offset = "0xD819AC", VA = "0xD819AC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600177F")]
			[Address(RVA = "0xD819B0", Offset = "0xD819B0", VA = "0xD819B0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001781")]
			[Address(RVA = "0xD81A24", Offset = "0xD81A24", VA = "0xD81A24", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001783")]
			[Address(RVA = "0xD81ACC", Offset = "0xD81ACC", VA = "0xD81ACC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001784")]
			[Address(RVA = "0xD81B7C", Offset = "0xD81B7C", VA = "0xD81B7C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color DefaultEditorColor;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly float DefaultEditorAlpha;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SectorSlotTemplate template;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int order;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 originPosition;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool originPositionSet;

		[Token(Token = "0x17000468")]
		public SectorSlotTemplate Template
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0xD9B124", Offset = "0xD9B124", VA = "0xD9B124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000469")]
		public int Order
		{
			[Token(Token = "0x6001772")]
			[Address(RVA = "0xD9B12C", Offset = "0xD9B12C", VA = "0xD9B12C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700046A")]
		public bool HasOriginPosition
		{
			[Token(Token = "0x6001773")]
			[Address(RVA = "0xD9B134", Offset = "0xD9B134", VA = "0xD9B134", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046B")]
		public Vector3 OriginPosition
		{
			[Token(Token = "0x6001774")]
			[Address(RVA = "0xD9B13C", Offset = "0xD9B13C", VA = "0xD9B13C", Slot = "4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001775")]
			[Address(RVA = "0xD9B190", Offset = "0xD9B190", VA = "0xD9B190")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		public virtual bool HasPositions
		{
			[Token(Token = "0x6001776")]
			[Address(RVA = "0xD9B1A4", Offset = "0xD9B1A4", VA = "0xD9B1A4", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046D")]
		public virtual IEnumerable<Vector3> Positions
		{
			[Token(Token = "0x6001777")]
			[Address(RVA = "0xD9B1AC", Offset = "0xD9B1AC", VA = "0xD9B1AC", Slot = "9")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D2030", Offset = "0x8D2030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046E")]
		protected virtual bool GizmosLocalSpace
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0xD9B224", Offset = "0xD9B224", VA = "0xD9B224", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001779")]
		public abstract void LoadAsset(SectorSlotLayer.SectorSlotSelection sectorSlotSelection, SectorSlotLayer.AddAssetFunctions addAssetFunctions);

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xD9B22C", Offset = "0xD9B22C", VA = "0xD9B22C", Slot = "12")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xD9B408", Offset = "0xD9B408", VA = "0xD9B408")]
		protected SectorSlot()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class SectorSlotEngagement : SectorSlot
	{
		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEC28", Offset = "0x8BEC28")]
		private float blockCheckRadius;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SectorSlotPrefabSingle.SlotPositionSettings positionSettings;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEC84", Offset = "0x8BEC84")]
		[SerializeField]
		private SectorSlotPrefabSingle.SlotRotationSettings rotationSettings;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SectorSlotPrefabPostProcessor[] objectPostProcessors;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Collider[] blockCheckColliders;

		[Token(Token = "0x17000471")]
		public IReadOnlyList<SectorSlotPrefabPostProcessor> ObjectPostProcessors
		{
			[Token(Token = "0x6001785")]
			[Address(RVA = "0xD9B4A8", Offset = "0xD9B4A8", VA = "0xD9B4A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000472")]
		protected override bool GizmosLocalSpace
		{
			[Token(Token = "0x6001786")]
			[Address(RVA = "0xD9B4B0", Offset = "0xD9B4B0", VA = "0xD9B4B0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xD9B4B8", Offset = "0xD9B4B8", VA = "0xD9B4B8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xD9B530", Offset = "0xD9B530", VA = "0xD9B530", Slot = "11")]
		public override void LoadAsset(SectorSlotLayer.SectorSlotSelection sectorSlotSelection, SectorSlotLayer.AddAssetFunctions addAssetFunctions)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xD9B534", Offset = "0xD9B534", VA = "0xD9B534")]
		public bool CheckSlotBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xD9B69C", Offset = "0xD9B69C", VA = "0xD9B69C")]
		public void CreatePositionAndRotation(out Vector3 worldPosition, out Quaternion worldRotation)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xD9B810", Offset = "0xD9B810", VA = "0xD9B810", Slot = "12")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xD9B8D8", Offset = "0xD9B8D8", VA = "0xD9B8D8")]
		public SectorSlotEngagement()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class SectorSlotLayer : SectorLayer, ISectorTransformMirror
	{
		[Token(Token = "0x200039A")]
		public struct AddAssetFunctions
		{
			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<SectorObject, AsyncOperationHandle> addAssetSectorObject;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Action<AsyncFlag> addAssetHandle;

			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<SectorSlot, GameObject> addAssetGameObject;
		}

		[Token(Token = "0x200039B")]
		public class SectorSlotSelection : SectorAssetSelection<SectorObject>
		{
			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SectorSlotLayer slotLayer;

			[Token(Token = "0x60017A0")]
			[Address(RVA = "0xFF5890", Offset = "0xFF5890", VA = "0xFF5890")]
			public SectorSlotSelection(SectorSlotLayer slotLayer, SectorTagsInput tags, SectorTagCollection objTags, List<SectorAsset<SectorObject>> validObjects, int maxSelectionPoints, WrappedRandom random)
			{
			}

			[Token(Token = "0x60017A1")]
			[Address(RVA = "0xFF5930", Offset = "0xFF5930", VA = "0xFF5930", Slot = "5")]
			protected override void OnAssetSelected(ref SectorAsset<SectorObject> obj)
			{
			}
		}

		[Token(Token = "0x200039C")]
		public struct SectorSlotGameObject
		{
			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorSlot slot;

			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject gameObject;
		}

		[Token(Token = "0x200039D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA10C", Offset = "0x8AA10C")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorSlotLayer <>4__this;

			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ContinueLoadLayerAction continueAction;

			[Token(Token = "0x60017A2")]
			[Address(RVA = "0xD81CAC", Offset = "0xD81CAC", VA = "0xD81CAC")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60017A3")]
			[Address(RVA = "0xD81CB4", Offset = "0xD81CB4", VA = "0xD81CB4")]
			internal void <LoadLayerAction>b__0(AsyncOperationHandle<IList<SectorObject>> objs)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA11C", Offset = "0x8AA11C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SectorSlot> <>9__28_1;

			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<SectorSlot> <>9__28_2;

			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xD81BE4", Offset = "0xD81BE4", VA = "0xD81BE4")]
			public <>c()
			{
			}

			[Token(Token = "0x60017A6")]
			[Address(RVA = "0xD81BEC", Offset = "0xD81BEC", VA = "0xD81BEC")]
			internal bool <LoadLayerAction>b__28_1(SectorSlot p)
			{
				return default(bool);
			}

			[Token(Token = "0x60017A7")]
			[Address(RVA = "0xD81C24", Offset = "0xD81C24", VA = "0xD81C24")]
			internal int <LoadLayerAction>b__28_2(SectorSlot a, SectorSlot b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200039F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA12C", Offset = "0x8AA12C")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorSlotLayer <>4__this;

			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action continueAction;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__0;

			[Token(Token = "0x60017A8")]
			[Address(RVA = "0xFF5864", Offset = "0xFF5864", VA = "0xFF5864")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60017A9")]
			[Address(RVA = "0xFF586C", Offset = "0xFF586C", VA = "0xFF586C")]
			internal void <UnloadLayerAction>b__0()
			{
			}
		}

		[Token(Token = "0x400144D")]
		public const float SECTOR_PLAY_AREA_BOUNDS_RADIUS = 1000f;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 SECTOR_PLAY_AREA_BOUNDS_CENTER;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BECD0", Offset = "0x8BECD0")]
		[SerializeField]
		private AnimationCurve slotActivationThresholdCurve;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SectorTagValue maxSelectionPoints;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AsyncOperationHandle<IList<SectorObject>> layerObjsHandle;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<SectorObject> assetSectorObjects;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<AsyncFlag> assetHandles;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<SectorSlotGameObject> assetGameObjects;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<SectorSlot> slots;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LoadResult currentLoadResult;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AddAssetFunctions addAssetFunctions;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static HashSet<SectorSlotLayer> loadedSlotLayers;

		[Token(Token = "0x17000473")]
		public IReadOnlyList<SectorSlot> Slots
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0xD85618", Offset = "0xD85618", VA = "0xD85618")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000474")]
		public IReadOnlyList<SectorSlotGameObject> LoadedGameObjects
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0xD9B9C0", Offset = "0xD9B9C0", VA = "0xD9B9C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000475")]
		public static IReadOnlyCollection<SectorSlotLayer> LoadedSlotLayers
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xD9BA30", Offset = "0xD9BA30", VA = "0xD9BA30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000476")]
		private int AssetObjectCount
		{
			[Token(Token = "0x6001791")]
			[Address(RVA = "0xD9BA94", Offset = "0xD9BA94", VA = "0xD9BA94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xD9BB1C", Offset = "0xD9BB1C", VA = "0xD9BB1C", Slot = "4")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xD9BB4C", Offset = "0xD9BB4C", VA = "0xD9BB4C")]
		protected void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xD9BC20", Offset = "0xD9BC20", VA = "0xD9BC20")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xD9BDC0", Offset = "0xD9BDC0", VA = "0xD9BDC0")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xD9BE4C", Offset = "0xD9BE4C", VA = "0xD9BE4C", Slot = "8")]
		private void Game.Sector.ISectorTransformMirror.TransformSectorMirror(SectorTransformMirrorData data)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xD9C13C", Offset = "0xD9C13C", VA = "0xD9C13C", Slot = "5")]
		protected override void LoadLayerAction(LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xD9C434", Offset = "0xD9C434", VA = "0xD9C434")]
		private void LoadSlot(SectorSlot slot, IList<SectorObject> objects, SectorSlotSelection sectorSlotSelection, SectorTagCollection slotTags, SectorTagCollection objTags)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xD9CA74", Offset = "0xD9CA74", VA = "0xD9CA74", Slot = "6")]
		protected override void UnloadLayerAction(UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, Action continueAction)
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xD9CE38", Offset = "0xD9CE38", VA = "0xD9CE38")]
		private void ReleaseAssetHandles(Action continueAction)
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xD9D14C", Offset = "0xD9D14C", VA = "0xD9D14C")]
		private void AddAssetSectorObject(SectorObject sectorObject, AsyncOperationHandle handle)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xD9D244", Offset = "0xD9D244", VA = "0xD9D244")]
		private void AddAssetHandle(AsyncFlag handle)
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xD9D324", Offset = "0xD9D324", VA = "0xD9D324")]
		private void AddAssetGameObject(SectorSlot slot, GameObject gameObject)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xD9D41C", Offset = "0xD9D41C", VA = "0xD9D41C")]
		public SectorSlotLayer()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class SectorSlotPrefabFormation : SectorSlot, ISectorTransformMirror
	{
		[Serializable]
		[Token(Token = "0x20003A1")]
		public class SlotPositionSettings : SectorSlotPrefabSingle.SlotPositionSettings
		{
			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEE30", Offset = "0x8BEE30")]
			[SerializeField]
			private float forwardOffset;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private bool forwardOffsetMirror;

			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			private float sideOffset;

			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private bool sideOffsetMirror;

			[Token(Token = "0x60017B2")]
			[Address(RVA = "0xFF5C70", Offset = "0xFF5C70", VA = "0xFF5C70")]
			public Vector3 CalculateLocalFormationOffset()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60017B3")]
			[Address(RVA = "0xFF5D74", Offset = "0xFF5D74", VA = "0xFF5D74", Slot = "5")]
			public override void DrawGizmos(SectorSlot slot)
			{
			}

			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xFF6188", Offset = "0xFF6188", VA = "0xFF6188")]
			public SlotPositionSettings()
			{
			}
		}

		[Token(Token = "0x20003A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA13C", Offset = "0x8AA13C")]
		private sealed class <get_Positions>d__11 : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector3 <>2__current;

			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SectorSlotPrefabFormation <>4__this;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700047A")]
			private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
			{
				[Token(Token = "0x60017B8")]
				[Address(RVA = "0xFF5B08", Offset = "0xFF5B08", VA = "0xFF5B08", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700047B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017BA")]
				[Address(RVA = "0xFF5B54", Offset = "0xFF5B54", VA = "0xFF5B54", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017B5")]
			[Address(RVA = "0xFF59B0", Offset = "0xFF59B0", VA = "0xFF59B0")]
			[DebuggerHidden]
			public <get_Positions>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xFF59E8", Offset = "0xFF59E8", VA = "0xFF59E8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xFF59EC", Offset = "0xFF59EC", VA = "0xFF59EC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017B9")]
			[Address(RVA = "0xFF5B14", Offset = "0xFF5B14", VA = "0xFF5B14", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60017BB")]
			[Address(RVA = "0xFF5BBC", Offset = "0xFF5BBC", VA = "0xFF5BBC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60017BC")]
			[Address(RVA = "0xFF5C6C", Offset = "0xFF5C6C", VA = "0xFF5C6C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA14C", Offset = "0x8AA14C")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorSlot sectorSlot;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorSlotPrefabPostProcessor[] assetPostProcessors;

			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorSlotLayer.AddAssetFunctions addAssetFunctions;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<GameObject> <>9__0;

			[Token(Token = "0x60017BD")]
			[Address(RVA = "0xFF5990", Offset = "0xFF5990", VA = "0xFF5990")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60017BE")]
			[Address(RVA = "0xFF5998", Offset = "0xFF5998", VA = "0xFF5998")]
			internal void <LoadAsset>b__0(GameObject p)
			{
			}
		}

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BED2C", Offset = "0x8BED2C")]
		private SectorSlotPrefabSingle.InstantiateSpace instantiateSpace;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2Int instantiateAmountRange;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve instantiateAmountCurve;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BED98", Offset = "0x8BED98")]
		private SlotPositionSettings positionSettings;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEDE4", Offset = "0x8BEDE4")]
		[SerializeField]
		private SectorSlotPrefabSingle.SlotRotationSettings rotationSettings;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector3> positions;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SectorSlotPrefabPostProcessor[] objectPostProcessors;

		[Token(Token = "0x17000477")]
		protected override bool GizmosLocalSpace
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0xD9D548", Offset = "0xD9D548", VA = "0xD9D548", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000478")]
		public override bool HasPositions
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0xD9D558", Offset = "0xD9D558", VA = "0xD9D558", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000479")]
		public override IEnumerable<Vector3> Positions
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0xD9D560", Offset = "0xD9D560", VA = "0xD9D560", Slot = "9")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D2100", Offset = "0x8D2100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xD9D5D8", Offset = "0xD9D5D8", VA = "0xD9D5D8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xD9D634", Offset = "0xD9D634", VA = "0xD9D634", Slot = "13")]
		private void Game.Sector.ISectorTransformMirror.TransformSectorMirror(SectorTransformMirrorData data)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xD9D664", Offset = "0xD9D664", VA = "0xD9D664", Slot = "11")]
		public override void LoadAsset(SectorSlotLayer.SectorSlotSelection sectorSlotSelection, SectorSlotLayer.AddAssetFunctions addAssetFunctions)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xD9DC0C", Offset = "0xD9DC0C", VA = "0xD9DC0C", Slot = "12")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xD9DCD4", Offset = "0xD9DCD4", VA = "0xD9DCD4")]
		public SectorSlotPrefabFormation()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class SectorSlotPrefabImageMaskField : SectorSlot, ISectorTransformMirror
	{
		[Token(Token = "0x20003A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA15C", Offset = "0x8AA15C")]
		private sealed class <get_Positions>d__11 : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector3 <>2__current;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SectorSlotPrefabImageMaskField <>4__this;

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700047F")]
			private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
			{
				[Token(Token = "0x60017CB")]
				[Address(RVA = "0xFF67C0", Offset = "0xFF67C0", VA = "0xFF67C0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000480")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017CD")]
				[Address(RVA = "0xFF680C", Offset = "0xFF680C", VA = "0xFF680C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017C8")]
			[Address(RVA = "0xFF6668", Offset = "0xFF6668", VA = "0xFF6668")]
			[DebuggerHidden]
			public <get_Positions>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60017C9")]
			[Address(RVA = "0xFF66A0", Offset = "0xFF66A0", VA = "0xFF66A0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017CA")]
			[Address(RVA = "0xFF66A4", Offset = "0xFF66A4", VA = "0xFF66A4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017CC")]
			[Address(RVA = "0xFF67CC", Offset = "0xFF67CC", VA = "0xFF67CC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60017CE")]
			[Address(RVA = "0xFF6874", Offset = "0xFF6874", VA = "0xFF6874", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60017CF")]
			[Address(RVA = "0xFF6924", Offset = "0xFF6924", VA = "0xFF6924", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20003A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA16C", Offset = "0x8AA16C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorSlotPrefabImageMaskField <>4__this;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Scene scene;

			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorSlotLayer.AddAssetFunctions addAssetFunctions;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SectorSlot sectorSlot;

			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public SectorSlotPrefabPostProcessor[] assetPostProcessors;

			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<GameObject> <>9__1;

			[Token(Token = "0x60017D0")]
			[Address(RVA = "0xFF61C8", Offset = "0xFF61C8", VA = "0xFF61C8")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60017D1")]
			[Address(RVA = "0xFF61D0", Offset = "0xFF61D0", VA = "0xFF61D0")]
			internal void <LoadAsset>b__1(GameObject p)
			{
			}
		}

		[Token(Token = "0x20003A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA17C", Offset = "0x8AA17C")]
		private sealed class <>c__DisplayClass21_1
		{
			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> assetIndices;

			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorObject asset;

			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass21_0 CS$<>8__locals1;

			[Token(Token = "0x60017D2")]
			[Address(RVA = "0xFF61E8", Offset = "0xFF61E8", VA = "0xFF61E8")]
			public <>c__DisplayClass21_1()
			{
			}

			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xFF61F0", Offset = "0xFF61F0", VA = "0xFF61F0")]
			internal void <LoadAsset>b__0(AsyncOperationHandle<GameObject> prefab)
			{
			}
		}

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEEAC", Offset = "0x8BEEAC")]
		[SerializeField]
		private SectorSlotPrefabSingle.InstantiateSpace instantiateSpace;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEEF8", Offset = "0x8BEEF8")]
		[SerializeField]
		private ImageMaskField maskField;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ImageMaskField.Channel maskChannel;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEF54", Offset = "0x8BEF54")]
		private SectorSlotPrefabSingle.SlotRotationSettings rotationSettings;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEFA0", Offset = "0x8BEFA0")]
		private GameObject[] blockedPositions;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float blockedPositionRadius;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Vector3> positions;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Quaternion> rotations;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<ImageMaskField.BlockedPositionData> positionsBlocked;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<SectorObject, List<int>> assetLookup;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SectorSlotPrefabPostProcessor[] objectPostProcessors;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 positionMultiplier;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ISectorPositions> sectorPositionsList;

		[Token(Token = "0x1700047C")]
		protected override bool GizmosLocalSpace
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0xE05288", Offset = "0xE05288", VA = "0xE05288", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700047D")]
		public override bool HasPositions
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0xE05298", Offset = "0xE05298", VA = "0xE05298", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700047E")]
		public override IEnumerable<Vector3> Positions
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0xE052A0", Offset = "0xE052A0", VA = "0xE052A0", Slot = "9")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D21D0", Offset = "0x8D21D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xE05318", Offset = "0xE05318", VA = "0xE05318")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xE05374", Offset = "0xE05374", VA = "0xE05374", Slot = "13")]
		private void Game.Sector.ISectorTransformMirror.TransformSectorMirror(SectorTransformMirrorData data)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xE05444", Offset = "0xE05444", VA = "0xE05444", Slot = "11")]
		public override void LoadAsset(SectorSlotLayer.SectorSlotSelection sectorSlotSelection, SectorSlotLayer.AddAssetFunctions addAssetFunctions)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xE0642C", Offset = "0xE0642C", VA = "0xE0642C", Slot = "12")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xE065EC", Offset = "0xE065EC", VA = "0xE065EC")]
		public SectorSlotPrefabImageMaskField()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public abstract class SectorSlotPrefabPostProcessor : MonoBehaviour
	{
		[Token(Token = "0x60017D4")]
		public abstract void ProcessSectorSlotObject(GameObject obj);

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xE06824", Offset = "0xE06824", VA = "0xE06824")]
		protected SectorSlotPrefabPostProcessor()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class SectorSlotPrefabPostProcessorSteeringPath : SectorSlotPrefabPostProcessor, ISectorTransformMirror
	{
		[Serializable]
		[Token(Token = "0x20003AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA18C", Offset = "0x8AA18C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, int> <>9__3_0;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Transform, int, Transform> <>9__3_1;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Transform[], int> <>9__3_2;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Transform[], int, Transform> <>9__3_3;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Transform, int> <>9__6_0;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Transform, int, Transform> <>9__6_1;

			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<Transform[], int> <>9__6_2;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<Transform[], int, Transform> <>9__6_3;

			[Token(Token = "0x60017DE")]
			[Address(RVA = "0xFF698C", Offset = "0xFF698C", VA = "0xFF698C")]
			public <>c()
			{
			}

			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xFF6994", Offset = "0xFF6994", VA = "0xFF6994")]
			internal int <OnDrawGizmos>b__3_0(Transform t)
			{
				return default(int);
			}

			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xFF69B0", Offset = "0xFF69B0", VA = "0xFF69B0")]
			internal Transform <OnDrawGizmos>b__3_1(Transform t, int i)
			{
				return null;
			}

			[Token(Token = "0x60017E1")]
			[Address(RVA = "0xFF69D0", Offset = "0xFF69D0", VA = "0xFF69D0")]
			internal int <OnDrawGizmos>b__3_2(Transform[] p)
			{
				return default(int);
			}

			[Token(Token = "0x60017E2")]
			[Address(RVA = "0xFF69E8", Offset = "0xFF69E8", VA = "0xFF69E8")]
			internal Transform <OnDrawGizmos>b__3_3(Transform[] p, int i)
			{
				return null;
			}

			[Token(Token = "0x60017E3")]
			[Address(RVA = "0xFF6A20", Offset = "0xFF6A20", VA = "0xFF6A20")]
			internal int <ProcessSectorSlotObject>b__6_0(Transform t)
			{
				return default(int);
			}

			[Token(Token = "0x60017E4")]
			[Address(RVA = "0xFF6A3C", Offset = "0xFF6A3C", VA = "0xFF6A3C")]
			internal Transform <ProcessSectorSlotObject>b__6_1(Transform t, int i)
			{
				return null;
			}

			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xFF6A5C", Offset = "0xFF6A5C", VA = "0xFF6A5C")]
			internal int <ProcessSectorSlotObject>b__6_2(Transform[] p)
			{
				return default(int);
			}

			[Token(Token = "0x60017E6")]
			[Address(RVA = "0xFF6A74", Offset = "0xFF6A74", VA = "0xFF6A74")]
			internal Transform <ProcessSectorSlotObject>b__6_3(Transform[] p, int i)
			{
				return null;
			}
		}

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] pathTransforms;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool useTransformChildPath;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool loopPath;

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xE0682C", Offset = "0xE0682C", VA = "0xE0682C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60017D7")]
		private void DrawPathGizmos<T>(T collection, Func<T, int> getCollectionCount, Func<T, int, Transform> getElementTransform)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xE06CA4", Offset = "0xE06CA4", VA = "0xE06CA4", Slot = "5")]
		private void Game.Sector.ISectorTransformMirror.TransformSectorMirror(SectorTransformMirrorData data)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xE06EB0", Offset = "0xE06EB0", VA = "0xE06EB0", Slot = "4")]
		public override void ProcessSectorSlotObject(GameObject obj)
		{
		}

		[Token(Token = "0x60017DA")]
		private void AddPath<T>(List<SpaceEntitySteering.SteerPosition> path, T collection, Func<T, int> getCollectionCount, Func<T, int, Transform> getElementTransform)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xE073A8", Offset = "0xE073A8", VA = "0xE073A8")]
		public static bool IsChildOfRecursive(Transform transform, Transform parent)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xE0747C", Offset = "0xE0747C", VA = "0xE0747C")]
		public SectorSlotPrefabPostProcessorSteeringPath()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class SectorSlotPrefabPostProcessorSteeringPathReceiver : MonoBehaviour
	{
		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool shouldFollowPath;

		[Token(Token = "0x17000481")]
		public bool ShouldFollowPath
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xE07484", Offset = "0xE07484", VA = "0xE07484")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xE0748C", Offset = "0xE0748C", VA = "0xE0748C")]
		public SectorSlotPrefabPostProcessorSteeringPathReceiver()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class SectorSlotPrefabSingle : SectorSlot, ISectorTransformMirror
	{
		[Token(Token = "0x20003AD")]
		public enum InstantiateSpace
		{
			[Token(Token = "0x40014A9")]
			Local,
			[Token(Token = "0x40014AA")]
			World
		}

		[Token(Token = "0x20003AE")]
		public enum LookRotationMode
		{
			[Token(Token = "0x40014AC")]
			None,
			[Token(Token = "0x40014AD")]
			SectorSlot,
			[Token(Token = "0x40014AE")]
			PlayAreaMiddle,
			[Token(Token = "0x40014AF")]
			PlayerShip,
			[Token(Token = "0x40014B0")]
			Transform
		}

		[Token(Token = "0x20003AF")]
		public enum RandomRotationMode
		{
			[Token(Token = "0x40014B2")]
			None,
			[Token(Token = "0x40014B3")]
			RandomAxis
		}

		[Serializable]
		[Token(Token = "0x20003B0")]
		public class SlotPositionSettings
		{
			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF130", Offset = "0x8BF130")]
			private SectorSlot relativePosition;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF17C", Offset = "0x8BF17C")]
			[SerializeField]
			private Vector2 randomXZRadiusOffset;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Vector2 randomYOffset;

			[Token(Token = "0x40014B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private bool randomYOffsetMirror;

			[Token(Token = "0x40014B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[SerializeField]
			private bool randomYOffsetSpherical;

			[Token(Token = "0x17000483")]
			public float MaxOffset
			{
				[Token(Token = "0x60017F0")]
				[Address(RVA = "0xFF6ACC", Offset = "0xFF6ACC", VA = "0xFF6ACC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xFF6B1C", Offset = "0xFF6B1C", VA = "0xFF6B1C", Slot = "4")]
			public virtual Vector3 CalculateLocalPosition(Transform slotTransform)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60017F2")]
			[Address(RVA = "0xFF5EC0", Offset = "0xFF5EC0", VA = "0xFF5EC0", Slot = "5")]
			public virtual void DrawGizmos(SectorSlot slot)
			{
			}

			[Token(Token = "0x60017F3")]
			[Address(RVA = "0xFF618C", Offset = "0xFF618C", VA = "0xFF618C")]
			public SlotPositionSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003B1")]
		public class SlotRotationSettings
		{
			[Token(Token = "0x40014B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF1F8", Offset = "0x8BF1F8")]
			private RandomRotationMode randomRotationMode;

			[Token(Token = "0x40014BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private Vector3 randomRotationAxis;

			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF254", Offset = "0x8BF254")]
			[SerializeField]
			private LookRotationMode lookRotationMode;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private SectorSlot lookRotationSlot;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private Transform lookRotationTransform;

			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private Vector2 lookRotationRandomTilt;

			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF2D0", Offset = "0x8BF2D0")]
			private Vector3 lookRotationPositionMask;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[SerializeField]
			private bool lookRotationRandomTiltMirror;

			[Token(Token = "0x60017F4")]
			[Address(RVA = "0xFF6D8C", Offset = "0xFF6D8C", VA = "0xFF6D8C", Slot = "4")]
			public virtual Quaternion CalculateLocalRotation(Vector3 originPosition, Matrix4x4 worldToLocalMatrix)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60017F5")]
			[Address(RVA = "0xFF71C8", Offset = "0xFF71C8", VA = "0xFF71C8", Slot = "5")]
			public virtual void DrawGizmos(SectorSlot slot)
			{
			}

			[Token(Token = "0x60017F6")]
			[Address(RVA = "0xFF7370", Offset = "0xFF7370", VA = "0xFF7370")]
			public SlotRotationSettings()
			{
			}
		}

		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA19C", Offset = "0x8AA19C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorSlot sectorSlot;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorSlotPrefabPostProcessor[] assetPostProcessors;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorSlotLayer.AddAssetFunctions addAssetFunctions;

			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xFF6AAC", Offset = "0xFF6AAC", VA = "0xFF6AAC")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60017F8")]
			[Address(RVA = "0xFF6AB4", Offset = "0xFF6AB4", VA = "0xFF6AB4")]
			internal void <LoadAsset>b__0(GameObject p)
			{
			}
		}

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF03C", Offset = "0x8BF03C")]
		[SerializeField]
		private InstantiateSpace instantiateSpace;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SectorTagValue instantiateChance;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF098", Offset = "0x8BF098")]
		[SerializeField]
		private SlotPositionSettings positionSettings;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF0E4", Offset = "0x8BF0E4")]
		[SerializeField]
		private SlotRotationSettings rotationSettings;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SectorSlotPrefabPostProcessor[] objectPostProcessors;

		[Token(Token = "0x17000482")]
		protected override bool GizmosLocalSpace
		{
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0xE0749C", Offset = "0xE0749C", VA = "0xE0749C", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xE074AC", Offset = "0xE074AC", VA = "0xE074AC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xE07508", Offset = "0xE07508", VA = "0xE07508", Slot = "13")]
		private void Game.Sector.ISectorTransformMirror.TransformSectorMirror(SectorTransformMirrorData data)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xE07534", Offset = "0xE07534", VA = "0xE07534", Slot = "11")]
		public override void LoadAsset(SectorSlotLayer.SectorSlotSelection sectorSlotSelection, SectorSlotLayer.AddAssetFunctions addAssetFunctions)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xE07C30", Offset = "0xE07C30", VA = "0xE07C30")]
		public static void PostProcessObject(GameObject obj, SectorSlot slot, IReadOnlyList<SectorSlotPrefabPostProcessor> postProcessors, Action<SectorSlot, GameObject> callback)
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xE07DE0", Offset = "0xE07DE0", VA = "0xE07DE0", Slot = "12")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xE07EC0", Offset = "0xE07EC0", VA = "0xE07EC0")]
		public SectorSlotPrefabSingle()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class SectorSlotRadialTargetTransformOverride : GameMonoBehaviour
	{
		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x17000484")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xE07F70", Offset = "0xE07F70", VA = "0xE07F70", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xE07F78", Offset = "0xE07F78", VA = "0xE07F78", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xE080DC", Offset = "0xE080DC", VA = "0xE080DC")]
		public SectorSlotRadialTargetTransformOverride()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AA1AC", Offset = "0x8AA1AC")]
	public class SectorSlotTemplate : ScriptableObject
	{
		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF33C", Offset = "0x8BF33C")]
		private SectorTagCollectionHierarchy[] tagGroups;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF388", Offset = "0x8BF388")]
		[SerializeField]
		private bool editorColorOverride;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color editorColor;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool editorSizeOverride;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float editorSize;

		[Token(Token = "0x17000485")]
		public IReadOnlyList<SectorTagCollectionHierarchy> TagGroups
		{
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0xE080E4", Offset = "0xE080E4", VA = "0xE080E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000486")]
		public bool EditorColorOverride
		{
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0xE080EC", Offset = "0xE080EC", VA = "0xE080EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000487")]
		public Color EditorColor
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0xE080F4", Offset = "0xE080F4", VA = "0xE080F4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000488")]
		public bool EditorSizeOverride
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xE08100", Offset = "0xE08100", VA = "0xE08100")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000489")]
		public float EditorSize
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0xE08108", Offset = "0xE08108", VA = "0xE08108")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xE08110", Offset = "0xE08110", VA = "0xE08110")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xE06534", Offset = "0xE06534", VA = "0xE06534")]
		public static Color GetEditorColor(SectorSlotTemplate template, Color defaultColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xE081EC", Offset = "0xE081EC", VA = "0xE081EC")]
		public static float GetEditorSize(SectorSlotTemplate template, float defaultSize)
		{
			return default(float);
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xE08280", Offset = "0xE08280", VA = "0xE08280")]
		public SectorSlotTemplate()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class SectorStaticSceneLayer : SectorSceneLayer
	{
		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA218", Offset = "0x8AA218")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40014CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorStaticSceneLayer <>4__this;

			[Token(Token = "0x40014CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LoadParameters loadParams;

			[Token(Token = "0x40014D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LoadResult loadResult;

			[Token(Token = "0x40014D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ContinueLoadLayerAction continueAction;

			[Token(Token = "0x40014D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<AsyncOperationHandle<SectorObject>> <>9__0;

			[Token(Token = "0x600180A")]
			[Address(RVA = "0xFF73C0", Offset = "0xFF73C0", VA = "0xFF73C0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600180B")]
			[Address(RVA = "0xFF73C8", Offset = "0xFF73C8", VA = "0xFF73C8")]
			internal void <LoadLayerAction>b__0(AsyncOperationHandle<SectorObject> obj)
			{
			}
		}

		[Token(Token = "0x20003B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA228", Offset = "0x8AA228")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40014D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorStaticSceneLayer <>4__this;

			[Token(Token = "0x40014D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action continueAction;

			[Token(Token = "0x600180C")]
			[Address(RVA = "0xFF749C", Offset = "0xFF749C", VA = "0xFF749C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600180D")]
			[Address(RVA = "0xFF74A4", Offset = "0xFF74A4", VA = "0xFF74A4")]
			internal void <UnloadLayerAction>b__0()
			{
			}
		}

		[Token(Token = "0x40014CA")]
		public const string BUILD_SCENE_PREFIX = "build_scene:";

		[Token(Token = "0x40014CB")]
		public const string SECTOR_SCENE_PREFIX = "sector_scene:";

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string buildSceneName;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected AsyncOperationHandle<SectorObject> layerObjHandle;

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xE082B4", Offset = "0xE082B4", VA = "0xE082B4", Slot = "5")]
		protected override void LoadLayerAction(LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xE0899C", Offset = "0xE0899C", VA = "0xE0899C", Slot = "6")]
		protected override void UnloadLayerAction(UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, Action continueAction)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xE08B04", Offset = "0xE08B04", VA = "0xE08B04", Slot = "8")]
		protected override void ReleaseAssetHandles(Action continueAction)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xE08894", Offset = "0xE08894", VA = "0xE08894")]
		public static bool CheckBuildSceneExist(string sceneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xE08BB0", Offset = "0xE08BB0", VA = "0xE08BB0")]
		public SectorStaticSceneLayer()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public abstract class SectorTransformer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA238", Offset = "0x8AA238")]
		private sealed class <>c
		{
			[Token(Token = "0x40014D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<SectorTransformer> <>9__6_0;

			[Token(Token = "0x6001815")]
			[Address(RVA = "0xFF7908", Offset = "0xFF7908", VA = "0xFF7908")]
			public <>c()
			{
			}

			[Token(Token = "0x6001816")]
			[Address(RVA = "0xFF7910", Offset = "0xFF7910", VA = "0xFF7910")]
			internal int <GetSectorTransformersInScene>b__6_0(SectorTransformer a, SectorTransformer b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF404", Offset = "0x8BF404")]
		private int order;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SectorTagValue transformChance;

		[Token(Token = "0x600180E")]
		protected abstract void TransformSector(GameObject[] rootObjs);

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xE114DC", Offset = "0xE114DC", VA = "0xE114DC")]
		private void TriggerTransformSector(GameObject[] rootObjs, SectorTagsInput tags, SectorTagCollection objTags)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xE115A8", Offset = "0xE115A8", VA = "0xE115A8")]
		public static void TransformSectorScene(Scene scene, SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xE115DC", Offset = "0xE115DC", VA = "0xE115DC")]
		public static void TransformSectorScene(GameObject[] rootObjs, SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xE116C8", Offset = "0xE116C8", VA = "0xE116C8")]
		private static List<SectorTransformer> GetSectorTransformersInScene(GameObject[] rootObjs)
		{
			return null;
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xE11908", Offset = "0xE11908", VA = "0xE11908")]
		protected SectorTransformer()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public enum SectorTransformMirrorAxis
	{
		[Token(Token = "0x40014DA")]
		X,
		[Token(Token = "0x40014DB")]
		Y,
		[Token(Token = "0x40014DC")]
		Z
	}
	[Token(Token = "0x20003BB")]
	public struct SectorTransformMirrorData
	{
		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SectorTransformMirrorAxis axis;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 axisDirection;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 axisOrigin;

		[Token(Token = "0x1700048A")]
		public static SectorTransformMirrorData AxisX
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0xE1117C", Offset = "0xE1117C", VA = "0xE1117C")]
			get
			{
				return default(SectorTransformMirrorData);
			}
		}

		[Token(Token = "0x1700048B")]
		public static SectorTransformMirrorData AxisY
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0xE1121C", Offset = "0xE1121C", VA = "0xE1121C")]
			get
			{
				return default(SectorTransformMirrorData);
			}
		}

		[Token(Token = "0x1700048C")]
		public static SectorTransformMirrorData AxisZ
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xE11268", Offset = "0xE11268", VA = "0xE11268")]
			get
			{
				return default(SectorTransformMirrorData);
			}
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xE111BC", Offset = "0xE111BC", VA = "0xE111BC")]
		public SectorTransformMirrorData(SectorTransformMirrorAxis axis, [System.Runtime.InteropServices.Optional] Vector3 axisOrigin)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xE06E9C", Offset = "0xE06E9C", VA = "0xE06E9C")]
		public SectorTransformMirrorData(SectorTransformMirrorAxis axis, Vector3 axisDirection, [System.Runtime.InteropServices.Optional] Vector3 axisOrigin)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xE112B4", Offset = "0xE112B4", VA = "0xE112B4")]
		public Vector3 MirrorVector(Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xE11308", Offset = "0xE11308", VA = "0xE11308")]
		public Vector3 MirrorPosition(Vector3 position)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xE1136C", Offset = "0xE1136C", VA = "0xE1136C")]
		public Quaternion MirrorRotationForwardUp(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xE053E0", Offset = "0xE053E0", VA = "0xE053E0")]
		public void MirrorTransformForwardUpWorld(Transform transform)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xE11478", Offset = "0xE11478", VA = "0xE11478")]
		public void MirrorTransformForwardUpLocal(Transform transform)
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public interface ISectorTransformMirror
	{
		[Token(Token = "0x6001821")]
		void TransformSectorMirror(SectorTransformMirrorData data);
	}
	[Token(Token = "0x20003BD")]
	public class SectorTransformerMirror : SectorTransformer
	{
		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF460", Offset = "0x8BF460")]
		private SectorTransformMirrorAxis mirrorAxis;

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xE11968", Offset = "0xE11968", VA = "0xE11968", Slot = "4")]
		protected override void TransformSector(GameObject[] rootObjs)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xE11C5C", Offset = "0xE11C5C", VA = "0xE11C5C")]
		public SectorTransformerMirror()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class SectorTransformerMirrorChildTransforms : MonoBehaviour, ISectorTransformMirror
	{
		[Token(Token = "0x6001824")]
		[Address(RVA = "0xE11C60", Offset = "0xE11C60", VA = "0xE11C60", Slot = "4")]
		private void Game.Sector.ISectorTransformMirror.TransformSectorMirror(SectorTransformMirrorData data)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xE11D94", Offset = "0xE11D94", VA = "0xE11D94")]
		public SectorTransformerMirrorChildTransforms()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class SectorTransition : MonoBehaviour
	{
		[Token(Token = "0x20003C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA248", Offset = "0x8AA248")]
		private sealed class <FadeIn>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorTransition <>4__this;

			[Token(Token = "0x40014F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x17000490")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001837")]
				[Address(RVA = "0xFF7CB4", Offset = "0xFF7CB4", VA = "0xFF7CB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000491")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001839")]
				[Address(RVA = "0xFF7CFC", Offset = "0xFF7CFC", VA = "0xFF7CFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001834")]
			[Address(RVA = "0xFF799C", Offset = "0xFF799C", VA = "0xFF799C")]
			[DebuggerHidden]
			public <FadeIn>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001835")]
			[Address(RVA = "0xFF79C8", Offset = "0xFF79C8", VA = "0xFF79C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001836")]
			[Address(RVA = "0xFF79CC", Offset = "0xFF79CC", VA = "0xFF79CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001838")]
			[Address(RVA = "0xFF7CBC", Offset = "0xFF7CBC", VA = "0xFF7CBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA258", Offset = "0x8AA258")]
		private sealed class <FadeOut>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorTransition <>4__this;

			[Token(Token = "0x40014F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x17000492")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600183D")]
				[Address(RVA = "0xFF8014", Offset = "0xFF8014", VA = "0xFF8014", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000493")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600183F")]
				[Address(RVA = "0xFF805C", Offset = "0xFF805C", VA = "0xFF805C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600183A")]
			[Address(RVA = "0xFF7D04", Offset = "0xFF7D04", VA = "0xFF7D04")]
			[DebuggerHidden]
			public <FadeOut>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600183B")]
			[Address(RVA = "0xFF7D30", Offset = "0xFF7D30", VA = "0xFF7D30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600183C")]
			[Address(RVA = "0xFF7D34", Offset = "0xFF7D34", VA = "0xFF7D34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600183E")]
			[Address(RVA = "0xFF801C", Offset = "0xFF801C", VA = "0xFF801C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF4AC", Offset = "0x8BF4AC")]
		public AnimationCurve aCurve;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string materialFloatProperty;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer[] renderRef;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject opaqueVersion;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool disableGameObjectAfterFade;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF4F4", Offset = "0x8BF4F4")]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected MaterialPropertyBlock block;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine coroutineProcess;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool fadeIn;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float t;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool isSetup;

		[Token(Token = "0x1700048D")]
		public bool IsAnimating
		{
			[Token(Token = "0x6001826")]
			[Address(RVA = "0xE11D9C", Offset = "0xE11D9C", VA = "0xE11D9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048E")]
		public bool IsFadeIn
		{
			[Token(Token = "0x6001827")]
			[Address(RVA = "0xE11DAC", Offset = "0xE11DAC", VA = "0xE11DAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700048F")]
		public bool IsFadeOut
		{
			[Token(Token = "0x6001828")]
			[Address(RVA = "0xE11DB4", Offset = "0xE11DB4", VA = "0xE11DB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xE11DC4", Offset = "0xE11DC4", VA = "0xE11DC4", Slot = "4")]
		protected virtual void Setup()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xE120AC", Offset = "0xE120AC", VA = "0xE120AC", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xE120B8", Offset = "0xE120B8", VA = "0xE120B8", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xE11EB4", Offset = "0xE11EB4", VA = "0xE11EB4")]
		public void StartFadeIn(float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xE121DC", Offset = "0xE121DC", VA = "0xE121DC")]
		public void StartFadeOut(float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xE1245C", Offset = "0xE1245C", VA = "0xE1245C")]
		private void ResetValues()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xE124E8", Offset = "0xE124E8", VA = "0xE124E8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xE12154", Offset = "0xE12154", VA = "0xE12154")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D22A0", Offset = "0x8D22A0")]
		private IEnumerator FadeIn(float duration = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xE123D4", Offset = "0xE123D4", VA = "0xE123D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D2300", Offset = "0x8D2300")]
		private IEnumerator FadeOut(float duration = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xE120C4", Offset = "0xE120C4", VA = "0xE120C4")]
		private void SetRenderersActive(bool active)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xE12538", Offset = "0xE12538", VA = "0xE12538")]
		public SectorTransition()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public enum SectorTransitionVariant
	{
		[Token(Token = "0x40014F6")]
		SectorTravel,
		[Token(Token = "0x40014F7")]
		RunEndSuccess,
		[Token(Token = "0x40014F8")]
		RunEndFailure
	}
	[Token(Token = "0x20003C3")]
	public class SectorTransitionManager : MonoBehaviourSingleton<SectorTransitionManager>
	{
		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF540", Offset = "0x8BF540")]
		private SectorTransition transitionSectorTravel;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SectorTransition transitionRunEndSuccess;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SectorTransition transitionRunEndFailure;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF5AC", Offset = "0x8BF5AC")]
		private Transform moveTransform;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool moveTransformOnShow;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF608", Offset = "0x8BF608")]
		private float delayAfterShow;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float delayAfterHide;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BF664", Offset = "0x8BF664")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BF674", Offset = "0x8BF674")]
		private Quaternion <Rotation>k__BackingField;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BF684", Offset = "0x8BF684")]
		private bool <CanShowTip>k__BackingField;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SectorTransition activeTransition;

		[Token(Token = "0x17000494")]
		public bool IsAnimating
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xE12594", Offset = "0xE12594", VA = "0xE12594")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000495")]
		public Vector3 Position
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xE12628", Offset = "0xE12628", VA = "0xE12628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2400", Offset = "0x8D2400")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xE12634", Offset = "0xE12634", VA = "0xE12634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2410", Offset = "0x8D2410")]
			private set
			{
			}
		}

		[Token(Token = "0x17000496")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xE12640", Offset = "0xE12640", VA = "0xE12640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2420", Offset = "0x8D2420")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xE1264C", Offset = "0xE1264C", VA = "0xE1264C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2430", Offset = "0x8D2430")]
			private set
			{
			}
		}

		[Token(Token = "0x17000497")]
		public bool CanShowTip
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xE12658", Offset = "0xE12658", VA = "0xE12658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2440", Offset = "0x8D2440")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xE12660", Offset = "0xE12660", VA = "0xE12660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2450", Offset = "0x8D2450")]
			private set
			{
			}
		}

		[Token(Token = "0x17000498")]
		public float DelayAfterShow
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0xE1266C", Offset = "0xE1266C", VA = "0xE1266C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000499")]
		public float DelayAfterHide
		{
			[Token(Token = "0x6001848")]
			[Address(RVA = "0xE12674", Offset = "0xE12674", VA = "0xE12674")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xE1267C", Offset = "0xE1267C", VA = "0xE1267C")]
		public void ShowTransition(SectorTransitionVariant variant, float overrideTransitionTime = -1f)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xE129EC", Offset = "0xE129EC", VA = "0xE129EC")]
		public void HideTransition(float overrideTransitionTime = -1f)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xE129C0", Offset = "0xE129C0", VA = "0xE129C0")]
		private SectorTransition GetSectorTransition(SectorTransitionVariant variant)
		{
			return null;
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xE12AA0", Offset = "0xE12AA0", VA = "0xE12AA0")]
		public SectorTransitionManager()
		{
		}
	}
}
namespace Game.Sector.Tag
{
	[Token(Token = "0x20003C4")]
	public static class AbilityPassiveTagsDefault
	{
		[Token(Token = "0x4001504")]
		public const string TAG_TYPE = "AbilityPassiveTags";

		[Token(Token = "0x4001505")]
		private const string TAGS_ASSET_PATH = "Assets/Resources/AbilityPassiveTags.asset";

		[Token(Token = "0x4001506")]
		private const string TAGS_RESOURCES_PATH = "AbilityPassiveTags";

		[Token(Token = "0x4001507")]
		public const string TAG_EMPTY = "";

		[Token(Token = "0x4001508")]
		public const string TAG_THREATS_CONTAINER = "threats/container";

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] TAGS_PREDEFINED;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<string, Vector2Int> TAG_RANGES_PREDEFINED;

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xEE2AD4", Offset = "0xEE2AD4", VA = "0xEE2AD4")]
		static AbilityPassiveTagsDefault()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xEE2CD4", Offset = "0xEE2CD4", VA = "0xEE2CD4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8D2460", Offset = "0x8D2460")]
		private static void BeforeSplashScreen()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public static class BuffSourceTagsDefault
	{
		[Token(Token = "0x400150B")]
		public const string TAG_TYPE = "BuffSourceTags";

		[Token(Token = "0x400150C")]
		private const string TAGS_ASSET_PATH = "Assets/Resources/BuffSourceTags.asset";

		[Token(Token = "0x400150D")]
		private const string TAGS_RESOURCES_PATH = "BuffSourceTags";

		[Token(Token = "0x400150E")]
		public const string TAG_EMPTY = "";

		[Token(Token = "0x400150F")]
		public const string TAG_ALL = "all";

		[Token(Token = "0x4001510")]
		public const string TAG_SHIP = "ship";

		[Token(Token = "0x4001511")]
		public const string TAG_WEAPONS_ALL = "weapons/all";

		[Token(Token = "0x4001512")]
		public const string TAG_WEAPONS_BLASTER = "weapons/blaster";

		[Token(Token = "0x4001513")]
		public const string TAG_WEAPONS_LASER = "weapons/laser";

		[Token(Token = "0x4001514")]
		public const string TAG_WEAPONS_MISSILE = "weapons/missile";

		[Token(Token = "0x4001515")]
		public const string TAG_WEAPONS_MINE = "weapons/mine";

		[Token(Token = "0x4001516")]
		public const string TAG_DEFENSIVE_ALL = "defensive/all";

		[Token(Token = "0x4001517")]
		public const string TAG_DEFENSIVE_SHIELD = "defensive/shield";

		[Token(Token = "0x4001518")]
		public const string TAG_DEFENSIVE_SPEED_BOOST = "defensive/speedBoost";

		[Token(Token = "0x4001519")]
		public const string TAG_TOOLS_ALL = "tools/all";

		[Token(Token = "0x400151A")]
		public const string TAG_TOOLS_SCANNER = "tools/scanner";

		[Token(Token = "0x400151B")]
		public const string TAG_SPECIAL_ABILITY_ALL = "special_ability/all";

		[Token(Token = "0x400151C")]
		public const string TAG_CREATURE_ALL = "creature/all";

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] TAGS_PREDEFINED;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2Int TAG_RANGE_RANDOM;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector2Int TAG_RANGE_INTENSITY;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector2Int TAG_RANGE_DIFFICULTY;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Dictionary<string, Vector2Int> TAG_RANGES_PREDEFINED;

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xFE0D28", Offset = "0xFE0D28", VA = "0xFE0D28")]
		static BuffSourceTagsDefault()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xFE1368", Offset = "0xFE1368", VA = "0xFE1368")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8D2474", Offset = "0x8D2474")]
		private static void BeforeSplashScreen()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public static class BuffStatTagsDefault
	{
		[Token(Token = "0x4001522")]
		public const string TAG_TYPE = "BuffStatTags";

		[Token(Token = "0x4001523")]
		private const string TAGS_ASSET_PATH = "Assets/Resources/BuffStatTags.asset";

		[Token(Token = "0x4001524")]
		private const string TAGS_RESOURCES_PATH = "BuffStatTags";

		[Token(Token = "0x4001525")]
		public const string TAG_EMPTY = "";

		[Token(Token = "0x4001526")]
		public const string TAG_MAX_HEALTH = "maxHealth";

		[Token(Token = "0x4001527")]
		public const string TAG_MAX_HEALTH_BASE = "maxHealthBase";

		[Token(Token = "0x4001528")]
		public const string TAG_MAX_SHIELD = "maxShield";

		[Token(Token = "0x4001529")]
		public const string TAG_MAX_SHIELD_BASE = "maxShieldBase";

		[Token(Token = "0x400152A")]
		public const string TAG_DAMAGE_ALL = "damage/all";

		[Token(Token = "0x400152B")]
		public const string TAG_DAMAGE_HEALTH = "damage/health";

		[Token(Token = "0x400152C")]
		public const string TAG_DAMAGE_SHIELD = "damage/shield";

		[Token(Token = "0x400152D")]
		public const string TAG_DAMAGE_RADIUS = "damage/radius";

		[Token(Token = "0x400152E")]
		public const string TAG_DAMAGE_COLLISION = "damage/collision";

		[Token(Token = "0x400152F")]
		public const string TAG_DAMAGE_COLLISION_MULTIPLIER = "damage/collisionMultiplier";

		[Token(Token = "0x4001530")]
		public const string TAG_DAMAGE_ASTEROID = "damage/asteroid";

		[Token(Token = "0x4001531")]
		public const string TAG_DAMAGE_BOSS = "damage/boss";

		[Token(Token = "0x4001532")]
		public const string TAG_HEAL_ALL = "heal/all";

		[Token(Token = "0x4001533")]
		public const string TAG_HEAL_HEALTH = "heal/health";

		[Token(Token = "0x4001534")]
		public const string TAG_HEAL_SHIELD = "heal/shield";

		[Token(Token = "0x4001535")]
		public const string TAG_HEAL_PARASITE_MULTIPLIER = "heal/parasiteMultiplier";

		[Token(Token = "0x4001536")]
		public const string TAG_DEFENSE_ALL = "defense/all";

		[Token(Token = "0x4001537")]
		public const string TAG_DEFENSE_HEALTH = "defense/health";

		[Token(Token = "0x4001538")]
		public const string TAG_DEFENSE_SHIELD = "defense/shield";

		[Token(Token = "0x4001539")]
		public const string TAG_DEFENSE_COLLISION = "defense/collision";

		[Token(Token = "0x400153A")]
		public const string TAG_DEFENSE_COLLISION_MULTIPLIER = "defense/collisionMultiplier";

		[Token(Token = "0x400153B")]
		public const string TAG_DEFENSE_BLASTER = "defense/blaster";

		[Token(Token = "0x400153C")]
		public const string TAG_DEFENSE_LASER = "defense/laser";

		[Token(Token = "0x400153D")]
		public const string TAG_DEFENSE_EXPLOSION = "defense/explosion";

		[Token(Token = "0x400153E")]
		public const string TAG_SPEED = "speed/self";

		[Token(Token = "0x400153F")]
		public const string TAG_PROJECTILE_SPEED = "speed/projectiles";

		[Token(Token = "0x4001540")]
		public const string TAG_PROBABILITY_ALL = "probability/all";

		[Token(Token = "0x4001541")]
		public const string TAG_RANGE = "range";

		[Token(Token = "0x4001542")]
		public const string TAG_FIRE_RATE = "fireRate";

		[Token(Token = "0x4001543")]
		public const string TAG_KNOCKBACK = "knockback";

		[Token(Token = "0x4001544")]
		public const string TAG_DURATION = "duration";

		[Token(Token = "0x4001545")]
		public const string TAG_LOCK_ON_TIME = "lockOnTime";

		[Token(Token = "0x4001546")]
		public const string TAG_COOLDOWN = "cooldown";

		[Token(Token = "0x4001547")]
		public const string TAG_HOMING = "homing";

		[Token(Token = "0x4001548")]
		public const string TAG_UPGRADE_COST = "upgradeCost";

		[Token(Token = "0x4001549")]
		public const string TAG_MAX_USES = "maxUses";

		[Token(Token = "0x400154A")]
		public const string TAG_FIXED_MAX_USES = "fixedUses";

		[Token(Token = "0x400154B")]
		public const string TAG_INSTANT_RECHARGE = "instantRecharge";

		[Token(Token = "0x400154C")]
		public const string TAG_DISABLE = "disable";

		[Token(Token = "0x400154D")]
		public const string TAG_UNLIMITED_USES = "unlimitedUses";

		[Token(Token = "0x400154E")]
		public const string TAG_SATELLITE_COUNT = "satelliteCount";

		[Token(Token = "0x400154F")]
		public const string TAG_MOVE_NODE = "moveNode";

		[Token(Token = "0x4001550")]
		public const string TAG_STUN_TIME = "stunTime";

		[Token(Token = "0x4001551")]
		public const string TAG_BUFF_FREEZE = "debuffs/FreezeRayDebuff";

		[Token(Token = "0x4001552")]
		public const string TAG_SPECIAL_BLACK_HOLE_PULL_FORCE_FACTOR = "special/blackHolePullForceFactor";

		[Token(Token = "0x4001553")]
		public const string TAG_YIELD_ALL = "yield/all";

		[Token(Token = "0x4001554")]
		public const string TAG_YIELD_ASTEROIDS = "yield/asteroids";

		[Token(Token = "0x4001555")]
		public const string TAG_YIELD_AUTO_COLLECT = "yield/auto_collect";

		[Token(Token = "0x4001556")]
		public const string TAG_YIELD_SHIPS_ALL = "yield/ships/all";

		[Token(Token = "0x4001557")]
		public const string TAG_YIELD_SHIPS_XP = "yield/ships/xp";

		[Token(Token = "0x4001558")]
		public const string TAG_YIELD_SHIPS_XP_SCRAP = "yield/ships/scrap";

		[Token(Token = "0x4001559")]
		public const string TAG_YIELD_PICKUPS_XP = "yield/pickups/xp";

		[Token(Token = "0x400155A")]
		public const string TAG_YIELD_PICKUPS_SCRAP = "yield/pickups/scrap";

		[Token(Token = "0x400155B")]
		public const string TAG_YIELD_PICKUPS_ABILITY = "yield/pickups/ability";

		[Token(Token = "0x400155C")]
		public const string TAG_YIELD_PICKUPS_BLUEPRINT = "yield/pickups/blueprint";

		[Token(Token = "0x400155D")]
		public const string TAG_YIELD_PICKUPS_HEALTH = "yield/pickups/health";

		[Token(Token = "0x400155E")]
		public const string TAG_YIELD_PICKUPS_AMMO = "yield/pickups/ammo";

		[Token(Token = "0x400155F")]
		public const string TAG_YIELD_PICKUPS_AMMO_MULTIPLY_CHANCE = "yield/pickups/ammoMultiplyChance";

		[Token(Token = "0x4001560")]
		public const string TAG_YIELD_PICKUPS_ABILITY_LEVEL2_CHANCE = "yield/pickups/abilityLevel2Chance";

		[Token(Token = "0x4001561")]
		public const string TAG_YIELD_PICKUPS_ABILITY_LEVEL3_CHANCE = "yield/pickups/abilityLevel3Chance";

		[Token(Token = "0x4001562")]
		public const string TAG_YIELD_PICKUPS_LASTSTIME = "yield/pickups/lastsTime";

		[Token(Token = "0x4001563")]
		public const string TAG_YIELD_RECYCLE_SCRAP = "yield/recycle/scrap";

		[Token(Token = "0x4001564")]
		public const string TAG_YIELD_RECYCLE_HEALTH = "yield/recycle/health";

		[Token(Token = "0x4001565")]
		public const string TAG_YIELD_RECYCLE_EXPERIENCE = "yield/recycle/experience";

		[Token(Token = "0x4001566")]
		public const string TAG_YIELD_SHOP_ABILITY_LEVEL = "yield/shop/abilityLevel";

		[Token(Token = "0x4001567")]
		public const string TAG_MAP_UNKNOWN_SECTORS = "map/unknownSectors";

		[Token(Token = "0x4001568")]
		public const string TAG_SCANNER_SPEED = "scannerSpeed";

		[Token(Token = "0x4001569")]
		public const string TAG_TELEPORT_ANTICIPATION_SPEED = "teleport/anticipationSpeed";

		[Token(Token = "0x400156A")]
		public const string TAG_TECHTREE_AUTO_LOOT = "techtree/autoLoot";

		[Token(Token = "0x400156B")]
		public const string TAG_TECHTREE_AUTO_SCANNER_1 = "techtree/autoScanner1";

		[Token(Token = "0x400156C")]
		public const string TAG_TECHTREE_AUTO_SCANNER_2 = "techtree/autoScanner2";

		[Token(Token = "0x400156D")]
		public const string TAG_TECHTREE_START_SCRAP_AMOUNT = "techtree/startScrapAmount";

		[Token(Token = "0x400156E")]
		public const string TAG_TECHTREE_TRADER_DISCOUNT = "techtree/traderDiscount";

		[Token(Token = "0x400156F")]
		public const string TAG_TRADER_ITEM_COUNT = "trader/itemCount";

		[Token(Token = "0x4001570")]
		public const string TAG_ABILITY_AMMO_YIELD_MULTIPLIER = "ability/general/ammo/yieldMultiplier";

		[Token(Token = "0x4001571")]
		public const string TAG_TINKERERS_AMMO_YIELD_MULTIPLIER = "tinkerers/ammoMultiplier";

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] TAGS_PREDEFINED;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2Int TAG_RANGE_RANDOM;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector2Int TAG_RANGE_INTENSITY;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector2Int TAG_RANGE_DIFFICULTY;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Dictionary<string, Vector2Int> TAG_RANGES_PREDEFINED;

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xFE136C", Offset = "0xFE136C", VA = "0xFE136C")]
		static BuffStatTagsDefault()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xFE2D30", Offset = "0xFE2D30", VA = "0xFE2D30")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8D2488", Offset = "0x8D2488")]
		private static void BeforeSplashScreen()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C7")]
	public struct SectorTag
	{
		[Token(Token = "0x4001577")]
		public const string SUBTAG_ALL = "all";

		[Token(Token = "0x4001578")]
		public const char SUBTAG_DIV = '/';

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tag;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		[HideInInspector]
		private bool customTag;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SectorTag Empty;

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xE08BB8", Offset = "0xE08BB8", VA = "0xE08BB8")]
		public SectorTag(string tag)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xE08BE4", Offset = "0xE08BE4", VA = "0xE08BE4")]
		public static bool Match(SectorTag a, SectorTag b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xE08BF0", Offset = "0xE08BF0", VA = "0xE08BF0")]
		public static bool Match(SectorTag a, string b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xE08BFC", Offset = "0xE08BFC", VA = "0xE08BFC")]
		public static bool Match(string a, SectorTag b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xE08C04", Offset = "0xE08C04", VA = "0xE08C04")]
		public static bool operator ==(SectorTag a, SectorTag b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xE08C78", Offset = "0xE08C78", VA = "0xE08C78")]
		public static bool operator !=(SectorTag a, SectorTag b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xE08CF8", Offset = "0xE08CF8", VA = "0xE08CF8")]
		public static bool operator ==(string a, SectorTag b)
		{
			return default(bool);
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xE08D6C", Offset = "0xE08D6C", VA = "0xE08D6C")]
		public static bool operator !=(string a, SectorTag b)
		{
			return default(bool);
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xE08DEC", Offset = "0xE08DEC", VA = "0xE08DEC")]
		public static bool operator ==(SectorTag a, string b)
		{
			return default(bool);
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xE08E60", Offset = "0xE08E60", VA = "0xE08E60")]
		public static bool operator !=(SectorTag a, string b)
		{
			return default(bool);
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xE08EE0", Offset = "0xE08EE0", VA = "0xE08EE0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xE08FB4", Offset = "0xE08FB4", VA = "0xE08FB4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xE08FD4", Offset = "0xE08FD4", VA = "0xE08FD4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xE08FDC", Offset = "0xE08FDC", VA = "0xE08FDC")]
		public static implicit operator SectorTag(string tag)
		{
			return default(SectorTag);
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xE09010", Offset = "0xE09010", VA = "0xE09010")]
		public static implicit operator string(SectorTag tag)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003C8")]
	public struct SectorTagAmount
	{
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string tag;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private int amount;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		[SerializeField]
		private bool customTag;

		[Token(Token = "0x1700049A")]
		public SectorTag Tag
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0xE08810", Offset = "0xE08810", VA = "0xE08810")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x1700049B")]
		public int Amount
		{
			[Token(Token = "0x6001864")]
			[Address(RVA = "0xE0940C", Offset = "0xE0940C", VA = "0xE0940C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xE09414", Offset = "0xE09414", VA = "0xE09414")]
		public SectorTagAmount(SectorTag tag, int amount = 1)
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public interface ISectorTagCollectionReadOnly
	{
		[Token(Token = "0x1700049C")]
		IReadOnlyList<SectorTagRule> TagRules
		{
			[Token(Token = "0x6001866")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x20003CA")]
	public class SectorTagCollection : ISectorTagCollectionReadOnly
	{
		[Token(Token = "0x20003CB")]
		public delegate bool TagCheck<T>(T tagsCollection, SectorTagRule rule);

		[Serializable]
		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA268", Offset = "0x8AA268")]
		private sealed class <>c
		{
			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static TagCheck<List<string>> <>9__7_0;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static TagCheck<SectorTagsInput> <>9__8_0;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static TagCheck<IReadOnlyList<SectorTag>> <>9__9_0;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static TagCheck<IReadOnlyList<string>> <>9__10_0;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static TagCheck<ISectorTagCollectionReadOnly> <>9__11_0;

			[Token(Token = "0x6001877")]
			[Address(RVA = "0xFF7530", Offset = "0xFF7530", VA = "0xFF7530")]
			public <>c()
			{
			}

			[Token(Token = "0x6001878")]
			[Address(RVA = "0xFF7538", Offset = "0xFF7538", VA = "0xFF7538")]
			internal bool <CheckTagMatch>b__7_0(List<string> c, SectorTagRule r)
			{
				return default(bool);
			}

			[Token(Token = "0x6001879")]
			[Address(RVA = "0xFF7544", Offset = "0xFF7544", VA = "0xFF7544")]
			internal bool <CheckTagMatch>b__8_0(SectorTagsInput c, SectorTagRule r)
			{
				return default(bool);
			}

			[Token(Token = "0x600187A")]
			[Address(RVA = "0xFF7550", Offset = "0xFF7550", VA = "0xFF7550")]
			internal bool <CheckTagMatch>b__9_0(IReadOnlyList<SectorTag> c, SectorTagRule r)
			{
				return default(bool);
			}

			[Token(Token = "0x600187B")]
			[Address(RVA = "0xFF755C", Offset = "0xFF755C", VA = "0xFF755C")]
			internal bool <CheckTagMatch>b__10_0(IReadOnlyList<string> c, SectorTagRule r)
			{
				return default(bool);
			}

			[Token(Token = "0x600187C")]
			[Address(RVA = "0xFF7568", Offset = "0xFF7568", VA = "0xFF7568")]
			internal bool <CheckTagMatch>b__11_0(ISectorTagCollectionReadOnly c, SectorTagRule r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ISectorTagCollectionReadOnly EmptyTagCollection;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<SectorTagRule> tagRules;

		[Token(Token = "0x1700049D")]
		public IReadOnlyList<SectorTagRule> TagRules
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0xE0949C", Offset = "0xE0949C", VA = "0xE0949C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xE0950C", Offset = "0xE0950C", VA = "0xE0950C")]
		public void Validate()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xE09668", Offset = "0xE09668", VA = "0xE09668")]
		public void Clear()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xE09258", Offset = "0xE09258", VA = "0xE09258")]
		public bool CheckTagMatch()
		{
			return default(bool);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xE096C4", Offset = "0xE096C4", VA = "0xE096C4")]
		public bool CheckTagMatch(SectorTagsInput tags)
		{
			return default(bool);
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xE097FC", Offset = "0xE097FC", VA = "0xE097FC")]
		public bool CheckTagMatch(IReadOnlyList<SectorTag> tags)
		{
			return default(bool);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xE09934", Offset = "0xE09934", VA = "0xE09934")]
		public bool CheckTagMatch(IReadOnlyList<string> tags)
		{
			return default(bool);
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xE09A6C", Offset = "0xE09A6C", VA = "0xE09A6C")]
		public bool CheckTagMatch(ISectorTagCollectionReadOnly tags)
		{
			return default(bool);
		}

		[Token(Token = "0x600186F")]
		public bool CheckTagMatch<T>(T tags, TagCheck<T> checkRuleTagMatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xE09404", Offset = "0xE09404", VA = "0xE09404")]
		public SectorTagCollection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CD")]
	public struct SectorTagCollectionHierarchy
	{
		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SectorTagCollectionObject[] includedTags;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private SectorTagCollection tags;

		[Token(Token = "0x1700049E")]
		public IReadOnlyList<SectorTagCollectionObject> IncludedTags
		{
			[Token(Token = "0x600187D")]
			[Address(RVA = "0xE09C08", Offset = "0xE09C08", VA = "0xE09C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049F")]
		public ISectorTagCollectionReadOnly LocalTags
		{
			[Token(Token = "0x600187E")]
			[Address(RVA = "0xE09C78", Offset = "0xE09C78", VA = "0xE09C78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A0")]
		public SectorTagCollection FullTags
		{
			[Token(Token = "0x600187F")]
			[Address(RVA = "0xE09C80", Offset = "0xE09C80", VA = "0xE09C80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xE09D68", Offset = "0xE09D68", VA = "0xE09D68")]
		public SectorTagCollectionHierarchy(SectorTagCollection tags)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xE09DCC", Offset = "0xE09DCC", VA = "0xE09DCC")]
		public SectorTagCollectionHierarchy(SectorTagCollectionObject[] includedTags)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xE09D98", Offset = "0xE09D98", VA = "0xE09D98")]
		public SectorTagCollectionHierarchy(SectorTagCollection tags, SectorTagCollectionObject[] includedTags)
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xE09220", Offset = "0xE09220", VA = "0xE09220")]
		public SectorTagCollection SetFullTags(SectorTagCollection collection)
		{
			return null;
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xE09CE0", Offset = "0xE09CE0", VA = "0xE09CE0")]
		public SectorTagCollection AddFullTags(SectorTagCollection collection)
		{
			return null;
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xE09E04", Offset = "0xE09E04", VA = "0xE09E04")]
		public static void AddTagCollection(SectorTagCollection result, ISectorTagCollectionReadOnly collection)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xE09EF0", Offset = "0xE09EF0", VA = "0xE09EF0")]
		public static void AddTagCollection(SectorTagCollection result, SectorTagCollectionObject collection)
		{
		}

		[Token(Token = "0x6001887")]
		private static void AddTags<T>(ref List<T> result, IReadOnlyList<T> tags)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xE081B8", Offset = "0xE081B8", VA = "0xE081B8")]
		public SectorTagCollectionHierarchy Validate()
		{
			return default(SectorTagCollectionHierarchy);
		}
	}
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AA278", Offset = "0x8AA278")]
	public class SectorTagCollectionObject : ScriptableObject
	{
		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SectorTagCollectionHierarchy tags;

		[Token(Token = "0x170004A1")]
		public SectorTagCollectionHierarchy Hierarchy
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0xE09F70", Offset = "0xE09F70", VA = "0xE09F70")]
			get
			{
				return default(SectorTagCollectionHierarchy);
			}
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xE09F7C", Offset = "0xE09F7C", VA = "0xE09F7C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xE09F8C", Offset = "0xE09F8C", VA = "0xE09F8C")]
		public SectorTagCollectionObject()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public enum SectorTagRuleType
	{
		[Token(Token = "0x400158B")]
		ModifySceneTag = 0,
		[Token(Token = "0x400158C")]
		AddTargetTag = 1,
		[Token(Token = "0x400158D")]
		ModifyStoryTag = 2,
		[Token(Token = "0x400158E")]
		TargetTagsInclude = 10,
		[Token(Token = "0x400158F")]
		TargetTagsExclude = 11,
		[Token(Token = "0x4001590")]
		SceneTagsInclude = 20,
		[Token(Token = "0x4001591")]
		SceneTagsExclude = 21,
		[Token(Token = "0x4001592")]
		StoryTagsInclude = 30,
		[Token(Token = "0x4001593")]
		StoryTagsExclude = 31
	}
	[Token(Token = "0x20003D0")]
	public enum SectorTagRuleTagMode
	{
		[Token(Token = "0x4001595")]
		SingleTag,
		[Token(Token = "0x4001596")]
		MultipleTags
	}
	[Token(Token = "0x20003D1")]
	public enum SectorTagRuleCondition
	{
		[Token(Token = "0x4001598")]
		None,
		[Token(Token = "0x4001599")]
		MinValue,
		[Token(Token = "0x400159A")]
		MaxValue,
		[Token(Token = "0x400159B")]
		MinMaxValue
	}
	[Token(Token = "0x20003D2")]
	public enum SectorTagRuleModification
	{
		[Token(Token = "0x400159D")]
		Increment = 0,
		[Token(Token = "0x400159E")]
		Decrement = 1,
		[Token(Token = "0x400159F")]
		Add = 10,
		[Token(Token = "0x40015A0")]
		Subtract = 11,
		[Token(Token = "0x40015A1")]
		Set = 20,
		[Token(Token = "0x40015A2")]
		Remove = 30
	}
	[Serializable]
	[Token(Token = "0x20003D3")]
	public struct SectorTagRule
	{
		[Token(Token = "0x20003D4")]
		public delegate int TagCounter<T>(T tagsCollection, SectorTag tag, int sectorIndex);

		[Serializable]
		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA2E4", Offset = "0x8AA2E4")]
		private sealed class <>c
		{
			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static TagCounter<List<string>> <>9__17_0;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static TagCounter<SectorTagsInput> <>9__18_0;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static TagCounter<IReadOnlyList<SectorTag>> <>9__19_0;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static TagCounter<IReadOnlyList<string>> <>9__20_0;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static TagCounter<ISectorTagCollectionReadOnly> <>9__21_0;

			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xFF75D8", Offset = "0xFF75D8", VA = "0xFF75D8")]
			public <>c()
			{
			}

			[Token(Token = "0x60018A7")]
			[Address(RVA = "0xFF75E0", Offset = "0xFF75E0", VA = "0xFF75E0")]
			internal int <CheckTagMatch>b__17_0(List<string> c, SectorTag t, int i)
			{
				return default(int);
			}

			[Token(Token = "0x60018A8")]
			[Address(RVA = "0xFF75E8", Offset = "0xFF75E8", VA = "0xFF75E8")]
			internal int <CheckTagMatch>b__18_0(SectorTagsInput c, SectorTag t, int i)
			{
				return default(int);
			}

			[Token(Token = "0x60018A9")]
			[Address(RVA = "0xFF760C", Offset = "0xFF760C", VA = "0xFF760C")]
			internal int <CheckTagMatch>b__19_0(IReadOnlyList<SectorTag> c, SectorTag t, int i)
			{
				return default(int);
			}

			[Token(Token = "0x60018AA")]
			[Address(RVA = "0xFF7688", Offset = "0xFF7688", VA = "0xFF7688")]
			internal int <CheckTagMatch>b__20_0(IReadOnlyList<string> c, SectorTag t, int i)
			{
				return default(int);
			}

			[Token(Token = "0x60018AB")]
			[Address(RVA = "0xFF7704", Offset = "0xFF7704", VA = "0xFF7704")]
			internal int <CheckTagMatch>b__21_0(ISectorTagCollectionReadOnly c, SectorTag t, int i)
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA2F4", Offset = "0x8AA2F4")]
		private sealed class <>c__22<T>
		{
			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__22<T> <>9;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static TagCounter<T> <>9__22_0;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static TagCounter<T> <>9__22_1;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static TagCounter<T> <>9__22_2;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static TagCounter<T> <>9__22_3;

			[Token(Token = "0x60018AD")]
			public <>c__22()
			{
			}

			[Token(Token = "0x60018AE")]
			internal int <CheckTagMatch>b__22_0(T c, SectorTag t, int i)
			{
				return default(int);
			}

			[Token(Token = "0x60018AF")]
			internal int <CheckTagMatch>b__22_1(T c, SectorTag t, int i)
			{
				return default(int);
			}

			[Token(Token = "0x60018B0")]
			internal int <CheckTagMatch>b__22_2(T c, SectorTag t, int i)
			{
				return default(int);
			}

			[Token(Token = "0x60018B1")]
			internal int <CheckTagMatch>b__22_3(T c, SectorTag t, int i)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		[SerializeField]
		public string ruleSummary;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SectorTagRuleType ruleType;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SectorTagRuleTagMode tagMode;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SectorTag tag;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SectorTag[] tags;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SectorTagRuleModification modificationType;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public SectorTagRuleCondition conditionType;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int conditionMin;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int conditionMax;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] includeSectorIndices;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringBuilder SummaryBuilder;

		[Token(Token = "0x40015AE")]
		private const int MAX_SUMMARY_TAGS = 3;

		[Token(Token = "0x170004A2")]
		public Vector2Int ConditionRange
		{
			[Token(Token = "0x600188C")]
			[Address(RVA = "0xE0A52C", Offset = "0xE0A52C", VA = "0xE0A52C")]
			get
			{
				return default(Vector2Int);
			}
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xE09624", Offset = "0xE09624", VA = "0xE09624")]
		public SectorTagRule Validate()
		{
			return default(SectorTagRule);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xE0A5C8", Offset = "0xE0A5C8", VA = "0xE0A5C8")]
		public string CreateSummary()
		{
			return null;
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xE0A918", Offset = "0xE0A918", VA = "0xE0A918")]
		public bool CheckTagMatch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xE0AA3C", Offset = "0xE0AA3C", VA = "0xE0AA3C")]
		public bool CheckTagMatch(SectorTagsInput tags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xE0AB6C", Offset = "0xE0AB6C", VA = "0xE0AB6C")]
		public bool CheckTagMatch(IReadOnlyList<SectorTag> tags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xE0AC9C", Offset = "0xE0AC9C", VA = "0xE0AC9C")]
		public bool CheckTagMatch(IReadOnlyList<string> tags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xE0ADCC", Offset = "0xE0ADCC", VA = "0xE0ADCC")]
		public bool CheckTagMatch(ISectorTagCollectionReadOnly tags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001894")]
		public bool CheckTagMatch<T>(T tags, TagCounter<T> getTagCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001895")]
		private bool IsTagInRange<T>(T tags, TagCounter<T> getTagCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001896")]
		private bool IsTagInRange<T>(T tags, TagCounter<T> getTagCount, SectorTag tag, Vector2Int range)
		{
			return default(bool);
		}

		[Token(Token = "0x6001897")]
		private bool IsTagNotInRange<T>(T tags, TagCounter<T> getTagCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001898")]
		private bool IsTagNotInRange<T>(T tags, TagCounter<T> getTagCount, SectorTag tag, Vector2Int range)
		{
			return default(bool);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xE0AEFC", Offset = "0xE0AEFC", VA = "0xE0AEFC")]
		public static int CountListTag(IReadOnlyList<string> tags, SectorTag tag)
		{
			return default(int);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xE0B0B4", Offset = "0xE0B0B4", VA = "0xE0B0B4")]
		public static int CountListTag(IReadOnlyList<SectorTag> tags, SectorTag tag)
		{
			return default(int);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xE0B270", Offset = "0xE0B270", VA = "0xE0B270")]
		public static int CountCollectionTag(ISectorTagCollectionReadOnly tags, SectorTag tag)
		{
			return default(int);
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xE0B68C", Offset = "0xE0B68C", VA = "0xE0B68C")]
		public static bool IsIntInRange(int value, Vector2Int range)
		{
			return default(bool);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xE0B5EC", Offset = "0xE0B5EC", VA = "0xE0B5EC")]
		public bool IsTargetTag(SectorTag tag)
		{
			return default(bool);
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xE0B6A8", Offset = "0xE0B6A8", VA = "0xE0B6A8")]
		public bool TryGetSceneTagModification(out SectorTag sceneTag, out SectorTagRuleModification modification, out int modificationValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xE0B718", Offset = "0xE0B718", VA = "0xE0B718")]
		public bool TryApplyStoryTagModification()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003D7")]
	public class SectorTagTypeAttribute : Attribute
	{
		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string tagType;

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xE0B7BC", Offset = "0xE0B7BC", VA = "0xE0B7BC")]
		public SectorTagTypeAttribute()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xE0B7EC", Offset = "0xE0B7EC", VA = "0xE0B7EC")]
		public SectorTagTypeAttribute(string tagType)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D8")]
	public struct SectorTagValue
	{
		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int valueBase;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private SectorTagValueModifier[] valueModifiers;

		[Token(Token = "0x170004A3")]
		public int ValueBase
		{
			[Token(Token = "0x60018B4")]
			[Address(RVA = "0xE0B820", Offset = "0xE0B820", VA = "0xE0B820")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004A4")]
		public IReadOnlyList<SectorTagValueModifier> ValueModifiers
		{
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0xE0B828", Offset = "0xE0B828", VA = "0xE0B828")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xE07F60", Offset = "0xE07F60", VA = "0xE07F60")]
		public SectorTagValue(int valueBase)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xE0B898", Offset = "0xE0B898", VA = "0xE0B898")]
		public SectorTagValue Validate()
		{
			return default(SectorTagValue);
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xE0BA08", Offset = "0xE0BA08", VA = "0xE0BA08")]
		public int GetValue(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xE07930", Offset = "0xE07930", VA = "0xE07930")]
		public int GetValue(SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003D9")]
	public enum SectorTagValueModifierType
	{
		[Token(Token = "0x40015BE")]
		TagRuleValue,
		[Token(Token = "0x40015BF")]
		TagCurveValue
	}
	[Token(Token = "0x20003DA")]
	public enum SectorTagValueModifierTarget
	{
		[Token(Token = "0x40015C1")]
		TargetTags,
		[Token(Token = "0x40015C2")]
		SceneTags
	}
	[Serializable]
	[Token(Token = "0x20003DB")]
	public struct SectorTagValueModifier
	{
		[Serializable]
		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA304", Offset = "0x8AA304")]
		private sealed class <>c
		{
			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static SectorTagCollection.TagCheck<ISectorTagCollectionReadOnly> <>9__12_0;

			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static SectorTagRule.TagCounter<ISectorTagCollectionReadOnly> <>9__12_1;

			[Token(Token = "0x40015CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static SectorTagCollection.TagCheck<SectorTagsInput> <>9__13_0;

			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static SectorTagRule.TagCounter<SectorTagsInput> <>9__13_1;

			[Token(Token = "0x60018C1")]
			[Address(RVA = "0xFF77E4", Offset = "0xFF77E4", VA = "0xFF77E4")]
			public <>c()
			{
			}

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xFF77EC", Offset = "0xFF77EC", VA = "0xFF77EC")]
			internal bool <GetValue>b__12_0(ISectorTagCollectionReadOnly c, SectorTagRule r)
			{
				return default(bool);
			}

			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xFF77F8", Offset = "0xFF77F8", VA = "0xFF77F8")]
			internal int <GetValue>b__12_1(ISectorTagCollectionReadOnly c, SectorTag t, int i)
			{
				return default(int);
			}

			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xFF7874", Offset = "0xFF7874", VA = "0xFF7874")]
			internal bool <GetValue>b__13_0(SectorTagsInput c, SectorTagRule r)
			{
				return default(bool);
			}

			[Token(Token = "0x60018C5")]
			[Address(RVA = "0xFF7880", Offset = "0xFF7880", VA = "0xFF7880")]
			internal int <GetValue>b__13_1(SectorTagsInput c, SectorTag t, int i)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		[SerializeField]
		public string modifierSummary;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SectorTagValueModifierType modifierType;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int value;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2Int valueRange;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve valueCurve;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SectorTag tag;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SectorTagValueModifierTarget tagTarget;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2Int tagRange;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SectorTagCollectionHierarchy tagHierarchy;

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xE0B964", Offset = "0xE0B964", VA = "0xE0B964")]
		public SectorTagValueModifier Validate()
		{
			return default(SectorTagValueModifier);
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xE0C0F8", Offset = "0xE0C0F8", VA = "0xE0C0F8")]
		public string CreateSummary()
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xE0C59C", Offset = "0xE0C59C", VA = "0xE0C59C")]
		public static int TryGetHierarchyFirstRule(SectorTagCollectionHierarchy hierarchy, out SectorTagRule rule)
		{
			return default(int);
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xE0BD08", Offset = "0xE0BD08", VA = "0xE0BD08")]
		public int GetValue(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xE0BF00", Offset = "0xE0BF00", VA = "0xE0BF00")]
		public int GetValue(SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x60018BF")]
		private int GetValue<T>(T tags, SectorTagCollection workTagCollection, SectorTagCollection.TagCheck<T> checkRuleTagMatch, SectorTagRule.TagCounter<T> getTagCount)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003DD")]
	public class SectorTags : ScriptableObject
	{
		[Token(Token = "0x20003DE")]
		private struct SectorTagType
		{
			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string tagType;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string tagsAssetPath;

			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string tagsResourcesPath;

			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IReadOnlyList<string> predefinedTags;

			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IReadOnlyDictionary<string, Vector2Int> predefinedTagRanges;
		}

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private string tagType;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ReadOnlyField]
		[SerializeField]
		private string[] predefinedTags;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string[] customTags;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private string[] combinedTags;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SectorTagType> sectorTagTypes;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int sectorTagTypeDefaultIndex;

		[Token(Token = "0x170004A5")]
		public string[] Tags
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0xE0C99C", Offset = "0xE0C99C", VA = "0xE0C99C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xE0CA0C", Offset = "0xE0CA0C", VA = "0xE0CA0C")]
		public int GetTagIndexOrDefault(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xE0CAA4", Offset = "0xE0CAA4", VA = "0xE0CAA4")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xE0D0D8", Offset = "0xE0D0D8", VA = "0xE0D0D8")]
		public static void AddSectorType(string tagType, string tagsAssetPath, string tagsResourcesPath, string[] predefinedTags, Dictionary<string, Vector2Int> predefinedTagRanges, bool tagTypeIsDefault = false)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xE0D280", Offset = "0xE0D280", VA = "0xE0D280")]
		public static SectorTags GetOrCreate(SectorTagTypeAttribute tagTypeAttr)
		{
			return null;
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xE0D2E8", Offset = "0xE0D2E8", VA = "0xE0D2E8")]
		public static SectorTags GetOrCreate(string tagType)
		{
			return null;
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xE0D454", Offset = "0xE0D454", VA = "0xE0D454")]
		public static bool IsPredefinedTag(string tag, [System.Runtime.InteropServices.Optional] string onlyTagType)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xE0D944", Offset = "0xE0D944", VA = "0xE0D944")]
		public static bool TryGetPredefinedTagRange(string tag, out Vector2Int range, [System.Runtime.InteropServices.Optional] string onlyTagType)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xE0CEA0", Offset = "0xE0CEA0", VA = "0xE0CEA0")]
		private static SectorTagType GetTagType(string tagType)
		{
			return default(SectorTagType);
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xE0DB90", Offset = "0xE0DB90", VA = "0xE0DB90")]
		public SectorTags()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public static class SectorTagsDefault
	{
		[Token(Token = "0x40015DC")]
		public const string TAG_TYPE = "SectorTags";

		[Token(Token = "0x40015DD")]
		private const string TAGS_ASSET_PATH = "Assets/Resources/SectorTags.asset";

		[Token(Token = "0x40015DE")]
		private const string TAGS_RESOURCES_PATH = "SectorTags";

		[Token(Token = "0x40015DF")]
		public const string TAG_EMPTY = "";

		[Token(Token = "0x40015E0")]
		public const string TAG_RANDOM = "random";

		[Token(Token = "0x40015E1")]
		public const string TAG_INTENSITY = "intensity";

		[Token(Token = "0x40015E2")]
		public const string TAG_DIFFICULTY = "difficulty";

		[Token(Token = "0x40015E3")]
		public const string TAG_TUTORIAL_RUN = "tutorial/run";

		[Token(Token = "0x40015E4")]
		public const string TAG_EVENT = "event";

		[Token(Token = "0x40015E5")]
		public const string TAG_SECTOR_GAME_RUN = "sector_game_run";

		[Token(Token = "0x40015E6")]
		public const string TAG_SECTOR_DEPTH = "sector_depth";

		[Token(Token = "0x40015E7")]
		public const string TAG_SECTOR_WIDTH = "sector_width";

		[Token(Token = "0x40015E8")]
		public const string TAG_SECTOR_PROGRESS_MAP = "sector_progress_map";

		[Token(Token = "0x40015E9")]
		public const string TAG_SECTOR_PROGRESS_BIOME = "sector_progress_biome";

		[Token(Token = "0x40015EA")]
		public const string TAG_SECTOR_MAP_CURRENT_THREAT_LEVEL = "sector_map/current_threat_level";

		[Token(Token = "0x40015EB")]
		public const string TAG_SECTOR_MAP_NEW_THREAT_LEVEL = "sector_map/new_threat_level";

		[Token(Token = "0x40015EC")]
		public const string TAG_AI_START_DELAY = "ai_start_delay";

		[Token(Token = "0x40015ED")]
		public const string TAG_ENGAGEMENT_START_IN_SCENE = "engagement_start_in_scene";

		[Token(Token = "0x40015EE")]
		public const string TAG_ENGAGEMENT_START_WAIT = "engagement_start_wait";

		[Token(Token = "0x40015EF")]
		public const string TAG_ENGAGEMENT_START_CONTINUE = "engagement_start_continue";

		[Token(Token = "0x40015F0")]
		public const string TAG_ENGAGEMENT_REWARD_ABILITY = "engagement_reward_ability";

		[Token(Token = "0x40015F1")]
		public const string TAG_EVENT_SCAN_OBJECT_WAIT = "event_scan_object_wait";

		[Token(Token = "0x40015F2")]
		public const string TAG_EVENT_SCAN_OBJECT_CONTINUE = "event_scan_object_continue";

		[Token(Token = "0x40015F3")]
		public const string TAG_HIDE_PLAYER_SHIP = "hide_player_ship";

		[Token(Token = "0x40015F4")]
		public const string TAG_ELITE_BATTLE = "elite_battle";

		[Token(Token = "0x40015F5")]
		public const string TAG_DAILY_JOURNEY_ENABLE = "dailyJourney/enable";

		[Token(Token = "0x40015F6")]
		public const string TAG_STORY_RUN_SUCCESS_COUNT = "story/run_success_count";

		[Token(Token = "0x40015F7")]
		public const string TAG_STORY_CLEARED_THREAT_LEVEL = "story/cleared_threat_level";

		[Token(Token = "0x40015F8")]
		public const string TAG_RUN_RESULT_SUCCESS = "run/result/success";

		[Token(Token = "0x40015F9")]
		public const string TAG_RUN_RESULT_FAILURE = "run/result/failure";

		[Token(Token = "0x40015FA")]
		public const string TAG_RUN_RESULT_CANCEL = "run/result/cancel";

		[Token(Token = "0x40015FB")]
		public const string TAG_RUN_TYPE_DAILY_JOURNEY = "run/type/daily_journey";

		[Token(Token = "0x40015FC")]
		public const string TAG_RUN_TYPE_TUTORIAL = "run/type/tutorial";

		[Token(Token = "0x40015FD")]
		public const string TAG_MENU_ON_SETUP_SHOW_DISABLE = "menu_on_setup_show_disable";

		[Token(Token = "0x40015FE")]
		public const string TAG_DESTROY_ENGAGEMENT_TRIGGERED = "destroy_engagement_triggered";

		[Token(Token = "0x40015FF")]
		public const string TAG_RELAXED_MODE_ENABLE = "relaxedMode/enable";

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] TAGS_PREDEFINED;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2Int TAG_RANGE_RANDOM;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector2Int TAG_RANGE_INTENSITY;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector2Int TAG_RANGE_DIFFICULTY;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Vector2Int TAG_RANGE_PROGRESS;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly Dictionary<string, Vector2Int> TAG_RANGES_PREDEFINED;

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xE0E0DC", Offset = "0xE0E0DC", VA = "0xE0E0DC")]
		static SectorTagsDefault()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xE0ED80", Offset = "0xE0ED80", VA = "0xE0ED80")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8D249C", Offset = "0x8D249C")]
		private static void BeforeSplashScreen()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class SectorTagsInput
	{
		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<SectorTagAmount> tags;

		[Token(Token = "0x170004A6")]
		public IReadOnlyList<SectorTagAmount> Tags
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xE087A0", Offset = "0xE087A0", VA = "0xE087A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000069")]
		public event Action OnTagsChanged
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0xE0A104", Offset = "0xE0A104", VA = "0xE0A104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D24B0", Offset = "0x8D24B0")]
			add
			{
			}
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xE0A40C", Offset = "0xE0A40C", VA = "0xE0A40C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D24C0", Offset = "0x8D24C0")]
			remove
			{
			}
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xE0ED84", Offset = "0xE0ED84", VA = "0xE0ED84")]
		public SectorTagsInput()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xE0EDB4", Offset = "0xE0EDB4", VA = "0xE0EDB4")]
		public SectorTagsInput(IReadOnlyList<SectorTag> tags)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xE0F098", Offset = "0xE0F098", VA = "0xE0F098")]
		public SectorTagsInput(IReadOnlyList<string> tags)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xE0F3CC", Offset = "0xE0F3CC", VA = "0xE0F3CC")]
		public SectorTagsInput(IReadOnlyList<SectorTagAmount> tags)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xE0F6C8", Offset = "0xE0F6C8", VA = "0xE0F6C8")]
		public SectorTagsInput(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xE0F8C0", Offset = "0xE0F8C0", VA = "0xE0F8C0")]
		public bool HasTag(SectorTag tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xE0FC20", Offset = "0xE0FC20", VA = "0xE0FC20")]
		public int GetTagCount(SectorTag tag)
		{
			return default(int);
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xE0FDB8", Offset = "0xE0FDB8", VA = "0xE0FDB8")]
		public void AddTag(SectorTag tag, int amount = 1)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xE0FFD4", Offset = "0xE0FFD4", VA = "0xE0FFD4")]
		public void AddTag(SectorTagAmount tag)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xE10020", Offset = "0xE10020", VA = "0xE10020")]
		public void SetTag(SectorTag tag, int amount = 1)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xE10260", Offset = "0xE10260", VA = "0xE10260")]
		public void SetTag(SectorTagAmount tag)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xE0EF0C", Offset = "0xE0EF0C", VA = "0xE0EF0C")]
		public void AddTags(IReadOnlyList<SectorTag> tags)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xE0F1F0", Offset = "0xE0F1F0", VA = "0xE0F1F0")]
		public void AddTags(IReadOnlyList<string> tags)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xE0F524", Offset = "0xE0F524", VA = "0xE0F524")]
		public void AddTags(IReadOnlyList<SectorTagAmount> tags)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xE0F7BC", Offset = "0xE0F7BC", VA = "0xE0F7BC")]
		public void AddTags(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xE102AC", Offset = "0xE102AC", VA = "0xE102AC")]
		public void RemoveTag(SectorTag tag, int amount = int.MaxValue)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xE10460", Offset = "0xE10460", VA = "0xE10460")]
		public void RemoveTag(int index, int amount = int.MaxValue)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xE105AC", Offset = "0xE105AC", VA = "0xE105AC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xE10618", Offset = "0xE10618", VA = "0xE10618")]
		public List<SectorTagAmount> ToList()
		{
			return null;
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xE106D8", Offset = "0xE106D8", VA = "0xE106D8")]
		public static bool HasTag(IReadOnlyCollection<SectorTag> tags, SectorTag tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xE0F8C8", Offset = "0xE0F8C8", VA = "0xE0F8C8")]
		public static bool HasTag(IReadOnlyCollection<SectorTagAmount> tags, SectorTag tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xE10A1C", Offset = "0xE10A1C", VA = "0xE10A1C")]
		public static void AddTag(IList<SectorTagAmount> tags, SectorTag tag, int amount = 1)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xE10D00", Offset = "0xE10D00", VA = "0xE10D00")]
		public static void AddTag(IList<SectorTagAmount> tags, SectorTagAmount tag)
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public static class ShipPartModTagsDefault
	{
		[Token(Token = "0x4001608")]
		public const string TAG_TYPE = "ShipPartModTags";

		[Token(Token = "0x4001609")]
		private const string TAGS_ASSET_PATH = "Assets/Resources/ShipPartModTags.asset";

		[Token(Token = "0x400160A")]
		private const string TAGS_RESOURCES_PATH = "ShipPartModTags";

		[Token(Token = "0x400160B")]
		public const string TAG_NONE = "none";

		[Token(Token = "0x400160C")]
		public const string TAG_RANDOM = "random";

		[Token(Token = "0x400160D")]
		public const string TAG_INTENSITY = "intensity";

		[Token(Token = "0x400160E")]
		public const string TAG_DIFFICULTY = "difficulty";

		[Token(Token = "0x400160F")]
		public const string TAG_SECTOR_GAME_RUN = "sector_game_run";

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] TAGS_PREDEFINED;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2Int TAG_RANGE_RANDOM;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector2Int TAG_RANGE_INTENSITY;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector2Int TAG_RANGE_DIFFICULTY;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Dictionary<string, Vector2Int> TAG_RANGES_PREDEFINED;

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xF4B9DC", Offset = "0xF4B9DC", VA = "0xF4B9DC")]
		static ShipPartModTagsDefault()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xF4BC6C", Offset = "0xF4BC6C", VA = "0xF4BC6C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8D24D0", Offset = "0x8D24D0")]
		private static void BeforeSplashScreen()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public static class ShipPartTagsDefault
	{
		[Token(Token = "0x4001615")]
		public const string TAG_TYPE = "ShipPartTags";

		[Token(Token = "0x4001616")]
		private const string TAGS_ASSET_PATH = "Assets/Resources/ShipPartTags.asset";

		[Token(Token = "0x4001617")]
		private const string TAGS_RESOURCES_PATH = "ShipPartTags";

		[Token(Token = "0x4001618")]
		public const string TAG_EMPTY = "";

		[Token(Token = "0x4001619")]
		public const string TAG_ALL = "all";

		[Token(Token = "0x400161A")]
		public const string TAG_RANDOM = "random";

		[Token(Token = "0x400161B")]
		public const string TAG_INTENSITY = "intensity";

		[Token(Token = "0x400161C")]
		public const string TAG_DIFFICULTY = "difficulty";

		[Token(Token = "0x400161D")]
		public const string TAG_SECTOR_GAME_RUN = "sector_game_run";

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] TAGS_PREDEFINED;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2Int TAG_RANGE_RANDOM;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector2Int TAG_RANGE_INTENSITY;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector2Int TAG_RANGE_DIFFICULTY;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Dictionary<string, Vector2Int> TAG_RANGES_PREDEFINED;

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xF4BC70", Offset = "0xF4BC70", VA = "0xF4BC70")]
		static ShipPartTagsDefault()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xF4BF00", Offset = "0xF4BF00", VA = "0xF4BF00")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8D24E4", Offset = "0x8D24E4")]
		private static void BeforeSplashScreen()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public static class TechTreeUpgradeTagsDefault
	{
		[Token(Token = "0x4001623")]
		public const string TAG_TYPE = "TechTreeUpgradeTags";

		[Token(Token = "0x4001624")]
		private const string TAGS_ASSET_PATH = "Assets/Resources/TechTreeUpgradeTags.asset";

		[Token(Token = "0x4001625")]
		private const string TAGS_RESOURCES_PATH = "TechTreeUpgradeTags";

		[Token(Token = "0x4001626")]
		public const string TAG_EMPTY = "";

		[Token(Token = "0x4001627")]
		public const string TAG_ASSISTANCE_FINANCIAL_THEORY = "assistance/financialTheory";

		[Token(Token = "0x4001628")]
		public const string TAG_ASSISTANCE_DIPLOMACY = "assistance/diplomacy";

		[Token(Token = "0x4001629")]
		public const string TAG_ASSISTANCE_SCAN_TECH = "assistance/scanTech";

		[Token(Token = "0x400162A")]
		public const string TAG_ASSISTANCE_POWER_REROUTING = "assistance/powerRerouting";

		[Token(Token = "0x400162B")]
		public const string TAG_ASSISTANCE_AUTO_SCANNER_1 = "assistance/autoScanner1";

		[Token(Token = "0x400162C")]
		public const string TAG_ASSISTANCE_AUTO_SCANNER_2 = "assistance/autoScanner2";

		[Token(Token = "0x400162D")]
		public const string TAG_ASSISTANCE_MAGNETIC_FIELDS = "assistance/magneticFields";

		[Token(Token = "0x400162E")]
		public const string TAG_ASSISTANCE_GEOLOGY = "assistance/geology";

		[Token(Token = "0x400162F")]
		public const string TAG_ASSISTANCE_ANIMA_STUDIES = "assistance/animaStudies";

		[Token(Token = "0x4001630")]
		public const string TAG_ASSISTANCE_VIR_PERSONALITY_MODULE = "assistance/virPersonalityModule";

		[Token(Token = "0x4001631")]
		public const string TAG_ASSISTANCE_EXPANDED_DATABASE = "assistance/expandedDatabase";

		[Token(Token = "0x4001632")]
		public const string TAG_COMPONENTS_IMPROVED_COMPONENTS = "components/improvedComponents";

		[Token(Token = "0x4001633")]
		public const string TAG_COMPONENTS_SUPERIOR_COMPONENTS = "components/superiorComponents";

		[Token(Token = "0x4001634")]
		public const string TAG_COMPONENTS_SCRAPPER_EFFICIENCY = "components/scrapperEfficiency";

		[Token(Token = "0x4001635")]
		public const string TAG_COMPONENTS_NECESSARY_REPAIRS = "components/necessaryRepairs";

		[Token(Token = "0x4001636")]
		public const string TAG_COMPONENTS_DESTRUCTIVE_PATTERN = "components/destructivePattern";

		[Token(Token = "0x4001637")]
		public const string TAG_COMPONENTS_RESEARCH_ASSISTANT = "components/researchAssistant";

		[Token(Token = "0x4001638")]
		public const string TAG_AURORA_HULL_ENGINEERING = "aurora/hullEngineering";

		[Token(Token = "0x4001639")]
		public const string TAG_AURORA_SHIELD_ENGINEERING = "aurora/shieldEngineering";

		[Token(Token = "0x400163A")]
		public const string TAG_AURORA_MISSILE_ARSENAL = "aurora/missileArsenal";

		[Token(Token = "0x400163B")]
		public const string TAG_AURORA_SPEED_BOOST_POWER = "aurora/speedBoostPower";

		[Token(Token = "0x400163C")]
		public const string TAG_AURORA_NAVIGATION_SYSTEM = "aurora/navigationSystem";

		[Token(Token = "0x400163D")]
		public const string TAG_AURORA_COLOR = "aurora/color";

		[Token(Token = "0x400163E")]
		public const string TAG_IRIS_HULL_ENGINEERING = "iris/hullEngineering";

		[Token(Token = "0x400163F")]
		public const string TAG_IRIS_SHIELD_ENGINEERING = "iris/shieldEngineering";

		[Token(Token = "0x4001640")]
		public const string TAG_IRIS_MISSILE_ARSENAL = "iris/missileArsenal";

		[Token(Token = "0x4001641")]
		public const string TAG_IRIS_COLOR = "iris/color";

		[Token(Token = "0x4001642")]
		public const string TAG_IRIS_MINE_SPEED = "iris/mineSpeed";

		[Token(Token = "0x4001643")]
		public const string TAG_IRIS_MINE_DAMAGE = "iris/mineDamage";

		[Token(Token = "0x4001644")]
		public const string TAG_IRIS_NAVIGATION_SYSTEM = "iris/navigationSystem";

		[Token(Token = "0x4001645")]
		public const string TAG_IRIS_MISSILE_DAMAGE = "iris/missileDamage";

		[Token(Token = "0x4001646")]
		public const string TAG_IRIS_MISSILE_KNOCKBACK = "iris/missileKnockback";

		[Token(Token = "0x4001647")]
		public const string TAG_IRIS_MISSILE_RADIUS = "iris/missileRadius";

		[Token(Token = "0x4001648")]
		public const string TAG_IRIS_MISSILE_LOCK_ON = "iris/missileLockOn";

		[Token(Token = "0x4001649")]
		public const string TAG_IRIS_MOVEMENT_SPEED = "iris/movementSpeed";

		[Token(Token = "0x400164A")]
		public const string TAG_PANDORA_HULL_ENGINEERING = "pandora/hullEngineering";

		[Token(Token = "0x400164B")]
		public const string TAG_PANDORA_SHIELD_ENGINEERING = "pandora/shieldEngineering";

		[Token(Token = "0x400164C")]
		public const string TAG_PANDORA_MISSILE_ARSENAL = "pandora/missileArsenal";

		[Token(Token = "0x400164D")]
		public const string TAG_PANDORA_COLOR = "pandora/color";

		[Token(Token = "0x400164E")]
		public const string TAG_PANDORA_MISSILE_DROP_CHANCE_INCREASE = "pandora/missileDropChanceIncrease";

		[Token(Token = "0x400164F")]
		public const string TAG_PANDORA_MISSILE_MULTIPLE_AMMO_CHANCE = "pandora/missileMultipleAmmoChance";

		[Token(Token = "0x4001650")]
		public const string TAG_PANDORA_MISSILE_TINKERERS_INCREASE = "pandora/missileTinkerersIncrease";

		[Token(Token = "0x4001651")]
		public const string TAG_PANDORA_BULLRUSH_DAMAGE_INCREASE = "pandora/bullRushDamageIncrease";

		[Token(Token = "0x4001652")]
		public const string TAG_PANDORA_BULLRUSH_DEFENSE_INCREASE = "pandora/bullRushDefenseIncrease";

		[Token(Token = "0x4001653")]
		public const string TAG_PANDORA_PARASITE_BLASTER_HEAL_INCREASE = "pandora/parasiteBlasterHealIncrease";

		[Token(Token = "0x4001654")]
		public const string TAG_PANDORA_PARASITE_LASER_HEAL_INCREASE = "pandora/parasiteLaserHealIncrease";

		[Token(Token = "0x4001655")]
		public const string TAG_SHIP_REINFORCED_PLATING = "ship/reinforcedPlating";

		[Token(Token = "0x4001656")]
		public const string TAG_SHIP_FORCEFIELD_POWER = "ship/forcefieldPower";

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] TAGS_PREDEFINED;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<string, Vector2Int> TAG_RANGES_PREDEFINED;

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xF30C94", Offset = "0xF30C94", VA = "0xF30C94")]
		static TechTreeUpgradeTagsDefault()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xF31D50", Offset = "0xF31D50", VA = "0xF31D50")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8D24F8", Offset = "0x8D24F8")]
		private static void BeforeSplashScreen()
		{
		}
	}
}
namespace Game.Sector.Map
{
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AA314", Offset = "0x8AA314")]
	public class SectorMapBranchProfile : ScriptableObject
	{
		[Token(Token = "0x20003E5")]
		public struct BranchRow
		{
			[Token(Token = "0x4001664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int width;

			[Token(Token = "0x4001665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BranchNode[] specialNodes;

			[Token(Token = "0x60018F6")]
			[Address(RVA = "0xD7B4F4", Offset = "0xD7B4F4", VA = "0xD7B4F4")]
			public BranchRow(int width, [System.Runtime.InteropServices.Optional] BranchNode[] specialNodes)
			{
			}

			[Token(Token = "0x60018F7")]
			[Address(RVA = "0xD7B504", Offset = "0xD7B504", VA = "0xD7B504")]
			public BranchRow AddWidth(int value)
			{
				return default(BranchRow);
			}

			[Token(Token = "0x60018F8")]
			[Address(RVA = "0xD7B544", Offset = "0xD7B544", VA = "0xD7B544")]
			public BranchRow AddSpecialNode(int nodeIndex)
			{
				return default(BranchRow);
			}
		}

		[Token(Token = "0x20003E6")]
		public struct BranchNode
		{
			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool isSpecialNode;

			[Token(Token = "0x60018F9")]
			[Address(RVA = "0xD7B4E8", Offset = "0xD7B4E8", VA = "0xD7B4E8")]
			public BranchNode(bool isSpecialNode)
			{
			}
		}

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF8AC", Offset = "0x8BF8AC")]
		[SerializeField]
		private Vector2Int branchAmountRange;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve branchAmountDistribution;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2Int branchMinSpacingRange;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2Int branchMinSpacingStartRange;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve branchMinSpacingDistribution;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2Int branchLengthRange;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve branchLengthDistribution;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF958", Offset = "0x8BF958")]
		private Vector2Int specialNodeAddValueRange;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationCurve specialNodeAddValueDistribution;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int specialNodeOverflowSubtractValue;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private int specialNodeThreshold;

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xD89B74", Offset = "0xD89B74", VA = "0xD89B74")]
		public static BranchRow[] GetRegionRowWidth(SectorMapBranchProfile branchProfile, WrappedRandom random, int rowCount, ref int specialNodeSum, ref int specialNodeOverflow)
		{
			return null;
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xD89CD8", Offset = "0xD89CD8", VA = "0xD89CD8")]
		public BranchRow[] GetRegionRowWidth(WrappedRandom random, int rowCount, ref int specialNodeSum, ref int specialNodeOverflow)
		{
			return null;
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xD8A188", Offset = "0xD8A188", VA = "0xD8A188")]
		public SectorMapBranchProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E7")]
	public struct SectorMapResult
	{
		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<SectorMapRegion> regions;

		[Token(Token = "0x170004A7")]
		public bool IsValid
		{
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0xD8D794", Offset = "0xD8D794", VA = "0xD8D794")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A8")]
		public int NodeCount
		{
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0xD941C4", Offset = "0xD941C4", VA = "0xD941C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xD94468", Offset = "0xD94468", VA = "0xD94468")]
		public SectorMapResult(List<SectorMapRegion> regions)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E8")]
	public struct SectorMapRegion
	{
		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<SectorMapNodeRow> nodeRows;

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xD941BC", Offset = "0xD941BC", VA = "0xD941BC")]
		public SectorMapRegion(List<SectorMapNodeRow> nodeRows)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E9")]
	public struct SectorMapNodeRow
	{
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<SectorMapNode> nodes;

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xD92910", Offset = "0xD92910", VA = "0xD92910")]
		public SectorMapNodeRow(List<SectorMapNode> nodes)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EA")]
	public struct SectorMapNode
	{
		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string seed;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<SectorTagAmount> tags;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> connectionIndices;

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xD90DAC", Offset = "0xD90DAC", VA = "0xD90DAC")]
		public SectorMapNode(string seed, List<SectorTagAmount> tags, List<int> connectionIndices)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EB")]
	public struct SectorMapIndex
	{
		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int regionIndex;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rowIndex;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int nodeIndex;

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xD8B0CC", Offset = "0xD8B0CC", VA = "0xD8B0CC")]
		public SectorMapIndex(int regionIndex, int rowIndex, int nodeIndex)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xD8B0D8", Offset = "0xD8B0D8", VA = "0xD8B0D8")]
		public bool IsValid(SectorMapResult map)
		{
			return default(bool);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xD8B220", Offset = "0xD8B220", VA = "0xD8B220")]
		public bool IsLastRegion(SectorMapResult map)
		{
			return default(bool);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xD8B29C", Offset = "0xD8B29C", VA = "0xD8B29C")]
		public bool IsLastRow(SectorMapResult map)
		{
			return default(bool);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xD8B34C", Offset = "0xD8B34C", VA = "0xD8B34C")]
		public SectorMapRegion Region(SectorMapResult map)
		{
			return default(SectorMapRegion);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xD8B3D8", Offset = "0xD8B3D8", VA = "0xD8B3D8")]
		public SectorMapNodeRow Row(SectorMapResult map)
		{
			return default(SectorMapNodeRow);
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xD8B498", Offset = "0xD8B498", VA = "0xD8B498")]
		public SectorMapNode Node(SectorMapResult map)
		{
			return default(SectorMapNode);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xD8B5A4", Offset = "0xD8B5A4", VA = "0xD8B5A4")]
		public int AbsoluteNodeIndex(SectorMapResult map)
		{
			return default(int);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xD8B73C", Offset = "0xD8B73C", VA = "0xD8B73C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xD8B814", Offset = "0xD8B814", VA = "0xD8B814", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xD8B880", Offset = "0xD8B880", VA = "0xD8B880", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xD8B7E4", Offset = "0xD8B7E4", VA = "0xD8B7E4")]
		public static bool operator ==(SectorMapIndex a, SectorMapIndex b)
		{
			return default(bool);
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xD8B948", Offset = "0xD8B948", VA = "0xD8B948")]
		public static bool operator !=(SectorMapIndex a, SectorMapIndex b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003EC")]
	public struct SectorMapDescriptionInput
	{
		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WrappedRandom random;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SectorTagsInput inputTags;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SectorMapNodeSelector nodeSelector;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SectorTagsInput sourceTags;

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xD8A9D8", Offset = "0xD8A9D8", VA = "0xD8A9D8")]
		public SectorMapDescriptionInput(WrappedRandom random, SectorTagsInput inputTags, SectorMapNodeSelector nodeSelector)
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xD8AAA8", Offset = "0xD8AAA8", VA = "0xD8AAA8")]
		public void ResetTags()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AA380", Offset = "0x8AA380")]
	public class SectorMapDescription : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20003EE")]
		public struct SectorMapRegionDescription
		{
			[Serializable]
			[Token(Token = "0x20003EF")]
			public struct SectorMapRegionDepthTag
			{
				[Token(Token = "0x400167E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public SectorTag tag;

				[Token(Token = "0x400167F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Vector2Int depthRange;
			}

			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int repeatCount;

			[Token(Token = "0x4001678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SectorMapBranchProfile regionBranchProfile;

			[Token(Token = "0x4001679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTagAmount[] regionTags;

			[Token(Token = "0x400167A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorMapRegionDepthTag[] regionDepthTags;

			[Token(Token = "0x400167B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorMapNodeRowDescription[] nodeRows;

			[Token(Token = "0x400167C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static List<SectorMapNodeRowDescription> RowTempList;

			[Token(Token = "0x400167D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static SectorTagCollection RowTempTags;

			[Token(Token = "0x6001913")]
			[Address(RVA = "0xD7C4E4", Offset = "0xD7C4E4", VA = "0xD7C4E4")]
			public SectorMapRegionDescription Validate()
			{
				return default(SectorMapRegionDescription);
			}

			[Token(Token = "0x6001914")]
			[Address(RVA = "0xD7C594", Offset = "0xD7C594", VA = "0xD7C594")]
			public SectorMapRegion CreateSectorMapRegion(SectorMapDescriptionInput input, SectorMapBranchProfile mapBranchProfile, IReadOnlyList<SectorTagAmount> mapTags, ref int rowIndex, ref int specialNodeSum, ref int specialNodeOverflow)
			{
				return default(SectorMapRegion);
			}

			[Token(Token = "0x6001915")]
			[Address(RVA = "0xD7CD98", Offset = "0xD7CD98", VA = "0xD7CD98")]
			private static int GetRowWidth(IReadOnlyList<SectorMapNodeRowDescription> rows, IReadOnlyList<SectorMapBranchProfile.BranchRow> rowsWidth, int index)
			{
				return default(int);
			}

			[Token(Token = "0x6001916")]
			[Address(RVA = "0xD7CFD4", Offset = "0xD7CFD4", VA = "0xD7CFD4")]
			private static void ResizeRowBranchSpecialNodes(ref List<bool> rowBranchSpecialNodes, ref List<bool> rowBranchSpecialNodesBuffer, SectorMapNodeRow previousRow, int nextWidth)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003F0")]
		public struct SectorMapNodeRowDescription
		{
			[Token(Token = "0x4001680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int repeatCount;

			[Token(Token = "0x4001681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float includeChance;

			[Token(Token = "0x4001682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SectorTagCollectionHierarchy includeRules;

			[Token(Token = "0x4001683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorMapNodeDescription[] nodes;

			[Token(Token = "0x6001918")]
			[Address(RVA = "0xD7B690", Offset = "0xD7B690", VA = "0xD7B690")]
			public SectorMapNodeRowDescription Validate()
			{
				return default(SectorMapNodeRowDescription);
			}

			[Token(Token = "0x6001919")]
			[Address(RVA = "0xD7B6C4", Offset = "0xD7B6C4", VA = "0xD7B6C4")]
			public SectorMapNodeRow CreateSectorMapNodeRow(SectorMapDescriptionInput input, IReadOnlyList<SectorTagAmount> mapTags, IReadOnlyList<SectorTagAmount> regionTags, IReadOnlyList<SectorTagAmount> regionDepthTags, List<bool> rowBranchSpecialNodes, SectorMapBranchProfile.BranchRow row, int rowIndex, int nextRowWidth = 0)
			{
				return default(SectorMapNodeRow);
			}

			[Token(Token = "0x600191A")]
			[Address(RVA = "0xD7C170", Offset = "0xD7C170", VA = "0xD7C170")]
			public static bool HasSharedConnection(IReadOnlyList<SectorMapNodeDescription> rowNodes, int nextRowWidth, int nodeIndex)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003F1")]
		public struct SectorMapNodeDescription
		{
			[Token(Token = "0x4001684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string seed;

			[Token(Token = "0x4001685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<SectorTagAmount> tags;

			[Token(Token = "0x4001686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> connectionIndices;

			[Token(Token = "0x600191B")]
			[Address(RVA = "0xD7B640", Offset = "0xD7B640", VA = "0xD7B640")]
			public SectorMapNodeDescription(string seed, List<SectorTagAmount> tags, List<int> connectionIndices)
			{
			}
		}

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SectorMapBranchProfile mapBranchProfile;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SectorTagAmount[] mapTags;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SectorMapRegionDescription[] regions;

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xD8A514", Offset = "0xD8A514", VA = "0xD8A514")]
		public static SectorMapDescription CreateDescription(SectorMapRegionDescription[] regions, [System.Runtime.InteropServices.Optional] SectorTagAmount[] mapTags, [System.Runtime.InteropServices.Optional] SectorMapBranchProfile mapBranchProfile)
		{
			return null;
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xD8A5AC", Offset = "0xD8A5AC", VA = "0xD8A5AC")]
		public SectorMapResult CreateSectorMap(SectorMapDescriptionInput input)
		{
			return default(SectorMapResult);
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xD8A920", Offset = "0xD8A920", VA = "0xD8A920")]
		public static SectorMapResult CreateSectorMap(SectorMapDescription description, SectorMapDescriptionInput input)
		{
			return default(SectorMapResult);
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xD8A9D0", Offset = "0xD8A9D0", VA = "0xD8A9D0")]
		public SectorMapDescription()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public static class SectorMapNodeConnector
	{
		[Token(Token = "0x20003F3")]
		private struct ConnectionRow
		{
			[Token(Token = "0x4001688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ConnectionRowTargetSize[] targetSizes;

			[Token(Token = "0x600191E")]
			[Address(RVA = "0xD7EC7C", Offset = "0xD7EC7C", VA = "0xD7EC7C")]
			public ConnectionRow(params ConnectionRowTargetSize[] targetSizes)
			{
			}
		}

		[Token(Token = "0x20003F4")]
		private struct ConnectionRowTargetSize
		{
			[Token(Token = "0x4001689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ConnectionRowNodeAlternative[] rowNodeAlternatives;

			[Token(Token = "0x600191F")]
			[Address(RVA = "0xD7ECA0", Offset = "0xD7ECA0", VA = "0xD7ECA0")]
			public ConnectionRowTargetSize(params ConnectionRowNodeAlternative[] rowNodeAlternatives)
			{
			}
		}

		[Token(Token = "0x20003F5")]
		private struct ConnectionRowNodeAlternative
		{
			[Token(Token = "0x400168A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int weight;

			[Token(Token = "0x400168B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Connection[] connections;

			[Token(Token = "0x6001920")]
			[Address(RVA = "0xD7EC84", Offset = "0xD7EC84", VA = "0xD7EC84")]
			public ConnectionRowNodeAlternative(int weight, params Connection[] connections)
			{
			}

			[Token(Token = "0x6001921")]
			[Address(RVA = "0xD7EC94", Offset = "0xD7EC94", VA = "0xD7EC94")]
			public static int GetWeight(ConnectionRowNodeAlternative alternative)
			{
				return default(int);
			}

			[Token(Token = "0x6001922")]
			[Address(RVA = "0xD7EC98", Offset = "0xD7EC98", VA = "0xD7EC98")]
			public static bool GetAlternativeValid(ConnectionRowNodeAlternative alternative)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003F6")]
		public struct Connection
		{
			[Token(Token = "0x400168C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] indices;

			[Token(Token = "0x6001923")]
			[Address(RVA = "0xD7EC74", Offset = "0xD7EC74", VA = "0xD7EC74")]
			public Connection(params int[] indices)
			{
			}
		}

		[Token(Token = "0x20003F7")]
		public struct ConnectionSelection
		{
			[Token(Token = "0x400168D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int sizeFrom;

			[Token(Token = "0x400168E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private int sizeTo;

			[Token(Token = "0x400168F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private bool mirror;

			[Token(Token = "0x4001690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			private bool swapIndices;

			[Token(Token = "0x4001691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Connection[] connections;

			[Token(Token = "0x6001924")]
			[Address(RVA = "0xD7ECA8", Offset = "0xD7ECA8", VA = "0xD7ECA8")]
			public ConnectionSelection(int sizeFrom, int sizeTo, bool mirror, bool swapIndices, Connection[] connections)
			{
			}

			[Token(Token = "0x6001925")]
			[Address(RVA = "0xD7BFC0", Offset = "0xD7BFC0", VA = "0xD7BFC0")]
			public bool AddConnectionIndices(List<int> indices, int nodeRowIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6001926")]
			[Address(RVA = "0xD7ECC8", Offset = "0xD7ECC8", VA = "0xD7ECC8")]
			private int GetMirroredIndex(int index, int size)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ConnectionRow[] CONNECTION_ROWS;

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xD90DFC", Offset = "0xD90DFC", VA = "0xD90DFC")]
		public static bool TrySelectConnectionAlternative(WrappedRandom random, int rowNodeCount, int nextRowNodeCount, out ConnectionSelection connectionSelection)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AA3EC", Offset = "0x8AA3EC")]
	public class SectorMapNodeInfo : ScriptableObject
	{
		[Token(Token = "0x20003F9")]
		public class SelectionWrapper<TNode> : ISectorAsset where TNode : SectorMapNodeInfo
		{
			[Token(Token = "0x400169A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool usedInMap;

			[Token(Token = "0x400169B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool usedInBranch;

			[Token(Token = "0x400169C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int lastUsedIndex;

			[Token(Token = "0x400169D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int currentIndex;

			[Token(Token = "0x400169E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFAC0", Offset = "0x8BFAC0")]
			private TNode <Node>k__BackingField;

			[Token(Token = "0x170004AD")]
			public TNode Node
			{
				[Token(Token = "0x600192E")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D250C", Offset = "0x8D250C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600192F")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D251C", Offset = "0x8D251C")]
				private set
				{
				}
			}

			[Token(Token = "0x170004AE")]
			public string Name
			{
				[Token(Token = "0x6001930")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001931")]
			public SelectionWrapper(TNode node)
			{
			}

			[Token(Token = "0x6001932")]
			public virtual int GetSelectionWeight(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
			{
				return default(int);
			}

			[Token(Token = "0x6001933")]
			public virtual int GetSelectionWeight(SectorTagsInput tags, SectorTagCollection workTagCollection)
			{
				return default(int);
			}

			[Token(Token = "0x6001934")]
			public int GetSelectionPoints(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
			{
				return default(int);
			}

			[Token(Token = "0x6001935")]
			public int GetSelectionPoints(SectorTagsInput tags, SectorTagCollection workTagCollection)
			{
				return default(int);
			}

			[Token(Token = "0x6001936")]
			private bool ShouldIncludeNode()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string displayName;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string group;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SectorTagAmount[] nodeTags;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SectorTagValue selectionWeight;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFA44", Offset = "0x8BFA44")]
		private SectorTagCollectionHierarchy selectionRules;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool selectionMapExclusive;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool selectionBranchExclusive;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int selectionDistanceMin;

		[Token(Token = "0x170004A9")]
		public string DisplayName
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xD92774", Offset = "0xD92774", VA = "0xD92774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		public string Group
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0xD9277C", Offset = "0xD9277C", VA = "0xD9277C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AB")]
		public int SelectionDistanceMin
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xD92784", Offset = "0xD92784", VA = "0xD92784")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004AC")]
		public IReadOnlyList<SectorTagAmount> NodeTags
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0xD9278C", Offset = "0xD9278C", VA = "0xD9278C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xD92794", Offset = "0xD92794", VA = "0xD92794")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xD927C4", Offset = "0xD927C4", VA = "0xD927C4")]
		public SelectionWrapper<SectorMapNodeInfo> CreateNodeInfoSelectionWrapper()
		{
			return null;
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xD92838", Offset = "0xD92838", VA = "0xD92838")]
		public SectorMapNodeInfo()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class SectorMapNodeSelector
	{
		[Token(Token = "0x20003FB")]
		public class SectorMapNodeInfoSelection<TNode> : SectorAssetSelection<SectorMapNodeInfo.SelectionWrapper<TNode>> where TNode : SectorMapNodeInfo
		{
			[Token(Token = "0x6001946")]
			public SectorMapNodeInfoSelection(SectorTagsInput tags, SectorTagCollection objTags, List<SectorAsset<SectorMapNodeInfo.SelectionWrapper<TNode>>> validObjects, int maxSelectionPoints, WrappedRandom random)
			{
			}

			[Token(Token = "0x6001947")]
			protected override void OnAssetSelected(ref SectorAsset<SectorMapNodeInfo.SelectionWrapper<TNode>> obj)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA458", Offset = "0x8AA458")]
		private sealed class <>c
		{
			[Token(Token = "0x40016A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeType>>> <>9__20_0;

			[Token(Token = "0x40016A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeInfo>>> <>9__20_1;

			[Token(Token = "0x6001949")]
			[Address(RVA = "0xD7ED44", Offset = "0xD7ED44", VA = "0xD7ED44")]
			public <>c()
			{
			}

			[Token(Token = "0x600194A")]
			[Address(RVA = "0xD7ED4C", Offset = "0xD7ED4C", VA = "0xD7ED4C")]
			internal int <SortNodes>b__20_0(SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeType>> a, SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeType>> b)
			{
				return default(int);
			}

			[Token(Token = "0x600194B")]
			[Address(RVA = "0xD7EDD4", Offset = "0xD7EDD4", VA = "0xD7EDD4")]
			internal int <SortNodes>b__20_1(SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeInfo>> a, SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeInfo>> b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFAD0", Offset = "0x8BFAD0")]
		private SectorMapNodeType <DefaultNodeType>k__BackingField;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SectorMapNodeInfoSelection<SectorMapNodeType> nodeTypes;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, SectorMapNodeInfoSelection<SectorMapNodeInfo>> nodeInfoGroups;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeInfo>>> EMPTY_NODE_INFO_LIST;

		[Token(Token = "0x170004AF")]
		public SectorMapNodeType DefaultNodeType
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xD92918", Offset = "0xD92918", VA = "0xD92918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D252C", Offset = "0x8D252C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001938")]
			[Address(RVA = "0xD92920", Offset = "0xD92920", VA = "0xD92920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D253C", Offset = "0x8D253C")]
			set
			{
			}
		}

		[Token(Token = "0x170004B0")]
		public IReadOnlyList<SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeType>>> NodeTypes
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0xD92928", Offset = "0xD92928", VA = "0xD92928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xD92944", Offset = "0xD92944", VA = "0xD92944")]
		public IReadOnlyList<SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeInfo>>> NodeInfo(string group)
		{
			return null;
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xD92A00", Offset = "0xD92A00", VA = "0xD92A00")]
		public SectorMapNodeSelector()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xD92B60", Offset = "0xD92B60", VA = "0xD92B60")]
		public bool TrySelectNodeType(int currentIndex, out SectorMapNodeType selectedNodeType)
		{
			return default(bool);
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xD92D10", Offset = "0xD92D10", VA = "0xD92D10")]
		public bool TryAddNodeTags(List<SectorTagAmount> tags, SectorMapNodeType nodeType, int currentIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xD93790", Offset = "0xD93790", VA = "0xD93790")]
		public void ResetBranch()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xD8A758", Offset = "0xD8A758", VA = "0xD8A758")]
		public void ResetMap(WrappedRandom random, SectorTagsInput inputTags)
		{
		}

		[Token(Token = "0x6001940")]
		private static void ResetBranchNodeSelector<TNode>(SectorMapNodeInfoSelection<TNode> selector) where TNode : SectorMapNodeInfo
		{
		}

		[Token(Token = "0x6001941")]
		private static void ResetMapNodeSelector<TNode>(SectorMapNodeInfoSelection<TNode> selector, WrappedRandom random, SectorTagsInput inputTags) where TNode : SectorMapNodeInfo
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xD93938", Offset = "0xD93938", VA = "0xD93938")]
		public void AddNodeType(SectorMapNodeType nodeType)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xD93A8C", Offset = "0xD93A8C", VA = "0xD93A8C")]
		public void AddNodeInfo(SectorMapNodeInfo nodeInfo)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xD93CAC", Offset = "0xD93CAC", VA = "0xD93CAC")]
		public void SortNodes()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AA468", Offset = "0x8AA468")]
	public class SectorMapNodeType : SectorMapNodeInfo
	{
		[Serializable]
		[Token(Token = "0x20003FE")]
		public struct IncludedInfoGroup
		{
			[Token(Token = "0x40016A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string group;

			[Token(Token = "0x40016AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool required;
		}

		[Token(Token = "0x20003FF")]
		public class SelectionWrapperNodeType : SelectionWrapper<SectorMapNodeType>
		{
			[Token(Token = "0x600194F")]
			[Address(RVA = "0xD7EE5C", Offset = "0xD7EE5C", VA = "0xD7EE5C")]
			public SelectionWrapperNodeType(SectorMapNodeType nodeType)
			{
			}

			[Token(Token = "0x6001950")]
			[Address(RVA = "0xD7EEB8", Offset = "0xD7EEB8", VA = "0xD7EEB8", Slot = "9")]
			public override int GetSelectionWeight(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
			{
				return default(int);
			}

			[Token(Token = "0x6001951")]
			[Address(RVA = "0xD7EFFC", Offset = "0xD7EFFC", VA = "0xD7EFFC", Slot = "10")]
			public override int GetSelectionWeight(SectorTagsInput tags, SectorTagCollection workTagCollection)
			{
				return default(int);
			}

			[Token(Token = "0x6001952")]
			[Address(RVA = "0xD7EF28", Offset = "0xD7EF28", VA = "0xD7EF28")]
			private int ApplyChanceMultiplier(int selectionWeight)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFAE0", Offset = "0x8BFAE0")]
		[SerializeField]
		private int selectionDistanceChanceRange;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationCurve selectionDistanceChanceDistribution;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFB3C", Offset = "0x8BFB3C")]
		[SerializeField]
		private IncludedInfoGroup[] additionalInfoGroups;

		[Token(Token = "0x170004B1")]
		public IReadOnlyList<IncludedInfoGroup> AdditionalInfoGroups
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0xD9407C", Offset = "0xD9407C", VA = "0xD9407C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xD93A2C", Offset = "0xD93A2C", VA = "0xD93A2C")]
		public SelectionWrapperNodeType CreateNodeTypeSelectionWrapper()
		{
			return null;
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xD94084", Offset = "0xD94084", VA = "0xD94084")]
		public SectorMapNodeType()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class SectorMapProgressionBar : MonoBehaviour
	{
		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFB88", Offset = "0x8BFB88")]
		[SerializeField]
		private UiToggleSprite[] progressionToggles;

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xD940D0", Offset = "0xD940D0", VA = "0xD940D0")]
		public void SetProgressionToggle()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xD8E280", Offset = "0xD8E280", VA = "0xD8E280")]
		public void SetProgressionToggle(int shownRegionIndex)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xD9419C", Offset = "0xD9419C", VA = "0xD9419C")]
		public SectorMapProgressionBar()
		{
		}
	}
}
namespace Game.Run
{
	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AA4D4", Offset = "0x8AA4D4")]
	public class EventTags : ScriptableObject
	{
		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFBD4", Offset = "0x8BFBD4")]
		private SectorTagAmount[] eventTags;

		[Token(Token = "0x170004B2")]
		public IReadOnlyList<SectorTagAmount> Tags
		{
			[Token(Token = "0x6001956")]
			[Address(RVA = "0xC59EC8", Offset = "0xC59EC8", VA = "0xC59EC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xC59ED0", Offset = "0xC59ED0", VA = "0xC59ED0")]
		public EventTags()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public enum RunIntroVariant
	{
		[Token(Token = "0x40016AE")]
		IntroLogo,
		[Token(Token = "0x40016AF")]
		IntroRun
	}
	[Token(Token = "0x2000403")]
	public class RunIntroAnimation : MonoBehaviourSingleton<RunIntroAnimation>
	{
		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA540", Offset = "0x8AA540")]
		private sealed class <IntroActionRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40016B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action completeAction;

			[Token(Token = "0x170004B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600195E")]
				[Address(RVA = "0xD707F0", Offset = "0xD707F0", VA = "0xD707F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001960")]
				[Address(RVA = "0xD70838", Offset = "0xD70838", VA = "0xD70838", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600195B")]
			[Address(RVA = "0xD70700", Offset = "0xD70700", VA = "0xD70700")]
			[DebuggerHidden]
			public <IntroActionRoutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600195C")]
			[Address(RVA = "0xD7072C", Offset = "0xD7072C", VA = "0xD7072C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600195D")]
			[Address(RVA = "0xD70730", Offset = "0xD70730", VA = "0xD70730", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600195F")]
			[Address(RVA = "0xD707F8", Offset = "0xD707F8", VA = "0xD707F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UnityEventDelayChain introLogo;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public UnityEventDelayChain introRun;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine introRoutine;

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xCEBC40", Offset = "0xCEBC40", VA = "0xCEBC40")]
		public bool TryRunIntro(RunIntroVariant variant, [System.Runtime.InteropServices.Optional] Action completeAction)
		{
			return default(bool);
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xCEBD38", Offset = "0xCEBD38", VA = "0xCEBD38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D254C", Offset = "0x8D254C")]
		private IEnumerator IntroActionRoutine(float delay, Action completeAction)
		{
			return null;
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xCEBDC0", Offset = "0xCEBDC0", VA = "0xCEBDC0")]
		public RunIntroAnimation()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public abstract class RunSectorTagModule : MonoBehaviour
	{
		[Token(Token = "0x6001961")]
		public abstract void AddModuleTags(SectorTagsInput tags);

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xCF50E8", Offset = "0xCF50E8", VA = "0xCF50E8")]
		protected RunSectorTagModule()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class RunSectorTagModuleEvent : RunSectorTagModule
	{
		[Token(Token = "0x40016B7")]
		public const string EVENT_TAG_PREFIX = "event:";

		[Token(Token = "0x40016B8")]
		public const string EVENT_TAG_SUFFIX = "Tags";

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xCF50F0", Offset = "0xCF50F0", VA = "0xCF50F0", Slot = "4")]
		public override void AddModuleTags(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xCF5470", Offset = "0xCF5470", VA = "0xCF5470")]
		public RunSectorTagModuleEvent()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class RunSectorTagModuleIntensity : RunSectorTagModule
	{
		[Token(Token = "0x2000408")]
		public enum PercentThresholdIntensityComparison
		{
			[Token(Token = "0x40016BE")]
			CheckValueBelowThreshold,
			[Token(Token = "0x40016BF")]
			CheckValueAboveThreshold
		}

		[Serializable]
		[Token(Token = "0x2000409")]
		public struct PercentThresholdIntensity
		{
			[Token(Token = "0x40016C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int value;

			[Token(Token = "0x40016C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public PercentThresholdIntensityComparison comparison;

			[Token(Token = "0x40016C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BFC70", Offset = "0x8BFC70")]
			public float threshold;

			[Token(Token = "0x6001968")]
			[Address(RVA = "0xD7381C", Offset = "0xD7381C", VA = "0xD7381C")]
			public int GetIntensity(float value)
			{
				return default(int);
			}

			[Token(Token = "0x6001969")]
			[Address(RVA = "0xD73844", Offset = "0xD73844", VA = "0xD73844")]
			public static int GetIntensity(IReadOnlyCollection<PercentThresholdIntensity> thresholdIntensities, float value)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int intensityPerClearedSector;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PercentThresholdIntensity[] intensityByPlayerHealthLeft;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SectorTagValueModifier[] intensityByTags;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SectorTagCollection objTags;

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xCF5478", Offset = "0xCF5478", VA = "0xCF5478")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xCF553C", Offset = "0xCF553C", VA = "0xCF553C", Slot = "4")]
		public override void AddModuleTags(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xCF5A54", Offset = "0xCF5A54", VA = "0xCF5A54")]
		public RunSectorTagModuleIntensity()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class RunSectorTagModulePalette : RunSectorTagModule
	{
		[Token(Token = "0x200040B")]
		public class SectorPaletteSelection : SectorAssetSelection<SectorPalette>
		{
			[Token(Token = "0x600196D")]
			[Address(RVA = "0xD73B18", Offset = "0xD73B18", VA = "0xD73B18")]
			public SectorPaletteSelection(SectorTagsInput tags, SectorTagCollection objTags, List<SectorAsset<SectorPalette>> validObjects, int maxSelectionPoints, WrappedRandom random)
			{
			}
		}

		[Token(Token = "0x40016C3")]
		public const string PALETTE_TAG_PREFIX = "palette";

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SectorTagCollection objTags;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SectorAsset<SectorPalette>> palettes;

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xCF5AC4", Offset = "0xCF5AC4", VA = "0xCF5AC4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xCF5B74", Offset = "0xCF5B74", VA = "0xCF5B74", Slot = "4")]
		public override void AddModuleTags(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xCF65D0", Offset = "0xCF65D0", VA = "0xCF65D0")]
		public RunSectorTagModulePalette()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class RunSectorTagModuleRandom : RunSectorTagModule
	{
		[Token(Token = "0x600196E")]
		[Address(RVA = "0xCF65D8", Offset = "0xCF65D8", VA = "0xCF65D8", Slot = "4")]
		public override void AddModuleTags(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xCF6830", Offset = "0xCF6830", VA = "0xCF6830")]
		public RunSectorTagModuleRandom()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class RunSectorTagModuleTutorial : RunSectorTagModule
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SectorTagCollection objTags;

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xCF6838", Offset = "0xCF6838", VA = "0xCF6838")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xCF689C", Offset = "0xCF689C", VA = "0xCF689C", Slot = "4")]
		public override void AddModuleTags(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xCF6CC0", Offset = "0xCF6CC0", VA = "0xCF6CC0")]
		public RunSectorTagModuleTutorial()
		{
		}
	}
	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AA550", Offset = "0x8AA550")]
	public class SectorPalette : ScriptableObject, ISectorAsset
	{
		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFC88", Offset = "0x8BFC88")]
		private SectorTag[] paletteTags;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SectorTagValue selectionWeight;

		[Token(Token = "0x170004B5")]
		public IReadOnlyList<SectorTag> PaletteTags
		{
			[Token(Token = "0x6001973")]
			[Address(RVA = "0xD96E4C", Offset = "0xD96E4C", VA = "0xD96E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B6")]
		private string Game.Sector.ISectorAsset.Name
		{
			[Token(Token = "0x6001974")]
			[Address(RVA = "0xD96E54", Offset = "0xD96E54", VA = "0xD96E54", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xD96E5C", Offset = "0xD96E5C", VA = "0xD96E5C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xD96E68", Offset = "0xD96E68", VA = "0xD96E68", Slot = "5")]
		public int GetSelectionWeight(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xD96E74", Offset = "0xD96E74", VA = "0xD96E74", Slot = "6")]
		public int GetSelectionWeight(SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xD96E80", Offset = "0xD96E80", VA = "0xD96E80", Slot = "7")]
		public int GetSelectionPoints(ISectorTagCollectionReadOnly tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xD96E88", Offset = "0xD96E88", VA = "0xD96E88", Slot = "8")]
		public int GetSelectionPoints(SectorTagsInput tags, SectorTagCollection workTagCollection)
		{
			return default(int);
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xD96E90", Offset = "0xD96E90", VA = "0xD96E90")]
		public SectorPalette()
		{
		}
	}
	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AA5BC", Offset = "0x8AA5BC")]
	public class SectorTutorialSegment : ScriptableObject
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFCE4", Offset = "0x8BFCE4")]
		[SerializeField]
		private int priority;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SectorTagAmount[] tutorialSegmentTags;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EventCondition[] tutorialEventConditions;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SectorTagCollectionHierarchy tutorialSegmentRules;

		[Token(Token = "0x170004B7")]
		public int Priority
		{
			[Token(Token = "0x600197B")]
			[Address(RVA = "0xE13218", Offset = "0xE13218", VA = "0xE13218")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004B8")]
		public IReadOnlyList<EventCondition> TutorialEventConditions
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0xE13220", Offset = "0xE13220", VA = "0xE13220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B9")]
		public SectorTagCollectionHierarchy TutorialSegmentRules
		{
			[Token(Token = "0x600197D")]
			[Address(RVA = "0xE13228", Offset = "0xE13228", VA = "0xE13228")]
			get
			{
				return default(SectorTagCollectionHierarchy);
			}
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xE13234", Offset = "0xE13234", VA = "0xE13234")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xE13244", Offset = "0xE13244", VA = "0xE13244", Slot = "4")]
		public virtual void OnTutorialSegmentSelected(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xE13264", Offset = "0xE13264", VA = "0xE13264")]
		public SectorTutorialSegment()
		{
		}
	}
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AA628", Offset = "0x8AA628")]
	public class SectorTutorialSegmentReplaceNodeInfo : SectorTutorialSegment
	{
		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFD60", Offset = "0x8BFD60")]
		[SerializeField]
		private string nodeInfoGroup;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string nodeInfoReplaceName;

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xE1326C", Offset = "0xE1326C", VA = "0xE1326C", Slot = "4")]
		public override void OnTutorialSegmentSelected(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xE14248", Offset = "0xE14248", VA = "0xE14248")]
		public SectorTutorialSegmentReplaceNodeInfo()
		{
		}
	}
}
namespace Game.Puzzle
{
	[Token(Token = "0x2000411")]
	public class PuzzleCylinder : XRBaseInteractable
	{
		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Rigidbody body;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private XRBaseInteractor currentInteractor;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 selectPoint;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector3 startPoint;

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xCE7C08", Offset = "0xCE7C08", VA = "0xCE7C08", Slot = "47")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xCE7C54", Offset = "0xCE7C54", VA = "0xCE7C54", Slot = "48")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xCE7CD4", Offset = "0xCE7CD4", VA = "0xCE7CD4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xCE7EF8", Offset = "0xCE7EF8", VA = "0xCE7EF8", Slot = "67")]
		protected override void OnSelectEntered(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xCE7FEC", Offset = "0xCE7FEC", VA = "0xCE7FEC", Slot = "69")]
		protected override void OnSelectExited(SelectExitEventArgs args)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xCE80E8", Offset = "0xCE80E8", VA = "0xCE80E8")]
		public PuzzleCylinder()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class PuzzleSphere : MonoBehaviour, IGameStart
	{
		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PuzzleHexPiece[] pieces;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isStarted;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ActionBasedController rtController;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ActionBasedController ltController;

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xCE8E1C", Offset = "0xCE8E1C", VA = "0xCE8E1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xCE8EB0", Offset = "0xCE8EB0", VA = "0xCE8EB0")]
		private void Randomize()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xCE8FB0", Offset = "0xCE8FB0", VA = "0xCE8FB0", Slot = "4")]
		public void OnGameStart()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xCE9094", Offset = "0xCE9094", VA = "0xCE9094")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xCE8F28", Offset = "0xCE8F28", VA = "0xCE8F28")]
		public bool CheckIfSolved()
		{
			return default(bool);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xCE8568", Offset = "0xCE8568", VA = "0xCE8568")]
		public void OnPieceRotation()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xCE91A4", Offset = "0xCE91A4", VA = "0xCE91A4")]
		private void PuzzleCleared()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xCE9224", Offset = "0xCE9224", VA = "0xCE9224")]
		public PuzzleSphere()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class PuzzleWall : XRBaseInteractable
	{
		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Rigidbody body;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private XRBaseInteractor currentInteractor;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 selectPoint;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector3 startPoint;

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xCE922C", Offset = "0xCE922C", VA = "0xCE922C", Slot = "47")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xCE9278", Offset = "0xCE9278", VA = "0xCE9278", Slot = "48")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xCE92F8", Offset = "0xCE92F8", VA = "0xCE92F8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xCE9534", Offset = "0xCE9534", VA = "0xCE9534", Slot = "67")]
		protected override void OnSelectEntered(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xCE9628", Offset = "0xCE9628", VA = "0xCE9628", Slot = "69")]
		protected override void OnSelectExited(SelectExitEventArgs args)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xCE9724", Offset = "0xCE9724", VA = "0xCE9724")]
		public PuzzleWall()
		{
		}
	}
}
namespace Game.Pickups
{
	[Token(Token = "0x2000414")]
	public enum PickupCollectAction
	{
		[Token(Token = "0x40016DC")]
		Collect = 0,
		[Token(Token = "0x40016DD")]
		MoveClose = 10,
		[Token(Token = "0x40016DE")]
		None = 100
	}
	[Token(Token = "0x2000415")]
	public class Pickup : MonoBehaviour
	{
		[Token(Token = "0x40016DF")]
		private const float PICKUP_SFX_MIN_INTERVAL = 0.2f;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PickupBehaviour pickupBehaviour;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFDFC", Offset = "0x8BFDFC")]
		[SerializeField]
		private Vector2 spawnVelocityRange;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 spawnAngularVelocityRange;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float spawnInheritedVelocityFactor;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFE68", Offset = "0x8BFE68")]
		private float collectSpeedAverage;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float collectTimeVariancePercent;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector2 collectTimeMinMax;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve collectTimeCurveTargetTransform;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve collectTimeCurveTargetPoint;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationCurve collectMoveCurveForward;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationCurve collectMoveCurveVertical;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AnimationCurve collectMoveCurveHorizontal;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool pickUpOnTriggerEnter;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFF34", Offset = "0x8BFF34")]
		[SerializeField]
		private UnityEvent onSpawn;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UnityEvent onCollectStart;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private UnityEvent onCollectStop;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private UnityEvent onCollectPickUp;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFFB0", Offset = "0x8BFFB0")]
		[SerializeField]
		private bool forcePlayPickupSfx;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFFFC", Offset = "0x8BFFFC")]
		private PickupCollectAction <DefaultAutoCollectAction>k__BackingField;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody body;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool pickedUp;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool collecting;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float collectTimeProgress;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float collectInvTime;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private AnimationCurve collectTimeCurve;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 collectStart;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SpaceEntitySteering.SteerPosition collectTarget;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float collectDistance;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 collectVerticalDirection;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 collectHorizontalDirection;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float PickupSfxLastPlayTime;

		[Token(Token = "0x170004BA")]
		public int Value
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x2494DE8", Offset = "0x2494DE8", VA = "0x2494DE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004BB")]
		public int SelectionWeight
		{
			[Token(Token = "0x6001998")]
			[Address(RVA = "0x2494E80", Offset = "0x2494E80", VA = "0x2494E80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004BC")]
		public PickupBehaviour PickupBehaviour
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0x2494F0C", Offset = "0x2494F0C", VA = "0x2494F0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BD")]
		public bool Collecting
		{
			[Token(Token = "0x600199A")]
			[Address(RVA = "0x2494F14", Offset = "0x2494F14", VA = "0x2494F14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BE")]
		public PickupCollectAction DefaultAutoCollectAction
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0x2494F1C", Offset = "0x2494F1C", VA = "0x2494F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D25FC", Offset = "0x8D25FC")]
			get
			{
				return default(PickupCollectAction);
			}
			[Token(Token = "0x600199C")]
			[Address(RVA = "0x2494F24", Offset = "0x2494F24", VA = "0x2494F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D260C", Offset = "0x8D260C")]
			set
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public static event Action<Pickup> OnPickupSpawned
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0x2494F2C", Offset = "0x2494F2C", VA = "0x2494F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D261C", Offset = "0x8D261C")]
			add
			{
			}
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x2495020", Offset = "0x2495020", VA = "0x2495020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D262C", Offset = "0x8D262C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public static event Action<Pickup> OnPickupCollectStart
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x2495114", Offset = "0x2495114", VA = "0x2495114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D263C", Offset = "0x8D263C")]
			add
			{
			}
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x249520C", Offset = "0x249520C", VA = "0x249520C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D264C", Offset = "0x8D264C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public static event Action<Pickup> OnPickupCollectStop
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x2495304", Offset = "0x2495304", VA = "0x2495304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D265C", Offset = "0x8D265C")]
			add
			{
			}
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x24953FC", Offset = "0x24953FC", VA = "0x24953FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D266C", Offset = "0x8D266C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public static event Action<Pickup> OnPickupCollectPickUp
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x24954F4", Offset = "0x24954F4", VA = "0x24954F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D267C", Offset = "0x8D267C")]
			add
			{
			}
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x24955EC", Offset = "0x24955EC", VA = "0x24955EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D268C", Offset = "0x8D268C")]
			remove
			{
			}
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x24956E4", Offset = "0x24956E4", VA = "0x24956E4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x24957C0", Offset = "0x24957C0", VA = "0x24957C0")]
		protected void Update()
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x2495D58", Offset = "0x2495D58", VA = "0x2495D58")]
		protected void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x2495EF0", Offset = "0x2495EF0", VA = "0x2495EF0")]
		public void Spawn(Vector3 position, bool spawnWithVelocity = true, [System.Runtime.InteropServices.Optional] Vector3 inheritedVelocity)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x2496168", Offset = "0x2496168", VA = "0x2496168")]
		public void StartCollectNearestPlayerShip()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x2496170", Offset = "0x2496170", VA = "0x2496170")]
		public void StartCollectNearestPlayerShip(PickupCollectAction collectAction)
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x2495E28", Offset = "0x2495E28", VA = "0x2495E28")]
		public void StartCollect(PickupCollector collector, PickupCollectAction collectAction = PickupCollectAction.Collect)
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x2496588", Offset = "0x2496588", VA = "0x2496588")]
		public void StartCollect(SpaceEntitySteering.SteerPosition target, PickupCollectAction collectAction = PickupCollectAction.Collect)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x24959FC", Offset = "0x24959FC", VA = "0x24959FC")]
		public void StopCollecting()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x2495AE0", Offset = "0x2495AE0", VA = "0x2495AE0")]
		public void PickUp(Transform collector)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x2496970", Offset = "0x2496970", VA = "0x2496970")]
		public Pickup()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class PickupAuto : MonoBehaviour
	{
		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsSetup;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float AutoPickupRange;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool AutoPickUpEnabled;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool startedPickup;

		[Token(Token = "0x170004BF")]
		private static float AutoPickupRangeSqr
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0x2499770", Offset = "0x2499770", VA = "0x2499770")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004C0")]
		private static bool IsOutOfCombat
		{
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0x24997D8", Offset = "0x24997D8", VA = "0x24997D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x2499938", Offset = "0x2499938", VA = "0x2499938")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x2499ABC", Offset = "0x2499ABC", VA = "0x2499ABC")]
		protected void Update()
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x2499D3C", Offset = "0x2499D3C", VA = "0x2499D3C")]
		private static void OnSectorClearedChange(bool _)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x2499F58", Offset = "0x2499F58", VA = "0x2499F58")]
		public PickupAuto()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public abstract class PickupBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C004C", Offset = "0x8C004C")]
		private int selectionWeight;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0098", Offset = "0x8C0098")]
		[SerializeField]
		private bool collectEffectOnlyOnPlayer;

		[Token(Token = "0x170004C1")]
		public virtual int Value
		{
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x2499F64", Offset = "0x2499F64", VA = "0x2499F64", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004C2")]
		public int SelectionWeight
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x2499F6C", Offset = "0x2499F6C", VA = "0x2499F6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019BA")]
		public abstract void PickedUp(Transform collector);

		[Token(Token = "0x60019BB")]
		public abstract void PlayPickupSfx();

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x2499F74", Offset = "0x2499F74", VA = "0x2499F74")]
		protected bool CanUseCollectEffect(Transform collector)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x2496B1C", Offset = "0x2496B1C", VA = "0x2496B1C")]
		protected bool CanUseCollectEffect(SpaceShip collectorSpaceShip)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x249718C", Offset = "0x249718C", VA = "0x249718C")]
		public static Vector3 GetDefaultPickupSfxPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x2497648", Offset = "0x2497648", VA = "0x2497648")]
		protected PickupBehaviour()
		{
		}
	}
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AA694", Offset = "0x8AA694")]
	public class PickupCollection : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000419")]
		public class PickupSpawn
		{
			[Token(Token = "0x400170D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PickupType pickupType;

			[Token(Token = "0x400170E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public PickupCollectAction defaultCollectAction;

			[Token(Token = "0x400170F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float activateChance;

			[Token(Token = "0x4001710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector2Int amountRange;

			[Token(Token = "0x4001711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve amountDistribution;

			[Token(Token = "0x4001712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C012C", Offset = "0x8C012C")]
			public SectorTag abilityTag;

			[Token(Token = "0x4001713")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C0164", Offset = "0x8C0164")]
			public List<SectorTag> itemYieldStats;

			[Token(Token = "0x60019CA")]
			[Address(RVA = "0xD6D628", Offset = "0xD6D628", VA = "0xD6D628")]
			public PickupSpawn()
			{
			}
		}

		[Token(Token = "0x4001709")]
		private const float BASE_SPAWN_AMOUNT_MULTIPLIER = 1f;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C00E4", Offset = "0x8C00E4")]
		public List<SectorTag> collectionYieldStats;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PickupSpawn[] pickupSpawns;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SectorTag> YieldStats;

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x249A234", Offset = "0x249A234", VA = "0x249A234")]
		public static Vector3 GetDefaultSpawnPosition(Transform source)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x249A24C", Offset = "0x249A24C", VA = "0x249A24C")]
		public static bool GetDefaultAutoCollect(bool spawnAndCollect, out PickupCollector collector, [System.Runtime.InteropServices.Optional] IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x249A61C", Offset = "0x249A61C", VA = "0x249A61C")]
		public void CreatePickups(Transform source, [System.Runtime.InteropServices.Optional] IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags, [System.Runtime.InteropServices.Optional] List<Pickup> createdPickups)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x249A9CC", Offset = "0x249A9CC", VA = "0x249A9CC")]
		public void SpawnPickups(Transform source, [System.Runtime.InteropServices.Optional] IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags, [System.Runtime.InteropServices.Optional] Vector3 inheritedVelocity, [System.Runtime.InteropServices.Optional] List<Pickup> spawnedPickups)
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x249A678", Offset = "0x249A678", VA = "0x249A678")]
		private void SpawnPickups(Transform source, bool spawnAndCollect, [System.Runtime.InteropServices.Optional] IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags, [System.Runtime.InteropServices.Optional] Vector3 inheritedVelocity, [System.Runtime.InteropServices.Optional] List<Pickup> spawnedPickups)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x249ADAC", Offset = "0x249ADAC", VA = "0x249ADAC")]
		public static int CreatePickupAmount(Transform source, PickupType pickupType, int amount, [System.Runtime.InteropServices.Optional] SectorTag abilityTag, [System.Runtime.InteropServices.Optional] List<Pickup> spawnedPickups)
		{
			return default(int);
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x249AEBC", Offset = "0x249AEBC", VA = "0x249AEBC")]
		public static int SpawnPickupAmount(Transform source, PickupType pickupType, int amount, Vector3 position, Vector3 inheritedVelocity, [System.Runtime.InteropServices.Optional] PickupCollector autoCollector, PickupCollectAction autoCollectAction = PickupCollectAction.Collect, [System.Runtime.InteropServices.Optional] SectorTag abilityTag, [System.Runtime.InteropServices.Optional] List<Pickup> spawnedPickups)
		{
			return default(int);
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x249A9E0", Offset = "0x249A9E0", VA = "0x249A9E0")]
		private static int SpawnPickupAmount(Transform source, PickupType pickupType, int amount, Vector3 position, Vector3 inheritedVelocity, bool spawn, PickupCollector autoCollector, PickupCollectAction autoCollectAction, SectorTag abilityTag, List<Pickup> spawnedPickups)
		{
			return default(int);
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x249B390", Offset = "0x249B390", VA = "0x249B390")]
		public PickupCollection()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class PickupCollector : MonoBehaviour
	{
		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA700", Offset = "0x8AA700")]
		private sealed class <AutoCollectDelayRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400171A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400171B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400171C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ICollection<Pickup> pickups;

			[Token(Token = "0x400171D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onPickupsAutoCollect;

			[Token(Token = "0x170004C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019D6")]
				[Address(RVA = "0xD6DABC", Offset = "0xD6DABC", VA = "0xD6DABC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019D8")]
				[Address(RVA = "0xD6DB04", Offset = "0xD6DB04", VA = "0xD6DB04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019D3")]
			[Address(RVA = "0xD6D6F0", Offset = "0xD6D6F0", VA = "0xD6D6F0")]
			[DebuggerHidden]
			public <AutoCollectDelayRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60019D4")]
			[Address(RVA = "0xD6D71C", Offset = "0xD6D71C", VA = "0xD6D71C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019D5")]
			[Address(RVA = "0xD6D720", Offset = "0xD6D720", VA = "0xD6D720", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019D7")]
			[Address(RVA = "0xD6DAC4", Offset = "0xD6DAC4", VA = "0xD6DAC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C019C", Offset = "0x8C019C")]
		[SerializeField]
		private Vector3 moveClosePoint;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider collectTrigger;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float range;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0208", Offset = "0x8C0208")]
		[SerializeField]
		private float radialSpawnAutoPickupDelay;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 radialSpawnDistanceRange;

		[Token(Token = "0x170004C3")]
		public Vector3 MoveClosePointWorld
		{
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0x2496550", Offset = "0x2496550", VA = "0x2496550")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x249B4A0", Offset = "0x249B4A0", VA = "0x249B4A0")]
		protected void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x249B4DC", Offset = "0x249B4DC", VA = "0x249B4DC")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x249B570", Offset = "0x249B570", VA = "0x249B570")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x249B604", Offset = "0x249B604", VA = "0x249B604")]
		public void RadialSpawnPickups(PickupCollection pickups, [System.Runtime.InteropServices.Optional] IDamagable cause, [System.Runtime.InteropServices.Optional] List<SectorTag> buffSourceTags, [System.Runtime.InteropServices.Optional] Action onPickupsSpawned, [System.Runtime.InteropServices.Optional] Action onPickupsAutoCollect)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x249B6D8", Offset = "0x249B6D8", VA = "0x249B6D8")]
		public void RadialSpawnPickups(ICollection<Pickup> pickups, [System.Runtime.InteropServices.Optional] Action onPickupsSpawned, [System.Runtime.InteropServices.Optional] Action onPickupsAutoCollect)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x249BA7C", Offset = "0x249BA7C", VA = "0x249BA7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D269C", Offset = "0x8D269C")]
		private IEnumerator AutoCollectDelayRoutine(ICollection<Pickup> pickups, float delay, Action onPickupsAutoCollect)
		{
			return null;
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x249BB20", Offset = "0x249BB20", VA = "0x249BB20")]
		public PickupCollector()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class PickupFader : GameMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200041D")]
		private struct MeshItems
		{
			[Token(Token = "0x400172B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MeshRenderer meshRenderer;

			[Token(Token = "0x400172C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool shouldLerpMaterial;

			[Token(Token = "0x400172D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool invertLerp;

			[Token(Token = "0x400172E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string materialProperty;
		}

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve blinkCurve;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float blinkInvisibleTime;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0284", Offset = "0x8C0284")]
		[SerializeField]
		private UnityEvent onBlinkVisible;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent onBlinkInvisible;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MeshItems[] meshItems;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationCurve fadeOutCurve;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool useSmoothFades;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Pickup pickup;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float pickupLastsTime;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float pickupTimer;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float timeSinceLastVisibleChange;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool isVisible;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool isFading;

		[Token(Token = "0x170004C6")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x249BDE4", Offset = "0x249BDE4", VA = "0x249BDE4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x249BDEC", Offset = "0x249BDEC", VA = "0x249BDEC", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x249BF4C", Offset = "0x249BF4C", VA = "0x249BF4C", Slot = "32")]
		protected override void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x249C19C", Offset = "0x249C19C", VA = "0x249C19C")]
		private void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x249C1DC", Offset = "0x249C1DC", VA = "0x249C1DC")]
		public void SetMeshRendererVisible(bool visible)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x249C260", Offset = "0x249C260", VA = "0x249C260")]
		public PickupFader()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class PickupSpawnerBase : MonoBehaviour
	{
		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PickupCollection pickupCollection;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool pickupInheritVelocity;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool pickupAutoCollect;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool shouldSpawnPickup;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody body;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Pickup> SpawnedPickups;

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x249CA78", Offset = "0x249CA78", VA = "0x249CA78", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x249CAD4", Offset = "0x249CAD4", VA = "0x249CAD4")]
		public void SpawnPickups()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x249CAE0", Offset = "0x249CAE0", VA = "0x249CAE0")]
		public void SpawnPickups(IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x249CDA4", Offset = "0x249CDA4", VA = "0x249CDA4", Slot = "5")]
		protected virtual void SpawnPickups(Transform source, IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags, Vector3 inheritedVelocity, bool shouldSpawnPickups, List<Pickup> spawnedPickups)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x249CEB0", Offset = "0x249CEB0", VA = "0x249CEB0", Slot = "6")]
		protected virtual bool ShouldSpawnPickups()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x249CEB8", Offset = "0x249CEB8", VA = "0x249CEB8")]
		public PickupSpawnerBase()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class PickupAbility : PickupBehaviour
	{
		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0340", Offset = "0x8C0340")]
		private int baseAbilityLevel;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C038C", Offset = "0x8C038C")]
		private SectorTag <AbilityTag>k__BackingField;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int abilityLevel;

		[Token(Token = "0x170004C7")]
		public SectorTag AbilityTag
		{
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x24969D4", Offset = "0x24969D4", VA = "0x24969D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D274C", Offset = "0x8D274C")]
			get
			{
				return default(SectorTag);
			}
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x24969E0", Offset = "0x24969E0", VA = "0x24969E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D275C", Offset = "0x8D275C")]
			set
			{
			}
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x24969F0", Offset = "0x24969F0", VA = "0x24969F0", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x2496C3C", Offset = "0x2496C3C", VA = "0x2496C3C", Slot = "8")]
		protected virtual void Setup(SpaceShip playerShip)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x2496C7C", Offset = "0x2496C7C", VA = "0x2496C7C", Slot = "5")]
		public override void PickedUp(Transform collector)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x24970D0", Offset = "0x24970D0", VA = "0x24970D0", Slot = "6")]
		public override void PlayPickupSfx()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x2497178", Offset = "0x2497178", VA = "0x2497178")]
		public static void PlayGlobalPickupSfx()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x2497340", Offset = "0x2497340", VA = "0x2497340")]
		public static void PlayGlobalPickupSfx(Vector3 position)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x2496C6C", Offset = "0x2496C6C", VA = "0x2496C6C")]
		protected int GetAbilityLevel(SpaceShip spaceShip)
		{
			return default(int);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x24973F0", Offset = "0x24973F0", VA = "0x24973F0")]
		public static int GetAbilityLevel(SpaceShip spaceShip, int baseLevel)
		{
			return default(int);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x2496D7C", Offset = "0x2496D7C", VA = "0x2496D7C")]
		public static void EquipAbilityRandom(SpaceShip collectorSpaceShip, int abilityLevel)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x2496F18", Offset = "0x2496F18", VA = "0x2496F18")]
		public static void EquipAbilityByTag(SpaceShip collectorSpaceShip, SectorTag abilityTag, int abilityLevel)
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x24975C0", Offset = "0x24975C0", VA = "0x24975C0")]
		public PickupAbility()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public struct PickupAbilityChestAbility
	{
		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ShipAbilityPassive ability;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int level;

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x2498708", Offset = "0x2498708", VA = "0x2498708")]
		public PickupAbilityChestAbility(ShipAbilityPassive ability, int level)
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class PickupAbilityChest : PickupAbility
	{
		[Token(Token = "0x400173A")]
		public const string TAG_CHEST_PREFERRED_ABILITY_PREFIX = "chest_preferred_ability_";

		[Token(Token = "0x400173B")]
		public const string TAG_CHEST_PREFERRED_ABILITY_SEPARATOR = ":";

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C039C", Offset = "0x8C039C")]
		[SerializeField]
		private SectorTag equipMenuTag;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C03E8", Offset = "0x8C03E8")]
		[SerializeField]
		private SectorTag equipChoiceMenuTag;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int equipChoiceAmount;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0444", Offset = "0x8C0444")]
		[SerializeField]
		private UnityEvent pickupCollectEvent;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0490", Offset = "0x8C0490")]
		private UnityEvent level1Setup;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UnityEvent level2Setup;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UnityEvent level3Setup;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool hasOpenedEquipMenu;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<PickupAbilityChestAbility> passiveAbilities;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int[] passiveAbilityLevels;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder chestPreferredAbilityPrefixBuilder;

		[Token(Token = "0x170004C8")]
		protected int AbilityAmount
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x2497658", Offset = "0x2497658", VA = "0x2497658")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004C9")]
		protected virtual int HighestAbilityLevel
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x2497668", Offset = "0x2497668", VA = "0x2497668", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x24976C8", Offset = "0x24976C8", VA = "0x24976C8")]
		private static string CreatePreferredAbilityPrefix(int abilityIndex)
		{
			return null;
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x24977D4", Offset = "0x24977D4", VA = "0x24977D4", Slot = "8")]
		protected override void Setup(SpaceShip playerShip)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x2497928", Offset = "0x2497928", VA = "0x2497928")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x2497A60", Offset = "0x2497A60", VA = "0x2497A60", Slot = "5")]
		public override void PickedUp(Transform collector)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x2497FD0", Offset = "0x2497FD0", VA = "0x2497FD0")]
		public void OpenEquipMenu()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x2497A74", Offset = "0x2497A74", VA = "0x2497A74")]
		public void OpenEquipMenu(bool instantPickupOnEquip)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x2497FD8", Offset = "0x2497FD8", VA = "0x2497FD8")]
		private bool TrySelectAndAddPassiveAbility(int abilityIndex, ref bool hasTriedTagAbility)
		{
			return default(bool);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x2498634", Offset = "0x2498634", VA = "0x2498634")]
		private int SelectPassiveAbilityLevel()
		{
			return default(int);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x2498734", Offset = "0x2498734", VA = "0x2498734")]
		private void PickupCollectEvent()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x24987F8", Offset = "0x24987F8", VA = "0x24987F8")]
		private void PickupCollectChoiceEvent(PickupAbilityChestAbility ability)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x2498904", Offset = "0x2498904", VA = "0x2498904")]
		public PickupAbilityChest()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class PickupAmmo : PickupBehaviour
	{
		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C04FC", Offset = "0x8C04FC")]
		private int ammoAmount;

		[Token(Token = "0x170004CA")]
		public override int Value
		{
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0x2498A04", Offset = "0x2498A04", VA = "0x2498A04", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x2498A0C", Offset = "0x2498A0C", VA = "0x2498A0C", Slot = "5")]
		public override void PickedUp(Transform collector)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x2499150", Offset = "0x2499150", VA = "0x2499150", Slot = "6")]
		public override void PlayPickupSfx()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x24991F8", Offset = "0x24991F8", VA = "0x24991F8")]
		public static void PlayGlobalPickupSfx()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x249920C", Offset = "0x249920C", VA = "0x249920C")]
		public static void PlayGlobalPickupSfx(Vector3 position)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x2498C2C", Offset = "0x2498C2C", VA = "0x2498C2C")]
		public static void RechargeAmmo(SpaceShip spaceShip, int ammoAmount, SectorTag buffSourceTag, bool playAudio = false)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x24993A4", Offset = "0x24993A4", VA = "0x24993A4")]
		public static int GetAmmoMultiplier(IReadOnlyList<SectorTag> sourceTags, SectorTag buffSourceTag)
		{
			return default(int);
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x2499500", Offset = "0x2499500", VA = "0x2499500")]
		public static int GetAmmoMultiplier(SectorTag sourceTag, SectorTag buffSourceTag)
		{
			return default(int);
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x24992BC", Offset = "0x24992BC", VA = "0x24992BC")]
		public static int GetAmmoMultiplier(IBuffable owner, IReadOnlyList<SectorTag> sourceTags, SectorTag buffSourceTag)
		{
			return default(int);
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x249966C", Offset = "0x249966C", VA = "0x249966C")]
		public static int GetAmmoMultiplier(IBuffable owner, SectorTag sourceTag, SectorTag buffSourceTag)
		{
			return default(int);
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x249975C", Offset = "0x249975C", VA = "0x249975C")]
		public PickupAmmo()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class PickupBuff : PickupBehaviour
	{
		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0548", Offset = "0x8C0548")]
		public BuffObject buff;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C0580", Offset = "0x8C0580")]
		public int buffSectorDuration;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C05B8", Offset = "0x8C05B8")]
		public int buffValue;

		[Token(Token = "0x170004CB")]
		public override int Value
		{
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0x249A044", Offset = "0x249A044", VA = "0x249A044", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x249A04C", Offset = "0x249A04C", VA = "0x249A04C", Slot = "5")]
		public override void PickedUp(Transform collector)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x249A178", Offset = "0x249A178", VA = "0x249A178", Slot = "6")]
		public override void PlayPickupSfx()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x249A220", Offset = "0x249A220", VA = "0x249A220")]
		public PickupBuff()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class PickupExperience : PickupBehaviour
	{
		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C05F0", Offset = "0x8C05F0")]
		private int experienceAmount;

		[Token(Token = "0x170004CC")]
		public override int Value
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x249BB68", Offset = "0x249BB68", VA = "0x249BB68", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x249BB70", Offset = "0x249BB70", VA = "0x249BB70", Slot = "5")]
		public override void PickedUp(Transform collector)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x249BC64", Offset = "0x249BC64", VA = "0x249BC64", Slot = "6")]
		public override void PlayPickupSfx()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x249BD0C", Offset = "0x249BD0C", VA = "0x249BD0C")]
		public static void PlayGlobalPickupSfx()
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x249BD20", Offset = "0x249BD20", VA = "0x249BD20")]
		public static void PlayGlobalPickupSfx(Vector3 position)
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x249BDD0", Offset = "0x249BDD0", VA = "0x249BDD0")]
		public PickupExperience()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class PickupHealth : PickupBehaviour
	{
		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C063C", Offset = "0x8C063C")]
		[SerializeField]
		private int healthAmount;

		[Token(Token = "0x170004CD")]
		public override int Value
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0x249C4E4", Offset = "0x249C4E4", VA = "0x249C4E4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x249C4EC", Offset = "0x249C4EC", VA = "0x249C4EC", Slot = "5")]
		public override void PickedUp(Transform collector)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x249C67C", Offset = "0x249C67C", VA = "0x249C67C", Slot = "6")]
		public override void PlayPickupSfx()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x249C724", Offset = "0x249C724", VA = "0x249C724")]
		public static void PlayGlobalPickupSfx()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x249C738", Offset = "0x249C738", VA = "0x249C738")]
		public static void PlayGlobalPickupSfx(Vector3 position)
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x249C7E8", Offset = "0x249C7E8", VA = "0x249C7E8")]
		public PickupHealth()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class PickupScrap : PickupBehaviour
	{
		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0688", Offset = "0x8C0688")]
		private int scrapAmount;

		[Token(Token = "0x170004CE")]
		public override int Value
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x249C7FC", Offset = "0x249C7FC", VA = "0x249C7FC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x249C804", Offset = "0x249C804", VA = "0x249C804", Slot = "5")]
		public override void PickedUp(Transform collector)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x249C8F8", Offset = "0x249C8F8", VA = "0x249C8F8", Slot = "6")]
		public override void PlayPickupSfx()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x249C9A0", Offset = "0x249C9A0", VA = "0x249C9A0")]
		public static void PlayGlobalPickupSfx()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x249C9B4", Offset = "0x249C9B4", VA = "0x249C9B4")]
		public static void PlayGlobalPickupSfx(Vector3 position)
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x249CA64", Offset = "0x249CA64", VA = "0x249CA64")]
		public PickupScrap()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class PickupStoryKey : PickupBehaviour
	{
		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C06D4", Offset = "0x8C06D4")]
		[SerializeField]
		private int storyKeyAmount;

		[Token(Token = "0x170004CF")]
		public override int Value
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x249CF58", Offset = "0x249CF58", VA = "0x249CF58", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x249CF60", Offset = "0x249CF60", VA = "0x249CF60", Slot = "5")]
		public override void PickedUp(Transform collector)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x249D054", Offset = "0x249D054", VA = "0x249D054", Slot = "6")]
		public override void PlayPickupSfx()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x249D0FC", Offset = "0x249D0FC", VA = "0x249D0FC")]
		public static void PlayGlobalPickupSfx()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x249D110", Offset = "0x249D110", VA = "0x249D110")]
		public static void PlayGlobalPickupSfx(Vector3 position)
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x249D1C0", Offset = "0x249D1C0", VA = "0x249D1C0")]
		public PickupStoryKey()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class SpaceObjectPickupSpawner : PickupSpawnerBase
	{
		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool spawnPickupsIfPlayerFriendly;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool spawnBonusAbilityPickup;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpaceObject spaceObject;

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x150534C", Offset = "0x150534C", VA = "0x150534C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x1505458", Offset = "0x1505458", VA = "0x1505458", Slot = "6")]
		protected override bool ShouldSpawnPickups()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x150558C", Offset = "0x150558C", VA = "0x150558C", Slot = "5")]
		protected override void SpawnPickups(Transform source, IDamagable cause, IReadOnlyList<SectorTag> buffSourceTags, Vector3 inheritedVelocity, bool shouldSpawnPickups, List<Pickup> spawnedPickups)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x15056B8", Offset = "0x15056B8", VA = "0x15056B8")]
		private static bool HasAbilityPickup(IEnumerable<Pickup> pickups)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x15059CC", Offset = "0x15059CC", VA = "0x15059CC")]
		public SpaceObjectPickupSpawner()
		{
		}
	}
}
namespace Game.Menu
{
	[Token(Token = "0x2000429")]
	public class LoadMenusOnSceneSetup : GameMonoBehaviour
	{
		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA710", Offset = "0x8AA710")]
		private sealed class <ShowMenusRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<YieldInstruction> loadYields;

			[Token(Token = "0x4001758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoadMenusOnSceneSetup <>4__this;

			[Token(Token = "0x4001759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<YieldInstruction>.Enumerator <>7__wrap1;

			[Token(Token = "0x170004D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A3A")]
				[Address(RVA = "0xEDA850", Offset = "0xEDA850", VA = "0xEDA850", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A3C")]
				[Address(RVA = "0xEDA898", Offset = "0xEDA898", VA = "0xEDA898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xEDA4E4", Offset = "0xEDA4E4", VA = "0xEDA4E4")]
			[DebuggerHidden]
			public <ShowMenusRoutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xEDA510", Offset = "0xEDA510", VA = "0xEDA510", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A38")]
			[Address(RVA = "0xEDA580", Offset = "0xEDA580", VA = "0xEDA580", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xEDA52C", Offset = "0xEDA52C", VA = "0xEDA52C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xEDA858", Offset = "0xEDA858", VA = "0xEDA858", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0720", Offset = "0x8C0720")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C0720", Offset = "0x8C0720")]
		private SectorTag[] menuTags;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0790", Offset = "0x8C0790")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C0790", Offset = "0x8C0790")]
		[SerializeField]
		private SectorTag[] showMenuTags;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hasLoaded;

		[Token(Token = "0x170004D0")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0xD5B9C4", Offset = "0xD5B9C4", VA = "0xD5B9C4", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xD5B9CC", Offset = "0xD5B9CC", VA = "0xD5B9CC", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xD5BA80", Offset = "0xD5BA80", VA = "0xD5BA80", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xD5BD40", Offset = "0xD5BD40", VA = "0xD5BD40")]
		private void OnLoadPrepare(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xD5BF04", Offset = "0xD5BF04", VA = "0xD5BF04", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xD5BD44", Offset = "0xD5BD44", VA = "0xD5BD44")]
		private YieldInstruction LoadMenus()
		{
			return null;
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xD5C038", Offset = "0xD5C038", VA = "0xD5C038")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D276C", Offset = "0x8D276C")]
		private IEnumerator ShowMenusRoutine(List<YieldInstruction> loadYields)
		{
			return null;
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xD5C0CC", Offset = "0xD5C0CC", VA = "0xD5C0CC")]
		public LoadMenusOnSceneSetup()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class MenuFade : MonoBehaviour
	{
		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA720", Offset = "0x8AA720")]
		private sealed class <FadeAlpha>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuFade <>4__this;

			[Token(Token = "0x4001764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <alphaFadeSpeed>5__2;

			[Token(Token = "0x4001765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <t>5__3;

			[Token(Token = "0x170004D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A46")]
				[Address(RVA = "0xEDB914", Offset = "0xEDB914", VA = "0xEDB914", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A48")]
				[Address(RVA = "0xEDB95C", Offset = "0xEDB95C", VA = "0xEDB95C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xEDB7B8", Offset = "0xEDB7B8", VA = "0xEDB7B8")]
			[DebuggerHidden]
			public <FadeAlpha>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xEDB7E4", Offset = "0xEDB7E4", VA = "0xEDB7E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xEDB7E8", Offset = "0xEDB7E8", VA = "0xEDB7E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xEDB91C", Offset = "0xEDB91C", VA = "0xEDB91C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 alphaRange;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float alphaFadeTime;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve alphaFadeCurve;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool resetOnEnable;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool resetOnDisable;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine fadeRoutine;

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xD63E38", Offset = "0xD63E38", VA = "0xD63E38")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xD63EC8", Offset = "0xD63EC8", VA = "0xD63EC8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xD63E4C", Offset = "0xD63E4C", VA = "0xD63E4C")]
		public void StopFade(bool resetAlpha)
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xD63ED0", Offset = "0xD63ED0", VA = "0xD63ED0")]
		public void StartFade()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xD63F18", Offset = "0xD63F18", VA = "0xD63F18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D281C", Offset = "0x8D281C")]
		private IEnumerator FadeAlpha()
		{
			return null;
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xD63F90", Offset = "0xD63F90", VA = "0xD63F90")]
		public MenuFade()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class MenuLoadingLogos : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200042E")]
		public struct LoadingLogo
		{
			[Token(Token = "0x400176B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject logo;
		}

		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA730", Offset = "0x8AA730")]
		private sealed class <LogoSequenceRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400176C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400176D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400176E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuLoadingLogos <>4__this;

			[Token(Token = "0x400176F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170004D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A54")]
				[Address(RVA = "0xEDBBC8", Offset = "0xEDBBC8", VA = "0xEDBBC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A56")]
				[Address(RVA = "0xEDBC10", Offset = "0xEDBC10", VA = "0xEDBC10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xEDB964", Offset = "0xEDB964", VA = "0xEDB964")]
			[DebuggerHidden]
			public <LogoSequenceRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xEDB990", Offset = "0xEDB990", VA = "0xEDB990", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xEDB994", Offset = "0xEDB994", VA = "0xEDB994", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xEDBBD0", Offset = "0xEDBBD0", VA = "0xEDBBD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float delayStart;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float delayEnd;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LoadingLogo[] logos;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine logoRoutine;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool showNextLogo;

		[Token(Token = "0x170004D5")]
		public bool IsShowingLogo
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xD63FF0", Offset = "0xD63FF0", VA = "0xD63FF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xD64000", Offset = "0xD64000", VA = "0xD64000")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xD640B8", Offset = "0xD640B8", VA = "0xD640B8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xD64170", Offset = "0xD64170", VA = "0xD64170")]
		public void ShowNextLogo()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xD64040", Offset = "0xD64040", VA = "0xD64040")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D28CC", Offset = "0x8D28CC")]
		private IEnumerator LogoSequenceRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xD64184", Offset = "0xD64184", VA = "0xD64184")]
		private bool SetLogoActive(int index, out LoadingLogo logo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xD64100", Offset = "0xD64100", VA = "0xD64100")]
		private void SetLogosInactive()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xD64288", Offset = "0xD64288", VA = "0xD64288")]
		public MenuLoadingLogos()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class MenuLoadingScreen : MonoBehaviour
	{
		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0890", Offset = "0x8C0890")]
		[SerializeField]
		private float progressSpeed;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C08DC", Offset = "0x8C08DC")]
		[SerializeField]
		private Image progressImage;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0928", Offset = "0x8C0928")]
		[SerializeField]
		private TMP_Text progressText;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string progressTextPrefix;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string progressTextSuffix;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float progress;

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xD64290", Offset = "0xD64290", VA = "0xD64290")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xD643D0", Offset = "0xD643D0", VA = "0xD643D0")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xD64298", Offset = "0xD64298", VA = "0xD64298")]
		private void SetProgress(float progress)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xD64484", Offset = "0xD64484", VA = "0xD64484")]
		public MenuLoadingScreen()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class MenuLoadingScreenTips : MonoBehaviour
	{
		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizationKey[] tipKeys;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float tipShowChance;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C09B4", Offset = "0x8C09B4")]
		[SerializeField]
		private TMP_Text tipText;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<LocalizationKey> shuffledTipKeys;

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xD64494", Offset = "0xD64494", VA = "0xD64494")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xD645C8", Offset = "0xD645C8", VA = "0xD645C8")]
		private bool ShouldShowTip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xD64728", Offset = "0xD64728", VA = "0xD64728")]
		public MenuLoadingScreenTips()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class MenuManager : MonoBehaviourSingleton<MenuManager>, IAsyncSystemSetup, IGameLoaderSubsystem
	{
		[Token(Token = "0x2000433")]
		private class LoadedMenu
		{
			[Token(Token = "0x2000434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA740", Offset = "0x8AA740")]
			private sealed class <WaitForNotLoading>d__15 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40017A4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40017A5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40017A6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public LoadedMenu <>4__this;

				[Token(Token = "0x170004E2")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6001AB2")]
					[Address(RVA = "0xEAE2C4", Offset = "0xEAE2C4", VA = "0xEAE2C4", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170004E3")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6001AB4")]
					[Address(RVA = "0xEAE30C", Offset = "0xEAE30C", VA = "0xEAE30C", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001AAF")]
				[Address(RVA = "0xEAE20C", Offset = "0xEAE20C", VA = "0xEAE20C")]
				[DebuggerHidden]
				public <WaitForNotLoading>d__15(int <>1__state)
				{
				}

				[Token(Token = "0x6001AB0")]
				[Address(RVA = "0xEAE238", Offset = "0xEAE238", VA = "0xEAE238", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6001AB1")]
				[Address(RVA = "0xEAE23C", Offset = "0xEAE23C", VA = "0xEAE23C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6001AB3")]
				[Address(RVA = "0xEAE2CC", Offset = "0xEAE2CC", VA = "0xEAE2CC", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x2000435")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA750", Offset = "0x8AA750")]
			private sealed class <WaitForHandle>d__16 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40017A7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40017A8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40017A9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public AsyncOperationHandle handle;

				[Token(Token = "0x170004E4")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6001AB8")]
					[Address(RVA = "0xEAE1BC", Offset = "0xEAE1BC", VA = "0xEAE1BC", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170004E5")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6001ABA")]
					[Address(RVA = "0xEAE204", Offset = "0xEAE204", VA = "0xEAE204", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001AB5")]
				[Address(RVA = "0xEAE118", Offset = "0xEAE118", VA = "0xEAE118")]
				[DebuggerHidden]
				public <WaitForHandle>d__16(int <>1__state)
				{
				}

				[Token(Token = "0x6001AB6")]
				[Address(RVA = "0xEAE144", Offset = "0xEAE144", VA = "0xEAE144", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6001AB7")]
				[Address(RVA = "0xEAE148", Offset = "0xEAE148", VA = "0xEAE148", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6001AB9")]
				[Address(RVA = "0xEAE1C4", Offset = "0xEAE1C4", VA = "0xEAE1C4", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x400179D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTag menuTag;

			[Token(Token = "0x400179E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<LoadedSubMenu> subMenus;

			[Token(Token = "0x400179F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0CDC", Offset = "0x8C0CDC")]
			private bool <Loading>k__BackingField;

			[Token(Token = "0x40017A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int loadCount;

			[Token(Token = "0x40017A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperationHandle loadedHandle;

			[Token(Token = "0x40017A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private AsyncOperationHandle loadHandle;

			[Token(Token = "0x40017A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private AsyncOperationHandle unloadHandle;

			[Token(Token = "0x170004E0")]
			public bool IsLoaded
			{
				[Token(Token = "0x6001AA5")]
				[Address(RVA = "0xEDD0B4", Offset = "0xEDD0B4", VA = "0xEDD0B4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004E1")]
			public bool Loading
			{
				[Token(Token = "0x6001AA6")]
				[Address(RVA = "0xEDD0C4", Offset = "0xEDD0C4", VA = "0xEDD0C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2A7C", Offset = "0x8D2A7C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001AA7")]
				[Address(RVA = "0xEDD0CC", Offset = "0xEDD0CC", VA = "0xEDD0CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2A8C", Offset = "0x8D2A8C")]
				private set
				{
				}
			}

			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0xEDD0D8", Offset = "0xEDD0D8", VA = "0xEDD0D8")]
			public LoadedMenu(SectorTag menuTag)
			{
			}

			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0xEDD194", Offset = "0xEDD194", VA = "0xEDD194")]
			public YieldInstruction Load(MonoBehaviour coroutineRunner)
			{
				return null;
			}

			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0xEDD4A8", Offset = "0xEDD4A8", VA = "0xEDD4A8")]
			public YieldInstruction Unload(MonoBehaviour coroutineRunner)
			{
				return null;
			}

			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0xEDD430", Offset = "0xEDD430", VA = "0xEDD430")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D2A9C", Offset = "0x8D2A9C")]
			private IEnumerator WaitForNotLoading()
			{
				return null;
			}

			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0xEDD394", Offset = "0xEDD394", VA = "0xEDD394")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D2AFC", Offset = "0x8D2AFC")]
			private IEnumerator WaitForHandle(AsyncOperationHandle handle)
			{
				return null;
			}

			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0xEDD6E8", Offset = "0xEDD6E8", VA = "0xEDD6E8")]
			private void OnLoadComplete(AsyncOperationHandle handle)
			{
			}

			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0xEDDB0C", Offset = "0xEDDB0C", VA = "0xEDDB0C")]
			private void OnUnloadComplete(AsyncOperationHandle handle)
			{
			}
		}

		[Token(Token = "0x2000436")]
		private class LoadedSubMenu
		{
			[Token(Token = "0x40017AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTag menuTag;

			[Token(Token = "0x40017AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuRoot menuRoot;

			[Token(Token = "0x40017AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MenuImportance menuImportance;

			[Token(Token = "0x40017AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool menuIsPrimary;

			[Token(Token = "0x40017AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
			public bool menuIsNavigation;

			[Token(Token = "0x40017AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
			public bool menuIsOverlay;

			[Token(Token = "0x40017B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
			public bool menuShowBackground;

			[Token(Token = "0x40017B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool menuShowBack;

			[Token(Token = "0x40017B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool menuHasCustomBack;

			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0xEDDAA4", Offset = "0xEDDAA4", VA = "0xEDDAA4")]
			public LoadedSubMenu(SectorTag menuTag)
			{
			}
		}

		[Token(Token = "0x2000437")]
		public delegate void BackStepAction();

		[Token(Token = "0x2000438")]
		public delegate void MenuVisibilityAction(SectorTag menuTag, bool visible);

		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA760", Offset = "0x8AA760")]
		private sealed class <PreLoadMenusRoutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuManager <>4__this;

			[Token(Token = "0x40017B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<YieldInstruction> <waitHandles>5__2;

			[Token(Token = "0x40017B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<YieldInstruction>.Enumerator <>7__wrap2;

			[Token(Token = "0x170004E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AC9")]
				[Address(RVA = "0xEDC5AC", Offset = "0xEDC5AC", VA = "0xEDC5AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ACB")]
				[Address(RVA = "0xEDC5F4", Offset = "0xEDC5F4", VA = "0xEDC5F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0xEDBF44", Offset = "0xEDBF44", VA = "0xEDBF44")]
			[DebuggerHidden]
			public <PreLoadMenusRoutine>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xEDBF70", Offset = "0xEDBF70", VA = "0xEDBF70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0xEDC0A8", Offset = "0xEDC0A8", VA = "0xEDC0A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0xEDC000", Offset = "0xEDC000", VA = "0xEDC000")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0xEDC054", Offset = "0xEDC054", VA = "0xEDC054")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0xEDC5B4", Offset = "0xEDC5B4", VA = "0xEDC5B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA770", Offset = "0x8AA770")]
		private sealed class <WaitForMenuLoadRoutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuManager <>4__this;

			[Token(Token = "0x40017BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<LoadedMenu>.Enumerator <>7__wrap1;

			[Token(Token = "0x40017BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private LoadedMenu <loadedMenu>5__3;

			[Token(Token = "0x40017BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<LoadedSubMenu>.Enumerator <>7__wrap3;

			[Token(Token = "0x40017BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private List<IAsyncMenuSetup>.Enumerator <>7__wrap4;

			[Token(Token = "0x170004E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AD4")]
				[Address(RVA = "0xEDD018", Offset = "0xEDD018", VA = "0xEDD018", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AD6")]
				[Address(RVA = "0xEDD060", Offset = "0xEDD060", VA = "0xEDD060", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0xEDC5FC", Offset = "0xEDC5FC", VA = "0xEDC5FC")]
			[DebuggerHidden]
			public <WaitForMenuLoadRoutine>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0xEDC628", Offset = "0xEDC628", VA = "0xEDC628", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0xEDC95C", Offset = "0xEDC95C", VA = "0xEDC95C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xEDC7B8", Offset = "0xEDC7B8", VA = "0xEDC7B8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0xEDC80C", Offset = "0xEDC80C", VA = "0xEDC80C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0xEDC908", Offset = "0xEDC908", VA = "0xEDC908")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0xEDC8B4", Offset = "0xEDC8B4", VA = "0xEDC8B4")]
			private void <>m__Finally4()
			{
			}

			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0xEDC860", Offset = "0xEDC860", VA = "0xEDC860")]
			private void <>m__Finally5()
			{
			}

			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0xEDD020", Offset = "0xEDD020", VA = "0xEDD020", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA780", Offset = "0x8AA780")]
		private sealed class <>c__DisplayClass76_0
		{
			[Token(Token = "0x40017BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MenuManager <>4__this;

			[Token(Token = "0x40017C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorTag menuTag;

			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0xEDBEE4", Offset = "0xEDBEE4", VA = "0xEDBEE4")]
			public <>c__DisplayClass76_0()
			{
			}

			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0xEDBEEC", Offset = "0xEDBEEC", VA = "0xEDBEEC")]
			internal void <ShowMenu>b__0()
			{
			}
		}

		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA790", Offset = "0x8AA790")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x40017C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MenuManager <>4__this;

			[Token(Token = "0x40017C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorTag menuTag;

			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0xEDBF14", Offset = "0xEDBF14", VA = "0xEDBF14")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0xEDBF1C", Offset = "0xEDBF1C", VA = "0xEDBF1C")]
			internal void <HideMenu>b__0()
			{
			}
		}

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA7A0", Offset = "0x8AA7A0")]
		private sealed class <>c__DisplayClass107_0
		{
			[Token(Token = "0x40017C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<BackStepAction> backActions;

			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0xEDBC18", Offset = "0xEDBC18", VA = "0xEDBC18")]
			public <>c__DisplayClass107_0()
			{
			}

			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0xEDBC20", Offset = "0xEDBC20", VA = "0xEDBC20")]
			internal void <FinishBackStepBlock>b__0()
			{
			}
		}

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0A00", Offset = "0x8C0A00")]
		[SerializeField]
		private Vector3 menuRootPlayerOffset;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool menuRootMinMaxHeightEnabled;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 menuRootMinMaxHeight;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool menuRootMinMaxDepthEnabled;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector2 menuRootMinMaxDepth;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool menuRootMinMaxSideEnabled;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 menuRootMinMaxSide;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool menuRootMaxAngleEnabled;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float menuRootMaxAngle;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool menuPlayerStaticForwardEnabled;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector3 menuPlayerStaticForward;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C0AEC", Offset = "0x8C0AEC")]
		private float menuRootSmoothSpeed;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0B2C", Offset = "0x8C0B2C")]
		private Advisor advisor;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C0B78", Offset = "0x8C0B78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0B78", Offset = "0x8C0B78")]
		private SectorTag backgroundMenuTag;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C0BE8", Offset = "0x8C0BE8")]
		[SerializeField]
		private SectorTag backMenuTag;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C0C34", Offset = "0x8C0C34")]
		[SerializeField]
		private SectorTag[] preLoadedEarliestMenuTags;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C0C80", Offset = "0x8C0C80")]
		private SectorTag[] preLoadedMenuTags;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool menuRootPositionOverride;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 menuRootPosition;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool menuRootRotationOverride;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion menuRootRotation;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<LoadedMenu> loadedMenus;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<LoadedMenu> unloadedMenus;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<LoadedSubMenu> shownMenus;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private LoadedSubMenu shownPrimaryMenu;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private LoadedSubMenu shownNavigationMenu;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Stack<BackStepAction> backSteps;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Stack<List<BackStepAction>> backStepBlocks;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool backStepExecuting;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int previousFrameShownMenuCount;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int previousFrameShownMenuNonOverlayCount;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool showBackgroundDirty;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		private bool showBackDirty;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<IAsyncMenuSetup> asyncMenuSetups;

		[Token(Token = "0x170004D8")]
		public Vector3 MenuRootPlayerOffset
		{
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xD647B4", Offset = "0xD647B4", VA = "0xD647B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170004D9")]
		public Vector3 MenuRootPosition
		{
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xD647C0", Offset = "0xD647C0", VA = "0xD647C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170004DA")]
		public Quaternion MenuRootRotation
		{
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0xD647CC", Offset = "0xD647CC", VA = "0xD647CC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170004DB")]
		public SectorTag ShownPrimaryMenuTag
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xD5583C", Offset = "0xD5583C", VA = "0xD5583C")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x170004DC")]
		public SectorTag ShownNavigationMenuTag
		{
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xD558C0", Offset = "0xD558C0", VA = "0xD558C0")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x170004DD")]
		public MenuImportance ShownPrimaryMenuImportance
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xD647D8", Offset = "0xD647D8", VA = "0xD647D8")]
			get
			{
				return default(MenuImportance);
			}
		}

		[Token(Token = "0x170004DE")]
		public MenuImportance ShownNavigationMenuImportance
		{
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xD647F0", Offset = "0xD647F0", VA = "0xD647F0")]
			get
			{
				return default(MenuImportance);
			}
		}

		[Token(Token = "0x170004DF")]
		public Advisor Advisor
		{
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0xD64808", Offset = "0xD64808", VA = "0xD64808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400006E")]
		public event MenuVisibilityAction OnMenuVisibilityChanged
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xD553BC", Offset = "0xD553BC", VA = "0xD553BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D297C", Offset = "0x8D297C")]
			add
			{
			}
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0xD5558C", Offset = "0xD5558C", VA = "0xD5558C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D298C", Offset = "0x8D298C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xD55A78", Offset = "0xD55A78", VA = "0xD55A78")]
		public int ShownNonOverlayMenuCount(MenuImportance importanceThreshold = MenuImportance.Default)
		{
			return default(int);
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xD55944", Offset = "0xD55944", VA = "0xD55944")]
		public int ShownOverlayMenuCount(MenuImportance importanceThreshold = MenuImportance.Default)
		{
			return default(int);
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xD55BAC", Offset = "0xD55BAC", VA = "0xD55BAC")]
		public int ShownMenuCount(MenuImportance importanceThreshold = MenuImportance.Default)
		{
			return default(int);
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xD64810", Offset = "0xD64810", VA = "0xD64810", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xD649EC", Offset = "0xD649EC", VA = "0xD649EC", Slot = "6")]
		private YieldInstruction Game.IAsyncSystemSetup.OnSetupSystemAsync()
		{
			return null;
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xD64BD4", Offset = "0xD64BD4", VA = "0xD64BD4", Slot = "12")]
		private YieldInstruction Game.Manager.IGameLoaderSubsystem.OnGameSetupAsync(SectorTagsInput tags)
		{
			return null;
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xD64B5C", Offset = "0xD64B5C", VA = "0xD64B5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D299C", Offset = "0x8D299C")]
		private IEnumerator PreLoadMenusRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xD64C00", Offset = "0xD64C00", VA = "0xD64C00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D29FC", Offset = "0x8D29FC")]
		private IEnumerator WaitForMenuLoadRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xD64C78", Offset = "0xD64C78", VA = "0xD64C78")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xD64E68", Offset = "0xD64E68", VA = "0xD64E68", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xD65124", Offset = "0xD65124", VA = "0xD65124")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xD657B4", Offset = "0xD657B4", VA = "0xD657B4")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xD657EC", Offset = "0xD657EC", VA = "0xD657EC")]
		private void OnBeginRender(ScriptableRenderContext context, Camera camera)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xD65D60", Offset = "0xD65D60", VA = "0xD65D60", Slot = "7")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xD65D64", Offset = "0xD65D64", VA = "0xD65D64", Slot = "8")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xD65D68", Offset = "0xD65D68", VA = "0xD65D68", Slot = "9")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadPrepare(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xD65D6C", Offset = "0xD65D6C", VA = "0xD65D6C", Slot = "10")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadWindDown(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xD65D70", Offset = "0xD65D70", VA = "0xD65D70", Slot = "11")]
		private void Game.Manager.IGameLoaderSubsystem.OnUnloadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xD65D74", Offset = "0xD65D74", VA = "0xD65D74", Slot = "13")]
		private void Game.Manager.IGameLoaderSubsystem.OnGameStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xD62588", Offset = "0xD62588", VA = "0xD62588")]
		public void ShowMenu(SectorTag menuTag, bool addBackStep = false)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xD62A18", Offset = "0xD62A18", VA = "0xD62A18")]
		public void HideMenu(SectorTag menuTag, bool addBackStep = false)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xD62D24", Offset = "0xD62D24", VA = "0xD62D24")]
		public void HidePrimaryMenu(bool addBackStep = false)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xD62EE0", Offset = "0xD62EE0", VA = "0xD62EE0")]
		public void HideNavigationMenu(bool addBackStep = false)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xD663BC", Offset = "0xD663BC", VA = "0xD663BC")]
		public void HidePrimaryAndNavigationMenus(bool addBackStep = false)
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xD63284", Offset = "0xD63284", VA = "0xD63284")]
		public void HideAllMenus(bool addBackStep = false)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xD56C24", Offset = "0xD56C24", VA = "0xD56C24")]
		public bool IsMenuShown(SectorTag menuTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xD661C4", Offset = "0xD661C4", VA = "0xD661C4")]
		private void UpdateBackgroundMenuShown(SectorTag updateMenuTag)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xD65970", Offset = "0xD65970", VA = "0xD65970")]
		private void UpdateBackgroundMenuShown()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xD66414", Offset = "0xD66414", VA = "0xD66414")]
		private bool IsTagStaticMenu(SectorTag menuTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xD5BF08", Offset = "0xD5BF08", VA = "0xD5BF08")]
		public YieldInstruction LoadMenu(SectorTag menuTag)
		{
			return null;
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xD5BC28", Offset = "0xD5BC28", VA = "0xD5BC28")]
		public YieldInstruction UnloadMenu(SectorTag menuTag)
		{
			return null;
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xD66880", Offset = "0xD66880", VA = "0xD66880")]
		public bool IsMenuLoaded(SectorTag menuTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xD664F0", Offset = "0xD664F0", VA = "0xD664F0")]
		private bool TryGetLoadedMenu(SectorTag menuTag, out LoadedMenu loadedMenu)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xD65D78", Offset = "0xD65D78", VA = "0xD65D78")]
		private bool TryGetLoadedSubMenu(SectorTag menuTag, out LoadedSubMenu loadedSubMenu)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xD666B8", Offset = "0xD666B8", VA = "0xD666B8")]
		private bool TryGetUnloadedMenu(SectorTag menuTag, out LoadedMenu loadedMenu)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xD6514C", Offset = "0xD6514C", VA = "0xD6514C")]
		private void UpdateMenuRootOrientation(float deltaTime)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xD66C08", Offset = "0xD66C08", VA = "0xD66C08")]
		private void OnPlayerMoved(Vector3 positionFrom, Vector3 positionTo, Quaternion rotationFrom, Quaternion rotationTo, Vector3 scaleFrom, Vector3 scaleTo)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xD64DE8", Offset = "0xD64DE8", VA = "0xD64DE8")]
		public void RecenterMenuRootOrientation()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xD66F14", Offset = "0xD66F14", VA = "0xD66F14")]
		public void SetOverrideMenuPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xD66F28", Offset = "0xD66F28", VA = "0xD66F28")]
		public void ClearOverrideMenuPosition()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xD66F30", Offset = "0xD66F30", VA = "0xD66F30")]
		public void SetOverrideMenuRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xD66F44", Offset = "0xD66F44", VA = "0xD66F44")]
		public void ClearOverrideMenuRotation()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xD66F4C", Offset = "0xD66F4C", VA = "0xD66F4C")]
		public void SetOverrideMenuOrientation(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xD66F6C", Offset = "0xD66F6C", VA = "0xD66F6C")]
		public void ClearOverrideMenuOrientation()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xD66EDC", Offset = "0xD66EDC", VA = "0xD66EDC")]
		public bool GetPreferredMenuRootOrientation(out Vector3 preferredPosition, out Quaternion preferredRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xD6693C", Offset = "0xD6693C", VA = "0xD6693C")]
		public bool GetPreferredMenuRootOrientation(out Vector3 preferredPosition, out Quaternion preferredRotation, out Vector3 originPosition, out Vector3 playerForwardDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xD66F78", Offset = "0xD66F78", VA = "0xD66F78")]
		public void AddBackStep(BackStepAction action)
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xD63768", Offset = "0xD63768", VA = "0xD63768")]
		public void RemoveBackStep(int count = 1)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xD63900", Offset = "0xD63900", VA = "0xD63900")]
		public void RemoveBackStepsUntil(int remaingingCount)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xD63B18", Offset = "0xD63B18", VA = "0xD63B18")]
		public void StartBackStepBlock()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xD63CE0", Offset = "0xD63CE0", VA = "0xD63CE0")]
		public void FinishBackStepBlock()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xD660F4", Offset = "0xD660F4", VA = "0xD660F4")]
		public bool HasBackStepBlock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xD6701C", Offset = "0xD6701C", VA = "0xD6701C")]
		public void AddBackStepToBlock(BackStepAction action)
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xD63DEC", Offset = "0xD63DEC", VA = "0xD63DEC")]
		public void AddBackStepToBlockOrSingle(BackStepAction action)
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xD63454", Offset = "0xD63454", VA = "0xD63454")]
		public void GoBack()
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xD6360C", Offset = "0xD6360C", VA = "0xD6360C")]
		public void ClearBackSteps()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xD66260", Offset = "0xD66260", VA = "0xD66260")]
		private void UpdateBackMenuShown(SectorTag updateMenuTag)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xD65B14", Offset = "0xD65B14", VA = "0xD65B14")]
		private void UpdateBackMenuShown()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xD670C4", Offset = "0xD670C4", VA = "0xD670C4")]
		public MenuManager()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xD67360", Offset = "0xD67360", VA = "0xD67360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2A5C", Offset = "0x8D2A5C")]
		private SpaceEntitySteering.PositionData <Awake>b__60_0()
		{
			return default(SpaceEntitySteering.PositionData);
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xD673D0", Offset = "0xD673D0", VA = "0xD673D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2A6C", Offset = "0x8D2A6C")]
		private SpaceEntitySteering.PositionData <Awake>b__60_1()
		{
			return default(SpaceEntitySteering.PositionData);
		}
	}
	[Token(Token = "0x200043E")]
	public class MenuNavigationButtons : MonoBehaviour
	{
		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiButton navigateButtonLeft;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UiButton navigateButtonRight;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool enablePlayerSelectorNavigation;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool trySimulateClick;

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xD67550", Offset = "0xD67550", VA = "0xD67550")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xD6768C", Offset = "0xD6768C", VA = "0xD6768C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xD677C8", Offset = "0xD677C8", VA = "0xD677C8")]
		private void OnPlayerSelectorNavigation(Vector2 direction)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xD677F0", Offset = "0xD677F0", VA = "0xD677F0")]
		private void TryTriggerButtonClick(UiButton button)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xD678D8", Offset = "0xD678D8", VA = "0xD678D8")]
		public MenuNavigationButtons()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class MenuPlayerShipDisplay : GameMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000440")]
		private class PlayerShip
		{
			[Token(Token = "0x40017CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTag shipTag;

			[Token(Token = "0x40017CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetReferenceGameObject shipPrefab;

			[NonSerialized]
			[Token(Token = "0x40017CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			public AddressableAssetDependency<GameObject> shipAsset;

			[NonSerialized]
			[Token(Token = "0x40017CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[HideInInspector]
			public GameObject shipObject;

			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xEDE190", Offset = "0xEDE190", VA = "0xEDE190")]
			public PlayerShip()
			{
			}
		}

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerShip[] playerShips;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AddressableAssetDependencies assetDependencies;

		[Token(Token = "0x170004EA")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0xD678E8", Offset = "0xD678E8", VA = "0xD678E8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xD678F0", Offset = "0xD678F0", VA = "0xD678F0", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xD67924", Offset = "0xD67924", VA = "0xD67924", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xD67A54", Offset = "0xD67A54", VA = "0xD67A54", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xD67BEC", Offset = "0xD67BEC", VA = "0xD67BEC")]
		private void SetupShownShip()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xD682D8", Offset = "0xD682D8", VA = "0xD682D8")]
		private void UpdateShownShip()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xD67D28", Offset = "0xD67D28", VA = "0xD67D28")]
		private void UpdateShownShip(bool playEffects)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xD682E0", Offset = "0xD682E0", VA = "0xD682E0")]
		public MenuPlayerShipDisplay()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class MenuPositionable : MonoBehaviour
	{
		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xD68350", Offset = "0xD68350", VA = "0xD68350")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xD68480", Offset = "0xD68480", VA = "0xD68480")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xD685B0", Offset = "0xD685B0", VA = "0xD685B0")]
		public MenuPositionable()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public enum MenuImportance
	{
		[Token(Token = "0x40017CF")]
		Default = 0,
		[Token(Token = "0x40017D0")]
		Critical = 10
	}
	[Token(Token = "0x2000443")]
	public interface IAsyncMenuSetup
	{
		[Token(Token = "0x6001AEE")]
		YieldInstruction OnMenuSetupAsync();
	}
	[Token(Token = "0x2000444")]
	public class MenuRoot : MonoBehaviour
	{
		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA7B0", Offset = "0x8AA7B0")]
		private sealed class <HideAfterDelay>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40017E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MenuRoot <>4__this;

			[Token(Token = "0x170004F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AFF")]
				[Address(RVA = "0xEDE2A8", Offset = "0xEDE2A8", VA = "0xEDE2A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B01")]
				[Address(RVA = "0xEDE2F0", Offset = "0xEDE2F0", VA = "0xEDE2F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0xEDE198", Offset = "0xEDE198", VA = "0xEDE198")]
			[DebuggerHidden]
			public <HideAfterDelay>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0xEDE1C4", Offset = "0xEDE1C4", VA = "0xEDE1C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0xEDE1C8", Offset = "0xEDE1C8", VA = "0xEDE1C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B00")]
			[Address(RVA = "0xEDE2B0", Offset = "0xEDE2B0", VA = "0xEDE2B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C0D5C", Offset = "0x8C0D5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0D5C", Offset = "0x8C0D5C")]
		private SectorTag menuTag;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0DCC", Offset = "0x8C0DCC")]
		private MenuImportance menuImportance;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool menuIsPrimary;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		private bool menuIsNavigation;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[SerializeField]
		private bool menuIsOverlay;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		[SerializeField]
		private bool menuShowBackground;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool menuShowBack;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool menuHasCustomBack;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0E78", Offset = "0x8C0E78")]
		private UnityEvent onShow;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onHide;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float hideDelay;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine hideRoutine;

		[Token(Token = "0x170004EB")]
		public SectorTag MenuTag
		{
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xD685B8", Offset = "0xD685B8", VA = "0xD685B8")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x170004EC")]
		public MenuImportance MenuImportance
		{
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xD685C4", Offset = "0xD685C4", VA = "0xD685C4")]
			get
			{
				return default(MenuImportance);
			}
		}

		[Token(Token = "0x170004ED")]
		public bool MenuIsPrimary
		{
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xD685CC", Offset = "0xD685CC", VA = "0xD685CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004EE")]
		public bool MenuIsNavigation
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xD685D4", Offset = "0xD685D4", VA = "0xD685D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004EF")]
		public bool MenuIsOverlay
		{
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xD685DC", Offset = "0xD685DC", VA = "0xD685DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F0")]
		public bool MenuShowBackground
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xD685E4", Offset = "0xD685E4", VA = "0xD685E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F1")]
		public bool MenuShowBack
		{
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xD685EC", Offset = "0xD685EC", VA = "0xD685EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F2")]
		public bool MenuHasCustomBack
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0xD685F4", Offset = "0xD685F4", VA = "0xD685F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xD66148", Offset = "0xD66148", VA = "0xD66148")]
		public void Show()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xD662FC", Offset = "0xD662FC", VA = "0xD662FC")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xD685FC", Offset = "0xD685FC", VA = "0xD685FC")]
		private void StopDelayedHide()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xD68644", Offset = "0xD68644", VA = "0xD68644")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D2C9C", Offset = "0x8D2C9C")]
		private IEnumerator HideAfterDelay(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xD686CC", Offset = "0xD686CC", VA = "0xD686CC")]
		public MenuRoot()
		{
		}
	}
	[Token(Token = "0x2000446")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8AA7C0", Offset = "0x8AA7C0")]
	public class MenuSetupCurvedUI : MonoBehaviour
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xD68B80", Offset = "0xD68B80", VA = "0xD68B80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xD68CB8", Offset = "0xD68CB8", VA = "0xD68CB8")]
		public MenuSetupCurvedUI()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public static class SectorTagsMenu
	{
		[Token(Token = "0x40017E4")]
		public const string TAG_TYPE = "MenuTags";

		[Token(Token = "0x40017E5")]
		private const string TAGS_ASSET_PATH = "Assets/Resources/MenuTags.asset";

		[Token(Token = "0x40017E6")]
		private const string TAGS_RESOURCES_PATH = "MenuTags";

		[Token(Token = "0x40017E7")]
		public const string TAG_EMPTY = "";

		[Token(Token = "0x40017E8")]
		public const string TAG_BACKGROUND = "MenuBackground";

		[Token(Token = "0x40017E9")]
		public const string TAG_BACK = "MenuBack";

		[Token(Token = "0x40017EA")]
		public const string TAG_LOADING = "MenuLoading";

		[Token(Token = "0x40017EB")]
		public const string TAG_LOGOS = "MenuLogos";

		[Token(Token = "0x40017EC")]
		public const string TAG_FIRST_LAUNCH_SETUP = "MenuFirstLaunchSetup";

		[Token(Token = "0x40017ED")]
		public const string TAG_CONTINUE_RUN = "MenuContinueRun";

		[Token(Token = "0x40017EE")]
		public const string TAG_CREDITS = "MenuCredits";

		[Token(Token = "0x40017EF")]
		public const string TAG_QUEUED_REWARDS = "MenuQueuedRewards";

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] TAGS_PREDEFINED;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<string, Vector2Int> TAG_RANGES_PREDEFINED;

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xE10D4C", Offset = "0xE10D4C", VA = "0xE10D4C")]
		static SectorTagsMenu()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xE11178", Offset = "0xE11178", VA = "0xE11178")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8D2D4C", Offset = "0x8D2D4C")]
		private static void BeforeSplashScreen()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public static class MenuTextParameters
	{
		[Token(Token = "0x40017F2")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0F14", Offset = "0x8C0F14")]
		public const string PARAMETER_SCRAP_ICON = "{[scrap_icon]}";

		[Token(Token = "0x40017F3")]
		public const string PARAMETER_SCRAP_VALUE = "{[scrap_value]}";

		[Token(Token = "0x40017F4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0F4C", Offset = "0x8C0F4C")]
		public const string PARAMETER_EXPERIENCE_ICON = "{[xp_icon]}";

		[Token(Token = "0x40017F5")]
		public const string PARAMETER_EXPERIENCE_VALUE = "{[xp_value]}";

		[Token(Token = "0x40017F6")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0F84", Offset = "0x8C0F84")]
		public const string PARAMETER_STORY_KEY_ICON = "{[sk_icon]}";

		[Token(Token = "0x40017F7")]
		public const string PARAMETER_STORY_KEY_VALUE = "{[sk_value]}";

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xD68CCC", Offset = "0xD68CCC", VA = "0xD68CCC")]
		public static string FormatScrapIcon()
		{
			return null;
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xD68D18", Offset = "0xD68D18", VA = "0xD68D18")]
		public static string FormatScrapValue(int scrap)
		{
			return null;
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xD68D44", Offset = "0xD68D44", VA = "0xD68D44")]
		public static string FormatScrapValue(string scrap)
		{
			return null;
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xD68DA0", Offset = "0xD68DA0", VA = "0xD68DA0")]
		public static string FormatExperienceIcon()
		{
			return null;
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xD68DEC", Offset = "0xD68DEC", VA = "0xD68DEC")]
		public static string FormatExperienceValue(int xp)
		{
			return null;
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xD68E18", Offset = "0xD68E18", VA = "0xD68E18")]
		public static string FormatExperienceValue(string xp)
		{
			return null;
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xD68E74", Offset = "0xD68E74", VA = "0xD68E74")]
		public static string FormatStoryKeyIcon()
		{
			return null;
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xD68EC0", Offset = "0xD68EC0", VA = "0xD68EC0")]
		public static string FormatStoryKeyValue(int storyKey)
		{
			return null;
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xD68EEC", Offset = "0xD68EEC", VA = "0xD68EEC")]
		public static string FormatStoryKeyValue(string storyKey)
		{
			return null;
		}
	}
	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8AA820", Offset = "0x8AA820")]
	public class MenuUiButtonSelectByMenuVisible : GameMonoBehaviour, IUiSelector
	{
		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C0FBC", Offset = "0x8C0FBC")]
		[SerializeField]
		private SectorTag menuTag;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool selectIfVisible;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UiButton button;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isEventsSetUp;

		[Token(Token = "0x170004F5")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6001B0F")]
			[Address(RVA = "0xD68F48", Offset = "0xD68F48", VA = "0xD68F48", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B10")]
			[Address(RVA = "0xD68F50", Offset = "0xD68F50", VA = "0xD68F50", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xD68F54", Offset = "0xD68F54", VA = "0xD68F54", Slot = "38")]
		public void SetupSelection()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xD690F4", Offset = "0xD690F4", VA = "0xD690F4", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xD6910C", Offset = "0xD6910C", VA = "0xD6910C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xD691E4", Offset = "0xD691E4", VA = "0xD691E4", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xD6931C", Offset = "0xD6931C", VA = "0xD6931C")]
		private void OnMenuVisibilityChanged(SectorTag menuTag, bool visible)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xD68FB8", Offset = "0xD68FB8", VA = "0xD68FB8")]
		private void SetupEvents()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xD69110", Offset = "0xD69110", VA = "0xD69110", Slot = "39")]
		public void UpdateSelection()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xD693D0", Offset = "0xD693D0", VA = "0xD693D0")]
		private void SetSelected(bool visible)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xD69484", Offset = "0xD69484", VA = "0xD69484")]
		public MenuUiButtonSelectByMenuVisible()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class Advisor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA880", Offset = "0x8AA880")]
		private sealed class <>c
		{
			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static SpaceEntitySteering.SteerPositionReferenceDelegate <>9__27_0;

			[Token(Token = "0x4001811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static SpaceEntitySteering.SteerPositionReferenceDelegate <>9__27_1;

			[Token(Token = "0x6001B28")]
			[Address(RVA = "0xE04760", Offset = "0xE04760", VA = "0xE04760")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B29")]
			[Address(RVA = "0xE04768", Offset = "0xE04768", VA = "0xE04768")]
			internal SpaceEntitySteering.PositionData <SetLocation>b__27_0(Transform t)
			{
				return default(SpaceEntitySteering.PositionData);
			}

			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0xE047B4", Offset = "0xE047B4", VA = "0xE047B4")]
			internal SpaceEntitySteering.PositionData <SetLocation>b__27_1(Transform t)
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float moveSpeed;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool appearInstant;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool disappearInstant;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve positionXZCurve;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve positionYCurve;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve rotationStartTargetBlend;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve rotationTravelLocationBlend;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AdvisorLocation targetLocation;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SpaceEntitySteering.SteerPosition targetPosition;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SpaceEntitySteering.SteerPosition targetForward;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float targetDistance;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 startPosition;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion startRotation;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private SpaceEntitySteering.SteerPosition originPosition;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private SpaceEntitySteering.SteerPosition originForward;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float previousMoveProgress;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float moveProgress;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool moveInvertPositionCurves;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private int moveLastFrame;

		[Token(Token = "0x170004F6")]
		public bool IsActive
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0xEE49CC", Offset = "0xEE49CC", VA = "0xEE49CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0xEE49F0", Offset = "0xEE49F0", VA = "0xEE49F0")]
			set
			{
			}
		}

		[Token(Token = "0x170004F7")]
		public AdvisorLocation TargetLocation
		{
			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0xEE4A24", Offset = "0xEE4A24", VA = "0xEE4A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F8")]
		public float MoveProgress
		{
			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0xEE4A2C", Offset = "0xEE4A2C", VA = "0xEE4A2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xEE4A34", Offset = "0xEE4A34", VA = "0xEE4A34")]
		public void SetOrigin(SpaceEntitySteering.SteerPosition originPosition, SpaceEntitySteering.SteerPosition originForward)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xEE4A9C", Offset = "0xEE4A9C", VA = "0xEE4A9C")]
		public void SetLocation(AdvisorLocation location, bool moveInstant = false)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xEE5274", Offset = "0xEE5274", VA = "0xEE5274")]
		public void ClearLocation(bool moveInstant = false)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xEE5060", Offset = "0xEE5060", VA = "0xEE5060")]
		private void RemoveTargetLocation()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xEE5140", Offset = "0xEE5140", VA = "0xEE5140")]
		private void SetTargetAndActivate(Vector3 startPosition, Quaternion startRotation, SpaceEntitySteering.SteerPosition targetPosition, SpaceEntitySteering.SteerPosition targetForward, bool invertPositionCurves, bool instant)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xEE59CC", Offset = "0xEE59CC", VA = "0xEE59CC")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xEE5588", Offset = "0xEE5588", VA = "0xEE5588")]
		protected void UpdateAdvisorPosition()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xEE5A0C", Offset = "0xEE5A0C", VA = "0xEE5A0C")]
		public Advisor()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xEE5AF0", Offset = "0xEE5AF0", VA = "0xEE5AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2D60", Offset = "0x8D2D60")]
		private SpaceEntitySteering.PositionData <ClearLocation>b__28_0()
		{
			return default(SpaceEntitySteering.PositionData);
		}
	}
	[Token(Token = "0x200044C")]
	public class AdvisorLocation : MonoBehaviour
	{
		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform advisorPosition;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool instantSummon;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool instantClear;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int advisorAutoSummonPriority;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool advisorAutoSummonHidden;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Advisor> targetingAdvisors;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Advisor> arrivedAdvisors;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<AdvisorLocation> AutoSummonLocations;

		[Token(Token = "0x170004F9")]
		public Transform AdvisorPosition
		{
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0xEE5B40", Offset = "0xEE5B40", VA = "0xEE5B40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FA")]
		public IReadOnlyList<Advisor> TargetingAdvisors
		{
			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0xEE5B48", Offset = "0xEE5B48", VA = "0xEE5B48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FB")]
		public IReadOnlyList<Advisor> ArrivedAdvisors
		{
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0xEE5B50", Offset = "0xEE5B50", VA = "0xEE5B50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xEE5B58", Offset = "0xEE5B58", VA = "0xEE5B58")]
		private static void CheckAutoSummonLocation()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xEE5D2C", Offset = "0xEE5D2C", VA = "0xEE5D2C", Slot = "4")]
		public virtual void SummonAdvisor()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xEE5E1C", Offset = "0xEE5E1C", VA = "0xEE5E1C", Slot = "5")]
		public virtual void ClearAdvisor()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xEE5F3C", Offset = "0xEE5F3C", VA = "0xEE5F3C", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xEE5FE4", Offset = "0xEE5FE4", VA = "0xEE5FE4", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xEE6090", Offset = "0xEE6090", VA = "0xEE6090", Slot = "8")]
		public virtual void OnAdvisorTargetStart(Advisor advisor)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xEE60F4", Offset = "0xEE60F4", VA = "0xEE60F4", Slot = "9")]
		public virtual void OnAdvisorTargetEnd(Advisor advisor)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xEE6158", Offset = "0xEE6158", VA = "0xEE6158", Slot = "10")]
		public virtual void OnAdvisorArrive(Advisor advisor)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xEE61BC", Offset = "0xEE61BC", VA = "0xEE61BC", Slot = "11")]
		public virtual void OnAdvisorDepart(Advisor advisor)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xEE6220", Offset = "0xEE6220", VA = "0xEE6220")]
		public AdvisorLocation()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class AdvisorLocationShowText : AdvisorLocation
	{
		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text text;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject[] targetShowObjects;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject[] arriveShowObjects;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LocalizationKey textKey;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string textString;

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xEE635C", Offset = "0xEE635C", VA = "0xEE635C", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xEE6544", Offset = "0xEE6544", VA = "0xEE6544", Slot = "12")]
		public virtual void SummonAdvisor(LocalizationKey text)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xEE657C", Offset = "0xEE657C", VA = "0xEE657C", Slot = "13")]
		public virtual void SummonAdvisor(string text)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xEE65AC", Offset = "0xEE65AC", VA = "0xEE65AC", Slot = "4")]
		public override void SummonAdvisor()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xEE6674", Offset = "0xEE6674", VA = "0xEE6674", Slot = "8")]
		public override void OnAdvisorTargetStart(Advisor advisor)
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xEE67C8", Offset = "0xEE67C8", VA = "0xEE67C8", Slot = "9")]
		public override void OnAdvisorTargetEnd(Advisor advisor)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xEE68A0", Offset = "0xEE68A0", VA = "0xEE68A0", Slot = "10")]
		public override void OnAdvisorArrive(Advisor advisor)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xEE6980", Offset = "0xEE6980", VA = "0xEE6980", Slot = "11")]
		public override void OnAdvisorDepart(Advisor advisor)
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xEE6380", Offset = "0xEE6380", VA = "0xEE6380")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xEE674C", Offset = "0xEE674C", VA = "0xEE674C")]
		private static void SetShowObjectsVisible(GameObject[] objs, bool show)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xEE6A60", Offset = "0xEE6A60", VA = "0xEE6A60")]
		public AdvisorLocationShowText()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class AdvisorMenu : MonoBehaviourSingleton<AdvisorMenu>
	{
		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C1108", Offset = "0x8C1108")]
		private SectorTag advisorMenuTag;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool visibleOutsideConversations;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool conversationActive;

		[Token(Token = "0x170004FC")]
		public bool VisibleOutsideConversations
		{
			[Token(Token = "0x6001B44")]
			[Address(RVA = "0xEE6AC0", Offset = "0xEE6AC0", VA = "0xEE6AC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B45")]
			[Address(RVA = "0xEE6AC8", Offset = "0xEE6AC8", VA = "0xEE6AC8")]
			set
			{
			}
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xEE6B00", Offset = "0xEE6B00", VA = "0xEE6B00")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xEE6D04", Offset = "0xEE6D04", VA = "0xEE6D04")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xEE6AEC", Offset = "0xEE6AEC", VA = "0xEE6AEC")]
		public void SetVisibleOutsideConversations(bool visible, bool updateInstant = true)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xEE7074", Offset = "0xEE7074", VA = "0xEE7074")]
		private void OnUnloadStart(SectorTagsInput _)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xEE707C", Offset = "0xEE707C", VA = "0xEE707C")]
		private void OnConversationStartAfter()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xEE7088", Offset = "0xEE7088", VA = "0xEE7088")]
		private void OnConversationEndBefore()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xEE6F08", Offset = "0xEE6F08", VA = "0xEE6F08")]
		public void UpdateVisibleOutsideConversations()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xEE7090", Offset = "0xEE7090", VA = "0xEE7090")]
		public AdvisorMenu()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public enum BackgroundMenuType
	{
		[Token(Token = "0x4001823")]
		Default = 0,
		[Token(Token = "0x4001824")]
		Empty = 1,
		[Token(Token = "0x4001825")]
		FocusLeftAligned = 10
	}
	[Token(Token = "0x2000450")]
	public class BackgroundMenu : MonoBehaviourSingleton<BackgroundMenu>
	{
		[Serializable]
		[Token(Token = "0x2000451")]
		public class BackgroundType
		{
			[Token(Token = "0x4001830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MenuScreenAnimator menuAnimatorShow;

			[Token(Token = "0x4001831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MenuScreenAnimator menuAnimatorHide;

			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0xC61F68", Offset = "0xC61F68", VA = "0xC61F68")]
			public void Show()
			{
			}

			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0xC6204C", Offset = "0xC6204C", VA = "0xC6204C")]
			public void Hide()
			{
			}

			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0xC62130", Offset = "0xC62130", VA = "0xC62130")]
			public BackgroundType()
			{
			}
		}

		[Token(Token = "0x2000452")]
		private struct BackgroundInstance
		{
			[Token(Token = "0x4001832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BackgroundMenuType type;

			[Token(Token = "0x4001833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int count;

			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0xC61F60", Offset = "0xC61F60", VA = "0xC61F60")]
			public BackgroundInstance(BackgroundMenuType type, int count)
			{
			}
		}

		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA890", Offset = "0x8AA890")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int count;

			[Token(Token = "0x6001B60")]
			[Address(RVA = "0xC61F44", Offset = "0xC61F44", VA = "0xC61F44")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001B61")]
			[Address(RVA = "0xC61F4C", Offset = "0xC61F4C", VA = "0xC61F4C")]
			internal bool <RemoveBackgroundInstance>b__0(BackgroundInstance p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BackgroundType backgroundDefault;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BackgroundType backgroundFocusLeftAligned;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onEnable;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onDisable;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1194", Offset = "0x8C1194")]
		private bool <Enabled>k__BackingField;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C11A4", Offset = "0x8C11A4")]
		private bool <IsDirty>k__BackingField;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BackgroundType currentBackground;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool suppressBackgroundChanges;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<BackgroundInstance> BackgroundInstances;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int BackgroundCount;

		[Token(Token = "0x170004FD")]
		public bool Enabled
		{
			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0xEF6B88", Offset = "0xEF6B88", VA = "0xEF6B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2D70", Offset = "0x8D2D70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0xEF6B90", Offset = "0xEF6B90", VA = "0xEF6B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2D80", Offset = "0x8D2D80")]
			private set
			{
			}
		}

		[Token(Token = "0x170004FE")]
		public bool IsDirty
		{
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0xEF6B9C", Offset = "0xEF6B9C", VA = "0xEF6B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2D90", Offset = "0x8D2D90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B51")]
			[Address(RVA = "0xEF6BA4", Offset = "0xEF6BA4", VA = "0xEF6BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2DA0", Offset = "0x8D2DA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170004FF")]
		private static BackgroundMenuType CurrentBackgroundType
		{
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0xEF6BB0", Offset = "0xEF6BB0", VA = "0xEF6BB0")]
			get
			{
				return default(BackgroundMenuType);
			}
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xEF6C8C", Offset = "0xEF6C8C", VA = "0xEF6C8C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xEF6D90", Offset = "0xEF6D90", VA = "0xEF6D90")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xEF6DC0", Offset = "0xEF6DC0", VA = "0xEF6DC0")]
		public void UpdateBackground()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xEF6E40", Offset = "0xEF6E40", VA = "0xEF6E40")]
		public static int AddBackgroundInstance(BackgroundMenuType type)
		{
			return default(int);
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xEF6F94", Offset = "0xEF6F94", VA = "0xEF6F94")]
		public static bool RemoveBackgroundInstance(int count)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xEF71A8", Offset = "0xEF71A8", VA = "0xEF71A8")]
		public void SetSuppressBackgroundChanges(bool suppressBackgroundChanges)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xEF6D0C", Offset = "0xEF6D0C", VA = "0xEF6D0C")]
		private void ChangeBackground(BackgroundMenuType type)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xEF71C0", Offset = "0xEF71C0", VA = "0xEF71C0")]
		public BackgroundMenu()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class CreditsMenu : MonoBehaviour
	{
		[Token(Token = "0x2000455")]
		private abstract class CreditsObjectPool
		{
			[Token(Token = "0x6001B72")]
			public abstract void ReturnPooledObject(GameObject obj);

			[Token(Token = "0x6001B73")]
			[Address(RVA = "0xC6BEB4", Offset = "0xC6BEB4", VA = "0xC6BEB4")]
			protected CreditsObjectPool()
			{
			}
		}

		[Token(Token = "0x2000456")]
		private class CreditsObjectPool<T> : CreditsObjectPool where T : Graphic
		{
			[Token(Token = "0x4001858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<T> objectsActive;

			[Token(Token = "0x4001859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<T> objectsInactive;

			[Token(Token = "0x400185A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T prefab;

			[Token(Token = "0x400185B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private RectTransform prefabTransform;

			[Token(Token = "0x400185C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Transform parent;

			[Token(Token = "0x6001B74")]
			public CreditsObjectPool(T prefab, Transform parent, int poolStartSize = 0)
			{
			}

			[Token(Token = "0x6001B75")]
			private T InstantiatePooledObject()
			{
				return null;
			}

			[Token(Token = "0x6001B76")]
			public T GetPooledObject()
			{
				return null;
			}

			[Token(Token = "0x6001B77")]
			public override void ReturnPooledObject(GameObject obj)
			{
			}

			[Token(Token = "0x6001B78")]
			public void ReturnPooledObject(T obj)
			{
			}
		}

		[Token(Token = "0x2000457")]
		private struct CreditsObject
		{
			[Token(Token = "0x400185D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float scroll;

			[Token(Token = "0x400185E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Graphic graphic;

			[Token(Token = "0x400185F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CreditsObjectPool pool;

			[Token(Token = "0x17000504")]
			public float FadeScroll
			{
				[Token(Token = "0x6001B79")]
				[Address(RVA = "0xC6BE30", Offset = "0xC6BE30", VA = "0xC6BE30")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0xC6BE7C", Offset = "0xC6BE7C", VA = "0xC6BE7C")]
			public CreditsObject(float scroll, Graphic graphic, CreditsObjectPool pool)
			{
			}

			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0xC6BD90", Offset = "0xC6BD90", VA = "0xC6BD90")]
			public void ReturnToPool()
			{
			}
		}

		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA8A0", Offset = "0x8AA8A0")]
		private sealed class <CreditsRoutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CreditsMenu <>4__this;

			[Token(Token = "0x4001863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fadeSpeed>5__2;

			[Token(Token = "0x4001864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <t>5__3;

			[Token(Token = "0x17000505")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B7F")]
				[Address(RVA = "0xC6BDE0", Offset = "0xC6BDE0", VA = "0xC6BDE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000506")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B81")]
				[Address(RVA = "0xC6BE28", Offset = "0xC6BE28", VA = "0xC6BE28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0xC6BA6C", Offset = "0xC6BA6C", VA = "0xC6BA6C")]
			[DebuggerHidden]
			public <CreditsRoutine>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0xC6BA98", Offset = "0xC6BA98", VA = "0xC6BA98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0xC6BA9C", Offset = "0xC6BA9C", VA = "0xC6BA9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B80")]
			[Address(RVA = "0xC6BDE8", Offset = "0xC6BDE8", VA = "0xC6BDE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001835")]
		private const string TITLE_PREFIX = "# ";

		[Token(Token = "0x4001836")]
		private const string TEXT_LOC_PREFIX = "![loc](";

		[Token(Token = "0x4001837")]
		private const char TEXT_LOC_SUFFIX = ')';

		[Token(Token = "0x4001838")]
		private const string IMAGE_PREFIX = "![image](";

		[Token(Token = "0x4001839")]
		private const string IMAGE_SUFFIX = ")";

		[Token(Token = "0x400183A")]
		private const char IMAGE_SEPARATOR = '|';

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextAsset creditsData;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C11C4", Offset = "0x8C11C4")]
		[SerializeField]
		private RectTransform contentParent;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1210", Offset = "0x8C1210")]
		[SerializeField]
		private CanvasGroup fadeCanvasGroup;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve fadeCanvasGroupCurve;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float fadeCanvasGroupTime;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C127C", Offset = "0x8C127C")]
		[SerializeField]
		private TMP_Text titleTextPrefab;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int titleTextPoolStartSize;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text bodyTextPrefab;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int bodyTextPoolStartSize;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image imagePrefab;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int imagePoolStartSize;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1318", Offset = "0x8C1318")]
		[SerializeField]
		private LocalizationKey textLocalizationKeyTemplate;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1364", Offset = "0x8C1364")]
		[SerializeField]
		private float elementSpacing;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float emptyLineSpacing;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float scrollSpeed;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float scrollStartHeight;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float fadeInOutOffset;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AnimationCurve fadeInOutCurve;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1400", Offset = "0x8C1400")]
		private UnityEvent onCreditsFinish;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CreditsObjectPool<TMP_Text> titleTextPool;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CreditsObjectPool<TMP_Text> bodyTextPool;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CreditsObjectPool<Image> imagePool;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine creditsRoutine;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<CreditsObject> activeCreditsObjects;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<string> creditsLines;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int nextLineIndex;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float currentScroll;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float nextElementScroll;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private StringBuilder textBuilder;

		[Token(Token = "0x17000500")]
		public float CurrentScrollTop
		{
			[Token(Token = "0x6001B62")]
			[Address(RVA = "0xFF294C", Offset = "0xFF294C", VA = "0xFF294C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000501")]
		public float CurrentScrollBottom
		{
			[Token(Token = "0x6001B63")]
			[Address(RVA = "0xFF2954", Offset = "0xFF2954", VA = "0xFF2954")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000502")]
		public float CurrentScrollTopFadeOut
		{
			[Token(Token = "0x6001B64")]
			[Address(RVA = "0xFF29AC", Offset = "0xFF29AC", VA = "0xFF29AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000503")]
		public float CurrentScrollBottomFadeIn
		{
			[Token(Token = "0x6001B65")]
			[Address(RVA = "0xFF29BC", Offset = "0xFF29BC", VA = "0xFF29BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xFF29E4", Offset = "0xFF29E4", VA = "0xFF29E4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xFF2C48", Offset = "0xFF2C48", VA = "0xFF2C48")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xFF2DD4", Offset = "0xFF2DD4", VA = "0xFF2DD4")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xFF2B34", Offset = "0xFF2B34", VA = "0xFF2B34")]
		private void LoadCredits()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xFF2DD8", Offset = "0xFF2DD8", VA = "0xFF2DD8")]
		public void ResetCredits()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xFF2C4C", Offset = "0xFF2C4C", VA = "0xFF2C4C")]
		public void StartCredits()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xFF3098", Offset = "0xFF3098", VA = "0xFF3098")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D2DB0", Offset = "0x8D2DB0")]
		private IEnumerator CreditsRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xFF2EFC", Offset = "0xFF2EFC", VA = "0xFF2EFC")]
		private bool UpdateCreditsObjectState(CreditsObject obj, float currentScrollTop, float currentScrollBottom, float currentScrollTopFadeOut, float currentScrollBottomFadeIn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xFF2EC4", Offset = "0xFF2EC4", VA = "0xFF2EC4")]
		private void TryCreateNextCreditsObjects(float currentScrollBottom)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xFF3110", Offset = "0xFF3110", VA = "0xFF3110")]
		private bool TryCreateNextCreditsObject(float currentScrollBottom)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xFF3558", Offset = "0xFF3558", VA = "0xFF3558")]
		private string ProcessText(string text)
		{
			return null;
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xFF37E0", Offset = "0xFF37E0", VA = "0xFF37E0")]
		public CreditsMenu()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public enum CurrencyDisplayType
	{
		[Token(Token = "0x4001866")]
		Scrap,
		[Token(Token = "0x4001867")]
		Experience,
		[Token(Token = "0x4001868")]
		StoryKey
	}
	[Token(Token = "0x200045A")]
	public class CurrencyDisplay : GameMonoBehaviour
	{
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private CurrencyDisplayType type;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text currencyText;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool formatCurrencyText;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Vector2 animationSpeedRange;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Vector2 animationDiffRange;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool disableOnZeroValue;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CurrencyWallet wallet;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Func<int, string> walletFormatFunc;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float displayValue;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int targetValue;

		[Token(Token = "0x17000507")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0xFF3C64", Offset = "0xFF3C64", VA = "0xFF3C64", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xFF3C6C", Offset = "0xFF3C6C", VA = "0xFF3C6C", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xFF3C84", Offset = "0xFF3C84", VA = "0xFF3C84")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xFF4124", Offset = "0xFF4124", VA = "0xFF4124")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xFF4174", Offset = "0xFF4174", VA = "0xFF4174", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xFF43D0", Offset = "0xFF43D0", VA = "0xFF43D0")]
		private void OnCurrencyChange(int previousAmount, int newAmount)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xFF43E8", Offset = "0xFF43E8", VA = "0xFF43E8")]
		private void OnLanguageChange()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xFF4488", Offset = "0xFF4488", VA = "0xFF4488")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xFF4154", Offset = "0xFF4154", VA = "0xFF4154")]
		private void SetValue(float displayValue, int targetValue = -1)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xFF43EC", Offset = "0xFF43EC", VA = "0xFF43EC")]
		private void UpdateDisplayValue()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xFF40B4", Offset = "0xFF40B4", VA = "0xFF40B4")]
		private void DisableComponentOnZeroValue(int value)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xFF455C", Offset = "0xFF455C", VA = "0xFF455C")]
		public CurrencyDisplay()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class CustomNodeRunMenu : GameMonoBehaviour
	{
		[Token(Token = "0x200045C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA8B0", Offset = "0x8AA8B0")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomNodeRunMenuNodeInfo nodeType;

			[Token(Token = "0x4001882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomNodeRunMenu <>4__this;

			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0xC6C86C", Offset = "0xC6C86C", VA = "0xC6C86C")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xC6C874", Offset = "0xC6C874", VA = "0xC6C874")]
			internal void <SelectNodeType>b__1(SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeType>> p)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200045D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA8C0", Offset = "0x8AA8C0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeType>>, string> <>9__16_0;

			[Token(Token = "0x4001885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeInfo>>, string> <>9__17_0;

			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xC6C7C4", Offset = "0xC6C7C4", VA = "0xC6C7C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0xC6C7CC", Offset = "0xC6C7CC", VA = "0xC6C7CC")]
			internal string <SelectNodeType>b__16_0(SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeType>> n)
			{
				return null;
			}

			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0xC6C81C", Offset = "0xC6C81C", VA = "0xC6C81C")]
			internal string <SelectNodeInfo>b__17_0(SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeInfo>> n)
			{
				return null;
			}
		}

		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA8D0", Offset = "0x8AA8D0")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomNodeRunMenuNodeInfo nodeInfo;

			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0xC6C914", Offset = "0xC6C914", VA = "0xC6C914")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0xC6C91C", Offset = "0xC6C91C", VA = "0xC6C91C")]
			internal void <SelectNodeInfo>b__1(SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeInfo>> p)
			{
			}
		}

		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA8E0", Offset = "0x8AA8E0")]
		private sealed class <>c__DisplayClass18_0<T>
		{
			[Token(Token = "0x4001887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> selectOptionAction;

			[Token(Token = "0x4001888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CustomNodeRunMenu <>4__this;

			[Token(Token = "0x6001BA4")]
			public <>c__DisplayClass18_0()
			{
			}
		}

		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA8F0", Offset = "0x8AA8F0")]
		private sealed class <>c__DisplayClass18_1<T>
		{
			[Token(Token = "0x4001889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T option;

			[Token(Token = "0x400188A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass18_0<T> CS$<>8__locals1;

			[Token(Token = "0x6001BA5")]
			public <>c__DisplayClass18_1()
			{
			}

			[Token(Token = "0x6001BA6")]
			internal void <OpenOptionsMenu>b__0(string p)
			{
			}
		}

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C14AC", Offset = "0x8C14AC")]
		private GameObject nodeInfoMenu;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CustomNodeRunMenuNodeInfo nodeInfoPrefab;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform nodeInfoParent;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UiButton startButton;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string defaultNodeInfoValue;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1538", Offset = "0x8C1538")]
		private GameObject optionsMenu;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UiButton optionPrefab;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform optionParent;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C15A4", Offset = "0x8C15A4")]
		[SerializeField]
		private int sectorMapRegionRepeatCount;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private int sectorMapNodeRowRepeatCount;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SectorTagAmount[] sectorMapTags;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CustomNodeRunMenuNodeInfo nodeType;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<CustomNodeRunMenuNodeInfo> nodeInfos;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<UiButton> options;

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xC44A9C", Offset = "0xC44A9C", VA = "0xC44A9C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xC45144", Offset = "0xC45144", VA = "0xC45144")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xC45274", Offset = "0xC45274", VA = "0xC45274")]
		private void SelectNodeType(CustomNodeRunMenuNodeInfo nodeType)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xC454BC", Offset = "0xC454BC", VA = "0xC454BC")]
		private void SelectNodeInfo(CustomNodeRunMenuNodeInfo nodeInfo)
		{
		}

		[Token(Token = "0x6001B92")]
		private void OpenOptionsMenu<T>(IEnumerable<T> options, Func<T, string> getValue, Action<T> selectOptionAction)
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xC45D3C", Offset = "0xC45D3C", VA = "0xC45D3C")]
		private void CloseOptionsMenu()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xC45180", Offset = "0xC45180", VA = "0xC45180")]
		private void ClearOptionsMenu()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xC45D60", Offset = "0xC45D60", VA = "0xC45D60")]
		private void UpdateStartButtonEnabled()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xC44D84", Offset = "0xC44D84", VA = "0xC44D84")]
		private void SetupNodeInfos()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xC4588C", Offset = "0xC4588C", VA = "0xC4588C")]
		private static bool TryGetNodeType(string nodeTypeName, out SectorMapNodeType nodeTypeResult)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xC45C64", Offset = "0xC45C64", VA = "0xC45C64")]
		private static bool TryGetNodeInfos(string nodeInfoGroup, out IReadOnlyList<SectorAsset<SectorMapNodeInfo.SelectionWrapper<SectorMapNodeInfo>>> nodeInfos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xC45EF0", Offset = "0xC45EF0", VA = "0xC45EF0")]
		private static bool TryGetNodeInfo(string nodeInfoGroup, string nodeInfoName, out SectorMapNodeInfo nodeInfoResult)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xC462D0", Offset = "0xC462D0", VA = "0xC462D0")]
		public void StartNode()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xC46820", Offset = "0xC46820", VA = "0xC46820")]
		public CustomNodeRunMenu()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class CustomNodeRunMenuNodeInfo : MonoBehaviour
	{
		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA900", Offset = "0x8AA900")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400188F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<CustomNodeRunMenuNodeInfo> selectAction;

			[Token(Token = "0x4001890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomNodeRunMenuNodeInfo <>4__this;

			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0xC6C9AC", Offset = "0xC6C9AC", VA = "0xC6C9AC")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0xC6C9B4", Offset = "0xC6C9B4", VA = "0xC6C9B4")]
			internal void <Setup>b__0(string p)
			{
			}
		}

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text titleText;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UiButton selectButton;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject requiredToggle;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1640", Offset = "0x8C1640")]
		private string <Value>k__BackingField;

		[Token(Token = "0x17000508")]
		public string Value
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xC46924", Offset = "0xC46924", VA = "0xC46924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2E60", Offset = "0x8D2E60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0xC4692C", Offset = "0xC4692C", VA = "0xC4692C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2E70", Offset = "0x8D2E70")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xC44C40", Offset = "0xC44C40", VA = "0xC44C40")]
		public void Setup(string title, string value, bool required, Action<CustomNodeRunMenuNodeInfo> selectAction)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xC46934", Offset = "0xC46934", VA = "0xC46934")]
		public void Setup(string title, string value, string displayValue, bool required, Action<CustomNodeRunMenuNodeInfo> selectAction)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xC44C4C", Offset = "0xC44C4C", VA = "0xC44C4C")]
		public void SetValue(string value, [System.Runtime.InteropServices.Optional] string displayValue)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xC46B60", Offset = "0xC46B60", VA = "0xC46B60")]
		public CustomNodeRunMenuNodeInfo()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class CustomSeedRunMenu : MonoBehaviour
	{
		[Token(Token = "0x4001891")]
		private const string ERROR_MSG_SEED_TOO_SHORT = "Seed is too short!\nSeeds must be exactly 8 characters long.";

		[Token(Token = "0x4001892")]
		private const string ERROR_MSG_SEED_TOO_LONG = "Seed is too long!\nSeeds must be exactly 8 characters long.";

		[Token(Token = "0x4001893")]
		private const string ERROR_MSG_SEED_INVALID_CHARS = "Seed contains invalid characters!\nSeeds must only contain hexadecimal characters.";

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1650", Offset = "0x8C1650")]
		[SerializeField]
		private TMP_Text seedText;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text seedErrorMessage;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C16AC", Offset = "0x8C16AC")]
		[SerializeField]
		private TMP_Text currentSectorMapName;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SectorMapDescription[] sectorMapDescriptions;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1708", Offset = "0x8C1708")]
		[SerializeField]
		private UiButton startRunButton;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UiButton backspaceButton;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1764", Offset = "0x8C1764")]
		[SerializeField]
		private float caretShowInterval;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float caretShowDuration;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string seed;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int sectorMapIndex;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float caretTimer;

		[Token(Token = "0x17000509")]
		private bool CaretShown
		{
			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0xC46BC4", Offset = "0xC46BC4", VA = "0xC46BC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xC46BF4", Offset = "0xC46BF4", VA = "0xC46BF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xC470EC", Offset = "0xC470EC", VA = "0xC470EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xC46C20", Offset = "0xC46C20", VA = "0xC46C20")]
		private void UpdateWrittenSeed()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xC46E74", Offset = "0xC46E74", VA = "0xC46E74")]
		private void UpdateSectorMap()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xC46F98", Offset = "0xC46F98", VA = "0xC46F98")]
		private void UpdateButtonsEnabled()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xC471D0", Offset = "0xC471D0", VA = "0xC471D0")]
		public void SeedAddChar(string text)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xC4721C", Offset = "0xC4721C", VA = "0xC4721C")]
		public void SeedRemoveChar()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xC4727C", Offset = "0xC4727C", VA = "0xC4727C")]
		public void CycleSectorMap()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xC472A8", Offset = "0xC472A8", VA = "0xC472A8")]
		public void CreateRandomSeed()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xC47364", Offset = "0xC47364", VA = "0xC47364")]
		public void StartRun()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xC474CC", Offset = "0xC474CC", VA = "0xC474CC")]
		public CustomSeedRunMenu()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public class DailyJourneyMenu : GameMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000465")]
		public struct PlayerShip
		{
			[Token(Token = "0x40018B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorTag playerShipTag;

			[Token(Token = "0x40018B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject playerShipModel;
		}

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text timeLeftText;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizationKey timeLeftKey;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject playButton;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C17F0", Offset = "0x8C17F0")]
		private GameObject dailyJourneyMainParent;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject helpParent;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C184C", Offset = "0x8C184C")]
		[SerializeField]
		private DailyJourneyConditionItem[] modifierItems;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1898", Offset = "0x8C1898")]
		[SerializeField]
		private PlayerShip[] playerShips;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C18E4", Offset = "0x8C18E4")]
		private DailyJourneyLeaderboard leaderboard;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1930", Offset = "0x8C1930")]
		[SerializeField]
		private TMP_Text leaderboardSettingText;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private LocalizationKey viewFriendsKey;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private LocalizationKey viewGlobalKey;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MultiplayerManager.LeaderboardMode leaderboardSetting;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C19AC", Offset = "0x8C19AC")]
		[SerializeField]
		private UnityEvent onLoadingStart;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private UnityEvent onLoadingDone;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private UnityEvent onLoadingFail;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool waitingForDailyJourneyInfo;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private DailyJourneyInfo dailyJourneyInfo;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Dictionary<string, string> timerTextParameters;

		[Token(Token = "0x1700050A")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xC49CB0", Offset = "0xC49CB0", VA = "0xC49CB0", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700050B")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0xC49CB8", Offset = "0xC49CB8", VA = "0xC49CB8", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xC49CC0", Offset = "0xC49CC0", VA = "0xC49CC0", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xC49DC4", Offset = "0xC49DC4", VA = "0xC49DC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xC49FFC", Offset = "0xC49FFC", VA = "0xC49FFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xC4A138", Offset = "0xC4A138", VA = "0xC4A138")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xC4A358", Offset = "0xC4A358", VA = "0xC4A358")]
		public void ShowHelp()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xC49CEC", Offset = "0xC49CEC", VA = "0xC49CEC")]
		public void ShowDailyJourney()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xC4A3B0", Offset = "0xC4A3B0", VA = "0xC4A3B0")]
		public void ChangeLeaderboard()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xC4A3F4", Offset = "0xC4A3F4", VA = "0xC4A3F4")]
		public void StartDailyJourney()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xC49D44", Offset = "0xC49D44", VA = "0xC49D44")]
		private void UpdateLeaderboard()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xC49EF8", Offset = "0xC49EF8", VA = "0xC49EF8")]
		private void LoadDailyJourneyInfo()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xC4A500", Offset = "0xC4A500", VA = "0xC4A500")]
		private void UpdateDailyJourney(DailyJourneyInfo dailyJourneyInfo)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xC4A7A4", Offset = "0xC4A7A4", VA = "0xC4A7A4")]
		public DailyJourneyMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000466")]
	public class CarouselData
	{
		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArchiveBase[] Entries;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject CarouselObj;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ShowSelectButton;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool EmptySelectButtonText;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool OverrideShowSelectButton;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool ShowResetButton;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int StartIndex;

		[NonSerialized]
		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int lastVisitedIndex;

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xFE6CE8", Offset = "0xFE6CE8", VA = "0xFE6CE8")]
		public CarouselData()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class DataArchiveMenu : GameMonoBehaviour
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int visibleElementCount;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float elementSpacing;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CarouselData[] carousels;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UiButton selectButton;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI selectButtonTextMesh;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StepIndicatorMenu stepIndicatorMenu;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UiButton resetDataButton;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int restrictedAreaIndex;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1A98", Offset = "0x8C1A98")]
		[SerializeField]
		private LocalizationKey menuNameKey;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TextMeshProUGUI menuNameText;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1AF4", Offset = "0x8C1AF4")]
		[SerializeField]
		private TextMeshProUGUI progressionText;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LocalizationKey progressionKey;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Color inProgressColor;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Color completedColor;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int currentSelectionIndex;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int currentCarouselIndex;

		[Token(Token = "0x1700050C")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0xC4D210", Offset = "0xC4D210", VA = "0xC4D210", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xC4D218", Offset = "0xC4D218", VA = "0xC4D218", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xC4D304", Offset = "0xC4D304", VA = "0xC4D304")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xC4D69C", Offset = "0xC4D69C", VA = "0xC4D69C")]
		private void SetProgressionPercentage(int selectionIndex)
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xC4D2FC", Offset = "0xC4D2FC", VA = "0xC4D2FC")]
		public void ChangeToCarousel(int to)
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xC4D3FC", Offset = "0xC4D3FC", VA = "0xC4D3FC")]
		private void ChangeToCarouselInternal(int to, int selectionIndexOverride = -1)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xC4DBA8", Offset = "0xC4DBA8", VA = "0xC4DBA8")]
		public void ChangeToSelection(int selectionIndex)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xC4D938", Offset = "0xC4D938", VA = "0xC4D938")]
		private void ChangeToSelection(int selectionIndex, bool snap)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xC4DBB0", Offset = "0xC4DBB0", VA = "0xC4DBB0")]
		public void SelectButton()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xC4DC44", Offset = "0xC4DC44", VA = "0xC4DC44")]
		public void LeftButton()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xC4DCE0", Offset = "0xC4DCE0", VA = "0xC4DCE0")]
		public void RightButton()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xC4DD90", Offset = "0xC4DD90", VA = "0xC4DD90")]
		public void ResetDataButton()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xC4DE24", Offset = "0xC4DE24", VA = "0xC4DE24")]
		public void SetDefaultMenuNameText()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xC4DE64", Offset = "0xC4DE64", VA = "0xC4DE64")]
		public DataArchiveMenu()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class EndScreenMenuSuccessHandler : MonoBehaviour
	{
		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1B70", Offset = "0x8C1B70")]
		private TextMeshProUGUI headerText;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizationKey headerSuccessKey;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LocalizationKey headerFailureKey;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1BDC", Offset = "0x8C1BDC")]
		[SerializeField]
		private RunTimerDisplay clearTimerDisplay;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizationKey clearTimerSuccessKey;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LocalizationKey clearTimerFailureKey;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1C48", Offset = "0x8C1C48")]
		[SerializeField]
		private Transform finalScoreParent;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI finalScoreText;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private LocalizationKey finalScoreKey;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1CB4", Offset = "0x8C1CB4")]
		[SerializeField]
		private TextMeshProUGUI mapProgressionText;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LocalizationKey mapProgressionKey;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject mapProgressionBarParent;

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xC532F4", Offset = "0xC532F4", VA = "0xC532F4")]
		public void SetupSummaryScreen()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xC535A4", Offset = "0xC535A4", VA = "0xC535A4")]
		private void SetSuccessScreen()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xC53524", Offset = "0xC53524", VA = "0xC53524")]
		private void SetFailScreen()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xC5362C", Offset = "0xC5362C", VA = "0xC5362C")]
		private void SetFinalScore()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xC537BC", Offset = "0xC537BC", VA = "0xC537BC")]
		public EndScreenMenuSuccessHandler()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class EquipComponentChoiceMenu : MonoBehaviour, IShopItemMenu
	{
		[Serializable]
		[Token(Token = "0x200046A")]
		private struct PickUpGreeting
		{
			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SfxTrigger voiceOver;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LocalizationKey localizationKey;
		}

		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA910", Offset = "0x8AA910")]
		private sealed class <PlayGreetingSfxDelayed>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EquipComponentChoiceMenu <>4__this;

			[Token(Token = "0x40018EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int index;

			[Token(Token = "0x1700050F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BEE")]
				[Address(RVA = "0xC74B2C", Offset = "0xC74B2C", VA = "0xC74B2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000510")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BF0")]
				[Address(RVA = "0xC74B74", Offset = "0xC74B74", VA = "0xC74B74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0xC74A08", Offset = "0xC74A08", VA = "0xC74A08")]
			[DebuggerHidden]
			public <PlayGreetingSfxDelayed>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0xC74A34", Offset = "0xC74A34", VA = "0xC74A34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BED")]
			[Address(RVA = "0xC74A38", Offset = "0xC74A38", VA = "0xC74A38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0xC74B34", Offset = "0xC74B34", VA = "0xC74B34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuRoot menuRoot;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1D30", Offset = "0x8C1D30")]
		[SerializeField]
		private GameObject landingScreen;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PassiveAbilityDetailsDisplay passiveAbilityDetailsScreen;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject shopItemsPanel;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject confirmPurchasePanel;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UiButton confirmPurchaseButton;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text confirmPurchaseButtonText;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1DCC", Offset = "0x8C1DCC")]
		private ShopMenuItem[] shopItems;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1E18", Offset = "0x8C1E18")]
		private LocalizationKey purchaseText;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private LocalizationKey viewText;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshProUGUI greetingsText;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1E84", Offset = "0x8C1E84")]
		[SerializeField]
		private PickUpGreeting[] pickUpGreeting;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SectorTag storyTag;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float greetingSfxDelay;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int previewedItemIndex;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<PickupAbilityChestAbility> Abilities;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SpaceShip PickupPlayerShip;

		[Token(Token = "0x1700050D")]
		public LocalizationKey ViewText
		{
			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0xC55308", Offset = "0xC55308", VA = "0xC55308", Slot = "4")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x1700050E")]
		public LocalizationKey SoldOutText
		{
			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0xC55314", Offset = "0xC55314", VA = "0xC55314", Slot = "5")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x1400006F")]
		public static event Action<PickupAbilityChestAbility> PickupCollectEvent
		{
			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xC55320", Offset = "0xC55320", VA = "0xC55320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2E80", Offset = "0x8D2E80")]
			add
			{
			}
			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xC55418", Offset = "0xC55418", VA = "0xC55418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2E90", Offset = "0x8D2E90")]
			remove
			{
			}
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xC55510", Offset = "0xC55510", VA = "0xC55510")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xC55660", Offset = "0xC55660", VA = "0xC55660")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xC557EC", Offset = "0xC557EC", VA = "0xC557EC", Slot = "6")]
		public void ShowPurchasePreviewScreen(int index)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xC55668", Offset = "0xC55668", VA = "0xC55668", Slot = "7")]
		public void ShowLandingScreen(bool playGreetingSfx = false)
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xC559E4", Offset = "0xC559E4", VA = "0xC559E4")]
		private void UpdateGreeting(int index)
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xC55A88", Offset = "0xC55A88", VA = "0xC55A88")]
		private void UpdateShopItems()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xC55DA0", Offset = "0xC55DA0", VA = "0xC55DA0")]
		public void PickPreviewedItem()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xC55D18", Offset = "0xC55D18", VA = "0xC55D18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D2EA0", Offset = "0x8D2EA0")]
		private IEnumerator PlayGreetingSfxDelayed(int index)
		{
			return null;
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xC56098", Offset = "0xC56098", VA = "0xC56098")]
		public EquipComponentChoiceMenu()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class EquipComponentMenu : MonoBehaviour
	{
		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PassiveAbilityDetailsDisplay passiveAbilityDetails;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ShipAbilityPassive Ability;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int Level;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SpaceShip PickupPlayerShip;

		[Token(Token = "0x14000070")]
		public static event Action PickupCollectEvent
		{
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xC5614C", Offset = "0xC5614C", VA = "0xC5614C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2F50", Offset = "0x8D2F50")]
			add
			{
			}
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0xC56244", Offset = "0xC56244", VA = "0xC56244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2F60", Offset = "0x8D2F60")]
			remove
			{
			}
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xC5633C", Offset = "0xC5633C", VA = "0xC5633C")]
		public void DisplayComponent()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xC56470", Offset = "0xC56470", VA = "0xC56470")]
		public void EquipComponent()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xC56598", Offset = "0xC56598", VA = "0xC56598")]
		public EquipComponentMenu()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class ExpandSegmentBar : MonoBehaviour
	{
		[Token(Token = "0x200046E")]
		private struct Segment
		{
			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Image segment;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image shadow;

			[Token(Token = "0x17000511")]
			public bool HasShadow
			{
				[Token(Token = "0x6001C00")]
				[Address(RVA = "0xC75F54", Offset = "0xC75F54", VA = "0xC75F54")]
				get
				{
					return default(bool);
				}
			}
		}

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1F20", Offset = "0x8C1F20")]
		[SerializeField]
		private float segmentValue;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float minTotalValue;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float maxTotalValue;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1F8C", Offset = "0x8C1F8C")]
		[SerializeField]
		private TMP_Text valueText;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1FD8", Offset = "0x8C1FD8")]
		[SerializeField]
		private Image segmentTemplate;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float segmentSpacing;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color segmentFullColor;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Color segmentEmptyColor;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2054", Offset = "0x8C2054")]
		[SerializeField]
		private Image containerImage;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float containerImageBaseWidth;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C20B0", Offset = "0x8C20B0")]
		[SerializeField]
		private UiShadow shadow;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image segmentShadowTemplate;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float maxValue;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float value;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Segment> segments;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int activeSegmentCount;

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xC59ED8", Offset = "0xC59ED8", VA = "0xC59ED8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xC59F98", Offset = "0xC59F98", VA = "0xC59F98")]
		public void SetValue(float value)
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xC59FD0", Offset = "0xC59FD0", VA = "0xC59FD0")]
		public void SetValue(float value, float maxValue)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xC59FB4", Offset = "0xC59FB4", VA = "0xC59FB4")]
		public void SetValue(float value, bool updateShadow)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xC5A258", Offset = "0xC5A258", VA = "0xC5A258")]
		public void SetMaxValue(float maxValue)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xC5A020", Offset = "0xC5A020", VA = "0xC5A020")]
		private void SetMaxValue(float maxValue, bool updateShadow)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xC5A260", Offset = "0xC5A260", VA = "0xC5A260")]
		private void UpdateMaxSegments(bool updateShadow = true)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xC5A09C", Offset = "0xC5A09C", VA = "0xC5A09C")]
		private void UpdateSegmentValues(bool updateShadow = true)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xC5A8A0", Offset = "0xC5A8A0", VA = "0xC5A8A0")]
		public ExpandSegmentBar()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class GamePauseMenu : GameMonoBehaviour, IUiSelector
	{
		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C210C", Offset = "0x8C210C")]
		private SectorTag[] pauseMenuTags;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UiButton button;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AsyncFlag pauseFlag;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isEventsSetUp;

		[Token(Token = "0x17000512")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0xE2DDBC", Offset = "0xE2DDBC", VA = "0xE2DDBC", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xE2DDC4", Offset = "0xE2DDC4", VA = "0xE2DDC4", Slot = "38")]
		public void SetupSelection()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xE2E08C", Offset = "0xE2E08C", VA = "0xE2E08C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xE2E0DC", Offset = "0xE2E0DC", VA = "0xE2E0DC", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xE2E418", Offset = "0xE2E418", VA = "0xE2E418", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xE2E430", Offset = "0xE2E430", VA = "0xE2E430")]
		private void OnMenuSectorChange()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xE2E678", Offset = "0xE2E678", VA = "0xE2E678")]
		private void OnMenuVisibilityChanged(SectorTag menuTag, bool visible)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xE2DE28", Offset = "0xE2DE28", VA = "0xE2DE28")]
		private void SetupEvents()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xE2E0B4", Offset = "0xE2E0B4", VA = "0xE2E0B4", Slot = "39")]
		public void UpdateSelection()
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xE2E7C8", Offset = "0xE2E7C8", VA = "0xE2E7C8")]
		public void HidePauseMenus()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xE2E474", Offset = "0xE2E474", VA = "0xE2E474")]
		private bool IsAnyPauseMenuShown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xE2E5B0", Offset = "0xE2E5B0", VA = "0xE2E5B0")]
		private bool IsInPausableSector()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xE2E724", Offset = "0xE2E724", VA = "0xE2E724")]
		private void SetSelected(bool visible)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xE2E330", Offset = "0xE2E330", VA = "0xE2E330")]
		private void SetPaused(bool paused)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xE2E8F8", Offset = "0xE2E8F8", VA = "0xE2E8F8")]
		public GamePauseMenu()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class HandTiltMenuController : MonoBehaviour
	{
		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2158", Offset = "0x8C2158")]
		private VRPlayerHand hand;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRPullLocomotionController handLocomotion;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C21B4", Offset = "0x8C21B4")]
		[SerializeField]
		private Transform menuUpDirectionTransform;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float menuUpActivateAngleThreshold;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float menuUpDeactivateAngleThreshold;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float menuCameraActivateAngleThreshold;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float menuCameraDeactivateAngleThreshold;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float menuViewActivateAngleThreshold;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float menuViewDeactivateAngleThreshold;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2260", Offset = "0x8C2260")]
		[SerializeField]
		private Transform menuScaleTransform;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve menuScaleCurve;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float menuScaleSpeed;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BaseRaycaster[] menuRaycasters;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C22DC", Offset = "0x8C22DC")]
		[SerializeField]
		private SfxTrigger menuOpenSfx;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SfxTrigger menuCloseSfx;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2338", Offset = "0x8C2338")]
		[SerializeField]
		private UnityEvent onMenuOpen;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UnityEvent onMenuClose;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool menuActive;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool menuRaycastersActive;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float menuTransition;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 menuBaseScale;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AsyncFlag handsUIInactive;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private X15BuildSettings buildSettings;

		[Token(Token = "0x17000513")]
		public Vector3 DirectionMenu
		{
			[Token(Token = "0x6001C10")]
			[Address(RVA = "0xE337F0", Offset = "0xE337F0", VA = "0xE337F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000514")]
		public Vector3 DirectionUp
		{
			[Token(Token = "0x6001C11")]
			[Address(RVA = "0xE3380C", Offset = "0xE3380C", VA = "0xE3380C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000515")]
		public Vector3 DirectionCamera
		{
			[Token(Token = "0x6001C12")]
			[Address(RVA = "0xE33814", Offset = "0xE33814", VA = "0xE33814")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000516")]
		public Vector3 DirectionView
		{
			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xE33944", Offset = "0xE33944", VA = "0xE33944")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xE33A14", Offset = "0xE33A14", VA = "0xE33A14")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xE33BE8", Offset = "0xE33BE8", VA = "0xE33BE8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xE33C2C", Offset = "0xE33C2C", VA = "0xE33C2C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xE33CAC", Offset = "0xE33CAC", VA = "0xE33CAC")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xE34074", Offset = "0xE34074", VA = "0xE34074")]
		public bool CanUseMenu()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xE34028", Offset = "0xE34028", VA = "0xE34028")]
		private bool IsDirectionActive(Vector3 up, Vector3 direction, float activateAngleThreshold, float deactivateAngleThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xE343B0", Offset = "0xE343B0", VA = "0xE343B0")]
		private float GetMenuAngle(Vector3 up, Vector3 direction)
		{
			return default(float);
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xE33B08", Offset = "0xE33B08", VA = "0xE33B08")]
		private void SetMenuRaycastersActive(bool active)
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xE34414", Offset = "0xE34414", VA = "0xE34414")]
		public HandTiltMenuController()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class NotificationEntry : MonoBehaviour
	{
		[Token(Token = "0x2000472")]
		public enum State
		{
			[Token(Token = "0x400193E")]
			Shown,
			[Token(Token = "0x400193F")]
			Hidden,
			[Token(Token = "0x4001940")]
			Showing,
			[Token(Token = "0x4001941")]
			Hiding
		}

		[Serializable]
		[Token(Token = "0x2000473")]
		private struct TextLabelAlternative
		{
			[Token(Token = "0x4001942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorTag tag;

			[Token(Token = "0x4001943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizationKey textLabel;
		}

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2394", Offset = "0x8C2394")]
		[SerializeField]
		private NotificationType notificationType;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int notificationSize;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool notificationPreferShowDuplicate;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float showTime;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2410", Offset = "0x8C2410")]
		private Transform animationTransform;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 animationScaleAxis;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float animationTimeShow;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve animationCurveShow;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float animationTimeHide;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve animationCurveHide;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C24AC", Offset = "0x8C24AC")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text text;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private LocalizationKey defaultValueKey;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C2518", Offset = "0x8C2518")]
		[SerializeField]
		private LocalizationKey defaultTextLabel;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool textLabelNewline;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[SerializeField]
		private bool textIncludeValue;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[SerializeField]
		private bool spliceIntoText;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private List<TextLabelAlternative> textLabelAlternatives;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C25A4", Offset = "0x8C25A4")]
		[SerializeField]
		private ComponentLevelDisplay componentLevelDisplay;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C25F0", Offset = "0x8C25F0")]
		[SerializeField]
		private SfxTrigger notificationShownSfx;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private State state;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int currentValueInt;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private LocalizationKey currentValueKey;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string currentValueSplice;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float currentAnimation;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float shownStartTime;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RectTransform rectTransform;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder textBuilder;

		[Token(Token = "0x17000517")]
		public NotificationType NotificationType
		{
			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0x248AFC4", Offset = "0x248AFC4", VA = "0x248AFC4")]
			get
			{
				return default(NotificationType);
			}
		}

		[Token(Token = "0x17000518")]
		public int NotificationSize
		{
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0x248AFCC", Offset = "0x248AFCC", VA = "0x248AFCC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000519")]
		public bool NotificationPreferShowDuplicate
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0x248AFDC", Offset = "0x248AFDC", VA = "0x248AFDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700051A")]
		public bool IsHidden
		{
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x248AFE4", Offset = "0x248AFE4", VA = "0x248AFE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700051B")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x248AFF4", Offset = "0x248AFF4", VA = "0x248AFF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x248B0A8", Offset = "0x248B0A8", VA = "0x248B0A8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x248B0DC", Offset = "0x248B0DC", VA = "0x248B0DC")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x248B0FC", Offset = "0x248B0FC", VA = "0x248B0FC")]
		public void Show(int value)
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x248B178", Offset = "0x248B178", VA = "0x248B178")]
		public void Show(Sprite icon, int value)
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x248B1D0", Offset = "0x248B1D0", VA = "0x248B1D0")]
		public void Show(Sprite icon)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x248B21C", Offset = "0x248B21C", VA = "0x248B21C")]
		public void Show(LocalizationKey value)
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x248B294", Offset = "0x248B294", VA = "0x248B294")]
		public void Show(LocalizationKey value, string valueSplice)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x248B328", Offset = "0x248B328", VA = "0x248B328")]
		public void Show(Sprite icon, LocalizationKey value)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x248B3D8", Offset = "0x248B3D8", VA = "0x248B3D8")]
		public void Show(Sprite icon, LocalizationKey value, SectorTag tag)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x248B550", Offset = "0x248B550", VA = "0x248B550")]
		public void Show(Sprite icon, LocalizationKey value, SectorTag tag, int level)
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x248B10C", Offset = "0x248B10C", VA = "0x248B10C")]
		private void Show()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x248B4A0", Offset = "0x248B4A0", VA = "0x248B4A0")]
		private void Show(SectorTag tag)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x248BC3C", Offset = "0x248BC3C", VA = "0x248BC3C")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x248B690", Offset = "0x248B690", VA = "0x248B690")]
		public void UpdateEntry(float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x248BC58", Offset = "0x248BC58", VA = "0x248BC58")]
		private void UpdateAnimationScale(float t)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x248B7E4", Offset = "0x248B7E4", VA = "0x248B7E4")]
		private void UpdatedText(SectorTag tag)
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x248BCC4", Offset = "0x248BCC4", VA = "0x248BCC4")]
		private LocalizationKey GetTextLabel(SectorTag tag)
		{
			return default(LocalizationKey);
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x248BEB0", Offset = "0x248BEB0", VA = "0x248BEB0")]
		public NotificationEntry()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class NotificationEvents : MonoBehaviourSingleton<NotificationEvents>, IAsyncGameSetup
	{
		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NotificationMenu menu;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SectorTag[] notificationSectorCompleteDisableTags;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C265C", Offset = "0x8C265C")]
		private SfxTrigger sectorClearedSfx;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SfxTrigger enableSfx;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpaceShip playerShip;

		[Token(Token = "0x1700051C")]
		public SfxTrigger EnableSfx
		{
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x248BFE0", Offset = "0x248BFE0", VA = "0x248BFE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051D")]
		private bool DisplayCommonNotification
		{
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0x248BFE8", Offset = "0x248BFE8", VA = "0x248BFE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x248C1DC", Offset = "0x248C1DC", VA = "0x248C1DC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x248C260", Offset = "0x248C260", VA = "0x248C260", Slot = "6")]
		private YieldInstruction Game.Manager.IAsyncGameSetup.OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x248C914", Offset = "0x248C914", VA = "0x248C914", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x248C6FC", Offset = "0x248C6FC", VA = "0x248C6FC")]
		private void OnPlayerShipChanged(SpaceShip playerShip)
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x248CD30", Offset = "0x248CD30", VA = "0x248CD30")]
		public void OnGainScrap(int previousAmount, int newAmount)
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x248CD38", Offset = "0x248CD38", VA = "0x248CD38")]
		public void OnGainScrap(int amount)
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x248CE58", Offset = "0x248CE58", VA = "0x248CE58")]
		public void OnGainExperience(int previousAmount, int newAmount)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x248CE60", Offset = "0x248CE60", VA = "0x248CE60")]
		public void OnGainExperience(int amount)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x248CEA8", Offset = "0x248CEA8", VA = "0x248CEA8")]
		public void OnGainStoryKey(int previousAmount, int newAmount)
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x248CEB0", Offset = "0x248CEB0", VA = "0x248CEB0")]
		public void OnGainStoryKey(int amount)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x248CEF8", Offset = "0x248CEF8", VA = "0x248CEF8")]
		public void OnGainAmmo(int amount = 1)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x248CF18", Offset = "0x248CF18", VA = "0x248CF18")]
		public void OnGainScanData(int amount = 1)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x248CF38", Offset = "0x248CF38", VA = "0x248CF38")]
		private void OnPlayerShipPassiveAbilityChange(SpaceShip.AbilityChangeType type, ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x248CFEC", Offset = "0x248CFEC", VA = "0x248CFEC")]
		public void OnGainAbility(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x248D0D4", Offset = "0x248D0D4", VA = "0x248D0D4")]
		public void OnRemoveAbility(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x248D424", Offset = "0x248D424", VA = "0x248D424")]
		public void OnUpgradeAbility(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x248D4D0", Offset = "0x248D4D0", VA = "0x248D4D0")]
		private void OnSectorCompleteChange(bool cleared)
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x248D98C", Offset = "0x248D98C", VA = "0x248D98C")]
		public void OnSectorComplete()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x248D9F0", Offset = "0x248D9F0", VA = "0x248D9F0")]
		public void OnShipwreckScanned(string playerName)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x248DB20", Offset = "0x248DB20", VA = "0x248DB20")]
		public void OnLogicBombUnlocked()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x248DB40", Offset = "0x248DB40", VA = "0x248DB40")]
		public void OnTerminationTimerAborted()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x248DC24", Offset = "0x248DC24", VA = "0x248DC24")]
		public void ShowNotification(NotificationType type, int value = 1)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x248DC3C", Offset = "0x248DC3C", VA = "0x248DC3C")]
		public void ShowNotification(NotificationType type, LocalizationKey value)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x248DD48", Offset = "0x248DD48", VA = "0x248DD48")]
		public NotificationEvents()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public enum NotificationType
	{
		[Token(Token = "0x400194A")]
		None = 0,
		[Token(Token = "0x400194B")]
		GainScrap = 1,
		[Token(Token = "0x400194C")]
		GainExperience = 2,
		[Token(Token = "0x400194D")]
		GainStoryKey = 3,
		[Token(Token = "0x400194E")]
		GainAmmo = 10,
		[Token(Token = "0x400194F")]
		GainScanData = 20,
		[Token(Token = "0x4001950")]
		GainAbility = 30,
		[Token(Token = "0x4001951")]
		GainDefect = 31,
		[Token(Token = "0x4001952")]
		RemoveAbility = 40,
		[Token(Token = "0x4001953")]
		RemoveDefect = 41,
		[Token(Token = "0x4001954")]
		RecycleAbility = 42,
		[Token(Token = "0x4001955")]
		UpgradeAbility = 50,
		[Token(Token = "0x4001956")]
		SectorComplete = 100,
		[Token(Token = "0x4001957")]
		Shipwreck = 200,
		[Token(Token = "0x4001958")]
		LogicBomb = 250,
		[Token(Token = "0x4001959")]
		ThreatLevels = 255,
		[Token(Token = "0x400195A")]
		TerminationTimerAborted = 260,
		[Token(Token = "0x400195B")]
		EnableBlaster = 300,
		[Token(Token = "0x400195C")]
		EnableLaser = 301,
		[Token(Token = "0x400195D")]
		EnableMissiles = 302,
		[Token(Token = "0x400195E")]
		EnableShipMovement = 303,
		[Token(Token = "0x400195F")]
		EnableAsteroidTargeting = 304,
		[Token(Token = "0x4001960")]
		EnableScanner = 305
	}
	[Token(Token = "0x2000476")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8AA920", Offset = "0x8AA920")]
	public class NotificationMenu : MonoBehaviourSingleton<NotificationMenu>
	{
		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA980", Offset = "0x8AA980")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int value;

			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xEE01F4", Offset = "0xEE01F4", VA = "0xEE01F4")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001C68")]
			[Address(RVA = "0xEE01FC", Offset = "0xEE01FC", VA = "0xEE01FC")]
			internal void <Show>b__0(NotificationEntry e)
			{
			}
		}

		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA990", Offset = "0x8AA990")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite icon;

			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int value;

			[Token(Token = "0x6001C69")]
			[Address(RVA = "0xEE0220", Offset = "0xEE0220", VA = "0xEE0220")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0xEE0228", Offset = "0xEE0228", VA = "0xEE0228")]
			internal void <Show>b__0(NotificationEntry e)
			{
			}
		}

		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA9A0", Offset = "0x8AA9A0")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite icon;

			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0xEE0250", Offset = "0xEE0250", VA = "0xEE0250")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0xEE0258", Offset = "0xEE0258", VA = "0xEE0258")]
			internal void <Show>b__0(NotificationEntry e)
			{
			}
		}

		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA9B0", Offset = "0x8AA9B0")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizationKey value;

			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0xEE027C", Offset = "0xEE027C", VA = "0xEE027C")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xEE0284", Offset = "0xEE0284", VA = "0xEE0284")]
			internal void <Show>b__0(NotificationEntry e)
			{
			}
		}

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA9C0", Offset = "0x8AA9C0")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizationKey value;

			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string valueSplice;

			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xEE02A8", Offset = "0xEE02A8", VA = "0xEE02A8")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xEE02B0", Offset = "0xEE02B0", VA = "0xEE02B0")]
			internal void <Show>b__0(NotificationEntry e)
			{
			}
		}

		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA9D0", Offset = "0x8AA9D0")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite icon;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizationKey value;

			[Token(Token = "0x6001C71")]
			[Address(RVA = "0xEE02D8", Offset = "0xEE02D8", VA = "0xEE02D8")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xEE02E0", Offset = "0xEE02E0", VA = "0xEE02E0")]
			internal void <Show>b__0(NotificationEntry e)
			{
			}
		}

		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA9E0", Offset = "0x8AA9E0")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite icon;

			[Token(Token = "0x4001974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizationKey value;

			[Token(Token = "0x4001975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SectorTag tag;

			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xEE0308", Offset = "0xEE0308", VA = "0xEE0308")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xEE0310", Offset = "0xEE0310", VA = "0xEE0310")]
			internal void <Show>b__0(NotificationEntry e)
			{
			}
		}

		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA9F0", Offset = "0x8AA9F0")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite icon;

			[Token(Token = "0x4001977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizationKey value;

			[Token(Token = "0x4001978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SectorTag tag;

			[Token(Token = "0x4001979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int level;

			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xEE033C", Offset = "0xEE033C", VA = "0xEE033C")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xEE0344", Offset = "0xEE0344", VA = "0xEE0344")]
			internal void <Show>b__0(NotificationEntry e)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA00", Offset = "0x8AAA00")]
		private sealed class <>c
		{
			[Token(Token = "0x400197A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400197B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<NotificationEntry> <>9__25_0;

			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xEE01D0", Offset = "0xEE01D0", VA = "0xEE01D0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xEE01D8", Offset = "0xEE01D8", VA = "0xEE01D8")]
			internal bool <Show>b__25_0(NotificationEntry p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001961")]
		private const int OFFSET_NOTIFICATION_INDEX = 10;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform entryParent;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform entryParentMenuShownPosition;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform entryParentMenuHiddenPosition;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 entrySpacing;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<NotificationEntry> entries;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HashSet<NotificationType> suppressNext;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MenuRoot menuRoot;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<NotificationEntry> shownEntries;

		[Token(Token = "0x1700051E")]
		public MenuRoot MenuRoot
		{
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0x248DDC0", Offset = "0x248DDC0", VA = "0x248DDC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051F")]
		public int ShownEntryCount
		{
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0x248DE74", Offset = "0x248DE74", VA = "0x248DE74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x248DF60", Offset = "0x248DF60", VA = "0x248DF60", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x248E0B0", Offset = "0x248E0B0", VA = "0x248E0B0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x248E1D8", Offset = "0x248E1D8", VA = "0x248E1D8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x248E300", Offset = "0x248E300", VA = "0x248E300")]
		private void OnMenuVisibilityChanged(SectorTag menuTag, bool visible)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x248CD80", Offset = "0x248CD80", VA = "0x248CD80")]
		public void Show(NotificationType type, int value = 1)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x248E93C", Offset = "0x248E93C", VA = "0x248E93C")]
		public void Show(NotificationType type, Sprite icon, int value)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x248EA30", Offset = "0x248EA30", VA = "0x248EA30")]
		public void Show(NotificationType type, Sprite icon)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x248DC54", Offset = "0x248DC54", VA = "0x248DC54")]
		public void Show(NotificationType type, LocalizationKey value)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x248DA18", Offset = "0x248DA18", VA = "0x248DA18")]
		public void Show(NotificationType type, LocalizationKey value, string valueSplice)
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x248EB14", Offset = "0x248EB14", VA = "0x248EB14")]
		public void Show(NotificationType type, Sprite icon, LocalizationKey value)
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x248D1BC", Offset = "0x248D1BC", VA = "0x248D1BC")]
		public void Show(NotificationType type, Sprite icon, LocalizationKey value, SectorTag tag)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x248D2E8", Offset = "0x248D2E8", VA = "0x248D2E8")]
		public void Show(NotificationType type, Sprite icon, LocalizationKey value, SectorTag tag, int level)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x248E404", Offset = "0x248E404", VA = "0x248E404")]
		private void Show(NotificationType type, Action<NotificationEntry> showAction)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x248F468", Offset = "0x248F468", VA = "0x248F468")]
		public void Hide(NotificationType type)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x248F4B8", Offset = "0x248F4B8", VA = "0x248F4B8")]
		public void HideAll()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x248F5B4", Offset = "0x248F5B4", VA = "0x248F5B4")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x248E304", Offset = "0x248E304", VA = "0x248E304")]
		private void UpdateEntryParentPosition()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x248F17C", Offset = "0x248F17C", VA = "0x248F17C")]
		public void AddEntryInFirstEmptyShownIndex(NotificationEntry entry, out int startIndex, out int endIndex, int offsetIndex = 0)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x248EE24", Offset = "0x248EE24", VA = "0x248EE24")]
		private bool TryGetEntry(NotificationType type, out NotificationEntry entry, [System.Runtime.InteropServices.Optional] Predicate<NotificationEntry> condition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x248EC1C", Offset = "0x248EC1C", VA = "0x248EC1C")]
		private bool TryGetShownEntry(NotificationType type, out NotificationEntry entry, [System.Runtime.InteropServices.Optional] Predicate<NotificationEntry> condition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x248F7FC", Offset = "0x248F7FC", VA = "0x248F7FC")]
		public void SuppressNext(NotificationType notificationType)
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x248F860", Offset = "0x248F860", VA = "0x248F860")]
		public NotificationMenu()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public class NotificationOverridePosition : MonoBehaviour
	{
		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool includeAllNotificationTypes;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NotificationType[] includedNotificationTypes;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<NotificationOverridePosition> overridePositions;

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x248EFCC", Offset = "0x248EFCC", VA = "0x248EFCC")]
		public static bool TryGetNotificationTypePositionOverride(NotificationType type, out Transform position)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x248FA4C", Offset = "0x248FA4C", VA = "0x248FA4C")]
		public bool IncludeNotificationType(NotificationType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x248FABC", Offset = "0x248FABC", VA = "0x248FABC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x248FB48", Offset = "0x248FB48", VA = "0x248FB48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x248FBD4", Offset = "0x248FBD4", VA = "0x248FBD4")]
		public NotificationOverridePosition()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class PassiveAbilityDetailsDisplay : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000482")]
		public struct LevelDisplay
		{
			[Token(Token = "0x4001989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UiToggleSprite toggle;

			[Token(Token = "0x400198A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TMP_Text levelText;

			[Token(Token = "0x400198B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text effectText;

			[Token(Token = "0x400198C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject vfxObject;
		}

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2728", Offset = "0x8C2728")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text title;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text description;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text flavour;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C27A4", Offset = "0x8C27A4")]
		private TMP_Text levelSummary;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LevelDisplay[] levels;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject upgradesParent;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2810", Offset = "0x8C2810")]
		[SerializeField]
		private Image componentBackground;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Sprite normalBackgroundSprite;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Sprite defectBackgroundSprite;

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x2492018", Offset = "0x2492018", VA = "0x2492018")]
		public void DisplayPassiveAbility(ShipAbilityPassive ability, int level = -1, bool isUpgrade = false)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x2492844", Offset = "0x2492844", VA = "0x2492844")]
		public PassiveAbilityDetailsDisplay()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class PlayerShipHealthShieldBars : MonoBehaviour
	{
		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ExpandSegmentBar healthBar;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ExpandSegmentBar shieldBar;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SpaceShip playerShip;

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xCE3494", Offset = "0xCE3494", VA = "0xCE3494")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xCE3954", Offset = "0xCE3954", VA = "0xCE3954")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xCE3694", Offset = "0xCE3694", VA = "0xCE3694")]
		private void AddPlayerShipEvents()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xCE3980", Offset = "0xCE3980", VA = "0xCE3980")]
		private void RemovePlayerShipEvents([System.Runtime.InteropServices.Optional] IDamagable cause, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> buffSourceTags)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xCE3C40", Offset = "0xCE3C40", VA = "0xCE3C40")]
		private void OnPlayerShipMaxHealthChange(float previousValue, float newValue)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xCE3C60", Offset = "0xCE3C60", VA = "0xCE3C60")]
		private void OnPlayerShipHealthChange(float previousValue, float newValue)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xCE3C80", Offset = "0xCE3C80", VA = "0xCE3C80")]
		private void OnPlayerShipMaxShieldChange(float previousValue, float newValue)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xCE3CA0", Offset = "0xCE3CA0", VA = "0xCE3CA0")]
		private void OnPlayerShipShieldChange(float previousValue, float newValue)
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xCE3CC0", Offset = "0xCE3CC0", VA = "0xCE3CC0")]
		public PlayerShipHealthShieldBars()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class QueuedRewardsMenu : MonoBehaviour
	{
		[Token(Token = "0x2000485")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA10", Offset = "0x8AAA10")]
		private sealed class <ShowQueuedRewardsRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400199A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400199B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400199C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QueuedRewardsMenu <>4__this;

			[Token(Token = "0x17000520")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C95")]
				[Address(RVA = "0xD6F1E0", Offset = "0xD6F1E0", VA = "0xD6F1E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000521")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C97")]
				[Address(RVA = "0xD6F228", Offset = "0xD6F228", VA = "0xD6F228", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xD6ED8C", Offset = "0xD6ED8C", VA = "0xD6ED8C")]
			[DebuggerHidden]
			public <ShowQueuedRewardsRoutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xD6EDB8", Offset = "0xD6EDB8", VA = "0xD6EDB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C94")]
			[Address(RVA = "0xD6EDBC", Offset = "0xD6EDBC", VA = "0xD6EDBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C96")]
			[Address(RVA = "0xD6F1E8", Offset = "0xD6F1E8", VA = "0xD6F1E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuRoot menuRoot;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C28AC", Offset = "0x8C28AC")]
		[SerializeField]
		private GameObject storyKeyRoot;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C28F8", Offset = "0x8C28F8")]
		[SerializeField]
		private GameObject shipUnlockRoot;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI unlockShipText;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LocalizationKey shipUnlockedKey;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2964", Offset = "0x8C2964")]
		private float delayBetweenRewards;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool delayBetweenRewardsHideNotifications;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float delayAfterFinalReward;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool delayAfterFinalRewardHideNotifications;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private QueuedRewardEntry shownReward;

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xCE9874", Offset = "0xCE9874", VA = "0xCE9874")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xCE98EC", Offset = "0xCE98EC", VA = "0xCE98EC")]
		public void ClaimShownReward()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xCE9AB0", Offset = "0xCE9AB0", VA = "0xCE9AB0")]
		public void ShowQueuedRewards()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xCE9B08", Offset = "0xCE9B08", VA = "0xCE9B08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D2F70", Offset = "0x8D2F70")]
		private IEnumerator ShowQueuedRewardsRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xCE9B80", Offset = "0xCE9B80", VA = "0xCE9B80")]
		private bool ShowReward(QueuedRewardEntry reward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xCE9878", Offset = "0xCE9878", VA = "0xCE9878")]
		private void HideReward()
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xCE9D04", Offset = "0xCE9D04", VA = "0xCE9D04")]
		public QueuedRewardsMenu()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class SaveFileEntry : MonoBehaviour
	{
		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C29E0", Offset = "0x8C29E0")]
		private UiButton selectButton;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2A2C", Offset = "0x8C2A2C")]
		[SerializeField]
		private TMP_Text titleText;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text descriptionText;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2A88", Offset = "0x8C2A88")]
		private LocalizationKey titleKey;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizationKey descriptionEmptyKey;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LocalizationKey descriptionRunCountKey;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LocalizationKey descriptionPlayTimeKey;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2B04", Offset = "0x8C2B04")]
		private bool <IsEmpty>k__BackingField;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder DescriptionBuilder;

		[Token(Token = "0x17000522")]
		public bool IsEmpty
		{
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xCF7704", Offset = "0xCF7704", VA = "0xCF7704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3020", Offset = "0x8D3020")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xCF770C", Offset = "0xCF770C", VA = "0xCF770C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3030", Offset = "0x8D3030")]
			private set
			{
			}
		}

		[Token(Token = "0x17000523")]
		public bool IsSelected
		{
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0xCF7718", Offset = "0xCF7718", VA = "0xCF7718")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0xCF7734", Offset = "0xCF7734", VA = "0xCF7734")]
			set
			{
			}
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xCF7754", Offset = "0xCF7754", VA = "0xCF7754")]
		public void Setup(int saveFileIndex)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xCF7C14", Offset = "0xCF7C14", VA = "0xCF7C14")]
		public SaveFileEntry()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class SaveFileMenu : MonoBehaviour
	{
		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2B14", Offset = "0x8C2B14")]
		private SaveFileEntry[] saveFileEntries;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2B60", Offset = "0x8C2B60")]
		[SerializeField]
		private UiButton startButton;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text startButtonText;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UiButton deleteButton;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2BCC", Offset = "0x8C2BCC")]
		private LocalizationKey startButtonNewFileKey;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizationKey startButtonOpenFileKey;

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xCF7C94", Offset = "0xCF7C94", VA = "0xCF7C94")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xCF7DB4", Offset = "0xCF7DB4", VA = "0xCF7DB4")]
		public void SelectSaveFileEntry(int index)
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xCF7FB4", Offset = "0xCF7FB4", VA = "0xCF7FB4")]
		public void StartSelectedFile()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xCF8308", Offset = "0xCF8308", VA = "0xCF8308")]
		public void DeleteSelectedFile()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xCF84F0", Offset = "0xCF84F0", VA = "0xCF84F0")]
		public SaveFileMenu()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class ScrollSprite : MonoBehaviour
	{
		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite referenceSprite;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image scrollImage;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float scrollSpeed;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform rectTransform;

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xCFB6D0", Offset = "0xCFB6D0", VA = "0xCFB6D0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xCFB810", Offset = "0xCFB810", VA = "0xCFB810")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xCFB9D0", Offset = "0xCFB9D0", VA = "0xCFB9D0")]
		public ScrollSprite()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class SectorMapConnection : SectorMapSelectable
	{
		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2C58", Offset = "0x8C2C58")]
		private SectorMapNode <StartNode>k__BackingField;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2C68", Offset = "0x8C2C68")]
		private SectorMapNode <EndNode>k__BackingField;

		[Token(Token = "0x17000524")]
		public SectorMapNode StartNode
		{
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0xD8A294", Offset = "0xD8A294", VA = "0xD8A294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3040", Offset = "0x8D3040")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xD8A29C", Offset = "0xD8A29C", VA = "0xD8A29C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3050", Offset = "0x8D3050")]
			private set
			{
			}
		}

		[Token(Token = "0x17000525")]
		public SectorMapNode EndNode
		{
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0xD8A2A4", Offset = "0xD8A2A4", VA = "0xD8A2A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3060", Offset = "0x8D3060")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0xD8A2AC", Offset = "0xD8A2AC", VA = "0xD8A2AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3070", Offset = "0x8D3070")]
			private set
			{
			}
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xD8A2B4", Offset = "0xD8A2B4", VA = "0xD8A2B4")]
		public void Setup(SectorMapNode startNode, SectorMapNode endNode, Vector3 rowDirection)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xD8A504", Offset = "0xD8A504", VA = "0xD8A504")]
		public SectorMapConnection()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class SectorMapElement : SectorMapSelectable
	{
		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2C78", Offset = "0x8C2C78")]
		[SerializeField]
		private SectorTag[] requiredTags;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2CC4", Offset = "0x8C2CC4")]
		[SerializeField]
		private LocalizationKey description;

		[Token(Token = "0x17000526")]
		public IReadOnlyList<SectorTag> RequiredTags
		{
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0xD8AAE8", Offset = "0xD8AAE8", VA = "0xD8AAE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000527")]
		public LocalizationKey Description
		{
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0xD8AAF0", Offset = "0xD8AAF0", VA = "0xD8AAF0")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xD8AAFC", Offset = "0xD8AAFC", VA = "0xD8AAFC")]
		public bool TagMatch(IReadOnlyList<SectorTagAmount> tags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xD8AB8C", Offset = "0xD8AB8C", VA = "0xD8AB8C")]
		public SectorMapElement()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class SectorMapMenu : MonoBehaviour, IAsyncMenuSetup
	{
		[Token(Token = "0x200048C")]
		private struct SectorMapRegionScreen
		{
			[Token(Token = "0x40019CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorMapRegion root;

			[Token(Token = "0x40019D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<SectorMapRowContainer> rows;

			[Token(Token = "0x40019D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorMapNode startNode;

			[Token(Token = "0x40019D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorMapNode endNode;

			[Token(Token = "0x40019D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<SectorMapNode> hidden;

			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xD7E6DC", Offset = "0xD7E6DC", VA = "0xD7E6DC")]
			public SectorMapRegionScreen(SectorMapRegion root)
			{
			}
		}

		[Token(Token = "0x200048D")]
		private class SectorMapRowContainer
		{
			[Token(Token = "0x40019D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x40019D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<SectorMapNode> nodes;

			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0xD7E7E0", Offset = "0xD7E7E0", VA = "0xD7E7E0")]
			public SectorMapRowContainer(int index)
			{
			}
		}

		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA20", Offset = "0x8AAA20")]
		private sealed class <RegenerateRoutine>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorMapMenu <>4__this;

			[Token(Token = "0x40019D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SectorMapResult map;

			[Token(Token = "0x40019DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Func<bool> yieldCondition;

			[Token(Token = "0x40019DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__2;

			[Token(Token = "0x40019DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator <e>5__3;

			[Token(Token = "0x1700052A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CD2")]
				[Address(RVA = "0xD7EC24", Offset = "0xD7EC24", VA = "0xD7EC24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CD4")]
				[Address(RVA = "0xD7EC6C", Offset = "0xD7EC6C", VA = "0xD7EC6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xD7E8C4", Offset = "0xD7E8C4", VA = "0xD7E8C4")]
			[DebuggerHidden]
			public <RegenerateRoutine>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xD7E8F0", Offset = "0xD7E8F0", VA = "0xD7E8F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xD7E8F4", Offset = "0xD7E8F4", VA = "0xD7E8F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0xD7EC2C", Offset = "0xD7EC2C", VA = "0xD7EC2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA30", Offset = "0x8AAA30")]
		private sealed class <GenerateRegionScreen>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorMapMenu <>4__this;

			[Token(Token = "0x40019E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Game.Sector.Map.SectorMapRegion region;

			[Token(Token = "0x40019E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isFirstRegion;

			[Token(Token = "0x40019E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool isLastRegion;

			[Token(Token = "0x40019E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Func<bool> yieldCondition;

			[Token(Token = "0x40019E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int regionIndex;

			[Token(Token = "0x40019E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private WrappedRandom <random>5__2;

			[Token(Token = "0x40019E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private SectorMapRegion <regionRoot>5__3;

			[Token(Token = "0x40019E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private SectorMapRegionScreen <regionScreen>5__4;

			[Token(Token = "0x40019E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Rect <regionRootRect>5__5;

			[Token(Token = "0x40019E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<float> <rowSpacings>5__6;

			[Token(Token = "0x40019EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private float <rowOffset>5__7;

			[Token(Token = "0x40019EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float <rowSpaceSum>5__8;

			[Token(Token = "0x40019EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private int <i>5__9;

			[Token(Token = "0x40019ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private SectorMapNodeRow <row>5__10;

			[Token(Token = "0x40019EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private SectorMapRowContainer <rowContainer>5__11;

			[Token(Token = "0x40019EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private float <nodeSpace>5__12;

			[Token(Token = "0x40019F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private float <nodeOffset>5__13;

			[Token(Token = "0x40019F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int <j>5__14;

			[Token(Token = "0x40019F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private Game.Sector.Map.SectorMapNode <node>5__15;

			[Token(Token = "0x40019F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private SectorMapNode <nodeInstance>5__16;

			[Token(Token = "0x1700052C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CD8")]
				[Address(RVA = "0xD7E874", Offset = "0xD7E874", VA = "0xD7E874", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CDA")]
				[Address(RVA = "0xD7E8BC", Offset = "0xD7E8BC", VA = "0xD7E8BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0xD7D760", Offset = "0xD7D760", VA = "0xD7D760")]
			[DebuggerHidden]
			public <GenerateRegionScreen>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0xD7D78C", Offset = "0xD7D78C", VA = "0xD7D78C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0xD7D790", Offset = "0xD7D790", VA = "0xD7D790", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xD7E87C", Offset = "0xD7E87C", VA = "0xD7E87C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2D10", Offset = "0x8C2D10")]
		[SerializeField]
		private Transform regionRootParent;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SectorMapRegion regionRootPrefab;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SectorMapConnection connectionPrefab;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SectorMapNode startNodePrefab;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SectorMapNode endNodePrefab;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SectorMapNode unknownNodePrefab;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SectorMapNode[] nodePrefabPrioList;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SectorMapNodeEffect[] nodeEffectPrioList;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2DCC", Offset = "0x8C2DCC")]
		private Vector3 regionDirection;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Vector3 rowDirection;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Vector3 depthDirection;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float rowSpacing;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float nodeSpacing;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float nodeFlatOffsetMax;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector2 nodeDepthOffsetMax;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2E78", Offset = "0x8C2E78")]
		[SerializeField]
		private TMP_Text hoverNodeDescriptionText;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2EC4", Offset = "0x8C2EC4")]
		[SerializeField]
		private SectorMapProgressionBar progressionBar;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool generated;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EmptyMonoBehaviour generateRoutine;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private SectorMapIndex shownIndex;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool showNextRegion;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SectorMapNode currentNode;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SectorMapNode hoveredNode;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SectorMapNode selectedNode;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<SectorMapRegionScreen> regions;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<SectorMapNode> shownNodes;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool accessAllNodes;

		[Token(Token = "0x17000528")]
		public SectorMapNode SelectedNode
		{
			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0xD8C4B0", Offset = "0xD8C4B0", VA = "0xD8C4B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000529")]
		public SectorMapNode HoveredNode
		{
			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0xD8C4B8", Offset = "0xD8C4B8", VA = "0xD8C4B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xD8C4C0", Offset = "0xD8C4C0", VA = "0xD8C4C0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xD8D4CC", Offset = "0xD8D4CC", VA = "0xD8D4CC")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xD8D524", Offset = "0xD8D524", VA = "0xD8D524")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xD8D558", Offset = "0xD8D558", VA = "0xD8D558", Slot = "4")]
		public YieldInstruction OnMenuSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xD8CA40", Offset = "0xD8CA40", VA = "0xD8CA40")]
		public void Show(SectorMapIndex index)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xD8E5DC", Offset = "0xD8E5DC", VA = "0xD8E5DC")]
		public void ShowNextRegion()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xD8E5FC", Offset = "0xD8E5FC", VA = "0xD8E5FC")]
		public void SkipToNextRegion()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xD8E734", Offset = "0xD8E734", VA = "0xD8E734")]
		public void SkipToPreviousRegion()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xD8DE8C", Offset = "0xD8DE8C", VA = "0xD8DE8C")]
		private void ShowNodeAndConnections(SectorMapNode node, SectorMapSelectableState stateDefault, bool setConnectionNodeState)
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xD8DE98", Offset = "0xD8DE98", VA = "0xD8DE98")]
		private void ShowNodeAndConnections(SectorMapNode node, SectorMapSelectableState nodeState, SectorMapSelectableState connectionStateDefault, bool setConnectionNodeState)
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xD8DA30", Offset = "0xD8DA30", VA = "0xD8DA30")]
		private void ShowNodeAndConnections(SectorMapNode node, SectorMapSelectableState nodeState, SectorMapSelectableState connectionStateDefault, SectorMapIndex currentIndex, SectorMapIndex nextHistoryIndex, bool setConnectionNodeState)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xD8E86C", Offset = "0xD8E86C", VA = "0xD8E86C")]
		public void TrySetSelectedAndHoveredNode(SectorMapNode node)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xD8EA48", Offset = "0xD8EA48", VA = "0xD8EA48")]
		public void ClearHoveredNode()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xD8EB50", Offset = "0xD8EB50", VA = "0xD8EB50")]
		public void ClearSelectedNode()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xD8E4BC", Offset = "0xD8E4BC", VA = "0xD8E4BC")]
		public void SetNodesAllAccess()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xD8D990", Offset = "0xD8D990", VA = "0xD8D990")]
		private Coroutine Regenerate(SectorMapResult map, Func<bool> yieldCondition)
		{
			return null;
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xD8EBF0", Offset = "0xD8EBF0", VA = "0xD8EBF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3080", Offset = "0x8D3080")]
		private IEnumerator RegenerateRoutine(SectorMapResult map, Func<bool> yieldCondition)
		{
			return null;
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xD8EC98", Offset = "0xD8EC98", VA = "0xD8EC98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D30E0", Offset = "0x8D30E0")]
		private IEnumerator GenerateRegionScreen(Game.Sector.Map.SectorMapRegion region, int regionIndex, bool isFirstRegion, bool isLastRegion, Func<bool> yieldCondition)
		{
			return null;
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xD8ED70", Offset = "0xD8ED70", VA = "0xD8ED70")]
		private SectorMapNode SelectNode(IReadOnlyList<SectorTagAmount> tags)
		{
			return null;
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xD8EE4C", Offset = "0xD8EE4C", VA = "0xD8EE4C")]
		private float CalculateRegionWidth(Game.Sector.Map.SectorMapRegion region, bool isFirstRegion, bool isLastRegion, float rowSpaceDefault, [System.Runtime.InteropServices.Optional] List<float> rowSpacings)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xD8EF90", Offset = "0xD8EF90", VA = "0xD8EF90")]
		private float CalculateRowSpacing(Game.Sector.Map.SectorMapRegion region, int rowIndex, float rowSpaceDefault, bool isFirstRegion, ref float additionalSpacingPrevious)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xD8F1A0", Offset = "0xD8F1A0", VA = "0xD8F1A0")]
		private Vector3 CalculateNodePosition(WrappedRandom random, int nodeIndex, float rowOffset, float nodeOffset, float rowSpaceSum, float nodeSpacing, float randomOffsetFactor)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xD8D7EC", Offset = "0xD8D7EC", VA = "0xD8D7EC")]
		private void Clear()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xD8C5B8", Offset = "0xD8C5B8", VA = "0xD8C5B8")]
		private void TryHideNodes()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xD8F2EC", Offset = "0xD8F2EC", VA = "0xD8F2EC")]
		private void TryHideRegionNodes(SectorMapRegionScreen regionScreen, int hiddenNodesTargetCount, WrappedRandom random)
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xD8FA18", Offset = "0xD8FA18", VA = "0xD8FA18")]
		public SectorMapMenu()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class SectorMapNode : SectorMapElement, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x2000491")]
		public enum SectorMapNodeAction
		{
			[Token(Token = "0x4001A05")]
			NextSector = 0,
			[Token(Token = "0x4001A06")]
			EndRunSuccess = 10,
			[Token(Token = "0x4001A07")]
			EndRunFailure = 11
		}

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2F10", Offset = "0x8C2F10")]
		private Transform effectParent;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool canCreateUnknownVariant;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject[] nodeHighlightEnabledObjects;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject[] nodeHighlightDisabledObjects;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2F8C", Offset = "0x8C2F8C")]
		[SerializeField]
		private float additionalRowSpacingBefore;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float additionalRowSpacingAfter;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float randomOffsetFactor;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2FF8", Offset = "0x8C2FF8")]
		[SerializeField]
		private bool createConnectionsIn;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		[SerializeField]
		private bool createConnectionsOut;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3054", Offset = "0x8C3054")]
		private SectorMapNodeAction nodeAction;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private SectorTransitionVariant nodeTransition;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C30B0", Offset = "0x8C30B0")]
		private SectorMapIndex <Index>k__BackingField;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C30C0", Offset = "0x8C30C0")]
		private SectorMapNode <UnknownNode>k__BackingField;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<SectorMapNodeEffect> effects;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<SectorMapConnection> connections;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SectorMapMenu menu;

		[Token(Token = "0x1700052E")]
		public float AdditionalRowSpacingBefore
		{
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0xD8FB24", Offset = "0xD8FB24", VA = "0xD8FB24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700052F")]
		public float AdditionalRowSpacingAfter
		{
			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0xD8FB2C", Offset = "0xD8FB2C", VA = "0xD8FB2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000530")]
		public float RandomOffsetFactor
		{
			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0xD8FB34", Offset = "0xD8FB34", VA = "0xD8FB34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000531")]
		public bool CreateConnectionsIn
		{
			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0xD8FB3C", Offset = "0xD8FB3C", VA = "0xD8FB3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000532")]
		public bool CreateConnectionsOut
		{
			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0xD8FB44", Offset = "0xD8FB44", VA = "0xD8FB44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000533")]
		public SectorMapIndex Index
		{
			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0xD8FB4C", Offset = "0xD8FB4C", VA = "0xD8FB4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D31E0", Offset = "0x8D31E0")]
			get
			{
				return default(SectorMapIndex);
			}
			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0xD8FB5C", Offset = "0xD8FB5C", VA = "0xD8FB5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D31F0", Offset = "0x8D31F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000534")]
		public SectorMapNode UnknownNode
		{
			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0xD8FB68", Offset = "0xD8FB68", VA = "0xD8FB68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3200", Offset = "0x8D3200")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0xD8FB70", Offset = "0xD8FB70", VA = "0xD8FB70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3210", Offset = "0x8D3210")]
			set
			{
			}
		}

		[Token(Token = "0x17000535")]
		public IReadOnlyList<SectorMapNodeEffect> Effects
		{
			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xD8FB78", Offset = "0xD8FB78", VA = "0xD8FB78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000536")]
		public IReadOnlyList<SectorMapConnection> Connections
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xD8FB80", Offset = "0xD8FB80", VA = "0xD8FB80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xD8FB88", Offset = "0xD8FB88", VA = "0xD8FB88")]
		public void Setup(SectorMapMenu menu, [System.Runtime.InteropServices.Optional] SectorMapIndex index)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xD8FD00", Offset = "0xD8FD00", VA = "0xD8FD00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xD8FDE4", Offset = "0xD8FDE4", VA = "0xD8FDE4")]
		public SectorMapNodeEffect CreateEffect(SectorMapNodeEffect effectPrefab)
		{
			return null;
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xD8FEF8", Offset = "0xD8FEF8", VA = "0xD8FEF8")]
		public SectorMapConnection CreateConnection(SectorMapConnection connectionPrefab, Transform connectionParent, SectorMapNode endNode, Vector3 rowDirection)
		{
			return null;
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xD8EA44", Offset = "0xD8EA44", VA = "0xD8EA44")]
		public void SetSelected(bool selected)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xD9008C", Offset = "0xD9008C", VA = "0xD9008C", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xD900A8", Offset = "0xD900A8", VA = "0xD900A8", Slot = "6")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xD9013C", Offset = "0xD9013C", VA = "0xD9013C", Slot = "4")]
		public override void SetSelectionState(SectorMapSelectableState state)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xD90368", Offset = "0xD90368", VA = "0xD90368")]
		public void ActivateNode()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xD90570", Offset = "0xD90570", VA = "0xD90570")]
		public static void ActivateNode(SectorMapNodeAction action, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTagAmount> overrideTags)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xD909D0", Offset = "0xD909D0", VA = "0xD909D0")]
		public static void ActivateNode(SectorMapNodeAction action, SectorTransitionVariant transitionVariant = SectorTransitionVariant.SectorTravel, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTagAmount> overrideTags)
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xD906FC", Offset = "0xD906FC", VA = "0xD906FC")]
		public static bool TryGetNextSectorNodeIndex(out SectorMapIndex index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xD8F7A0", Offset = "0xD8F7A0", VA = "0xD8F7A0")]
		public void CreateUnknownVariant(SectorMapNode unknownNodePrefab)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xD8F680", Offset = "0xD8F680", VA = "0xD8F680")]
		public void DestroyUnknownVariant()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xD8FBC8", Offset = "0xD8FBC8", VA = "0xD8FBC8")]
		private void UpdateNodeHighlight()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xD90CC4", Offset = "0xD90CC4", VA = "0xD90CC4")]
		public SectorMapNode()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class SectorMapNodeEffect : SectorMapElement
	{
		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xD9276C", Offset = "0xD9276C", VA = "0xD9276C")]
		public SectorMapNodeEffect()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class SectorMapRegion : MonoBehaviour
	{
		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform nodeParent;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform connectionParent;

		[Token(Token = "0x17000537")]
		public RectTransform NodeParent
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0xD941A4", Offset = "0xD941A4", VA = "0xD941A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000538")]
		public RectTransform ConnectionParent
		{
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xD941AC", Offset = "0xD941AC", VA = "0xD941AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xD941B4", Offset = "0xD941B4", VA = "0xD941B4")]
		public SectorMapRegion()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public enum SectorMapSelectableState
	{
		[Token(Token = "0x4001A0B")]
		Future,
		[Token(Token = "0x4001A0C")]
		Next,
		[Token(Token = "0x4001A0D")]
		NextHovered,
		[Token(Token = "0x4001A0E")]
		Current,
		[Token(Token = "0x4001A0F")]
		PreviousPicked,
		[Token(Token = "0x4001A10")]
		PreviousNonPicked
	}
	[Token(Token = "0x2000495")]
	public class SectorMapSelectable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000496")]
		public struct SelectableVisibility
		{
			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool hideSelectableFuture;

			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool hideSelectableNext;

			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool hideSelectableNextHovered;

			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public bool hideSelectableCurrent;

			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool hideSelectablePreviousPicked;

			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool hideSelectablePreviousNonPicked;

			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0xD7F090", Offset = "0xD7F090", VA = "0xD7F090")]
			public bool IsHidden(SectorMapSelectableState state)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000497")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA40", Offset = "0x8AAA40")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action action;

			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0xD7F06C", Offset = "0xD7F06C", VA = "0xD7F06C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001D00")]
			[Address(RVA = "0xD7F074", Offset = "0xD7F074", VA = "0xD7F074")]
			internal void <AddButtonAction>b__0(string s)
			{
			}
		}

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C30F0", Offset = "0x8C30F0")]
		[SerializeField]
		private UiButton selectionButton;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected SelectableVisibility selectableVisibility;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectTransform;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected SectorMapSelectableState selectableState;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool hasSetupDefaultValues;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SectorMapSelectableGraphic[] graphics;

		[Token(Token = "0x17000539")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0xD8A438", Offset = "0xD8A438", VA = "0xD8A438")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xD90B60", Offset = "0xD90B60", VA = "0xD90B60")]
		public void AddButtonAction(Action action)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xD90230", Offset = "0xD90230", VA = "0xD90230", Slot = "4")]
		public virtual void SetSelectionState(SectorMapSelectableState state)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xD8A50C", Offset = "0xD8A50C", VA = "0xD8A50C")]
		public SectorMapSelectable()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class SectorMapSelectableGraphic : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000499")]
		public struct SelectionStateVisuals
		{
			[Token(Token = "0x4001A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color color;

			[Token(Token = "0x6001D04")]
			[Address(RVA = "0xD7F0DC", Offset = "0xD7F0DC", VA = "0xD7F0DC")]
			public SelectionStateVisuals(Color color)
			{
			}
		}

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C314C", Offset = "0x8C314C")]
		[SerializeField]
		private UiButton selectionButton;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Graphic selectionGraphic;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C31A8", Offset = "0x8C31A8")]
		private SelectionStateVisuals selectionVisualsFuture;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionStateVisuals selectionVisualsNext;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SelectionStateVisuals selectionVisualsNextHovered;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SelectionStateVisuals selectionVisualsCurrent;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SelectionStateVisuals selectionVisualsPreviousPicked;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SelectionStateVisuals selectionVisualsPreviousNonPicked;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3244", Offset = "0x8C3244")]
		[SerializeField]
		private bool selectionButtonHighlight;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[SerializeField]
		private bool selectionButtonColor;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool hasSetupDefaultValues;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Color selectionBaseColor;

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xD94470", Offset = "0xD94470", VA = "0xD94470")]
		public void SetSelectionState(SectorMapSelectableState state)
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xD94770", Offset = "0xD94770", VA = "0xD94770")]
		private SelectionStateVisuals GetSelectionStateVisuals(SectorMapSelectableState state)
		{
			return default(SelectionStateVisuals);
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xD94818", Offset = "0xD94818", VA = "0xD94818")]
		public SectorMapSelectableGraphic()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class SetBackgroundMenuWhileEnabled : MonoBehaviour
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BackgroundMenuType backgroundType;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int backgroundCount;

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xE154EC", Offset = "0xE154EC", VA = "0xE154EC")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xE1555C", Offset = "0xE1555C", VA = "0xE1555C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xE155C4", Offset = "0xE155C4", VA = "0xE155C4")]
		public SetBackgroundMenuWhileEnabled()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class ShipAbilityDebugMenu : GameMonoBehaviour
	{
		[Token(Token = "0x200049C")]
		private class AbilityToggle
		{
			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private ShipAbilityPassive ability;

			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly UiButton toggleButton;

			[Token(Token = "0x4001A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly TMP_Text buttonTextComponent;

			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string displayName;

			[Token(Token = "0x1700053C")]
			private static SpaceShip PlayerShip
			{
				[Token(Token = "0x6001D12")]
				[Address(RVA = "0xFFE5B0", Offset = "0xFFE5B0", VA = "0xFFE5B0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xFFE62C", Offset = "0xFFE62C", VA = "0xFFE62C")]
			public AbilityToggle(UiButton toggleButton)
			{
			}

			[Token(Token = "0x6001D14")]
			[Address(RVA = "0xFFE74C", Offset = "0xFFE74C", VA = "0xFFE74C")]
			private void ToggleAbility(string s)
			{
			}

			[Token(Token = "0x6001D15")]
			[Address(RVA = "0xFFE96C", Offset = "0xFFE96C", VA = "0xFFE96C")]
			public void SetAbility(ShipAbilityPassive ability)
			{
			}

			[Token(Token = "0x6001D16")]
			[Address(RVA = "0xFFE870", Offset = "0xFFE870", VA = "0xFFE870")]
			public void UpdateToggleStatus()
			{
			}
		}

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UiButton buttonPrefab;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int abilitiesPerPage;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UiButton pageButtonNext;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UiButton pageButtonPrevious;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string[] excludedAbilityTagPrefixes;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string[] includedAbilityTagPrefixes;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly List<ShipAbilityPassive> abilities;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly List<AbilityToggle> abilityToggles;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int pageIndex;

		[Token(Token = "0x1700053A")]
		private int PageIndexMax
		{
			[Token(Token = "0x6001D08")]
			[Address(RVA = "0x1144AE0", Offset = "0x1144AE0", VA = "0x1144AE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700053B")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x1144B48", Offset = "0x1144B48", VA = "0x1144B48", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0x1144B50", Offset = "0x1144B50", VA = "0x1144B50", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x1144B54", Offset = "0x1144B54", VA = "0x1144B54", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x1144E3C", Offset = "0x1144E3C", VA = "0x1144E3C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x1145158", Offset = "0x1145158", VA = "0x1145158")]
		public void ShowNextPage()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x1145194", Offset = "0x1145194", VA = "0x1145194")]
		public void ShowPreviousPage()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x1144B7C", Offset = "0x1144B7C", VA = "0x1144B7C")]
		private void SetupAbilities()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x1144E40", Offset = "0x1144E40", VA = "0x1144E40")]
		private void UpdateAbilityToggles()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x11451CC", Offset = "0x11451CC", VA = "0x11451CC")]
		public ShipAbilityDebugMenu()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class ShipManagementMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200049E")]
		public struct ShipDisplay
		{
			[Token(Token = "0x4001A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorTag shipTag;

			[Token(Token = "0x4001A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject landingScreenObject;

			[Token(Token = "0x4001A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizationKey shipNameKey;
		}

		[Token(Token = "0x200049F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA50", Offset = "0x8AAA50")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShipManagementMenu <>4__this;

			[Token(Token = "0x4001A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int abilityIndex;

			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x10019A8", Offset = "0x10019A8", VA = "0x10019A8")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6001D30")]
			[Address(RVA = "0x10019B0", Offset = "0x10019B0", VA = "0x10019B0")]
			internal void <ShowActionCompleteScreen>b__0()
			{
			}
		}

		[Token(Token = "0x20004A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA60", Offset = "0x8AAA60")]
		private sealed class <ShowActionCompleteScreenRoutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShipManagementMenu <>4__this;

			[Token(Token = "0x1700053D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D34")]
				[Address(RVA = "0x1001B0C", Offset = "0x1001B0C", VA = "0x1001B0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D36")]
				[Address(RVA = "0x1001B54", Offset = "0x1001B54", VA = "0x1001B54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x10019D4", Offset = "0x10019D4", VA = "0x10019D4")]
			[DebuggerHidden]
			public <ShowActionCompleteScreenRoutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x1001A00", Offset = "0x1001A00", VA = "0x1001A00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x1001A04", Offset = "0x1001A04", VA = "0x1001A04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x1001B14", Offset = "0x1001B14", VA = "0x1001B14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3300", Offset = "0x8C3300")]
		[SerializeField]
		private List<ShipDisplay> shipDisplays;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] passiveAbilityDetailsScreen;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PassiveAbilityDetailsDisplay passiveAbilityDetails;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject passiveAbilitiesPanel;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject threatsScreen;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ThreatsDisplay threatsDetails;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C339C", Offset = "0x8C339C")]
		private bool showCompleteScreens;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float completeScreenDuration;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PassiveAbilityDetailsDisplay passiveAbilityUpgradedCompleteScreen;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PassiveAbilityDetailsDisplay passiveAbilityRecycledCompleteScreen;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3418", Offset = "0x8C3418")]
		private ShipManagementMenuPassiveAbilityAction passiveAbilityUpgrade;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ShipManagementMenuPassiveAbilityAction passiveAbilityRecycle;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ShipManagementMenuPassiveAbility[] passiveAbilities;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int alwaysVisibleAbilitySlots;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3494", Offset = "0x8C3494")]
		private TextMeshProUGUI headerText;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C34E0", Offset = "0x8C34E0")]
		[SerializeField]
		private bool isEndScreen;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C352C", Offset = "0x8C352C")]
		private UiButtonSelectGroup buttonSelectGroup;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SpaceShip playerShip;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int previewedPassiveAbilityIndex;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine actionCompleteRoutine;

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xF473E8", Offset = "0xF473E8", VA = "0xF473E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xF47570", Offset = "0xF47570", VA = "0xF47570")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xF4797C", Offset = "0xF4797C", VA = "0xF4797C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xF47B78", Offset = "0xF47B78", VA = "0xF47B78")]
		private void OnScrapCurrencyChange(int previousAmount, int newAmount)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xF4808C", Offset = "0xF4808C", VA = "0xF4808C")]
		private void OnPlayerShipPassiveAbilitiesChanged(SpaceShip.AbilityChangeType type, ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xF48788", Offset = "0xF48788", VA = "0xF48788")]
		public void ShowPassiveAbilityScreen(int index)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xF48958", Offset = "0xF48958", VA = "0xF48958")]
		public void ShowPassiveAbilityScreen(int index, ShipAbilityPassive passiveAbility, int level = -1)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xF48FA8", Offset = "0xF48FA8", VA = "0xF48FA8")]
		private void ShowShipDisplay(SectorTag shipTag, bool enable)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xF48C50", Offset = "0xF48C50", VA = "0xF48C50")]
		public void ShowThreatsScreen(int index, ShipAbilityPassiveThreats threats)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xF4776C", Offset = "0xF4776C", VA = "0xF4776C")]
		public void ShowLandingScreen()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xF491CC", Offset = "0xF491CC", VA = "0xF491CC")]
		public void UpgradeViewedPassiveAbility()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xF49E30", Offset = "0xF49E30", VA = "0xF49E30")]
		public void RecycleViewedPassiveAbility()
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xF49A78", Offset = "0xF49A78", VA = "0xF49A78")]
		private void ShowActionCompleteScreen(PassiveAbilityDetailsDisplay screen, int abilityIndex, bool returnToAbility)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xF4A880", Offset = "0xF4A880", VA = "0xF4A880")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3220", Offset = "0x8D3220")]
		private IEnumerator ShowActionCompleteScreenRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xF49184", Offset = "0xF49184", VA = "0xF49184")]
		private void StopCompleteScreen()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xF4809C", Offset = "0xF4809C", VA = "0xF4809C")]
		private void UpdatePassiveAbilities()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xF4951C", Offset = "0xF4951C", VA = "0xF4951C")]
		private int GetUpgradeScrapCost(ShipAbilityPassive slot)
		{
			return default(int);
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xF4A26C", Offset = "0xF4A26C", VA = "0xF4A26C")]
		private int GetRecycleScrapGain(ShipAbilityPassive slot)
		{
			return default(int);
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xF4A4D4", Offset = "0xF4A4D4", VA = "0xF4A4D4")]
		private int GetRecycleHealthGain()
		{
			return default(int);
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xF4A8F8", Offset = "0xF4A8F8", VA = "0xF4A8F8")]
		private float GetRecycleHealthGainPerc()
		{
			return default(float);
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xF4A6B8", Offset = "0xF4A6B8", VA = "0xF4A6B8")]
		private int GetRecycleExperienceGain(int scrapGain)
		{
			return default(int);
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xF47C6C", Offset = "0xF47C6C", VA = "0xF47C6C")]
		private void SetupPassiveAbilityUpgradeButton(ShipAbilityPassive passiveAbility)
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xF47E10", Offset = "0xF47E10", VA = "0xF47E10")]
		private void SetupPassiveAbilityRecycleButton(ShipAbilityPassive passiveAbility)
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xF4ADAC", Offset = "0xF4ADAC", VA = "0xF4ADAC")]
		public ShipManagementMenu()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class ShipManagementMenuPassiveAbility : MonoBehaviour
	{
		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3578", Offset = "0x8C3578")]
		private UiButton button;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image shadow;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ComponentLevelDisplay componentLevelDisplay;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C35F4", Offset = "0x8C35F4")]
		[SerializeField]
		private Sprite emptySprite;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite shadowNormalOutline;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Sprite shadowDefectOutline;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Sprite defectButtonSprite;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Sprite emptyButtonSprite;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Sprite noLevelButtonSprite;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3690", Offset = "0x8C3690")]
		[SerializeField]
		private Color defaultColor;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Color defectColor;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color dailyJourneyModifierColor;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Color threatColor;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int levelOverride;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ShipManagementMenu menu;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int index;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool isEndScreen;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ShipAbilityPassive ability;

		[Token(Token = "0x1700053F")]
		public int Index
		{
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0xF4AE50", Offset = "0xF4AE50", VA = "0xF4AE50")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000540")]
		public bool Enabled
		{
			[Token(Token = "0x6001D38")]
			[Address(RVA = "0xF4AE58", Offset = "0xF4AE58", VA = "0xF4AE58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xF4AE74", Offset = "0xF4AE74", VA = "0xF4AE74")]
			set
			{
			}
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xF4752C", Offset = "0xF4752C", VA = "0xF4752C")]
		public void Setup(ShipManagementMenu menu, int index, bool isEndScreen)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xF49784", Offset = "0xF49784", VA = "0xF49784")]
		public void SetupAbility(ShipAbilityPassive ability, int levelOverride = -1, bool forceButtonDisable = false)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xF4B0AC", Offset = "0xF4B0AC", VA = "0xF4B0AC")]
		public void ViewPassiveAbility()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xF4B0EC", Offset = "0xF4B0EC", VA = "0xF4B0EC")]
		public void ShowLandingScreen()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xF4AE94", Offset = "0xF4AE94", VA = "0xF4AE94")]
		private Color GetColor(ShipAbilityPassive ability)
		{
			return default(Color);
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xF4AF1C", Offset = "0xF4AF1C", VA = "0xF4AF1C")]
		private Sprite GetButtonSprite(ShipAbilityPassive ability)
		{
			return null;
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xF4AFC0", Offset = "0xF4AFC0", VA = "0xF4AFC0")]
		private Sprite GetShadowSprite(ShipAbilityPassive ability, out Color color)
		{
			return null;
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xF4B104", Offset = "0xF4B104", VA = "0xF4B104")]
		public ShipManagementMenuPassiveAbility()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class ShipManagementMenuPassiveAbilityAction : MonoBehaviour
	{
		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C370C", Offset = "0x8C370C")]
		[SerializeField]
		private UiButton button;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text priceText;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text extraRewardText;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LocalizationKey priceKey;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ShipManagementMenu menu;

		[Token(Token = "0x17000541")]
		public bool Enabled
		{
			[Token(Token = "0x6001D42")]
			[Address(RVA = "0xF4B170", Offset = "0xF4B170", VA = "0xF4B170")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D43")]
			[Address(RVA = "0xF4B18C", Offset = "0xF4B18C", VA = "0xF4B18C")]
			set
			{
			}
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xF4B1AC", Offset = "0xF4B1AC", VA = "0xF4B1AC")]
		public void Setup(ShipManagementMenu menu)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xF4AAB0", Offset = "0xF4AAB0", VA = "0xF4AAB0")]
		public void SetupButton(ShipAbilityPassive ability, int price, bool visible = true)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xF4ACAC", Offset = "0xF4ACAC", VA = "0xF4ACAC")]
		public void SetupExtraReward(ConversationFormatting.ValueFormat extraRewardFormatting, string extraRewardValue)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xF4B1B4", Offset = "0xF4B1B4", VA = "0xF4B1B4")]
		public void UpgradeViewedPassiveAbility()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xF4B1CC", Offset = "0xF4B1CC", VA = "0xF4B1CC")]
		public void RecycleViewedPassiveAbility()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xF4B1E4", Offset = "0xF4B1E4", VA = "0xF4B1E4")]
		public ShipManagementMenuPassiveAbilityAction()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class ShopMenu : MonoBehaviour, IShopItemMenu
	{
		[Token(Token = "0x20004A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA70", Offset = "0x8AAA70")]
		private sealed class <PlayGreetingSfxDelayed>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShopMenu <>4__this;

			[Token(Token = "0x17000544")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D5B")]
				[Address(RVA = "0x1001D74", Offset = "0x1001D74", VA = "0x1001D74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000545")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D5D")]
				[Address(RVA = "0x1001DBC", Offset = "0x1001DBC", VA = "0x1001DBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D58")]
			[Address(RVA = "0x1001B8C", Offset = "0x1001B8C", VA = "0x1001B8C")]
			[DebuggerHidden]
			public <PlayGreetingSfxDelayed>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001D59")]
			[Address(RVA = "0x1001BB8", Offset = "0x1001BB8", VA = "0x1001BB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x1001BBC", Offset = "0x1001BBC", VA = "0x1001BBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0x1001D7C", Offset = "0x1001D7C", VA = "0x1001D7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuRoot menuRoot;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3798", Offset = "0x8C3798")]
		[SerializeField]
		private GameObject landingScreen;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PassiveAbilityDetailsDisplay passiveAbilityDetailsScreen;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject shopItemsPanel;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject confirmPurchasePanel;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UiButton confirmPurchaseButton;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text confirmPurchaseButtonText;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject portraitPanel;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3844", Offset = "0x8C3844")]
		[SerializeField]
		private ShopMenuItem[] shopItems;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3890", Offset = "0x8C3890")]
		private LocalizationKey purchaseText;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LocalizationKey viewText;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LocalizationKey soldOutText;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TextMeshProUGUI greetingsText;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C390C", Offset = "0x8C390C")]
		[SerializeField]
		private float greetingSfxDelay;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int previewedItemIndex;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<ShopNPC, GameObject> portraits;

		[Token(Token = "0x17000542")]
		public LocalizationKey ViewText
		{
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0xF513BC", Offset = "0xF513BC", VA = "0xF513BC", Slot = "4")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x17000543")]
		public LocalizationKey SoldOutText
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xF513C8", Offset = "0xF513C8", VA = "0xF513C8", Slot = "5")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xF513D4", Offset = "0xF513D4", VA = "0xF513D4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xF51504", Offset = "0xF51504", VA = "0xF51504")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xF517B4", Offset = "0xF517B4", VA = "0xF517B4")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xF518DC", Offset = "0xF518DC", VA = "0xF518DC")]
		private void OnScrapCurrencyChange(int previousAmount, int newAmount)
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xF51C38", Offset = "0xF51C38", VA = "0xF51C38", Slot = "6")]
		public void ShowPurchasePreviewScreen(int index)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xF51638", Offset = "0xF51638", VA = "0xF51638", Slot = "7")]
		public void ShowLandingScreen(bool playGreetingSfx = false)
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xF51914", Offset = "0xF51914", VA = "0xF51914")]
		private void UpdateShopItems()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xF51E88", Offset = "0xF51E88", VA = "0xF51E88")]
		private void UpdatePortrait()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xF525A0", Offset = "0xF525A0", VA = "0xF525A0")]
		public void PurchasePreviewedItem()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xF52504", Offset = "0xF52504", VA = "0xF52504")]
		private void ShopItemSeen(ShopItem item)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xF51E10", Offset = "0xF51E10", VA = "0xF51E10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D32D0", Offset = "0x8D32D0")]
		private IEnumerator PlayGreetingSfxDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xF52724", Offset = "0xF52724", VA = "0xF52724")]
		public ShopMenu()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public interface IShopItemMenu
	{
		[Token(Token = "0x17000546")]
		LocalizationKey ViewText
		{
			[Token(Token = "0x6001D5E")]
			get;
		}

		[Token(Token = "0x17000547")]
		LocalizationKey SoldOutText
		{
			[Token(Token = "0x6001D5F")]
			get;
		}

		[Token(Token = "0x6001D60")]
		void ShowPurchasePreviewScreen(int index);

		[Token(Token = "0x6001D61")]
		void ShowLandingScreen(bool playGreetingSfx = false);
	}
	[Token(Token = "0x20004A6")]
	public class ShopMenuItem : MonoBehaviour
	{
		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3958", Offset = "0x8C3958")]
		[SerializeField]
		private UiButton button;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text title;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text price;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text buttonText;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject discountObject;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI discountText;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LocalizationKey discountKey;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ComponentLevelDisplay componentLevelDisplay;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3A24", Offset = "0x8C3A24")]
		private ShopItem <ShownItem>k__BackingField;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IShopItemMenu menu;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int index;

		[Token(Token = "0x17000548")]
		public ShopItem ShownItem
		{
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0xF527B4", Offset = "0xF527B4", VA = "0xF527B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3380", Offset = "0x8D3380")]
			get
			{
				return default(ShopItem);
			}
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0xF527C8", Offset = "0xF527C8", VA = "0xF527C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3390", Offset = "0x8D3390")]
			private set
			{
			}
		}

		[Token(Token = "0x17000549")]
		public bool Shown
		{
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0xF51DEC", Offset = "0xF51DEC", VA = "0xF51DEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0xF514D0", Offset = "0xF514D0", VA = "0xF514D0")]
			set
			{
			}
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xF5145C", Offset = "0xF5145C", VA = "0xF5145C")]
		public void Setup(IShopItemMenu menu, int index)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xF52270", Offset = "0xF52270", VA = "0xF52270")]
		public void SetupItem(ShopItem item)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xF528C8", Offset = "0xF528C8", VA = "0xF528C8")]
		public void PreviewItem()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xF52A0C", Offset = "0xF52A0C", VA = "0xF52A0C")]
		public void ShowLandingScreen()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xF527E8", Offset = "0xF527E8", VA = "0xF527E8")]
		private void DisplayDiscount()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xF52AC0", Offset = "0xF52AC0", VA = "0xF52AC0")]
		public ShopMenuItem()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class StepIndicatorMenu : MonoBehaviour
	{
		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UiToggleSprite[] stepIndicators;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int stepEntries;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int currentStepIndex;

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xF29C90", Offset = "0xF29C90", VA = "0xF29C90")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xF29C9C", Offset = "0xF29C9C", VA = "0xF29C9C")]
		public void SetupIndicators(int entries, int startingIndex)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xF29DA4", Offset = "0xF29DA4", VA = "0xF29DA4")]
		public void TryShowPreviousStep()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xF29DC4", Offset = "0xF29DC4", VA = "0xF29DC4")]
		public void TryShowNextStep()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xF29DBC", Offset = "0xF29DBC", VA = "0xF29DBC")]
		public void SetStep(int stepIndex)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xF29CA4", Offset = "0xF29CA4", VA = "0xF29CA4")]
		private void UpdateStepIndicators()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xF29DE0", Offset = "0xF29DE0", VA = "0xF29DE0")]
		public StepIndicatorMenu()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class ThreatButton : GameMonoBehaviour
	{
		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3A44", Offset = "0x8C3A44")]
		[SerializeField]
		private UiButton button;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text buttonText;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject lockedToggle;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3AB0", Offset = "0x8C3AB0")]
		[SerializeField]
		private LocalizationKey lockedKey;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3AFC", Offset = "0x8C3AFC")]
		private ShipAbilityPassiveThreat <Threat>k__BackingField;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<ThreatButton> onSelectedChange;

		[Token(Token = "0x1700054A")]
		public ShipAbilityPassiveThreat Threat
		{
			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xF33E84", Offset = "0xF33E84", VA = "0xF33E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D33A0", Offset = "0x8D33A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D74")]
			[Address(RVA = "0xF33E8C", Offset = "0xF33E8C", VA = "0xF33E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D33B0", Offset = "0x8D33B0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700054B")]
		public bool IsSelected
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0xF33E94", Offset = "0xF33E94", VA = "0xF33E94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xF33EB0", Offset = "0xF33EB0", VA = "0xF33EB0")]
		public void Setup(ShipAbilityPassiveThreat threat, bool selected, bool enabled, int threatLevelCleared, Action<ThreatButton> onSelectedChange)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xF34010", Offset = "0xF34010", VA = "0xF34010")]
		public void ToggleThreatSelected()
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xF34090", Offset = "0xF34090", VA = "0xF34090")]
		public ThreatButton()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class ThreatLevel : GameMonoBehaviour
	{
		[Token(Token = "0x20004AA")]
		public enum ProgressState
		{
			[Token(Token = "0x4001A9D")]
			Cleared,
			[Token(Token = "0x4001A9E")]
			Next,
			[Token(Token = "0x4001A9F")]
			Locked
		}

		[Serializable]
		[Token(Token = "0x20004AB")]
		public struct ProgressColor
		{
			[Token(Token = "0x4001AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color colorCleared;

			[Token(Token = "0x4001AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color colorNext;

			[Token(Token = "0x4001AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color colorLocked;

			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0xEA1488", Offset = "0xEA1488", VA = "0xEA1488")]
			public Color GetColor(ProgressState progress)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3B0C", Offset = "0x8C3B0C")]
		[SerializeField]
		private Image backgroundImage;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text levelText;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject clearedToggle;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject selectedToggle;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3B88", Offset = "0x8C3B88")]
		[SerializeField]
		private ProgressColor backgroundImageColor;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ProgressColor levelTextColor;

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xF34098", Offset = "0xF34098", VA = "0xF34098")]
		public void Setup(int level, ProgressState progress, bool selected)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xF34184", Offset = "0xF34184", VA = "0xF34184")]
		public ThreatLevel()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class ThreatsDisplay : GameMonoBehaviour
	{
		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ThreatButton[] threatButtons;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ThreatLevel[] threatLevels;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text bonusText;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI titleText;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3C24", Offset = "0x8C3C24")]
		private LocalizationKey titleKey;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string bonusSeparator;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LocalizationKey bonusXpMultiplierKey;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LocalizationKey bonusStoryKeysKey;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3CA0", Offset = "0x8C3CA0")]
		[SerializeField]
		private UnityEvent onSelectedChange;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int threatLevelCleared;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int selectedThreatButtons;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private StringBuilder bonusTextBuilder;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<LocalizationKey> additionalBonusKeys;

		[Token(Token = "0x1700054C")]
		public IReadOnlyList<ThreatButton> ThreatButtons
		{
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0xF342FC", Offset = "0xF342FC", VA = "0xF342FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054D")]
		public int SelectedThreatButtons
		{
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0xF34304", Offset = "0xF34304", VA = "0xF34304")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700054E")]
		public int ThreatLevelCleared
		{
			[Token(Token = "0x6001D80")]
			[Address(RVA = "0xF3430C", Offset = "0xF3430C", VA = "0xF3430C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000071")]
		public event Action OnSelectedChange
		{
			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0xF341BC", Offset = "0xF341BC", VA = "0xF341BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D33C0", Offset = "0x8D33C0")]
			add
			{
			}
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xF3425C", Offset = "0xF3425C", VA = "0xF3425C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D33D0", Offset = "0x8D33D0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xF34314", Offset = "0xF34314", VA = "0xF34314")]
		public void Display(bool enableButtons, int threatLevelCleared, Predicate<ShipAbilityPassiveThreat> isThreatSelected)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xF34D48", Offset = "0xF34D48", VA = "0xF34D48")]
		private void OnThreatLevelButtonSelectedChange(ThreatButton button)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xF34DA8", Offset = "0xF34DA8", VA = "0xF34DA8")]
		private void UpdateSelectedThreatLevelCount()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xF34354", Offset = "0xF34354", VA = "0xF34354")]
		private void UpdateThreatButtons(bool enableButtons, Predicate<ShipAbilityPassiveThreat> isThreatSelected)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xF34CB4", Offset = "0xF34CB4", VA = "0xF34CB4")]
		private void UpdateThreatTitle()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xF34708", Offset = "0xF34708", VA = "0xF34708")]
		private void UpdateThreatLevels()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xF347A4", Offset = "0xF347A4", VA = "0xF347A4")]
		private void UpdateThreatBonus()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xF34E24", Offset = "0xF34E24", VA = "0xF34E24")]
		private bool TryAddBonusText(StringBuilder builder, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xF34EA8", Offset = "0xF34EA8", VA = "0xF34EA8")]
		public ThreatsDisplay()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class ThreatsMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA80", Offset = "0x8AAA80")]
		private sealed class <>c
		{
			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<ShipAbilityPassiveThreat> <>9__10_0;

			[Token(Token = "0x6001D93")]
			[Address(RVA = "0xEA1548", Offset = "0xEA1548", VA = "0xEA1548")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D94")]
			[Address(RVA = "0xEA1550", Offset = "0xEA1550", VA = "0xEA1550")]
			internal bool <ShowThreats>b__10_0(ShipAbilityPassiveThreat t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA90", Offset = "0x8AAA90")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string seed;

			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string gameMode;

			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorMapDescription sectorMap;

			[Token(Token = "0x4001ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<string> additionalTags;

			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<RunManager.StartAbilityPassive> additionalAbilities;

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0xEA1638", Offset = "0xEA1638", VA = "0xEA1638")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001D96")]
			[Address(RVA = "0xEA1640", Offset = "0xEA1640", VA = "0xEA1640")]
			internal void <Play>b__0()
			{
			}
		}

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RunManagerActions defaultRunParameters;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ThreatsDisplay threatDisplay;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject infoParent;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UiButton playButton;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text playButtonText;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3D4C", Offset = "0x8C3D4C")]
		private LocalizationKey playButtonTextNoThreats;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LocalizationKey playButtonTextThreats;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LocalizationKey playButtonTextLocked;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3DB8", Offset = "0x8C3DB8")]
		private UnityEvent onPlay;

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xF34F90", Offset = "0xF34F90", VA = "0xF34F90")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xF35070", Offset = "0xF35070", VA = "0xF35070")]
		public void ShowThreats()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xF35240", Offset = "0xF35240", VA = "0xF35240")]
		public void ShowInfo()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xF35290", Offset = "0xF35290", VA = "0xF35290")]
		public void Play()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xF3521C", Offset = "0xF3521C", VA = "0xF3521C")]
		public void UpdateThreatSelection()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xF35CA0", Offset = "0xF35CA0", VA = "0xF35CA0")]
		private void SaveSelectedThreats()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xF360B8", Offset = "0xF360B8", VA = "0xF360B8")]
		private void UpdatePlayButton()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xF36210", Offset = "0xF36210", VA = "0xF36210")]
		public ThreatsMenu()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class TutorialObjectiveDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001AC1")]
		public const string OBJECTIVE_TEXT_NEW_LINE = "\n";

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject showToggle;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UiToggleSprite completeToggle;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text objectiveText;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string controlsFormatting;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder ObjectiveTextBuilder;

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xF38D88", Offset = "0xF38D88", VA = "0xF38D88")]
		public void Setup(TutorialObjective objective, bool show, bool handTracking, XRNode mainHand, out GameObject hintObject)
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xF3918C", Offset = "0xF3918C", VA = "0xF3918C")]
		public void MarkDirty(bool rebuildLayout = false)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xF3919C", Offset = "0xF3919C", VA = "0xF3919C")]
		public TutorialObjectiveDisplay()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class TutorialObjectiveText : MonoBehaviour
	{
		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject showToggle;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text text;

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xF3921C", Offset = "0xF3921C", VA = "0xF3921C")]
		public void Setup(LocalizationKey key)
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xF392CC", Offset = "0xF392CC", VA = "0xF392CC")]
		public void MarkDirty(bool rebuildLayout = false)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xF392DC", Offset = "0xF392DC", VA = "0xF392DC")]
		public TutorialObjectiveText()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class TutorialObjectivesMenu : MonoBehaviour
	{
		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject showRoot;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform background;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TutorialObjectiveText titleText;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TutorialObjectiveText descriptionText;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TutorialObjectiveDisplay[] objectives;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TutorialObjectiveText noteText;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TutorialObjectiveText resultText;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform hintObjectParent;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject currentHintObject;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject currentHintObjectPrefab;

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xF392E4", Offset = "0xF392E4", VA = "0xF392E4")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xF39E40", Offset = "0xF39E40", VA = "0xF39E40")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xF3A1B8", Offset = "0xF3A1B8", VA = "0xF3A1B8")]
		private void OnMenuVisibilityChanged(SectorTag menuTag, bool visible)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xF3A1BC", Offset = "0xF3A1BC", VA = "0xF3A1BC")]
		private void OnMainSelectorChanged(VRPlayerSelector selector)
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xF3A1C0", Offset = "0xF3A1C0", VA = "0xF3A1C0")]
		private void OnInputModeChanged(InitializeNewVirtualHandDevice.InputMode inputMode)
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xF39670", Offset = "0xF39670", VA = "0xF39670")]
		private void UpdateObjectives()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xF3A1C4", Offset = "0xF3A1C4", VA = "0xF3A1C4")]
		private void SetHintObject(GameObject hintObjectPrefab)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xF39E34", Offset = "0xF39E34", VA = "0xF39E34")]
		public void SetBackgroundDirty()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xF3A3C4", Offset = "0xF3A3C4", VA = "0xF3A3C4")]
		public TutorialObjectivesMenu()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class TutorialStepMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004B4")]
		public struct TutorialStep
		{
			[Token(Token = "0x4001AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject stepToggle;

			[Token(Token = "0x4001AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool stepIncludeInRevisit;

			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0xEA2188", Offset = "0xEA2188", VA = "0xEA2188")]
			public bool IsIncluded(bool isRevisit)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TutorialStep[] steps;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StepIndicatorMenu stepIndicatorMenu;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showFirstStepOnEnable;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int currentStepIndex;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isRevisit;

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xF3A3CC", Offset = "0xF3A3CC", VA = "0xF3A3CC")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xF3A520", Offset = "0xF3A520", VA = "0xF3A520")]
		public void TryShowFirstStep()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xF3A6E0", Offset = "0xF3A6E0", VA = "0xF3A6E0")]
		public void TryShowPreviousStep()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xF3A7E4", Offset = "0xF3A7E4", VA = "0xF3A7E4")]
		public void TryShowNextStep()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xF3A890", Offset = "0xF3A890", VA = "0xF3A890")]
		public void TryShowStep(int stepIndex)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xF3A8BC", Offset = "0xF3A8BC", VA = "0xF3A8BC")]
		public void HideCurrentStep()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xF3A5B8", Offset = "0xF3A5B8", VA = "0xF3A5B8")]
		private void SetStep(int stepIndex)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xF3A40C", Offset = "0xF3A40C", VA = "0xF3A40C")]
		private void UpdateStepIndicators()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xF3A8C4", Offset = "0xF3A8C4", VA = "0xF3A8C4")]
		public TutorialStepMenu()
		{
		}
	}
}
namespace Game.Menu.Settings
{
	[Token(Token = "0x20004B5")]
	public enum SettingsVolumeType
	{
		[Token(Token = "0x4001ADB")]
		SFX,
		[Token(Token = "0x4001ADC")]
		Music
	}
	[Token(Token = "0x20004B6")]
	public class SettingsOptionsControllerAudioVolume : SettingsOptionsController
	{
		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SettingsVolumeType volumeType;

		[Token(Token = "0x1700054F")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0xE16C00", Offset = "0xE16C00", VA = "0xE16C00", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0xE16D44", Offset = "0xE16D44", VA = "0xE16D44", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000550")]
		public float Volume
		{
			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0xE16C3C", Offset = "0xE16C3C", VA = "0xE16C3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0xE16D64", Offset = "0xE16D64", VA = "0xE16D64")]
			set
			{
			}
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xE16EB4", Offset = "0xE16EB4", VA = "0xE16EB4", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xE16EBC", Offset = "0xE16EBC", VA = "0xE16EBC")]
		public SettingsOptionsControllerAudioVolume()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class SettingsOptionsControllerAutoScan : SettingsOptionsController
	{
		[Token(Token = "0x17000551")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0xE16EC4", Offset = "0xE16EC4", VA = "0xE16EC4", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0xE16F90", Offset = "0xE16F90", VA = "0xE16F90", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xE1705C", Offset = "0xE1705C", VA = "0xE1705C", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xE17100", Offset = "0xE17100", VA = "0xE17100")]
		public SettingsOptionsControllerAutoScan()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class SettingsOptionsControllerCommonNotifications : SettingsOptionsController
	{
		[Token(Token = "0x17000552")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0xE17108", Offset = "0xE17108", VA = "0xE17108", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0xE171D4", Offset = "0xE171D4", VA = "0xE171D4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xE172A0", Offset = "0xE172A0", VA = "0xE172A0", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xE17328", Offset = "0xE17328", VA = "0xE17328")]
		public SettingsOptionsControllerCommonNotifications()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class SettingsOptionsControllerDeathSummary : SettingsOptionsController
	{
		[Token(Token = "0x17000553")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0xE17330", Offset = "0xE17330", VA = "0xE17330", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0xE173FC", Offset = "0xE173FC", VA = "0xE173FC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xE174C8", Offset = "0xE174C8", VA = "0xE174C8", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xE17550", Offset = "0xE17550", VA = "0xE17550")]
		public SettingsOptionsControllerDeathSummary()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class SettingsOptionsControllerExperimentalRaySmoothedActivation : SettingsOptionsController
	{
		[Token(Token = "0x17000554")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0xE17558", Offset = "0xE17558", VA = "0xE17558", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xE175F8", Offset = "0xE175F8", VA = "0xE175F8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xE176A8", Offset = "0xE176A8", VA = "0xE176A8", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xE17744", Offset = "0xE17744", VA = "0xE17744")]
		public SettingsOptionsControllerExperimentalRaySmoothedActivation()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class SettingsOptionsControllerExperimentalTrailingRayOrigin : SettingsOptionsController
	{
		[Token(Token = "0x17000555")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0xE1774C", Offset = "0xE1774C", VA = "0xE1774C", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0xE177EC", Offset = "0xE177EC", VA = "0xE177EC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xE1789C", Offset = "0xE1789C", VA = "0xE1789C", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xE1793C", Offset = "0xE1793C", VA = "0xE1793C")]
		public SettingsOptionsControllerExperimentalTrailingRayOrigin()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class SettingsOptionsControllerHapticFeedback : SettingsOptionsController
	{
		[Token(Token = "0x17000556")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0xE17944", Offset = "0xE17944", VA = "0xE17944", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0xE17A10", Offset = "0xE17A10", VA = "0xE17A10", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xE17ADC", Offset = "0xE17ADC", VA = "0xE17ADC", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xE17B68", Offset = "0xE17B68", VA = "0xE17B68")]
		public SettingsOptionsControllerHapticFeedback()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class SettingsOptionsControllerLanguage : SettingsOptionsController
	{
		[Token(Token = "0x17000557")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0xE17B70", Offset = "0xE17B70", VA = "0xE17B70", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0xE17CA8", Offset = "0xE17CA8", VA = "0xE17CA8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xE17F40", Offset = "0xE17F40", VA = "0xE17F40", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xE17FF4", Offset = "0xE17FF4", VA = "0xE17FF4")]
		public SettingsOptionsControllerLanguage()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class SettingsOptionsControllerMainSelector : SettingsOptionsController
	{
		[Token(Token = "0x17000558")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0xE17FFC", Offset = "0xE17FFC", VA = "0xE17FFC", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0xE180E0", Offset = "0xE180E0", VA = "0xE180E0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xE18100", Offset = "0xE18100", VA = "0xE18100", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xE1810C", Offset = "0xE1810C", VA = "0xE1810C")]
		public SettingsOptionsControllerMainSelector()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class SettingsOptionsControllerMoveMode : SettingsOptionsController
	{
		[Token(Token = "0x17000559")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0xE18114", Offset = "0xE18114", VA = "0xE18114", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0xE181DC", Offset = "0xE181DC", VA = "0xE181DC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xE182A0", Offset = "0xE182A0", VA = "0xE182A0", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xE18328", Offset = "0xE18328", VA = "0xE18328")]
		public SettingsOptionsControllerMoveMode()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class SettingsOptionsControllerPickupAutoCollect : SettingsOptionsController
	{
		[Token(Token = "0x1700055A")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0xE18330", Offset = "0xE18330", VA = "0xE18330", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0xE183FC", Offset = "0xE183FC", VA = "0xE183FC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xE184C8", Offset = "0xE184C8", VA = "0xE184C8", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xE1856C", Offset = "0xE1856C", VA = "0xE1856C")]
		public SettingsOptionsControllerPickupAutoCollect()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class SettingsOptionsControllerRelaxedModeAdvancedArsenal : SettingsOptionsController
	{
		[Token(Token = "0x1700055B")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0xE18574", Offset = "0xE18574", VA = "0xE18574", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0xE185F8", Offset = "0xE185F8", VA = "0xE185F8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xE18684", Offset = "0xE18684", VA = "0xE18684", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xE1870C", Offset = "0xE1870C", VA = "0xE1870C")]
		public SettingsOptionsControllerRelaxedModeAdvancedArsenal()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class SettingsOptionsControllerRelaxedModeLargeWallet : SettingsOptionsController
	{
		[Token(Token = "0x1700055C")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0xE18714", Offset = "0xE18714", VA = "0xE18714", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0xE18798", Offset = "0xE18798", VA = "0xE18798", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xE18824", Offset = "0xE18824", VA = "0xE18824", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xE188AC", Offset = "0xE188AC", VA = "0xE188AC")]
		public SettingsOptionsControllerRelaxedModeLargeWallet()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class SettingsOptionsControllerRelaxedModeProtection : SettingsOptionsController
	{
		[Token(Token = "0x1700055D")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0xE188B4", Offset = "0xE188B4", VA = "0xE188B4", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0xE18938", Offset = "0xE18938", VA = "0xE18938", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xE189C4", Offset = "0xE189C4", VA = "0xE189C4", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xE18A4C", Offset = "0xE18A4C", VA = "0xE18A4C")]
		public SettingsOptionsControllerRelaxedModeProtection()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class SettingsOptionsControllerRelaxedModeTradersGuild : SettingsOptionsController
	{
		[Token(Token = "0x1700055E")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0xE18A54", Offset = "0xE18A54", VA = "0xE18A54", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0xE18AD8", Offset = "0xE18AD8", VA = "0xE18AD8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xE18B64", Offset = "0xE18B64", VA = "0xE18B64", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xE18BEC", Offset = "0xE18BEC", VA = "0xE18BEC")]
		public SettingsOptionsControllerRelaxedModeTradersGuild()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class SettingsOptionsControllerScanInfo : SettingsOptionsController
	{
		[Token(Token = "0x1700055F")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0xE18BF4", Offset = "0xE18BF4", VA = "0xE18BF4", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0xE18CC0", Offset = "0xE18CC0", VA = "0xE18CC0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xE19074", Offset = "0xE19074", VA = "0xE19074", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xE19118", Offset = "0xE19118", VA = "0xE19118")]
		public SettingsOptionsControllerScanInfo()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class SettingsOptionsControllerShipwreckRescue : SettingsOptionsController
	{
		[Token(Token = "0x17000560")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0xE19120", Offset = "0xE19120", VA = "0xE19120", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0xE191EC", Offset = "0xE191EC", VA = "0xE191EC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xE192B8", Offset = "0xE192B8", VA = "0xE192B8", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xE19344", Offset = "0xE19344", VA = "0xE19344")]
		public SettingsOptionsControllerShipwreckRescue()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class SettingsOptionsControllerTouchInteraction : SettingsOptionsController
	{
		[Token(Token = "0x17000561")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0xE1934C", Offset = "0xE1934C", VA = "0xE1934C", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xE19418", Offset = "0xE19418", VA = "0xE19418", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xE19540", Offset = "0xE19540", VA = "0xE19540", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xE1961C", Offset = "0xE1961C", VA = "0xE1961C")]
		public SettingsOptionsControllerTouchInteraction()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class SettingsOptionsControllerVignette : SettingsOptionsController
	{
		[Token(Token = "0x17000562")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xE19624", Offset = "0xE19624", VA = "0xE19624", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xE19700", Offset = "0xE19700", VA = "0xE19700", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xE19850", Offset = "0xE19850", VA = "0xE19850", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xE198DC", Offset = "0xE198DC", VA = "0xE198DC")]
		public SettingsOptionsControllerVignette()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class SettingsOptionsControllerVirCallOuts : SettingsOptionsController
	{
		[Token(Token = "0x17000563")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0xE198E4", Offset = "0xE198E4", VA = "0xE198E4", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E00")]
			[Address(RVA = "0xE199B0", Offset = "0xE199B0", VA = "0xE199B0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xE19B0C", Offset = "0xE19B0C", VA = "0xE19B0C", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xE19C28", Offset = "0xE19C28", VA = "0xE19C28")]
		public SettingsOptionsControllerVirCallOuts()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class SettingsOptionsControllerVoiceOver : SettingsOptionsController
	{
		[Token(Token = "0x17000564")]
		public override int SelectedOptionIndex
		{
			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xE19C30", Offset = "0xE19C30", VA = "0xE19C30", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E04")]
			[Address(RVA = "0xE19CFC", Offset = "0xE19CFC", VA = "0xE19CFC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xE19E58", Offset = "0xE19E58", VA = "0xE19E58", Slot = "6")]
		public override void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xE19F74", Offset = "0xE19F74", VA = "0xE19F74")]
		public SettingsOptionsControllerVoiceOver()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class SettingsEntryBase : MonoBehaviour
	{
		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3F04", Offset = "0x8C3F04")]
		[SerializeField]
		private TMP_Text titleText;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text descriptionText;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3F60", Offset = "0x8C3F60")]
		private LocalizationKey titleKey;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LocalizationKey descriptionKey;

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xE15BF0", Offset = "0xE15BF0", VA = "0xE15BF0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xE15D0C", Offset = "0xE15D0C", VA = "0xE15D0C", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xE15E28", Offset = "0xE15E28", VA = "0xE15E28", Slot = "6")]
		public virtual void UpdateEntryText()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xE15F4C", Offset = "0xE15F4C", VA = "0xE15F4C", Slot = "7")]
		public virtual void ResetDefaultSetting()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xE15F50", Offset = "0xE15F50", VA = "0xE15F50")]
		public SettingsEntryBase()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class SettingsEntryButtonOptions : SettingsEntryBase
	{
		[Serializable]
		[Token(Token = "0x20004CD")]
		public class OptionButton
		{
			[Token(Token = "0x4001AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizationKey valueKey;

			[Token(Token = "0x4001AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UiButton valueButton;

			[Token(Token = "0x4001AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TMP_Text valueText;

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xFF806C", Offset = "0xFF806C", VA = "0xFF806C")]
			public OptionButton()
			{
			}
		}

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3FBC", Offset = "0x8C3FBC")]
		[SerializeField]
		private SettingsOptionsController optionsController;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private OptionButton[] options;

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xE15F58", Offset = "0xE15F58", VA = "0xE15F58")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xE15F84", Offset = "0xE15F84", VA = "0xE15F84", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xE16084", Offset = "0xE16084", VA = "0xE16084", Slot = "6")]
		public override void UpdateEntryText()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xE1611C", Offset = "0xE1611C", VA = "0xE1611C", Slot = "7")]
		public override void ResetDefaultSetting()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xE15FA8", Offset = "0xE15FA8", VA = "0xE15FA8")]
		public void UpdateSelectedOption()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xE161A4", Offset = "0xE161A4", VA = "0xE161A4")]
		public void SelectOption(int optionIndex)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xE16204", Offset = "0xE16204", VA = "0xE16204")]
		public SettingsEntryButtonOptions()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class SettingsMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004CF")]
		public class SettingsCategory
		{
			[Token(Token = "0x4001AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string titleText;

			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizationKey titleKey;

			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject root;

			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject layout;

			[Token(Token = "0x4001AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool showOnMobilePlatforms;

			[Token(Token = "0x4001AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool showOutsideDeveloperBuild;

			[Token(Token = "0x4001AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SettingsEntryBase[] settingsEntries;

			[Token(Token = "0x17000565")]
			private SettingsEntryBase[] SettingsEntries
			{
				[Token(Token = "0x6001E1C")]
				[Address(RVA = "0xFF8074", Offset = "0xFF8074", VA = "0xFF8074")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xFF80EC", Offset = "0xFF80EC", VA = "0xFF80EC")]
			public void RebuildLayout()
			{
			}

			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xFF8180", Offset = "0xFF8180", VA = "0xFF8180")]
			public void ResetDefaultSetting()
			{
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0xFF8204", Offset = "0xFF8204", VA = "0xFF8204")]
			public SettingsCategory()
			{
			}
		}

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text titleText;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StepIndicatorMenu stepIndicator;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SettingsCategory[] categories;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int selectedCategory;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SettingsCategory> activeCategories;

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xE1620C", Offset = "0xE1620C", VA = "0xE1620C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xE1640C", Offset = "0xE1640C", VA = "0xE1640C")]
		public void SelectCategory(int categoryIndex)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xE16664", Offset = "0xE16664", VA = "0xE16664")]
		public void SelectNextCategory()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xE166CC", Offset = "0xE166CC", VA = "0xE166CC")]
		public void SelectPreviousCategory()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xE16734", Offset = "0xE16734", VA = "0xE16734")]
		public void ResetSelectedSettings()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xE16244", Offset = "0xE16244", VA = "0xE16244")]
		private void SetupCategories()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xE16480", Offset = "0xE16480", VA = "0xE16480")]
		private void UpdateSelectedCategory()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xE16888", Offset = "0xE16888", VA = "0xE16888")]
		public SettingsMenu()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public abstract class SettingsOptionsController : MonoBehaviour
	{
		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string techTreeUnlockId;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] techTreeUnlockIdOptions;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool disableSettingsInRuns;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4078", Offset = "0x8C4078")]
		private int <OptionCount>k__BackingField;

		[Token(Token = "0x17000566")]
		public abstract int SelectedOptionIndex
		{
			[Token(Token = "0x6001E20")]
			get;
			[Token(Token = "0x6001E21")]
			set;
		}

		[Token(Token = "0x17000567")]
		public int OptionCount
		{
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xE16914", Offset = "0xE16914", VA = "0xE16914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D33E0", Offset = "0x8D33E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E23")]
			[Address(RVA = "0xE1691C", Offset = "0xE1691C", VA = "0xE1691C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D33F0", Offset = "0x8D33F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xE16924", Offset = "0xE16924", VA = "0xE16924", Slot = "6")]
		public virtual void SetDefaultOption()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xE16928", Offset = "0xE16928", VA = "0xE16928", Slot = "7")]
		public virtual bool IsOptionInteractable(int optionIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xE16BB8", Offset = "0xE16BB8", VA = "0xE16BB8")]
		public static int ConvertToggleToIndex(bool optionToggle)
		{
			return default(int);
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xE16BC4", Offset = "0xE16BC4", VA = "0xE16BC4")]
		public static bool ConvertIndexToToggle(int optionIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xE16BD0", Offset = "0xE16BD0", VA = "0xE16BD0")]
		public static int ConvertPercentToIndex(float optionPercent, int optionCount)
		{
			return default(int);
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xE16BE4", Offset = "0xE16BE4", VA = "0xE16BE4")]
		public static float ConvertIndexToPercent(int optionIndex, int optionCount)
		{
			return default(float);
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xE16ACC", Offset = "0xE16ACC", VA = "0xE16ACC")]
		public static bool IsTechTreeNodeUnlocked(string techTreeNodeId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xE16BF8", Offset = "0xE16BF8", VA = "0xE16BF8")]
		protected SettingsOptionsController()
		{
		}
	}
}
namespace Game.Manager
{
	[Token(Token = "0x20004D1")]
	public enum BarkType
	{
		[Token(Token = "0x4001AF8")]
		None = 0,
		[Token(Token = "0x4001AF9")]
		EnterThreatLevelScreen = 1,
		[Token(Token = "0x4001AFA")]
		NewUnlocksDataFiles = 2,
		[Token(Token = "0x4001AFB")]
		FinalBossNotScan = 10,
		[Token(Token = "0x4001AFC")]
		FinalBossNotDamage = 11,
		[Token(Token = "0x4001AFD")]
		FinalBossAfter = 12,
		[Token(Token = "0x4001AFE")]
		ChimeraAfter = 15,
		[Token(Token = "0x4001AFF")]
		GuardianBlasterAfter = 16,
		[Token(Token = "0x4001B00")]
		GuardianLaserAfter = 17,
		[Token(Token = "0x4001B01")]
		GuardianCrystalAfter = 18,
		[Token(Token = "0x4001B02")]
		BetweenWavesBattle = 30,
		[Token(Token = "0x4001B03")]
		AfterBattle = 31,
		[Token(Token = "0x4001B04")]
		StartEliteBattle = 32,
		[Token(Token = "0x4001B05")]
		EventOver = 50,
		[Token(Token = "0x4001B06")]
		ShopSectorOneTrader = 80,
		[Token(Token = "0x4001B07")]
		ShopSectorMultipleTraders = 81,
		[Token(Token = "0x4001B08")]
		TinkererOnArrival = 82,
		[Token(Token = "0x4001B09")]
		PlayerDeath = 100,
		[Token(Token = "0x4001B0A")]
		CreatureSpaceWhale = 110,
		[Token(Token = "0x4001B0B")]
		CreatureSkyDragon = 111,
		[Token(Token = "0x4001B0C")]
		CreatureDimensionalHorror = 112,
		[Token(Token = "0x4001B0D")]
		CreatureEtherDrake = 113,
		[Token(Token = "0x4001B0E")]
		CreatureSpectralWraith = 114,
		[Token(Token = "0x4001B0F")]
		CreatureStellarDevourer = 115,
		[Token(Token = "0x4001B10")]
		CreatureVoidspawn = 116,
		[Token(Token = "0x4001B11")]
		CreatureSpaceAmoebas = 117,
		[Token(Token = "0x4001B12")]
		WellDone = 200
	}
	[Token(Token = "0x20004D2")]
	public class BarkManager : MonoBehaviourSingleton<BarkManager>
	{
		[Serializable]
		[Token(Token = "0x20004D3")]
		public struct BarkTagTrigger
		{
			[Token(Token = "0x4001B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BarkType barkType;

			[Token(Token = "0x4001B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SfxTrigger barkTrigger;

			[Token(Token = "0x4001B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float changeToTrigger;

			[Token(Token = "0x4001B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorTagCollectionHierarchy tagRules;
		}

		[Token(Token = "0x20004D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAAA0", Offset = "0x8AAAA0")]
		private sealed class <WaitForBarkLoadRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BarkManager <>4__this;

			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<BarkType, BarkTagTrigger>.ValueCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private BarkTagTrigger <barkTagTrigger>5__3;

			[Token(Token = "0x17000568")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E3B")]
				[Address(RVA = "0xC62608", Offset = "0xC62608", VA = "0xC62608", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000569")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3D")]
				[Address(RVA = "0xC62650", Offset = "0xC62650", VA = "0xC62650", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xC622A0", Offset = "0xC622A0", VA = "0xC622A0")]
			[DebuggerHidden]
			public <WaitForBarkLoadRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xC622CC", Offset = "0xC622CC", VA = "0xC622CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xC6233C", Offset = "0xC6233C", VA = "0xC6233C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xC622E8", Offset = "0xC622E8", VA = "0xC622E8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0xC62610", Offset = "0xC62610", VA = "0xC62610", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAAB0", Offset = "0x8AAAB0")]
		private sealed class <TryPlayBarkDelayed>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BarkManager <>4__this;

			[Token(Token = "0x4001B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public BarkTagTrigger barkTrigger;

			[Token(Token = "0x1700056A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E41")]
				[Address(RVA = "0xC62250", Offset = "0xC62250", VA = "0xC62250", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E43")]
				[Address(RVA = "0xC62298", Offset = "0xC62298", VA = "0xC62298", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xC62138", Offset = "0xC62138", VA = "0xC62138")]
			[DebuggerHidden]
			public <TryPlayBarkDelayed>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xC62164", Offset = "0xC62164", VA = "0xC62164", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xC62168", Offset = "0xC62168", VA = "0xC62168", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xC62258", Offset = "0xC62258", VA = "0xC62258", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4088", Offset = "0x8C4088")]
		private List<BarkTagTrigger> sectorEnterBarkTagTriggers;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<BarkTagTrigger> barkTagTriggers;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C40E4", Offset = "0x8C40E4")]
		private List<Language> supportedLanguages;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<BarkType, BarkTagTrigger> barkTypeToTrigger;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isBarksLoaded;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool isGameLoaded;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SfxTrigger lastPlayedBark;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xEF77FC", Offset = "0xEF77FC", VA = "0xEF77FC")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xEF7AC0", Offset = "0xEF7AC0", VA = "0xEF7AC0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xEF7F6C", Offset = "0xEF7F6C", VA = "0xEF7F6C", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xEF7EF4", Offset = "0xEF7EF4", VA = "0xEF7EF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3400", Offset = "0x8D3400")]
		private IEnumerator WaitForBarkLoadRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xEF8234", Offset = "0xEF8234", VA = "0xEF8234")]
		private void OnSectorLoaded(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xEF8250", Offset = "0xEF8250", VA = "0xEF8250")]
		private bool TryPlayBark(List<BarkTagTrigger> barkTriggers)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xEF83BC", Offset = "0xEF83BC", VA = "0xEF83BC")]
		private bool TryPlayBark(BarkTagTrigger barkTrigger)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xEF85E0", Offset = "0xEF85E0", VA = "0xEF85E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3460", Offset = "0x8D3460")]
		private IEnumerator TryPlayBarkDelayed(BarkTagTrigger barkTrigger, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xEF770C", Offset = "0xEF770C", VA = "0xEF770C")]
		public void PlayBarkByType(BarkType barkType, float delay = 0f)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xEF8690", Offset = "0xEF8690", VA = "0xEF8690")]
		public BarkManager()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public delegate void CurrencyAmountChange(int previousAmount, int newAmount);
	[Serializable]
	[Token(Token = "0x20004D7")]
	public class CurrencyWallet
	{
		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int amount;

		[Token(Token = "0x1700056C")]
		public int Amount
		{
			[Token(Token = "0x6001E48")]
			[Address(RVA = "0xFF457C", Offset = "0xFF457C", VA = "0xFF457C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xFF4584", Offset = "0xFF4584", VA = "0xFF4584")]
			set
			{
			}
		}

		[Token(Token = "0x14000072")]
		public event CurrencyAmountChange OnGain
		{
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xFF45D4", Offset = "0xFF45D4", VA = "0xFF45D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3560", Offset = "0x8D3560")]
			add
			{
			}
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xFF4674", Offset = "0xFF4674", VA = "0xFF4674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3570", Offset = "0x8D3570")]
			remove
			{
			}
		}

		[Token(Token = "0x14000073")]
		public event CurrencyAmountChange OnRemove
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xFF4714", Offset = "0xFF4714", VA = "0xFF4714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3580", Offset = "0x8D3580")]
			add
			{
			}
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0xFF47B4", Offset = "0xFF47B4", VA = "0xFF47B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3590", Offset = "0x8D3590")]
			remove
			{
			}
		}

		[Token(Token = "0x14000074")]
		public event CurrencyAmountChange OnChange
		{
			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0xFF4014", Offset = "0xFF4014", VA = "0xFF4014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D35A0", Offset = "0x8D35A0")]
			add
			{
			}
			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0xFF4330", Offset = "0xFF4330", VA = "0xFF4330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D35B0", Offset = "0x8D35B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xFF4854", Offset = "0xFF4854", VA = "0xFF4854")]
		public CurrencyWallet(int startAmount = 0)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xFF4880", Offset = "0xFF4880", VA = "0xFF4880")]
		public void Add(int addAmount)
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xFF48DC", Offset = "0xFF48DC", VA = "0xFF48DC")]
		public void Remove(int removeAmount)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xFEA470", Offset = "0xFEA470", VA = "0xFEA470")]
		public void Modify(int modifyAmount)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xFF494C", Offset = "0xFF494C", VA = "0xFF494C")]
		public void SetTo(int amount)
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xFF4950", Offset = "0xFF4950", VA = "0xFF4950")]
		public bool CanAfford(int price)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004D8")]
	public interface IGameStart
	{
		[Token(Token = "0x6001E56")]
		void OnGameStart();
	}
	[Token(Token = "0x20004D9")]
	public interface IAsyncGameSetup
	{
		[Token(Token = "0x6001E57")]
		YieldInstruction OnGameSetupAsync();
	}
	[Token(Token = "0x20004DA")]
	public interface IGameLoaderSubsystem
	{
		[Token(Token = "0x6001E58")]
		void OnLoadStart(SectorTagsInput tags);

		[Token(Token = "0x6001E59")]
		void OnLoadEnd(SectorTagsInput tags);

		[Token(Token = "0x6001E5A")]
		void OnLoadPrepare(SectorTagsInput tags);

		[Token(Token = "0x6001E5B")]
		void OnLoadWindDown(SectorTagsInput tags);

		[Token(Token = "0x6001E5C")]
		void OnUnloadStart(SectorTagsInput tags);

		[Token(Token = "0x6001E5D")]
		YieldInstruction OnGameSetupAsync(SectorTagsInput tags);

		[Token(Token = "0x6001E5E")]
		void OnGameStart(SectorTagsInput tags);
	}
	[Token(Token = "0x20004DB")]
	public class GameLoader : MonoBehaviourSingleton<GameLoader>, IAsyncSceneSetup
	{
		[Token(Token = "0x20004DC")]
		public delegate void LoadCallback(SectorTagsInput tags);

		[Token(Token = "0x20004DD")]
		public struct LoadParameters
		{
			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IReadOnlyList<SectorTagAmount> tags;

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private bool hasRandomSeed;

			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private int randomSeed;

			[Token(Token = "0x17000572")]
			public IReadOnlyList<SectorTagAmount> Tags
			{
				[Token(Token = "0x6001E93")]
				[Address(RVA = "0xECD358", Offset = "0xECD358", VA = "0xECD358")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000573")]
			public WrappedRandom Random
			{
				[Token(Token = "0x6001E94")]
				[Address(RVA = "0xECD360", Offset = "0xECD360", VA = "0xECD360")]
				get
				{
					return default(WrappedRandom);
				}
			}

			[Token(Token = "0x6001E95")]
			[Address(RVA = "0xECBC20", Offset = "0xECBC20", VA = "0xECBC20")]
			public LoadParameters(IReadOnlyList<SectorTagAmount> tags, int randomSeed)
			{
			}

			[Token(Token = "0x6001E96")]
			[Address(RVA = "0xECBC54", Offset = "0xECBC54", VA = "0xECBC54")]
			public LoadParameters(IReadOnlyList<SectorTagAmount> tags)
			{
			}
		}

		[Token(Token = "0x20004DE")]
		private struct LoadQueueEntry
		{
			[Token(Token = "0x4001B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorTagsInput tags;

			[Token(Token = "0x4001B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public WrappedRandom random;

			[Token(Token = "0x4001B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action continueAction;

			[Token(Token = "0x4001B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorTransitionVariant transitionVariant;

			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool instantTransitionShow;

			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool instantTransitionHide;

			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncFlag playerInvulnerable;

			[Token(Token = "0x4001B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isFirstLoad;

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0xECD424", Offset = "0xECD424", VA = "0xECD424")]
			public LoadQueueEntry(SectorTagsInput tags, WrappedRandom random, Action continueAction, SectorTransitionVariant transitionVariant, bool instantTransitionShow, bool instantTransitionHide, bool isFirstLoad)
			{
			}
		}

		[Token(Token = "0x20004DF")]
		private enum ExecuteGameCallbackState
		{
			[Token(Token = "0x4001B63")]
			None,
			[Token(Token = "0x4001B64")]
			Setup,
			[Token(Token = "0x4001B65")]
			Start
		}

		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAAC0", Offset = "0x8AAAC0")]
		private sealed class <PerformFirstLoad>d__78 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameLoader <>4__this;

			[Token(Token = "0x17000574")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9B")]
				[Address(RVA = "0xECBC80", Offset = "0xECBC80", VA = "0xECBC80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000575")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9D")]
				[Address(RVA = "0xECBCC8", Offset = "0xECBCC8", VA = "0xECBCC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xECB7BC", Offset = "0xECB7BC", VA = "0xECB7BC")]
			[DebuggerHidden]
			public <PerformFirstLoad>d__78(int <>1__state)
			{
			}

			[Token(Token = "0x6001E99")]
			[Address(RVA = "0xECB7E8", Offset = "0xECB7E8", VA = "0xECB7E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0xECB7EC", Offset = "0xECB7EC", VA = "0xECB7EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0xECBC88", Offset = "0xECBC88", VA = "0xECBC88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAAD0", Offset = "0x8AAAD0")]
		private sealed class <>c__DisplayClass83_0
		{
			[Token(Token = "0x4001B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameLoader <>4__this;

			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LoadQueueEntry entry;

			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action loadStartAction;

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xC79C50", Offset = "0xC79C50", VA = "0xC79C50")]
			public <>c__DisplayClass83_0()
			{
			}

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0xC79C58", Offset = "0xC79C58", VA = "0xC79C58")]
			internal void <StartLoadEntry>b__3()
			{
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xC79CB0", Offset = "0xC79CB0", VA = "0xC79CB0")]
			internal void <StartLoadEntry>b__4()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAAE0", Offset = "0x8AAAE0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<IGameLoaderSubsystem, SectorTagsInput> <>9__83_0;

			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<SpaceEntity> <>9__83_1;

			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<IGameLoaderSubsystem, SectorTagsInput> <>9__83_2;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<IGameLoaderSubsystem, SectorTagsInput> <>9__85_0;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action<IGameLoaderSubsystem, SectorTagsInput> <>9__85_1;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action<IGameLoaderSubsystem, SectorTagsInput> <>9__85_2;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Action<IGameLoaderSubsystem, SectorTagsInput> <>9__85_3;

			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0xC797B4", Offset = "0xC797B4", VA = "0xC797B4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0xC797BC", Offset = "0xC797BC", VA = "0xC797BC")]
			internal void <StartLoadEntry>b__83_0(IGameLoaderSubsystem s, SectorTagsInput t)
			{
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0xC79874", Offset = "0xC79874", VA = "0xC79874")]
			internal void <StartLoadEntry>b__83_1(SpaceEntity p)
			{
			}

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0xC798A4", Offset = "0xC798A4", VA = "0xC798A4")]
			internal void <StartLoadEntry>b__83_2(IGameLoaderSubsystem s, SectorTagsInput t)
			{
			}

			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0xC79960", Offset = "0xC79960", VA = "0xC79960")]
			internal void <FinishLoadEntry>b__85_0(IGameLoaderSubsystem s, SectorTagsInput t)
			{
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0xC79A1C", Offset = "0xC79A1C", VA = "0xC79A1C")]
			internal void <FinishLoadEntry>b__85_1(IGameLoaderSubsystem s, SectorTagsInput t)
			{
			}

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0xC79AD8", Offset = "0xC79AD8", VA = "0xC79AD8")]
			internal void <FinishLoadEntry>b__85_2(IGameLoaderSubsystem s, SectorTagsInput t)
			{
			}

			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0xC79B94", Offset = "0xC79B94", VA = "0xC79B94")]
			internal void <FinishLoadEntry>b__85_3(IGameLoaderSubsystem s, SectorTagsInput t)
			{
			}
		}

		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAAF0", Offset = "0x8AAAF0")]
		private sealed class <StartLoadEntry>d__83 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameLoader <>4__this;

			[Token(Token = "0x4001B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoadQueueEntry entry;

			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private <>c__DisplayClass83_0 <>8__1;

			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private SpaceShip <playerShip>5__2;

			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private float <t>5__3;

			[Token(Token = "0x17000576")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EAD")]
				[Address(RVA = "0xECD2C4", Offset = "0xECD2C4", VA = "0xECD2C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000577")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EAF")]
				[Address(RVA = "0xECD30C", Offset = "0xECD30C", VA = "0xECD30C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0xECBE80", Offset = "0xECBE80", VA = "0xECBE80")]
			[DebuggerHidden]
			public <StartLoadEntry>d__83(int <>1__state)
			{
			}

			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0xECBEAC", Offset = "0xECBEAC", VA = "0xECBEAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xECBEB0", Offset = "0xECBEB0", VA = "0xECBEB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0xECD2CC", Offset = "0xECD2CC", VA = "0xECD2CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAB00", Offset = "0x8AAB00")]
		private sealed class <>c__DisplayClass84_0
		{
			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameLoader <>4__this;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LoadQueueEntry entry;

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xC79D2C", Offset = "0xC79D2C", VA = "0xC79D2C")]
			public <>c__DisplayClass84_0()
			{
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xC79D34", Offset = "0xC79D34", VA = "0xC79D34")]
			internal void <LoadEntryLayers>b__0()
			{
			}
		}

		[Token(Token = "0x20004E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAB10", Offset = "0x8AAB10")]
		private sealed class <FinishLoadEntry>d__85 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameLoader <>4__this;

			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoadQueueEntry entry;

			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private AsyncFlag <storyTagFlag>5__2;

			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool <hidePlayerShip>5__3;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private SpaceShip <playerShip>5__4;

			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <i>5__5;

			[Token(Token = "0x17000578")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB5")]
				[Address(RVA = "0xC7BB1C", Offset = "0xC7BB1C", VA = "0xC7BB1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000579")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB7")]
				[Address(RVA = "0xC7BB64", Offset = "0xC7BB64", VA = "0xC7BB64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xC7A228", Offset = "0xC7A228", VA = "0xC7A228")]
			[DebuggerHidden]
			public <FinishLoadEntry>d__85(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xC7A254", Offset = "0xC7A254", VA = "0xC7A254", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0xC7A258", Offset = "0xC7A258", VA = "0xC7A258", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xC7BB24", Offset = "0xC7BB24", VA = "0xC7BB24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAB20", Offset = "0x8AAB20")]
		private sealed class <AllGameCallbackExecutorAsync>d__88 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameLoader <>4__this;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700057A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EBB")]
				[Address(RVA = "0xC7A1D8", Offset = "0xC7A1D8", VA = "0xC7A1D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EBD")]
				[Address(RVA = "0xC7A220", Offset = "0xC7A220", VA = "0xC7A220", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xC79DA4", Offset = "0xC79DA4", VA = "0xC79DA4")]
			[DebuggerHidden]
			public <AllGameCallbackExecutorAsync>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0xC79DD0", Offset = "0xC79DD0", VA = "0xC79DD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0xC79DD4", Offset = "0xC79DD4", VA = "0xC79DD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0xC7A1E0", Offset = "0xC7A1E0", VA = "0xC7A1E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAB30", Offset = "0x8AAB30")]
		private sealed class <SingleGameCallbackExecutorAsync>d__90 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YieldInstruction asyncSetupYield;

			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Component component;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IGameStart callbackGameStart;

			[Token(Token = "0x1700057C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EC1")]
				[Address(RVA = "0xECBE30", Offset = "0xECBE30", VA = "0xECBE30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EC3")]
				[Address(RVA = "0xECBE78", Offset = "0xECBE78", VA = "0xECBE78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0xECBCD0", Offset = "0xECBCD0", VA = "0xECBCD0")]
			[DebuggerHidden]
			public <SingleGameCallbackExecutorAsync>d__90(int <>1__state)
			{
			}

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0xECBCFC", Offset = "0xECBCFC", VA = "0xECBCFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0xECBD00", Offset = "0xECBD00", VA = "0xECBD00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0xECBE38", Offset = "0xECBE38", VA = "0xECBE38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4160", Offset = "0x8C4160")]
		[SerializeField]
		private Vector2 progressLoadStartExecuted;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 progressSectorUnloaded;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 progressSectorLoaded;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 progressSceneSetUp;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 progressLoadPrepareExecuted;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 progressSubsystemsSetUp;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector2 progressObjectsSetUp;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector2 progressObjectsStarted;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector2 progressLoadEndExecuted;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C422C", Offset = "0x8C422C")]
		[SerializeField]
		private float delayBeforeHideLoadingMenu;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float delayBeforePlayerShipTeleportOut;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float delayAfterPlayerShipTeleportOut;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float delayBeforePlayerShipTeleportIn;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float delayAfterPlayerShipTeleportIn;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C42B8", Offset = "0x8C42B8")]
		[SerializeField]
		private bool playerTravelTeleportInAnimation;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[SerializeField]
		private bool playerTravelTeleportOutAnimation;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float sfxFadeInTime;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float sfxFadeOutTime;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4334", Offset = "0x8C4334")]
		[SerializeField]
		private SectorTagCollectionHierarchy firstLaunchSetupRules;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool firstLaunchLogos;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C43E0", Offset = "0x8C43E0")]
		private LoadParameters <FirstLoadParameters>k__BackingField;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C43F0", Offset = "0x8C43F0")]
		private IGameLoaderParameters <FirstLoadParameterSource>k__BackingField;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool loading;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float loadingProgress;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool canShowLoadingScreen;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int loadCount;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool hasLoadedFirst;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool hasShownLogosStarted;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		private bool hasShownLogosFinished;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Queue<LoadQueueEntry> loadQueue;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameLoaderDelayedLoad loadFirstDelayed;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static List<IGameLoaderSubsystem> gameLoadSubsystems;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<Component> gameCallbackComponents;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<Component> executingGameCallbackComponents;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ExecuteGameCallbackState executingGameCallbacksState;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly SectorTagCollection CHECK_TAGS_COLLECTION;

		[Token(Token = "0x1700056D")]
		public static bool Loading
		{
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0xE24DB8", Offset = "0xE24DB8", VA = "0xE24DB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700056E")]
		public static float LoadingProgress
		{
			[Token(Token = "0x6001E60")]
			[Address(RVA = "0xE24FEC", Offset = "0xE24FEC", VA = "0xE24FEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056F")]
		public static bool HasFinishedFirstLoad
		{
			[Token(Token = "0x6001E61")]
			[Address(RVA = "0xE250A8", Offset = "0xE250A8", VA = "0xE250A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000570")]
		public LoadParameters FirstLoadParameters
		{
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0xE25B58", Offset = "0xE25B58", VA = "0xE25B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3660", Offset = "0x8D3660")]
			get
			{
				return default(LoadParameters);
			}
			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0xE25B64", Offset = "0xE25B64", VA = "0xE25B64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3670", Offset = "0x8D3670")]
			private set
			{
			}
		}

		[Token(Token = "0x17000571")]
		private IGameLoaderParameters FirstLoadParameterSource
		{
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0xE25B74", Offset = "0xE25B74", VA = "0xE25B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3680", Offset = "0x8D3680")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E6F")]
			[Address(RVA = "0xE25B7C", Offset = "0xE25B7C", VA = "0xE25B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3690", Offset = "0x8D3690")]
			set
			{
			}
		}

		[Token(Token = "0x14000075")]
		public static event LoadCallback OnLoadStart
		{
			[Token(Token = "0x6001E62")]
			[Address(RVA = "0xE251B0", Offset = "0xE251B0", VA = "0xE251B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D35C0", Offset = "0x8D35C0")]
			add
			{
			}
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0xE252A4", Offset = "0xE252A4", VA = "0xE252A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D35D0", Offset = "0x8D35D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000076")]
		public static event LoadCallback OnLoadEnd
		{
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0xE25398", Offset = "0xE25398", VA = "0xE25398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D35E0", Offset = "0x8D35E0")]
			add
			{
			}
			[Token(Token = "0x6001E65")]
			[Address(RVA = "0xE25490", Offset = "0xE25490", VA = "0xE25490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D35F0", Offset = "0x8D35F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000077")]
		public static event LoadCallback OnLoadPrepare
		{
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0xE25588", Offset = "0xE25588", VA = "0xE25588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3600", Offset = "0x8D3600")]
			add
			{
			}
			[Token(Token = "0x6001E67")]
			[Address(RVA = "0xE25680", Offset = "0xE25680", VA = "0xE25680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3610", Offset = "0x8D3610")]
			remove
			{
			}
		}

		[Token(Token = "0x14000078")]
		public static event LoadCallback OnLoadWindDown
		{
			[Token(Token = "0x6001E68")]
			[Address(RVA = "0xE25778", Offset = "0xE25778", VA = "0xE25778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3620", Offset = "0x8D3620")]
			add
			{
			}
			[Token(Token = "0x6001E69")]
			[Address(RVA = "0xE25870", Offset = "0xE25870", VA = "0xE25870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3630", Offset = "0x8D3630")]
			remove
			{
			}
		}

		[Token(Token = "0x14000079")]
		public static event LoadCallback OnUnloadStart
		{
			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0xE25968", Offset = "0xE25968", VA = "0xE25968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3640", Offset = "0x8D3640")]
			add
			{
			}
			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0xE25A60", Offset = "0xE25A60", VA = "0xE25A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3650", Offset = "0x8D3650")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xE24500", Offset = "0xE24500", VA = "0xE24500")]
		public static void GameLoadComponent(Component component)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xE25D8C", Offset = "0xE25D8C", VA = "0xE25D8C")]
		public static void AddGameLoadSubsystem(IGameLoaderSubsystem subsystem)
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xE25E18", Offset = "0xE25E18", VA = "0xE25E18")]
		public static void RemoveGameLoadSubsystem(IGameLoaderSubsystem subsystem)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xE25EA4", Offset = "0xE25EA4", VA = "0xE25EA4")]
		public void QueueLoad(SectorTagsInput tags, WrappedRandom random, SectorTransitionVariant transitionVariant, [System.Runtime.InteropServices.Optional] Action continueAction, bool instantTransitionShow = false, bool instantTransitionHide = false)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xE26334", Offset = "0xE26334", VA = "0xE26334")]
		public static void ShowGameSetupTransition()
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xE26490", Offset = "0xE26490", VA = "0xE26490")]
		public void ShowGameSetupLoadingScreen()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xE264B0", Offset = "0xE264B0", VA = "0xE264B0")]
		private void ShowLoadingScreen()
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xE264A0", Offset = "0xE264A0", VA = "0xE264A0")]
		private void SetLoadingProgress(float progress, bool canShowLoadingScreen)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xE26B5C", Offset = "0xE26B5C", VA = "0xE26B5C")]
		public void OnLoadingLogosFinished()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xE26DFC", Offset = "0xE26DFC", VA = "0xE26DFC")]
		public void SetAudioSfxEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xE26F10", Offset = "0xE26F10", VA = "0xE26F10", Slot = "6")]
		private YieldInstruction Game.IAsyncSceneSetup.OnSetupSceneAsync()
		{
			return null;
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xE26F5C", Offset = "0xE26F5C", VA = "0xE26F5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D36A0", Offset = "0x8D36A0")]
		private IEnumerator PerformFirstLoad()
		{
			return null;
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xE26FD4", Offset = "0xE26FD4", VA = "0xE26FD4")]
		public void QueueFirstLoad([System.Runtime.InteropServices.Optional] SectorTagsInput additionalTags)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xE26FDC", Offset = "0xE26FDC", VA = "0xE26FDC")]
		private void QueueFirstLoad(SectorTagsInput additionalTags, bool allowLoadDelayed)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xE26B00", Offset = "0xE26B00", VA = "0xE26B00")]
		private bool TryResolveDelayedFirstLoad()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xE25F9C", Offset = "0xE25F9C", VA = "0xE25F9C")]
		private void LoadNextIfReady()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xE273AC", Offset = "0xE273AC", VA = "0xE273AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3700", Offset = "0x8D3700")]
		private IEnumerator StartLoadEntry(LoadQueueEntry entry)
		{
			return null;
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xE27450", Offset = "0xE27450", VA = "0xE27450")]
		private void LoadEntryLayers(LoadQueueEntry entry)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xE2766C", Offset = "0xE2766C", VA = "0xE2766C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3760", Offset = "0x8D3760")]
		private IEnumerator FinishLoadEntry(LoadQueueEntry entry)
		{
			return null;
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xE27710", Offset = "0xE27710", VA = "0xE27710")]
		private static void ExecuteSubsystemCallback(SectorTagsInput tags, Action<IGameLoaderSubsystem, SectorTagsInput> action)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xE27830", Offset = "0xE27830", VA = "0xE27830")]
		private YieldInstruction StartAllGameCallbackExecutor()
		{
			return null;
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xE2785C", Offset = "0xE2785C", VA = "0xE2785C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D37C0", Offset = "0x8D37C0")]
		private IEnumerator AllGameCallbackExecutorAsync()
		{
			return null;
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xE25B84", Offset = "0xE25B84", VA = "0xE25B84")]
		private void StartSingleGameCallbackExecutor(Component component)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xE278D4", Offset = "0xE278D4", VA = "0xE278D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3820", Offset = "0x8D3820")]
		private static IEnumerator SingleGameCallbackExecutorAsync(Component component, YieldInstruction asyncSetupYield, IGameStart callbackGameStart)
		{
			return null;
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xE2797C", Offset = "0xE2797C", VA = "0xE2797C")]
		private static bool IsShipAlive(SpaceShip ship)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xE27A0C", Offset = "0xE27A0C", VA = "0xE27A0C")]
		private static bool IsShipAliveAndActive(SpaceShip ship)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xE27AA0", Offset = "0xE27AA0", VA = "0xE27AA0")]
		private static bool IsShipAliveAndInactive(SpaceShip ship)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xE27308", Offset = "0xE27308", VA = "0xE27308")]
		public static string CreateTagsLogText(SectorTagsInput tags)
		{
			return null;
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xE27B38", Offset = "0xE27B38", VA = "0xE27B38")]
		public static string CreateTagsLogText(IReadOnlyList<SectorTagAmount> tags)
		{
			return null;
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xE27F48", Offset = "0xE27F48", VA = "0xE27F48")]
		public GameLoader()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class GameLoaderDelayedLoad
	{
		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool loadIsDelayed;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onLoadingLogosFinished;

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xE27300", Offset = "0xE27300", VA = "0xE27300")]
		public GameLoaderDelayedLoad()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public interface IGameLoaderParameters
	{
		[Token(Token = "0x1700057E")]
		IReadOnlyList<SectorTagAmount> Tags
		{
			[Token(Token = "0x6001EC5")]
			get;
		}

		[Token(Token = "0x1700057F")]
		WrappedRandom SeedRandom
		{
			[Token(Token = "0x6001EC6")]
			get;
		}

		[Token(Token = "0x17000580")]
		SectorTransitionVariant TransitionVariant
		{
			[Token(Token = "0x6001EC7")]
			get;
		}

		[Token(Token = "0x17000581")]
		bool InstantTransitionShow
		{
			[Token(Token = "0x6001EC8")]
			get;
		}

		[Token(Token = "0x17000582")]
		bool InstantTransitionHide
		{
			[Token(Token = "0x6001EC9")]
			get;
		}

		[Token(Token = "0x6001ECA")]
		void OnLoad(GameLoader.LoadParameters loadParameters, SectorTagsInput additionalTags, GameLoaderDelayedLoad delayedLoad);
	}
	[Token(Token = "0x20004EA")]
	public class GameLoaderDefaultParameters : ScriptableObject, IGameLoaderParameters
	{
		[Token(Token = "0x4001B90")]
		private const string SETTINGS_ASSET_PATH = "Assets/Resources/X15LoadSettings.asset";

		[Token(Token = "0x4001B91")]
		private const string SETTINGS_RESOURCES_PATH = "X15LoadSettings";

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SectorTagAmount> tags;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string seed;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool seedCreateRandom;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public SectorTransitionVariant transitionVariant;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool instantTransitionShow;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool instantTransitionHide;

		[Token(Token = "0x17000583")]
		public IReadOnlyList<SectorTagAmount> Tags
		{
			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0xE281F4", Offset = "0xE281F4", VA = "0xE281F4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000584")]
		public WrappedRandom SeedRandom
		{
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0xE281FC", Offset = "0xE281FC", VA = "0xE281FC", Slot = "5")]
			get
			{
				return default(WrappedRandom);
			}
		}

		[Token(Token = "0x17000585")]
		public SectorTransitionVariant TransitionVariant
		{
			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0xE2820C", Offset = "0xE2820C", VA = "0xE2820C", Slot = "6")]
			get
			{
				return default(SectorTransitionVariant);
			}
		}

		[Token(Token = "0x17000586")]
		public bool InstantTransitionShow
		{
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xE28214", Offset = "0xE28214", VA = "0xE28214", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000587")]
		public bool InstantTransitionHide
		{
			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0xE2821C", Offset = "0xE2821C", VA = "0xE2821C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xE28224", Offset = "0xE28224", VA = "0xE28224", Slot = "9")]
		public void OnLoad(GameLoader.LoadParameters loadParameters, SectorTagsInput additionalTags, GameLoaderDelayedLoad delayedLoad)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xE28228", Offset = "0xE28228", VA = "0xE28228")]
		public static GameLoaderDefaultParameters GetOrCreate()
		{
			return null;
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xE247B0", Offset = "0xE247B0", VA = "0xE247B0")]
		public static WrappedRandom GetSeedRandom(string seed, bool createRandomSeed)
		{
			return default(WrappedRandom);
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xE282C8", Offset = "0xE282C8", VA = "0xE282C8")]
		public GameLoaderDefaultParameters()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class GameLoaderPlayerMovePoint : MonoBehaviourSingleton<GameLoaderPlayerMovePoint>
	{
		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float moveDuration;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BuffObject[] moveBuffs;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<BuffBase> playerShipBuffs;

		[Token(Token = "0x17000588")]
		public float MoveDuration
		{
			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0xE2835C", Offset = "0xE2835C", VA = "0xE2835C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xE28364", Offset = "0xE28364", VA = "0xE28364", Slot = "6")]
		public virtual void OnPlayerMoveStart(SpaceShip playerShip)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xE28490", Offset = "0xE28490", VA = "0xE28490", Slot = "7")]
		public virtual void OnPlayerMoveStop(SpaceShip playerShip)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xE2855C", Offset = "0xE2855C", VA = "0xE2855C")]
		public GameLoaderPlayerMovePoint()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class GameLoaderStartParameters : MonoBehaviour, IGameLoaderParameters
	{
		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4420", Offset = "0x8C4420")]
		public List<SectorTagAmount> tags;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string seed;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool seedCreateRandom;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SectorTransitionVariant transitionVariant;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool instantTransitionShow;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool instantTransitionHide;

		[Token(Token = "0x17000589")]
		public IReadOnlyList<SectorTagAmount> Tags
		{
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0xE285D4", Offset = "0xE285D4", VA = "0xE285D4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058A")]
		public WrappedRandom SeedRandom
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xE285DC", Offset = "0xE285DC", VA = "0xE285DC", Slot = "5")]
			get
			{
				return default(WrappedRandom);
			}
		}

		[Token(Token = "0x1700058B")]
		public SectorTransitionVariant TransitionVariant
		{
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0xE285EC", Offset = "0xE285EC", VA = "0xE285EC", Slot = "6")]
			get
			{
				return default(SectorTransitionVariant);
			}
		}

		[Token(Token = "0x1700058C")]
		public bool InstantTransitionShow
		{
			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0xE285F4", Offset = "0xE285F4", VA = "0xE285F4", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700058D")]
		public bool InstantTransitionHide
		{
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0xE285FC", Offset = "0xE285FC", VA = "0xE285FC", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xE28604", Offset = "0xE28604", VA = "0xE28604", Slot = "10")]
		public virtual void OnLoad(GameLoader.LoadParameters loadParameters, SectorTagsInput additionalTags, GameLoaderDelayedLoad delayedLoad)
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xE28608", Offset = "0xE28608", VA = "0xE28608")]
		public GameLoaderStartParameters()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class GameLoaderStartParametersMain : GameLoaderStartParameters
	{
		[Serializable]
		[Token(Token = "0x20004EE")]
		public struct TutorialRules
		{
			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorTagCollectionHierarchy tutorialRules;

			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xECD4C4", Offset = "0xECD4C4", VA = "0xECD4C4")]
			public TutorialRules Validate()
			{
				return default(TutorialRules);
			}
		}

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C44A8", Offset = "0x8C44A8")]
		private List<SectorTagAmount> tutorialTags;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string tutorialSeed;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SectorMapDescription tutorialSectorMap;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TutorialRules[] tutorialRules;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameLoader.LoadParameters delayedLoadParameters;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SectorTagsInput delayedLoadAdditionalTags;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int loadCount;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAGS_COLLECTION;

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xE2869C", Offset = "0xE2869C", VA = "0xE2869C", Slot = "10")]
		public override void OnLoad(GameLoader.LoadParameters loadParameters, SectorTagsInput additionalTags, GameLoaderDelayedLoad delayedLoad)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xE28824", Offset = "0xE28824", VA = "0xE28824")]
		private void LoadDefault(GameLoader.LoadParameters loadParameters, SectorTagsInput additionalTags)
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xE28B40", Offset = "0xE28B40", VA = "0xE28B40")]
		private void ShowContinueRunPrompt()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xE28DC0", Offset = "0xE28DC0", VA = "0xE28DC0")]
		private void LoadContinueRun()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xE28F34", Offset = "0xE28F34", VA = "0xE28F34")]
		private void LoadAbandonRun()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xE290D0", Offset = "0xE290D0", VA = "0xE290D0")]
		public GameLoaderStartParametersMain()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class GameManager : MonoBehaviourSingleton<GameManager>
	{
		[Token(Token = "0x20004F0")]
		private class FocusLostFlags
		{
			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncFlag pauseFlag;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AsyncFlag handsInvisibleFlag;

			[Token(Token = "0x6001F21")]
			[Address(RVA = "0xECD600", Offset = "0xECD600", VA = "0xECD600")]
			public FocusLostFlags()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAB40", Offset = "0x8AAB40")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<VRDirectionTargetableBase> <>9__100_0;

			[Token(Token = "0x6001F23")]
			[Address(RVA = "0xECD560", Offset = "0xECD560", VA = "0xECD560")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F24")]
			[Address(RVA = "0xECD568", Offset = "0xECD568", VA = "0xECD568")]
			internal bool <CollectPickupsNearestPlayerShip>b__100_0(VRDirectionTargetableBase p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BAA")]
		public const string EDITOR_PREF_PAUSE_ON_UNFOCUS = "editor_pause_on_unfocus";

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4524", Offset = "0x8C4524")]
		private Faction playerFaction;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4570", Offset = "0x8C4570")]
		[SerializeField]
		private Vector2 collisionSpeedRange;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 collisionDamageRange;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve collisionDamageCurve;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve collisionVFXScaleCurve;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 collisionDamageSplitRange;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float collisionDamageCooldown;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float collisionVFXCooldown;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float collisionSFXCooldown;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C462C", Offset = "0x8C462C")]
		private SectorTagCollectionHierarchy sectorCalmSetTags;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SectorTagCollectionHierarchy sectorCalmClearTags;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4688", Offset = "0x8C4688")]
		[SerializeField]
		private SectorTagCollectionHierarchy sectorAndEngagementCalmSetTags;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SectorTagCollectionHierarchy sectorAndEngagementCalmClearTags;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C46E4", Offset = "0x8C46E4")]
		private UiEnableFlag sectorObjectiveClearedFlag;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SectorTagCollectionHierarchy sectorObjectiveClearedTags;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private SectorTagCollectionHierarchy sectorObjectiveUnclearedTags;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4750", Offset = "0x8C4750")]
		private GameObject <GameSceneReferenceObject>k__BackingField;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4760", Offset = "0x8C4760")]
		private string <GameMode>k__BackingField;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4770", Offset = "0x8C4770")]
		private bool <IsInGameSector>k__BackingField;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4780", Offset = "0x8C4780")]
		private bool <IsInMenuSector>k__BackingField;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private string nextGameMode;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool firstLoadPrepared;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool autoCollectPickups;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<VRDirectionTargetableBase> pickupTargetables;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4820", Offset = "0x8C4820")]
		private float <lastCollisionSFX>k__BackingField;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private FocusLostFlags focusLostPauseFlag;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private FocusLostFlags focusPausedPauseFlag;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private FocusLostFlags focusHMDPauseFlag;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool isSectorAndEngagementCalm;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x1700058E")]
		public GameObject GameSceneReferenceObject
		{
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0xE291C8", Offset = "0xE291C8", VA = "0xE291C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3A10", Offset = "0x8D3A10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xE291D0", Offset = "0xE291D0", VA = "0xE291D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3A20", Offset = "0x8D3A20")]
			set
			{
			}
		}

		[Token(Token = "0x1700058F")]
		public string GameMode
		{
			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xE29260", Offset = "0xE29260", VA = "0xE29260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3A30", Offset = "0x8D3A30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xE29268", Offset = "0xE29268", VA = "0xE29268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3A40", Offset = "0x8D3A40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000590")]
		public bool IsInGameSector
		{
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xE29270", Offset = "0xE29270", VA = "0xE29270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3A50", Offset = "0x8D3A50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xE29278", Offset = "0xE29278", VA = "0xE29278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3A60", Offset = "0x8D3A60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000591")]
		public bool IsInMenuSector
		{
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0xE29284", Offset = "0xE29284", VA = "0xE29284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3A70", Offset = "0x8D3A70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xE2928C", Offset = "0xE2928C", VA = "0xE2928C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3A80", Offset = "0x8D3A80")]
			private set
			{
			}
		}

		[Token(Token = "0x17000592")]
		public bool IsSectorObjectiveCleared
		{
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0xE29298", Offset = "0xE29298", VA = "0xE29298")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000593")]
		public Faction PlayerFaction
		{
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xE292B4", Offset = "0xE292B4", VA = "0xE292B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000594")]
		public float CollisionDamageCooldown
		{
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xE292BC", Offset = "0xE292BC", VA = "0xE292BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000595")]
		public bool AutoCollectPickups
		{
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0xE292C4", Offset = "0xE292C4", VA = "0xE292C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0xE292CC", Offset = "0xE292CC", VA = "0xE292CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000596")]
		public float lastCollisionSFX
		{
			[Token(Token = "0x6001F07")]
			[Address(RVA = "0xE2A10C", Offset = "0xE2A10C", VA = "0xE2A10C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3BB0", Offset = "0x8D3BB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F08")]
			[Address(RVA = "0xE2A114", Offset = "0xE2A114", VA = "0xE2A114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3BC0", Offset = "0x8D3BC0")]
			set
			{
			}
		}

		[Token(Token = "0x1400007A")]
		public event Action<bool> OnLoadPrepare
		{
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0xE295AC", Offset = "0xE295AC", VA = "0xE295AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3A90", Offset = "0x8D3A90")]
			add
			{
			}
			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0xE2964C", Offset = "0xE2964C", VA = "0xE2964C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3AA0", Offset = "0x8D3AA0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007B")]
		public event Action OnEnterGameSector
		{
			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0xE296EC", Offset = "0xE296EC", VA = "0xE296EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3AB0", Offset = "0x8D3AB0")]
			add
			{
			}
			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0xE2978C", Offset = "0xE2978C", VA = "0xE2978C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3AC0", Offset = "0x8D3AC0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007C")]
		public event Action OnExitGameSector
		{
			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0xE2982C", Offset = "0xE2982C", VA = "0xE2982C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3AD0", Offset = "0x8D3AD0")]
			add
			{
			}
			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xE298CC", Offset = "0xE298CC", VA = "0xE298CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3AE0", Offset = "0x8D3AE0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007D")]
		public event Action OnSectorClear
		{
			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0xE2996C", Offset = "0xE2996C", VA = "0xE2996C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3AF0", Offset = "0x8D3AF0")]
			add
			{
			}
			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0xE29A0C", Offset = "0xE29A0C", VA = "0xE29A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3B00", Offset = "0x8D3B00")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007E")]
		public event Action<bool> OnSectorObjectiveClearedChange
		{
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0xE29AAC", Offset = "0xE29AAC", VA = "0xE29AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3B10", Offset = "0x8D3B10")]
			add
			{
			}
			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xE29B4C", Offset = "0xE29B4C", VA = "0xE29B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3B20", Offset = "0x8D3B20")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007F")]
		public event Action OnEnterGameSectors
		{
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0xE29BEC", Offset = "0xE29BEC", VA = "0xE29BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3B30", Offset = "0x8D3B30")]
			add
			{
			}
			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xE29C90", Offset = "0xE29C90", VA = "0xE29C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3B40", Offset = "0x8D3B40")]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public event Action OnExitGameSectors
		{
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xE29D34", Offset = "0xE29D34", VA = "0xE29D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3B50", Offset = "0x8D3B50")]
			add
			{
			}
			[Token(Token = "0x6001F02")]
			[Address(RVA = "0xE29DD8", Offset = "0xE29DD8", VA = "0xE29DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3B60", Offset = "0x8D3B60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public event Action OnEnterMenuSectors
		{
			[Token(Token = "0x6001F03")]
			[Address(RVA = "0xE29E7C", Offset = "0xE29E7C", VA = "0xE29E7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3B70", Offset = "0x8D3B70")]
			add
			{
			}
			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xE29F20", Offset = "0xE29F20", VA = "0xE29F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3B80", Offset = "0x8D3B80")]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		public event Action OnExitMenuSectors
		{
			[Token(Token = "0x6001F05")]
			[Address(RVA = "0xE29FC4", Offset = "0xE29FC4", VA = "0xE29FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3B90", Offset = "0x8D3B90")]
			add
			{
			}
			[Token(Token = "0x6001F06")]
			[Address(RVA = "0xE2A068", Offset = "0xE2A068", VA = "0xE2A068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3BA0", Offset = "0x8D3BA0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xE291D8", Offset = "0xE291D8", VA = "0xE291D8")]
		public GameObject GetGameSceneReferenceObject(GameObject fallbackObj)
		{
			return null;
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xE2A11C", Offset = "0xE2A11C", VA = "0xE2A11C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xE2A51C", Offset = "0xE2A51C", VA = "0xE2A51C", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xE2A91C", Offset = "0xE2A91C", VA = "0xE2A91C")]
		protected void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xE2AAC4", Offset = "0xE2AAC4", VA = "0xE2AAC4")]
		protected void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xE2AAD4", Offset = "0xE2AAD4", VA = "0xE2AAD4")]
		protected void OnHMDMounted()
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xE2AC4C", Offset = "0xE2AC4C", VA = "0xE2AC4C")]
		protected void OnHMDUnmounted()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xE2A928", Offset = "0xE2A928", VA = "0xE2A928")]
		private void OnApplicationFocusOrPause(bool focus, ref FocusLostFlags focusLostFlags)
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xE2AC58", Offset = "0xE2AC58", VA = "0xE2AC58")]
		private void OnSectorLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xE2B01C", Offset = "0xE2B01C", VA = "0xE2B01C")]
		private void OnSectorLoadPrepare(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xE2B434", Offset = "0xE2B434", VA = "0xE2B434")]
		private void OnSectorLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xE2B590", Offset = "0xE2B590", VA = "0xE2B590")]
		private void OnSectorUnloadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xE24858", Offset = "0xE24858", VA = "0xE24858")]
		public bool Load(SectorTagsInput tags, WrappedRandom random, SectorTransitionVariant transitionVariant, [System.Runtime.InteropServices.Optional] string gameMode, [System.Runtime.InteropServices.Optional] string staticSceneName, bool instantTransitionShow = false, bool instantTransitionHide = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xE2B624", Offset = "0xE2B624", VA = "0xE2B624")]
		public float ProcessCollision(SpaceObject obj, Collision collision, bool playEffects)
		{
			return default(float);
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xE2BC94", Offset = "0xE2BC94", VA = "0xE2BC94")]
		public static bool TryGetAverageCollisionPoint(Collision collision, out Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xE2B1F4", Offset = "0xE2B1F4", VA = "0xE2B1F4")]
		public static bool IsTagsGameSector(SectorTagsInput tags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xE2ADAC", Offset = "0xE2ADAC", VA = "0xE2ADAC")]
		public static bool IsTagsMenuSector(SectorTagsInput tags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xE292F4", Offset = "0xE292F4", VA = "0xE292F4")]
		public void CollectPickupsNearestPlayerShip()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xE2BE48", Offset = "0xE2BE48", VA = "0xE2BE48")]
		public void OnSpawnPickup(Pickup pickup)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xE2BE78", Offset = "0xE2BE78", VA = "0xE2BE78")]
		private void OnSectorClearChanged(bool clear)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xE2C2DC", Offset = "0xE2C2DC", VA = "0xE2C2DC")]
		private void OnEngagementActiveChanged(bool clear)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xE2C008", Offset = "0xE2C008", VA = "0xE2C008")]
		private void CheckSectorAndEngagementCalmChanged()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xE2C2E0", Offset = "0xE2C2E0", VA = "0xE2C2E0")]
		private void OnSectorObjectiveClearedChanged(bool cleared)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xE2C4A4", Offset = "0xE2C4A4", VA = "0xE2C4A4")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public interface ILoadBalancedUpdate
	{
		[Token(Token = "0x6001F25")]
		void OnLoadBalancedUpdate(float deltaTime, float unscaledDeltaTime);
	}
	[Token(Token = "0x20004F3")]
	public interface IUpdate
	{
		[Token(Token = "0x6001F26")]
		void OnUpdate(float deltaTime, float unscaledDeltaTime);
	}
	[Token(Token = "0x20004F4")]
	public interface ILateUpdate
	{
		[Token(Token = "0x6001F27")]
		void OnLateUpdate(float deltaTime, float unscaledDeltaTime);
	}
	[Token(Token = "0x20004F5")]
	public interface IFixedUpdate
	{
		[Token(Token = "0x6001F28")]
		void OnFixedUpdate(float deltaTime, float unscaledDeltaTime);
	}
	[Token(Token = "0x20004F6")]
	public class LoadBalanceUpdator : MonoBehaviourSingleton<LoadBalanceUpdator>
	{
		[Token(Token = "0x20004F7")]
		private struct LoadBalancedObject
		{
			[Token(Token = "0x4001BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ILoadBalancedUpdate obj;

			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float lastUpdateUnscaledTime;

			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float lastUpdateScaledTime;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lastUpdateFrame;

			[Token(Token = "0x6001F35")]
			[Address(RVA = "0xEDA304", Offset = "0xEDA304", VA = "0xEDA304")]
			public LoadBalancedObject(ILoadBalancedUpdate obj)
			{
			}

			[Token(Token = "0x6001F36")]
			[Address(RVA = "0xEDA34C", Offset = "0xEDA34C", VA = "0xEDA34C")]
			private LoadBalancedObject(ILoadBalancedUpdate obj, float lastUpdateUnscaledTime, float lastUpdateScaledTime, int lastUpdateFrame)
			{
			}

			[Token(Token = "0x6001F37")]
			[Address(RVA = "0xEDA38C", Offset = "0xEDA38C", VA = "0xEDA38C")]
			public LoadBalancedObject Update()
			{
				return default(LoadBalancedObject);
			}
		}

		[Token(Token = "0x20004F8")]
		private class UpdateList<T>
		{
			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<T> objects;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Action<T, float, float> callUpdate;

			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Func<T, T, bool> compareEquality;

			[Token(Token = "0x6001F38")]
			public UpdateList(Action<T, float, float> callUpdate, Func<T, T, bool> compareEquality)
			{
			}

			[Token(Token = "0x6001F39")]
			public void UpdateAll(float deltaTime, float unscaledDeltaTime)
			{
			}

			[Token(Token = "0x6001F3A")]
			public void AddObject(T obj)
			{
			}

			[Token(Token = "0x6001F3B")]
			public void RemoveObject(T obj)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAB50", Offset = "0x8AAB50")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<IUpdate, float, float> <>9__18_0;

			[Token(Token = "0x4001BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IUpdate, IUpdate, bool> <>9__18_1;

			[Token(Token = "0x4001BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<ILateUpdate, float, float> <>9__18_2;

			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ILateUpdate, ILateUpdate, bool> <>9__18_3;

			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action<IFixedUpdate, float, float> <>9__18_4;

			[Token(Token = "0x4001BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<IFixedUpdate, IFixedUpdate, bool> <>9__18_5;

			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0xEDA098", Offset = "0xEDA098", VA = "0xEDA098")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0xEDA0A0", Offset = "0xEDA0A0", VA = "0xEDA0A0")]
			internal void <.ctor>b__18_0(IUpdate u, float sdt, float usdt)
			{
			}

			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0xEDA160", Offset = "0xEDA160", VA = "0xEDA160")]
			internal bool <.ctor>b__18_1(IUpdate a, IUpdate b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F40")]
			[Address(RVA = "0xEDA16C", Offset = "0xEDA16C", VA = "0xEDA16C")]
			internal void <.ctor>b__18_2(ILateUpdate u, float sdt, float usdt)
			{
			}

			[Token(Token = "0x6001F41")]
			[Address(RVA = "0xEDA22C", Offset = "0xEDA22C", VA = "0xEDA22C")]
			internal bool <.ctor>b__18_3(ILateUpdate a, ILateUpdate b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F42")]
			[Address(RVA = "0xEDA238", Offset = "0xEDA238", VA = "0xEDA238")]
			internal void <.ctor>b__18_4(IFixedUpdate u, float sdt, float usdt)
			{
			}

			[Token(Token = "0x6001F43")]
			[Address(RVA = "0xEDA2F8", Offset = "0xEDA2F8", VA = "0xEDA2F8")]
			internal bool <.ctor>b__18_5(IFixedUpdate a, IFixedUpdate b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int loadBalanceIndex;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<LoadBalancedObject> loadBalanceObjects;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UpdateList<IUpdate> updateList;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UpdateList<ILateUpdate> lateUpdateList;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UpdateList<IFixedUpdate> fixedUpdateList;

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xD5ACB8", Offset = "0xD5ACB8", VA = "0xD5ACB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xD5AE20", Offset = "0xD5AE20", VA = "0xD5AE20")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xD5AE9C", Offset = "0xD5AE9C", VA = "0xD5AE9C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xD5AF18", Offset = "0xD5AF18", VA = "0xD5AF18")]
		public void AddLoadBalancedObject(ILoadBalancedUpdate obj)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xD5AFB4", Offset = "0xD5AFB4", VA = "0xD5AFB4")]
		public void RemoveLoadBalancedObject(ILoadBalancedUpdate obj)
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xD5B150", Offset = "0xD5B150", VA = "0xD5B150")]
		public void AddUpdateObject(IUpdate obj)
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xD5B1B4", Offset = "0xD5B1B4", VA = "0xD5B1B4")]
		public void RemoveUpdateObject(IUpdate obj)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xD5B218", Offset = "0xD5B218", VA = "0xD5B218")]
		public void AddLateUpdateObject(ILateUpdate obj)
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xD5B27C", Offset = "0xD5B27C", VA = "0xD5B27C")]
		public void RemoveLateUpdateObject(ILateUpdate obj)
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xD5B2E0", Offset = "0xD5B2E0", VA = "0xD5B2E0")]
		public void AddFixedUpdateObject(IFixedUpdate obj)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xD5B344", Offset = "0xD5B344", VA = "0xD5B344")]
		public void RemoveFixedUpdateObject(IFixedUpdate obj)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xD5B3A8", Offset = "0xD5B3A8", VA = "0xD5B3A8")]
		public LoadBalanceUpdator()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class MultiplayerManager : MonoBehaviourSingleton<MultiplayerManager>
	{
		[Token(Token = "0x20004FB")]
		public enum LeaderboardMode
		{
			[Token(Token = "0x4001BFD")]
			Friends,
			[Token(Token = "0x4001BFE")]
			Global
		}

		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAB60", Offset = "0x8AAB60")]
		private sealed class <RequestHealthCheck>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerManager <>4__this;

			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <healthCheckRequest>5__2;

			[Token(Token = "0x1700059C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F6F")]
				[Address(RVA = "0xEDF0B0", Offset = "0xEDF0B0", VA = "0xEDF0B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F71")]
				[Address(RVA = "0xEDF0F8", Offset = "0xEDF0F8", VA = "0xEDF0F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0xEDEF80", Offset = "0xEDEF80", VA = "0xEDEF80")]
			[DebuggerHidden]
			public <RequestHealthCheck>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xEDEFAC", Offset = "0xEDEFAC", VA = "0xEDEFAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0xEDEFB0", Offset = "0xEDEFB0", VA = "0xEDEFB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xEDF0B8", Offset = "0xEDF0B8", VA = "0xEDF0B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAB70", Offset = "0x8AAB70")]
		private sealed class <RequestGetDailyJourneyInfo>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerManager <>4__this;

			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <dailyJourneyInfoRequest>5__2;

			[Token(Token = "0x1700059E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F75")]
				[Address(RVA = "0xEDEF30", Offset = "0xEDEF30", VA = "0xEDEF30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F77")]
				[Address(RVA = "0xEDEF78", Offset = "0xEDEF78", VA = "0xEDEF78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F72")]
			[Address(RVA = "0xEDEAF0", Offset = "0xEDEAF0", VA = "0xEDEAF0")]
			[DebuggerHidden]
			public <RequestGetDailyJourneyInfo>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xEDEB1C", Offset = "0xEDEB1C", VA = "0xEDEB1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F74")]
			[Address(RVA = "0xEDEB20", Offset = "0xEDEB20", VA = "0xEDEB20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0xEDEF38", Offset = "0xEDEF38", VA = "0xEDEF38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAB80", Offset = "0x8AAB80")]
		private sealed class <RequestPostDailyJourneyLeaderboardEntry>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerManager <>4__this;

			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int score;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <postLeaderboardEntryRequest>5__2;

			[Token(Token = "0x170005A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F7B")]
				[Address(RVA = "0xEDF4B4", Offset = "0xEDF4B4", VA = "0xEDF4B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F7D")]
				[Address(RVA = "0xEDF4FC", Offset = "0xEDF4FC", VA = "0xEDF4FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F78")]
			[Address(RVA = "0xEDF100", Offset = "0xEDF100", VA = "0xEDF100")]
			[DebuggerHidden]
			public <RequestPostDailyJourneyLeaderboardEntry>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0xEDF12C", Offset = "0xEDF12C", VA = "0xEDF12C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0xEDF130", Offset = "0xEDF130", VA = "0xEDF130", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0xEDF4BC", Offset = "0xEDF4BC", VA = "0xEDF4BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BEA")]
		private const string X15_BACKEND_BASE_URI = "https://x15.backend.fasttravelgames.com";

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScoreBehaviour score;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DailyJourneyBehaviour dailyJourneyBehaviour;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4850", Offset = "0x8C4850")]
		private int pickFriendNameWeight;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int pickLeaderboardNameWeight;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextAsset fallbackNameList;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IPlatform platform;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isBackendHealthy;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string loadedShipwreckPlayerName;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DailyJourneyInfo dailyJourneyInfo;

		[Token(Token = "0x17000597")]
		public ScoreBehaviour Score
		{
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x2488804", Offset = "0x2488804", VA = "0x2488804")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000598")]
		public DailyJourneyBehaviour DailyJourney
		{
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x248880C", Offset = "0x248880C", VA = "0x248880C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000599")]
		public bool IsBackendHealthy
		{
			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x2488814", Offset = "0x2488814", VA = "0x2488814")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059A")]
		public bool IsPlatformInitialized
		{
			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x248881C", Offset = "0x248881C", VA = "0x248881C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059B")]
		public bool IsShipwreckPlayerNameLoaded
		{
			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x24888CC", Offset = "0x24888CC", VA = "0x24888CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000083")]
		public event Action OnBackendHealthyResponse
		{
			[Token(Token = "0x6001F44")]
			[Address(RVA = "0x2487E04", Offset = "0x2487E04", VA = "0x2487E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3BD0", Offset = "0x8D3BD0")]
			add
			{
			}
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x2487EA4", Offset = "0x2487EA4", VA = "0x2487EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3BE0", Offset = "0x8D3BE0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		public event Action<DailyJourneyInfo> OnDailyJourneyInfoLoaded
		{
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x2487F44", Offset = "0x2487F44", VA = "0x2487F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3BF0", Offset = "0x8D3BF0")]
			add
			{
			}
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x2487FE4", Offset = "0x2487FE4", VA = "0x2487FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3C00", Offset = "0x8D3C00")]
			remove
			{
			}
		}

		[Token(Token = "0x14000085")]
		public event Action OnDailyJourneyInfoLoadFail
		{
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0x2488084", Offset = "0x2488084", VA = "0x2488084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3C10", Offset = "0x8D3C10")]
			add
			{
			}
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x2488124", Offset = "0x2488124", VA = "0x2488124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3C20", Offset = "0x8D3C20")]
			remove
			{
			}
		}

		[Token(Token = "0x14000086")]
		public event Action<Shared.Platform.LeaderboardEntry[]> OnDailyJourneyLeaderboardLoaded
		{
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x24881C4", Offset = "0x24881C4", VA = "0x24881C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3C30", Offset = "0x8D3C30")]
			add
			{
			}
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0x2488264", Offset = "0x2488264", VA = "0x2488264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3C40", Offset = "0x8D3C40")]
			remove
			{
			}
		}

		[Token(Token = "0x14000087")]
		public event Action OnDailyJourneyLeaderboardLoadFail
		{
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0x2488304", Offset = "0x2488304", VA = "0x2488304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3C50", Offset = "0x8D3C50")]
			add
			{
			}
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x24883A4", Offset = "0x24883A4", VA = "0x24883A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3C60", Offset = "0x8D3C60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000088")]
		public event Action<Shared.Platform.LeaderboardEntry[]> OnDailyJourneyLoggedInUserLeaderboardEntryLoaded
		{
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x2488444", Offset = "0x2488444", VA = "0x2488444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3C70", Offset = "0x8D3C70")]
			add
			{
			}
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x24884E4", Offset = "0x24884E4", VA = "0x24884E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3C80", Offset = "0x8D3C80")]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public event Action<bool> OnLeaderboardEntryUploaded
		{
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x2488584", Offset = "0x2488584", VA = "0x2488584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3C90", Offset = "0x8D3C90")]
			add
			{
			}
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x2488624", Offset = "0x2488624", VA = "0x2488624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3CA0", Offset = "0x8D3CA0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008A")]
		public event Action OnLeaderboardEntryUploadFail
		{
			[Token(Token = "0x6001F52")]
			[Address(RVA = "0x24886C4", Offset = "0x24886C4", VA = "0x24886C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3CB0", Offset = "0x8D3CB0")]
			add
			{
			}
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0x2488764", Offset = "0x2488764", VA = "0x2488764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D3CC0", Offset = "0x8D3CC0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x24888DC", Offset = "0x24888DC", VA = "0x24888DC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x2488A80", Offset = "0x2488A80", VA = "0x2488A80")]
		public string GetLoggedInUserId()
		{
			return null;
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x2488B30", Offset = "0x2488B30", VA = "0x2488B30")]
		public void UnloadShipwreckPlayerName()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x2488B3C", Offset = "0x2488B3C", VA = "0x2488B3C")]
		public void LoadShipwreckPlayerName()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x24890F0", Offset = "0x24890F0", VA = "0x24890F0")]
		public bool TryGetLoadedShipwreckPlayerName(out string playerName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x248912C", Offset = "0x248912C", VA = "0x248912C")]
		public bool TryGetValidDailyJourneyInfo(out DailyJourneyInfo dailyJourneyInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x248916C", Offset = "0x248916C", VA = "0x248916C")]
		public void LoadDailyJourneyInfo()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x2489210", Offset = "0x2489210", VA = "0x2489210")]
		public void UploadDailyJourneyLeaderboardEntry()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x24892E0", Offset = "0x24892E0", VA = "0x24892E0")]
		public void GetDailyJourneyLeaderboard(LeaderboardMode leaderboardMode)
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x2489414", Offset = "0x2489414", VA = "0x2489414")]
		public void GetDailyJourneyGlobalLeaderboard()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x24892F8", Offset = "0x24892F8", VA = "0x24892F8")]
		public void GetDailyJourneyFriendsLeaderboard()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x2489530", Offset = "0x2489530", VA = "0x2489530")]
		public void LoadLoggedInUserDailyJourneyLeaderboardEntry()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x2489648", Offset = "0x2489648", VA = "0x2489648")]
		private void OnPickRandomFriendListName(string[] friendListDisplayNames)
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x2489740", Offset = "0x2489740", VA = "0x2489740")]
		private void OnPickRandomLeaderboardName(Shared.Platform.LeaderboardEntry[] leaderboardEntries)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x2488F64", Offset = "0x2488F64", VA = "0x2488F64")]
		private void OnPickRandomFallbackName()
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x2488A08", Offset = "0x2488A08", VA = "0x2488A08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3CD0", Offset = "0x8D3CD0")]
		private IEnumerator RequestHealthCheck()
		{
			return null;
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x2489198", Offset = "0x2489198", VA = "0x2489198")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3D30", Offset = "0x8D3D30")]
		private IEnumerator RequestGetDailyJourneyInfo()
		{
			return null;
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x2489258", Offset = "0x2489258", VA = "0x2489258")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3D90", Offset = "0x8D3D90")]
		private IEnumerator RequestPostDailyJourneyLeaderboardEntry(int score)
		{
			return null;
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x2489840", Offset = "0x2489840", VA = "0x2489840")]
		public MultiplayerManager()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class MusicManager : MonoBehaviourSingleton<MusicManager>
	{
		[Serializable]
		[Token(Token = "0x2000500")]
		public struct MusicTagTypes
		{
			[Token(Token = "0x4001C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool canBePaused;

			[Token(Token = "0x4001C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MusicTrigger musicType;

			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorTagCollectionHierarchy tagRules;
		}

		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAB90", Offset = "0x8AAB90")]
		private sealed class <WaitForMusicLoadRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<MusicTagTypes>.Enumerator <>7__wrap1;

			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private MusicTagTypes <musicTrigger>5__3;

			[Token(Token = "0x170005A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F8F")]
				[Address(RVA = "0xEE011C", Offset = "0xEE011C", VA = "0xEE011C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F91")]
				[Address(RVA = "0xEE0164", Offset = "0xEE0164", VA = "0xEE0164", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0xEDFB8C", Offset = "0xEDFB8C", VA = "0xEDFB8C")]
			[DebuggerHidden]
			public <WaitForMusicLoadRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xEDFBB8", Offset = "0xEDFBB8", VA = "0xEDFBB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0xEDFCFC", Offset = "0xEDFCFC", VA = "0xEDFCFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0xEDFC54", Offset = "0xEDFC54", VA = "0xEDFC54")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0xEDFCA8", Offset = "0xEDFCA8", VA = "0xEDFCA8")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001F90")]
			[Address(RVA = "0xEE0124", Offset = "0xEE0124", VA = "0xEE0124", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000502")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AABA0", Offset = "0x8AABA0")]
		private sealed class <FadeTransitionMusicRoutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x4001C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <fadeIn>5__2;

			[Token(Token = "0x4001C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			private bool <fadeOut>5__3;

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <t>5__4;

			[Token(Token = "0x170005A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F95")]
				[Address(RVA = "0xEDFB3C", Offset = "0xEDFB3C", VA = "0xEDFB3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F97")]
				[Address(RVA = "0xEDFB84", Offset = "0xEDFB84", VA = "0xEDFB84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F92")]
			[Address(RVA = "0xEDF9A0", Offset = "0xEDF9A0", VA = "0xEDF9A0")]
			[DebuggerHidden]
			public <FadeTransitionMusicRoutine>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001F93")]
			[Address(RVA = "0xEDF9CC", Offset = "0xEDF9CC", VA = "0xEDF9CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F94")]
			[Address(RVA = "0xEDF9D0", Offset = "0xEDF9D0", VA = "0xEDF9D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F96")]
			[Address(RVA = "0xEDFB44", Offset = "0xEDFB44", VA = "0xEDFB44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C493C", Offset = "0x8C493C")]
		private List<MusicTagTypes> inGameMusic;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<MusicTagTypes> menuMusic;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4998", Offset = "0x8C4998")]
		[SerializeField]
		private MusicTrigger defaultMusic;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C49E4", Offset = "0x8C49E4")]
		[SerializeField]
		private AudioEaseEnum fadeInType;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float fadeInTime;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float fadeInDelay;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private AudioEaseEnum fadeOutType;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float fadeOutTime;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float fadeOutDelay;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MusicTrigger previousMusicPlaying;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MusicTrigger currentMusicPlaying;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine transitionRoutine;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isMusicLoaded;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool isGameLoaded;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x2489F94", Offset = "0x2489F94", VA = "0x2489F94")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x248A138", Offset = "0x248A138", VA = "0x248A138", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x248A51C", Offset = "0x248A51C", VA = "0x248A51C", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x248A4A4", Offset = "0x248A4A4", VA = "0x248A4A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3EE0", Offset = "0x8D3EE0")]
		private IEnumerator WaitForMusicLoadRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x248A814", Offset = "0x248A814", VA = "0x248A814")]
		public void CheckCurrentMusic()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x248ABF0", Offset = "0x248ABF0", VA = "0x248ABF0")]
		private void OnSectorLoadWindDown(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x248A910", Offset = "0x248A910", VA = "0x248A910")]
		private bool TryFadeInMusic(List<MusicTagTypes> musicTriggers)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x248AAE8", Offset = "0x248AAE8", VA = "0x248AAE8")]
		private void FadeInMusic(MusicTrigger musicTrigger)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x248ABFC", Offset = "0x248ABFC", VA = "0x248ABFC")]
		private void FadeTransitionMusicCancel()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x248ACA8", Offset = "0x248ACA8", VA = "0x248ACA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D3F40", Offset = "0x8D3F40")]
		private IEnumerator FadeTransitionMusicRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x248AD20", Offset = "0x248AD20", VA = "0x248AD20")]
		public MusicManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000503")]
	public class SystemData
	{
		[Token(Token = "0x4001C2A")]
		public const float DEFAULT_VOLUME = 1f;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float SfxVolume;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MusicVolume;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Language Language;

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xF2B48C", Offset = "0xF2B48C", VA = "0xF2B48C")]
		public SystemData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000504")]
	public class Preferences
	{
		[Token(Token = "0x4001C2E")]
		public const XRNode DEFAULT_MAIN_HAND = XRNode.RightHand;

		[Token(Token = "0x4001C2F")]
		public const bool DEFAULT_DISPLAY_SCAN_INFO = false;

		[Token(Token = "0x4001C30")]
		public const bool DEFAULT_DISPLAY_DEATH_SUMMARY = false;

		[Token(Token = "0x4001C31")]
		public const bool DEFAULT_ENABLE_BUTTON_TOUCH_INTERACTION = true;

		[Token(Token = "0x4001C32")]
		public const bool DEFAULT_ENABLE_HAPTICS = true;

		[Token(Token = "0x4001C33")]
		public const bool DEFAULT_ENABLE_COMMON_NOTIFICATIONS = false;

		[Token(Token = "0x4001C34")]
		public const bool DEFAULT_ENABLE_SHIPWRECK_RESCUE_SECTORS = true;

		[Token(Token = "0x4001C35")]
		public const bool DEFAULT_ENABLE_AUTO_SCANNER = false;

		[Token(Token = "0x4001C36")]
		public const bool DEFAULT_PICKUP_AUTO_COLLECT = false;

		[Token(Token = "0x4001C37")]
		public const VignetteSetting DEFAULT_VIGNETTE_AMOUNT = VignetteSetting.Full;

		[Token(Token = "0x4001C38")]
		public const int DEFAULT_MOVE_MODE = 0;

		[Token(Token = "0x4001C39")]
		public const bool DEFAULT_ENABLE_DIALOGUE_VOICE_OVER = true;

		[Token(Token = "0x4001C3A")]
		public const bool DEFAULT_ENABLE_VIR_CALL_OUTS = true;

		[Token(Token = "0x4001C3B")]
		public const int DEFAULT_RELAXED_PROTECTION = 0;

		[Token(Token = "0x4001C3C")]
		public const int DEFAULT_RELAXED_ADVANCED_ARSENAL = 0;

		[Token(Token = "0x4001C3D")]
		public const int DEFAULT_RELAXED_LARGE_WALLET = 0;

		[Token(Token = "0x4001C3E")]
		public const int DEFAULT_RELAXED_TRADERS_GUILD = 0;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public XRNode MainHand;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool DisplayScanInfo;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool DisplayDeathSummary;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool EnableButtonTouchInteraction;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool EnableHaptics;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool EnableCommonNotifications;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool EnableShipwreckRescueSectors;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool EnableAutoScanner;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool EnableAutoCollect;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VignetteSetting VignetteAmount;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MoveMode;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool EnableDialogueVoiceOver;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool EnableVirCallOuts;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int RelaxedProtection;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int RelaxedAdvancedArsenal;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int RelaxedLargeWallet;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int RelaxedTradersGuild;

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xCE59BC", Offset = "0xCE59BC", VA = "0xCE59BC")]
		public Preferences()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000505")]
	public class QueuedRewardEntry
	{
		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SectorTag unlockShipTag;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizationKey shipNameKey;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int storyKeys;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SfxTrigger claimRewardSfx;

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xCE972C", Offset = "0xCE972C", VA = "0xCE972C")]
		public static QueuedRewardEntry CreateUnlockShip(SectorTag unlockShip, LocalizationKey shipNameKey, [System.Runtime.InteropServices.Optional] SfxTrigger claimRewardSfx)
		{
			return null;
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xCE97F0", Offset = "0xCE97F0", VA = "0xCE97F0")]
		public static QueuedRewardEntry CreateStoryKeys(int storyKeys, [System.Runtime.InteropServices.Optional] SfxTrigger claimRewardSfx)
		{
			return null;
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xCE97E8", Offset = "0xCE97E8", VA = "0xCE97E8")]
		public QueuedRewardEntry()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000506")]
	public class OnGoingRunState
	{
		[Serializable]
		[Token(Token = "0x2000507")]
		public class ShipStats
		{
			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isValid;

			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float currentHealth;

			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int currentScrap;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int currentAmmo;

			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0xEE0C64", Offset = "0xEE0C64", VA = "0xEE0C64")]
			public ShipStats()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000508")]
		public class EquippedComponent
		{
			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTag abilityTag;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int level;

			[Token(Token = "0x4001C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string state;

			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0xEE0BD8", Offset = "0xEE0BD8", VA = "0xEE0BD8")]
			public EquippedComponent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000509")]
		public class HistoryScene
		{
			[Token(Token = "0x4001C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<SectorTagAmount> sectorTagAmounts;

			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0xEE0BE0", Offset = "0xEE0BE0", VA = "0xEE0BE0")]
			public HistoryScene()
			{
			}
		}

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string seed;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string gameMode;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SectorTag shipTag;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShipStats shipStats;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<EquippedComponent> equippedComponents;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<BuffsUtil.PermanentStatBuff> permanentStatBuffs;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SectorMapResult sectorMap;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<SectorTagAmount> sectorMapBaseTags;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<SectorMapIndex> visitedSectorIndices;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<HistoryScene> globalSceneTagHistory;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<SectorTagAmount> runUnlockTags;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PortableRandomState randomMapState;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PortableRandomState randomRunState;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public PortableRandomState randomTagModulesState;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PortableRandomState randomTBD2State;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<int> randomSectors;

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x24914FC", Offset = "0x24914FC", VA = "0x24914FC")]
		public OnGoingRunState()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class PlayerProfile : MonoBehaviourSingleton<PlayerProfile>
	{
		[Serializable]
		[Token(Token = "0x200050B")]
		public struct ProfileSummary
		{
			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int id;

			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int runCount;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float totalPlayTime;

			[Token(Token = "0x6002006")]
			[Address(RVA = "0xD6E3E8", Offset = "0xD6E3E8", VA = "0xD6E3E8")]
			public ProfileSummary(int id)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200050C")]
		private class ProfileSelection
		{
			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int selectedProfileId;

			[Token(Token = "0x4001C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<ProfileSummary> profileSummaries;

			[Token(Token = "0x6002007")]
			[Address(RVA = "0xD6E364", Offset = "0xD6E364", VA = "0xD6E364")]
			public ProfileSelection()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200050D")]
		private class ProfileWrapper
		{
			[Token(Token = "0x4001C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] WalletAmount;

			[Token(Token = "0x4001C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<RunData> RunStats;

			[Token(Token = "0x4001C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<StatData> PurchasedStats;

			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<SectorTagAmount> storyTags;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Preferences Preferences;

			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<string> techTreeNodeIds;

			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<string> selectedThreatIds;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int clearedThreatLevel;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<AbilityPassiveData> abilityPassiveStats;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int restrictedEntriesUnlocked;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool restrictedAreaUnlocked;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
			public bool logicBombUnlocked;

			[Token(Token = "0x4001CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public PlayerShipData playerShip;

			[Token(Token = "0x4001CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public List<SectorTag> unlockedPlayerShips;

			[Token(Token = "0x4001CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public List<SectorTag> notSeenPlayerShips;

			[Token(Token = "0x4001CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public List<QueuedRewardEntry> queuedRewards;

			[Token(Token = "0x4001CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public OnGoingRunState onGoingRunState;

			[Token(Token = "0x6002008")]
			[Address(RVA = "0xD6E3F4", Offset = "0xD6E3F4", VA = "0xD6E3F4")]
			public ProfileSummary CreateProfileSummary(int id)
			{
				return default(ProfileSummary);
			}

			[Token(Token = "0x6002009")]
			[Address(RVA = "0xD6E418", Offset = "0xD6E418", VA = "0xD6E418")]
			public static ProfileSummary CreateProfileSummary(int id, IReadOnlyList<RunData> runs)
			{
				return default(ProfileSummary);
			}

			[Token(Token = "0x600200A")]
			[Address(RVA = "0xD6E708", Offset = "0xD6E708", VA = "0xD6E708")]
			public ProfileWrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200050E")]
		private class Wallets
		{
			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CurrencyWallet[] Collection;

			[Token(Token = "0x600200B")]
			[Address(RVA = "0xD6E794", Offset = "0xD6E794", VA = "0xD6E794")]
			public Wallets(int[] startAmounts)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200050F")]
		public class PlayerShipData
		{
			[Serializable]
			[Token(Token = "0x2000510")]
			public class PlayerShipSkin
			{
				[Token(Token = "0x4001CAD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SectorTag playerShipTag;

				[Token(Token = "0x4001CAE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public SectorTag skinTag;

				[Token(Token = "0x6002010")]
				[Address(RVA = "0xEAE314", Offset = "0xEAE314", VA = "0xEAE314")]
				public PlayerShipSkin()
				{
				}
			}

			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTag playerShipTag;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<PlayerShipSkin> selectedPlayerShipSkins;

			[Token(Token = "0x600200C")]
			[Address(RVA = "0xD6DEC4", Offset = "0xD6DEC4", VA = "0xD6DEC4")]
			public void Reset(SectorTag defaultPlayerShipTag, List<PlayerShipSkin> defaultSelectedPlayerShipSkins)
			{
			}

			[Token(Token = "0x600200D")]
			[Address(RVA = "0xD6DF00", Offset = "0xD6DF00", VA = "0xD6DF00")]
			public void SetSkinByTag(SectorTag shipTag, SectorTag skinTag)
			{
			}

			[Token(Token = "0x600200E")]
			[Address(RVA = "0xD6E12C", Offset = "0xD6E12C", VA = "0xD6E12C")]
			public SectorTag GetCurrentSkinByTag(SectorTag shipTag)
			{
				return default(SectorTag);
			}

			[Token(Token = "0x600200F")]
			[Address(RVA = "0xD6E2E0", Offset = "0xD6E2E0", VA = "0xD6E2E0")]
			public PlayerShipData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000511")]
		public class RelaxedModeSetting
		{
			[Serializable]
			[Token(Token = "0x2000512")]
			public enum RelaxedModeType
			{
				[Token(Token = "0x4001CB2")]
				Protection = 1,
				[Token(Token = "0x4001CB3")]
				AdvancedArsenal,
				[Token(Token = "0x4001CB4")]
				LargeWallet,
				[Token(Token = "0x4001CB5")]
				TradersGuild
			}

			[Serializable]
			[Token(Token = "0x2000513")]
			public struct BuffRank
			{
				[Token(Token = "0x4001CB6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public List<BuffObject> buffRank;

				[Token(Token = "0x4001CB7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public List<SectorTag> sectorTag;
			}

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RelaxedModeType type;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<BuffRank> buffRanks;

			[Token(Token = "0x6002011")]
			[Address(RVA = "0xD6E710", Offset = "0xD6E710", VA = "0xD6E710")]
			public RelaxedModeSetting()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000514")]
		public struct PlayerShipMoveMode
		{
			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VRPlayerSelectorMoveActionMode moveMode;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public VRPlayerSelectorRayType moveRay;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 moveRayActivateRange;
		}

		[Serializable]
		[Token(Token = "0x2000515")]
		public struct UnlockablePlayerShips
		{
			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorTag unlockableShipTag;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTag requiredUnlockShipTag;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizationKey shipNameKey;

			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SfxTrigger shipUnlockSfx;
		}

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AABB0", Offset = "0x8AABB0")]
		private sealed class <>c__DisplayClass137_0
		{
			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IReadOnlyRunData currentRun;

			[Token(Token = "0x6002012")]
			[Address(RVA = "0xD6DB0C", Offset = "0xD6DB0C", VA = "0xD6DB0C")]
			public <>c__DisplayClass137_0()
			{
			}

			[Token(Token = "0x6002013")]
			[Address(RVA = "0xD6DB14", Offset = "0xD6DB14", VA = "0xD6DB14")]
			internal bool <OnRunSuccessRewards>b__0(UnlockablePlayerShips p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AABC0", Offset = "0x8AABC0")]
		private sealed class <>c__DisplayClass143_0
		{
			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x6002014")]
			[Address(RVA = "0xD6DCB0", Offset = "0xD6DCB0", VA = "0xD6DCB0")]
			public <>c__DisplayClass143_0()
			{
			}

			[Token(Token = "0x6002015")]
			[Address(RVA = "0xD6DCB8", Offset = "0xD6DCB8", VA = "0xD6DCB8")]
			internal bool <ValidatePlayerSummaries>b__0(ProfileSummary p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AABD0", Offset = "0x8AABD0")]
		private sealed class <>c__DisplayClass143_1
		{
			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ProfileWrapper saveFile;

			[Token(Token = "0x6002016")]
			[Address(RVA = "0xD6DCC8", Offset = "0xD6DCC8", VA = "0xD6DCC8")]
			public <>c__DisplayClass143_1()
			{
			}

			[Token(Token = "0x6002017")]
			[Address(RVA = "0xD6DCD0", Offset = "0xD6DCD0", VA = "0xD6DCD0")]
			internal void <ValidatePlayerSummaries>b__1(ProfileWrapper p)
			{
			}

			[Token(Token = "0x6002018")]
			[Address(RVA = "0xD6DCD8", Offset = "0xD6DCD8", VA = "0xD6DCD8")]
			internal void <ValidatePlayerSummaries>b__2(ProfileWrapper p)
			{
			}
		}

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AABE0", Offset = "0x8AABE0")]
		private sealed class <>c__DisplayClass146_0
		{
			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x6002019")]
			[Address(RVA = "0xD6DCE0", Offset = "0xD6DCE0", VA = "0xD6DCE0")]
			public <>c__DisplayClass146_0()
			{
			}

			[Token(Token = "0x600201A")]
			[Address(RVA = "0xD6DCE8", Offset = "0xD6DCE8", VA = "0xD6DCE8")]
			internal bool <ResetPlayer>b__0(ProfileSummary p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AABF0", Offset = "0x8AABF0")]
		private sealed class <>c__DisplayClass159_0
		{
			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTag unlockedShipTag;

			[Token(Token = "0x600201B")]
			[Address(RVA = "0xD6DCF8", Offset = "0xD6DCF8", VA = "0xD6DCF8")]
			public <>c__DisplayClass159_0()
			{
			}

			[Token(Token = "0x600201C")]
			[Address(RVA = "0xD6DD00", Offset = "0xD6DD00", VA = "0xD6DD00")]
			internal bool <ValidatePlayerShipValues>b__0(UnlockablePlayerShips p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC00", Offset = "0x8AAC00")]
		private sealed class <>c__DisplayClass159_1
		{
			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerShipData.PlayerShipSkin defaultShipSkin;

			[Token(Token = "0x600201D")]
			[Address(RVA = "0xD6DD8C", Offset = "0xD6DD8C", VA = "0xD6DD8C")]
			public <>c__DisplayClass159_1()
			{
			}

			[Token(Token = "0x600201E")]
			[Address(RVA = "0xD6DD94", Offset = "0xD6DD94", VA = "0xD6DD94")]
			internal bool <ValidatePlayerShipValues>b__1(PlayerShipData.PlayerShipSkin p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC10", Offset = "0x8AAC10")]
		private sealed class <>c__DisplayClass162_0
		{
			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnlockablePlayerShips unlockableShip;

			[Token(Token = "0x600201F")]
			[Address(RVA = "0xD6DE28", Offset = "0xD6DE28", VA = "0xD6DE28")]
			public <>c__DisplayClass162_0()
			{
			}

			[Token(Token = "0x6002020")]
			[Address(RVA = "0xD6DE30", Offset = "0xD6DE30", VA = "0xD6DE30")]
			internal bool <TryUnlockPlayerShip>b__0(QueuedRewardEntry p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4A80", Offset = "0x8C4A80")]
		private SectorTag defaultPlayerShipTag;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<PlayerShipData.PlayerShipSkin> defaultSelectedPlayerShipSkins;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4ADC", Offset = "0x8C4ADC")]
		private int startAmountExperience;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int startStoryKey;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4B38", Offset = "0x8C4B38")]
		[SerializeField]
		private ThreatLevelRewardsFirstRun firstRunSuccessReward;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4B84", Offset = "0x8C4B84")]
		private PlayerShipMoveMode[] playerShipMoveModes;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<RelaxedModeSetting> relaxedModeSettings;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4BE0", Offset = "0x8C4BE0")]
		[SerializeField]
		private List<UnlockablePlayerShips> unlockableShips;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4C2C", Offset = "0x8C4C2C")]
		[SerializeField]
		private int saveFileValidateCount;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ProfileSelection profileSelection;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Wallets wallets;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Preferences preferences;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly string saveFilename;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly string optionsFilename;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly string saveSummaryFilename;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private StatsTracker statsTracker;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private SectorTagsInput storyTags;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4C78", Offset = "0x8C4C78")]
		private readonly FlagGroup <ForceAllowStoryTags>k__BackingField;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AbilityTracker abilityTracker;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<string> selectedThreatIds;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int clearedThreatLevel;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool restrictedAreaUnlocked;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int restrictedEntriesUnlocked;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool logicBombUnlocked;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PlayerShipData playerShip;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private OnGoingRunState onGoingRunState;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<SectorTag> unlockedPlayerShips;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<SectorTag> notSeenPlayerShips;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<QueuedRewardEntry> queuedRewards;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<string> techTreeNodeIds;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private SystemData options;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int[] walletStartAmounts;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool enableStatsTrackerTick;

		[Token(Token = "0x170005A6")]
		public int Id
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x249D950", Offset = "0x249D950", VA = "0x249D950")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005A7")]
		public IReadOnlyList<ProfileSummary> ProfileSummaries
		{
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0x249D96C", Offset = "0x249D96C", VA = "0x249D96C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A8")]
		public CurrencyWallet Experience
		{
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x248C898", Offset = "0x248C898", VA = "0x248C898")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A9")]
		public CurrencyWallet StoryKeys
		{
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0x248C8D4", Offset = "0x248C8D4", VA = "0x248C8D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AA")]
		public StatsTracker StatsTracker
		{
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0x249DA0C", Offset = "0x249DA0C", VA = "0x249DA0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AB")]
		public SectorTagsInput StoryTags
		{
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x249DA14", Offset = "0x249DA14", VA = "0x249DA14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AC")]
		public FlagGroup ForceAllowStoryTags
		{
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0x249DA1C", Offset = "0x249DA1C", VA = "0x249DA1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4040", Offset = "0x8D4040")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AD")]
		public AbilityTracker AbilityTracker
		{
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0x249DA24", Offset = "0x249DA24", VA = "0x249DA24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AE")]
		public List<string> SelectedThreatIds
		{
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x249DA2C", Offset = "0x249DA2C", VA = "0x249DA2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AF")]
		public int ClearedThreatLevel
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x249DA34", Offset = "0x249DA34", VA = "0x249DA34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x249DA3C", Offset = "0x249DA3C", VA = "0x249DA3C")]
			set
			{
			}
		}

		[Token(Token = "0x170005B0")]
		public bool RestrictedAreaUnlocked
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x249DA44", Offset = "0x249DA44", VA = "0x249DA44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x249DA4C", Offset = "0x249DA4C", VA = "0x249DA4C")]
			set
			{
			}
		}

		[Token(Token = "0x170005B1")]
		public int RestrictedEntriesUnlocked
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x249DA58", Offset = "0x249DA58", VA = "0x249DA58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x249DA60", Offset = "0x249DA60", VA = "0x249DA60")]
			set
			{
			}
		}

		[Token(Token = "0x170005B2")]
		public bool LogicBombUnlocked
		{
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x249DA68", Offset = "0x249DA68", VA = "0x249DA68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x249DA70", Offset = "0x249DA70", VA = "0x249DA70")]
			set
			{
			}
		}

		[Token(Token = "0x170005B3")]
		public PlayerShipData PlayerShip
		{
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x249DA7C", Offset = "0x249DA7C", VA = "0x249DA7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B4")]
		public OnGoingRunState OnGoingRunState
		{
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x249DA84", Offset = "0x249DA84", VA = "0x249DA84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B5")]
		public SectorTag DefaultPlayerShipTag
		{
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x249DA8C", Offset = "0x249DA8C", VA = "0x249DA8C")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x170005B6")]
		public List<SectorTag> UnlockedPlayerShips
		{
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x249DA98", Offset = "0x249DA98", VA = "0x249DA98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B7")]
		public List<SectorTag> NotSeenPlayerShips
		{
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x249DAA0", Offset = "0x249DAA0", VA = "0x249DAA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B8")]
		public IReadOnlyList<PlayerShipMoveMode> PlayerShipMoveModes
		{
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x249DD28", Offset = "0x249DD28", VA = "0x249DD28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B9")]
		public List<QueuedRewardEntry> QueuedRewards
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x249DD30", Offset = "0x249DD30", VA = "0x249DD30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BA")]
		public List<RelaxedModeSetting> RelaxedModeSettings
		{
			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x249DD38", Offset = "0x249DD38", VA = "0x249DD38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BB")]
		public Preferences Preferences
		{
			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0x249DE88", Offset = "0x249DE88", VA = "0x249DE88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BC")]
		public List<string> TechTreeNodeIds
		{
			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0x249DE90", Offset = "0x249DE90", VA = "0x249DE90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BD")]
		public SystemData Options
		{
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x249DFE0", Offset = "0x249DFE0", VA = "0x249DFE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400008B")]
		public event Action<SectorTag> OnPlayerShipUnlocked
		{
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x249DAA8", Offset = "0x249DAA8", VA = "0x249DAA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4050", Offset = "0x8D4050")]
			add
			{
			}
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x249DB48", Offset = "0x249DB48", VA = "0x249DB48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4060", Offset = "0x8D4060")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		public event Action OnPlayerShipChanged
		{
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x249DBE8", Offset = "0x249DBE8", VA = "0x249DBE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4070", Offset = "0x8D4070")]
			add
			{
			}
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x249DC88", Offset = "0x249DC88", VA = "0x249DC88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4080", Offset = "0x8D4080")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public event Action<RelaxedModeSetting, int> OnRelaxedModeSettingChanged
		{
			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x249DD40", Offset = "0x249DD40", VA = "0x249DD40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4090", Offset = "0x8D4090")]
			add
			{
			}
			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x249DDE4", Offset = "0x249DDE4", VA = "0x249DDE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D40A0", Offset = "0x8D40A0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008E")]
		public event Action OnTechTreeNodeIdsChanged
		{
			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0x249DE98", Offset = "0x249DE98", VA = "0x249DE98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D40B0", Offset = "0x8D40B0")]
			add
			{
			}
			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0x249DF3C", Offset = "0x249DF3C", VA = "0x249DF3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D40C0", Offset = "0x8D40C0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public event Action<bool> OnRunResultSaved
		{
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x249DFE8", Offset = "0x249DFE8", VA = "0x249DFE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D40D0", Offset = "0x8D40D0")]
			add
			{
			}
			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0x249E08C", Offset = "0x249E08C", VA = "0x249E08C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D40E0", Offset = "0x8D40E0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000090")]
		public event Action OnSaveFileChanged
		{
			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0x249E130", Offset = "0x249E130", VA = "0x249E130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D40F0", Offset = "0x8D40F0")]
			add
			{
			}
			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0x249E1D4", Offset = "0x249E1D4", VA = "0x249E1D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4100", Offset = "0x8D4100")]
			remove
			{
			}
		}

		[Token(Token = "0x14000091")]
		public event Action<SectorTag, SectorTag> OnPlayerSkinChanged
		{
			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0x249E278", Offset = "0x249E278", VA = "0x249E278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4110", Offset = "0x8D4110")]
			add
			{
			}
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x249E31C", Offset = "0x249E31C", VA = "0x249E31C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4120", Offset = "0x8D4120")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x249D988", Offset = "0x249D988", VA = "0x249D988")]
		private string GetProfileFolder(int id)
		{
			return null;
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x249E3C0", Offset = "0x249E3C0", VA = "0x249E3C0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x249E7F8", Offset = "0x249E7F8", VA = "0x249E7F8", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x249E940", Offset = "0x249E940", VA = "0x249E940")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x249EA2C", Offset = "0x249EA2C", VA = "0x249EA2C")]
		private void OnGameLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x249EA34", Offset = "0x249EA34", VA = "0x249EA34")]
		private void OnGameLoadPrepare(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x249EA84", Offset = "0x249EA84", VA = "0x249EA84")]
		private void OnGameLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x249EA90", Offset = "0x249EA90", VA = "0x249EA90")]
		public void OnContinueRun()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x249ECA4", Offset = "0x249ECA4", VA = "0x249ECA4")]
		public void OnStartNewRun(List<RunManager.StartAbilityPassive> startAbilitiesPassive)
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x249EFB0", Offset = "0x249EFB0", VA = "0x249EFB0")]
		public void OnInteruptRun()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x249EFCC", Offset = "0x249EFCC", VA = "0x249EFCC")]
		private void OnRunResult(bool success)
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x249F684", Offset = "0x249F684", VA = "0x249F684")]
		public void SetPlayerShipSkinByTag(SectorTag shipTag, SectorTag skinTag)
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x249F73C", Offset = "0x249F73C", VA = "0x249F73C")]
		public SectorTag GetPlayerShipSkinByTag(SectorTag shipTag)
		{
			return default(SectorTag);
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x249F758", Offset = "0x249F758", VA = "0x249F758")]
		public void SetRelaxedModeSetting(RelaxedModeSetting.RelaxedModeType type, int level)
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x249F900", Offset = "0x249F900", VA = "0x249F900")]
		public bool TryGetRelaxedModeSetting(RelaxedModeSetting.RelaxedModeType type, out RelaxedModeSetting setting, out int value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x249FAA0", Offset = "0x249FAA0", VA = "0x249FAA0")]
		public bool IsRelaxedModeEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x249F890", Offset = "0x249F890", VA = "0x249F890")]
		private void SetRelaxedModeSettingValue(RelaxedModeSetting.RelaxedModeType type, int value)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x249FA28", Offset = "0x249FA28", VA = "0x249FA28")]
		public int GetRelaxedModeSettingValue(RelaxedModeSetting.RelaxedModeType type)
		{
			return default(int);
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x249FB58", Offset = "0x249FB58", VA = "0x249FB58")]
		public void SetPlayerShip(SectorTag newShip)
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x249FBA8", Offset = "0x249FBA8", VA = "0x249FBA8")]
		public bool IsPlayerShipTag(SectorTag shipTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x249FCEC", Offset = "0x249FCEC", VA = "0x249FCEC")]
		public bool HasPlayerShipTag(SectorTagsInput tags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x249FD14", Offset = "0x249FD14", VA = "0x249FD14")]
		public bool TryGetPlayerShipTag(SectorTagsInput tags, out SectorTag shipTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x249FE3C", Offset = "0x249FE3C", VA = "0x249FE3C")]
		private void OnRunEnd(bool success)
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x249F0F8", Offset = "0x249F0F8", VA = "0x249F0F8")]
		private void OnRunSuccessRewards(IReadOnlyRunData currentRun)
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x24A0340", Offset = "0x24A0340", VA = "0x24A0340")]
		private void AddThreatLevelFirstRunRewards(ThreatLevelRewardsFirstRun rewards)
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x249E5C8", Offset = "0x249E5C8", VA = "0x249E5C8")]
		private bool LoadPlayerAndOptions()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x24A03D0", Offset = "0x24A03D0", VA = "0x24A03D0")]
		private void SetupPlayerAndOptions()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x24A1208", Offset = "0x24A1208", VA = "0x24A1208")]
		private void OnLoadProfileSelectionComplete(ProfileSelection selection)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x24A1318", Offset = "0x24A1318", VA = "0x24A1318")]
		private void SavePlayerSummaries(bool updateActiveProfile)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x24A0404", Offset = "0x24A0404", VA = "0x24A0404")]
		private void ValidatePlayerSummaries()
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x24A1584", Offset = "0x24A1584", VA = "0x24A1584")]
		public bool TryGetPlayerSummary(int id, out ProfileSummary summary)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x24A179C", Offset = "0x24A179C", VA = "0x24A179C")]
		public void SetPlayer(int id)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x24A1CA4", Offset = "0x24A1CA4", VA = "0x24A1CA4")]
		public void ResetPlayer(int id, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTag> excludeStoryTags)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x24A1800", Offset = "0x24A1800", VA = "0x24A1800")]
		private void ResetPlayer(IReadOnlyList<SectorTag> excludeStoryTags, bool saveAfterReset)
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x249EA5C", Offset = "0x249EA5C", VA = "0x249EA5C")]
		public void Save()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x24A20C0", Offset = "0x24A20C0", VA = "0x24A20C0")]
		private void SaveProfile()
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x24A0A50", Offset = "0x24A0A50", VA = "0x24A0A50")]
		private bool LoadProfile()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x24A24A4", Offset = "0x24A24A4", VA = "0x24A24A4")]
		public void SavePreferences()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x24A21E4", Offset = "0x24A21E4", VA = "0x24A21E4")]
		private ProfileWrapper GetProfileWrapper()
		{
			return null;
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x24A2630", Offset = "0x24A2630", VA = "0x24A2630")]
		private void OnLoadProfileComplete(ProfileWrapper wrapper)
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x24A2CEC", Offset = "0x24A2CEC", VA = "0x24A2CEC")]
		public void SaveOptions()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x24A0C58", Offset = "0x24A0C58", VA = "0x24A0C58")]
		private bool LoadOptions()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x24A2EF8", Offset = "0x24A2EF8", VA = "0x24A2EF8")]
		private void OnLoadOptionsComplete(SystemData data)
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x24A2D8C", Offset = "0x24A2D8C", VA = "0x24A2D8C")]
		private void CreateNewOptions()
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x24A1E6C", Offset = "0x24A1E6C", VA = "0x24A1E6C")]
		private void ApplyPreferences()
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x24A0DC4", Offset = "0x24A0DC4", VA = "0x24A0DC4")]
		private void ValidatePlayerShipValues()
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x24A3080", Offset = "0x24A3080", VA = "0x24A3080")]
		public static int CountStoryTag(SectorTag tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x24A331C", Offset = "0x24A331C", VA = "0x24A331C")]
		public static bool ModifyStoryTag(SectorTag tag, SectorTagRuleModification modification, int modificationValue = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x24A00BC", Offset = "0x24A00BC", VA = "0x24A00BC")]
		private void TryUnlockPlayerShip(Predicate<UnlockablePlayerShips> checkShipUnlocked)
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x24A37E4", Offset = "0x24A37E4", VA = "0x24A37E4")]
		public void UnlockPlayerShip(SectorTag shipTag)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x24A38A8", Offset = "0x24A38A8", VA = "0x24A38A8")]
		public void AddTechTreeNodeId(string nodeId)
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x24A39E8", Offset = "0x24A39E8", VA = "0x24A39E8")]
		public void RemoveTechTreeNodeIds(List<string> nodeIds)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x24A2C74", Offset = "0x24A2C74", VA = "0x24A2C74")]
		public void AbandonRun()
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x24A2B74", Offset = "0x24A2B74", VA = "0x24A2B74")]
		public bool HasOnGoingRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x24A2BA0", Offset = "0x24A2BA0", VA = "0x24A2BA0")]
		public bool IsOngoingRunStateValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x24A3BE8", Offset = "0x24A3BE8", VA = "0x24A3BE8")]
		public PlayerProfile()
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x24A3FF8", Offset = "0x24A3FF8", VA = "0x24A3FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4130", Offset = "0x8D4130")]
		private bool <SavePlayerSummaries>b__142_0(ProfileSummary p)
		{
			return default(bool);
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x24A401C", Offset = "0x24A401C", VA = "0x24A401C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4140", Offset = "0x8D4140")]
		private void <SavePreferences>b__151_0(ProfileWrapper profileWrapper)
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x24A4120", Offset = "0x24A4120", VA = "0x24A4120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4150", Offset = "0x8D4150")]
		private bool <OnLoadProfileComplete>b__153_0(UnlockablePlayerShips p)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200051D")]
	public class RunManager : MonoBehaviourSingleton<RunManager>
	{
		[Token(Token = "0x200051E")]
		public class StartAbilityPassive
		{
			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5098", Offset = "0x8C5098")]
			private ShipAbilityPassive <AbilityPassivePrefab>k__BackingField;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C50A8", Offset = "0x8C50A8")]
			private int <Level>k__BackingField;

			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C50B8", Offset = "0x8C50B8")]
			private string <State>k__BackingField;

			[Token(Token = "0x170005D1")]
			public ShipAbilityPassive AbilityPassivePrefab
			{
				[Token(Token = "0x6002084")]
				[Address(RVA = "0xD736F4", Offset = "0xD736F4", VA = "0xD736F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D44A0", Offset = "0x8D44A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002085")]
				[Address(RVA = "0xD736FC", Offset = "0xD736FC", VA = "0xD736FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D44B0", Offset = "0x8D44B0")]
				set
				{
				}
			}

			[Token(Token = "0x170005D2")]
			public int Level
			{
				[Token(Token = "0x6002086")]
				[Address(RVA = "0xD73704", Offset = "0xD73704", VA = "0xD73704")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D44C0", Offset = "0x8D44C0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002087")]
				[Address(RVA = "0xD7370C", Offset = "0xD7370C", VA = "0xD7370C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D44D0", Offset = "0x8D44D0")]
				set
				{
				}
			}

			[Token(Token = "0x170005D3")]
			public string State
			{
				[Token(Token = "0x6002088")]
				[Address(RVA = "0xD73714", Offset = "0xD73714", VA = "0xD73714")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D44E0", Offset = "0x8D44E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002089")]
				[Address(RVA = "0xD7371C", Offset = "0xD7371C", VA = "0xD7371C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D44F0", Offset = "0x8D44F0")]
				set
				{
				}
			}

			[Token(Token = "0x600208A")]
			[Address(RVA = "0xD73724", Offset = "0xD73724", VA = "0xD73724")]
			public StartAbilityPassive()
			{
			}
		}

		[Token(Token = "0x200051F")]
		public interface IReadOnlyRunRandom
		{
			[Token(Token = "0x170005D4")]
			string Seed
			{
				[Token(Token = "0x600208B")]
				get;
			}

			[Token(Token = "0x170005D5")]
			bool SeedIsValid
			{
				[Token(Token = "0x600208C")]
				get;
			}

			[Token(Token = "0x170005D6")]
			WrappedRandom RandomMap
			{
				[Token(Token = "0x600208D")]
				get;
			}

			[Token(Token = "0x170005D7")]
			WrappedRandom RandomRun
			{
				[Token(Token = "0x600208E")]
				get;
			}

			[Token(Token = "0x170005D8")]
			WrappedRandom RandomTagModules
			{
				[Token(Token = "0x600208F")]
				get;
			}

			[Token(Token = "0x6002090")]
			WrappedRandom RandomSector(int absoluteIndex);
		}

		[Token(Token = "0x2000520")]
		private class RunRandom : IReadOnlyRunRandom
		{
			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C50C8", Offset = "0x8C50C8")]
			private string <Seed>k__BackingField;

			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C50D8", Offset = "0x8C50D8")]
			private WrappedRandom <RandomMap>k__BackingField;

			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C50E8", Offset = "0x8C50E8")]
			private WrappedRandom <RandomRun>k__BackingField;

			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C50F8", Offset = "0x8C50F8")]
			private WrappedRandom <RandomTagModules>k__BackingField;

			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5108", Offset = "0x8C5108")]
			private WrappedRandom <RandomTBD2>k__BackingField;

			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private WrappedRandom randomMain;

			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> randomSectors;

			[Token(Token = "0x170005D9")]
			public string Seed
			{
				[Token(Token = "0x6002091")]
				[Address(RVA = "0xD72F1C", Offset = "0xD72F1C", VA = "0xD72F1C", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4500", Offset = "0x8D4500")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002092")]
				[Address(RVA = "0xD72F24", Offset = "0xD72F24", VA = "0xD72F24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4510", Offset = "0x8D4510")]
				private set
				{
				}
			}

			[Token(Token = "0x170005DA")]
			public bool SeedIsValid
			{
				[Token(Token = "0x6002093")]
				[Address(RVA = "0xD72F2C", Offset = "0xD72F2C", VA = "0xD72F2C", Slot = "5")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005DB")]
			public WrappedRandom RandomMap
			{
				[Token(Token = "0x6002094")]
				[Address(RVA = "0xD72F50", Offset = "0xD72F50", VA = "0xD72F50", Slot = "6")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4520", Offset = "0x8D4520")]
				get
				{
					return default(WrappedRandom);
				}
				[Token(Token = "0x6002095")]
				[Address(RVA = "0xD72F58", Offset = "0xD72F58", VA = "0xD72F58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4530", Offset = "0x8D4530")]
				private set
				{
				}
			}

			[Token(Token = "0x170005DC")]
			public WrappedRandom RandomRun
			{
				[Token(Token = "0x6002096")]
				[Address(RVA = "0xD72F64", Offset = "0xD72F64", VA = "0xD72F64", Slot = "7")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4540", Offset = "0x8D4540")]
				get
				{
					return default(WrappedRandom);
				}
				[Token(Token = "0x6002097")]
				[Address(RVA = "0xD72F6C", Offset = "0xD72F6C", VA = "0xD72F6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4550", Offset = "0x8D4550")]
				private set
				{
				}
			}

			[Token(Token = "0x170005DD")]
			public WrappedRandom RandomTagModules
			{
				[Token(Token = "0x6002098")]
				[Address(RVA = "0xD72F78", Offset = "0xD72F78", VA = "0xD72F78", Slot = "8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4560", Offset = "0x8D4560")]
				get
				{
					return default(WrappedRandom);
				}
				[Token(Token = "0x6002099")]
				[Address(RVA = "0xD72F80", Offset = "0xD72F80", VA = "0xD72F80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4570", Offset = "0x8D4570")]
				private set
				{
				}
			}

			[Token(Token = "0x170005DE")]
			public WrappedRandom RandomTBD2
			{
				[Token(Token = "0x600209A")]
				[Address(RVA = "0xD72F8C", Offset = "0xD72F8C", VA = "0xD72F8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4580", Offset = "0x8D4580")]
				get
				{
					return default(WrappedRandom);
				}
				[Token(Token = "0x600209B")]
				[Address(RVA = "0xD72F94", Offset = "0xD72F94", VA = "0xD72F94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4590", Offset = "0x8D4590")]
				private set
				{
				}
			}

			[Token(Token = "0x170005DF")]
			public IReadOnlyList<int> RandomSectors
			{
				[Token(Token = "0x600209C")]
				[Address(RVA = "0xD72FA0", Offset = "0xD72FA0", VA = "0xD72FA0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600209D")]
			[Address(RVA = "0xD72FA8", Offset = "0xD72FA8", VA = "0xD72FA8", Slot = "9")]
			public WrappedRandom RandomSector(int absoluteIndex)
			{
				return default(WrappedRandom);
			}

			[Token(Token = "0x600209E")]
			[Address(RVA = "0xD73090", Offset = "0xD73090", VA = "0xD73090")]
			public void Setup(string seed)
			{
			}

			[Token(Token = "0x600209F")]
			[Address(RVA = "0xD73330", Offset = "0xD73330", VA = "0xD73330")]
			public void Setup(string seed, PortableRandomState randomMapState, PortableRandomState randomRunState, PortableRandomState randomTagModulesState, PortableRandomState randomTBD2State, IReadOnlyList<int> randomSectors)
			{
			}

			[Token(Token = "0x60020A0")]
			[Address(RVA = "0xD734E0", Offset = "0xD734E0", VA = "0xD734E0")]
			public void SetupSectorCount(int sectorCount)
			{
			}

			[Token(Token = "0x60020A1")]
			[Address(RVA = "0xD731E0", Offset = "0xD731E0", VA = "0xD731E0")]
			public void Clear()
			{
			}

			[Token(Token = "0x60020A2")]
			[Address(RVA = "0xD73288", Offset = "0xD73288", VA = "0xD73288")]
			private WrappedRandom CreateNextRandom()
			{
				return default(WrappedRandom);
			}

			[Token(Token = "0x60020A3")]
			[Address(RVA = "0xD735D8", Offset = "0xD735D8", VA = "0xD735D8")]
			private int CreateNextRandomSeed()
			{
				return default(int);
			}

			[Token(Token = "0x60020A4")]
			[Address(RVA = "0xD7361C", Offset = "0xD7361C", VA = "0xD7361C")]
			private bool TryCreateNextRandomSeed(out int seed)
			{
				return default(bool);
			}

			[Token(Token = "0x60020A5")]
			[Address(RVA = "0xD73670", Offset = "0xD73670", VA = "0xD73670")]
			public RunRandom()
			{
			}
		}

		[Token(Token = "0x2000521")]
		public class PassiveAbilitySelection : SectorAssetSelection<ShipAbilityPassive>
		{
			[Token(Token = "0x4001D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private RunManager manager;

			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Dictionary<ShipAbilityPassive, bool> disabledObjects;

			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string selectionCategoryTag;

			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private List<SectorTag> runTags;

			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private SectorTagsInput selectionTags;

			[Token(Token = "0x170005E0")]
			public string SelectionCategoryTag
			{
				[Token(Token = "0x60020A6")]
				[Address(RVA = "0xD721F0", Offset = "0xD721F0", VA = "0xD721F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60020A7")]
				[Address(RVA = "0xD721F8", Offset = "0xD721F8", VA = "0xD721F8")]
				set
				{
				}
			}

			[Token(Token = "0x60020A8")]
			[Address(RVA = "0xD72260", Offset = "0xD72260", VA = "0xD72260")]
			public PassiveAbilitySelection(RunManager manager, SectorTagsInput tags, SectorTagCollection objTags, List<SectorAsset<ShipAbilityPassive>> validObjects, int maxSelectionPoints, WrappedRandom random)
			{
			}

			[Token(Token = "0x60020A9")]
			[Address(RVA = "0xD723D0", Offset = "0xD723D0", VA = "0xD723D0")]
			public void ResetDisabledAbilities()
			{
			}

			[Token(Token = "0x60020AA")]
			[Address(RVA = "0xD72434", Offset = "0xD72434", VA = "0xD72434")]
			public void ResetRunTags()
			{
			}

			[Token(Token = "0x60020AB")]
			[Address(RVA = "0xD72498", Offset = "0xD72498", VA = "0xD72498")]
			public void AddRunTag(SectorTag tag)
			{
			}

			[Token(Token = "0x60020AC")]
			[Address(RVA = "0xD72514", Offset = "0xD72514", VA = "0xD72514", Slot = "4")]
			public override void RecalculateWeights()
			{
			}

			[Token(Token = "0x60020AD")]
			[Address(RVA = "0xD726FC", Offset = "0xD726FC", VA = "0xD726FC")]
			public void DisablePlayerShipAbilities()
			{
			}

			[Token(Token = "0x60020AE")]
			[Address(RVA = "0xD72934", Offset = "0xD72934", VA = "0xD72934")]
			public void ReturnAbility(ShipAbilityPassive ability)
			{
			}

			[Token(Token = "0x60020AF")]
			[Address(RVA = "0xD72848", Offset = "0xD72848", VA = "0xD72848")]
			private bool IsAbilityAvailable(ShipAbilityPassive ability, SpaceShip playerShip)
			{
				return default(bool);
			}

			[Token(Token = "0x60020B0")]
			[Address(RVA = "0xD70A74", Offset = "0xD70A74", VA = "0xD70A74")]
			public static bool DoesShipHaveAbility(SpaceShip ship, SectorTag abilityTag)
			{
				return default(bool);
			}

			[Token(Token = "0x60020B1")]
			[Address(RVA = "0xD72AC0", Offset = "0xD72AC0", VA = "0xD72AC0")]
			public static bool DoesShipHaveAbility(SpaceShip ship, ShipAbilityPassive ability)
			{
				return default(bool);
			}

			[Token(Token = "0x60020B2")]
			[Address(RVA = "0xD72E50", Offset = "0xD72E50", VA = "0xD72E50", Slot = "6")]
			protected override void OnRecreateAsset(SectorAsset<ShipAbilityPassive> obj, out SectorAsset<ShipAbilityPassive> recreatedObj)
			{
			}
		}

		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC20", Offset = "0x8AAC20")]
		private sealed class <EndRunSuccessPendingRoutine>d__123 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool wasTimerRunning;

			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RunManager <>4__this;

			[Token(Token = "0x170005E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020B6")]
				[Address(RVA = "0xD721A0", Offset = "0xD721A0", VA = "0xD721A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020B8")]
				[Address(RVA = "0xD721E8", Offset = "0xD721E8", VA = "0xD721E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020B3")]
			[Address(RVA = "0xD71EBC", Offset = "0xD71EBC", VA = "0xD71EBC")]
			[DebuggerHidden]
			public <EndRunSuccessPendingRoutine>d__123(int <>1__state)
			{
			}

			[Token(Token = "0x60020B4")]
			[Address(RVA = "0xD71EE8", Offset = "0xD71EE8", VA = "0xD71EE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020B5")]
			[Address(RVA = "0xD71EEC", Offset = "0xD71EEC", VA = "0xD71EEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020B7")]
			[Address(RVA = "0xD721A8", Offset = "0xD721A8", VA = "0xD721A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC30", Offset = "0x8AAC30")]
		private sealed class <EndRunFailurePendingRoutine>d__125 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RunManager <>4__this;

			[Token(Token = "0x170005E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020BC")]
				[Address(RVA = "0xD71E6C", Offset = "0xD71E6C", VA = "0xD71E6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020BE")]
				[Address(RVA = "0xD71EB4", Offset = "0xD71EB4", VA = "0xD71EB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020B9")]
			[Address(RVA = "0xD71A90", Offset = "0xD71A90", VA = "0xD71A90")]
			[DebuggerHidden]
			public <EndRunFailurePendingRoutine>d__125(int <>1__state)
			{
			}

			[Token(Token = "0x60020BA")]
			[Address(RVA = "0xD71ABC", Offset = "0xD71ABC", VA = "0xD71ABC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020BB")]
			[Address(RVA = "0xD71AC0", Offset = "0xD71AC0", VA = "0xD71AC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020BD")]
			[Address(RVA = "0xD71E74", Offset = "0xD71E74", VA = "0xD71E74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC40", Offset = "0x8AAC40")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SectorTagAmount, bool> <>9__131_0;

			[Token(Token = "0x4001D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<MenuManager, SectorTag> <>9__162_0;

			[Token(Token = "0x4001D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<MenuManager, SectorTag> <>9__163_0;

			[Token(Token = "0x60020C0")]
			[Address(RVA = "0xD708A4", Offset = "0xD708A4", VA = "0xD708A4")]
			public <>c()
			{
			}

			[Token(Token = "0x60020C1")]
			[Address(RVA = "0xD708AC", Offset = "0xD708AC", VA = "0xD708AC")]
			internal bool <GoToRunSector>b__131_0(SectorTagAmount x)
			{
				return default(bool);
			}

			[Token(Token = "0x60020C2")]
			[Address(RVA = "0xD7095C", Offset = "0xD7095C", VA = "0xD7095C")]
			internal void <OnEnterMenuSectors>b__162_0(MenuManager m, SectorTag t)
			{
			}

			[Token(Token = "0x60020C3")]
			[Address(RVA = "0xD70980", Offset = "0xD70980", VA = "0xD70980")]
			internal void <OnExitMenuSectors>b__163_0(MenuManager m, SectorTag t)
			{
			}
		}

		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC50", Offset = "0x8AAC50")]
		private sealed class <>c__DisplayClass141_0
		{
			[Token(Token = "0x4001D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTag abilityTag;

			[Token(Token = "0x4001D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool requireAvailability;

			[Token(Token = "0x4001D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpaceShip playerShip;

			[Token(Token = "0x60020C4")]
			[Address(RVA = "0xD709A4", Offset = "0xD709A4", VA = "0xD709A4")]
			public <>c__DisplayClass141_0()
			{
			}

			[Token(Token = "0x60020C5")]
			[Address(RVA = "0xD709AC", Offset = "0xD709AC", VA = "0xD709AC")]
			internal bool <HasPassiveAbilityByTag>b__0(SectorAsset<ShipAbilityPassive> p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC60", Offset = "0x8AAC60")]
		private sealed class <>c__DisplayClass144_0
		{
			[Token(Token = "0x4001D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTag abilityTag;

			[Token(Token = "0x4001D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool requireAvailability;

			[Token(Token = "0x4001D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpaceShip playerShip;

			[Token(Token = "0x60020C6")]
			[Address(RVA = "0xD70E24", Offset = "0xD70E24", VA = "0xD70E24")]
			public <>c__DisplayClass144_0()
			{
			}

			[Token(Token = "0x60020C7")]
			[Address(RVA = "0xD70E2C", Offset = "0xD70E2C", VA = "0xD70E2C")]
			internal bool <HasPassiveDefectAbilityByTag>b__0(SectorAsset<ShipAbilityPassive> p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC70", Offset = "0x8AAC70")]
		private sealed class <>c__DisplayClass147_0
		{
			[Token(Token = "0x4001D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTag abilityTag;

			[Token(Token = "0x4001D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool requireAvailability;

			[Token(Token = "0x4001D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpaceShip playerShip;

			[Token(Token = "0x60020C8")]
			[Address(RVA = "0xD70EF4", Offset = "0xD70EF4", VA = "0xD70EF4")]
			public <>c__DisplayClass147_0()
			{
			}

			[Token(Token = "0x60020C9")]
			[Address(RVA = "0xD70EFC", Offset = "0xD70EFC", VA = "0xD70EFC")]
			internal bool <TryGetPassiveAbilityByTag>b__0(SectorAsset<ShipAbilityPassive> p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC80", Offset = "0x8AAC80")]
		private sealed class <>c__DisplayClass150_0
		{
			[Token(Token = "0x4001D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SectorTag abilityTag;

			[Token(Token = "0x4001D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool requireAvailability;

			[Token(Token = "0x4001D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpaceShip playerShip;

			[Token(Token = "0x60020CA")]
			[Address(RVA = "0xD70FC4", Offset = "0xD70FC4", VA = "0xD70FC4")]
			public <>c__DisplayClass150_0()
			{
			}

			[Token(Token = "0x60020CB")]
			[Address(RVA = "0xD70FCC", Offset = "0xD70FCC", VA = "0xD70FCC")]
			internal bool <TryGetPassiveDefectAbilityByTag>b__0(SectorAsset<ShipAbilityPassive> p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC90", Offset = "0x8AAC90")]
		private sealed class <>c__DisplayClass157_0
		{
			[Token(Token = "0x4001D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RunManager <>4__this;

			[Token(Token = "0x4001D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpaceShip playerShip;

			[Token(Token = "0x60020CC")]
			[Address(RVA = "0xD71094", Offset = "0xD71094", VA = "0xD71094")]
			public <>c__DisplayClass157_0()
			{
			}

			[Token(Token = "0x60020CD")]
			[Address(RVA = "0xD7109C", Offset = "0xD7109C", VA = "0xD7109C")]
			internal void <OnPlayerShipChanged>b__0(SpaceObject p)
			{
			}

			[Token(Token = "0x60020CE")]
			[Address(RVA = "0xD710B8", Offset = "0xD710B8", VA = "0xD710B8")]
			internal void <OnPlayerShipChanged>b__1(IDamagable c, IReadOnlyList<SectorTag> sot)
			{
			}

			[Token(Token = "0x60020CF")]
			[Address(RVA = "0xD710DC", Offset = "0xD710DC", VA = "0xD710DC")]
			internal void <OnPlayerShipChanged>b__2(SpaceObject p)
			{
			}

			[Token(Token = "0x60020D0")]
			[Address(RVA = "0xD710F8", Offset = "0xD710F8", VA = "0xD710F8")]
			internal void <OnPlayerShipChanged>b__3(SpaceShip p)
			{
			}
		}

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AACA0", Offset = "0x8AACA0")]
		private sealed class <DelayDeathSlowMotionStop>d__161 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RunManager <>4__this;

			[Token(Token = "0x170005E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020D4")]
				[Address(RVA = "0xD71A40", Offset = "0xD71A40", VA = "0xD71A40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020D6")]
				[Address(RVA = "0xD71A88", Offset = "0xD71A88", VA = "0xD71A88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020D1")]
			[Address(RVA = "0xD718A8", Offset = "0xD718A8", VA = "0xD718A8")]
			[DebuggerHidden]
			public <DelayDeathSlowMotionStop>d__161(int <>1__state)
			{
			}

			[Token(Token = "0x60020D2")]
			[Address(RVA = "0xD718D4", Offset = "0xD718D4", VA = "0xD718D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020D3")]
			[Address(RVA = "0xD718D8", Offset = "0xD718D8", VA = "0xD718D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020D5")]
			[Address(RVA = "0xD71A48", Offset = "0xD71A48", VA = "0xD71A48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4CF8", Offset = "0x8C4CF8")]
		[SerializeField]
		private string runGameMode;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SectorMapDescription runSectorMap;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4D54", Offset = "0x8C4D54")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C4D54", Offset = "0x8C4D54")]
		private SectorTag runSuccessScreen;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C4DC4", Offset = "0x8C4DC4")]
		[SerializeField]
		private SectorTag runFailureScreen;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float runSuccessScreenDelay;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float runFailureScreenDelay;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float runFailureTransitionDelay;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float runSuccessTransitionDelay;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool playerDeathSlowMotion;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float playerDeathSlowMotionStopDelay;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C4E70", Offset = "0x8C4E70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4E70", Offset = "0x8C4E70")]
		[SerializeField]
		private SectorTag[] runMenuTags;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C4EE0", Offset = "0x8C4EE0")]
		private SectorTag dailyJourneyMenuTag;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4F2C", Offset = "0x8C4F2C")]
		[SerializeField]
		private int startingScrapsAmount;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SectorTag passiveAbilityCategoryTag;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4F88", Offset = "0x8C4F88")]
		private bool <IsRunActive>k__BackingField;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4F98", Offset = "0x8C4F98")]
		private bool <IsRunContinue>k__BackingField;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4FA8", Offset = "0x8C4FA8")]
		private bool <IsRunEndPending>k__BackingField;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4FB8", Offset = "0x8C4FB8")]
		private bool <IsRunSuccess>k__BackingField;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4FC8", Offset = "0x8C4FC8")]
		private bool <IsRunDailyJourney>k__BackingField;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4FD8", Offset = "0x8C4FD8")]
		private bool <IsRunTutorial>k__BackingField;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4FE8", Offset = "0x8C4FE8")]
		private SpaceShip <PlayerShip>k__BackingField;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4FF8", Offset = "0x8C4FF8")]
		private SectorTag <PlayerShipTag>k__BackingField;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CurrencyWallet scrap;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5018", Offset = "0x8C5018")]
		private int <SectorMapNodeDepth>k__BackingField;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<RunSectorTagModule> sectorTagModules;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private SectorTagsInput runUnlockTags;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private string sectorGameMode;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RunRandom sectorRandom;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private SectorMapResult sectorMap;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SectorTagsInput sectorMapBaseTags;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private SectorMapIndex sectorMapIndex;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<SectorMapIndex> sectorMapIndexHistory;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<SectorAsset<ShipAbilityPassive>> passiveAbilities;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private PassiveAbilitySelection passiveAbilitySelection;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<SectorAsset<ShipAbilityPassive>> passiveDefectAbilities;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private PassiveAbilitySelection passiveDefectAbilitySelection;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<StartAbilityPassive> startAbilitiesPassive;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool runMenusLoaded;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Coroutine runEndPendingRoutine;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Coroutine deathSlowMotionRoutine;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private AsyncFlag runEndSlowMotion;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private AsyncFlag handsInvisible;

		[Token(Token = "0x170005BE")]
		public bool IsRunActive
		{
			[Token(Token = "0x6002021")]
			[Address(RVA = "0xCEBE38", Offset = "0xCEBE38", VA = "0xCEBE38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4160", Offset = "0x8D4160")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002022")]
			[Address(RVA = "0xCEBE40", Offset = "0xCEBE40", VA = "0xCEBE40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4170", Offset = "0x8D4170")]
			private set
			{
			}
		}

		[Token(Token = "0x170005BF")]
		public bool IsRunContinue
		{
			[Token(Token = "0x6002023")]
			[Address(RVA = "0xCEBE4C", Offset = "0xCEBE4C", VA = "0xCEBE4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4180", Offset = "0x8D4180")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002024")]
			[Address(RVA = "0xCEBE54", Offset = "0xCEBE54", VA = "0xCEBE54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4190", Offset = "0x8D4190")]
			private set
			{
			}
		}

		[Token(Token = "0x170005C0")]
		public bool IsRunEndPending
		{
			[Token(Token = "0x6002025")]
			[Address(RVA = "0xCEBE60", Offset = "0xCEBE60", VA = "0xCEBE60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D41A0", Offset = "0x8D41A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002026")]
			[Address(RVA = "0xCEBE68", Offset = "0xCEBE68", VA = "0xCEBE68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D41B0", Offset = "0x8D41B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170005C1")]
		public bool IsRunSuccess
		{
			[Token(Token = "0x6002027")]
			[Address(RVA = "0xCEBE74", Offset = "0xCEBE74", VA = "0xCEBE74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D41C0", Offset = "0x8D41C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002028")]
			[Address(RVA = "0xCEBE7C", Offset = "0xCEBE7C", VA = "0xCEBE7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D41D0", Offset = "0x8D41D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170005C2")]
		public bool IsRunDailyJourney
		{
			[Token(Token = "0x6002029")]
			[Address(RVA = "0xCEBE88", Offset = "0xCEBE88", VA = "0xCEBE88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D41E0", Offset = "0x8D41E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600202A")]
			[Address(RVA = "0xCEBE90", Offset = "0xCEBE90", VA = "0xCEBE90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D41F0", Offset = "0x8D41F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170005C3")]
		public bool IsRunTutorial
		{
			[Token(Token = "0x600202B")]
			[Address(RVA = "0xCEBE9C", Offset = "0xCEBE9C", VA = "0xCEBE9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4200", Offset = "0x8D4200")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600202C")]
			[Address(RVA = "0xCEBEA4", Offset = "0xCEBEA4", VA = "0xCEBEA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4210", Offset = "0x8D4210")]
			private set
			{
			}
		}

		[Token(Token = "0x170005C4")]
		public SpaceShip PlayerShip
		{
			[Token(Token = "0x600202D")]
			[Address(RVA = "0xCEBEB0", Offset = "0xCEBEB0", VA = "0xCEBEB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4220", Offset = "0x8D4220")]
			get
			{
				return null;
			}
			[Token(Token = "0x600202E")]
			[Address(RVA = "0xCEBEB8", Offset = "0xCEBEB8", VA = "0xCEBEB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4230", Offset = "0x8D4230")]
			private set
			{
			}
		}

		[Token(Token = "0x170005C5")]
		public SectorTag PlayerShipTag
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0xCEBEC0", Offset = "0xCEBEC0", VA = "0xCEBEC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4240", Offset = "0x8D4240")]
			get
			{
				return default(SectorTag);
			}
			[Token(Token = "0x6002030")]
			[Address(RVA = "0xCEBECC", Offset = "0xCEBECC", VA = "0xCEBECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4250", Offset = "0x8D4250")]
			private set
			{
			}
		}

		[Token(Token = "0x170005C6")]
		public CurrencyWallet Scrap
		{
			[Token(Token = "0x6002033")]
			[Address(RVA = "0xCEC01C", Offset = "0xCEC01C", VA = "0xCEC01C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C7")]
		public string SectorGameMode
		{
			[Token(Token = "0x6002034")]
			[Address(RVA = "0xCEC024", Offset = "0xCEC024", VA = "0xCEC024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C8")]
		public IReadOnlyRunRandom SectorRandom
		{
			[Token(Token = "0x6002035")]
			[Address(RVA = "0xCEC02C", Offset = "0xCEC02C", VA = "0xCEC02C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C9")]
		public SectorMapResult SectorMap
		{
			[Token(Token = "0x6002036")]
			[Address(RVA = "0xCEC034", Offset = "0xCEC034", VA = "0xCEC034")]
			get
			{
				return default(SectorMapResult);
			}
		}

		[Token(Token = "0x170005CA")]
		public IReadOnlyList<SectorMapIndex> SectorMapIndexHistory
		{
			[Token(Token = "0x6002037")]
			[Address(RVA = "0xCEC03C", Offset = "0xCEC03C", VA = "0xCEC03C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CB")]
		public int SectorMapNodeDepth
		{
			[Token(Token = "0x6002038")]
			[Address(RVA = "0xCEC044", Offset = "0xCEC044", VA = "0xCEC044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4280", Offset = "0x8D4280")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002039")]
			[Address(RVA = "0xCEC04C", Offset = "0xCEC04C", VA = "0xCEC04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4290", Offset = "0x8D4290")]
			private set
			{
			}
		}

		[Token(Token = "0x170005CC")]
		public SectorMapIndex SectorMapIndex
		{
			[Token(Token = "0x600203A")]
			[Address(RVA = "0xCEC054", Offset = "0xCEC054", VA = "0xCEC054")]
			get
			{
				return default(SectorMapIndex);
			}
			[Token(Token = "0x600203B")]
			[Address(RVA = "0xCEC064", Offset = "0xCEC064", VA = "0xCEC064")]
			set
			{
			}
		}

		[Token(Token = "0x170005CD")]
		public bool IsSectorMapLastNode
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0xCEC178", Offset = "0xCEC178", VA = "0xCEC178")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005CE")]
		public SectorTag RunSuccessScreen
		{
			[Token(Token = "0x600203D")]
			[Address(RVA = "0xCEC258", Offset = "0xCEC258", VA = "0xCEC258")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x170005CF")]
		public SectorTag RunFailureScreen
		{
			[Token(Token = "0x600203E")]
			[Address(RVA = "0xCEC264", Offset = "0xCEC264", VA = "0xCEC264")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x170005D0")]
		public SectorTag DefaultPassiveAbilityCategoryTag
		{
			[Token(Token = "0x600203F")]
			[Address(RVA = "0xCEC270", Offset = "0xCEC270", VA = "0xCEC270")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x14000092")]
		public event Action<SpaceShip> PlayerShipChanged
		{
			[Token(Token = "0x6002031")]
			[Address(RVA = "0xCEBEDC", Offset = "0xCEBEDC", VA = "0xCEBEDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4260", Offset = "0x8D4260")]
			add
			{
			}
			[Token(Token = "0x6002032")]
			[Address(RVA = "0xCEBF7C", Offset = "0xCEBF7C", VA = "0xCEBF7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4270", Offset = "0x8D4270")]
			remove
			{
			}
		}

		[Token(Token = "0x14000093")]
		public event Action OnLoadPrepareRunStart
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0xCEC27C", Offset = "0xCEC27C", VA = "0xCEC27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D42A0", Offset = "0x8D42A0")]
			add
			{
			}
			[Token(Token = "0x6002041")]
			[Address(RVA = "0xCEC31C", Offset = "0xCEC31C", VA = "0xCEC31C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D42B0", Offset = "0x8D42B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000094")]
		public event Action<bool> OnLoadPrepareRunEnd
		{
			[Token(Token = "0x6002042")]
			[Address(RVA = "0xCEC3BC", Offset = "0xCEC3BC", VA = "0xCEC3BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D42C0", Offset = "0x8D42C0")]
			add
			{
			}
			[Token(Token = "0x6002043")]
			[Address(RVA = "0xCEC45C", Offset = "0xCEC45C", VA = "0xCEC45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D42D0", Offset = "0x8D42D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000095")]
		public event Action<bool> OnRunResult
		{
			[Token(Token = "0x6002044")]
			[Address(RVA = "0xCEC4FC", Offset = "0xCEC4FC", VA = "0xCEC4FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D42E0", Offset = "0x8D42E0")]
			add
			{
			}
			[Token(Token = "0x6002045")]
			[Address(RVA = "0xCEC59C", Offset = "0xCEC59C", VA = "0xCEC59C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D42F0", Offset = "0x8D42F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000096")]
		public event Action<bool> OnRunEnd
		{
			[Token(Token = "0x6002046")]
			[Address(RVA = "0xCEC63C", Offset = "0xCEC63C", VA = "0xCEC63C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4300", Offset = "0x8D4300")]
			add
			{
			}
			[Token(Token = "0x6002047")]
			[Address(RVA = "0xCEC6DC", Offset = "0xCEC6DC", VA = "0xCEC6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4310", Offset = "0x8D4310")]
			remove
			{
			}
		}

		[Token(Token = "0x14000097")]
		public event Action<bool> OnRunEndPending
		{
			[Token(Token = "0x6002048")]
			[Address(RVA = "0xCEC77C", Offset = "0xCEC77C", VA = "0xCEC77C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4320", Offset = "0x8D4320")]
			add
			{
			}
			[Token(Token = "0x6002049")]
			[Address(RVA = "0xCEC81C", Offset = "0xCEC81C", VA = "0xCEC81C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4330", Offset = "0x8D4330")]
			remove
			{
			}
		}

		[Token(Token = "0x14000098")]
		public event Action OnRunCancelled
		{
			[Token(Token = "0x600204A")]
			[Address(RVA = "0xCEC8BC", Offset = "0xCEC8BC", VA = "0xCEC8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4340", Offset = "0x8D4340")]
			add
			{
			}
			[Token(Token = "0x600204B")]
			[Address(RVA = "0xCEC95C", Offset = "0xCEC95C", VA = "0xCEC95C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4350", Offset = "0x8D4350")]
			remove
			{
			}
		}

		[Token(Token = "0x14000099")]
		public event Action<string> OnShipwreckScanned
		{
			[Token(Token = "0x600204C")]
			[Address(RVA = "0xCEC9FC", Offset = "0xCEC9FC", VA = "0xCEC9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4360", Offset = "0x8D4360")]
			add
			{
			}
			[Token(Token = "0x600204D")]
			[Address(RVA = "0xCECA9C", Offset = "0xCECA9C", VA = "0xCECA9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4370", Offset = "0x8D4370")]
			remove
			{
			}
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xCECB3C", Offset = "0xCECB3C", VA = "0xCECB3C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xCED05C", Offset = "0xCED05C", VA = "0xCED05C", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xCED38C", Offset = "0xCED38C", VA = "0xCED38C")]
		public void StartNewRun([System.Runtime.InteropServices.Optional] SectorTagsInput additionalTags, [System.Runtime.InteropServices.Optional] string overrideGameMode, [System.Runtime.InteropServices.Optional] SectorMapDescription overrideSectorMap, [System.Runtime.InteropServices.Optional] string seed, [System.Runtime.InteropServices.Optional] List<StartAbilityPassive> startAbilitiesPassive)
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xCEEEDC", Offset = "0xCEEEDC", VA = "0xCEEEDC")]
		public void ContinueRun()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xCEFC6C", Offset = "0xCEFC6C", VA = "0xCEFC6C")]
		public void EndRunSuccessPending()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xCEFFCC", Offset = "0xCEFFCC", VA = "0xCEFFCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D4380", Offset = "0x8D4380")]
		private IEnumerator EndRunSuccessPendingRoutine(bool wasTimerRunning)
		{
			return null;
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xCF0058", Offset = "0xCF0058", VA = "0xCF0058")]
		public void EndRunFailurePending()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xCF0144", Offset = "0xCF0144", VA = "0xCF0144")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D43E0", Offset = "0x8D43E0")]
		private IEnumerator EndRunFailurePendingRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xCF01BC", Offset = "0xCF01BC", VA = "0xCF01BC")]
		public void EndRunSuccess(SectorTransitionVariant transitionVariant = SectorTransitionVariant.RunEndSuccess, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTagAmount> overrideTags)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xCF0654", Offset = "0xCF0654", VA = "0xCF0654")]
		private void InternalEndRunSuccess()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xCF0680", Offset = "0xCF0680", VA = "0xCF0680")]
		public void EndRunFailure(bool cancelled, SectorTransitionVariant transitionVariant = SectorTransitionVariant.RunEndFailure, [System.Runtime.InteropServices.Optional] IReadOnlyList<SectorTagAmount> overrideTags)
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xCF07CC", Offset = "0xCF07CC", VA = "0xCF07CC")]
		private void InternalEndRunFailure()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xCEFF8C", Offset = "0xCEFF8C", VA = "0xCEFF8C")]
		private void StopRunEndPendingRoutine()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xCF07F8", Offset = "0xCF07F8", VA = "0xCF07F8")]
		public void GoToRunSector(SectorMapIndex index, SectorTransitionVariant transitionVariant = SectorTransitionVariant.SectorTravel)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xCF20F0", Offset = "0xCF20F0", VA = "0xCF20F0")]
		public void ScannedShipwreck()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xCEFF1C", Offset = "0xCEFF1C", VA = "0xCEFF1C")]
		public void SaveRunResult(bool success)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xCEEC08", Offset = "0xCEEC08", VA = "0xCEEC08")]
		private void ResetRun()
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xCF02E8", Offset = "0xCF02E8", VA = "0xCF02E8")]
		private void LoadRunEnd(SectorTransitionVariant transitionVariant, bool success, bool cancelled, IReadOnlyList<SectorTagAmount> overrideTags)
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xCF21EC", Offset = "0xCF21EC", VA = "0xCF21EC")]
		public void AddRunModuleTags(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xCF2298", Offset = "0xCF2298", VA = "0xCF2298")]
		public bool DoesPlayerShipHaveAbility(SectorTag abilityTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xCF2340", Offset = "0xCF2340", VA = "0xCF2340")]
		public bool DoesPlayerShipHaveAbility(ShipAbilityPassive ability)
		{
			return default(bool);
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xCF23E0", Offset = "0xCF23E0", VA = "0xCF23E0")]
		public bool HasAvailablePassiveAbility()
		{
			return default(bool);
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xCF2484", Offset = "0xCF2484", VA = "0xCF2484")]
		public bool HasAvailablePassiveAbilityByCategory(SectorTag abilityCategoryTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xCF2528", Offset = "0xCF2528", VA = "0xCF2528")]
		public bool HasPassiveAbilityByTag(SectorTag abilityTag, bool requireAvailability = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xCF26B0", Offset = "0xCF26B0", VA = "0xCF26B0")]
		public bool HasAvailablePassiveDefectAbility()
		{
			return default(bool);
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xCF2754", Offset = "0xCF2754", VA = "0xCF2754")]
		public bool HasAvailablePassiveDefectAbilityByCategory(SectorTag defectCategoryTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xCF27F8", Offset = "0xCF27F8", VA = "0xCF27F8")]
		public bool HasPassiveDefectAbilityByTag(SectorTag abilityTag, bool requireAvailability = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xCF2980", Offset = "0xCF2980", VA = "0xCF2980")]
		public bool TryGetAvailablePassiveAbility(out ShipAbilityPassive ability)
		{
			return default(bool);
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xCF2A2C", Offset = "0xCF2A2C", VA = "0xCF2A2C")]
		public bool TryGetAvailablePassiveAbilityByCategory(SectorTag abilityCategoryTag, out ShipAbilityPassive ability)
		{
			return default(bool);
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xCF2AD8", Offset = "0xCF2AD8", VA = "0xCF2AD8")]
		public bool TryGetPassiveAbilityByTag(SectorTag abilityTag, out ShipAbilityPassive ability, bool requireAvailability = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xCF2C84", Offset = "0xCF2C84", VA = "0xCF2C84")]
		public bool TryGetAvailablePassiveDefectAbility(out ShipAbilityPassive passiveDefectAbility)
		{
			return default(bool);
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xCF2D30", Offset = "0xCF2D30", VA = "0xCF2D30")]
		public bool TryGetAvailablePassiveDefectAbilityByCategory(SectorTag defectCategoryTag, out ShipAbilityPassive passiveDefectAbility)
		{
			return default(bool);
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xCF2DDC", Offset = "0xCF2DDC", VA = "0xCF2DDC")]
		public bool TryGetPassiveDefectAbilityByTag(SectorTag abilityTag, out ShipAbilityPassive ability, bool requireAvailability = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xCF2F88", Offset = "0xCF2F88", VA = "0xCF2F88")]
		public void ReturnPassiveAbility(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xCF2FA4", Offset = "0xCF2FA4", VA = "0xCF2FA4")]
		public void ReturnPassiveDefect(ShipAbilityPassive ability)
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xCF2FC0", Offset = "0xCF2FC0", VA = "0xCF2FC0")]
		public void AddRunTagToPassiveAbilitySelection(SectorTag tag)
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xCF2FDC", Offset = "0xCF2FDC", VA = "0xCF2FDC")]
		public void AddRunTagToPassiveDefectSelection(SectorTag tag)
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xCEECC4", Offset = "0xCEECC4", VA = "0xCEECC4")]
		private void Load(SectorTagsInput tags, bool addRunTag, SectorTransitionVariant transitionVariant, [System.Runtime.InteropServices.Optional] string gameMode, [System.Runtime.InteropServices.Optional] WrappedRandom random)
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xCF2FF8", Offset = "0xCF2FF8", VA = "0xCF2FF8")]
		private void RunMenusAction(Action<MenuManager, SectorTag> menuAction)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xCF3144", Offset = "0xCF3144", VA = "0xCF3144")]
		private void OnPlayerShipChanged(SpaceShip playerShip)
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xCF3A00", Offset = "0xCF3A00", VA = "0xCF3A00")]
		private void OnPlayerShipDeath(SpaceObject playerShip)
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xCF3E60", Offset = "0xCF3E60", VA = "0xCF3E60")]
		private void OnPlayerShipRevive(SpaceObject playerShip)
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xCF4028", Offset = "0xCF4028", VA = "0xCF4028")]
		private void OnPlayerShipDestroy(SpaceShip playerShip)
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xCF3DD8", Offset = "0xCF3DD8", VA = "0xCF3DD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D4440", Offset = "0x8D4440")]
		private IEnumerator DelayDeathSlowMotionStop(float delay)
		{
			return null;
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xCF402C", Offset = "0xCF402C", VA = "0xCF402C")]
		private void OnEnterMenuSectors()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xCF4150", Offset = "0xCF4150", VA = "0xCF4150")]
		private void OnExitMenuSectors()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xCF4278", Offset = "0xCF4278", VA = "0xCF4278")]
		private void OnObjectiveClearedChange(bool sectorClear)
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xCF42CC", Offset = "0xCF42CC", VA = "0xCF42CC")]
		private void OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xCF4460", Offset = "0xCF4460", VA = "0xCF4460")]
		private void OnLoadPrepareStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xCF4524", Offset = "0xCF4524", VA = "0xCF4524")]
		private void OnLoadPrepareCancelled(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xCF45E4", Offset = "0xCF45E4", VA = "0xCF45E4")]
		private void OnLoadPrepareFailure(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xCF48B0", Offset = "0xCF48B0", VA = "0xCF48B0")]
		private void OnLoadPrepareSuccess(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xCF0B8C", Offset = "0xCF0B8C", VA = "0xCF0B8C")]
		private void SaveOnGoingRunState(SectorMapIndex index)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xCF4A1C", Offset = "0xCF4A1C", VA = "0xCF4A1C")]
		public RunManager()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class SectorMapManager : MonoBehaviourSingleton<SectorMapManager>, IGameLoaderSubsystem
	{
		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AACB0", Offset = "0x8AACB0")]
		private sealed class <RegenerateRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorMapManager <>4__this;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IEnumerator <e>5__2;

			[Token(Token = "0x170005E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020EE")]
				[Address(RVA = "0xD7D710", Offset = "0xD7D710", VA = "0xD7D710", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020F0")]
				[Address(RVA = "0xD7D758", Offset = "0xD7D758", VA = "0xD7D758", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020EB")]
			[Address(RVA = "0xD7D468", Offset = "0xD7D468", VA = "0xD7D468")]
			[DebuggerHidden]
			public <RegenerateRoutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60020EC")]
			[Address(RVA = "0xD7D494", Offset = "0xD7D494", VA = "0xD7D494", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020ED")]
			[Address(RVA = "0xD7D498", Offset = "0xD7D498", VA = "0xD7D498", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020EF")]
			[Address(RVA = "0xD7D718", Offset = "0xD7D718", VA = "0xD7D718", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AACC0", Offset = "0x8AACC0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GalaxyNode, bool> <>9__25_0;

			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GalaxyNode, bool> <>9__25_1;

			[Token(Token = "0x60020F2")]
			[Address(RVA = "0xD7D420", Offset = "0xD7D420", VA = "0xD7D420")]
			public <>c()
			{
			}

			[Token(Token = "0x60020F3")]
			[Address(RVA = "0xD7D428", Offset = "0xD7D428", VA = "0xD7D428")]
			internal bool <SetVisible>b__25_0(GalaxyNode n)
			{
				return default(bool);
			}

			[Token(Token = "0x60020F4")]
			[Address(RVA = "0xD7D448", Offset = "0xD7D448", VA = "0xD7D448")]
			internal bool <SetVisible>b__25_1(GalaxyNode n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5118", Offset = "0x8C5118")]
		private GalaxyImageGenerator generator;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 mapPlayerOffset;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float mapScale;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5184", Offset = "0x8C5184")]
		private bool <Generated>k__BackingField;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5194", Offset = "0x8C5194")]
		private bool <IsVisible>k__BackingField;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GalaxyNode nextNode;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool inGameSector;

		[Token(Token = "0x170005E7")]
		public bool Generated
		{
			[Token(Token = "0x60020D7")]
			[Address(RVA = "0xD8B978", Offset = "0xD8B978", VA = "0xD8B978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4690", Offset = "0x8D4690")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020D8")]
			[Address(RVA = "0xD8B980", Offset = "0xD8B980", VA = "0xD8B980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D46A0", Offset = "0x8D46A0")]
			private set
			{
			}
		}

		[Token(Token = "0x170005E8")]
		public bool IsVisible
		{
			[Token(Token = "0x60020D9")]
			[Address(RVA = "0xD8B98C", Offset = "0xD8B98C", VA = "0xD8B98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D46B0", Offset = "0x8D46B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020DA")]
			[Address(RVA = "0xD8B994", Offset = "0xD8B994", VA = "0xD8B994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D46C0", Offset = "0x8D46C0")]
			private set
			{
			}
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xD8B9A0", Offset = "0xD8B9A0", VA = "0xD8B9A0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xD8BA48", Offset = "0xD8BA48", VA = "0xD8BA48", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xD8BACC", Offset = "0xD8BACC", VA = "0xD8BACC", Slot = "11")]
		private YieldInstruction Game.Manager.IGameLoaderSubsystem.OnGameSetupAsync(SectorTagsInput tags)
		{
			return null;
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xD8BC00", Offset = "0xD8BC00", VA = "0xD8BC00", Slot = "6")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xD8BC04", Offset = "0xD8BC04", VA = "0xD8BC04", Slot = "7")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xD8BC08", Offset = "0xD8BC08", VA = "0xD8BC08", Slot = "8")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadPrepare(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xD8BC0C", Offset = "0xD8BC0C", VA = "0xD8BC0C", Slot = "9")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadWindDown(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xD8BC10", Offset = "0xD8BC10", VA = "0xD8BC10", Slot = "10")]
		private void Game.Manager.IGameLoaderSubsystem.OnUnloadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xD8BC14", Offset = "0xD8BC14", VA = "0xD8BC14", Slot = "12")]
		private void Game.Manager.IGameLoaderSubsystem.OnGameStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xD8BB84", Offset = "0xD8BB84", VA = "0xD8BB84")]
		private Coroutine Regenerate()
		{
			return null;
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xD8BC18", Offset = "0xD8BC18", VA = "0xD8BC18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D46D0", Offset = "0x8D46D0")]
		private IEnumerator RegenerateRoutine()
		{
			return null;
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xD8BBB8", Offset = "0xD8BBB8", VA = "0xD8BBB8")]
		private void Clear()
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xD8BC90", Offset = "0xD8BC90", VA = "0xD8BC90")]
		private void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xD8C2D8", Offset = "0xD8C2D8", VA = "0xD8C2D8")]
		private static Vector3 GetNodePosition(GalaxyNode node)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xD8C374", Offset = "0xD8C374", VA = "0xD8C374")]
		public void PickNode(GalaxyNode node)
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xD8C420", Offset = "0xD8C420", VA = "0xD8C420")]
		public SectorMapManager()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class StaggeredInstantiator : MonoBehaviourSingleton<StaggeredInstantiator>
	{
		[Token(Token = "0x200052F")]
		private enum QueuedObjectType
		{
			[Token(Token = "0x4001D3B")]
			Instantiate,
			[Token(Token = "0x4001D3C")]
			Destroy,
			[Token(Token = "0x4001D3D")]
			Activate,
			[Token(Token = "0x4001D3E")]
			Deactivate
		}

		[Token(Token = "0x2000530")]
		private struct QueuedObject
		{
			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public QueuedObjectType type;

			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncFlag flag;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<GameObject> callbackWithObject;

			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action callbackEmpty;

			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject gameObject;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform parent;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Scene scene;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 localPosition;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Quaternion localRotation;

			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 localScale;

			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public int loadDensity;
		}

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float targetFramerate;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int loadDensityPerFrame;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<QueuedObject> queuedObjects;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double targetFrameTimeSeconds;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double lastFrameTime;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int loadDensityLeft;

		[Token(Token = "0x4001D38")]
		private const double DOUBLE_ZERO = 0.0;

		[Token(Token = "0x4001D39")]
		private const double DOUBLE_ONE = 1.0;

		[Token(Token = "0x170005EB")]
		public double FrameDiffTime
		{
			[Token(Token = "0x60020F5")]
			[Address(RVA = "0xF23C3C", Offset = "0xF23C3C", VA = "0xF23C3C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005EC")]
		public bool FrameHasMoreTime
		{
			[Token(Token = "0x60020F6")]
			[Address(RVA = "0xF23C68", Offset = "0xF23C68", VA = "0xF23C68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005ED")]
		public bool FrameNoMoreTime
		{
			[Token(Token = "0x60020F7")]
			[Address(RVA = "0xF23C9C", Offset = "0xF23C9C", VA = "0xF23C9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xF23CD0", Offset = "0xF23CD0", VA = "0xF23CD0")]
		public bool CheckFrameHasMoreTime()
		{
			return default(bool);
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xF23D04", Offset = "0xF23D04", VA = "0xF23D04")]
		public bool CheckFrameNoMoreTime()
		{
			return default(bool);
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xF23D38", Offset = "0xF23D38", VA = "0xF23D38", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xF23D9C", Offset = "0xF23D9C", VA = "0xF23D9C")]
		private void Update()
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xF24160", Offset = "0xF24160", VA = "0xF24160")]
		private static GameObject InstantiateQueuedObject(QueuedObject obj)
		{
			return null;
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xF24350", Offset = "0xF24350", VA = "0xF24350")]
		private static GameObject ActivateQueuedObject(QueuedObject obj)
		{
			return null;
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xF242E0", Offset = "0xF242E0", VA = "0xF242E0")]
		private static GameObject DestroyQueuedObject(QueuedObject obj)
		{
			return null;
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xF244AC", Offset = "0xF244AC", VA = "0xF244AC")]
		private static GameObject DeactivateQueuedObject(QueuedObject obj)
		{
			return null;
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xF24504", Offset = "0xF24504", VA = "0xF24504")]
		public AsyncFlag InstantiateStaggered(GameObject prefab, Vector3 localPosition, Quaternion localRotation, Vector3 localScale, [System.Runtime.InteropServices.Optional] Transform parent, [System.Runtime.InteropServices.Optional] Scene scene, int loadDensity = 1, [System.Runtime.InteropServices.Optional] Action<GameObject> callback)
		{
			return null;
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xF246BC", Offset = "0xF246BC", VA = "0xF246BC")]
		public AsyncFlag ActivateStaggered(GameObject gameObject, Vector3 localPosition, Quaternion localRotation, Vector3 localScale, [System.Runtime.InteropServices.Optional] Transform parent, [System.Runtime.InteropServices.Optional] Scene scene, int loadDensity = 1, [System.Runtime.InteropServices.Optional] Action<GameObject> callback)
		{
			return null;
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xF24878", Offset = "0xF24878", VA = "0xF24878")]
		public AsyncFlag DestroyStaggered(GameObject gameObject, int loadDensity = 1, [System.Runtime.InteropServices.Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xF249B4", Offset = "0xF249B4", VA = "0xF249B4")]
		public static AsyncFlag DestroyStaggeredSafe(GameObject gameObject, int loadDensity = 1, [System.Runtime.InteropServices.Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xF24B50", Offset = "0xF24B50", VA = "0xF24B50")]
		public AsyncFlag DeactivateStaggered(GameObject gameObject, [System.Runtime.InteropServices.Optional] Transform parent, int loadDensity = 1, [System.Runtime.InteropServices.Optional] Action<GameObject> callback)
		{
			return null;
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xF24CA0", Offset = "0xF24CA0", VA = "0xF24CA0")]
		public static AsyncFlag DeactivateStaggeredSafe(GameObject gameObject, [System.Runtime.InteropServices.Optional] Transform parent, int loadDensity = 1, [System.Runtime.InteropServices.Optional] Action<GameObject> callback)
		{
			return null;
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xF24E60", Offset = "0xF24E60", VA = "0xF24E60")]
		public StaggeredInstantiator()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class TimeManager : MonoBehaviourSingleton<TimeManager>
	{
		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float warpTimeScale;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float slowMotionTimeScale;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve slowMotionTimeCurve;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float slowMotionActivateTime;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float slowMotionDeactivateTime;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5214", Offset = "0x8C5214")]
		private float <OverrideTimeScale>k__BackingField;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5224", Offset = "0x8C5224")]
		private readonly FlagGroup <SlowMotion>k__BackingField;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5234", Offset = "0x8C5234")]
		private readonly FlagGroup <Pause>k__BackingField;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5244", Offset = "0x8C5244")]
		private readonly FlagGroup <TimeWarp>k__BackingField;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultTimeScale;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float slowMotionProgress;

		[Token(Token = "0x170005EE")]
		public float OverrideTimeScale
		{
			[Token(Token = "0x6002107")]
			[Address(RVA = "0xF36324", Offset = "0xF36324", VA = "0xF36324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4780", Offset = "0x8D4780")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002108")]
			[Address(RVA = "0xF3632C", Offset = "0xF3632C", VA = "0xF3632C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4790", Offset = "0x8D4790")]
			set
			{
			}
		}

		[Token(Token = "0x170005EF")]
		public FlagGroup SlowMotion
		{
			[Token(Token = "0x6002109")]
			[Address(RVA = "0xF36334", Offset = "0xF36334", VA = "0xF36334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D47A0", Offset = "0x8D47A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F0")]
		public FlagGroup Pause
		{
			[Token(Token = "0x600210A")]
			[Address(RVA = "0xF3633C", Offset = "0xF3633C", VA = "0xF3633C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D47B0", Offset = "0x8D47B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F1")]
		public FlagGroup TimeWarp
		{
			[Token(Token = "0x600210B")]
			[Address(RVA = "0xF36344", Offset = "0xF36344", VA = "0xF36344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D47C0", Offset = "0x8D47C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xF3634C", Offset = "0xF3634C", VA = "0xF3634C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xF363AC", Offset = "0xF363AC", VA = "0xF363AC")]
		protected void Update()
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xF364B0", Offset = "0xF364B0", VA = "0xF364B0")]
		public TimeManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000532")]
	public struct TutorialObjectiveControlsHand
	{
		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocalizationKey key;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject hintModel;
	}
	[Serializable]
	[Token(Token = "0x2000533")]
	public struct TutorialObjectiveControlsHands
	{
		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TutorialObjectiveControlsHand mainHandRight;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialObjectiveControlsHand mainHandLeft;
	}
	[Serializable]
	[Token(Token = "0x2000534")]
	public struct TutorialObjectiveControls
	{
		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TutorialObjectiveControlsHands controllers;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TutorialObjectiveControlsHands handTracking;
	}
	[Serializable]
	[Token(Token = "0x2000535")]
	public struct TutorialObjectiveDescription
	{
		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocalizationKey objectiveKey;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TutorialObjectiveControls controlKeys;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool hideCompleteToggle;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool completePreviousObjectives;
	}
	[Serializable]
	[Token(Token = "0x2000536")]
	public struct TutorialObjectivesInfo
	{
		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocalizationKey titleKey;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizationKey descriptionKey;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizationKey noteKey;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalizationKey resultKey;
	}
	[Token(Token = "0x2000537")]
	public struct TutorialObjective
	{
		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TutorialObjectiveDescription description;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool completed;

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xF38D54", Offset = "0xF38D54", VA = "0xF38D54")]
		public TutorialObjective(TutorialObjectiveDescription description)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xF38A90", Offset = "0xF38A90", VA = "0xF38A90")]
		public TutorialObjective Complete(bool completed = true)
		{
			return default(TutorialObjective);
		}
	}
	[Token(Token = "0x2000538")]
	public class TutorialManager : MonoBehaviourSingleton<TutorialManager>
	{
		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5254", Offset = "0x8C5254")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C5254", Offset = "0x8C5254")]
		private SectorTag tutorialObjectivesMenu;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<TutorialObjective> currentTutorialObjectives;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TutorialObjectivesInfo currentTutorialObjectivesInfo;

		[Token(Token = "0x170005F2")]
		public IReadOnlyList<TutorialObjective> TutorialObjectives
		{
			[Token(Token = "0x6002111")]
			[Address(RVA = "0xF381CC", Offset = "0xF381CC", VA = "0xF381CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F3")]
		public TutorialObjectivesInfo TutorialObjectivesInfo
		{
			[Token(Token = "0x6002112")]
			[Address(RVA = "0xF381D4", Offset = "0xF381D4", VA = "0xF381D4")]
			get
			{
				return default(TutorialObjectivesInfo);
			}
		}

		[Token(Token = "0x170005F4")]
		public bool HasTutorialObjectivesLeft
		{
			[Token(Token = "0x6002113")]
			[Address(RVA = "0xF381F0", Offset = "0xF381F0", VA = "0xF381F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400009A")]
		public event Action OnTutorialObjectivesChanged
		{
			[Token(Token = "0x6002114")]
			[Address(RVA = "0xF38334", Offset = "0xF38334", VA = "0xF38334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D47D0", Offset = "0x8D47D0")]
			add
			{
			}
			[Token(Token = "0x6002115")]
			[Address(RVA = "0xF383D4", Offset = "0xF383D4", VA = "0xF383D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D47E0", Offset = "0x8D47E0")]
			remove
			{
			}
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xF38474", Offset = "0xF38474", VA = "0xF38474", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xF38510", Offset = "0xF38510", VA = "0xF38510", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xF385AC", Offset = "0xF385AC", VA = "0xF385AC")]
		public void SetTutorialObjectives(TutorialObjectivesInfo info, IReadOnlyList<TutorialObjective> objectives)
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xF387C0", Offset = "0xF387C0", VA = "0xF387C0")]
		public void ClearTutorialObjectives()
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xF38830", Offset = "0xF38830", VA = "0xF38830")]
		public void SetTutorialObjectiveComplete(int objectiveIndex, bool complete)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xF38AE8", Offset = "0xF38AE8", VA = "0xF38AE8")]
		private void ShowTutorialObjectivesMenu()
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xF38C90", Offset = "0xF38C90", VA = "0xF38C90")]
		public TutorialManager()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class VRPlayerManager : MonoBehaviourSingleton<VRPlayerManager>
	{
		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C52D4", Offset = "0x8C52D4")]
		[SerializeField]
		private VRPlayerSelectorManager selectorManager;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRPlayerHapticsManager hapticsManager;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5330", Offset = "0x8C5330")]
		[SerializeField]
		private float baseScale;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float startScale;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C538C", Offset = "0x8C538C")]
		[SerializeField]
		private Transform parentTransform;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform rootTransform;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform headTransform;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VRPlayerHand leftHand;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VRPlayerHand rightHand;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5418", Offset = "0x8C5418")]
		private readonly FlagGroup <HandsStateInactive>k__BackingField;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5428", Offset = "0x8C5428")]
		private readonly FlagGroup <HandsStateInvisible>k__BackingField;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5438", Offset = "0x8C5438")]
		private readonly FlagGroup <HandsStateUIInactive>k__BackingField;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5448", Offset = "0x8C5448")]
		private readonly FlagGroup <HandsStateOutOfBounds>k__BackingField;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5458", Offset = "0x8C5458")]
		private bool <SmoothedTrackingHead>k__BackingField;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5468", Offset = "0x8C5468")]
		private bool <SmoothedTrackingHands>k__BackingField;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<IVRLocomotion> locomotions;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float rootBaseScale;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float invRootBaseScale;

		[Token(Token = "0x170005F5")]
		public VRPlayerSelectorManager SelectorManager
		{
			[Token(Token = "0x600211D")]
			[Address(RVA = "0x11EEAC0", Offset = "0x11EEAC0", VA = "0x11EEAC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F6")]
		public VRPlayerHapticsManager HapticsManager
		{
			[Token(Token = "0x600211E")]
			[Address(RVA = "0x11EEAC8", Offset = "0x11EEAC8", VA = "0x11EEAC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F7")]
		public Transform Parent
		{
			[Token(Token = "0x600211F")]
			[Address(RVA = "0x11EEAD0", Offset = "0x11EEAD0", VA = "0x11EEAD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F8")]
		public Transform Root
		{
			[Token(Token = "0x6002120")]
			[Address(RVA = "0x11EEAD8", Offset = "0x11EEAD8", VA = "0x11EEAD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F9")]
		public Transform Head
		{
			[Token(Token = "0x6002121")]
			[Address(RVA = "0x11EEAE0", Offset = "0x11EEAE0", VA = "0x11EEAE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FA")]
		public VRPlayerHand LeftHand
		{
			[Token(Token = "0x6002122")]
			[Address(RVA = "0x11EEAE8", Offset = "0x11EEAE8", VA = "0x11EEAE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FB")]
		public VRPlayerHand RightHand
		{
			[Token(Token = "0x6002123")]
			[Address(RVA = "0x11EEAF0", Offset = "0x11EEAF0", VA = "0x11EEAF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FC")]
		public VRPlayerHand MainHand
		{
			[Token(Token = "0x6002124")]
			[Address(RVA = "0x11EEAF8", Offset = "0x11EEAF8", VA = "0x11EEAF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FD")]
		public VRPlayerHand OffHand
		{
			[Token(Token = "0x6002125")]
			[Address(RVA = "0x11EEB2C", Offset = "0x11EEB2C", VA = "0x11EEB2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FE")]
		public FlagGroup HandsStateInactive
		{
			[Token(Token = "0x6002126")]
			[Address(RVA = "0x11EEB60", Offset = "0x11EEB60", VA = "0x11EEB60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D47F0", Offset = "0x8D47F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FF")]
		public FlagGroup HandsStateInvisible
		{
			[Token(Token = "0x6002127")]
			[Address(RVA = "0x11EEB68", Offset = "0x11EEB68", VA = "0x11EEB68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4800", Offset = "0x8D4800")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000600")]
		public FlagGroup HandsStateUIInactive
		{
			[Token(Token = "0x6002128")]
			[Address(RVA = "0x11EEB70", Offset = "0x11EEB70", VA = "0x11EEB70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4810", Offset = "0x8D4810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000601")]
		public FlagGroup HandsStateOutOfBounds
		{
			[Token(Token = "0x6002129")]
			[Address(RVA = "0x11EEB78", Offset = "0x11EEB78", VA = "0x11EEB78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4820", Offset = "0x8D4820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000602")]
		public VRHandModel.HandRenderQueue HandRenderQueue
		{
			[Token(Token = "0x600212A")]
			[Address(RVA = "0x11EEB80", Offset = "0x11EEB80", VA = "0x11EEB80")]
			get
			{
				return default(VRHandModel.HandRenderQueue);
			}
			[Token(Token = "0x600212B")]
			[Address(RVA = "0x11EEB9C", Offset = "0x11EEB9C", VA = "0x11EEB9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000603")]
		public bool HandsPulse
		{
			[Token(Token = "0x600212C")]
			[Address(RVA = "0x11EEBE0", Offset = "0x11EEBE0", VA = "0x11EEBE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600212D")]
			[Address(RVA = "0x11EEBFC", Offset = "0x11EEBFC", VA = "0x11EEBFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000604")]
		public bool SmoothedTrackingHead
		{
			[Token(Token = "0x600212E")]
			[Address(RVA = "0x11EEC2C", Offset = "0x11EEC2C", VA = "0x11EEC2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4830", Offset = "0x8D4830")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600212F")]
			[Address(RVA = "0x11EEC34", Offset = "0x11EEC34", VA = "0x11EEC34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4840", Offset = "0x8D4840")]
			set
			{
			}
		}

		[Token(Token = "0x17000605")]
		public bool SmoothedTrackingHands
		{
			[Token(Token = "0x6002130")]
			[Address(RVA = "0x11EEC40", Offset = "0x11EEC40", VA = "0x11EEC40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4850", Offset = "0x8D4850")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002131")]
			[Address(RVA = "0x11EEC48", Offset = "0x11EEC48", VA = "0x11EEC48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4860", Offset = "0x8D4860")]
			set
			{
			}
		}

		[Token(Token = "0x17000606")]
		public float RelativePlayerScale
		{
			[Token(Token = "0x6002132")]
			[Address(RVA = "0x11EEC54", Offset = "0x11EEC54", VA = "0x11EEC54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x11EEC8C", Offset = "0x11EEC8C", VA = "0x11EEC8C")]
		public Vector3 GetFlatFacingDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x11EECB8", Offset = "0x11EECB8", VA = "0x11EECB8")]
		public float GetLocalToWorldDistance(float distance)
		{
			return default(float);
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x11EECEC", Offset = "0x11EECEC", VA = "0x11EECEC")]
		public Vector2 GetLocalToWorldVector(Vector2 vector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x11EED2C", Offset = "0x11EED2C", VA = "0x11EED2C")]
		public Vector3 GetLocalToWorldVector(Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x11EED7C", Offset = "0x11EED7C", VA = "0x11EED7C")]
		public Vector3 GetHeadCenterPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x11EEDA8", Offset = "0x11EEDA8", VA = "0x11EEDA8")]
		public Vector3 GetFlatFacingHeadOffsetPositionLocal(Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x11EEDCC", Offset = "0x11EEDCC", VA = "0x11EEDCC")]
		public Vector3 GetFlatFacingHeadOffsetPositionWorld(Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x11EEE70", Offset = "0x11EEE70", VA = "0x11EEE70")]
		public Vector3 GetFlatFacingHeadVectorLocal(Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x11EEE94", Offset = "0x11EEE94", VA = "0x11EEE94")]
		public Vector3 GetFlatFacingHeadVectorWorld(Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x11EEF30", Offset = "0x11EEF30", VA = "0x11EEF30")]
		public Vector3 GetFlatFacingHeadCenterOffsetPositionLocal(Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x11EEF54", Offset = "0x11EEF54", VA = "0x11EEF54")]
		public Vector3 GetFlatFacingHeadCenterOffsetPositionWorld(Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x11EEFEC", Offset = "0x11EEFEC", VA = "0x11EEFEC")]
		public Vector3 GetFlatFacingFeetOffsetPositionLocal(Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x11EF010", Offset = "0x11EF010", VA = "0x11EF010")]
		public Vector3 GetFlatFacingFeetOffsetPositionWorld(Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x11EF0E8", Offset = "0x11EF0E8", VA = "0x11EF0E8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x11EF278", Offset = "0x11EF278", VA = "0x11EF278")]
		public void ResetLocomotion()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x11EF464", Offset = "0x11EF464", VA = "0x11EF464")]
		public void ResetScale(float scale = 1f)
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x11EF664", Offset = "0x11EF664", VA = "0x11EF664")]
		public void ResetTransform(float scale = 1f)
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x11EF864", Offset = "0x11EF864", VA = "0x11EF864")]
		public VRPlayerManager()
		{
		}
	}
}
namespace Game.Hangar
{
	[Token(Token = "0x200053A")]
	public class HangarShipEntry : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200053B")]
		public struct AbilitySlot
		{
			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextLocalizer nameTextLocalizer;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LocalizationKey descriptionKey;

			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMeshProUGUI descriptionTextMesh;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextLocalizer flavourTextLocalizer;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshProUGUI ammoTextMesh;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LocalizationKey ammoKey;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int damage;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C5934", Offset = "0x8C5934")]
			public SectorTag damageUpgradeTag;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int range;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C596C", Offset = "0x8C596C")]
			public SectorTag rangeUpgradeTag;

			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int ammo;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C59A4", Offset = "0x8C59A4")]
			public SectorTag ammoUpgradeTag;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Image icon;
		}

		[Serializable]
		[Token(Token = "0x200053C")]
		public struct SkinSelection
		{
			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UiButton button;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SectorTag skinTag;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject lockedIcon;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject colorParent;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Image backgroundImage;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Image secondaryImage;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C59DC", Offset = "0x8C59DC")]
			public Color mainColor;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color secondaryColor;
		}

		[Serializable]
		[Token(Token = "0x200053D")]
		public struct HangarEntryInfo
		{
			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject gameObject;

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool displayWhenLocked;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool displayWhenUnlocked;
		}

		[Token(Token = "0x4001D7B")]
		private const string RANGE_TEXT_PARAMETER = "range";

		[Token(Token = "0x4001D7C")]
		private const string DAMAGE_TEXT_PARAMETER = "damage";

		[Token(Token = "0x4001D7D")]
		private const string AMMO_TEXT_PARAMETER = "ammo";

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpaceShipData data;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SectorTag playerShipTag;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5488", Offset = "0x8C5488")]
		[SerializeField]
		private List<HangarEntryInfo> statObjects;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<HangarEntryInfo> infoObjects;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C54E4", Offset = "0x8C54E4")]
		[SerializeField]
		private int statsRoundingMultiple;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StatusBarObject healthBarObject;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private StatusBarObject shieldBarObject;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StatusBarObject speedBarObject;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI healthAmountText;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI shieldAmountText;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI speedAmountText;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float baseHealth;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float baseShield;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float baseSpeed;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C55C0", Offset = "0x8C55C0")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C55C0", Offset = "0x8C55C0")]
		private SectorTag healthUpgradeTag;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C5630", Offset = "0x8C5630")]
		private SectorTag shieldUpgradeTag;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C567C", Offset = "0x8C567C")]
		private SectorTag speedUpgradeTag;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C56C8", Offset = "0x8C56C8")]
		[SerializeField]
		private AbilitySlot[] abilitySlots;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5714", Offset = "0x8C5714")]
		private GameObject clearTimeParent;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private TextMeshProUGUI clearTimeText;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5770", Offset = "0x8C5770")]
		private SkinSelection[] skinButtons;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private int techTreeShipIndex;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C57CC", Offset = "0x8C57CC")]
		[SerializeField]
		private TextMeshProUGUI clearedAmountText;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private TextMeshProUGUI threatHeaderText;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TextMeshProUGUI threatAmountText;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TextMeshProUGUI dailyAmountText;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private TextMeshProUGUI deathsAmountText;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private TextMeshProUGUI enemiesAmountText;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private TextMeshProUGUI sectorsAmountText;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private LocalizationKey threatLevelHeaderKey;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private LocalizationKey threatLevelHiddenHeaderKey;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private LocalizationKey threatLevelHiddenKey;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C58A8", Offset = "0x8C58A8")]
		[SerializeField]
		private UiButton selectButton;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private TextMeshProUGUI selectButtonTextMesh;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private LocalizationKey selectLocalizationKey;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private LocalizationKey selectedLocalizationKey;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private LocalizationKey unlockRequiredLocalizationKey;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public LocalizationKey shipNameKey;

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xE34D8C", Offset = "0xE34D8C", VA = "0xE34D8C")]
		public bool IsUnlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xE34E78", Offset = "0xE34E78", VA = "0xE34E78")]
		private void UpdateStatusBar(StatusBarObject barObject, TMP_Text textMesh, float baseAmount)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xE34F68", Offset = "0xE34F68", VA = "0xE34F68")]
		public void UpdateEntry()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xE34FA0", Offset = "0xE34FA0", VA = "0xE34FA0")]
		private void DisplayStatScreen(bool shouldDisplayScreen)
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xE36390", Offset = "0xE36390", VA = "0xE36390")]
		private void DisplayInfoScreen(bool shouldDisplayScreen)
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xE36628", Offset = "0xE36628", VA = "0xE36628")]
		public void OnInfoButtonPressed(bool showInfoScreen)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xE36674", Offset = "0xE36674", VA = "0xE36674")]
		public void SetSelectShip()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xE35238", Offset = "0xE35238", VA = "0xE35238")]
		private void SetTimeRecord()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xE354B0", Offset = "0xE354B0", VA = "0xE354B0")]
		private void FetchTechTreeUpgrades()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xE36034", Offset = "0xE36034", VA = "0xE36034")]
		private void UpdateColorButtons()
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xE36878", Offset = "0xE36878", VA = "0xE36878")]
		private bool IsCurrentSelectedShip()
		{
			return default(bool);
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xE36988", Offset = "0xE36988", VA = "0xE36988")]
		public void UpdateSelectButton()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xE36740", Offset = "0xE36740", VA = "0xE36740")]
		private bool IsSelectedSkin(SectorTag skinTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xE36A30", Offset = "0xE36A30", VA = "0xE36A30")]
		public void OnSelectSkin(UiButton buttonPressed)
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xE36C24", Offset = "0xE36C24", VA = "0xE36C24")]
		public void SetupInfo()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xE36FB8", Offset = "0xE36FB8", VA = "0xE36FB8")]
		public void OnResearchButtonPressed()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xE37024", Offset = "0xE37024", VA = "0xE37024")]
		public HangarShipEntry()
		{
		}
	}
	[Token(Token = "0x200053E")]
	public class HangarShipMenu : GameMonoBehaviour
	{
		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HangarShipEntry[] shipEntries;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private StepIndicatorMenu stepIndicator;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI headerText;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UiButton researchButton;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int currentEntryIndex;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int selectedHangarIndex;

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xE3718C", Offset = "0xE3718C", VA = "0xE3718C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xE37718", Offset = "0xE37718", VA = "0xE37718")]
		public void OnMenuShow()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xE377AC", Offset = "0xE377AC", VA = "0xE377AC")]
		public void NextShipEntry()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xE377E4", Offset = "0xE377E4", VA = "0xE377E4")]
		public void PreviousShipEntry()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xE374FC", Offset = "0xE374FC", VA = "0xE374FC")]
		private void SetShipEntry(int index)
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xE37814", Offset = "0xE37814", VA = "0xE37814")]
		public void OnResearchButtonPressed()
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xE37858", Offset = "0xE37858", VA = "0xE37858")]
		public void OnInfoButtonPressed(bool showInfo)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xE37924", Offset = "0xE37924", VA = "0xE37924")]
		public void OnSelectButtonPressed()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xE3799C", Offset = "0xE3799C", VA = "0xE3799C")]
		public HangarShipMenu()
		{
		}
	}
	[Token(Token = "0x200053F")]
	public class SpaceShipData : MonoBehaviour
	{
		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetReferenceGameObject shipPrefab;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerShipSettings playerShipSettings;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float maxHealth;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float maxShield;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float maxSpeed;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LocalizationKey nameKey;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetReferenceGameObject[] startSlotables;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SectorTag playerShipTag;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private StatsEnum statType;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent onDataLoaded;

		[Token(Token = "0x17000607")]
		public float MaxHealth
		{
			[Token(Token = "0x6002160")]
			[Address(RVA = "0x150D5A4", Offset = "0x150D5A4", VA = "0x150D5A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000608")]
		public float MaxShield
		{
			[Token(Token = "0x6002161")]
			[Address(RVA = "0x150D5AC", Offset = "0x150D5AC", VA = "0x150D5AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000609")]
		public float MaxSpeed
		{
			[Token(Token = "0x6002162")]
			[Address(RVA = "0x150D5B4", Offset = "0x150D5B4", VA = "0x150D5B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700060A")]
		public LocalizationKey NameKey
		{
			[Token(Token = "0x6002163")]
			[Address(RVA = "0x150D5BC", Offset = "0x150D5BC", VA = "0x150D5BC")]
			get
			{
				return default(LocalizationKey);
			}
		}

		[Token(Token = "0x1700060B")]
		public AssetReferenceGameObject[] StartSlotables
		{
			[Token(Token = "0x6002164")]
			[Address(RVA = "0x150D5C8", Offset = "0x150D5C8", VA = "0x150D5C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060C")]
		public SectorTag PlayerShipTag
		{
			[Token(Token = "0x6002165")]
			[Address(RVA = "0x150D5D0", Offset = "0x150D5D0", VA = "0x150D5D0")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x1700060D")]
		public StatsEnum StatType
		{
			[Token(Token = "0x6002166")]
			[Address(RVA = "0x150D5DC", Offset = "0x150D5DC", VA = "0x150D5DC")]
			get
			{
				return default(StatsEnum);
			}
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x150D5E4", Offset = "0x150D5E4", VA = "0x150D5E4")]
		public SpaceShipData()
		{
		}
	}
}
namespace Game.Handtracking
{
	[Token(Token = "0x2000540")]
	public class HandGrabState
	{
		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isGrabbing;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isPinchingIndex;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool isPinchingMiddle;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool isPalmPose;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isThumbsUpPose;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool isFingerGunPose;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool isGrabbingOrPinching;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool isGrabbingOrPinchingOrPalmPose;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandPinchAbilitySelect pinchAbilitySelect;

		[Token(Token = "0x1700060E")]
		public bool IsPinchingIndexAndMiddle
		{
			[Token(Token = "0x6002168")]
			[Address(RVA = "0xE337C8", Offset = "0xE337C8", VA = "0xE337C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xE337E8", Offset = "0xE337E8", VA = "0xE337E8")]
		public HandGrabState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000541")]
	public struct HandPinchAbilitySelect
	{
		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 pinchAbilitySelectIndex;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 pinchAbilitySelectMiddle;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 pinchAbilitySelectFingerGun;
	}
	[Token(Token = "0x2000542")]
	public class ActOnGrab : MonoBehaviourSingleton<ActOnGrab>
	{
		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5A54", Offset = "0x8C5A54")]
		[SerializeField]
		private HandGrabAPI handGrabAPILeft;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HandGrabAPI handGrabAPIRight;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ActiveStateGroup palmPoseLeft;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ActiveStateGroup palmPoseRight;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ActiveStateGroup thumbsUpPoseLeft;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ActiveStateGroup thumbsUpPoseRight;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ActiveStateGroup fingerGunPoseLeft;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ActiveStateGroup fingerGunPoseRight;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5B10", Offset = "0x8C5B10")]
		[SerializeField]
		private GrabbingRule grabFingers;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GrabbingRule pinchFingersIndex;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GrabbingRule pinchFingersMiddle;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private HandPinchAbilitySelect pinchAbilitySelect;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5B8C", Offset = "0x8C5B8C")]
		private static HandGrabState <LeftHandGrabState>k__BackingField;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5B9C", Offset = "0x8C5B9C")]
		private static HandGrabState <RightHandGrabState>k__BackingField;

		[Token(Token = "0x1700060F")]
		public static HandGrabState LeftHandGrabState
		{
			[Token(Token = "0x600216A")]
			[Address(RVA = "0xEE3148", Offset = "0xEE3148", VA = "0xEE3148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4870", Offset = "0x8D4870")]
			get
			{
				return null;
			}
			[Token(Token = "0x600216B")]
			[Address(RVA = "0xEE31AC", Offset = "0xEE31AC", VA = "0xEE31AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4880", Offset = "0x8D4880")]
			private set
			{
			}
		}

		[Token(Token = "0x17000610")]
		public static HandGrabState RightHandGrabState
		{
			[Token(Token = "0x600216C")]
			[Address(RVA = "0xEE3218", Offset = "0xEE3218", VA = "0xEE3218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4890", Offset = "0x8D4890")]
			get
			{
				return null;
			}
			[Token(Token = "0x600216D")]
			[Address(RVA = "0xEE327C", Offset = "0xEE327C", VA = "0xEE327C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D48A0", Offset = "0x8D48A0")]
			private set
			{
			}
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xEE32E8", Offset = "0xEE32E8", VA = "0xEE32E8")]
		protected void Update()
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xEE38DC", Offset = "0xEE38DC", VA = "0xEE38DC")]
		public ActOnGrab()
		{
		}
	}
	[Token(Token = "0x2000543")]
	public class HandTrackingReplaceObjectLayers : MonoBehaviour
	{
		[Token(Token = "0x2000544")]
		public enum LayerRole
		{
			[Token(Token = "0x4001DE9")]
			None,
			[Token(Token = "0x4001DEA")]
			Left,
			[Token(Token = "0x4001DEB")]
			Right
		}

		[Serializable]
		[Token(Token = "0x2000545")]
		public class LayerReplacement
		{
			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string sourceLayer;

			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private string targetLayerLeft;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private string targetLayerRight;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool isSetup;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int sourceLayerInt;

			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int targetLayerLeftInt;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int targetLayerRightInt;

			[Token(Token = "0x6002175")]
			[Address(RVA = "0xED3CA4", Offset = "0xED3CA4", VA = "0xED3CA4")]
			public void Setup()
			{
			}

			[Token(Token = "0x6002176")]
			[Address(RVA = "0xED3D0C", Offset = "0xED3D0C", VA = "0xED3D0C")]
			public bool IsSourceLayer(int layer)
			{
				return default(bool);
			}

			[Token(Token = "0x6002177")]
			[Address(RVA = "0xED3D1C", Offset = "0xED3D1C", VA = "0xED3D1C")]
			public int GetTargetLayer(LayerRole role)
			{
				return default(int);
			}

			[Token(Token = "0x6002178")]
			[Address(RVA = "0xED3D34", Offset = "0xED3D34", VA = "0xED3D34")]
			public LayerReplacement()
			{
			}
		}

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LayerRole role;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerReplacement[] layerReplacements;

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xE34478", Offset = "0xE34478", VA = "0xE34478")]
		protected void Start()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xE344A4", Offset = "0xE344A4", VA = "0xE344A4")]
		public void ReplaceLayers(Transform root)
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xE34524", Offset = "0xE34524", VA = "0xE34524")]
		private void ReplaceLayersInternal(Transform root)
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xE346B0", Offset = "0xE346B0", VA = "0xE346B0")]
		public HandTrackingReplaceObjectLayers()
		{
		}
	}
	[Token(Token = "0x2000546")]
	public class HandTrackingReplaceObjectLayersChild : MonoBehaviour
	{
		[Token(Token = "0x6002179")]
		[Address(RVA = "0xE346B8", Offset = "0xE346B8", VA = "0xE346B8")]
		protected void Start()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xE34778", Offset = "0xE34778", VA = "0xE34778")]
		public HandTrackingReplaceObjectLayersChild()
		{
		}
	}
	[Token(Token = "0x2000547")]
	public abstract class HandTrackingStateToggleBase : MonoBehaviour
	{
		[Token(Token = "0x600217B")]
		[Address(RVA = "0xE34780", Offset = "0xE34780", VA = "0xE34780", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xE348B4", Offset = "0xE348B4", VA = "0xE348B4", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xE348A0", Offset = "0xE348A0", VA = "0xE348A0")]
		private void InputModeStateChanged(InitializeNewVirtualHandDevice.InputMode mode)
		{
		}

		[Token(Token = "0x600217E")]
		protected abstract void OnInputModeStateChanged(bool handTracking);

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xE34970", Offset = "0xE34970", VA = "0xE34970")]
		protected HandTrackingStateToggleBase()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public class HandTrackingStateToggleComponentEnable : HandTrackingStateToggleBase
	{
		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Behaviour[] controllerEnabledBehaviours;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Behaviour[] handTrackingEnabledBehaviours;

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xE34978", Offset = "0xE34978", VA = "0xE34978", Slot = "6")]
		protected override void OnInputModeStateChanged(bool handTracking)
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xE34A44", Offset = "0xE34A44", VA = "0xE34A44")]
		public HandTrackingStateToggleComponentEnable()
		{
		}
	}
	[Token(Token = "0x2000549")]
	public class HandTrackingStateToggleObjectEnable : HandTrackingStateToggleBase
	{
		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool enableWhenHandTracking;

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xE34A4C", Offset = "0xE34A4C", VA = "0xE34A4C", Slot = "6")]
		protected override void OnInputModeStateChanged(bool handTracking)
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xE34A94", Offset = "0xE34A94", VA = "0xE34A94")]
		public HandTrackingStateToggleObjectEnable()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class HandTrackingStateToggleTransform : HandTrackingStateToggleBase
	{
		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5C2C", Offset = "0x8C5C2C")]
		[SerializeField]
		private bool controllerValuesApply;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool controllerValuesSetOnAwake;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 controllerLocalPosition;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 controllerLocalRotation;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5CA8", Offset = "0x8C5CA8")]
		private bool handTrackingValuesApply;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool handTrackingValuesSetOnAwake;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		private bool handTrackingValuesRelativeToController;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 handTrackingLocalPosition;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Vector3 handTrackingLocalRotation;

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xE34A9C", Offset = "0xE34A9C", VA = "0xE34A9C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xE34B50", Offset = "0xE34B50", VA = "0xE34B50", Slot = "6")]
		protected override void OnInputModeStateChanged(bool handTracking)
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xE34D00", Offset = "0xE34D00", VA = "0xE34D00")]
		public HandTrackingStateToggleTransform()
		{
		}
	}
	[Token(Token = "0x200054B")]
	public class HandTrackingStateToggleUnityEvent : HandTrackingStateToggleBase
	{
		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onSwitchToControllers;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onSwitchToHandTracking;

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xE34D64", Offset = "0xE34D64", VA = "0xE34D64", Slot = "6")]
		protected override void OnInputModeStateChanged(bool handTracking)
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xE34D84", Offset = "0xE34D84", VA = "0xE34D84")]
		public HandTrackingStateToggleUnityEvent()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class InitializeNewVirtualHandDevice : MonoBehaviour
	{
		[Token(Token = "0x200054D")]
		public enum InputMode
		{
			[Token(Token = "0x4001E15")]
			None,
			[Token(Token = "0x4001E16")]
			Controllers,
			[Token(Token = "0x4001E17")]
			Hands
		}

		[Token(Token = "0x4001E01")]
		public const string OCULUS_CONTROLLER_NAME_LEFT = "OculusTouchControllerLeft";

		[Token(Token = "0x4001E02")]
		public const string OCULUS_CONTROLLER_NAME_RIGHT = "OculusTouchControllerRight";

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform cameraTransform;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Oculus.Interaction.Input.Hand leftHand;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Oculus.Interaction.Input.Hand rightHand;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private OVRHand leftOVRHand;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OVRHand rightOVRHand;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VRPlayerSelector leftSelector;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VRPlayerSelector rightSelector;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float handButtonActiveConeAngle;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float handButtonActiveConeBaseRadius;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector3 handButtonActiveConeDirectionScalePositive;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Vector3 handButtonActiveConeDirectionScaleNegative;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5E04", Offset = "0x8C5E04")]
		private static InputMode <InputModeState>k__BackingField;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool leftControllerPresent;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool rightControllerPresent;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private VirtualHandDeviceLeft leftDevice;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VirtualHandDeviceRight rightDevice;

		[Token(Token = "0x17000611")]
		public static InputMode InputModeState
		{
			[Token(Token = "0x6002189")]
			[Address(RVA = "0xD545BC", Offset = "0xD545BC", VA = "0xD545BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D48B0", Offset = "0x8D48B0")]
			get
			{
				return default(InputMode);
			}
			[Token(Token = "0x600218A")]
			[Address(RVA = "0xD54620", Offset = "0xD54620", VA = "0xD54620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D48C0", Offset = "0x8D48C0")]
			private set
			{
			}
		}

		[Token(Token = "0x1400009B")]
		public static event Action<InputMode> InputModeStateChanged
		{
			[Token(Token = "0x600218B")]
			[Address(RVA = "0xD54688", Offset = "0xD54688", VA = "0xD54688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D48D0", Offset = "0x8D48D0")]
			add
			{
			}
			[Token(Token = "0x600218C")]
			[Address(RVA = "0xD54780", Offset = "0xD54780", VA = "0xD54780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D48E0", Offset = "0x8D48E0")]
			remove
			{
			}
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xD54878", Offset = "0xD54878", VA = "0xD54878")]
		protected void Start()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xD54B60", Offset = "0xD54B60", VA = "0xD54B60")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xD54C1C", Offset = "0xD54C1C", VA = "0xD54C1C")]
		protected void Update()
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xD54C20", Offset = "0xD54C20", VA = "0xD54C20")]
		private void OnDeviceChange(UnityEngine.InputSystem.InputDevice device, InputDeviceChange change)
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xD54A00", Offset = "0xD54A00", VA = "0xD54A00")]
		private void UpdateControllerMode()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xD54D2C", Offset = "0xD54D2C", VA = "0xD54D2C")]
		private void SwitchToControllers()
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xD54EBC", Offset = "0xD54EBC", VA = "0xD54EBC")]
		private void SwitchToHands()
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xD54D0C", Offset = "0xD54D0C", VA = "0xD54D0C")]
		private bool IsControllersPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xD54E7C", Offset = "0xD54E7C", VA = "0xD54E7C")]
		private bool IsHandsPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xD55010", Offset = "0xD55010", VA = "0xD55010")]
		public static void DebugToggleInputMode()
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xD551B4", Offset = "0xD551B4", VA = "0xD551B4")]
		public InitializeNewVirtualHandDevice()
		{
		}
	}
	[Token(Token = "0x200054E")]
	public class PieChartPhysicalButton : MonoBehaviour
	{
		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C5E24", Offset = "0x8C5E24")]
		[SerializeField]
		private Vector2 buttonDirection;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 PressedDirection;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int PressReleaseCountdown;

		[Token(Token = "0x4001E1B")]
		private const int PRESS_RELEASE_COUNTDOWN_MAX = 40;

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x249D1D4", Offset = "0x249D1D4", VA = "0x249D1D4")]
		public static Vector2 ConsumePushedDirection()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x249D2A4", Offset = "0x249D2A4", VA = "0x249D2A4")]
		public void Press()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x249D320", Offset = "0x249D320", VA = "0x249D320")]
		public PieChartPhysicalButton()
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class SpeedBoostButtonAction : MonoBehaviour
	{
		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C5E70", Offset = "0x8C5E70")]
		[SerializeField]
		private UiButton button;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ShipAbilityActive cachedEnergyBarAbility;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isPressed;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5EBC", Offset = "0x8C5EBC")]
		private static bool <IsPressed>k__BackingField;

		[Token(Token = "0x17000612")]
		public bool AbilityReady
		{
			[Token(Token = "0x600219D")]
			[Address(RVA = "0xF23180", Offset = "0xF23180", VA = "0xF23180")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000613")]
		public static bool IsPressed
		{
			[Token(Token = "0x600219E")]
			[Address(RVA = "0xF235FC", Offset = "0xF235FC", VA = "0xF235FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D48F0", Offset = "0x8D48F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600219F")]
			[Address(RVA = "0xF23660", Offset = "0xF23660", VA = "0xF23660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4900", Offset = "0x8D4900")]
			private set
			{
			}
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xF236CC", Offset = "0xF236CC", VA = "0xF236CC")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xF237C0", Offset = "0xF237C0", VA = "0xF237C0")]
		protected void Update()
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xF236D0", Offset = "0xF236D0", VA = "0xF236D0")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xF237C4", Offset = "0xF237C4", VA = "0xF237C4")]
		public void Press()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xF237D0", Offset = "0xF237D0", VA = "0xF237D0")]
		public void Release()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xF237D8", Offset = "0xF237D8", VA = "0xF237D8")]
		public SpeedBoostButtonAction()
		{
		}
	}
	[Token(Token = "0x2000550")]
	public abstract class VirtualHandDevice : UnityEngine.InputSystem.InputDevice, IInputUpdateCallbackReceiver
	{
		[Token(Token = "0x4001E20")]
		private const float MOVE_PINCH_RELEASE_TIMER = 0.3f;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5ECC", Offset = "0x8C5ECC")]
		private Vector3Control <Position>k__BackingField;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5EDC", Offset = "0x8C5EDC")]
		private Vector3Control <PointerPosition>k__BackingField;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5EEC", Offset = "0x8C5EEC")]
		private Vector3Control <Index3Position>k__BackingField;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5EFC", Offset = "0x8C5EFC")]
		private QuaternionControl <Rotation>k__BackingField;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5F0C", Offset = "0x8C5F0C")]
		private QuaternionControl <PointerRotation>k__BackingField;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5F1C", Offset = "0x8C5F1C")]
		private QuaternionControl <Index3Rotation>k__BackingField;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5F2C", Offset = "0x8C5F2C")]
		private ButtonControl <Grip>k__BackingField;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5F3C", Offset = "0x8C5F3C")]
		private ButtonControl <Pinch>k__BackingField;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5F4C", Offset = "0x8C5F4C")]
		private ButtonControl <MenuButton>k__BackingField;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5F5C", Offset = "0x8C5F5C")]
		private ButtonControl <Scanner>k__BackingField;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5F6C", Offset = "0x8C5F6C")]
		private Vector2Control <Thumbstick>k__BackingField;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5F7C", Offset = "0x8C5F7C")]
		private ButtonControl <SecondaryButton>k__BackingField;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5F8C", Offset = "0x8C5F8C")]
		private ButtonControl <MoveShip>k__BackingField;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5F9C", Offset = "0x8C5F9C")]
		private ButtonControl <Target>k__BackingField;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5FAC", Offset = "0x8C5FAC")]
		private bool <HandTrackingEnabled>k__BackingField;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5FBC", Offset = "0x8C5FBC")]
		private static bool <SystemGestureInProgress>k__BackingField;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Transform cameraTransform;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Oculus.Interaction.Input.Hand hand;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private OVRHand ovrHand;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private VRPlayerSelector selector;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float activeConeAngle;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float activeConeBaseRadius;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Vector3 activeConeDirectionScalePositive;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private Vector3 activeConeDirectionScaleNegative;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private bool movePinchReleased;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float movePinchReleaseStart;

		[Token(Token = "0x17000614")]
		public Vector3Control Position
		{
			[Token(Token = "0x60021A7")]
			[Address(RVA = "0xDFE698", Offset = "0xDFE698", VA = "0xDFE698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4910", Offset = "0x8D4910")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021A8")]
			[Address(RVA = "0xDFE6A0", Offset = "0xDFE6A0", VA = "0xDFE6A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4920", Offset = "0x8D4920")]
			private set
			{
			}
		}

		[Token(Token = "0x17000615")]
		public Vector3Control PointerPosition
		{
			[Token(Token = "0x60021A9")]
			[Address(RVA = "0xDFE6B0", Offset = "0xDFE6B0", VA = "0xDFE6B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4930", Offset = "0x8D4930")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021AA")]
			[Address(RVA = "0xDFE6B8", Offset = "0xDFE6B8", VA = "0xDFE6B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4940", Offset = "0x8D4940")]
			private set
			{
			}
		}

		[Token(Token = "0x17000616")]
		public Vector3Control Index3Position
		{
			[Token(Token = "0x60021AB")]
			[Address(RVA = "0xDFE6C8", Offset = "0xDFE6C8", VA = "0xDFE6C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4950", Offset = "0x8D4950")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021AC")]
			[Address(RVA = "0xDFE6D0", Offset = "0xDFE6D0", VA = "0xDFE6D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4960", Offset = "0x8D4960")]
			private set
			{
			}
		}

		[Token(Token = "0x17000617")]
		public QuaternionControl Rotation
		{
			[Token(Token = "0x60021AD")]
			[Address(RVA = "0xDFE6E0", Offset = "0xDFE6E0", VA = "0xDFE6E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4970", Offset = "0x8D4970")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0xDFE6E8", Offset = "0xDFE6E8", VA = "0xDFE6E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4980", Offset = "0x8D4980")]
			private set
			{
			}
		}

		[Token(Token = "0x17000618")]
		public QuaternionControl PointerRotation
		{
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0xDFE6F8", Offset = "0xDFE6F8", VA = "0xDFE6F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4990", Offset = "0x8D4990")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0xDFE700", Offset = "0xDFE700", VA = "0xDFE700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D49A0", Offset = "0x8D49A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000619")]
		public QuaternionControl Index3Rotation
		{
			[Token(Token = "0x60021B1")]
			[Address(RVA = "0xDFE710", Offset = "0xDFE710", VA = "0xDFE710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D49B0", Offset = "0x8D49B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0xDFE718", Offset = "0xDFE718", VA = "0xDFE718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D49C0", Offset = "0x8D49C0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700061A")]
		public ButtonControl Grip
		{
			[Token(Token = "0x60021B3")]
			[Address(RVA = "0xDFE728", Offset = "0xDFE728", VA = "0xDFE728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D49D0", Offset = "0x8D49D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0xDFE730", Offset = "0xDFE730", VA = "0xDFE730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D49E0", Offset = "0x8D49E0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700061B")]
		public ButtonControl Pinch
		{
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0xDFE740", Offset = "0xDFE740", VA = "0xDFE740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D49F0", Offset = "0x8D49F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B6")]
			[Address(RVA = "0xDFE748", Offset = "0xDFE748", VA = "0xDFE748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4A00", Offset = "0x8D4A00")]
			private set
			{
			}
		}

		[Token(Token = "0x1700061C")]
		public ButtonControl MenuButton
		{
			[Token(Token = "0x60021B7")]
			[Address(RVA = "0xDFE758", Offset = "0xDFE758", VA = "0xDFE758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4A10", Offset = "0x8D4A10")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B8")]
			[Address(RVA = "0xDFE760", Offset = "0xDFE760", VA = "0xDFE760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4A20", Offset = "0x8D4A20")]
			private set
			{
			}
		}

		[Token(Token = "0x1700061D")]
		public ButtonControl Scanner
		{
			[Token(Token = "0x60021B9")]
			[Address(RVA = "0xDFE770", Offset = "0xDFE770", VA = "0xDFE770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4A30", Offset = "0x8D4A30")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021BA")]
			[Address(RVA = "0xDFE778", Offset = "0xDFE778", VA = "0xDFE778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4A40", Offset = "0x8D4A40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700061E")]
		public Vector2Control Thumbstick
		{
			[Token(Token = "0x60021BB")]
			[Address(RVA = "0xDFE788", Offset = "0xDFE788", VA = "0xDFE788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4A50", Offset = "0x8D4A50")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021BC")]
			[Address(RVA = "0xDFE790", Offset = "0xDFE790", VA = "0xDFE790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4A60", Offset = "0x8D4A60")]
			private set
			{
			}
		}

		[Token(Token = "0x1700061F")]
		public ButtonControl SecondaryButton
		{
			[Token(Token = "0x60021BD")]
			[Address(RVA = "0xDFE7A0", Offset = "0xDFE7A0", VA = "0xDFE7A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4A70", Offset = "0x8D4A70")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021BE")]
			[Address(RVA = "0xDFE7A8", Offset = "0xDFE7A8", VA = "0xDFE7A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4A80", Offset = "0x8D4A80")]
			private set
			{
			}
		}

		[Token(Token = "0x17000620")]
		public ButtonControl MoveShip
		{
			[Token(Token = "0x60021BF")]
			[Address(RVA = "0xDFE7B8", Offset = "0xDFE7B8", VA = "0xDFE7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4A90", Offset = "0x8D4A90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021C0")]
			[Address(RVA = "0xDFE7C0", Offset = "0xDFE7C0", VA = "0xDFE7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4AA0", Offset = "0x8D4AA0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000621")]
		public ButtonControl Target
		{
			[Token(Token = "0x60021C1")]
			[Address(RVA = "0xDFE7D0", Offset = "0xDFE7D0", VA = "0xDFE7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4AB0", Offset = "0x8D4AB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021C2")]
			[Address(RVA = "0xDFE7D8", Offset = "0xDFE7D8", VA = "0xDFE7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4AC0", Offset = "0x8D4AC0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000622")]
		public bool HandTrackingEnabled
		{
			[Token(Token = "0x60021C3")]
			[Address(RVA = "0xDFE7E8", Offset = "0xDFE7E8", VA = "0xDFE7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4AD0", Offset = "0x8D4AD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021C4")]
			[Address(RVA = "0xDFE7F0", Offset = "0xDFE7F0", VA = "0xDFE7F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4AE0", Offset = "0x8D4AE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000623")]
		public static bool SystemGestureInProgress
		{
			[Token(Token = "0x60021C5")]
			[Address(RVA = "0xDFE7FC", Offset = "0xDFE7FC", VA = "0xDFE7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4AF0", Offset = "0x8D4AF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021C6")]
			[Address(RVA = "0xDFE860", Offset = "0xDFE860", VA = "0xDFE860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4B00", Offset = "0x8D4B00")]
			private set
			{
			}
		}

		[Token(Token = "0x17000624")]
		protected abstract OVRPlugin.Hand HandOVRType
		{
			[Token(Token = "0x60021C7")]
			get;
		}

		[Token(Token = "0x17000625")]
		protected abstract HandGrabState HandGrabState
		{
			[Token(Token = "0x60021C8")]
			get;
		}

		[Token(Token = "0x17000626")]
		protected abstract Quaternion HandRotationMultiplier
		{
			[Token(Token = "0x60021C9")]
			get;
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xDFE8CC", Offset = "0xDFE8CC", VA = "0xDFE8CC")]
		public void Init(Oculus.Interaction.Input.Hand hand, OVRHand ovrHand, Transform cameraTransform, VRPlayerSelector selector, float activeConeAngle, float activeConeBaseRadius, Vector3 activeConeDirectionScalePositive, Vector3 activeConeDirectionScaleNegative)
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xDFE998", Offset = "0xDFE998", VA = "0xDFE998", Slot = "13")]
		protected override void FinishSetup()
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xDFECF8", Offset = "0xDFECF8", VA = "0xDFECF8", Slot = "21")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xDFF6A4", Offset = "0xDFF6A4", VA = "0xDFF6A4")]
		protected VirtualHandDevice()
		{
		}
	}
	[Token(Token = "0x2000551")]
	[AttributeAttribute(Name = "InputControlLayoutAttribute", RVA = "0x8AACD0", Offset = "0x8AACD0")]
	public class VirtualHandDeviceLeft : VirtualHandDevice
	{
		[Token(Token = "0x17000627")]
		protected override OVRPlugin.Hand HandOVRType
		{
			[Token(Token = "0x60021CF")]
			[Address(RVA = "0xDFF6B8", Offset = "0xDFF6B8", VA = "0xDFF6B8", Slot = "22")]
			get
			{
				return default(OVRPlugin.Hand);
			}
		}

		[Token(Token = "0x17000628")]
		protected override HandGrabState HandGrabState
		{
			[Token(Token = "0x60021D0")]
			[Address(RVA = "0xDFF6C0", Offset = "0xDFF6C0", VA = "0xDFF6C0", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000629")]
		protected override Quaternion HandRotationMultiplier
		{
			[Token(Token = "0x60021D1")]
			[Address(RVA = "0xDFF75C", Offset = "0xDFF75C", VA = "0xDFF75C", Slot = "24")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xDFF778", Offset = "0xDFF778", VA = "0xDFF778")]
		static VirtualHandDeviceLeft()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xDFF7F4", Offset = "0xDFF7F4", VA = "0xDFF7F4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8D4B10", Offset = "0x8D4B10")]
		private static void InitializeInPlayer()
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xDFF7F8", Offset = "0xDFF7F8", VA = "0xDFF7F8")]
		public VirtualHandDeviceLeft()
		{
		}
	}
	[Token(Token = "0x2000552")]
	[AttributeAttribute(Name = "InputControlLayoutAttribute", RVA = "0x8AAD58", Offset = "0x8AAD58")]
	public class VirtualHandDeviceRight : VirtualHandDevice
	{
		[Token(Token = "0x1700062A")]
		protected override OVRPlugin.Hand HandOVRType
		{
			[Token(Token = "0x60021D5")]
			[Address(RVA = "0xDFF864", Offset = "0xDFF864", VA = "0xDFF864", Slot = "22")]
			get
			{
				return default(OVRPlugin.Hand);
			}
		}

		[Token(Token = "0x1700062B")]
		protected override HandGrabState HandGrabState
		{
			[Token(Token = "0x60021D6")]
			[Address(RVA = "0xDFF86C", Offset = "0xDFF86C", VA = "0xDFF86C", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062C")]
		protected override Quaternion HandRotationMultiplier
		{
			[Token(Token = "0x60021D7")]
			[Address(RVA = "0xDFF908", Offset = "0xDFF908", VA = "0xDFF908", Slot = "24")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xDFF924", Offset = "0xDFF924", VA = "0xDFF924")]
		static VirtualHandDeviceRight()
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xDFF9A0", Offset = "0xDFF9A0", VA = "0xDFF9A0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8D4B24", Offset = "0x8D4B24")]
		private static void InitializeInPlayer()
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xDFF9A4", Offset = "0xDFF9A4", VA = "0xDFF9A4")]
		public VirtualHandDeviceRight()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public struct VirtualHandDeviceState : IInputStateTypeInfo
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C5FCC", Offset = "0x8C5FCC")]
		public Vector3 position;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C6010", Offset = "0x8C6010")]
		public Vector3 pointerPosition;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C6054", Offset = "0x8C6054")]
		public Vector3 index3Position;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C6098", Offset = "0x8C6098")]
		public Quaternion rotation;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C60DC", Offset = "0x8C60DC")]
		public Quaternion pointerRotation;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C6120", Offset = "0x8C6120")]
		public Quaternion index3Rotation;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C6164", Offset = "0x8C6164")]
		public Vector2 thumbstick;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C61A8", Offset = "0x8C61A8")]
		public Vector2 thumbstickInstant;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C61EC", Offset = "0x8C61EC")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C61EC", Offset = "0x8C61EC")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C61EC", Offset = "0x8C61EC")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C61EC", Offset = "0x8C61EC")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C61EC", Offset = "0x8C61EC")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C61EC", Offset = "0x8C61EC")]
		public ushort buttons;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		[AttributeAttribute(Name = "InputControlAttribute", RVA = "0x8C63F4", Offset = "0x8C63F4")]
		public ushort secondaryButton;

		[Token(Token = "0x1700062D")]
		public FourCC format
		{
			[Token(Token = "0x60021DB")]
			[Address(RVA = "0xDFFA10", Offset = "0xDFFA10", VA = "0xDFFA10", Slot = "4")]
			get
			{
				return default(FourCC);
			}
		}
	}
}
namespace Game.GlobalAssets
{
	[Token(Token = "0x2000554")]
	public enum ScannableType
	{
		[Token(Token = "0x4001E46")]
		Passive,
		[Token(Token = "0x4001E47")]
		Active,
		[Token(Token = "0x4001E48")]
		Shop,
		[Token(Token = "0x4001E49")]
		Event,
		[Token(Token = "0x4001E4A")]
		Info,
		[Token(Token = "0x4001E4B")]
		EventPersistent
	}
	[Token(Token = "0x2000555")]
	public enum PickupType
	{
		[Token(Token = "0x4001E4D")]
		None = 0,
		[Token(Token = "0x4001E4E")]
		Scrap = 1,
		[Token(Token = "0x4001E4F")]
		Experience = 10,
		[Token(Token = "0x4001E50")]
		Ability = 20,
		[Token(Token = "0x4001E51")]
		StoryKey = 21,
		[Token(Token = "0x4001E52")]
		Health = 30,
		[Token(Token = "0x4001E53")]
		Ammo = 40,
		[Token(Token = "0x4001E54")]
		AbilityChest = 50,
		[Token(Token = "0x4001E55")]
		AbilityChestChoice = 51
	}
	[Token(Token = "0x2000556")]
	public struct PickupGroup
	{
		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PickupType type;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<Pickup> pickups;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Pickup> selectionList;

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x249C3D0", Offset = "0x249C3D0", VA = "0x249C3D0")]
		public PickupGroup(PickupType type)
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x249AFCC", Offset = "0x249AFCC", VA = "0x249AFCC")]
		public bool TrySelectPickup(int maxValue, out Pickup selectedPickup)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000557")]
	public enum TeleportType
	{
		[Token(Token = "0x4001E5A")]
		Default,
		[Token(Token = "0x4001E5B")]
		GlitchEnemy,
		[Token(Token = "0x4001E5C")]
		GlitchCreature
	}
	[Token(Token = "0x2000558")]
	public class TeleportGroup
	{
		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C645C", Offset = "0x8C645C")]
		private GameObject <TeleportAnticipationEffect>k__BackingField;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C646C", Offset = "0x8C646C")]
		private bool <TeleportAnticipationFlat>k__BackingField;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C647C", Offset = "0x8C647C")]
		private GameObject <TeleportWindupEffect>k__BackingField;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C648C", Offset = "0x8C648C")]
		private GameObject <TeleportStartEffect>k__BackingField;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C649C", Offset = "0x8C649C")]
		private GameObject <TeleportFinishedEffect>k__BackingField;

		[Token(Token = "0x1700062E")]
		public GameObject TeleportAnticipationEffect
		{
			[Token(Token = "0x60021DF")]
			[Address(RVA = "0xF32490", Offset = "0xF32490", VA = "0xF32490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4B38", Offset = "0x8D4B38")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021E0")]
			[Address(RVA = "0xF32498", Offset = "0xF32498", VA = "0xF32498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4B48", Offset = "0x8D4B48")]
			set
			{
			}
		}

		[Token(Token = "0x1700062F")]
		public bool TeleportAnticipationFlat
		{
			[Token(Token = "0x60021E1")]
			[Address(RVA = "0xF324A0", Offset = "0xF324A0", VA = "0xF324A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4B58", Offset = "0x8D4B58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021E2")]
			[Address(RVA = "0xF324A8", Offset = "0xF324A8", VA = "0xF324A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4B68", Offset = "0x8D4B68")]
			set
			{
			}
		}

		[Token(Token = "0x17000630")]
		public GameObject TeleportWindupEffect
		{
			[Token(Token = "0x60021E3")]
			[Address(RVA = "0xF324B4", Offset = "0xF324B4", VA = "0xF324B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4B78", Offset = "0x8D4B78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021E4")]
			[Address(RVA = "0xF324BC", Offset = "0xF324BC", VA = "0xF324BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4B88", Offset = "0x8D4B88")]
			set
			{
			}
		}

		[Token(Token = "0x17000631")]
		public GameObject TeleportStartEffect
		{
			[Token(Token = "0x60021E5")]
			[Address(RVA = "0xF324C4", Offset = "0xF324C4", VA = "0xF324C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4B98", Offset = "0x8D4B98")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021E6")]
			[Address(RVA = "0xF324CC", Offset = "0xF324CC", VA = "0xF324CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4BA8", Offset = "0x8D4BA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000632")]
		public GameObject TeleportFinishedEffect
		{
			[Token(Token = "0x60021E7")]
			[Address(RVA = "0xF324D4", Offset = "0xF324D4", VA = "0xF324D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4BB8", Offset = "0x8D4BB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021E8")]
			[Address(RVA = "0xF324DC", Offset = "0xF324DC", VA = "0xF324DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4BC8", Offset = "0x8D4BC8")]
			set
			{
			}
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xF324E4", Offset = "0xF324E4", VA = "0xF324E4")]
		public TeleportGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000559")]
	public class AssetReferenceMaterial : AssetReferenceT<Material>
	{
		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xEF1A44", Offset = "0xEF1A44", VA = "0xEF1A44")]
		public AssetReferenceMaterial(string guid)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055A")]
	public class AssetReferenceSectorMapNodeType : AssetReferenceT<SectorMapNodeType>
	{
		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xEF1AA0", Offset = "0xEF1AA0", VA = "0xEF1AA0")]
		public AssetReferenceSectorMapNodeType(string guid)
		{
		}
	}
	[Token(Token = "0x200055B")]
	public interface IAddressableAssetPreload
	{
		[Token(Token = "0x60021EC")]
		void CollectAddressableDependencies(Action<AssetReferenceT<GameObject>> addDependency);
	}
	[Token(Token = "0x200055C")]
	public class GlobalAssetLoader : MonoBehaviourSingleton<GlobalAssetLoader>, IAsyncSystemSetup, IGameLoaderSubsystem
	{
		[Serializable]
		[Token(Token = "0x200055D")]
		private struct TeleportAssets
		{
			[Token(Token = "0x200055E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AADE0", Offset = "0x8AADE0")]
			private sealed class <>c__DisplayClass5_0
			{
				[Token(Token = "0x4001EC7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TeleportGroup teleportGroup;

				[Token(Token = "0x600226C")]
				[Address(RVA = "0xEADA40", Offset = "0xEADA40", VA = "0xEADA40")]
				public <>c__DisplayClass5_0()
				{
				}

				[Token(Token = "0x600226D")]
				[Address(RVA = "0xEADA48", Offset = "0xEADA48", VA = "0xEADA48")]
				internal void <LoadAssetReferences>b__0(AsyncOperationHandle<GameObject> p)
				{
				}

				[Token(Token = "0x600226E")]
				[Address(RVA = "0xEADABC", Offset = "0xEADABC", VA = "0xEADABC")]
				internal void <LoadAssetReferences>b__1(AsyncOperationHandle<GameObject> p)
				{
				}

				[Token(Token = "0x600226F")]
				[Address(RVA = "0xEADB30", Offset = "0xEADB30", VA = "0xEADB30")]
				internal void <LoadAssetReferences>b__2(AsyncOperationHandle<GameObject> p)
				{
				}

				[Token(Token = "0x6002270")]
				[Address(RVA = "0xEADBA4", Offset = "0xEADBA4", VA = "0xEADBA4")]
				internal void <LoadAssetReferences>b__3(AsyncOperationHandle<GameObject> p)
				{
				}
			}

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AssetReferenceGameObject teleportAnticipationEffect;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool teleportAnticipationFlat;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AssetReferenceGameObject teleportWindupEffect;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AssetReferenceGameObject teleportStartEffect;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetReferenceGameObject teleportFinishedEffect;

			[Token(Token = "0x600226B")]
			[Address(RVA = "0xED26F0", Offset = "0xED26F0", VA = "0xED26F0")]
			public void LoadAssetReferences(GlobalAssetLoader globalAssetLoader, List<AsyncOperationHandle> waitHandles, TeleportGroup teleportGroup)
			{
			}
		}

		[Token(Token = "0x200055F")]
		private struct PreloadedMaterial
		{
			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material material;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Mesh mesh;

			[Token(Token = "0x6002271")]
			[Address(RVA = "0xED2AFC", Offset = "0xED2AFC", VA = "0xED2AFC")]
			public PreloadedMaterial(Material material, [System.Runtime.InteropServices.Optional] Mesh mesh)
			{
			}

			[Token(Token = "0x6002272")]
			[Address(RVA = "0xED2B30", Offset = "0xED2B30", VA = "0xED2B30", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002273")]
			[Address(RVA = "0xED2CE4", Offset = "0xED2CE4", VA = "0xED2CE4", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000560")]
		private struct MaterialPreloadInstance
		{
			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Renderer renderer;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MeshFilter meshFilter;

			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh defaultMesh;

			[Token(Token = "0x6002274")]
			[Address(RVA = "0xECFB68", Offset = "0xECFB68", VA = "0xECFB68")]
			public void SetMesh(Mesh mesh)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AADF0", Offset = "0x8AADF0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__245_0;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<ShipAbilityPassiveThreat> <>9__258_18;

			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<Game.Threats.ThreatLevel> <>9__258_19;

			[Token(Token = "0x6002276")]
			[Address(RVA = "0xECE560", Offset = "0xECE560", VA = "0xECE560")]
			public <>c()
			{
			}

			[Token(Token = "0x6002277")]
			[Address(RVA = "0xECE568", Offset = "0xECE568", VA = "0xECE568")]
			internal void <TryQueuePreloadAddressableDependency>b__245_0(GameObject g)
			{
			}

			[Token(Token = "0x6002278")]
			[Address(RVA = "0xECE574", Offset = "0xECE574", VA = "0xECE574")]
			internal int <LoadAssetsRoutine>b__258_18(ShipAbilityPassiveThreat a, ShipAbilityPassiveThreat b)
			{
				return default(int);
			}

			[Token(Token = "0x6002279")]
			[Address(RVA = "0xECE5B4", Offset = "0xECE5B4", VA = "0xECE5B4")]
			internal int <LoadAssetsRoutine>b__258_19(Game.Threats.ThreatLevel a, Game.Threats.ThreatLevel b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE00", Offset = "0x8AAE00")]
		private sealed class <>c__DisplayClass258_0
		{
			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GlobalAssetLoader <>4__this;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<SectorPalette> sectorPalettes;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<SectorTutorialSegment> sectorTutorialSegments;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<ShipAbilityPassive> passiveAbilities;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Dictionary<SectorTag, ShipAbilityPassive> passiveAbilitiesByTag;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<ShipAbilityPassiveThreat> passiveAbilityThreats;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<Game.Threats.ThreatLevel> threatLevels;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<Pickup> <>9__20;

			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Action<Pickup> <>9__21;

			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<Pickup> <>9__22;

			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Action<Pickup> <>9__23;

			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Action<Pickup> <>9__24;

			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Action<Pickup> <>9__25;

			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Action<Pickup> <>9__26;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Action<Pickup> <>9__27;

			[Token(Token = "0x600227A")]
			[Address(RVA = "0xECE5F4", Offset = "0xECE5F4", VA = "0xECE5F4")]
			public <>c__DisplayClass258_0()
			{
			}

			[Token(Token = "0x600227B")]
			[Address(RVA = "0xECE5FC", Offset = "0xECE5FC", VA = "0xECE5FC")]
			internal void <LoadAssetsRoutine>b__0(AsyncOperationHandle<GameObject> p)
			{
			}

			[Token(Token = "0x600227C")]
			[Address(RVA = "0xECE670", Offset = "0xECE670", VA = "0xECE670")]
			internal void <LoadAssetsRoutine>b__1(AsyncOperationHandle<GameObject> p)
			{
			}

			[Token(Token = "0x600227D")]
			[Address(RVA = "0xECE6E4", Offset = "0xECE6E4", VA = "0xECE6E4")]
			internal void <LoadAssetsRoutine>b__2(AsyncOperationHandle<GameObject> p)
			{
			}

			[Token(Token = "0x600227E")]
			[Address(RVA = "0xECE758", Offset = "0xECE758", VA = "0xECE758")]
			internal void <LoadAssetsRoutine>b__3(AsyncOperationHandle<GameObject> p)
			{
			}

			[Token(Token = "0x600227F")]
			[Address(RVA = "0xECE7CC", Offset = "0xECE7CC", VA = "0xECE7CC")]
			internal void <LoadAssetsRoutine>b__4(AsyncOperationHandle<GameObject> p)
			{
			}

			[Token(Token = "0x6002280")]
			[Address(RVA = "0xECE840", Offset = "0xECE840", VA = "0xECE840")]
			internal void <LoadAssetsRoutine>b__5(AsyncOperationHandle<GameObject> p)
			{
			}

			[Token(Token = "0x6002281")]
			[Address(RVA = "0xECE8B4", Offset = "0xECE8B4", VA = "0xECE8B4")]
			internal void <LoadAssetsRoutine>b__20(Pickup p)
			{
			}

			[Token(Token = "0x6002282")]
			[Address(RVA = "0xECE920", Offset = "0xECE920", VA = "0xECE920")]
			internal void <LoadAssetsRoutine>b__21(Pickup p)
			{
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0xECE98C", Offset = "0xECE98C", VA = "0xECE98C")]
			internal void <LoadAssetsRoutine>b__22(Pickup p)
			{
			}

			[Token(Token = "0x6002284")]
			[Address(RVA = "0xECE9F8", Offset = "0xECE9F8", VA = "0xECE9F8")]
			internal void <LoadAssetsRoutine>b__23(Pickup p)
			{
			}

			[Token(Token = "0x6002285")]
			[Address(RVA = "0xECEA64", Offset = "0xECEA64", VA = "0xECEA64")]
			internal void <LoadAssetsRoutine>b__24(Pickup p)
			{
			}

			[Token(Token = "0x6002286")]
			[Address(RVA = "0xECEAD0", Offset = "0xECEAD0", VA = "0xECEAD0")]
			internal void <LoadAssetsRoutine>b__25(Pickup p)
			{
			}

			[Token(Token = "0x6002287")]
			[Address(RVA = "0xECEB3C", Offset = "0xECEB3C", VA = "0xECEB3C")]
			internal void <LoadAssetsRoutine>b__26(Pickup p)
			{
			}

			[Token(Token = "0x6002288")]
			[Address(RVA = "0xECEBA8", Offset = "0xECEBA8", VA = "0xECEBA8")]
			internal void <LoadAssetsRoutine>b__27(Pickup p)
			{
			}

			[Token(Token = "0x6002289")]
			[Address(RVA = "0xECEC14", Offset = "0xECEC14", VA = "0xECEC14")]
			internal void <LoadAssetsRoutine>b__6(SectorPalette p)
			{
			}

			[Token(Token = "0x600228A")]
			[Address(RVA = "0xECEC78", Offset = "0xECEC78", VA = "0xECEC78")]
			internal void <LoadAssetsRoutine>b__7(SectorTutorialSegment p)
			{
			}

			[Token(Token = "0x600228B")]
			[Address(RVA = "0xECECDC", Offset = "0xECECDC", VA = "0xECECDC")]
			internal void <LoadAssetsRoutine>b__8(AsyncOperationHandle<SectorMapNodeType> p)
			{
			}

			[Token(Token = "0x600228C")]
			[Address(RVA = "0xECED58", Offset = "0xECED58", VA = "0xECED58")]
			internal void <LoadAssetsRoutine>b__9(SectorMapNodeType p)
			{
			}

			[Token(Token = "0x600228D")]
			[Address(RVA = "0xECED80", Offset = "0xECED80", VA = "0xECED80")]
			internal void <LoadAssetsRoutine>b__10(SectorMapNodeInfo p)
			{
			}

			[Token(Token = "0x600228E")]
			[Address(RVA = "0xECEDA8", Offset = "0xECEDA8", VA = "0xECEDA8")]
			internal void <LoadAssetsRoutine>b__11(AsyncOperationHandle<Material> p)
			{
			}

			[Token(Token = "0x600228F")]
			[Address(RVA = "0xECEE1C", Offset = "0xECEE1C", VA = "0xECEE1C")]
			internal void <LoadAssetsRoutine>b__12(AsyncOperationHandle<Material> p)
			{
			}

			[Token(Token = "0x6002290")]
			[Address(RVA = "0xECEE90", Offset = "0xECEE90", VA = "0xECEE90")]
			internal void <LoadAssetsRoutine>b__13(AsyncOperationHandle<GameObject> p)
			{
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0xECEF04", Offset = "0xECEF04", VA = "0xECEF04")]
			internal void <LoadAssetsRoutine>b__14(AsyncOperationHandle<GameObject> p)
			{
			}

			[Token(Token = "0x6002292")]
			[Address(RVA = "0xECEF78", Offset = "0xECEF78", VA = "0xECEF78")]
			internal void <LoadAssetsRoutine>b__15(AsyncOperationHandle<GameObject> p)
			{
			}

			[Token(Token = "0x6002293")]
			[Address(RVA = "0xECEFEC", Offset = "0xECEFEC", VA = "0xECEFEC")]
			internal void <LoadAssetsRoutine>b__16(ShipAbilityPassive p)
			{
			}

			[Token(Token = "0x6002294")]
			[Address(RVA = "0xECF0C4", Offset = "0xECF0C4", VA = "0xECF0C4")]
			internal void <LoadAssetsRoutine>b__17(Game.Threats.ThreatLevel p)
			{
			}
		}

		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE10", Offset = "0x8AAE10")]
		private sealed class <LoadAssetsRoutine>d__258 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GlobalAssetLoader <>4__this;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass258_0 <>8__1;

			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<AsyncOperationHandle>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000665")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002299")]
				[Address(RVA = "0xED2AAC", Offset = "0xED2AAC", VA = "0xED2AAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000666")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600229B")]
				[Address(RVA = "0xED2AF4", Offset = "0xED2AF4", VA = "0xED2AF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002295")]
			[Address(RVA = "0xECFC50", Offset = "0xECFC50", VA = "0xECFC50")]
			[DebuggerHidden]
			public <LoadAssetsRoutine>d__258(int <>1__state)
			{
			}

			[Token(Token = "0x6002296")]
			[Address(RVA = "0xECFC7C", Offset = "0xECFC7C", VA = "0xECFC7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002297")]
			[Address(RVA = "0xECFCEC", Offset = "0xECFCEC", VA = "0xECFCEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002298")]
			[Address(RVA = "0xECFC98", Offset = "0xECFC98", VA = "0xECFC98")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600229A")]
			[Address(RVA = "0xED2AB4", Offset = "0xED2AB4", VA = "0xED2AB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE20", Offset = "0x8AAE20")]
		private sealed class <>c__DisplayClass261_0<T> where T : Component
		{
			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> completeAction;

			[Token(Token = "0x600229C")]
			public <>c__DisplayClass261_0()
			{
			}

			[Token(Token = "0x600229D")]
			internal void <LoadAssetReferenceComponent>b__0(AsyncOperationHandle<GameObject> p)
			{
			}
		}

		[Token(Token = "0x2000565")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE30", Offset = "0x8AAE30")]
		private sealed class <>c__DisplayClass262_0<T> where T : UnityEngine.Object
		{
			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> completeAction;

			[Token(Token = "0x600229E")]
			public <>c__DisplayClass262_0()
			{
			}

			[Token(Token = "0x600229F")]
			internal void <LoadAssetLabel>b__0(AsyncOperationHandle<IList<T>> p)
			{
			}
		}

		[Token(Token = "0x2000566")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE40", Offset = "0x8AAE40")]
		private sealed class <>c__DisplayClass263_0<T> where T : Component
		{
			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> completeAction;

			[Token(Token = "0x60022A0")]
			public <>c__DisplayClass263_0()
			{
			}

			[Token(Token = "0x60022A1")]
			internal void <LoadAssetLabelComponent>b__0(AsyncOperationHandle<IList<GameObject>> p)
			{
			}
		}

		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE50", Offset = "0x8AAE50")]
		private sealed class <LoadAndUnloadQueuedAssets>d__264 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GlobalAssetLoader <>4__this;

			[Token(Token = "0x17000667")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022A5")]
				[Address(RVA = "0xECFC00", Offset = "0xECFC00", VA = "0xECFC00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000668")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A7")]
				[Address(RVA = "0xECFC48", Offset = "0xECFC48", VA = "0xECFC48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022A2")]
			[Address(RVA = "0xECF128", Offset = "0xECF128", VA = "0xECF128")]
			[DebuggerHidden]
			public <LoadAndUnloadQueuedAssets>d__264(int <>1__state)
			{
			}

			[Token(Token = "0x60022A3")]
			[Address(RVA = "0xECF154", Offset = "0xECF154", VA = "0xECF154", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022A4")]
			[Address(RVA = "0xECF158", Offset = "0xECF158", VA = "0xECF158", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022A6")]
			[Address(RVA = "0xECFC08", Offset = "0xECFC08", VA = "0xECFC08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C64AC", Offset = "0x8C64AC")]
		private MeshRenderer materialPreloadPrefab;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float materialPreloadFarPlaneDistance;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float materialPreloadSpacing;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2Int materialPreloadMaxBatchSize;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6528", Offset = "0x8C6528")]
		[SerializeField]
		private AssetReferenceGameObject scannablePassive;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssetReferenceGameObject scannableActive;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AssetReferenceGameObject scannableShop;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AssetReferenceGameObject scannableEvent;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AssetReferenceGameObject scannableEventPersistent;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AssetReferenceGameObject scannableInfo;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C65C4", Offset = "0x8C65C4")]
		[SerializeField]
		private AssetReferenceGameObject[] pickupsScrap;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AssetReferenceGameObject[] pickupsExperience;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AssetReferenceGameObject[] pickupsAbility;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AssetReferenceGameObject[] pickupsStoryKey;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AssetReferenceGameObject[] pickupsHealth;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AssetReferenceGameObject[] pickupsAmmo;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AssetReferenceGameObject[] pickupsAbilityChest;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AssetReferenceGameObject[] pickupsAbilityChestChoice;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6680", Offset = "0x8C6680")]
		[SerializeField]
		private AssetLabelReference sectorPalettes;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AssetLabelReference sectorTutorialSegments;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AssetReferenceSectorMapNodeType sectorMapDefaultNodeType;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AssetLabelReference sectorMapNodeTypes;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AssetLabelReference sectorMapNodeInfo;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C670C", Offset = "0x8C670C")]
		private AssetReferenceMaterial telegraphAttackMaterial;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private AssetReferenceMaterial telegraphDefendMaterial;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6768", Offset = "0x8C6768")]
		[SerializeField]
		private AssetReferenceGameObject shieldGraphic;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private AssetReferenceGameObject healthbar;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private AssetReferenceGameObject collisionVFX;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private AssetLabelReference passiveAbilities;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private AssetLabelReference threatLevels;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C67F4", Offset = "0x8C67F4")]
		[SerializeField]
		private TeleportAssets teleportDefault;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private TeleportAssets teleportGlitchEnemy;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private TeleportAssets teleportGlitchCreature;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6860", Offset = "0x8C6860")]
		private SfxTrigger buttonDownSfx;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private SfxTrigger buttonUpSfx;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private SfxTrigger buttonHoverSfx;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private SfxTrigger holdButtonDownSfx;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private SfxTrigger holdButtonSelectSfx;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private SfxTrigger collisionLightSfx;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private SfxTrigger collisionMediumSfx;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private SfxTrigger collisionHardSfx;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private SfxTrigger collisionOrganicSfx;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private SfxTrigger pickupAbilitySfx;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private SfxTrigger pickupAmmoSfx;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private SfxTrigger pickupStoryKeySfx;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private SfxTrigger pickupExperienceSfx;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private SfxTrigger pickupHealthSfx;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private SfxTrigger pickupShieldSfx;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private SfxTrigger pickupScrapSfx;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private SfxTrigger teleportInSfx;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private SfxTrigger teleportOutSfx;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C69BC", Offset = "0x8C69BC")]
		private GameObject <ScannablePassive>k__BackingField;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C69CC", Offset = "0x8C69CC")]
		private GameObject <ScannableActive>k__BackingField;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C69DC", Offset = "0x8C69DC")]
		private GameObject <ScannableShop>k__BackingField;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C69EC", Offset = "0x8C69EC")]
		private GameObject <ScannableEvent>k__BackingField;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C69FC", Offset = "0x8C69FC")]
		private GameObject <ScannableEventPersistent>k__BackingField;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6A0C", Offset = "0x8C6A0C")]
		private GameObject <ScannableInfo>k__BackingField;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6A1C", Offset = "0x8C6A1C")]
		private PickupGroup <PickupNone>k__BackingField;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6A2C", Offset = "0x8C6A2C")]
		private PickupGroup <PickupScrap>k__BackingField;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6A3C", Offset = "0x8C6A3C")]
		private PickupGroup <PickupExperience>k__BackingField;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6A4C", Offset = "0x8C6A4C")]
		private PickupGroup <PickupAbility>k__BackingField;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6A5C", Offset = "0x8C6A5C")]
		private PickupGroup <PickupStoryKey>k__BackingField;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6A6C", Offset = "0x8C6A6C")]
		private PickupGroup <PickupHealth>k__BackingField;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6A7C", Offset = "0x8C6A7C")]
		private PickupGroup <PickupAmmo>k__BackingField;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6A8C", Offset = "0x8C6A8C")]
		private PickupGroup <PickupAbilityChest>k__BackingField;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6A9C", Offset = "0x8C6A9C")]
		private PickupGroup <PickupAbilityChestChoice>k__BackingField;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6AAC", Offset = "0x8C6AAC")]
		private IReadOnlyList<SectorPalette> <SectorPalettes>k__BackingField;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6ABC", Offset = "0x8C6ABC")]
		private IReadOnlyList<SectorTutorialSegment> <SectorTutorialSegments>k__BackingField;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6ACC", Offset = "0x8C6ACC")]
		private SectorMapNodeSelector <SectorNodeSelector>k__BackingField;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6ADC", Offset = "0x8C6ADC")]
		private Material <TelegraphAttackMaterial>k__BackingField;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6AEC", Offset = "0x8C6AEC")]
		private Material <TelegraphDefendMaterial>k__BackingField;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6AFC", Offset = "0x8C6AFC")]
		private GameObject <ShieldGraphic>k__BackingField;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6B0C", Offset = "0x8C6B0C")]
		private GameObject <Healthbar>k__BackingField;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6B1C", Offset = "0x8C6B1C")]
		private GameObject <CollisionVFX>k__BackingField;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6B2C", Offset = "0x8C6B2C")]
		private TeleportGroup <TeleportDefault>k__BackingField;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6B3C", Offset = "0x8C6B3C")]
		private TeleportGroup <TeleportGlitchEnemy>k__BackingField;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6B4C", Offset = "0x8C6B4C")]
		private TeleportGroup <TeleportGlitchCreature>k__BackingField;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6B5C", Offset = "0x8C6B5C")]
		private IReadOnlyList<ShipAbilityPassive> <PassiveAbilities>k__BackingField;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6B6C", Offset = "0x8C6B6C")]
		private IReadOnlyDictionary<SectorTag, ShipAbilityPassive> <PassiveAbilitiesByTag>k__BackingField;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6B7C", Offset = "0x8C6B7C")]
		private IReadOnlyList<ShipAbilityPassiveThreat> <PassiveAbilityThreats>k__BackingField;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6B8C", Offset = "0x8C6B8C")]
		private IReadOnlyList<Game.Threats.ThreatLevel> <ThreatLevels>k__BackingField;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private bool loadCompleted;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private List<AssetReference> loadedGlobalAssets;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private List<AsyncOperationHandle> loadedGlobalHandles;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private List<AddressableAssetDependencies> assetDependencyUnloadQueue;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private List<AsyncOperationHandle> asyncOperationUnloadQueue;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private List<SectorObject> sectorObjectUnloadQueue;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private int unloadingCount;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private MaterialPreloadInstance[] materialPreloadInstances;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private AddressableAssetDependencies materialPreloadQueueAssetDependencies;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private Queue<PreloadedMaterial> materialPreloadQueueMaterials;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private HashSet<int> materialPreloadQueueMaterialHashCodes;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private bool materialPreloadQueuesOpen;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private List<Renderer> materialPreloadTempRenderers;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private List<Material> materialPreloadTempMaterials;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private List<IAddressableAssetPreload> materialPreloadTempDependencies;

		[Token(Token = "0x17000633")]
		public SfxTrigger ButtonDownSfx
		{
			[Token(Token = "0x60021ED")]
			[Address(RVA = "0xE302AC", Offset = "0xE302AC", VA = "0xE302AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000634")]
		public SfxTrigger ButtonUpSfx
		{
			[Token(Token = "0x60021EE")]
			[Address(RVA = "0xE302B4", Offset = "0xE302B4", VA = "0xE302B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000635")]
		public SfxTrigger ButtonHoverSfx
		{
			[Token(Token = "0x60021EF")]
			[Address(RVA = "0xE302BC", Offset = "0xE302BC", VA = "0xE302BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000636")]
		public SfxTrigger HoldButtonDownSfx
		{
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0xE302C4", Offset = "0xE302C4", VA = "0xE302C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000637")]
		public SfxTrigger HoldButtonSelectSfx
		{
			[Token(Token = "0x60021F1")]
			[Address(RVA = "0xE302CC", Offset = "0xE302CC", VA = "0xE302CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000638")]
		public SfxTrigger CollisionLightSfx
		{
			[Token(Token = "0x60021F2")]
			[Address(RVA = "0xE302D4", Offset = "0xE302D4", VA = "0xE302D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000639")]
		public SfxTrigger CollisionMediumSfx
		{
			[Token(Token = "0x60021F3")]
			[Address(RVA = "0xE302DC", Offset = "0xE302DC", VA = "0xE302DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063A")]
		public SfxTrigger CollisionHardSfx
		{
			[Token(Token = "0x60021F4")]
			[Address(RVA = "0xE302E4", Offset = "0xE302E4", VA = "0xE302E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063B")]
		public SfxTrigger CollisionOrganicSfx
		{
			[Token(Token = "0x60021F5")]
			[Address(RVA = "0xE302EC", Offset = "0xE302EC", VA = "0xE302EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063C")]
		public SfxTrigger PickupAbilitySfx
		{
			[Token(Token = "0x60021F6")]
			[Address(RVA = "0xE302F4", Offset = "0xE302F4", VA = "0xE302F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063D")]
		public SfxTrigger PickupAmmoSfx
		{
			[Token(Token = "0x60021F7")]
			[Address(RVA = "0xE302FC", Offset = "0xE302FC", VA = "0xE302FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063E")]
		public SfxTrigger PickupStoryKeySfx
		{
			[Token(Token = "0x60021F8")]
			[Address(RVA = "0xE30304", Offset = "0xE30304", VA = "0xE30304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063F")]
		public SfxTrigger PickupExperienceSfx
		{
			[Token(Token = "0x60021F9")]
			[Address(RVA = "0xE3030C", Offset = "0xE3030C", VA = "0xE3030C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000640")]
		public SfxTrigger PickupHealthSfx
		{
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0xE30314", Offset = "0xE30314", VA = "0xE30314")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000641")]
		public SfxTrigger PickupShieldSfx
		{
			[Token(Token = "0x60021FB")]
			[Address(RVA = "0xE3031C", Offset = "0xE3031C", VA = "0xE3031C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000642")]
		public SfxTrigger PickupScrapSfx
		{
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0xE30324", Offset = "0xE30324", VA = "0xE30324")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000643")]
		public SfxTrigger TeleportInSfx
		{
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0xE3032C", Offset = "0xE3032C", VA = "0xE3032C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000644")]
		public SfxTrigger TeleportOutSfx
		{
			[Token(Token = "0x60021FE")]
			[Address(RVA = "0xE30334", Offset = "0xE30334", VA = "0xE30334")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000645")]
		public static bool IsLoaded
		{
			[Token(Token = "0x60021FF")]
			[Address(RVA = "0xE3033C", Offset = "0xE3033C", VA = "0xE3033C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000646")]
		public GameObject ScannablePassive
		{
			[Token(Token = "0x6002201")]
			[Address(RVA = "0xE304C0", Offset = "0xE304C0", VA = "0xE304C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4BD8", Offset = "0x8D4BD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002202")]
			[Address(RVA = "0xE304C8", Offset = "0xE304C8", VA = "0xE304C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4BE8", Offset = "0x8D4BE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000647")]
		public GameObject ScannableActive
		{
			[Token(Token = "0x6002203")]
			[Address(RVA = "0xE304D8", Offset = "0xE304D8", VA = "0xE304D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4BF8", Offset = "0x8D4BF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002204")]
			[Address(RVA = "0xE304E0", Offset = "0xE304E0", VA = "0xE304E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4C08", Offset = "0x8D4C08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000648")]
		public GameObject ScannableShop
		{
			[Token(Token = "0x6002205")]
			[Address(RVA = "0xE304F0", Offset = "0xE304F0", VA = "0xE304F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4C18", Offset = "0x8D4C18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002206")]
			[Address(RVA = "0xE304F8", Offset = "0xE304F8", VA = "0xE304F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4C28", Offset = "0x8D4C28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000649")]
		public GameObject ScannableEvent
		{
			[Token(Token = "0x6002207")]
			[Address(RVA = "0xE30508", Offset = "0xE30508", VA = "0xE30508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4C38", Offset = "0x8D4C38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002208")]
			[Address(RVA = "0xE30510", Offset = "0xE30510", VA = "0xE30510")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4C48", Offset = "0x8D4C48")]
			private set
			{
			}
		}

		[Token(Token = "0x1700064A")]
		public GameObject ScannableEventPersistent
		{
			[Token(Token = "0x6002209")]
			[Address(RVA = "0xE30520", Offset = "0xE30520", VA = "0xE30520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4C58", Offset = "0x8D4C58")]
			get
			{
				return null;
			}
			[Token(Token = "0x600220A")]
			[Address(RVA = "0xE30528", Offset = "0xE30528", VA = "0xE30528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4C68", Offset = "0x8D4C68")]
			private set
			{
			}
		}

		[Token(Token = "0x1700064B")]
		public GameObject ScannableInfo
		{
			[Token(Token = "0x600220B")]
			[Address(RVA = "0xE30538", Offset = "0xE30538", VA = "0xE30538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4C78", Offset = "0x8D4C78")]
			get
			{
				return null;
			}
			[Token(Token = "0x600220C")]
			[Address(RVA = "0xE30540", Offset = "0xE30540", VA = "0xE30540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4C88", Offset = "0x8D4C88")]
			private set
			{
			}
		}

		[Token(Token = "0x1700064C")]
		public PickupGroup PickupNone
		{
			[Token(Token = "0x600220E")]
			[Address(RVA = "0xE305AC", Offset = "0xE305AC", VA = "0xE305AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4C98", Offset = "0x8D4C98")]
			get
			{
				return default(PickupGroup);
			}
			[Token(Token = "0x600220F")]
			[Address(RVA = "0xE305BC", Offset = "0xE305BC", VA = "0xE305BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4CA8", Offset = "0x8D4CA8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700064D")]
		public PickupGroup PickupScrap
		{
			[Token(Token = "0x6002210")]
			[Address(RVA = "0xE305D4", Offset = "0xE305D4", VA = "0xE305D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4CB8", Offset = "0x8D4CB8")]
			get
			{
				return default(PickupGroup);
			}
			[Token(Token = "0x6002211")]
			[Address(RVA = "0xE305E4", Offset = "0xE305E4", VA = "0xE305E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4CC8", Offset = "0x8D4CC8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700064E")]
		public PickupGroup PickupExperience
		{
			[Token(Token = "0x6002212")]
			[Address(RVA = "0xE305FC", Offset = "0xE305FC", VA = "0xE305FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4CD8", Offset = "0x8D4CD8")]
			get
			{
				return default(PickupGroup);
			}
			[Token(Token = "0x6002213")]
			[Address(RVA = "0xE3060C", Offset = "0xE3060C", VA = "0xE3060C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4CE8", Offset = "0x8D4CE8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700064F")]
		public PickupGroup PickupAbility
		{
			[Token(Token = "0x6002214")]
			[Address(RVA = "0xE30624", Offset = "0xE30624", VA = "0xE30624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4CF8", Offset = "0x8D4CF8")]
			get
			{
				return default(PickupGroup);
			}
			[Token(Token = "0x6002215")]
			[Address(RVA = "0xE30634", Offset = "0xE30634", VA = "0xE30634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4D08", Offset = "0x8D4D08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000650")]
		public PickupGroup PickupStoryKey
		{
			[Token(Token = "0x6002216")]
			[Address(RVA = "0xE3064C", Offset = "0xE3064C", VA = "0xE3064C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4D18", Offset = "0x8D4D18")]
			get
			{
				return default(PickupGroup);
			}
			[Token(Token = "0x6002217")]
			[Address(RVA = "0xE3065C", Offset = "0xE3065C", VA = "0xE3065C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4D28", Offset = "0x8D4D28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000651")]
		public PickupGroup PickupHealth
		{
			[Token(Token = "0x6002218")]
			[Address(RVA = "0xE30674", Offset = "0xE30674", VA = "0xE30674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4D38", Offset = "0x8D4D38")]
			get
			{
				return default(PickupGroup);
			}
			[Token(Token = "0x6002219")]
			[Address(RVA = "0xE30684", Offset = "0xE30684", VA = "0xE30684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4D48", Offset = "0x8D4D48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000652")]
		public PickupGroup PickupAmmo
		{
			[Token(Token = "0x600221A")]
			[Address(RVA = "0xE3069C", Offset = "0xE3069C", VA = "0xE3069C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4D58", Offset = "0x8D4D58")]
			get
			{
				return default(PickupGroup);
			}
			[Token(Token = "0x600221B")]
			[Address(RVA = "0xE306AC", Offset = "0xE306AC", VA = "0xE306AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4D68", Offset = "0x8D4D68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000653")]
		public PickupGroup PickupAbilityChest
		{
			[Token(Token = "0x600221C")]
			[Address(RVA = "0xE306C4", Offset = "0xE306C4", VA = "0xE306C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4D78", Offset = "0x8D4D78")]
			get
			{
				return default(PickupGroup);
			}
			[Token(Token = "0x600221D")]
			[Address(RVA = "0xE306D4", Offset = "0xE306D4", VA = "0xE306D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4D88", Offset = "0x8D4D88")]
			private set
			{
			}
		}

		[Token(Token = "0x17000654")]
		public PickupGroup PickupAbilityChestChoice
		{
			[Token(Token = "0x600221E")]
			[Address(RVA = "0xE306EC", Offset = "0xE306EC", VA = "0xE306EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4D98", Offset = "0x8D4D98")]
			get
			{
				return default(PickupGroup);
			}
			[Token(Token = "0x600221F")]
			[Address(RVA = "0xE306FC", Offset = "0xE306FC", VA = "0xE306FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4DA8", Offset = "0x8D4DA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000655")]
		public IReadOnlyList<SectorPalette> SectorPalettes
		{
			[Token(Token = "0x6002221")]
			[Address(RVA = "0xE307E0", Offset = "0xE307E0", VA = "0xE307E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4DB8", Offset = "0x8D4DB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002222")]
			[Address(RVA = "0xE307E8", Offset = "0xE307E8", VA = "0xE307E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4DC8", Offset = "0x8D4DC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000656")]
		public IReadOnlyList<SectorTutorialSegment> SectorTutorialSegments
		{
			[Token(Token = "0x6002223")]
			[Address(RVA = "0xE307F8", Offset = "0xE307F8", VA = "0xE307F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4DD8", Offset = "0x8D4DD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002224")]
			[Address(RVA = "0xE30800", Offset = "0xE30800", VA = "0xE30800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4DE8", Offset = "0x8D4DE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000657")]
		public SectorMapNodeSelector SectorNodeSelector
		{
			[Token(Token = "0x6002225")]
			[Address(RVA = "0xE30810", Offset = "0xE30810", VA = "0xE30810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4DF8", Offset = "0x8D4DF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002226")]
			[Address(RVA = "0xE30818", Offset = "0xE30818", VA = "0xE30818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4E08", Offset = "0x8D4E08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000658")]
		public Material TelegraphAttackMaterial
		{
			[Token(Token = "0x6002227")]
			[Address(RVA = "0xE30828", Offset = "0xE30828", VA = "0xE30828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4E18", Offset = "0x8D4E18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002228")]
			[Address(RVA = "0xE30830", Offset = "0xE30830", VA = "0xE30830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4E28", Offset = "0x8D4E28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000659")]
		public Material TelegraphDefendMaterial
		{
			[Token(Token = "0x6002229")]
			[Address(RVA = "0xE30840", Offset = "0xE30840", VA = "0xE30840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4E38", Offset = "0x8D4E38")]
			get
			{
				return null;
			}
			[Token(Token = "0x600222A")]
			[Address(RVA = "0xE30848", Offset = "0xE30848", VA = "0xE30848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4E48", Offset = "0x8D4E48")]
			private set
			{
			}
		}

		[Token(Token = "0x1700065A")]
		public GameObject ShieldGraphic
		{
			[Token(Token = "0x600222C")]
			[Address(RVA = "0xE30884", Offset = "0xE30884", VA = "0xE30884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4E58", Offset = "0x8D4E58")]
			get
			{
				return null;
			}
			[Token(Token = "0x600222D")]
			[Address(RVA = "0xE3088C", Offset = "0xE3088C", VA = "0xE3088C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4E68", Offset = "0x8D4E68")]
			private set
			{
			}
		}

		[Token(Token = "0x1700065B")]
		public GameObject Healthbar
		{
			[Token(Token = "0x600222E")]
			[Address(RVA = "0xE3089C", Offset = "0xE3089C", VA = "0xE3089C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4E78", Offset = "0x8D4E78")]
			get
			{
				return null;
			}
			[Token(Token = "0x600222F")]
			[Address(RVA = "0xE308A4", Offset = "0xE308A4", VA = "0xE308A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4E88", Offset = "0x8D4E88")]
			private set
			{
			}
		}

		[Token(Token = "0x1700065C")]
		public GameObject CollisionVFX
		{
			[Token(Token = "0x6002230")]
			[Address(RVA = "0xE308B4", Offset = "0xE308B4", VA = "0xE308B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4E98", Offset = "0x8D4E98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002231")]
			[Address(RVA = "0xE308BC", Offset = "0xE308BC", VA = "0xE308BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4EA8", Offset = "0x8D4EA8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700065D")]
		public TeleportGroup TeleportDefault
		{
			[Token(Token = "0x6002232")]
			[Address(RVA = "0xE308CC", Offset = "0xE308CC", VA = "0xE308CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4EB8", Offset = "0x8D4EB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002233")]
			[Address(RVA = "0xE308D4", Offset = "0xE308D4", VA = "0xE308D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4EC8", Offset = "0x8D4EC8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700065E")]
		public TeleportGroup TeleportGlitchEnemy
		{
			[Token(Token = "0x6002234")]
			[Address(RVA = "0xE308E4", Offset = "0xE308E4", VA = "0xE308E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4ED8", Offset = "0x8D4ED8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002235")]
			[Address(RVA = "0xE308EC", Offset = "0xE308EC", VA = "0xE308EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4EE8", Offset = "0x8D4EE8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700065F")]
		public TeleportGroup TeleportGlitchCreature
		{
			[Token(Token = "0x6002236")]
			[Address(RVA = "0xE308FC", Offset = "0xE308FC", VA = "0xE308FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4EF8", Offset = "0x8D4EF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002237")]
			[Address(RVA = "0xE30904", Offset = "0xE30904", VA = "0xE30904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4F08", Offset = "0x8D4F08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000660")]
		public IReadOnlyList<ShipAbilityPassive> PassiveAbilities
		{
			[Token(Token = "0x6002239")]
			[Address(RVA = "0xE30940", Offset = "0xE30940", VA = "0xE30940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4F18", Offset = "0x8D4F18")]
			get
			{
				return null;
			}
			[Token(Token = "0x600223A")]
			[Address(RVA = "0xE30948", Offset = "0xE30948", VA = "0xE30948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4F28", Offset = "0x8D4F28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000661")]
		public IReadOnlyDictionary<SectorTag, ShipAbilityPassive> PassiveAbilitiesByTag
		{
			[Token(Token = "0x600223B")]
			[Address(RVA = "0xE30958", Offset = "0xE30958", VA = "0xE30958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4F38", Offset = "0x8D4F38")]
			get
			{
				return null;
			}
			[Token(Token = "0x600223C")]
			[Address(RVA = "0xE30960", Offset = "0xE30960", VA = "0xE30960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4F48", Offset = "0x8D4F48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000662")]
		public IReadOnlyList<ShipAbilityPassiveThreat> PassiveAbilityThreats
		{
			[Token(Token = "0x600223D")]
			[Address(RVA = "0xE30970", Offset = "0xE30970", VA = "0xE30970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4F58", Offset = "0x8D4F58")]
			get
			{
				return null;
			}
			[Token(Token = "0x600223E")]
			[Address(RVA = "0xE30978", Offset = "0xE30978", VA = "0xE30978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4F68", Offset = "0x8D4F68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000663")]
		public IReadOnlyList<Game.Threats.ThreatLevel> ThreatLevels
		{
			[Token(Token = "0x600223F")]
			[Address(RVA = "0xE30988", Offset = "0xE30988", VA = "0xE30988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4F78", Offset = "0x8D4F78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002240")]
			[Address(RVA = "0xE30990", Offset = "0xE30990", VA = "0xE30990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4F88", Offset = "0x8D4F88")]
			private set
			{
			}
		}

		[Token(Token = "0x17000664")]
		public bool LoadCompleted
		{
			[Token(Token = "0x6002241")]
			[Address(RVA = "0xE309A0", Offset = "0xE309A0", VA = "0xE309A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xE30404", Offset = "0xE30404", VA = "0xE30404")]
		public static bool AssertLoaded(string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xE30550", Offset = "0xE30550", VA = "0xE30550")]
		public GameObject GetScannable(ScannableType type)
		{
			return null;
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xE30714", Offset = "0xE30714", VA = "0xE30714")]
		public PickupGroup GetPickup(PickupType type)
		{
			return default(PickupGroup);
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xE30858", Offset = "0xE30858", VA = "0xE30858")]
		public Material GetTelegraph(TelegraphType type)
		{
			return null;
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xE30914", Offset = "0xE30914", VA = "0xE30914")]
		public TeleportGroup GetTeleport(TeleportType type)
		{
			return null;
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xE309A8", Offset = "0xE309A8", VA = "0xE309A8")]
		public static void QueueOrUnloadAssets(AddressableAssetDependencies assetsToUnload)
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xE30AFC", Offset = "0xE30AFC", VA = "0xE30AFC")]
		public static void QueueOrUnloadAssets(AsyncOperationHandle assetsToUnload)
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xE30CE0", Offset = "0xE30CE0", VA = "0xE30CE0")]
		public static bool QueueOrUnloadAssets(SectorObject assetsToUnload, [System.Runtime.InteropServices.Optional] Action<AsyncOperationHandle> onUnloadAsync)
		{
			return default(bool);
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xE30E64", Offset = "0xE30E64", VA = "0xE30E64")]
		public static void QueuePreloadAddressableDependency(AddressableAssetDependency dependency)
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xE310F4", Offset = "0xE310F4", VA = "0xE310F4")]
		public static void QueuePreloadAsyncHandle(AsyncOperationHandle<GameObject> asyncHandle)
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xE31324", Offset = "0xE31324", VA = "0xE31324")]
		public static void QueuePreloadAsyncHandle(AsyncOperationHandle<IList<GameObject>> asyncHandle)
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xE317B0", Offset = "0xE317B0", VA = "0xE317B0")]
		public static bool QueuePreloadGameObject(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xE31E48", Offset = "0xE31E48", VA = "0xE31E48")]
		public static bool QueuePreloadMaterial(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xE30A98", Offset = "0xE30A98", VA = "0xE30A98")]
		public void QueueUnloadAssets(AddressableAssetDependencies assetsToUnload)
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xE30C50", Offset = "0xE30C50", VA = "0xE30C50")]
		public void QueueUnloadAssets(AsyncOperationHandle assetsToUnload)
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xE30E00", Offset = "0xE30E00", VA = "0xE30E00")]
		public void QueueUnloadAssets(SectorObject assetsToUnload)
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xE30F2C", Offset = "0xE30F2C", VA = "0xE30F2C")]
		public void TryQueuePreloadAddressableDependency(AddressableAssetDependency dependency)
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xE311DC", Offset = "0xE311DC", VA = "0xE311DC")]
		public void TryQueuePreloadAsyncHandle(AsyncOperationHandle<GameObject> asyncHandle)
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xE3140C", Offset = "0xE3140C", VA = "0xE3140C")]
		public void TryQueuePreloadAsyncHandle(AsyncOperationHandle<IList<GameObject>> asyncHandle)
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xE3187C", Offset = "0xE3187C", VA = "0xE3187C")]
		public bool TryQueuePreloadGameObject(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xE31F14", Offset = "0xE31F14", VA = "0xE31F14")]
		public bool TryQueuePreloadMaterial(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xE32064", Offset = "0xE32064", VA = "0xE32064")]
		private void CollectAddressableDependency(AssetReferenceT<GameObject> assetReference)
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xE320E4", Offset = "0xE320E4", VA = "0xE320E4")]
		private void CollectSectorObjectDependencies(SectorObject sectorObject, AsyncOperationHandle<GameObject> gameObject)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xE32114", Offset = "0xE32114", VA = "0xE32114", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xE324EC", Offset = "0xE324EC", VA = "0xE324EC", Slot = "6")]
		private YieldInstruction Game.IAsyncSystemSetup.OnSetupSystemAsync()
		{
			return null;
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xE32590", Offset = "0xE32590", VA = "0xE32590", Slot = "7")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xE3259C", Offset = "0xE3259C", VA = "0xE3259C", Slot = "12")]
		private YieldInstruction Game.Manager.IGameLoaderSubsystem.OnGameSetupAsync(SectorTagsInput tags)
		{
			return null;
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xE32640", Offset = "0xE32640", VA = "0xE32640")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xE32D08", Offset = "0xE32D08", VA = "0xE32D08", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xE32518", Offset = "0xE32518", VA = "0xE32518")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D4F98", Offset = "0x8D4F98")]
		private IEnumerator LoadAssetsRoutine()
		{
			return null;
		}

		[Token(Token = "0x600225B")]
		private AsyncOperationHandle<T> LoadAssetReference<T>(AssetReferenceT<T> reference, Action<AsyncOperationHandle<T>> completeAction) where T : UnityEngine.Object
		{
			return default(AsyncOperationHandle<T>);
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xE32DEC", Offset = "0xE32DEC", VA = "0xE32DEC")]
		private AsyncOperationHandle<GameObject> LoadAssetReferenceGameObject(AssetReferenceGameObject reference, Action<AsyncOperationHandle<GameObject>> completeAction)
		{
			return default(AsyncOperationHandle<GameObject>);
		}

		[Token(Token = "0x600225D")]
		private AsyncOperationHandle<GameObject> LoadAssetReferenceComponent<T>(AssetReferenceGameObject reference, Action<T> completeAction) where T : Component
		{
			return default(AsyncOperationHandle<GameObject>);
		}

		[Token(Token = "0x600225E")]
		private AsyncOperationHandle LoadAssetLabel<T>(AssetLabelReference reference, Action<T> completeAction) where T : UnityEngine.Object
		{
			return default(AsyncOperationHandle);
		}

		[Token(Token = "0x600225F")]
		private AsyncOperationHandle LoadAssetLabelComponent<T>(AssetLabelReference reference, Action<T> completeAction) where T : Component
		{
			return default(AsyncOperationHandle);
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xE325C8", Offset = "0xE325C8", VA = "0xE325C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D4FF8", Offset = "0x8D4FF8")]
		private IEnumerator LoadAndUnloadQueuedAssets()
		{
			return null;
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xE32418", Offset = "0xE32418", VA = "0xE32418")]
		private AddressableAssetDependencies CreateMaterialPreloadAssetDependencies()
		{
			return null;
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xE32EF0", Offset = "0xE32EF0", VA = "0xE32EF0")]
		private void SetMaterialPreloadInstanceEnabled(MaterialPreloadInstance instance, bool enabled)
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xE32FD4", Offset = "0xE32FD4", VA = "0xE32FD4")]
		private void OnUnloadAsyncOperationStart(AsyncOperationHandle handle)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xE330A0", Offset = "0xE330A0", VA = "0xE330A0")]
		private void OnUnloadAsyncOperationEnd(AsyncOperationHandle handle)
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xE330B0", Offset = "0xE330B0", VA = "0xE330B0", Slot = "8")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xE330B4", Offset = "0xE330B4", VA = "0xE330B4", Slot = "9")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadPrepare(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xE330B8", Offset = "0xE330B8", VA = "0xE330B8", Slot = "10")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadWindDown(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xE330BC", Offset = "0xE330BC", VA = "0xE330BC", Slot = "11")]
		private void Game.Manager.IGameLoaderSubsystem.OnUnloadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xE330C0", Offset = "0xE330C0", VA = "0xE330C0", Slot = "13")]
		private void Game.Manager.IGameLoaderSubsystem.OnGameStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xE330C4", Offset = "0xE330C4", VA = "0xE330C4")]
		public GlobalAssetLoader()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class MeshMaterialPreloader : MonoBehaviour
	{
		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshFilter meshFilter;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool preloadMesh;

		[Token(Token = "0x17000669")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x60022A8")]
			[Address(RVA = "0x2486B10", Offset = "0x2486B10", VA = "0x2486B10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700066A")]
		public bool PreloadMesh
		{
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0x2486B18", Offset = "0x2486B18", VA = "0x2486B18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x2486B20", Offset = "0x2486B20", VA = "0x2486B20")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x2486BDC", Offset = "0x2486BDC", VA = "0x2486BDC")]
		public MeshMaterialPreloader()
		{
		}
	}
}
namespace Game.Galaxy
{
	[Token(Token = "0x2000569")]
	public class GalaxyDebugClicker : MonoBehaviour
	{
		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xC5D744", Offset = "0xC5D744", VA = "0xC5D744")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xC5D97C", Offset = "0xC5D97C", VA = "0xC5D97C")]
		public GalaxyDebugClicker()
		{
		}
	}
	[Token(Token = "0x200056A")]
	public class GalaxyImageGenerator : MonoBehaviour
	{
		[Token(Token = "0x200056B")]
		private struct ConnectionCandidate
		{
			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GalaxyNode source;

			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GalaxyNode target;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float distanceSqr;

			[Token(Token = "0x60022BB")]
			[Address(RVA = "0xC78B88", Offset = "0xC78B88", VA = "0xC78B88")]
			public ConnectionCandidate(GalaxyNode source, GalaxyNode target, float distanceSqr)
			{
			}
		}

		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE60", Offset = "0x8AAE60")]
		private sealed class <GenerateAsyncEnumerator>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GalaxyImageGenerator <>4__this;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<bool> yieldCondition;

			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator <e>5__2;

			[Token(Token = "0x1700066C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022BF")]
				[Address(RVA = "0xC77BF0", Offset = "0xC77BF0", VA = "0xC77BF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022C1")]
				[Address(RVA = "0xC77C38", Offset = "0xC77C38", VA = "0xC77C38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022BC")]
			[Address(RVA = "0xC77520", Offset = "0xC77520", VA = "0xC77520")]
			[DebuggerHidden]
			public <GenerateAsyncEnumerator>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60022BD")]
			[Address(RVA = "0xC7754C", Offset = "0xC7754C", VA = "0xC7754C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022BE")]
			[Address(RVA = "0xC77550", Offset = "0xC77550", VA = "0xC77550", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022C0")]
			[Address(RVA = "0xC77BF8", Offset = "0xC77BF8", VA = "0xC77BF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE70", Offset = "0x8AAE70")]
		private sealed class <GenerateNodes>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GalaxyImageGenerator <>4__this;

			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<bool> yieldCondition;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <startPosition>5__2;

			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <endPosition>5__3;

			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private GalaxyNode <startNodeRef>5__4;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private GalaxyNode <endNodeRef>5__5;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <startDistanceSqr>5__6;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <endDistanceSqr>5__7;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <i>5__8;

			[Token(Token = "0x1700066E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022C5")]
				[Address(RVA = "0xC787C4", Offset = "0xC787C4", VA = "0xC787C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022C7")]
				[Address(RVA = "0xC7880C", Offset = "0xC7880C", VA = "0xC7880C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022C2")]
			[Address(RVA = "0xC78304", Offset = "0xC78304", VA = "0xC78304")]
			[DebuggerHidden]
			public <GenerateNodes>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60022C3")]
			[Address(RVA = "0xC78330", Offset = "0xC78330", VA = "0xC78330", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022C4")]
			[Address(RVA = "0xC78334", Offset = "0xC78334", VA = "0xC78334", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022C6")]
			[Address(RVA = "0xC787CC", Offset = "0xC787CC", VA = "0xC787CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE80", Offset = "0x8AAE80")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GalaxyNode, IEnumerable<GalaxyNode>> <>9__28_0;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GalaxyNode, GalaxyNode> <>9__28_1;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<GalaxyNode, GalaxyNode, GalaxyNode, float> <>9__28_2;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<GalaxyNode, IEnumerable<GalaxyNode>> <>9__29_1;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<GalaxyNode, GalaxyNode> <>9__29_2;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<GalaxyNode, GalaxyNode, GalaxyNode, float> <>9__29_3;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Comparison<Algorithms.Dijkstra.PathfindingResult<GalaxyNode>> <>9__29_0;

			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Comparison<ConnectionCandidate> <>9__29_4;

			[Token(Token = "0x60022C9")]
			[Address(RVA = "0xC77378", Offset = "0xC77378", VA = "0xC77378")]
			public <>c()
			{
			}

			[Token(Token = "0x60022CA")]
			[Address(RVA = "0xC77380", Offset = "0xC77380", VA = "0xC77380")]
			internal IEnumerable<GalaxyNode> <GenerateNodeConnections>b__28_0(GalaxyNode n)
			{
				return null;
			}

			[Token(Token = "0x60022CB")]
			[Address(RVA = "0xC77398", Offset = "0xC77398", VA = "0xC77398")]
			internal GalaxyNode <GenerateNodeConnections>b__28_1(GalaxyNode n)
			{
				return null;
			}

			[Token(Token = "0x60022CC")]
			[Address(RVA = "0xC773A0", Offset = "0xC773A0", VA = "0xC773A0")]
			internal float <GenerateNodeConnections>b__28_2(GalaxyNode n, GalaxyNode en, GalaxyNode e)
			{
				return default(float);
			}

			[Token(Token = "0x60022CD")]
			[Address(RVA = "0xC773A8", Offset = "0xC773A8", VA = "0xC773A8")]
			internal IEnumerable<GalaxyNode> <GenerateNodeIslandConnections>b__29_1(GalaxyNode n)
			{
				return null;
			}

			[Token(Token = "0x60022CE")]
			[Address(RVA = "0xC773C0", Offset = "0xC773C0", VA = "0xC773C0")]
			internal GalaxyNode <GenerateNodeIslandConnections>b__29_2(GalaxyNode n)
			{
				return null;
			}

			[Token(Token = "0x60022CF")]
			[Address(RVA = "0xC773C8", Offset = "0xC773C8", VA = "0xC773C8")]
			internal float <GenerateNodeIslandConnections>b__29_3(GalaxyNode n, GalaxyNode en, GalaxyNode e)
			{
				return default(float);
			}

			[Token(Token = "0x60022D0")]
			[Address(RVA = "0xC773D0", Offset = "0xC773D0", VA = "0xC773D0")]
			internal int <GenerateNodeIslandConnections>b__29_0(Algorithms.Dijkstra.PathfindingResult<GalaxyNode> a, Algorithms.Dijkstra.PathfindingResult<GalaxyNode> b)
			{
				return default(int);
			}

			[Token(Token = "0x60022D1")]
			[Address(RVA = "0xC77510", Offset = "0xC77510", VA = "0xC77510")]
			internal int <GenerateNodeIslandConnections>b__29_4(ConnectionCandidate a, ConnectionCandidate b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE90", Offset = "0x8AAE90")]
		private sealed class <GenerateNodeConnections>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> yieldCondition;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GalaxyImageGenerator <>4__this;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x17000670")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022D5")]
				[Address(RVA = "0xC782B4", Offset = "0xC782B4", VA = "0xC782B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000671")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022D7")]
				[Address(RVA = "0xC782FC", Offset = "0xC782FC", VA = "0xC782FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022D2")]
			[Address(RVA = "0xC77C40", Offset = "0xC77C40", VA = "0xC77C40")]
			[DebuggerHidden]
			public <GenerateNodeConnections>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60022D3")]
			[Address(RVA = "0xC77C6C", Offset = "0xC77C6C", VA = "0xC77C6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022D4")]
			[Address(RVA = "0xC77C70", Offset = "0xC77C70", VA = "0xC77C70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022D6")]
			[Address(RVA = "0xC782BC", Offset = "0xC782BC", VA = "0xC782BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAEA0", Offset = "0x8AAEA0")]
		private sealed class <SetupNodes>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> yieldCondition;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GalaxyImageGenerator <>4__this;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x17000672")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022DB")]
				[Address(RVA = "0xC78B38", Offset = "0xC78B38", VA = "0xC78B38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000673")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022DD")]
				[Address(RVA = "0xC78B80", Offset = "0xC78B80", VA = "0xC78B80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022D8")]
			[Address(RVA = "0xC78814", Offset = "0xC78814", VA = "0xC78814")]
			[DebuggerHidden]
			public <SetupNodes>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60022D9")]
			[Address(RVA = "0xC78840", Offset = "0xC78840", VA = "0xC78840", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022DA")]
			[Address(RVA = "0xC78844", Offset = "0xC78844", VA = "0xC78844", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022DC")]
			[Address(RVA = "0xC78B40", Offset = "0xC78B40", VA = "0xC78B40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6BBC", Offset = "0x8C6BBC")]
		private ImageMaskField maskField;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImageMaskField.Channel maskChannel;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6C18", Offset = "0x8C6C18")]
		[SerializeField]
		private GalaxyNode nodePrefab;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform nodeParent;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6C74", Offset = "0x8C6C74")]
		[SerializeField]
		private Vector2 nodeConnectionRadiusRange;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float nodeConnectionRadiusStep;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float nodeConnectionIslandTolerance;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GalaxyNode.NodeVisibilitySettings nodeVisibilitySettings;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6CF0", Offset = "0x8C6CF0")]
		[SerializeField]
		private Vector2 startEndTargetAngleRange;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector2 startEndAreaAngleRange;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float startTargetDistance;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float endTargetDistance;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6D6C", Offset = "0x8C6D6C")]
		private bool generateOnEnable;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool generating;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Vector3> nodePositions;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GalaxyNode> nodes;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Algorithms.Dijkstra.PathfindingResult<GalaxyNode>> nodeTrees;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<ConnectionCandidate> connectionCandidates;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GalaxyNode startNode;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GalaxyNode endNode;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Algorithms.Dijkstra.PathfindingResult<GalaxyNode> shortestEndTree;

		[Token(Token = "0x1700066B")]
		public IReadOnlyList<GalaxyNode> Nodes
		{
			[Token(Token = "0x60022AE")]
			[Address(RVA = "0xC5D984", Offset = "0xC5D984", VA = "0xC5D984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xC5D98C", Offset = "0xC5D98C", VA = "0xC5D98C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xC5D99C", Offset = "0xC5D99C", VA = "0xC5D99C")]
		public void Generate()
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xC5DA5C", Offset = "0xC5DA5C", VA = "0xC5DA5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D50F8", Offset = "0x8D50F8")]
		public IEnumerator GenerateAsyncEnumerator(Func<bool> yieldCondition)
		{
			return null;
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xC5DAF0", Offset = "0xC5DAF0", VA = "0xC5DAF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D5158", Offset = "0x8D5158")]
		private IEnumerator GenerateNodes(Func<bool> yieldCondition)
		{
			return null;
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xC5DB84", Offset = "0xC5DB84", VA = "0xC5DB84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D51B8", Offset = "0x8D51B8")]
		private IEnumerator GenerateNodeConnections(Func<bool> yieldCondition)
		{
			return null;
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xC5DC18", Offset = "0xC5DC18", VA = "0xC5DC18")]
		private bool GenerateNodeIslandConnections(Algorithms.Dijkstra.PathfindingResult<GalaxyNode> shortestEndTree)
		{
			return default(bool);
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xC5E97C", Offset = "0xC5E97C", VA = "0xC5E97C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D5218", Offset = "0x8D5218")]
		private IEnumerator SetupNodes(Func<bool> yieldCondition)
		{
			return null;
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xC5EA10", Offset = "0xC5EA10", VA = "0xC5EA10")]
		public void Clear()
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xC5EC04", Offset = "0xC5EC04", VA = "0xC5EC04")]
		public static void DestroySafe(GameObject obj)
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xC5E8A0", Offset = "0xC5E8A0", VA = "0xC5E8A0")]
		private static void AddNodeConnection(GalaxyNode a, GalaxyNode b)
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xC5EC68", Offset = "0xC5EC68", VA = "0xC5EC68")]
		private int AddNodesInRadius(Vector3 position, float radius, ICollection<GalaxyNode> nodes, [System.Runtime.InteropServices.Optional] GalaxyNode ignoreNode)
		{
			return default(int);
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xC5EF20", Offset = "0xC5EF20", VA = "0xC5EF20")]
		public GalaxyImageGenerator()
		{
		}
	}
	[Token(Token = "0x2000571")]
	public class GalaxyNode : MonoBehaviour, IVRButtonInteractableHighlightBaseColor, IUpdate
	{
		[Token(Token = "0x2000572")]
		public enum NodeState
		{
			[Token(Token = "0x4001F46")]
			UnvisitedHidden = 0,
			[Token(Token = "0x4001F47")]
			UnvisitedShown = 1,
			[Token(Token = "0x4001F48")]
			Visited = 50,
			[Token(Token = "0x4001F49")]
			Start = 100,
			[Token(Token = "0x4001F4A")]
			End = 200
		}

		[Serializable]
		[Token(Token = "0x2000573")]
		public class NodeVisibilitySettings
		{
			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hideUndiscoveredNodes;

			[Token(Token = "0x60022FB")]
			[Address(RVA = "0xC78EBC", Offset = "0xC78EBC", VA = "0xC78EBC")]
			public NodeVisibilitySettings()
			{
			}
		}

		[Token(Token = "0x2000574")]
		private struct ConnectionLine
		{
			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GalaxyNode target;

			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LineRenderer line;

			[Token(Token = "0x60022FC")]
			[Address(RVA = "0xC78E04", Offset = "0xC78E04", VA = "0xC78E04")]
			public ConnectionLine(GalaxyNode target, LineRenderer line)
			{
			}

			[Token(Token = "0x60022FD")]
			[Address(RVA = "0xC78E38", Offset = "0xC78E38", VA = "0xC78E38")]
			public void UpdatePosition(GalaxyNode source)
			{
			}
		}

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6DB8", Offset = "0x8C6DB8")]
		[SerializeField]
		private Renderer nodeRenderer;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider nodeCollider;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6E14", Offset = "0x8C6E14")]
		private LineRenderer connectionLinePrefab;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform connectionLineParent;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6E70", Offset = "0x8C6E70")]
		[SerializeField]
		private string materialColorProperty;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material defaultMaterial;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float defaultScale;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material startMaterial;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float startScale;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material endMaterial;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float endScale;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Material openMaterial;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float openScale;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Material visitedMaterial;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float visitedScale;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6F5C", Offset = "0x8C6F5C")]
		private float highlightScale;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float highlightSpeed;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AnimationCurve highlightCurve;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform trans;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6FC8", Offset = "0x8C6FC8")]
		private NodeState <State>k__BackingField;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6FD8", Offset = "0x8C6FD8")]
		private List<GalaxyNode> <Connections>k__BackingField;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6FE8", Offset = "0x8C6FE8")]
		private int <Depth>k__BackingField;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private NodeVisibilitySettings visibilitySettings;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<ConnectionLine> connectionLines;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 nodeRendererDefaultScale;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool highlighted;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float highlightedScale;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GalaxyNode pickedNode;

		[Token(Token = "0x17000674")]
		public Transform Transform
		{
			[Token(Token = "0x60022DE")]
			[Address(RVA = "0xE22870", Offset = "0xE22870", VA = "0xE22870")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000675")]
		public NodeState State
		{
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0xE22910", Offset = "0xE22910", VA = "0xE22910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D53B8", Offset = "0x8D53B8")]
			get
			{
				return default(NodeState);
			}
			[Token(Token = "0x60022E0")]
			[Address(RVA = "0xE22918", Offset = "0xE22918", VA = "0xE22918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D53C8", Offset = "0x8D53C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000676")]
		public List<GalaxyNode> Connections
		{
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0xE22920", Offset = "0xE22920", VA = "0xE22920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D53D8", Offset = "0x8D53D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022E2")]
			[Address(RVA = "0xE22928", Offset = "0xE22928", VA = "0xE22928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D53E8", Offset = "0x8D53E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000677")]
		public int Depth
		{
			[Token(Token = "0x60022E3")]
			[Address(RVA = "0xE22930", Offset = "0xE22930", VA = "0xE22930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D53F8", Offset = "0x8D53F8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60022E4")]
			[Address(RVA = "0xE22938", Offset = "0xE22938", VA = "0xE22938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5408", Offset = "0x8D5408")]
			set
			{
			}
		}

		[Token(Token = "0x17000678")]
		private Color Shared.VR.IVRButtonInteractableHighlightBaseColor.BaseColor
		{
			[Token(Token = "0x60022E5")]
			[Address(RVA = "0xE22940", Offset = "0xE22940", VA = "0xE22940", Slot = "4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xE22A34", Offset = "0xE22A34", VA = "0xE22A34", Slot = "5")]
		private void Shared.VR.IVRButtonInteractableHighlightBaseColor.Setup(VRButtonInteractableHighlight highlight)
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xE22A38", Offset = "0xE22A38", VA = "0xE22A38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xE22A7C", Offset = "0xE22A7C", VA = "0xE22A7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xE22CEC", Offset = "0xE22CEC", VA = "0xE22CEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xE22CF8", Offset = "0xE22CF8", VA = "0xE22CF8", Slot = "6")]
		private void Game.Manager.IUpdate.OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xE22DEC", Offset = "0xE22DEC", VA = "0xE22DEC")]
		private void Setup(NodeVisibilitySettings settings, NodeState state)
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xE22E1C", Offset = "0xE22E1C", VA = "0xE22E1C")]
		public void SetupUnvisitedHidden(NodeVisibilitySettings settings)
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xE23284", Offset = "0xE23284", VA = "0xE23284")]
		public void SetupStart(NodeVisibilitySettings settings)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xE23448", Offset = "0xE23448", VA = "0xE23448")]
		public void SetupEnd(NodeVisibilitySettings settings)
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xE234E8", Offset = "0xE234E8", VA = "0xE234E8")]
		public void SetShown(bool shown)
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xE23628", Offset = "0xE23628", VA = "0xE23628")]
		public void SetVisited()
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xE236E8", Offset = "0xE236E8", VA = "0xE236E8")]
		private void OpenConnections()
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xE2381C", Offset = "0xE2381C", VA = "0xE2381C")]
		private void CloseConnections()
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xE22F38", Offset = "0xE22F38", VA = "0xE22F38")]
		private void ShowConnections(bool visible, bool showAll)
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xE23934", Offset = "0xE23934", VA = "0xE23934")]
		private void HideConnections(bool all)
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xE22AC0", Offset = "0xE22AC0", VA = "0xE22AC0")]
		public void UpdateConnections()
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xE23304", Offset = "0xE23304", VA = "0xE23304")]
		public void PickNode()
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xE22EC0", Offset = "0xE22EC0", VA = "0xE22EC0")]
		private void SetMaterial(Material material, float scale)
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xE22BE4", Offset = "0xE22BE4", VA = "0xE22BE4")]
		private void SetHighlighted(bool highlighted, float scale = 1f)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xE23AD8", Offset = "0xE23AD8", VA = "0xE23AD8")]
		public GalaxyNode()
		{
		}
	}
	[Token(Token = "0x2000575")]
	public class GalaxyVisualization : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000576")]
		private class GalaxyVisualSettings
		{
			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enableGeneration;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ParticleSystem particleSystem;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float particleDensity;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve densityFade;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ImageMaskField.Channel maskChannel;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<ImageMaskField.PositionData> particlePositions;

			[Token(Token = "0x6002307")]
			[Address(RVA = "0xC796C4", Offset = "0xC796C4", VA = "0xC796C4")]
			public GalaxyVisualSettings()
			{
			}
		}

		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAEB0", Offset = "0x8AAEB0")]
		private sealed class <StartUpProcedure>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GalaxyVisualization <>4__this;

			[Token(Token = "0x17000679")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600230B")]
				[Address(RVA = "0xC79674", Offset = "0xC79674", VA = "0xC79674", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700067A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600230D")]
				[Address(RVA = "0xC796BC", Offset = "0xC796BC", VA = "0xC796BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002308")]
			[Address(RVA = "0xC79554", Offset = "0xC79554", VA = "0xC79554")]
			[DebuggerHidden]
			public <StartUpProcedure>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002309")]
			[Address(RVA = "0xC79580", Offset = "0xC79580", VA = "0xC79580", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600230A")]
			[Address(RVA = "0xC79584", Offset = "0xC79584", VA = "0xC79584", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600230C")]
			[Address(RVA = "0xC7967C", Offset = "0xC7967C", VA = "0xC7967C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAEC0", Offset = "0x8AAEC0")]
		private sealed class <Generate>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GalaxyVisualization <>4__this;

			[Token(Token = "0x1700067B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002311")]
				[Address(RVA = "0xC792CC", Offset = "0xC792CC", VA = "0xC792CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700067C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002313")]
				[Address(RVA = "0xC79314", Offset = "0xC79314", VA = "0xC79314", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600230E")]
			[Address(RVA = "0xC79010", Offset = "0xC79010", VA = "0xC79010")]
			[DebuggerHidden]
			public <Generate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600230F")]
			[Address(RVA = "0xC7903C", Offset = "0xC7903C", VA = "0xC7903C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002310")]
			[Address(RVA = "0xC79040", Offset = "0xC79040", VA = "0xC79040", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002312")]
			[Address(RVA = "0xC792D4", Offset = "0xC792D4", VA = "0xC792D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAED0", Offset = "0x8AAED0")]
		private sealed class <LerpValues>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool fadeIn;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GalaxyVisualization <>4__this;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <alphaValue1>5__2;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <alphaValue2>5__3;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <t>5__4;

			[Token(Token = "0x1700067D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002317")]
				[Address(RVA = "0xC79504", Offset = "0xC79504", VA = "0xC79504", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700067E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002319")]
				[Address(RVA = "0xC7954C", Offset = "0xC7954C", VA = "0xC7954C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002314")]
			[Address(RVA = "0xC7931C", Offset = "0xC7931C", VA = "0xC7931C")]
			[DebuggerHidden]
			public <LerpValues>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002315")]
			[Address(RVA = "0xC79348", Offset = "0xC79348", VA = "0xC79348", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002316")]
			[Address(RVA = "0xC7934C", Offset = "0xC7934C", VA = "0xC7934C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002318")]
			[Address(RVA = "0xC7950C", Offset = "0xC7950C", VA = "0xC7950C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200057A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAEE0", Offset = "0x8AAEE0")]
		private sealed class <ClearParticles>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GalaxyVisualization <>4__this;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GalaxyVisualSettings item;

			[Token(Token = "0x1700067F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600231D")]
				[Address(RVA = "0xC78FC0", Offset = "0xC78FC0", VA = "0xC78FC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000680")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600231F")]
				[Address(RVA = "0xC79008", Offset = "0xC79008", VA = "0xC79008", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600231A")]
			[Address(RVA = "0xC78EC4", Offset = "0xC78EC4", VA = "0xC78EC4")]
			[DebuggerHidden]
			public <ClearParticles>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600231B")]
			[Address(RVA = "0xC78EF0", Offset = "0xC78EF0", VA = "0xC78EF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600231C")]
			[Address(RVA = "0xC78EF4", Offset = "0xC78EF4", VA = "0xC78EF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600231E")]
			[Address(RVA = "0xC78FC8", Offset = "0xC78FC8", VA = "0xC78FC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GalaxyVisualSettings> visualSettings;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImageMaskField maskField;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string shaderVariable;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float fadeDuration;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve fadeCurve;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GalaxyImageGenerator galaxyGenerator;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xE23C14", Offset = "0xE23C14", VA = "0xE23C14")]
		private void Start()
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xE23C40", Offset = "0xE23C40", VA = "0xE23C40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D5418", Offset = "0x8D5418")]
		private IEnumerator StartUpProcedure()
		{
			return null;
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xE23CB8", Offset = "0xE23CB8", VA = "0xE23CB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D5478", Offset = "0x8D5478")]
		private IEnumerator Generate()
		{
			return null;
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xE23D30", Offset = "0xE23D30", VA = "0xE23D30")]
		private void GenerateParticles(ParticleSystem ps, List<ImageMaskField.PositionData> positions, AnimationCurve aCurve)
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0xE23F08", Offset = "0xE23F08", VA = "0xE23F08")]
		public void OnSpawn()
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xE24154", Offset = "0xE24154", VA = "0xE24154")]
		public void OnDespawn()
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xE240B8", Offset = "0xE240B8", VA = "0xE240B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D54D8", Offset = "0x8D54D8")]
		private IEnumerator LerpValues(float duration, bool fadeIn)
		{
			return null;
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xE24320", Offset = "0xE24320", VA = "0xE24320")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D5538", Offset = "0x8D5538")]
		private IEnumerator ClearParticles(GalaxyVisualSettings item)
		{
			return null;
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0xE243B4", Offset = "0xE243B4", VA = "0xE243B4")]
		public GalaxyVisualization()
		{
		}
	}
}
namespace Game.FinalBoss
{
	[Token(Token = "0x200057B")]
	public class FinalBossDestroyEngagementAction : DestroyEngagementAction
	{
		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SectorFinalBossLayer sectorFinalBossLayer;

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xC5B67C", Offset = "0xC5B67C", VA = "0xC5B67C", Slot = "4")]
		protected override List<(SpaceObject, float)> GetDestroyObjects(Faction playerFaction)
		{
			return null;
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xC5BA10", Offset = "0xC5BA10", VA = "0xC5BA10")]
		public FinalBossDestroyEngagementAction()
		{
		}
	}
	[Token(Token = "0x200057C")]
	public class FinalBossEntity : MonoBehaviourSingleton<FinalBossEntity>
	{
		[Serializable]
		[Token(Token = "0x200057D")]
		public class Scanners
		{
			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private VRScannableSpawner scanPosition;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private UnityEvent scanEnableEvents;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private UnityEvent scannedEvents;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private bool barkReminder;

			[Token(Token = "0x17000684")]
			public VRScannableSpawner ScanPosition
			{
				[Token(Token = "0x6002330")]
				[Address(RVA = "0xC7644C", Offset = "0xC7644C", VA = "0xC7644C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000685")]
			public UnityEvent ScanEnableEvents
			{
				[Token(Token = "0x6002331")]
				[Address(RVA = "0xC76454", Offset = "0xC76454", VA = "0xC76454")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000686")]
			public UnityEvent ScannedEvents
			{
				[Token(Token = "0x6002332")]
				[Address(RVA = "0xC7645C", Offset = "0xC7645C", VA = "0xC7645C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000687")]
			public bool BarkReminder
			{
				[Token(Token = "0x6002333")]
				[Address(RVA = "0xC76464", Offset = "0xC76464", VA = "0xC76464")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002334")]
			[Address(RVA = "0xC7646C", Offset = "0xC7646C", VA = "0xC7646C")]
			public Scanners()
			{
			}
		}

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Scanners[] scannerPointInfo;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7078", Offset = "0x8C7078")]
		[SerializeField]
		private Transform audioPosition;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C70C4", Offset = "0x8C70C4")]
		[SerializeField]
		private Transform spinTransform;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 spinAxis;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float spinSpeedStart;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float spinSpeedAcceleration;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float spinSpeedDeceleration;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7150", Offset = "0x8C7150")]
		[SerializeField]
		private Transform heartMoveStartPosition;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform heartMoveEndPosition;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float currentSpinSpeed;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float targetSpinSpeed;

		[Token(Token = "0x17000681")]
		public Transform AudioPosition
		{
			[Token(Token = "0x6002322")]
			[Address(RVA = "0xC5BA18", Offset = "0xC5BA18", VA = "0xC5BA18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000682")]
		public Transform HeartMoveStartPosition
		{
			[Token(Token = "0x6002324")]
			[Address(RVA = "0xC5BA7C", Offset = "0xC5BA7C", VA = "0xC5BA7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000683")]
		public Transform HeartMoveEndPosition
		{
			[Token(Token = "0x6002325")]
			[Address(RVA = "0xC5BA84", Offset = "0xC5BA84", VA = "0xC5BA84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400009C")]
		public event Action OnHeartDeath
		{
			[Token(Token = "0x6002326")]
			[Address(RVA = "0xC5BA8C", Offset = "0xC5BA8C", VA = "0xC5BA8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D56D8", Offset = "0x8D56D8")]
			add
			{
			}
			[Token(Token = "0x6002327")]
			[Address(RVA = "0xC5BB2C", Offset = "0xC5BB2C", VA = "0xC5BB2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D56E8", Offset = "0x8D56E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xC5BA20", Offset = "0xC5BA20", VA = "0xC5BA20")]
		public Scanners ScanPosition(int index)
		{
			return null;
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xC5BBCC", Offset = "0xC5BBCC", VA = "0xC5BBCC")]
		public void SetSpinSpeed(float speed)
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xC5BBD4", Offset = "0xC5BBD4", VA = "0xC5BBD4")]
		public void TriggerScannerEnabledUnityEvents(int index)
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xC5BC04", Offset = "0xC5BC04", VA = "0xC5BC04")]
		public void TriggerScannedUnityEvents(int index)
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xC5BC34", Offset = "0xC5BC34", VA = "0xC5BC34")]
		public void TriggerOnHeartDeath()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xC5BC48", Offset = "0xC5BC48", VA = "0xC5BC48")]
		protected void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xC5BF34", Offset = "0xC5BF34", VA = "0xC5BF34", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0xC5BF8C", Offset = "0xC5BF8C", VA = "0xC5BF8C")]
		protected void Update()
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xC5C030", Offset = "0xC5C030", VA = "0xC5C030")]
		public FinalBossEntity()
		{
		}
	}
	[Token(Token = "0x200057E")]
	public class FinalBossHeartAttackReminder : GameMonoBehaviour
	{
		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float remindInterval;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool triggerOnce;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C721C", Offset = "0x8C721C")]
		private UnityEvent onReminder;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float remindTimer;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool runRemindTimer;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool hasBeenTriggered;

		[Token(Token = "0x17000688")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x6002335")]
			[Address(RVA = "0xC5C0B8", Offset = "0xC5C0B8", VA = "0xC5C0B8", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0xC5C0C0", Offset = "0xC5C0C0", VA = "0xC5C0C0")]
		public void SetRemindTimerActive(bool active)
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0xC5C0FC", Offset = "0xC5C0FC", VA = "0xC5C0FC")]
		public void OnDamageTaken(SpaceObject spaceObject, IDamagable.DamageInfo damageInfo)
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0xC5C1E0", Offset = "0xC5C1E0", VA = "0xC5C1E0", Slot = "32")]
		protected override void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0xC5C250", Offset = "0xC5C250", VA = "0xC5C250")]
		public FinalBossHeartAttackReminder()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public class FinalBossScanReminder : GameMonoBehaviour
	{
		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7268", Offset = "0x8C7268")]
		private float neverScannedRemindInterval;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float abortScannedRemindInterval;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C72C4", Offset = "0x8C72C4")]
		private UnityEvent onReminder;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VRScannableBase scannable;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float remindTimer;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool everTargeted;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool runRemindTimer;

		[Token(Token = "0x17000689")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x600233A")]
			[Address(RVA = "0xC5C268", Offset = "0xC5C268", VA = "0xC5C268", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xC5C270", Offset = "0xC5C270", VA = "0xC5C270")]
		public void Setup(VRScannableBase scannable)
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xC5C35C", Offset = "0xC5C35C", VA = "0xC5C35C", Slot = "32")]
		protected override void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0xC5C47C", Offset = "0xC5C47C", VA = "0xC5C47C")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0xC5C500", Offset = "0xC5C500", VA = "0xC5C500")]
		private void UnregisterScannable()
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0xC5C600", Offset = "0xC5C600", VA = "0xC5C600")]
		private void OnTargeted()
		{
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0xC5C460", Offset = "0xC5C460", VA = "0xC5C460")]
		private float GetRemindTimeInSeconds()
		{
			return default(float);
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xC5C60C", Offset = "0xC5C60C", VA = "0xC5C60C")]
		public FinalBossScanReminder()
		{
		}
	}
	[Token(Token = "0x2000580")]
	public class SectorFinalBossLayer : SectorLayer, IGameStart
	{
		[Serializable]
		[Token(Token = "0x2000581")]
		public class FinalBossPhase
		{
			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEventDelayChain eventDelayChain;

			[Token(Token = "0x6002361")]
			[Address(RVA = "0xD79CD8", Offset = "0xD79CD8", VA = "0xD79CD8")]
			public FinalBossPhase()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000582")]
		public class FinalBossEngagement
		{
			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string engagementName;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SectorEngagementSlotLayer engagementSlotLayer;

			[Token(Token = "0x6002362")]
			[Address(RVA = "0xD79CD0", Offset = "0xD79CD0", VA = "0xD79CD0")]
			public FinalBossEngagement()
			{
			}
		}

		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAEF0", Offset = "0x8AAEF0")]
		private sealed class <SpawnHeartAnimation>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SectorFinalBossLayer <>4__this;

			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AiSpaceShip heart;

			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform heartStart;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform heartEnd;

			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__2;

			[Token(Token = "0x1700068B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002366")]
				[Address(RVA = "0xD79C80", Offset = "0xD79C80", VA = "0xD79C80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700068C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002368")]
				[Address(RVA = "0xD79CC8", Offset = "0xD79CC8", VA = "0xD79CC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002363")]
			[Address(RVA = "0xD79854", Offset = "0xD79854", VA = "0xD79854")]
			[DebuggerHidden]
			public <SpawnHeartAnimation>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x6002364")]
			[Address(RVA = "0xD79880", Offset = "0xD79880", VA = "0xD79880", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002365")]
			[Address(RVA = "0xD79884", Offset = "0xD79884", VA = "0xD79884", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002367")]
			[Address(RVA = "0xD79C88", Offset = "0xD79C88", VA = "0xD79C88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAF00", Offset = "0x8AAF00")]
		private sealed class <SetObjectiveClearedRoutine>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700068D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600236C")]
				[Address(RVA = "0xD79804", Offset = "0xD79804", VA = "0xD79804", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700068E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600236E")]
				[Address(RVA = "0xD7984C", Offset = "0xD7984C", VA = "0xD7984C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002369")]
			[Address(RVA = "0xD7940C", Offset = "0xD7940C", VA = "0xD7940C")]
			[DebuggerHidden]
			public <SetObjectiveClearedRoutine>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x600236A")]
			[Address(RVA = "0xD79438", Offset = "0xD79438", VA = "0xD79438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600236B")]
			[Address(RVA = "0xD7943C", Offset = "0xD7943C", VA = "0xD7943C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600236D")]
			[Address(RVA = "0xD7980C", Offset = "0xD7980C", VA = "0xD7980C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7310", Offset = "0x8C7310")]
		private FinalBossPhase[] phases;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private FinalBossEngagement[] engagements;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C736C", Offset = "0x8C736C")]
		private AssetReferenceGameObject heartAssetReference;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform heartTargetPosition;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AnimationCurve heartMoveCurve;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float heartMoveTime;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float heartPauseTime;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SfxTrigger heartSpawnInVistaSfx;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SfxTrigger heartSpawnInPlayAreaSfx;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7418", Offset = "0x8C7418")]
		private BuffObject[] defectBuffs;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7464", Offset = "0x8C7464")]
		private AssetReferenceGameObject creatureAssetReference;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SectorTagCollectionHierarchy creatureSlotTags;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private SfxTrigger creatureSpawnSfx;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C74D0", Offset = "0x8C74D0")]
		private Vector2 spaceObjectDestroyDelay;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int currentPhaseIndex;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int scanPositionIndex;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private AsyncOperationHandle<GameObject> heartHandle;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GameObject heartPrefab;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private AiSpaceShip heartInstance;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private AsyncFlag heartDisableSteeringFlag;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private AsyncFlag heartDisableHeadingFlag;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private AsyncOperationHandle<GameObject> creatureHandle;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GameObject creaturePrefab;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<AiSpaceShip> creatureInstances;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<SectorSlot> creatureSlots;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private FinalBossEngagement currentEngagement;

		[Token(Token = "0x1700068A")]
		public IReadOnlyList<AiSpaceShip> CreatureInstances
		{
			[Token(Token = "0x6002342")]
			[Address(RVA = "0xD833DC", Offset = "0xD833DC", VA = "0xD833DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xD833E4", Offset = "0xD833E4", VA = "0xD833E4")]
		protected void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xD83554", Offset = "0xD83554", VA = "0xD83554")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xD83610", Offset = "0xD83610", VA = "0xD83610")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0xD83668", Offset = "0xD83668", VA = "0xD83668", Slot = "5")]
		protected override void LoadLayerAction(LoadParameters loadParams, LoadResult loadResult, ContinueLoadLayerAction continueAction)
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xD8396C", Offset = "0xD8396C", VA = "0xD8396C", Slot = "6")]
		protected override void UnloadLayerAction(UnloadParameters unloadParams, LoadResult loadResult, bool isQuitting, Action continueAction)
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xD8399C", Offset = "0xD8399C", VA = "0xD8399C")]
		private void ReleaseAssetHandles(Action continueAction)
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xD83BEC", Offset = "0xD83BEC", VA = "0xD83BEC", Slot = "8")]
		public void OnGameStart()
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xD83F44", Offset = "0xD83F44", VA = "0xD83F44")]
		public void StartNextPhase()
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xD83EA8", Offset = "0xD83EA8", VA = "0xD83EA8")]
		public void StartPhase(int index)
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xD83F50", Offset = "0xD83F50", VA = "0xD83F50")]
		private bool TryGetCurrentPhase(out FinalBossPhase phase)
		{
			return default(bool);
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xD838DC", Offset = "0xD838DC", VA = "0xD838DC")]
		private void SetupEngagements()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xD83CC0", Offset = "0xD83CC0", VA = "0xD83CC0")]
		private void SetupAudioTriggerPositions()
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xD8400C", Offset = "0xD8400C", VA = "0xD8400C")]
		public void PlayScannedVisualEvents(int eventIndex)
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0xD840D8", Offset = "0xD840D8", VA = "0xD840D8")]
		public void PlayScannerEnabledVisualEvents(int eventIndex)
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0xD841A4", Offset = "0xD841A4", VA = "0xD841A4")]
		public void SetSpinSpeed(float speed)
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0xD84268", Offset = "0xD84268", VA = "0xD84268")]
		public void AddSceneTag(string tag)
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0xD843CC", Offset = "0xD843CC", VA = "0xD843CC")]
		public void RemoveSceneTag(string tag)
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xD84530", Offset = "0xD84530", VA = "0xD84530")]
		public void StopEngagement()
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0xD84584", Offset = "0xD84584", VA = "0xD84584")]
		public void StartEngagement(int index)
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xD84618", Offset = "0xD84618", VA = "0xD84618")]
		public void CreateNextPhaseScannable()
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0xD847F4", Offset = "0xD847F4", VA = "0xD847F4")]
		public void GivePlayerDefect(int index)
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0xD84A70", Offset = "0xD84A70", VA = "0xD84A70")]
		public void SpawnCreature()
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0xD85688", Offset = "0xD85688", VA = "0xD85688")]
		public void SpawnHeart()
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xD85AE0", Offset = "0xD85AE0", VA = "0xD85AE0")]
		private void OnHeartDeath(SpaceObject heartObject)
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0xD85A1C", Offset = "0xD85A1C", VA = "0xD85A1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D56F8", Offset = "0x8D56F8")]
		private IEnumerator SpawnHeartAnimation(AiSpaceShip heart, Transform heartStart, Transform heartEnd)
		{
			return null;
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xD85BAC", Offset = "0xD85BAC", VA = "0xD85BAC")]
		public void SetObjectiveCleared()
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xD85BD8", Offset = "0xD85BD8", VA = "0xD85BD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D5758", Offset = "0x8D5758")]
		private IEnumerator SetObjectiveClearedRoutine()
		{
			return null;
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xD85C34", Offset = "0xD85C34", VA = "0xD85C34")]
		public SectorFinalBossLayer()
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xD85E00", Offset = "0xD85E00", VA = "0xD85E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D57B8", Offset = "0x8D57B8")]
		private void <LoadLayerAction>b__33_0(AsyncOperationHandle<GameObject> prefabGameObject)
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xD85E74", Offset = "0xD85E74", VA = "0xD85E74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D57C8", Offset = "0x8D57C8")]
		private void <LoadLayerAction>b__33_1(AsyncOperationHandle<GameObject> prefabGameObject)
		{
		}
	}
}
namespace Game.Factions
{
	[Token(Token = "0x2000585")]
	public enum FactionAffinity
	{
		[Token(Token = "0x4001FB2")]
		Neutral,
		[Token(Token = "0x4001FB3")]
		Friendly,
		[Token(Token = "0x4001FB4")]
		Hostile
	}
	[Token(Token = "0x2000586")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AAF10", Offset = "0x8AAF10")]
	public class Faction : ScriptableObject
	{
		[Token(Token = "0x2000587")]
		public delegate void FactionAffinityChange(string factionName, FactionAffinity previousAffinity, FactionAffinity newAffinity);

		[Token(Token = "0x2000588")]
		private struct FactionOverrideAffinity
		{
			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FactionAffinity defaultAffinity;

			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FactionAffinity overrideAffinity;

			[Token(Token = "0x600237D")]
			[Address(RVA = "0xC76444", Offset = "0xC76444", VA = "0xC76444")]
			public FactionOverrideAffinity(FactionAffinity defaultAffinity, FactionAffinity overrideAffinity)
			{
			}
		}

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FactionAffinity playerAffinity;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, FactionOverrideAffinity> OverridePlayerAffinity;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<string> FactionNameList;

		[Token(Token = "0x1700068F")]
		public FactionAffinity PlayerAffinity
		{
			[Token(Token = "0x600236F")]
			[Address(RVA = "0xC5AC2C", Offset = "0xC5AC2C", VA = "0xC5AC2C")]
			get
			{
				return default(FactionAffinity);
			}
		}

		[Token(Token = "0x1400009D")]
		public static event FactionAffinityChange OnPlayerAffinityChange
		{
			[Token(Token = "0x6002370")]
			[Address(RVA = "0xC5ACEC", Offset = "0xC5ACEC", VA = "0xC5ACEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5878", Offset = "0x8D5878")]
			add
			{
			}
			[Token(Token = "0x6002371")]
			[Address(RVA = "0xC5ADE0", Offset = "0xC5ADE0", VA = "0xC5ADE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5888", Offset = "0x8D5888")]
			remove
			{
			}
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xC5AED4", Offset = "0xC5AED4", VA = "0xC5AED4")]
		public static void SetOverridePlayerAffinity(Faction faction, FactionAffinity affinity)
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xC5B038", Offset = "0xC5B038", VA = "0xC5B038")]
		public static void ClearOverridePlayerAffinity(Faction faction)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xC5B0AC", Offset = "0xC5B0AC", VA = "0xC5B0AC")]
		private static void ClearOverridePlayerAffinity(string factionName)
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xC5B1C8", Offset = "0xC5B1C8", VA = "0xC5B1C8")]
		public static void ClearOverridePlayerAffinityAll()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xC5B550", Offset = "0xC5B550", VA = "0xC5B550")]
		public bool Equals(Faction other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xC5B558", Offset = "0xC5B558", VA = "0xC5B558")]
		public Faction()
		{
		}
	}
	[Token(Token = "0x2000589")]
	public static class Compare
	{
		[Token(Token = "0x600237E")]
		[Address(RVA = "0xFE8C8C", Offset = "0xFE8C8C", VA = "0xFE8C8C")]
		public static bool Equals(Faction a, Faction b)
		{
			return default(bool);
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xFE8D7C", Offset = "0xFE8D7C", VA = "0xFE8D7C")]
		public static bool Equals(Faction a, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xFE8E28", Offset = "0xFE8E28", VA = "0xFE8E28")]
		public static bool IsNeutral(IDamagable me, IDamagable other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xFE8F58", Offset = "0xFE8F58", VA = "0xFE8F58")]
		public static bool IsNeutral(Faction me, Faction other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xFE9034", Offset = "0xFE9034", VA = "0xFE9034")]
		public static bool IsFriendly(IDamagable me, IDamagable other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xFE917C", Offset = "0xFE917C", VA = "0xFE917C")]
		public static bool IsFriendly(Faction me, Faction other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xFE91B0", Offset = "0xFE91B0", VA = "0xFE91B0")]
		public static bool IsHostile(IDamagable me, IDamagable other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xFE92E0", Offset = "0xFE92E0", VA = "0xFE92E0")]
		public static bool IsHostile(Faction me, Faction other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xFE8FA4", Offset = "0xFE8FA4", VA = "0xFE8FA4")]
		public static FactionAffinity GetPlayerAffinity(Faction faction)
		{
			return default(FactionAffinity);
		}
	}
}
namespace Game.DataArchive
{
	[Token(Token = "0x200058A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AAF7C", Offset = "0x8AAF7C")]
	public class ArchiveDataStatRanks : ScriptableObject
	{
		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StatsEnum stat;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] ranks;

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xEF00F0", Offset = "0xEF00F0", VA = "0xEF00F0")]
		public ArchiveDataStatRanks()
		{
		}
	}
	[Token(Token = "0x200058B")]
	public class ArchiveDataStatRanksHelper : MonoBehaviourSingleton<ArchiveDataStatRanksHelper>
	{
		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ArchiveDataStatRanks[] archiveDataStatRanks;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<StatsEnum, ArchiveDataStatRanks> statRanksByStat;

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xEF00F8", Offset = "0xEF00F8", VA = "0xEF00F8")]
		private void TrySetupStatRanksByStatMap()
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xEF0224", Offset = "0xEF0224", VA = "0xEF0224")]
		private new void Awake()
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xEF0278", Offset = "0xEF0278", VA = "0xEF0278")]
		public ArchiveDataStatRanks GetStatRanksByStat(StatsEnum stat)
		{
			return null;
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xEF02F4", Offset = "0xEF02F4", VA = "0xEF02F4")]
		public ArchiveDataStatRanksHelper()
		{
		}
	}
}
namespace Game.DailyJourney
{
	[Token(Token = "0x200058C")]
	public class DailyJourneyBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BuffObject[] defaultStartBuffs;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool applyTechTreeBuffs;

		[Token(Token = "0x17000690")]
		public List<BuffObject> DefaultStartBuffs
		{
			[Token(Token = "0x600238C")]
			[Address(RVA = "0xC475D4", Offset = "0xC475D4", VA = "0xC475D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000691")]
		public bool ApplyTechTreeBuffs
		{
			[Token(Token = "0x600238D")]
			[Address(RVA = "0xC4764C", Offset = "0xC4764C", VA = "0xC4764C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xC47654", Offset = "0xC47654", VA = "0xC47654")]
		public void StartDailyJourneyRun(DailyJourneyInfo dailyJourneyInfo)
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0xC481BC", Offset = "0xC481BC", VA = "0xC481BC")]
		private void OnDailyJourneyRunEnded(bool success)
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xC48304", Offset = "0xC48304", VA = "0xC48304")]
		public DailyJourneyBehaviour()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public struct DailyJourneyInfo
	{
		[Token(Token = "0x200058E")]
		public class Modifier
		{
			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C75FC", Offset = "0x8C75FC")]
			private string <AbilityTag>k__BackingField;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C760C", Offset = "0x8C760C")]
			private int <Level>k__BackingField;

			[Token(Token = "0x1700069C")]
			public string AbilityTag
			{
				[Token(Token = "0x60023A4")]
				[Address(RVA = "0xC6D23C", Offset = "0xC6D23C", VA = "0xC6D23C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B20", Offset = "0x8D5B20")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023A5")]
				[Address(RVA = "0xC6D244", Offset = "0xC6D244", VA = "0xC6D244")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B30", Offset = "0x8D5B30")]
				set
				{
				}
			}

			[Token(Token = "0x1700069D")]
			public int Level
			{
				[Token(Token = "0x60023A6")]
				[Address(RVA = "0xC6D24C", Offset = "0xC6D24C", VA = "0xC6D24C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B40", Offset = "0x8D5B40")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60023A7")]
				[Address(RVA = "0xC6D254", Offset = "0xC6D254", VA = "0xC6D254")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B50", Offset = "0x8D5B50")]
				set
				{
				}
			}

			[Token(Token = "0x60023A8")]
			[Address(RVA = "0xC6D25C", Offset = "0xC6D25C", VA = "0xC6D25C")]
			public Modifier()
			{
			}
		}

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C756C", Offset = "0x8C756C")]
		private string <Id>k__BackingField;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C757C", Offset = "0x8C757C")]
		private string <Seed>k__BackingField;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C758C", Offset = "0x8C758C")]
		private string <Ship>k__BackingField;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C759C", Offset = "0x8C759C")]
		private IReadOnlyList<Modifier> <Modifiers>k__BackingField;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C75AC", Offset = "0x8C75AC")]
		private DateTime <StartTimeUtc>k__BackingField;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C75BC", Offset = "0x8C75BC")]
		private DateTime <EndTimeUtc>k__BackingField;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C75CC", Offset = "0x8C75CC")]
		private DateTime <ServerTimeUtc>k__BackingField;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C75DC", Offset = "0x8C75DC")]
		private string <Leaderboard>k__BackingField;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C75EC", Offset = "0x8C75EC")]
		private DateTime <ClientSideEndTimeUtc>k__BackingField;

		[Token(Token = "0x17000692")]
		public string Id
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0xC49058", Offset = "0xC49058", VA = "0xC49058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5898", Offset = "0x8D5898")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002392")]
			[Address(RVA = "0xC49060", Offset = "0xC49060", VA = "0xC49060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D58D0", Offset = "0x8D58D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000693")]
		public string Seed
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0xC49068", Offset = "0xC49068", VA = "0xC49068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D58E0", Offset = "0x8D58E0")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002394")]
			[Address(RVA = "0xC49070", Offset = "0xC49070", VA = "0xC49070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5918", Offset = "0x8D5918")]
			set
			{
			}
		}

		[Token(Token = "0x17000694")]
		public string Ship
		{
			[Token(Token = "0x6002395")]
			[Address(RVA = "0xC49078", Offset = "0xC49078", VA = "0xC49078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5928", Offset = "0x8D5928")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002396")]
			[Address(RVA = "0xC49080", Offset = "0xC49080", VA = "0xC49080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5960", Offset = "0x8D5960")]
			set
			{
			}
		}

		[Token(Token = "0x17000695")]
		public IReadOnlyList<Modifier> Modifiers
		{
			[Token(Token = "0x6002397")]
			[Address(RVA = "0xC49088", Offset = "0xC49088", VA = "0xC49088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5970", Offset = "0x8D5970")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002398")]
			[Address(RVA = "0xC49090", Offset = "0xC49090", VA = "0xC49090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D59A8", Offset = "0x8D59A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000696")]
		public DateTime StartTimeUtc
		{
			[Token(Token = "0x6002399")]
			[Address(RVA = "0xC49098", Offset = "0xC49098", VA = "0xC49098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D59B8", Offset = "0x8D59B8")]
			readonly get
			{
				return default(DateTime);
			}
			[Token(Token = "0x600239A")]
			[Address(RVA = "0xC490A0", Offset = "0xC490A0", VA = "0xC490A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D59F0", Offset = "0x8D59F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000697")]
		public DateTime EndTimeUtc
		{
			[Token(Token = "0x600239B")]
			[Address(RVA = "0xC490A8", Offset = "0xC490A8", VA = "0xC490A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A00", Offset = "0x8D5A00")]
			readonly get
			{
				return default(DateTime);
			}
			[Token(Token = "0x600239C")]
			[Address(RVA = "0xC490B0", Offset = "0xC490B0", VA = "0xC490B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A38", Offset = "0x8D5A38")]
			set
			{
			}
		}

		[Token(Token = "0x17000698")]
		public DateTime ServerTimeUtc
		{
			[Token(Token = "0x600239D")]
			[Address(RVA = "0xC490B8", Offset = "0xC490B8", VA = "0xC490B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A48", Offset = "0x8D5A48")]
			readonly get
			{
				return default(DateTime);
			}
			[Token(Token = "0x600239E")]
			[Address(RVA = "0xC490C0", Offset = "0xC490C0", VA = "0xC490C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A80", Offset = "0x8D5A80")]
			set
			{
			}
		}

		[Token(Token = "0x17000699")]
		public string Leaderboard
		{
			[Token(Token = "0x600239F")]
			[Address(RVA = "0xC490C8", Offset = "0xC490C8", VA = "0xC490C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5A90", Offset = "0x8D5A90")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x60023A0")]
			[Address(RVA = "0xC490D0", Offset = "0xC490D0", VA = "0xC490D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5AC8", Offset = "0x8D5AC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700069A")]
		[JsonIgnore]
		public DateTime ClientSideEndTimeUtc
		{
			[Token(Token = "0x60023A1")]
			[Address(RVA = "0xC490D8", Offset = "0xC490D8", VA = "0xC490D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5AD8", Offset = "0x8D5AD8")]
			readonly get
			{
				return default(DateTime);
			}
			[Token(Token = "0x60023A2")]
			[Address(RVA = "0xC490E0", Offset = "0xC490E0", VA = "0xC490E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5B10", Offset = "0x8D5B10")]
			set
			{
			}
		}

		[Token(Token = "0x1700069B")]
		public bool IsValid
		{
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0xC48148", Offset = "0xC48148", VA = "0xC48148")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x200058F")]
	public class ScoreBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C761C", Offset = "0x8C761C")]
		[SerializeField]
		private int scorePerSectorVisited;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int scorePerScannedCreature;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int scorePerGainedComponent;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int scorePerUpgradedComponent;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float scorePerAmountOfScrapCollected;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int scorePerEliteBattleWon;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int scorePerDefeatedChimera;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int scorePerDefeatedGuardian;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int scorePerCompletedJourney;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C76E8", Offset = "0x8C76E8")]
		[SerializeField]
		private int scoreTimeBonusBase;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float timeBonusScoreDecreasePerSecond;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int scorePerCompletedJourneyFast;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int completedJourneyFastTimeInMinutes;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int scorePerCompletedJourneyFaster;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int completedJourneyFasterTimeInMinutes;

		[Token(Token = "0x1700069E")]
		public int ScorePerSectorVisited
		{
			[Token(Token = "0x60023A9")]
			[Address(RVA = "0xCFA83C", Offset = "0xCFA83C", VA = "0xCFA83C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700069F")]
		public int ScorePerScannedCreature
		{
			[Token(Token = "0x60023AA")]
			[Address(RVA = "0xCFA844", Offset = "0xCFA844", VA = "0xCFA844")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006A0")]
		public int ScorePerGainedComponent
		{
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0xCFA84C", Offset = "0xCFA84C", VA = "0xCFA84C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006A1")]
		public int ScorePerUpgradedComponent
		{
			[Token(Token = "0x60023AC")]
			[Address(RVA = "0xCFA854", Offset = "0xCFA854", VA = "0xCFA854")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006A2")]
		public float ScorePerAmountOfScrapCollected
		{
			[Token(Token = "0x60023AD")]
			[Address(RVA = "0xCFA85C", Offset = "0xCFA85C", VA = "0xCFA85C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006A3")]
		public int ScorePerEliteBattleWon
		{
			[Token(Token = "0x60023AE")]
			[Address(RVA = "0xCFA864", Offset = "0xCFA864", VA = "0xCFA864")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006A4")]
		public int ScorePerDefeatedChimera
		{
			[Token(Token = "0x60023AF")]
			[Address(RVA = "0xCFA86C", Offset = "0xCFA86C", VA = "0xCFA86C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006A5")]
		public int ScorePerDefeatedGuardian
		{
			[Token(Token = "0x60023B0")]
			[Address(RVA = "0xCFA874", Offset = "0xCFA874", VA = "0xCFA874")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006A6")]
		public int ScorePerCompletedJourney
		{
			[Token(Token = "0x60023B1")]
			[Address(RVA = "0xCFA87C", Offset = "0xCFA87C", VA = "0xCFA87C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006A7")]
		public int ScorePerCompletedJourneyFast
		{
			[Token(Token = "0x60023B2")]
			[Address(RVA = "0xCFA884", Offset = "0xCFA884", VA = "0xCFA884")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006A8")]
		public int ScorePerCompletedJourneyFaster
		{
			[Token(Token = "0x60023B3")]
			[Address(RVA = "0xCFA88C", Offset = "0xCFA88C", VA = "0xCFA88C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006A9")]
		public int CompletedJourneyFastTimeInMinutes
		{
			[Token(Token = "0x60023B4")]
			[Address(RVA = "0xCFA894", Offset = "0xCFA894", VA = "0xCFA894")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006AA")]
		public int CompletedJourneyFasterTimeInMinutes
		{
			[Token(Token = "0x60023B5")]
			[Address(RVA = "0xCFA89C", Offset = "0xCFA89C", VA = "0xCFA89C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006AB")]
		public int ScoreTimeBonusBase
		{
			[Token(Token = "0x60023B6")]
			[Address(RVA = "0xCFA8A4", Offset = "0xCFA8A4", VA = "0xCFA8A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006AC")]
		public int SectorsVisitedScore
		{
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0xCFA8AC", Offset = "0xCFA8AC", VA = "0xCFA8AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006AD")]
		public int ScannedCreaturesScore
		{
			[Token(Token = "0x60023B8")]
			[Address(RVA = "0xCFA948", Offset = "0xCFA948", VA = "0xCFA948")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006AE")]
		public int GainedComponentsScore
		{
			[Token(Token = "0x60023B9")]
			[Address(RVA = "0xCFAAC4", Offset = "0xCFAAC4", VA = "0xCFAAC4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006AF")]
		public int UpgradedComponentsScore
		{
			[Token(Token = "0x60023BA")]
			[Address(RVA = "0xCFAB60", Offset = "0xCFAB60", VA = "0xCFAB60")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006B0")]
		public int CollectedScrapScore
		{
			[Token(Token = "0x60023BB")]
			[Address(RVA = "0xCFABFC", Offset = "0xCFABFC", VA = "0xCFABFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006B1")]
		public int EliteBattleWonScore
		{
			[Token(Token = "0x60023BC")]
			[Address(RVA = "0xCFACA0", Offset = "0xCFACA0", VA = "0xCFACA0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006B2")]
		public int DefeatedChimeraScore
		{
			[Token(Token = "0x60023BD")]
			[Address(RVA = "0xCFAD3C", Offset = "0xCFAD3C", VA = "0xCFAD3C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006B3")]
		public int DefeatedGuardianScore
		{
			[Token(Token = "0x60023BE")]
			[Address(RVA = "0xCFADD8", Offset = "0xCFADD8", VA = "0xCFADD8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006B4")]
		public int CompletedJourneyScore
		{
			[Token(Token = "0x60023BF")]
			[Address(RVA = "0xCFAECC", Offset = "0xCFAECC", VA = "0xCFAECC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006B5")]
		public int TimeBonusScore
		{
			[Token(Token = "0x60023C0")]
			[Address(RVA = "0xCFAFEC", Offset = "0xCFAFEC", VA = "0xCFAFEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006B6")]
		public int CompletedJourneyFastScore
		{
			[Token(Token = "0x60023C1")]
			[Address(RVA = "0xCFB1EC", Offset = "0xCFB1EC", VA = "0xCFB1EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006B7")]
		public int CompletedJourneyFasterScore
		{
			[Token(Token = "0x60023C2")]
			[Address(RVA = "0xCFB3D8", Offset = "0xCFB3D8", VA = "0xCFB3D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006B8")]
		public int TotalScore
		{
			[Token(Token = "0x60023C3")]
			[Address(RVA = "0xCFB5C4", Offset = "0xCFB5C4", VA = "0xCFB5C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xCFA970", Offset = "0xCFA970", VA = "0xCFA970")]
		private int GetScannedCreaturesCount()
		{
			return default(int);
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xCFAE00", Offset = "0xCFAE00", VA = "0xCFAE00")]
		private int GetGuardianKillCount()
		{
			return default(int);
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xCFB690", Offset = "0xCFB690", VA = "0xCFB690")]
		public ScoreBehaviour()
		{
		}
	}
}
namespace Game.Creatures
{
	[Token(Token = "0x2000590")]
	public class DamageAndPushAllShips : MonoBehaviour
	{
		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float damage;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private DamageTypeEnum damageType;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 pushForceRange;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ForceMode pushForceMode;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool activateOnEnable;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SpaceShip> ships;

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xC4A828", Offset = "0xC4A828", VA = "0xC4A828")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xC4A838", Offset = "0xC4A838", VA = "0xC4A838")]
		public void PushAndDamage()
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xC4AE5C", Offset = "0xC4AE5C", VA = "0xC4AE5C")]
		public DamageAndPushAllShips()
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class SpectralAnomaly : GameMonoBehaviour
	{
		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAFDC", Offset = "0x8AAFDC")]
		private sealed class <LifeTime>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpectralAnomaly <>4__this;

			[Token(Token = "0x170006BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023D7")]
				[Address(RVA = "0xE9E630", Offset = "0xE9E630", VA = "0xE9E630", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023D9")]
				[Address(RVA = "0xE9E678", Offset = "0xE9E678", VA = "0xE9E678", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0xE9E4AC", Offset = "0xE9E4AC", VA = "0xE9E4AC")]
			[DebuggerHidden]
			public <LifeTime>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60023D5")]
			[Address(RVA = "0xE9E4D8", Offset = "0xE9E4D8", VA = "0xE9E4D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023D6")]
			[Address(RVA = "0xE9E4DC", Offset = "0xE9E4DC", VA = "0xE9E4DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023D8")]
			[Address(RVA = "0xE9E638", Offset = "0xE9E638", VA = "0xE9E638", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAFEC", Offset = "0x8AAFEC")]
		private sealed class <PickupLifetime>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpectralAnomaly <>4__this;

			[Token(Token = "0x170006BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023DD")]
				[Address(RVA = "0xE9E770", Offset = "0xE9E770", VA = "0xE9E770", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023DF")]
				[Address(RVA = "0xE9E7B8", Offset = "0xE9E7B8", VA = "0xE9E7B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023DA")]
			[Address(RVA = "0xE9E680", Offset = "0xE9E680", VA = "0xE9E680")]
			[DebuggerHidden]
			public <PickupLifetime>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60023DB")]
			[Address(RVA = "0xE9E6AC", Offset = "0xE9E6AC", VA = "0xE9E6AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023DC")]
			[Address(RVA = "0xE9E6B0", Offset = "0xE9E6B0", VA = "0xE9E6B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023DE")]
			[Address(RVA = "0xE9E778", Offset = "0xE9E778", VA = "0xE9E778", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAFFC", Offset = "0x8AAFFC")]
		private sealed class <SpawnAnticipation>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpectralAnomaly <>4__this;

			[Token(Token = "0x170006BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023E3")]
				[Address(RVA = "0xE9E940", Offset = "0xE9E940", VA = "0xE9E940", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023E5")]
				[Address(RVA = "0xE9E988", Offset = "0xE9E988", VA = "0xE9E988", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023E0")]
			[Address(RVA = "0xE9E7C0", Offset = "0xE9E7C0", VA = "0xE9E7C0")]
			[DebuggerHidden]
			public <SpawnAnticipation>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60023E1")]
			[Address(RVA = "0xE9E7EC", Offset = "0xE9E7EC", VA = "0xE9E7EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xE9E7F0", Offset = "0xE9E7F0", VA = "0xE9E7F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023E4")]
			[Address(RVA = "0xE9E948", Offset = "0xE9E948", VA = "0xE9E948", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB00C", Offset = "0x8AB00C")]
		private sealed class <Fade>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpectralAnomaly <>4__this;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x170006C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023E9")]
				[Address(RVA = "0xE9E45C", Offset = "0xE9E45C", VA = "0xE9E45C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023EB")]
				[Address(RVA = "0xE9E4A4", Offset = "0xE9E4A4", VA = "0xE9E4A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023E6")]
			[Address(RVA = "0xE9E2A8", Offset = "0xE9E2A8", VA = "0xE9E2A8")]
			[DebuggerHidden]
			public <Fade>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60023E7")]
			[Address(RVA = "0xE9E2D4", Offset = "0xE9E2D4", VA = "0xE9E2D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023E8")]
			[Address(RVA = "0xE9E2D8", Offset = "0xE9E2D8", VA = "0xE9E2D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023EA")]
			[Address(RVA = "0xE9E464", Offset = "0xE9E464", VA = "0xE9E464", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PhysicsTriggerContainer triggerContainer;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C77E4", Offset = "0x8C77E4")]
		[SerializeField]
		private BuffObject playerBuff;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BuffObject enemyBuff;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7840", Offset = "0x8C7840")]
		[SerializeField]
		private Vector2 timeToLiveSpan;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float anticipationTime;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float fadeTime;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float pickupLifetime;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C78BC", Offset = "0x8C78BC")]
		private AnimationCurve fadeCurve;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool canHitMultipleWhileFading;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7918", Offset = "0x8C7918")]
		[SerializeField]
		private bool growWhileFading;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AnimationCurve growthCurve;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector2 growthMinMax;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7984", Offset = "0x8C7984")]
		private GameObject anomalyParent;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject anomalyArt;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C79E0", Offset = "0x8C79E0")]
		private UnityEvent onAnticipationBegin;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private UnityEvent onAnticipationEnd;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private UnityEvent onFadeBegin;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private UnityEvent onFadeEnd;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private UnityEvent onPickedUp;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private UnityEvent onPickedUpWhileFading;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7A7C", Offset = "0x8C7A7C")]
		private SfxTrigger spawnSfx;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private SfxTrigger activateSfx;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private SfxTrigger anomalyEnterSfx;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Coroutine lifeTimeRoutine;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool isFading;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<IDamagable> affectedDamagables;

		[Token(Token = "0x170006B9")]
		protected override bool EnableOnGameStart
		{
			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x150F494", Offset = "0x150F494", VA = "0x150F494", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x150F49C", Offset = "0x150F49C", VA = "0x150F49C")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x150F4F4", Offset = "0x150F4F4", VA = "0x150F4F4", Slot = "30")]
		protected override void OnGameStart()
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x150F668", Offset = "0x150F668", VA = "0x150F668")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D5B60", Offset = "0x8D5B60")]
		private IEnumerator LifeTime()
		{
			return null;
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x150F6E0", Offset = "0x150F6E0", VA = "0x150F6E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D5BC0", Offset = "0x8D5BC0")]
		private IEnumerator PickupLifetime()
		{
			return null;
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x150F758", Offset = "0x150F758", VA = "0x150F758")]
		private void OnAnomalyEnter(Collider other)
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x150FBE0", Offset = "0x150FBE0", VA = "0x150FBE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D5C20", Offset = "0x8D5C20")]
		private IEnumerator SpawnAnticipation()
		{
			return null;
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x150FC58", Offset = "0x150FC58", VA = "0x150FC58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D5C80", Offset = "0x8D5C80")]
		private IEnumerator Fade()
		{
			return null;
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x150FB54", Offset = "0x150FB54", VA = "0x150FB54")]
		private void DestroyAnomaly()
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x150FCD0", Offset = "0x150FCD0", VA = "0x150FCD0")]
		public SpectralAnomaly()
		{
		}
	}
	[Token(Token = "0x2000596")]
	public class SpectralAnomalySpawner : GameMonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000597")]
		public class WeightedSpectralAnomaly
		{
			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject spectralAnomalyPrefab;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int weight;

			[Token(Token = "0x60023F4")]
			[Address(RVA = "0xE9E990", Offset = "0xE9E990", VA = "0xE9E990")]
			public WeightedSpectralAnomaly()
			{
			}
		}

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7AE8", Offset = "0x8C7AE8")]
		[SerializeField]
		private WeightedSpectralAnomaly[] spectralAnomalies;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7B34", Offset = "0x8C7B34")]
		[SerializeField]
		private Vector2 firstSpawnTimeSpan;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector2 spawnTimeSpan;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector2Int spawnCountSpan;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7BA0", Offset = "0x8C7BA0")]
		[SerializeField]
		private Vector2 centerSpawnRange;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector2 playerSpawnRange;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float playerSpawnWeight;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int totalWeight;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float timer;

		[Token(Token = "0x170006C2")]
		protected override bool EnableOnGameStart
		{
			[Token(Token = "0x60023EC")]
			[Address(RVA = "0xF22C68", Offset = "0xF22C68", VA = "0xF22C68", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006C3")]
		protected override bool EnableOnUpdate
		{
			[Token(Token = "0x60023ED")]
			[Address(RVA = "0xF22C70", Offset = "0xF22C70", VA = "0xF22C70", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0xF22C78", Offset = "0xF22C78", VA = "0xF22C78", Slot = "30")]
		protected override void OnGameStart()
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0xF22D08", Offset = "0xF22D08", VA = "0xF22D08", Slot = "32")]
		protected override void OnUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0xF22E00", Offset = "0xF22E00", VA = "0xF22E00")]
		private GameObject GetRandomAnomalyPrefab()
		{
			return null;
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0xF22E8C", Offset = "0xF22E8C", VA = "0xF22E8C")]
		private Vector3 GetRandomAnomalyPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xF23064", Offset = "0xF23064", VA = "0xF23064")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xF23170", Offset = "0xF23170", VA = "0xF23170")]
		public SpectralAnomalySpawner()
		{
		}
	}
}
namespace Game.Character
{
	[Token(Token = "0x2000598")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8AB01C", Offset = "0x8AB01C")]
	public class IdleAnimationRandomizer : GameMonoBehaviour
	{
		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string animationProperty;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2Int minMaxIndexRange;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Animator> localAnimator;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector2 durationBetweenClips;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool pauseRandomizer;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float duration;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float maxDuration;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int idleAnimSelectID;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool pauseSeed;

		[Token(Token = "0x170006C4")]
		protected override bool EnableOnLoadBalancedUpdate
		{
			[Token(Token = "0x60023F5")]
			[Address(RVA = "0xD52640", Offset = "0xD52640", VA = "0xD52640", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023F6")]
			[Address(RVA = "0xD52648", Offset = "0xD52648", VA = "0xD52648", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xD5264C", Offset = "0xD5264C", VA = "0xD5264C", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0xD52860", Offset = "0xD52860", VA = "0xD52860", Slot = "35")]
		protected override void OnLoadBalancedUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xD528AC", Offset = "0xD528AC", VA = "0xD528AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xD528FC", Offset = "0xD528FC", VA = "0xD528FC", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xD52718", Offset = "0xD52718", VA = "0xD52718")]
		public void InitializeNewSeed()
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xD52958", Offset = "0xD52958", VA = "0xD52958")]
		public void PauseNewSeed(float duration = 1f)
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xD529C0", Offset = "0xD529C0", VA = "0xD529C0")]
		public void UnpauseNewSeed()
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xD529CC", Offset = "0xD529CC", VA = "0xD529CC")]
		public IdleAnimationRandomizer()
		{
		}
	}
	[Token(Token = "0x2000599")]
	public class PortraitController : MonoBehaviour
	{
		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB07C", Offset = "0x8AB07C")]
		private sealed class <LerpPortrait>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PortraitController <>4__this;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool lerpOut;

			[Token(Token = "0x170006C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002406")]
				[Address(RVA = "0xD6ED3C", Offset = "0xD6ED3C", VA = "0xD6ED3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002408")]
				[Address(RVA = "0xD6ED84", Offset = "0xD6ED84", VA = "0xD6ED84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002403")]
			[Address(RVA = "0xD6E8FC", Offset = "0xD6E8FC", VA = "0xD6E8FC")]
			[DebuggerHidden]
			public <LerpPortrait>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002404")]
			[Address(RVA = "0xD6E928", Offset = "0xD6E928", VA = "0xD6E928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002405")]
			[Address(RVA = "0xD6E92C", Offset = "0xD6E92C", VA = "0xD6E92C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002407")]
			[Address(RVA = "0xD6ED44", Offset = "0xD6ED44", VA = "0xD6ED44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer portraitRenderer;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string floatPropertyToLerp;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool flipDissolveDirection;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string flipDissolveDirectionProperty;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float lerpDuration;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve lerpAnimationCurve;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool playAnimationOnce;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool hasPlayedAnimation;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Material> validMaterials;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float t;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine lerpCoroutine;

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xCE53D4", Offset = "0xCE53D4", VA = "0xCE53D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0xCE5648", Offset = "0xCE5648", VA = "0xCE5648")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0xCE55BC", Offset = "0xCE55BC", VA = "0xCE55BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D5E20", Offset = "0x8D5E20")]
		private IEnumerator LerpPortrait(bool lerpOut = false)
		{
			return null;
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xCE5788", Offset = "0xCE5788", VA = "0xCE5788")]
		public PortraitController()
		{
		}
	}
}
namespace Game.Build
{
	[Token(Token = "0x200059B")]
	public class DisableByDeveloperBuild : MonoBehaviour
	{
		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool enableForDeveloperBuild;

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xC4F098", Offset = "0xC4F098", VA = "0xC4F098")]
		private void Awake()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xC4F154", Offset = "0xC4F154", VA = "0xC4F154")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xC4F210", Offset = "0xC4F210", VA = "0xC4F210")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xC4F310", Offset = "0xC4F310", VA = "0xC4F310")]
		private void OnDeveloperBuildChanged(bool isDeveloperBuild)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xC4F28C", Offset = "0xC4F28C", VA = "0xC4F28C")]
		private void UpdateEnableState(bool isDeveloperBuild)
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xC4F318", Offset = "0xC4F318", VA = "0xC4F318")]
		public DisableByDeveloperBuild()
		{
		}
	}
}
namespace Game.Bark
{
	[Token(Token = "0x200059C")]
	public class BarkEvents : MonoBehaviour
	{
		[Token(Token = "0x600240F")]
		[Address(RVA = "0xEF72D4", Offset = "0xEF72D4", VA = "0xEF72D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xEF73F4", Offset = "0xEF73F4", VA = "0xEF73F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xEF7514", Offset = "0xEF7514", VA = "0xEF7514")]
		private void OnSectorClearCheck(bool _)
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xEF77F4", Offset = "0xEF77F4", VA = "0xEF77F4")]
		public BarkEvents()
		{
		}
	}
}
namespace Game.Ai
{
	[Token(Token = "0x200059D")]
	public abstract class AiBrainBase : ScriptableObject
	{
		[Token(Token = "0x6002413")]
		public abstract AiBrainInstanceBase CreateBrainInstance(AiSpaceShip owner);

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xEE73BC", Offset = "0xEE73BC", VA = "0xEE73BC")]
		protected AiBrainBase()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class AiBrainInstanceBase
	{
		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7CDC", Offset = "0x8C7CDC")]
		private AiSpaceShip <Owner>k__BackingField;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SectorTag> ActiveTags;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<AiAction, AiActionInstanceBase> SharedActions;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Vector2 stateChangeStartDelay;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector2 stateChangeInterval;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected AiActionInstanceBase[] actions;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected AiStateInstanceBase[] states;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected AiStateInstanceBase currentState;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float visionRange;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected bool visionCenterOnPlayArea;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		protected bool targetDeadShips;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		protected bool targetInactiveShips;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		protected bool targetInvulnerableShips;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected AiVision vision;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected bool isSetUp;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float stateTimer;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected float stateDelay;

		[Token(Token = "0x170006C7")]
		public AiSpaceShip Owner
		{
			[Token(Token = "0x6002416")]
			[Address(RVA = "0xEE77A4", Offset = "0xEE77A4", VA = "0xEE77A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5ED0", Offset = "0x8D5ED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002417")]
			[Address(RVA = "0xEE77AC", Offset = "0xEE77AC", VA = "0xEE77AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5EE0", Offset = "0x8D5EE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170006C8")]
		protected bool StateChangeReady
		{
			[Token(Token = "0x6002418")]
			[Address(RVA = "0xEE77B4", Offset = "0xEE77B4", VA = "0xEE77B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006C9")]
		public float VisionRange
		{
			[Token(Token = "0x6002419")]
			[Address(RVA = "0xEE77C4", Offset = "0xEE77C4", VA = "0xEE77C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006CA")]
		public bool VisionCenterOnPlayArea
		{
			[Token(Token = "0x600241A")]
			[Address(RVA = "0xEE77CC", Offset = "0xEE77CC", VA = "0xEE77CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006CB")]
		public bool TargetDeadShips
		{
			[Token(Token = "0x600241B")]
			[Address(RVA = "0xEE77D4", Offset = "0xEE77D4", VA = "0xEE77D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006CC")]
		public bool TargetInactiveShips
		{
			[Token(Token = "0x600241C")]
			[Address(RVA = "0xEE77DC", Offset = "0xEE77DC", VA = "0xEE77DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006CD")]
		public bool TargetInvulnerableShips
		{
			[Token(Token = "0x600241D")]
			[Address(RVA = "0xEE77E4", Offset = "0xEE77E4", VA = "0xEE77E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006CE")]
		public AiVision GetVision
		{
			[Token(Token = "0x600241E")]
			[Address(RVA = "0xEE77EC", Offset = "0xEE77EC", VA = "0xEE77EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xEE73C4", Offset = "0xEE73C4", VA = "0xEE73C4")]
		public AiBrainInstanceBase(AiSpaceShip owner, Vector2 stateChangeStartDelay, Vector2 stateChangeInterval, float visionRange, bool visionCenterOnPlayArea, bool targetDeadShips, bool targetInactiveShips, bool targetInvulnerableShips, AiAction[] actionObjects, AiState[] stateObjects)
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xEE77F4", Offset = "0xEE77F4", VA = "0xEE77F4")]
		protected void SetStateChangeInterval()
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xEE7824", Offset = "0xEE7824", VA = "0xEE7824", Slot = "4")]
		protected virtual void Setup()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xEE7854", Offset = "0xEE7854", VA = "0xEE7854", Slot = "5")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0xEE7874", Offset = "0xEE7874", VA = "0xEE7874", Slot = "6")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0xEE7878", Offset = "0xEE7878", VA = "0xEE7878", Slot = "7")]
		public virtual void TickAi(float delta)
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0xEE7A3C", Offset = "0xEE7A3C", VA = "0xEE7A3C", Slot = "8")]
		public virtual void DecideOnState()
		{
		}
	}
	[Token(Token = "0x200059F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB08C", Offset = "0x8AB08C")]
	public class AiBrain : AiBrainBase
	{
		[Token(Token = "0x20005A0")]
		public class AiBrainInstance : AiBrainInstanceBase
		{
			[Token(Token = "0x6002427")]
			[Address(RVA = "0xE0480C", Offset = "0xE0480C", VA = "0xE0480C")]
			public AiBrainInstance(AiSpaceShip owner, Vector2 stateChangeStartDelay, Vector2 stateChangeInterval, float visionRange, bool visionCenterOnPlayArea, bool targetDeadShips, bool targetInactiveShips, bool targetInvulnerableShips, AiAction[] actionObjects, AiState[] stateObjects)
			{
			}

			[Token(Token = "0x6002428")]
			[Address(RVA = "0xE04824", Offset = "0xE04824", VA = "0xE04824", Slot = "4")]
			protected override void Setup()
			{
			}

			[Token(Token = "0x6002429")]
			[Address(RVA = "0xE04954", Offset = "0xE04954", VA = "0xE04954", Slot = "5")]
			public override void Start()
			{
			}

			[Token(Token = "0x600242A")]
			[Address(RVA = "0xE049F0", Offset = "0xE049F0", VA = "0xE049F0", Slot = "6")]
			public override void Stop()
			{
			}

			[Token(Token = "0x600242B")]
			[Address(RVA = "0xE04B14", Offset = "0xE04B14", VA = "0xE04B14", Slot = "7")]
			public override void TickAi(float delta)
			{
			}

			[Token(Token = "0x600242C")]
			[Address(RVA = "0xE04C68", Offset = "0xE04C68", VA = "0xE04C68", Slot = "8")]
			public override void DecideOnState()
			{
			}

			[Token(Token = "0x600242D")]
			[Address(RVA = "0xE04A94", Offset = "0xE04A94", VA = "0xE04A94")]
			private void SetState(AiStateInstanceBase state)
			{
			}

			[Token(Token = "0x600242E")]
			[Address(RVA = "0xE0497C", Offset = "0xE0497C", VA = "0xE0497C")]
			private void ActivateAllActions()
			{
			}

			[Token(Token = "0x600242F")]
			[Address(RVA = "0xE04A24", Offset = "0xE04A24", VA = "0xE04A24")]
			protected void DeactivateAllActions()
			{
			}
		}

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7CEC", Offset = "0x8C7CEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7CEC", Offset = "0x8C7CEC")]
		private Vector2 stateChangeStartDelay;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7D5C", Offset = "0x8C7D5C")]
		[SerializeField]
		private Vector2 stateChangeInterval;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected AiAction[] actionObjects;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected AiState[] stateObjects;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7DC8", Offset = "0x8C7DC8")]
		[SerializeField]
		private float visionRange;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool visionCenterOnPlayArea;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool targetDeadShips;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[SerializeField]
		private bool targetInactiveShips;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		[SerializeField]
		private bool targetInvulnerableShips;

		[Token(Token = "0x6002425")]
		[Address(RVA = "0xEE72A8", Offset = "0xEE72A8", VA = "0xEE72A8", Slot = "4")]
		public override AiBrainInstanceBase CreateBrainInstance(AiSpaceShip owner)
		{
			return null;
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0xEE7390", Offset = "0xEE7390", VA = "0xEE7390")]
		public AiBrain()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public class AiManager : MonoBehaviourSingleton<AiManager>
	{
		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 aiSceneLoadActivationDelayRange;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int aiSceneLoadActivationDelaySectorSpan;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve aiSceneLoadActivationDelayCurve;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool loading;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lastLoadEndTime;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float delayTime;

		[Token(Token = "0x170006CF")]
		public static bool ShouldDelayAIActivation
		{
			[Token(Token = "0x6002430")]
			[Address(RVA = "0xEE78B4", Offset = "0xEE78B4", VA = "0xEE78B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xEE7A40", Offset = "0xEE7A40", VA = "0xEE7A40", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xEE7B4C", Offset = "0xEE7B4C", VA = "0xEE7B4C", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0xEE7C58", Offset = "0xEE7C58", VA = "0xEE7C58")]
		private void OnLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0xEE7C64", Offset = "0xEE7C64", VA = "0xEE7C64")]
		private void OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0xEE7E88", Offset = "0xEE7E88", VA = "0xEE7E88")]
		public AiManager()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public abstract class AiTargeting : ScriptableObject
	{
		[Token(Token = "0x6002436")]
		public abstract bool TryGetNewTarget(AiBrainInstanceBase brain, out IDamagable target);

		[Token(Token = "0x6002437")]
		[Address(RVA = "0xEE8E3C", Offset = "0xEE8E3C", VA = "0xEE8E3C")]
		protected AiTargeting()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public struct VisionData
	{
		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7E84", Offset = "0x8C7E84")]
		private float <ClosestEnemyDistance>k__BackingField;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7E94", Offset = "0x8C7E94")]
		private IDamagable <ClosestEnemy>k__BackingField;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7EA4", Offset = "0x8C7EA4")]
		private float <ClosestTargetDistance>k__BackingField;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7EB4", Offset = "0x8C7EB4")]
		private IDamagable <ClosestTarget>k__BackingField;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7EC4", Offset = "0x8C7EC4")]
		private float <ClosestFriendlyDistance>k__BackingField;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7ED4", Offset = "0x8C7ED4")]
		private IDamagable <ClosestFriendly>k__BackingField;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7EE4", Offset = "0x8C7EE4")]
		private float <ClosestEnemyProjectileDistance>k__BackingField;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7EF4", Offset = "0x8C7EF4")]
		private IProjectile <ClosestEnemyProjectile>k__BackingField;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7F04", Offset = "0x8C7F04")]
		private List<IDamagable> <VisibleTargets>k__BackingField;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7F14", Offset = "0x8C7F14")]
		private List<IDamagable> <VisibleEnemies>k__BackingField;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7F24", Offset = "0x8C7F24")]
		private List<IDamagable> <VisibleFriendly>k__BackingField;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7F34", Offset = "0x8C7F34")]
		private List<IDamagable> <VisibleNeutral>k__BackingField;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7F44", Offset = "0x8C7F44")]
		private List<IProjectile> <VisibleEnemyProjectiles>k__BackingField;

		[Token(Token = "0x170006D0")]
		public float ClosestEnemyDistance
		{
			[Token(Token = "0x600243A")]
			[Address(RVA = "0xDFFC94", Offset = "0xDFFC94", VA = "0xDFFC94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5EF0", Offset = "0x8D5EF0")]
			readonly get
			{
				return default(float);
			}
			[Token(Token = "0x600243B")]
			[Address(RVA = "0xDFFC9C", Offset = "0xDFFC9C", VA = "0xDFFC9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F28", Offset = "0x8D5F28")]
			set
			{
			}
		}

		[Token(Token = "0x170006D1")]
		public IDamagable ClosestEnemy
		{
			[Token(Token = "0x600243C")]
			[Address(RVA = "0xDFFCA4", Offset = "0xDFFCA4", VA = "0xDFFCA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F38", Offset = "0x8D5F38")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600243D")]
			[Address(RVA = "0xDFFCAC", Offset = "0xDFFCAC", VA = "0xDFFCAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F70", Offset = "0x8D5F70")]
			set
			{
			}
		}

		[Token(Token = "0x170006D2")]
		public float ClosestTargetDistance
		{
			[Token(Token = "0x600243E")]
			[Address(RVA = "0xDFFCB4", Offset = "0xDFFCB4", VA = "0xDFFCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5F80", Offset = "0x8D5F80")]
			readonly get
			{
				return default(float);
			}
			[Token(Token = "0x600243F")]
			[Address(RVA = "0xDFFCBC", Offset = "0xDFFCBC", VA = "0xDFFCBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5FB8", Offset = "0x8D5FB8")]
			set
			{
			}
		}

		[Token(Token = "0x170006D3")]
		public IDamagable ClosestTarget
		{
			[Token(Token = "0x6002440")]
			[Address(RVA = "0xDFFCC4", Offset = "0xDFFCC4", VA = "0xDFFCC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D5FC8", Offset = "0x8D5FC8")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002441")]
			[Address(RVA = "0xDFFCCC", Offset = "0xDFFCCC", VA = "0xDFFCCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6000", Offset = "0x8D6000")]
			set
			{
			}
		}

		[Token(Token = "0x170006D4")]
		public float ClosestFriendlyDistance
		{
			[Token(Token = "0x6002442")]
			[Address(RVA = "0xDFFCD4", Offset = "0xDFFCD4", VA = "0xDFFCD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6010", Offset = "0x8D6010")]
			readonly get
			{
				return default(float);
			}
			[Token(Token = "0x6002443")]
			[Address(RVA = "0xDFFCDC", Offset = "0xDFFCDC", VA = "0xDFFCDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6048", Offset = "0x8D6048")]
			set
			{
			}
		}

		[Token(Token = "0x170006D5")]
		public IDamagable ClosestFriendly
		{
			[Token(Token = "0x6002444")]
			[Address(RVA = "0xDFFCE4", Offset = "0xDFFCE4", VA = "0xDFFCE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6058", Offset = "0x8D6058")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002445")]
			[Address(RVA = "0xDFFCEC", Offset = "0xDFFCEC", VA = "0xDFFCEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6090", Offset = "0x8D6090")]
			set
			{
			}
		}

		[Token(Token = "0x170006D6")]
		public float ClosestEnemyProjectileDistance
		{
			[Token(Token = "0x6002446")]
			[Address(RVA = "0xDFFCF4", Offset = "0xDFFCF4", VA = "0xDFFCF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60A0", Offset = "0x8D60A0")]
			readonly get
			{
				return default(float);
			}
			[Token(Token = "0x6002447")]
			[Address(RVA = "0xDFFCFC", Offset = "0xDFFCFC", VA = "0xDFFCFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60D8", Offset = "0x8D60D8")]
			set
			{
			}
		}

		[Token(Token = "0x170006D7")]
		public IProjectile ClosestEnemyProjectile
		{
			[Token(Token = "0x6002448")]
			[Address(RVA = "0xDFFD04", Offset = "0xDFFD04", VA = "0xDFFD04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D60E8", Offset = "0x8D60E8")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002449")]
			[Address(RVA = "0xDFFD0C", Offset = "0xDFFD0C", VA = "0xDFFD0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6120", Offset = "0x8D6120")]
			set
			{
			}
		}

		[Token(Token = "0x170006D8")]
		public List<IDamagable> VisibleTargets
		{
			[Token(Token = "0x600244A")]
			[Address(RVA = "0xDFFD14", Offset = "0xDFFD14", VA = "0xDFFD14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6130", Offset = "0x8D6130")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600244B")]
			[Address(RVA = "0xDFFD1C", Offset = "0xDFFD1C", VA = "0xDFFD1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6168", Offset = "0x8D6168")]
			set
			{
			}
		}

		[Token(Token = "0x170006D9")]
		public List<IDamagable> VisibleEnemies
		{
			[Token(Token = "0x600244C")]
			[Address(RVA = "0xDFFD24", Offset = "0xDFFD24", VA = "0xDFFD24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6178", Offset = "0x8D6178")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600244D")]
			[Address(RVA = "0xDFFD2C", Offset = "0xDFFD2C", VA = "0xDFFD2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D61B0", Offset = "0x8D61B0")]
			set
			{
			}
		}

		[Token(Token = "0x170006DA")]
		public List<IDamagable> VisibleFriendly
		{
			[Token(Token = "0x600244E")]
			[Address(RVA = "0xDFFD34", Offset = "0xDFFD34", VA = "0xDFFD34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D61C0", Offset = "0x8D61C0")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x600244F")]
			[Address(RVA = "0xDFFD3C", Offset = "0xDFFD3C", VA = "0xDFFD3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D61F8", Offset = "0x8D61F8")]
			set
			{
			}
		}

		[Token(Token = "0x170006DB")]
		public List<IDamagable> VisibleNeutral
		{
			[Token(Token = "0x6002450")]
			[Address(RVA = "0xDFFD44", Offset = "0xDFFD44", VA = "0xDFFD44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6208", Offset = "0x8D6208")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002451")]
			[Address(RVA = "0xDFFD4C", Offset = "0xDFFD4C", VA = "0xDFFD4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6240", Offset = "0x8D6240")]
			set
			{
			}
		}

		[Token(Token = "0x170006DC")]
		public List<IProjectile> VisibleEnemyProjectiles
		{
			[Token(Token = "0x6002452")]
			[Address(RVA = "0xDFFD54", Offset = "0xDFFD54", VA = "0xDFFD54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6250", Offset = "0x8D6250")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6002453")]
			[Address(RVA = "0xDFFD5C", Offset = "0xDFFD5C", VA = "0xDFFD5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6288", Offset = "0x8D6288")]
			set
			{
			}
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0xDFFA4C", Offset = "0xDFFA4C", VA = "0xDFFA4C")]
		public void Setup()
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0xDFFB8C", Offset = "0xDFFB8C", VA = "0xDFFB8C")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public class AiVision
	{
		[Serializable]
		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB0F8", Offset = "0x8AB0F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8C808C", Offset = "0x8C808C")]
			public static Comparison<(IDamagable, float)> <>9__24_0;

			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8C8128", Offset = "0x8C8128")]
			public static Comparison<(IProjectile, float)> <>9__25_0;

			[Token(Token = "0x6002462")]
			[Address(RVA = "0xE04E38", Offset = "0xE04E38", VA = "0xE04E38")]
			public <>c()
			{
			}

			[Token(Token = "0x6002463")]
			[Address(RVA = "0xE04E40", Offset = "0xE04E40", VA = "0xE04E40")]
			internal int <SortClosestDamagable>b__24_0([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8D82BC", Offset = "0x8D82BC")] (IDamagable, float) a, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8D8358", Offset = "0x8D8358")] (IDamagable, float) b)
			{
				return default(int);
			}

			[Token(Token = "0x6002464")]
			[Address(RVA = "0xE04E70", Offset = "0xE04E70", VA = "0xE04E70")]
			internal int <SortClosestProjectile>b__25_0([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8D83F4", Offset = "0x8D83F4")] (IProjectile, float) a, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8D8490", Offset = "0x8D8490")] (IProjectile, float) b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SpaceShip owner;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float visionRange;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool centerOnPlayArea;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool targetDeadShips;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool targetInactiveShips;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		private bool targetInvulnerableShips;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float visionTimer;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float visionDelay;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float visionConditionCheckTimer;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float visionConditionCheckDelay;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8C7F54", Offset = "0x8C7F54")]
		private List<(IDamagable, float)> damagableSortList;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8C7FF0", Offset = "0x8C7FF0")]
		private List<(IProjectile, float)> projectileSortList;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Collider[] hits;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RaycastHit[] canSeeHits;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VisionData data;

		[Token(Token = "0x170006DD")]
		public VisionData Data
		{
			[Token(Token = "0x6002456")]
			[Address(RVA = "0xEE985C", Offset = "0xEE985C", VA = "0xEE985C")]
			get
			{
				return default(VisionData);
			}
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xEE95DC", Offset = "0xEE95DC", VA = "0xEE95DC")]
		public AiVision(AiBrainInstanceBase brain)
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0xEE970C", Offset = "0xEE970C", VA = "0xEE970C")]
		public AiVision(SpaceShip owner, float visionRange, bool centerOnPlayArea, bool targetDeadShips, bool targetInactiveShips, bool targetInvulnerableShips)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xEE986C", Offset = "0xEE986C", VA = "0xEE986C", Slot = "4")]
		public virtual void Setup(AiBrainInstanceBase brain)
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xEE989C", Offset = "0xEE989C", VA = "0xEE989C")]
		public void Tick(float delta, bool drawDebug = false)
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xEE9FCC", Offset = "0xEE9FCC", VA = "0xEE9FCC")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xEEA294", Offset = "0xEEA294", VA = "0xEEA294")]
		private bool TryAddDamagable(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xEEA660", Offset = "0xEEA660", VA = "0xEEA660")]
		private bool TryAddProjectile(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xEEA868", Offset = "0xEEA868", VA = "0xEEA868")]
		private bool SortClosestDamagable(List<IDamagable> damagables, out float distance, out IDamagable closest)
		{
			return default(bool);
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xEEAD5C", Offset = "0xEEAD5C", VA = "0xEEAD5C")]
		private bool SortClosestProjectile(List<IProjectile> projectiles, out float distance, out IProjectile closest)
		{
			return default(bool);
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xEEB250", Offset = "0xEEB250", VA = "0xEEB250")]
		private bool CanSee(IDamagable target)
		{
			return default(bool);
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xEEB460", Offset = "0xEEB460", VA = "0xEEB460")]
		private bool CanSee(IProjectile projectile)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005A6")]
	public class AiVisionContainer : GameMonoBehaviour, IAiVisionContainer
	{
		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpaceShip owner;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float visionRange;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool centerOnPlayArea;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		private bool targetDeadShip;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[SerializeField]
		private bool targetInactiveShip;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[SerializeField]
		private bool targetInvulnerableShip;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AiVision aiVision;

		[Token(Token = "0x170006DE")]
		protected override bool EnableOnLoadBalancedUpdate
		{
			[Token(Token = "0x6002465")]
			[Address(RVA = "0xEEB71C", Offset = "0xEEB71C", VA = "0xEEB71C", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002466")]
			[Address(RVA = "0xEEB724", Offset = "0xEEB724", VA = "0xEEB724", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170006DF")]
		public AiVision AiVision
		{
			[Token(Token = "0x6002467")]
			[Address(RVA = "0xEEB728", Offset = "0xEEB728", VA = "0xEEB728", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0xEEB730", Offset = "0xEEB730", VA = "0xEEB730", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xEEB8E4", Offset = "0xEEB8E4", VA = "0xEEB8E4", Slot = "35")]
		protected override void OnLoadBalancedUpdate(float deltaTime, float unscaledDeltaTime)
		{
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xEEB934", Offset = "0xEEB934", VA = "0xEEB934")]
		public AiVisionContainer()
		{
		}
	}
}
namespace Game.Ai.Targeting
{
	[Token(Token = "0x20005A7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB108", Offset = "0x8AB108")]
	public class AiTargetingClosestEnemy : AiTargeting
	{
		[Token(Token = "0x600246B")]
		[Address(RVA = "0xEE8E44", Offset = "0xEE8E44", VA = "0xEE8E44", Slot = "4")]
		public override bool TryGetNewTarget(AiBrainInstanceBase brain, out IDamagable target)
		{
			return default(bool);
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0xEE8E50", Offset = "0xEE8E50", VA = "0xEE8E50")]
		public static bool TryGetClosestEnemyTarget(AiBrainInstanceBase brain, out IDamagable target)
		{
			return default(bool);
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xEE8FD8", Offset = "0xEE8FD8", VA = "0xEE8FD8")]
		public static bool TryGetTargetingOrDefault(AiBrainInstanceBase brain, AiStateInstanceBase state, out IDamagable target)
		{
			return default(bool);
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0xEE9048", Offset = "0xEE9048", VA = "0xEE9048")]
		public static bool TryGetTargetingOrDefault(AiBrainInstanceBase brain, AiTargeting targeting, out IDamagable target)
		{
			return default(bool);
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xEE90FC", Offset = "0xEE90FC", VA = "0xEE90FC")]
		public AiTargetingClosestEnemy()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB174", Offset = "0x8AB174")]
	public class AiTargetingRandom : AiTargeting
	{
		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int targetAlliesWeight;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool targetAlliesRequired;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int targetEnemiesWeight;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool targetEnemiesRequired;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int targetNeutralsWeight;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool targetNeutralsRequired;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<IDamagable> VALID_TARGETS;

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xEE9104", Offset = "0xEE9104", VA = "0xEE9104", Slot = "4")]
		public override bool TryGetNewTarget(AiBrainInstanceBase brain, out IDamagable target)
		{
			return default(bool);
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xEE9548", Offset = "0xEE9548", VA = "0xEE9548")]
		public AiTargetingRandom()
		{
		}
	}
}
namespace Game.Ai.States
{
	[Serializable]
	[Token(Token = "0x20005A9")]
	public struct AiStateWeight
	{
		[Token(Token = "0x4002079")]
		public const float ACTIVATE_LOCK_WEIGHT = 10000f;

		[Token(Token = "0x400207A")]
		public const float ACTIVATE_LOCK_DEPRIO_WEIGHT = -10000f;

		[Token(Token = "0x400207B")]
		public const float DEACTIVATE_COOLDOWN_WEIGHT = -10000f;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8284", Offset = "0x8C8284")]
		public float baseWeight;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C82BC", Offset = "0x8C82BC")]
		public Vector2 activateLockTime;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool activateLockDeprioritizeAfter;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 deactivateCooldownTime;
	}
	[Serializable]
	[Token(Token = "0x20005AA")]
	public struct AiStateTransitions
	{
		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool canTransitionToSelf;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<AiState> allowedTransitions;

		[Token(Token = "0x170006E0")]
		public bool hasNoTransitions
		{
			[Token(Token = "0x6002473")]
			[Address(RVA = "0xEE86F8", Offset = "0xEE86F8", VA = "0xEE86F8")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x20005AB")]
	public abstract class AiState : ScriptableObject
	{
		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C82F4", Offset = "0x8C82F4")]
		protected AiStateWeight selectionWeightSettings;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected AiAction[] actionObjects;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected AiStateTransitions stateTransitions;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected SectorTagCollectionHierarchy tagConditions;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x6002474")]
		[Address(RVA = "0xEE84A0", Offset = "0xEE84A0", VA = "0xEE84A0")]
		public bool ConditionsMet(IReadOnlyList<SectorTag> abilityTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xEE8534", Offset = "0xEE8534", VA = "0xEE8534")]
		public bool GetIsTransitionAllowed(AiState newState)
		{
			return default(bool);
		}

		[Token(Token = "0x6002476")]
		public abstract AiStateInstanceBase CreateStateInstance(AiBrainInstanceBase brain);

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xEE8750", Offset = "0xEE8750", VA = "0xEE8750")]
		protected AiState()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public class AiStateInstanceBase
	{
		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected AiBrainInstanceBase brain;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected AiState baseState;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected AiStateWeight stateWeightSettings;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected AiActionInstanceBase[] actions;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IDamagable target;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float activateLockTime;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float deactivateCooldownTime;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8370", Offset = "0x8C8370")]
		private float <StateWeight>k__BackingField;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8380", Offset = "0x8C8380")]
		private bool <Activated>k__BackingField;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8390", Offset = "0x8C8390")]
		private float <LastActivateTime>k__BackingField;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C83A0", Offset = "0x8C83A0")]
		private float <LastDeactivateTime>k__BackingField;

		[Token(Token = "0x170006E1")]
		public AiState BaseState
		{
			[Token(Token = "0x600247A")]
			[Address(RVA = "0xEE89F0", Offset = "0xEE89F0", VA = "0xEE89F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E2")]
		public IDamagable Target
		{
			[Token(Token = "0x600247B")]
			[Address(RVA = "0xEE89F8", Offset = "0xEE89F8", VA = "0xEE89F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E3")]
		public virtual AiTargeting Targeting
		{
			[Token(Token = "0x600247C")]
			[Address(RVA = "0xEE8A00", Offset = "0xEE8A00", VA = "0xEE8A00", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E4")]
		public float StateWeight
		{
			[Token(Token = "0x600247D")]
			[Address(RVA = "0xEE8A08", Offset = "0xEE8A08", VA = "0xEE8A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6298", Offset = "0x8D6298")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600247E")]
			[Address(RVA = "0xEE8A10", Offset = "0xEE8A10", VA = "0xEE8A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D62A8", Offset = "0x8D62A8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006E5")]
		public bool Activated
		{
			[Token(Token = "0x600247F")]
			[Address(RVA = "0xEE8A18", Offset = "0xEE8A18", VA = "0xEE8A18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D62B8", Offset = "0x8D62B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002480")]
			[Address(RVA = "0xEE8A20", Offset = "0xEE8A20", VA = "0xEE8A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D62C8", Offset = "0x8D62C8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006E6")]
		public float LastActivateTime
		{
			[Token(Token = "0x6002481")]
			[Address(RVA = "0xEE8A2C", Offset = "0xEE8A2C", VA = "0xEE8A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D62D8", Offset = "0x8D62D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002482")]
			[Address(RVA = "0xEE8A34", Offset = "0xEE8A34", VA = "0xEE8A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D62E8", Offset = "0x8D62E8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170006E7")]
		public float LastDeactivateTime
		{
			[Token(Token = "0x6002483")]
			[Address(RVA = "0xEE8A3C", Offset = "0xEE8A3C", VA = "0xEE8A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D62F8", Offset = "0x8D62F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002484")]
			[Address(RVA = "0xEE8A44", Offset = "0xEE8A44", VA = "0xEE8A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6308", Offset = "0x8D6308")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xEE87D0", Offset = "0xEE87D0", VA = "0xEE87D0")]
		public AiStateInstanceBase(AiBrainInstanceBase brain, AiState aiState, AiStateWeight stateWeightSettings, AiAction[] actionObjects)
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0xEE8A4C", Offset = "0xEE8A4C", VA = "0xEE8A4C", Slot = "5")]
		public virtual void Setup(AiBrainInstanceBase brain)
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xEE8AF4", Offset = "0xEE8AF4", VA = "0xEE8AF4", Slot = "6")]
		public virtual void Tick(float delta)
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0xEE8B74", Offset = "0xEE8B74", VA = "0xEE8B74", Slot = "7")]
		public virtual void ActivateState()
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xEE8C30", Offset = "0xEE8C30", VA = "0xEE8C30", Slot = "8")]
		public virtual void DeactivateState()
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0xEE8CE4", Offset = "0xEE8CE4", VA = "0xEE8CE4", Slot = "9")]
		public virtual void CheckState()
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xEE8E28", Offset = "0xEE8E28", VA = "0xEE8E28")]
		protected void Weight(bool question, float modIfTrue)
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xEE8BBC", Offset = "0xEE8BBC", VA = "0xEE8BBC")]
		protected void ActivateAllActions()
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xEE8C74", Offset = "0xEE8C74", VA = "0xEE8C74")]
		protected void DeactivateAllActions()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public class ChargeUpCallbacks : MonoBehaviour
	{
		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C83B0", Offset = "0x8C83B0")]
		public UnityEvent onChargeStart;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C83E8", Offset = "0x8C83E8")]
		public UnityEvent onChargeStop;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8420", Offset = "0x8C8420")]
		public UnityEvent onAttackStart;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8458", Offset = "0x8C8458")]
		public UnityEvent onAttackHold;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8490", Offset = "0x8C8490")]
		public UnityEvent onAttackStop;

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xFE7E68", Offset = "0xFE7E68", VA = "0xFE7E68")]
		public ChargeUpCallbacks()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public class DeathCallbacks : MonoBehaviour
	{
		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C84C8", Offset = "0x8C84C8")]
		public UnityEvent onDeath;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8500", Offset = "0x8C8500")]
		public UnityEvent<IDamagable, IReadOnlyList<SectorTag>> onDestroy;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8538", Offset = "0x8C8538")]
		public UnityEvent onRevive;

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xC4E024", Offset = "0xC4E024", VA = "0xC4E024")]
		public DeathCallbacks()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AF")]
	public struct EngageStateWeight
	{
		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8570", Offset = "0x8C8570")]
		public float hasEnemyTargetWeight;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float enemyInKeepRangeWeight;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float moreHealthThanTargetWeight;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float alliesOutNumberEnemiesWeight;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float noActiveAbilitiesWeight;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float highHealthWeight;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float highHealthThreshold;
	}
	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB1E0", Offset = "0x8AB1E0")]
	public class EngageState : AiState
	{
		[Token(Token = "0x20005B1")]
		public class StateInstance : AiStateInstanceBase
		{
			[Token(Token = "0x20005B2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB24C", Offset = "0x8AB24C")]
			private sealed class <>c__DisplayClass8_0
			{
				[Token(Token = "0x40020B0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Transform ownerTransform;

				[Token(Token = "0x6002499")]
				[Address(RVA = "0xEA948C", Offset = "0xEA948C", VA = "0xEA948C")]
				public <>c__DisplayClass8_0()
				{
				}

				[Token(Token = "0x600249A")]
				[Address(RVA = "0xEA9494", Offset = "0xEA9494", VA = "0xEA9494")]
				internal SpaceEntitySteering.PositionData <Tick>b__0(Transform t)
				{
					return default(SpaceEntitySteering.PositionData);
				}
			}

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private EngageState state;

			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private float targetTimer;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private bool faceTarget;

			[Token(Token = "0x170006E8")]
			public override AiTargeting Targeting
			{
				[Token(Token = "0x6002493")]
				[Address(RVA = "0xC6DB80", Offset = "0xC6DB80", VA = "0xC6DB80", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002492")]
			[Address(RVA = "0xC6DB08", Offset = "0xC6DB08", VA = "0xC6DB08")]
			public StateInstance(AiBrainInstanceBase brain, EngageState engageState)
			{
			}

			[Token(Token = "0x6002494")]
			[Address(RVA = "0xC6DB9C", Offset = "0xC6DB9C", VA = "0xC6DB9C", Slot = "7")]
			public override void ActivateState()
			{
			}

			[Token(Token = "0x6002495")]
			[Address(RVA = "0xC6DC78", Offset = "0xC6DC78", VA = "0xC6DC78", Slot = "8")]
			public override void DeactivateState()
			{
			}

			[Token(Token = "0x6002496")]
			[Address(RVA = "0xC6DD78", Offset = "0xC6DD78", VA = "0xC6DD78", Slot = "6")]
			public override void Tick(float delta)
			{
			}

			[Token(Token = "0x6002497")]
			[Address(RVA = "0xC6E420", Offset = "0xC6E420", VA = "0xC6E420", Slot = "9")]
			public override void CheckState()
			{
			}

			[Token(Token = "0x6002498")]
			[Address(RVA = "0xC6E494", Offset = "0xC6E494", VA = "0xC6E494")]
			public void SetFaceTarget(bool faceTarget)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB25C", Offset = "0x8AB25C")]
		private sealed class <>c
		{
			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<ShipAbilityActive> <>9__14_0;

			[Token(Token = "0x600249C")]
			[Address(RVA = "0xC6DA98", Offset = "0xC6DA98", VA = "0xC6DA98")]
			public <>c()
			{
			}

			[Token(Token = "0x600249D")]
			[Address(RVA = "0xC6DAA0", Offset = "0xC6DAA0", VA = "0xC6DAA0")]
			internal bool <CheckState>b__14_0(ShipAbilityActive p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C85A8", Offset = "0x8C85A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C85A8", Offset = "0x8C85A8")]
		private SpaceEntitySteering optionalSteering;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8618", Offset = "0x8C8618")]
		[SerializeField]
		private AiTargeting targeting;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8664", Offset = "0x8C8664")]
		[SerializeField]
		private EngageStateWeight engageSelectionWeightSettings;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C86B0", Offset = "0x8C86B0")]
		private float stickyTargetDelay;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C86FC", Offset = "0x8C86FC")]
		private bool faceTarget;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8748", Offset = "0x8C8748")]
		private bool movementSeek;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8794", Offset = "0x8C8794")]
		[SerializeField]
		private bool movementArrive;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C87E0", Offset = "0x8C87E0")]
		[SerializeField]
		private bool movementKeepRange;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C882C", Offset = "0x8C882C")]
		[SerializeField]
		private SpaceEntitySteering.SteerKeepRangeParameters keepRangeParameters;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8878", Offset = "0x8C8878")]
		[SerializeField]
		private bool movementWander;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C88C4", Offset = "0x8C88C4")]
		[SerializeField]
		private bool movementObstacleAvoidance;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private SpaceEntitySteering previousSteering;

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xC537E8", Offset = "0xC537E8", VA = "0xC537E8", Slot = "4")]
		public override AiStateInstanceBase CreateStateInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xC53858", Offset = "0xC53858", VA = "0xC53858")]
		public static float CheckState(float weight, AiBrainInstanceBase brain, EngageStateWeight stateWeight, SpaceEntitySteering.SteerKeepRangeParameters keepRangeParameters)
		{
			return default(float);
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xC53CA8", Offset = "0xC53CA8", VA = "0xC53CA8")]
		public EngageState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B4")]
	public struct PatrolStateWeight
	{
		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8910", Offset = "0x8C8910")]
		public float noEnemyTargetWeight;
	}
	[Token(Token = "0x20005B5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB26C", Offset = "0x8AB26C")]
	public class PatrolState : AiState
	{
		[Token(Token = "0x20005B6")]
		private class StateInstance : AiStateInstanceBase
		{
			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private PatrolStateWeight patrolSelectionWeightSettings;

			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private Vector2 patrolDelaySpan;

			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float patrolDistance;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Vector3 startingPoint;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private float patrolTimer;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private float patrolDelay;

			[Token(Token = "0x60024A0")]
			[Address(RVA = "0xD6CBDC", Offset = "0xD6CBDC", VA = "0xD6CBDC")]
			public StateInstance(AiBrainInstanceBase brain, PatrolState patrolState, AiStateWeight stateWeightSettings, PatrolStateWeight patrolSelectionWeightSettings, AiAction[] actionObjects, float patrolDistance, Vector2 patrolDelaySpan)
			{
			}

			[Token(Token = "0x60024A1")]
			[Address(RVA = "0xD6CC44", Offset = "0xD6CC44", VA = "0xD6CC44")]
			public void GetRandomPatrolDelay()
			{
			}

			[Token(Token = "0x60024A2")]
			[Address(RVA = "0xD6CC70", Offset = "0xD6CC70", VA = "0xD6CC70", Slot = "5")]
			public override void Setup(AiBrainInstanceBase brain)
			{
			}

			[Token(Token = "0x60024A3")]
			[Address(RVA = "0xD6CCC0", Offset = "0xD6CCC0", VA = "0xD6CCC0", Slot = "6")]
			public override void Tick(float delta)
			{
			}

			[Token(Token = "0x60024A4")]
			[Address(RVA = "0xD6CFE8", Offset = "0xD6CFE8", VA = "0xD6CFE8", Slot = "9")]
			public override void CheckState()
			{
			}
		}

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8948", Offset = "0x8C8948")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8948", Offset = "0x8C8948")]
		private PatrolStateWeight patrolSelectionWeightSettings;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C89B8", Offset = "0x8C89B8")]
		[SerializeField]
		private float patrolDistance;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8A04", Offset = "0x8C8A04")]
		[SerializeField]
		private Vector2 patrolDelaySpan;

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x2493318", Offset = "0x2493318", VA = "0x2493318", Slot = "4")]
		public override AiStateInstanceBase CreateStateInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x24933D0", Offset = "0x24933D0", VA = "0x24933D0")]
		public PatrolState()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB2D8", Offset = "0x8AB2D8")]
	public class RamState : AiState
	{
		[Token(Token = "0x20005B8")]
		private class StateInstance : AiStateInstanceBase
		{
			[Token(Token = "0x20005B9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB344", Offset = "0x8AB344")]
			private sealed class <>c__DisplayClass18_0
			{
				[Token(Token = "0x40020D6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Transform ownerTransform;

				[Token(Token = "0x60024AD")]
				[Address(RVA = "0xEAE31C", Offset = "0xEAE31C", VA = "0xEAE31C")]
				public <>c__DisplayClass18_0()
				{
				}

				[Token(Token = "0x60024AE")]
				[Address(RVA = "0xEAE324", Offset = "0xEAE324", VA = "0xEAE324")]
				internal SpaceEntitySteering.PositionData <Tick>b__0(Transform t)
				{
					return default(SpaceEntitySteering.PositionData);
				}
			}

			[Token(Token = "0x20005BA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB354", Offset = "0x8AB354")]
			private sealed class <>c__DisplayClass18_1
			{
				[Token(Token = "0x40020D7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Plane targetPlaneLocal;

				[Token(Token = "0x40020D8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public float breakDistanceThreshold;

				[Token(Token = "0x60024AF")]
				[Address(RVA = "0xEAE3D0", Offset = "0xEAE3D0", VA = "0xEAE3D0")]
				public <>c__DisplayClass18_1()
				{
				}

				[Token(Token = "0x60024B0")]
				[Address(RVA = "0xEAE3D8", Offset = "0xEAE3D8", VA = "0xEAE3D8")]
				internal SpaceEntitySteering.PositionData <Tick>b__1(Transform t)
				{
					return default(SpaceEntitySteering.PositionData);
				}
			}

			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private RamStateShipCallbacks ramCallbacks;

			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RamState state;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private new IDamagable target;

			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Plane targetPlane;

			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private bool chargedUp;

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
			private bool breaking;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
			private bool finished;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
			private bool hasCollidedWithTarget;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private float chargeUpStartTime;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private float ramStartTime;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private float breakStartTime;

			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private int charges;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private int chargesLeft;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float minRamDistance;

			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private SpaceEntitySteering previousSteering;

			[Token(Token = "0x60024A7")]
			[Address(RVA = "0xD6F230", Offset = "0xD6F230", VA = "0xD6F230")]
			public StateInstance(AiBrainInstanceBase brain, RamState state, int charges, float minDistance)
			{
			}

			[Token(Token = "0x60024A8")]
			[Address(RVA = "0xD6F310", Offset = "0xD6F310", VA = "0xD6F310", Slot = "7")]
			public override void ActivateState()
			{
			}

			[Token(Token = "0x60024A9")]
			[Address(RVA = "0xD6F5AC", Offset = "0xD6F5AC", VA = "0xD6F5AC", Slot = "8")]
			public override void DeactivateState()
			{
			}

			[Token(Token = "0x60024AA")]
			[Address(RVA = "0xD6F7E0", Offset = "0xD6F7E0", VA = "0xD6F7E0", Slot = "6")]
			public override void Tick(float delta)
			{
			}

			[Token(Token = "0x60024AB")]
			[Address(RVA = "0xD700E4", Offset = "0xD700E4", VA = "0xD700E4", Slot = "9")]
			public override void CheckState()
			{
			}

			[Token(Token = "0x60024AC")]
			[Address(RVA = "0xD70178", Offset = "0xD70178", VA = "0xD70178")]
			private void OnCollision(Collision collision)
			{
			}
		}

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8A50", Offset = "0x8C8A50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8A50", Offset = "0x8C8A50")]
		private EngageStateWeight engageSelectionWeightSettings;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8AC0", Offset = "0x8C8AC0")]
		[SerializeField]
		private SpaceEntitySteering ramSteering;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8B0C", Offset = "0x8C8B0C")]
		private float ramInstantAcceleration;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8B58", Offset = "0x8C8B58")]
		private float chargeUpTime;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8BA4", Offset = "0x8C8BA4")]
		private float ramMinTime;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8BF0", Offset = "0x8C8BF0")]
		[SerializeField]
		private float breakTime;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8C3C", Offset = "0x8C8C3C")]
		private float breakDistanceThreshold;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8C88", Offset = "0x8C8C88")]
		[SerializeField]
		private float breakSpeedThreshold;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8CD4", Offset = "0x8C8CD4")]
		[SerializeField]
		private int charges;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8D20", Offset = "0x8C8D20")]
		private float minRammingDistance;

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0xCE9F48", Offset = "0xCE9F48", VA = "0xCE9F48", Slot = "4")]
		public override AiStateInstanceBase CreateStateInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0xCE9FD0", Offset = "0xCE9FD0", VA = "0xCE9FD0")]
		public RamState()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	public class RamStateShipCallbacks : MonoBehaviour
	{
		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8D6C", Offset = "0x8C8D6C")]
		public UnityEvent onChargeStart;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8DA4", Offset = "0x8C8DA4")]
		public UnityEvent onChargeStop;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8DDC", Offset = "0x8C8DDC")]
		public UnityEvent onRamStart;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8E14", Offset = "0x8C8E14")]
		public UnityEvent onRamStop;

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xCEA03C", Offset = "0xCEA03C", VA = "0xCEA03C")]
		public RamStateShipCallbacks()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	public class SpeedBoostCallbacks : MonoBehaviour
	{
		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8E4C", Offset = "0x8C8E4C")]
		public UnityEvent onBoostStart;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8E84", Offset = "0x8C8E84")]
		public UnityEvent onBoostStop;

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xF237E4", Offset = "0xF237E4", VA = "0xF237E4")]
		public SpeedBoostCallbacks()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005BD")]
	public struct SupportStateWeight
	{
		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float friendlyInKeepRangeWeight;
	}
	[Token(Token = "0x20005BE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB364", Offset = "0x8AB364")]
	public class SupportState : AiState
	{
		[Token(Token = "0x20005BF")]
		private class StateInstance : AiStateInstanceBase
		{
			[Token(Token = "0x20005C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB3D0", Offset = "0x8AB3D0")]
			private sealed class <>c__DisplayClass5_0
			{
				[Token(Token = "0x40020EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Transform ownerTransform;

				[Token(Token = "0x60024BC")]
				[Address(RVA = "0xEA036C", Offset = "0xEA036C", VA = "0xEA036C")]
				public <>c__DisplayClass5_0()
				{
				}

				[Token(Token = "0x60024BD")]
				[Address(RVA = "0xEAE7C0", Offset = "0xEAE7C0", VA = "0xEAE7C0")]
				internal SpaceEntitySteering.PositionData <Tick>b__0(Transform t)
				{
					return default(SpaceEntitySteering.PositionData);
				}
			}

			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private readonly SupportState state;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private float targetTimer;

			[Token(Token = "0x60024B6")]
			[Address(RVA = "0xE9F834", Offset = "0xE9F834", VA = "0xE9F834")]
			public StateInstance(AiBrainInstanceBase brain, SupportState supportState)
			{
			}

			[Token(Token = "0x60024B7")]
			[Address(RVA = "0xE9F890", Offset = "0xE9F890", VA = "0xE9F890", Slot = "7")]
			public override void ActivateState()
			{
			}

			[Token(Token = "0x60024B8")]
			[Address(RVA = "0xE9F96C", Offset = "0xE9F96C", VA = "0xE9F96C", Slot = "8")]
			public override void DeactivateState()
			{
			}

			[Token(Token = "0x60024B9")]
			[Address(RVA = "0xE9FA6C", Offset = "0xE9FA6C", VA = "0xE9FA6C", Slot = "6")]
			public override void Tick(float delta)
			{
			}

			[Token(Token = "0x60024BA")]
			[Address(RVA = "0xEA00F8", Offset = "0xEA00F8", VA = "0xEA00F8")]
			private IDamagable FindTarget()
			{
				return null;
			}

			[Token(Token = "0x60024BB")]
			[Address(RVA = "0xEA0374", Offset = "0xEA0374", VA = "0xEA0374", Slot = "9")]
			public override void CheckState()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB3E0", Offset = "0x8AB3E0")]
		private sealed class <>c
		{
			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<ShipAbilityActive> <>9__15_0;

			[Token(Token = "0x60024BF")]
			[Address(RVA = "0xE9F7C4", Offset = "0xE9F7C4", VA = "0xE9F7C4")]
			public <>c()
			{
			}

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0xE9F7CC", Offset = "0xE9F7CC", VA = "0xE9F7CC")]
			internal bool <CheckState>b__15_0(ShipAbilityActive p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8EBC", Offset = "0x8C8EBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8EBC", Offset = "0x8C8EBC")]
		[SerializeField]
		private EngageStateWeight engageSelectionWeightSettings;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8F2C", Offset = "0x8C8F2C")]
		[SerializeField]
		private SupportStateWeight supportSelectionWeightSettings;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8F78", Offset = "0x8C8F78")]
		[SerializeField]
		private SpaceEntitySteering optionalSteering;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8FC4", Offset = "0x8C8FC4")]
		[SerializeField]
		private float stickyTargetDelay;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9010", Offset = "0x8C9010")]
		[SerializeField]
		private bool faceTarget;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C905C", Offset = "0x8C905C")]
		private bool movementSeek;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C90A8", Offset = "0x8C90A8")]
		private bool movementArrive;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C90F4", Offset = "0x8C90F4")]
		private bool movementKeepRange;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9140", Offset = "0x8C9140")]
		private SpaceEntitySteering.SteerKeepRangeParameters keepRangeParameters;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C918C", Offset = "0x8C918C")]
		[SerializeField]
		private bool movementWander;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C91D8", Offset = "0x8C91D8")]
		[SerializeField]
		private bool movementObstacleAvoidance;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9224", Offset = "0x8C9224")]
		[SerializeField]
		private bool randomTarget;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private SpaceEntitySteering previousSteering;

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xF2A868", Offset = "0xF2A868", VA = "0xF2A868", Slot = "4")]
		public override AiStateInstanceBase CreateStateInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0xF2A8D8", Offset = "0xF2A8D8", VA = "0xF2A8D8")]
		public static float CheckState(float weight, AiBrainInstanceBase brain, EngageStateWeight engageStateWeight, SupportStateWeight supportStateWeight, SpaceEntitySteering.SteerKeepRangeParameters keepRangeParameters)
		{
			return default(float);
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0xF2AEF4", Offset = "0xF2AEF4", VA = "0xF2AEF4")]
		public SupportState()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class TeleportMineCallbacks : MonoBehaviour
	{
		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9270", Offset = "0x8C9270")]
		public UnityEvent onTeleportEnd;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C92A8", Offset = "0x8C92A8")]
		public UnityEvent onTeleportJumpEnd;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C92E0", Offset = "0x8C92E0")]
		public UnityEvent onLaunchMine;

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0xF324EC", Offset = "0xF324EC", VA = "0xF324EC")]
		public TeleportMineCallbacks()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB3F0", Offset = "0x8AB3F0")]
	public class WanderState : AiState
	{
		[Token(Token = "0x20005C4")]
		private class StateInstance : AiStateInstanceBase
		{
			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float wanderPlayAreaDistanceMin;

			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float wanderPlayAreaDistanceMax;

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0xEA8D4C", Offset = "0xEA8D4C", VA = "0xEA8D4C")]
			public StateInstance(AiBrainInstanceBase brain, WanderState wanderState)
			{
			}

			[Token(Token = "0x60024C5")]
			[Address(RVA = "0xEA8DA8", Offset = "0xEA8DA8", VA = "0xEA8DA8", Slot = "6")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9318", Offset = "0x8C9318")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9318", Offset = "0x8C9318")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C9318", Offset = "0x8C9318")]
		private float wanderPlayAreaDistanceMin;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C93A0", Offset = "0x8C93A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C93A0", Offset = "0x8C93A0")]
		[SerializeField]
		private float wanderPlayAreaDistanceMax;

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xE00588", Offset = "0xE00588", VA = "0xE00588", Slot = "4")]
		public override AiStateInstanceBase CreateStateInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0xE005F8", Offset = "0xE005F8", VA = "0xE005F8")]
		public WanderState()
		{
		}
	}
}
namespace Game.Ai.Actions
{
	[Token(Token = "0x20005C5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB45C", Offset = "0x8AB45C")]
	public class AutoCannon : AiAction
	{
		[Token(Token = "0x20005C6")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool canTargetProjectiles;

			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float useTimer;

			[Token(Token = "0x60024C8")]
			[Address(RVA = "0xC61420", Offset = "0xC61420", VA = "0xC61420")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared, bool canTargetProjectiles)
			{
			}

			[Token(Token = "0x60024C9")]
			[Address(RVA = "0xC61454", Offset = "0xC61454", VA = "0xC61454", Slot = "7")]
			public override void DeactivateAction()
			{
			}

			[Token(Token = "0x60024CA")]
			[Address(RVA = "0xC61628", Offset = "0xC61628", VA = "0xC61628", Slot = "5")]
			public override void Tick(float delta)
			{
			}

			[Token(Token = "0x60024CB")]
			[Address(RVA = "0xC61C1C", Offset = "0xC61C1C", VA = "0xC61C1C")]
			private bool TryActivateOnEnemy(ShipAbilityActiveCannon cannon)
			{
				return default(bool);
			}

			[Token(Token = "0x60024CC")]
			[Address(RVA = "0xC619BC", Offset = "0xC619BC", VA = "0xC619BC")]
			private bool TryActivateOnProjectile(ShipAbilityActiveCannon cannon)
			{
				return default(bool);
			}

			[Token(Token = "0x60024CD")]
			[Address(RVA = "0xC61E7C", Offset = "0xC61E7C", VA = "0xC61E7C")]
			private bool IsInCannonRange(ShipAbilityActiveCannon cannon, Transform transform)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool canTargetProjectiles;

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xEF6ADC", Offset = "0xEF6ADC", VA = "0xEF6ADC", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xEF6B80", Offset = "0xEF6B80", VA = "0xEF6B80")]
		public AutoCannon()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB4C8", Offset = "0x8AB4C8")]
	public class ClusterCannon : AiAction
	{
		[Token(Token = "0x20005C8")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x60024D0")]
			[Address(RVA = "0xC650BC", Offset = "0xC650BC", VA = "0xC650BC")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared)
			{
			}

			[Token(Token = "0x60024D1")]
			[Address(RVA = "0xC650C8", Offset = "0xC650C8", VA = "0xC650C8", Slot = "7")]
			public override void DeactivateAction()
			{
			}

			[Token(Token = "0x60024D2")]
			[Address(RVA = "0xC6529C", Offset = "0xC6529C", VA = "0xC6529C", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xFE88E8", Offset = "0xFE88E8", VA = "0xFE88E8", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0xFE8984", Offset = "0xFE8984", VA = "0xFE8984")]
		public ClusterCannon()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB534", Offset = "0x8AB534")]
	public class ClusterLauncher : AiAction
	{
		[Token(Token = "0x20005CA")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x60024D5")]
			[Address(RVA = "0xC6577C", Offset = "0xC6577C", VA = "0xC6577C")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared)
			{
			}

			[Token(Token = "0x60024D6")]
			[Address(RVA = "0xC65788", Offset = "0xC65788", VA = "0xC65788", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xFE898C", Offset = "0xFE898C", VA = "0xFE898C", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xFE8A28", Offset = "0xFE8A28", VA = "0xFE8A28")]
		public ClusterLauncher()
		{
		}
	}
	[Token(Token = "0x20005CB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB5A0", Offset = "0x8AB5A0")]
	public class CutLaser : AiAction
	{
		[Token(Token = "0x20005CC")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x60024D9")]
			[Address(RVA = "0xC6CA14", Offset = "0xC6CA14", VA = "0xC6CA14")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared)
			{
			}

			[Token(Token = "0x60024DA")]
			[Address(RVA = "0xC6CA20", Offset = "0xC6CA20", VA = "0xC6CA20", Slot = "7")]
			public override void DeactivateAction()
			{
			}

			[Token(Token = "0x60024DB")]
			[Address(RVA = "0xC6CCBC", Offset = "0xC6CCBC", VA = "0xC6CCBC", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xC47530", Offset = "0xC47530", VA = "0xC47530", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xC475CC", Offset = "0xC475CC", VA = "0xC475CC")]
		public CutLaser()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB60C", Offset = "0x8AB60C")]
	public class FireLasers : AiAction
	{
		[Token(Token = "0x20005CE")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool canTargetProjectiles;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			private bool targetFriendlies;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float useTimer;

			[Token(Token = "0x60024DE")]
			[Address(RVA = "0xC7647C", Offset = "0xC7647C", VA = "0xC7647C")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared, bool shouldTargetProjectiles, bool shouldTargetFriendlies)
			{
			}

			[Token(Token = "0x60024DF")]
			[Address(RVA = "0xC764C4", Offset = "0xC764C4", VA = "0xC764C4", Slot = "7")]
			public override void DeactivateAction()
			{
			}

			[Token(Token = "0x60024E0")]
			[Address(RVA = "0xC76698", Offset = "0xC76698", VA = "0xC76698", Slot = "5")]
			public override void Tick(float delta)
			{
			}

			[Token(Token = "0x60024E1")]
			[Address(RVA = "0xC76C8C", Offset = "0xC76C8C", VA = "0xC76C8C")]
			private bool TryActivateOnTarget(ShipAbilityActiveContinuousLaserBase laser)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E2")]
			[Address(RVA = "0xC76A2C", Offset = "0xC76A2C", VA = "0xC76A2C")]
			private bool TryActivateOnProjectile(ShipAbilityActiveContinuousLaserBase laser)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E3")]
			[Address(RVA = "0xC76F60", Offset = "0xC76F60", VA = "0xC76F60")]
			private bool IsInLaserRange(ShipAbilityActiveContinuousLaserBase laser, Transform transform)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool canTargetProjectiles;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool targetFriendlies;

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xC5C61C", Offset = "0xC5C61C", VA = "0xC5C61C", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0xC5C6D0", Offset = "0xC5C6D0", VA = "0xC5C6D0")]
		public FireLasers()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB678", Offset = "0x8AB678")]
	public class GuardianLaser : AiAction
	{
		[Serializable]
		[Token(Token = "0x20005D0")]
		public class ChargeLaserSettings
		{
			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimationCurve chargeupTime;

			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float chargeupTimeMax;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationCurve fireTime;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fireTimeMax;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float distance;

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0xED379C", Offset = "0xED379C", VA = "0xED379C")]
			public ChargeLaserSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D1")]
		public class CutLaserSettings
		{
			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float delay;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationCurve laserCountCurve;

			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C9464", Offset = "0x8C9464")]
			public int maxLaserCount;

			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float distance;

			[Token(Token = "0x60024E7")]
			[Address(RVA = "0xED3830", Offset = "0xED3830", VA = "0xED3830")]
			public CutLaserSettings()
			{
			}
		}

		[Token(Token = "0x20005D2")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x20005D3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB6E4", Offset = "0x8AB6E4")]
			private sealed class <FireLasersRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4002119")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400211A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x400211B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public ActionInstance <>4__this;

				[Token(Token = "0x400211C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private float <healthLostPerc>5__2;

				[Token(Token = "0x170006E9")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60024F2")]
					[Address(RVA = "0xEAE0C8", Offset = "0xEAE0C8", VA = "0xEAE0C8", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170006EA")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60024F4")]
					[Address(RVA = "0xEAE110", Offset = "0xEAE110", VA = "0xEAE110", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60024EF")]
				[Address(RVA = "0xEADC18", Offset = "0xEADC18", VA = "0xEADC18")]
				[DebuggerHidden]
				public <FireLasersRoutine>d__13(int <>1__state)
				{
				}

				[Token(Token = "0x60024F0")]
				[Address(RVA = "0xEADC44", Offset = "0xEADC44", VA = "0xEADC44", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60024F1")]
				[Address(RVA = "0xEADC48", Offset = "0xEADC48", VA = "0xEADC48", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60024F3")]
				[Address(RVA = "0xEAE0D0", Offset = "0xEAE0D0", VA = "0xEAE0D0", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ChargeLaserSettings chargeLaserSettings;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CutLaserSettings cutLaserSettings;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private bool isFiring;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
			private bool blockStateTransitionWhenFiring;

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private ShipAbilityActiveChargeLaser chargeLaser;

			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private ShipAbilityActiveCutLaser cutLaser;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Coroutine fireLasersRoutine;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private EngageState.StateInstance engageState;

			[Token(Token = "0x60024E8")]
			[Address(RVA = "0xED2DB4", Offset = "0xED2DB4", VA = "0xED2DB4")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared, ChargeLaserSettings chargeLaserSettings, CutLaserSettings cutLaserSettings, bool blockStateTransitionWhenFiring)
			{
			}

			[Token(Token = "0x60024E9")]
			[Address(RVA = "0xED32A8", Offset = "0xED32A8", VA = "0xED32A8", Slot = "7")]
			public override void DeactivateAction()
			{
			}

			[Token(Token = "0x60024EA")]
			[Address(RVA = "0xED33B8", Offset = "0xED33B8", VA = "0xED33B8", Slot = "8")]
			public override bool IsBlockingStateTransition()
			{
				return default(bool);
			}

			[Token(Token = "0x60024EB")]
			[Address(RVA = "0xED33D8", Offset = "0xED33D8", VA = "0xED33D8", Slot = "5")]
			public override void Tick(float delta)
			{
			}

			[Token(Token = "0x60024EC")]
			[Address(RVA = "0xED3594", Offset = "0xED3594", VA = "0xED3594")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6318", Offset = "0x8D6318")]
			private IEnumerator FireLasersRoutine()
			{
				return null;
			}

			[Token(Token = "0x60024ED")]
			[Address(RVA = "0xED360C", Offset = "0xED360C", VA = "0xED360C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6378", Offset = "0x8D6378")]
			private SpaceEntitySteering.PositionData <FireLasersRoutine>b__13_0()
			{
				return default(SpaceEntitySteering.PositionData);
			}

			[Token(Token = "0x60024EE")]
			[Address(RVA = "0xED36D4", Offset = "0xED36D4", VA = "0xED36D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6388", Offset = "0x8D6388")]
			private SpaceEntitySteering.PositionData <FireLasersRoutine>b__13_1()
			{
				return default(SpaceEntitySteering.PositionData);
			}
		}

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ChargeLaserSettings chargeLaserSettings;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CutLaserSettings cutLaserSettings;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool blockStateTransitionWhenFiring;

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xE33654", Offset = "0xE33654", VA = "0xE33654", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0xE3370C", Offset = "0xE3370C", VA = "0xE3370C")]
		public GuardianLaser()
		{
		}
	}
	[Token(Token = "0x20005D4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB6F4", Offset = "0x8AB6F4")]
	public class GuardianSpawnPod : AiAction
	{
		[Serializable]
		[Token(Token = "0x20005D5")]
		public class PodSpawnSettings
		{
			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimationCurve spawnCountPerWingCurve;

			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C948C", Offset = "0x8C948C")]
			public int maximumSpawnPerWing;

			[Token(Token = "0x60024F7")]
			[Address(RVA = "0xED3890", Offset = "0xED3890", VA = "0xED3890")]
			public PodSpawnSettings()
			{
			}
		}

		[Token(Token = "0x20005D6")]
		private class StateInstance : AiActionInstanceBase
		{
			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private PodSpawnSettings podSpawnSettings;

			[Token(Token = "0x60024F8")]
			[Address(RVA = "0xED38E4", Offset = "0xED38E4", VA = "0xED38E4")]
			public StateInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared, PodSpawnSettings podSpawnSettings)
			{
			}

			[Token(Token = "0x60024F9")]
			[Address(RVA = "0xED391C", Offset = "0xED391C", VA = "0xED391C", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PodSpawnSettings podSpawnSettings;

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xE3371C", Offset = "0xE3371C", VA = "0xE3371C", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0xE337C0", Offset = "0xE337C0", VA = "0xE337C0")]
		public GuardianSpawnPod()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB760", Offset = "0x8AB760")]
	public class LaunchGlueShot : AiAction
	{
		[Token(Token = "0x20005D8")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x60024FC")]
			[Address(RVA = "0xED6A10", Offset = "0xED6A10", VA = "0xED6A10")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared)
			{
			}

			[Token(Token = "0x60024FD")]
			[Address(RVA = "0xED6A1C", Offset = "0xED6A1C", VA = "0xED6A1C", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xD5925C", Offset = "0xD5925C", VA = "0xD5925C", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xD592F8", Offset = "0xD592F8", VA = "0xD592F8")]
		public LaunchGlueShot()
		{
		}
	}
	[Token(Token = "0x20005D9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB7CC", Offset = "0x8AB7CC")]
	public class LaunchMegaMines : AiAction
	{
		[Token(Token = "0x20005DA")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float extraOvershootDistance;

			[Token(Token = "0x6002500")]
			[Address(RVA = "0xED6FE8", Offset = "0xED6FE8", VA = "0xED6FE8")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared, float extraOvershootDistance)
			{
			}

			[Token(Token = "0x6002501")]
			[Address(RVA = "0xED7020", Offset = "0xED7020", VA = "0xED7020", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C94CC", Offset = "0x8C94CC")]
		private float extraOvershootDistance;

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xD59300", Offset = "0xD59300", VA = "0xD59300", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xD593AC", Offset = "0xD593AC", VA = "0xD593AC")]
		public LaunchMegaMines()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB838", Offset = "0x8AB838")]
	public class LaunchMineBurst : AiAction
	{
		[Token(Token = "0x20005DC")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x4002127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float extraOvershootDistance;

			[Token(Token = "0x6002504")]
			[Address(RVA = "0xED7A24", Offset = "0xED7A24", VA = "0xED7A24")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared, float extraOvershootDistance)
			{
			}

			[Token(Token = "0x6002505")]
			[Address(RVA = "0xED7A5C", Offset = "0xED7A5C", VA = "0xED7A5C", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9518", Offset = "0x8C9518")]
		private float extraOvershootDistance;

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xD593B4", Offset = "0xD593B4", VA = "0xD593B4", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xD59460", Offset = "0xD59460", VA = "0xD59460")]
		public LaunchMineBurst()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB8A4", Offset = "0x8AB8A4")]
	public class LaunchMines : AiAction
	{
		[Token(Token = "0x20005DE")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float extraOvershootDistance;

			[Token(Token = "0x6002508")]
			[Address(RVA = "0xED84F0", Offset = "0xED84F0", VA = "0xED84F0")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared, float extraOvershootDistance)
			{
			}

			[Token(Token = "0x6002509")]
			[Address(RVA = "0xED8528", Offset = "0xED8528", VA = "0xED8528", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9564", Offset = "0x8C9564")]
		private float extraOvershootDistance;

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xD59468", Offset = "0xD59468", VA = "0xD59468", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0xD59514", Offset = "0xD59514", VA = "0xD59514")]
		public LaunchMines()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB910", Offset = "0x8AB910")]
	public class LaunchMissiles : AiAction
	{
		[Token(Token = "0x20005E0")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x600250C")]
			[Address(RVA = "0xED8F2C", Offset = "0xED8F2C", VA = "0xED8F2C")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared)
			{
			}

			[Token(Token = "0x600250D")]
			[Address(RVA = "0xED8F38", Offset = "0xED8F38", VA = "0xED8F38", Slot = "7")]
			public override void DeactivateAction()
			{
			}

			[Token(Token = "0x600250E")]
			[Address(RVA = "0xED9388", Offset = "0xED9388", VA = "0xED9388", Slot = "5")]
			public override void Tick(float delta)
			{
			}

			[Token(Token = "0x600250F")]
			[Address(RVA = "0xED9B84", Offset = "0xED9B84", VA = "0xED9B84")]
			private bool IsInHiveRange(ShipAbilityActiveHiveLauncher hiveLauncher, Transform transform)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0xD5951C", Offset = "0xD5951C", VA = "0xD5951C", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0xD595B8", Offset = "0xD595B8", VA = "0xD595B8")]
		public LaunchMissiles()
		{
		}
	}
	[Token(Token = "0x20005E1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB97C", Offset = "0x8AB97C")]
	public class LaunchShield : AiAction
	{
		[Token(Token = "0x20005E2")]
		private class StateInstance : AiActionInstanceBase
		{
			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector2 activationDistanceSpan;

			[Token(Token = "0x6002512")]
			[Address(RVA = "0xED9C4C", Offset = "0xED9C4C", VA = "0xED9C4C")]
			public StateInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared, Vector2 activationDistanceSpan)
			{
			}

			[Token(Token = "0x6002513")]
			[Address(RVA = "0xED9C88", Offset = "0xED9C88", VA = "0xED9C88", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C95B0", Offset = "0x8C95B0")]
		[SerializeField]
		private Vector2 activationDistanceSpan;

		[Token(Token = "0x6002510")]
		[Address(RVA = "0xD595C0", Offset = "0xD595C0", VA = "0xD595C0", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0xD59670", Offset = "0xD59670", VA = "0xD59670")]
		public LaunchShield()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AB9E8", Offset = "0x8AB9E8")]
	public class TeleportMineLauncher : AiAction
	{
		[Token(Token = "0x20005E4")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float teleportTimer;

			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int teleportMaxAmount;

			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int currentTeleportCount;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool canSpawnMine;

			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private readonly float mineDelay;

			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float mineSpawnTimer;

			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TeleportMineCallbacks teleportMineCallbacks;

			[Token(Token = "0x6002516")]
			[Address(RVA = "0xEA05C0", Offset = "0xEA05C0", VA = "0xEA05C0")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared, int teleportMaxAmount, float mineDelay)
			{
			}

			[Token(Token = "0x6002517")]
			[Address(RVA = "0xEA069C", Offset = "0xEA069C", VA = "0xEA069C", Slot = "8")]
			public override bool IsBlockingStateTransition()
			{
				return default(bool);
			}

			[Token(Token = "0x6002518")]
			[Address(RVA = "0xEA06BC", Offset = "0xEA06BC", VA = "0xEA06BC", Slot = "6")]
			public override void ActivateAction(AiStateInstanceBase state)
			{
			}

			[Token(Token = "0x6002519")]
			[Address(RVA = "0xEA06E8", Offset = "0xEA06E8", VA = "0xEA06E8", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C95FC", Offset = "0x8C95FC")]
		[SerializeField]
		private int teleportMaxAmount;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9648", Offset = "0x8C9648")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9648", Offset = "0x8C9648")]
		private float mineSpawnUseDelay;

		[Token(Token = "0x6002514")]
		[Address(RVA = "0xF324F4", Offset = "0xF324F4", VA = "0xF324F4", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xF325A8", Offset = "0xF325A8", VA = "0xF325A8")]
		public TeleportMineLauncher()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABA54", Offset = "0x8ABA54")]
	public class UseForcefield : AiAction
	{
		[Token(Token = "0x20005E6")]
		private class StateInstance : AiActionInstanceBase
		{
			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector2 activationDistanceSpan;

			[Token(Token = "0x600251C")]
			[Address(RVA = "0xEA2780", Offset = "0xEA2780", VA = "0xEA2780")]
			public StateInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared, Vector2 activationDistanceSpan)
			{
			}

			[Token(Token = "0x600251D")]
			[Address(RVA = "0xEA27BC", Offset = "0xEA27BC", VA = "0xEA27BC", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C96B8", Offset = "0x8C96B8")]
		private Vector2 activationDistanceSpan;

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x10B8EEC", Offset = "0x10B8EEC", VA = "0x10B8EEC", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x10B8F9C", Offset = "0x10B8F9C", VA = "0x10B8F9C")]
		public UseForcefield()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABAC0", Offset = "0x8ABAC0")]
	public class UseSpawnShip : AiAction
	{
		[Token(Token = "0x20005E8")]
		private class StateInstance : AiActionInstanceBase
		{
			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector2 activationDistanceSpan;

			[Token(Token = "0x6002520")]
			[Address(RVA = "0xEA2A24", Offset = "0xEA2A24", VA = "0xEA2A24")]
			public StateInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared, Vector2 activationDistanceSpan)
			{
			}

			[Token(Token = "0x6002521")]
			[Address(RVA = "0xEA2A60", Offset = "0xEA2A60", VA = "0xEA2A60", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9704", Offset = "0x8C9704")]
		private Vector2 activationDistanceSpan;

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x10B9560", Offset = "0x10B9560", VA = "0x10B9560", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x10B9610", Offset = "0x10B9610", VA = "0x10B9610")]
		public UseSpawnShip()
		{
		}
	}
	[Token(Token = "0x20005E9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABB2C", Offset = "0x8ABB2C")]
	public class UseSurroundSpawner : AiAction
	{
		[Token(Token = "0x20005EA")]
		private class ActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float useTimer;

			[Token(Token = "0x6002524")]
			[Address(RVA = "0xEA2D30", Offset = "0xEA2D30", VA = "0xEA2D30")]
			public ActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared)
			{
			}

			[Token(Token = "0x6002525")]
			[Address(RVA = "0xEA2D3C", Offset = "0xEA2D3C", VA = "0xEA2D3C", Slot = "5")]
			public override void Tick(float delta)
			{
			}
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x10B9624", Offset = "0x10B9624", VA = "0x10B9624", Slot = "4")]
		public override AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain)
		{
			return null;
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x10B96C0", Offset = "0x10B96C0", VA = "0x10B96C0")]
		public UseSurroundSpawner()
		{
		}
	}
	[Token(Token = "0x20005EB")]
	public abstract class AiAction : ScriptableObject
	{
		[Token(Token = "0x20005EC")]
		private class AiActionInstance : AiActionInstanceBase
		{
			[Token(Token = "0x6002529")]
			[Address(RVA = "0xE04800", Offset = "0xE04800", VA = "0xE04800")]
			public AiActionInstance(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared)
			{
			}
		}

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9750", Offset = "0x8C9750")]
		protected Vector2 startDelaySpan;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C979C", Offset = "0x8C979C")]
		protected Vector2 useDelaySpan;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C97E8", Offset = "0x8C97E8")]
		protected bool shared;

		[Token(Token = "0x170006EB")]
		public bool Shared
		{
			[Token(Token = "0x6002526")]
			[Address(RVA = "0xEE7108", Offset = "0xEE7108", VA = "0xEE7108")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002527")]
		public abstract AiActionInstanceBase CreateActionInstance(AiBrainInstanceBase brain);

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xEE7110", Offset = "0xEE7110", VA = "0xEE7110")]
		protected AiAction()
		{
		}
	}
	[Token(Token = "0x20005ED")]
	public class AiActionInstanceBase
	{
		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected AiBrainInstanceBase brain;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Vector2 startDelaySpan;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Vector2 useDelaySpan;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool shared;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		protected bool firstActivate;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		protected bool activated;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected AiStateInstanceBase state;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float useDelay;

		[Token(Token = "0x600252A")]
		[Address(RVA = "0xEE7118", Offset = "0xEE7118", VA = "0xEE7118")]
		public AiActionInstanceBase(AiBrainInstanceBase brain, Vector2 startDelaySpan, Vector2 useDelaySpan, bool shared)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xEE7194", Offset = "0xEE7194", VA = "0xEE7194", Slot = "4")]
		public virtual void Setup(AiBrainInstanceBase brain)
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xEE71C0", Offset = "0xEE71C0", VA = "0xEE71C0", Slot = "5")]
		public virtual void Tick(float delta)
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0xEE71C4", Offset = "0xEE71C4", VA = "0xEE71C4", Slot = "6")]
		public virtual void ActivateAction(AiStateInstanceBase state)
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xEE7238", Offset = "0xEE7238", VA = "0xEE7238", Slot = "7")]
		public virtual void DeactivateAction()
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xEE7248", Offset = "0xEE7248", VA = "0xEE7248", Slot = "8")]
		public virtual bool IsBlockingStateTransition()
		{
			return default(bool);
		}

		[Token(Token = "0x6002530")]
		public ShipAbilityActive GetShipAbilityActive<T>()
		{
			return null;
		}

		[Token(Token = "0x6002531")]
		public ShipAbilityPassive GetShipAbilityPassive<T>()
		{
			return null;
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xEE7250", Offset = "0xEE7250", VA = "0xEE7250", Slot = "9")]
		protected virtual void UpdateRandomStartUseDelay()
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xEE727C", Offset = "0xEE727C", VA = "0xEE727C", Slot = "10")]
		protected virtual void UpdateRandomUseDelay()
		{
		}
	}
}
namespace Events
{
	[Token(Token = "0x20005EE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABB98", Offset = "0x8ABB98")]
	public class ConBackgroundObject : ScriptableObject
	{
		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite backgroundSprite;

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xFE9648", Offset = "0xFE9648", VA = "0xFE9648")]
		public ConBackgroundObject()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABC00", Offset = "0x8ABC00")]
	public class ConNpcObject : ScriptableObject
	{
		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9834", Offset = "0x8C9834")]
		public LocalizationKey NpcName;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Portrait;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float zOffset;

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xFE9774", Offset = "0xFE9774", VA = "0xFE9774")]
		public ConNpcObject()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABC68", Offset = "0x8ABC68")]
	public class ConRewardObjectAmmo : ConRewardObjectBase
	{
		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C986C", Offset = "0x8C986C")]
		[SerializeField]
		private int ammoChange;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ammoAsPickups;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C98C8", Offset = "0x8C98C8")]
		private SectorTag maxAmmoMultiplierStat;

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xFE977C", Offset = "0xFE977C", VA = "0xFE977C", Slot = "4")]
		public override void GetReward(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xFE99F8", Offset = "0xFE99F8", VA = "0xFE99F8", Slot = "5")]
		public override bool CheckRewardConditions()
		{
			return default(bool);
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xFE9A00", Offset = "0xFE9A00", VA = "0xFE9A00", Slot = "6")]
		protected override void FormatRewardDisplay(ConversationFormatting formatting, Dictionary<string, string> values, ref ConversationFormatting.ValueFormat defaultFormatter)
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xFE9B70", Offset = "0xFE9B70", VA = "0xFE9B70")]
		public ConRewardObjectAmmo()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	public abstract class ConRewardObjectBase : ScriptableObject
	{
		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9914", Offset = "0x8C9914")]
		[SerializeField]
		private LocalizationKey overrideTextKey;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string overrideTextFormat;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool showReward;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool showChance;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		protected bool checkConditions;

		[Token(Token = "0x600253A")]
		public abstract void GetReward(ConversationEvent conversation);

		[Token(Token = "0x600253B")]
		public abstract bool CheckRewardConditions();

		[Token(Token = "0x600253C")]
		protected abstract void FormatRewardDisplay(ConversationFormatting formatting, Dictionary<string, string> values, ref ConversationFormatting.ValueFormat defaultFormatter);

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xFE9B98", Offset = "0xFE9B98", VA = "0xFE9B98")]
		public string FormatRewardDisplay(float chance)
		{
			return null;
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xFE9B84", Offset = "0xFE9B84", VA = "0xFE9B84")]
		protected ConRewardObjectBase()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABCD4", Offset = "0x8ABCD4")]
	public class ConRewardObjectBuff : ConRewardObjectBase
	{
		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C99A0", Offset = "0x8C99A0")]
		private BuffObject buff;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C99EC", Offset = "0x8C99EC")]
		[SerializeField]
		private int buffSectorDuration;

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xFE9DC0", Offset = "0xFE9DC0", VA = "0xFE9DC0", Slot = "4")]
		public override void GetReward(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xFE9F04", Offset = "0xFE9F04", VA = "0xFE9F04", Slot = "5")]
		public override bool CheckRewardConditions()
		{
			return default(bool);
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xFE9F0C", Offset = "0xFE9F0C", VA = "0xFE9F0C", Slot = "6")]
		protected override void FormatRewardDisplay(ConversationFormatting formatting, Dictionary<string, string> values, ref ConversationFormatting.ValueFormat defaultFormatter)
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xFEA01C", Offset = "0xFEA01C", VA = "0xFEA01C")]
		public ConRewardObjectBuff()
		{
		}
	}
	[Token(Token = "0x20005F3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABD40", Offset = "0x8ABD40")]
	public class ConRewardObjectCurrency : ConRewardObjectBase
	{
		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9A38", Offset = "0x8C9A38")]
		[SerializeField]
		private int scrapChange;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int experienceChange;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int storyKeyChange;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool currencyAsPickups;

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xFEA030", Offset = "0xFEA030", VA = "0xFEA030", Slot = "4")]
		public override void GetReward(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xFEA48C", Offset = "0xFEA48C", VA = "0xFEA48C", Slot = "5")]
		public override bool CheckRewardConditions()
		{
			return default(bool);
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0xFEA6A4", Offset = "0xFEA6A4", VA = "0xFEA6A4", Slot = "6")]
		protected override void FormatRewardDisplay(ConversationFormatting formatting, Dictionary<string, string> values, ref ConversationFormatting.ValueFormat defaultFormatter)
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xFEA8B4", Offset = "0xFEA8B4", VA = "0xFEA8B4")]
		public ConRewardObjectCurrency()
		{
		}
	}
	[Token(Token = "0x20005F4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABDAC", Offset = "0x8ABDAC")]
	public class ConRewardObjectHealth : ConRewardObjectBase
	{
		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9AB4", Offset = "0x8C9AB4")]
		[SerializeField]
		private float healthChangePercent;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float shieldChangePercent;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool healthAsPickups;

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xFEA8C8", Offset = "0xFEA8C8", VA = "0xFEA8C8", Slot = "4")]
		public override void GetReward(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xFEAD84", Offset = "0xFEAD84", VA = "0xFEAD84", Slot = "5")]
		public override bool CheckRewardConditions()
		{
			return default(bool);
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xFEAD8C", Offset = "0xFEAD8C", VA = "0xFEAD8C", Slot = "6")]
		protected override void FormatRewardDisplay(ConversationFormatting formatting, Dictionary<string, string> values, ref ConversationFormatting.ValueFormat defaultFormatter)
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xFEAF08", Offset = "0xFEAF08", VA = "0xFEAF08")]
		public ConRewardObjectHealth()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABE18", Offset = "0x8ABE18")]
	public class ConRewardObjectLogicBomb : ConRewardObjectBase
	{
		[Token(Token = "0x600254B")]
		[Address(RVA = "0xFEAF1C", Offset = "0xFEAF1C", VA = "0xFEAF1C", Slot = "4")]
		public override void GetReward(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xFEAF20", Offset = "0xFEAF20", VA = "0xFEAF20", Slot = "5")]
		public override bool CheckRewardConditions()
		{
			return default(bool);
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0xFEAFE8", Offset = "0xFEAFE8", VA = "0xFEAFE8", Slot = "6")]
		protected override void FormatRewardDisplay(ConversationFormatting formatting, Dictionary<string, string> values, ref ConversationFormatting.ValueFormat defaultFormatter)
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0xFEAFEC", Offset = "0xFEAFEC", VA = "0xFEAFEC")]
		public ConRewardObjectLogicBomb()
		{
		}
	}
	[Token(Token = "0x20005F6")]
	public enum RunAbilityRewardEffect
	{
		[Token(Token = "0x4002161")]
		Add = 0,
		[Token(Token = "0x4002162")]
		Remove = 10,
		[Token(Token = "0x4002163")]
		LevelIncrement = 20,
		[Token(Token = "0x4002164")]
		LevelDecrement = 21,
		[Token(Token = "0x4002165")]
		LevelMaximum = 22,
		[Token(Token = "0x4002166")]
		LevelMinimum = 23
	}
	[Token(Token = "0x20005F7")]
	public enum RunAbilityRewardType
	{
		[Token(Token = "0x4002168")]
		Both = 0,
		[Token(Token = "0x4002169")]
		Ability = 1,
		[Token(Token = "0x400216A")]
		Defect = 10
	}
	[Token(Token = "0x20005F8")]
	public enum RunAbilityRewardSelection
	{
		[Token(Token = "0x400216C")]
		Random = 0,
		[Token(Token = "0x400216D")]
		Drafted = 10
	}
	[Token(Token = "0x20005F9")]
	public enum RunAbilityRewardLevelCompare
	{
		[Token(Token = "0x400216F")]
		Exact = 0,
		[Token(Token = "0x4002170")]
		Minimum = 10,
		[Token(Token = "0x4002171")]
		Maximum = 20
	}
	[Token(Token = "0x20005FA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABE84", Offset = "0x8ABE84")]
	public class ConRewardObjectPassiveAbility : ConRewardObjectBase
	{
		[Token(Token = "0x20005FB")]
		public enum ConPassiveAbilityPickWeight
		{
			[Token(Token = "0x4002181")]
			Equal,
			[Token(Token = "0x4002182")]
			PrioritizeLowerLevel,
			[Token(Token = "0x4002183")]
			PrioritizeHigherLevel
		}

		[Token(Token = "0x20005FC")]
		private abstract class ConPassiveAbilityPickDisplay : ConDisplay<ConPassiveAbilityPickDisplayOption>
		{
			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RunAbilityRewardEffect effect;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int effectCount;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RunAbilityRewardType type;

			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SectorTag category;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SectorTag tag;

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public RunAbilityRewardSelection selection;

			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public int level;

			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public RunAbilityRewardLevelCompare levelCompare;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public LocalizationKey text;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			protected Action<ShipAbilityPassive, ConPassiveAbilityPickDisplay> selectAction;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			protected int selectCount;

			[Token(Token = "0x600255F")]
			[Address(RVA = "0xC6629C", Offset = "0xC6629C", VA = "0xC6629C")]
			public ConPassiveAbilityPickDisplay(float exitTime, RunAbilityRewardEffect effect, int effectCount, RunAbilityRewardType type, SectorTag category, SectorTag tag, RunAbilityRewardSelection selection, int level, RunAbilityRewardLevelCompare levelCompare, LocalizationKey text, Action<ShipAbilityPassive, ConPassiveAbilityPickDisplay> selectAction)
			{
			}

			[Token(Token = "0x6002560")]
			[Address(RVA = "0xC663DC", Offset = "0xC663DC", VA = "0xC663DC")]
			public void InvokeSelectAction(ShipAbilityPassive ability)
			{
			}
		}

		[Token(Token = "0x20005FD")]
		private class ConPassiveAbilityPickDisplayFromPool : ConPassiveAbilityPickDisplay
		{
			[Token(Token = "0x6002561")]
			[Address(RVA = "0xC67434", Offset = "0xC67434", VA = "0xC67434")]
			public ConPassiveAbilityPickDisplayFromPool(float exitTime, RunAbilityRewardEffect effect, int effectCount, RunAbilityRewardType type, SectorTag category, SectorTag tag, RunAbilityRewardSelection selection, int level, RunAbilityRewardLevelCompare levelCompare, LocalizationKey text, Action<ShipAbilityPassive, ConPassiveAbilityPickDisplay> selectAction)
			{
			}

			[Token(Token = "0x6002562")]
			[Address(RVA = "0xC67460", Offset = "0xC67460", VA = "0xC67460", Slot = "6")]
			public override bool Display()
			{
				return default(bool);
			}

			[Token(Token = "0x6002563")]
			[Address(RVA = "0xC67778", Offset = "0xC67778", VA = "0xC67778")]
			private bool TryPickAbility(out ShipAbilityPassive ability)
			{
				return default(bool);
			}

			[Token(Token = "0x6002564")]
			[Address(RVA = "0xC67A54", Offset = "0xC67A54", VA = "0xC67A54")]
			public static bool CheckPickAbilityCondition(RunAbilityRewardType type, SectorTag category, SectorTag tag)
			{
				return default(bool);
			}

			[Token(Token = "0x6002565")]
			[Address(RVA = "0xC67D40", Offset = "0xC67D40", VA = "0xC67D40", Slot = "12")]
			public override bool OnPlayerInput(int selection)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005FE")]
		private class ConPassiveAbilityPickDisplayFromPlayerShip : ConPassiveAbilityPickDisplay
		{
			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<ShipAbilityPassive> abilityList;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private ConPassiveAbilityPickWeight abilityPickWeight;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static SectorTagsInput categoryTags;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static SectorTagCollection workTagCollection;

			[Token(Token = "0x6002566")]
			[Address(RVA = "0xC66450", Offset = "0xC66450", VA = "0xC66450")]
			public ConPassiveAbilityPickDisplayFromPlayerShip(float exitTime, RunAbilityRewardEffect effect, int effectCount, RunAbilityRewardType type, SectorTag category, SectorTag tag, RunAbilityRewardSelection selection, int level, RunAbilityRewardLevelCompare levelCompare, LocalizationKey text, Action<ShipAbilityPassive, ConPassiveAbilityPickDisplay> selectAction, ConPassiveAbilityPickWeight abilityPickWeight)
			{
			}

			[Token(Token = "0x6002567")]
			[Address(RVA = "0xC66564", Offset = "0xC66564", VA = "0xC66564", Slot = "6")]
			public override bool Display()
			{
				return default(bool);
			}

			[Token(Token = "0x6002568")]
			[Address(RVA = "0xC66894", Offset = "0xC66894", VA = "0xC66894")]
			private int RefreshAbilityList()
			{
				return default(int);
			}

			[Token(Token = "0x6002569")]
			[Address(RVA = "0xC66BD0", Offset = "0xC66BD0", VA = "0xC66BD0")]
			private static int RefreshAbilityList(List<ShipAbilityPassive> abilities, RunAbilityRewardType type, SectorTag category, SectorTag tag, int level, RunAbilityRewardLevelCompare levelCompare)
			{
				return default(int);
			}

			[Token(Token = "0x600256A")]
			[Address(RVA = "0xC66948", Offset = "0xC66948", VA = "0xC66948")]
			private bool TryPickAbility(out ShipAbilityPassive ability)
			{
				return default(bool);
			}

			[Token(Token = "0x600256B")]
			[Address(RVA = "0xC671B0", Offset = "0xC671B0", VA = "0xC671B0")]
			public static bool CheckPickAbilityCondition(RunAbilityRewardType type, SectorTag category, SectorTag tag, int level, RunAbilityRewardLevelCompare levelCompare)
			{
				return default(bool);
			}

			[Token(Token = "0x600256C")]
			[Address(RVA = "0xC67270", Offset = "0xC67270", VA = "0xC67270", Slot = "12")]
			public override bool OnPlayerInput(int selection)
			{
				return default(bool);
			}

			[Token(Token = "0x600256D")]
			[Address(RVA = "0xC6731C", Offset = "0xC6731C", VA = "0xC6731C")]
			private bool GetAbilitySelectionValid(ShipAbilityPassive ability)
			{
				return default(bool);
			}

			[Token(Token = "0x600256E")]
			[Address(RVA = "0xC67324", Offset = "0xC67324", VA = "0xC67324")]
			private int GetAbilitySelectionWeight(ShipAbilityPassive ability)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20005FF")]
		private class ConPassiveAbilityPickDisplayOption : ConDisplayOption
		{
			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ShipAbilityPassive ability;

			[Token(Token = "0x6002570")]
			[Address(RVA = "0xC66B98", Offset = "0xC66B98", VA = "0xC66B98")]
			public ConPassiveAbilityPickDisplayOption(LocalizationKey answer, ShipAbilityPassive ability)
			{
			}

			[Token(Token = "0x6002571")]
			[Address(RVA = "0xC6812C", Offset = "0xC6812C", VA = "0xC6812C", Slot = "4")]
			public override void OnPlayerSelect()
			{
			}

			[Token(Token = "0x6002572")]
			[Address(RVA = "0xC68204", Offset = "0xC68204", VA = "0xC68204", Slot = "5")]
			public override void AppendEffectText(StringBuilder builder)
			{
			}
		}

		[Token(Token = "0x4002172")]
		public const string COMPONENT_VALUE_TEXT_PARAMETER = "component";

		[Token(Token = "0x4002173")]
		public const string COMPONENT_AMOUNT_TEXT_PARAMETER = "amount";

		[Token(Token = "0x4002174")]
		public const int COMPONENT_CHOICE_COUNT = 3;

		[Token(Token = "0x4002175")]
		public const int COMPONENT_MAX_LEVEL = 3;

		[Token(Token = "0x4002176")]
		public const int COMPONENT_MIN_LEVEL = 1;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9B20", Offset = "0x8C9B20")]
		[SerializeField]
		private RunAbilityRewardEffect passiveAbilityEffect;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int passiveAbilityEffectCount;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private RunAbilityRewardType passiveAbilityType;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SectorTag passiveAbilityCategory;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C9B9C", Offset = "0x8C9B9C")]
		[SerializeField]
		private SectorTag passiveAbilityTag;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RunAbilityRewardSelection passiveAbilitySelection;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9BF8", Offset = "0x8C9BF8")]
		[SerializeField]
		private int passiveAbilityLevel;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RunAbilityRewardLevelCompare passiveAbilityLevelCompare;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9C54", Offset = "0x8C9C54")]
		private LocalizationKey dialogTextKey;

		[Token(Token = "0x600254F")]
		[Address(RVA = "0xFEB000", Offset = "0xFEB000", VA = "0xFEB000", Slot = "4")]
		public override void GetReward(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0xFEB180", Offset = "0xFEB180", VA = "0xFEB180")]
		private void GoToDisplayFromPool(ConversationEvent conversation, Action<ShipAbilityPassive, ConPassiveAbilityPickDisplay> selectAction)
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0xFEB27C", Offset = "0xFEB27C", VA = "0xFEB27C")]
		private void GoToDisplayFromPlayerShip(ConversationEvent conversation, Action<ShipAbilityPassive, ConPassiveAbilityPickDisplay> selectAction, ConPassiveAbilityPickWeight abilityPickWeight)
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xFEB428", Offset = "0xFEB428", VA = "0xFEB428")]
		private static void SelectRewardAdd(ShipAbilityPassive ability, ConPassiveAbilityPickDisplay display)
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xFEB5A8", Offset = "0xFEB5A8", VA = "0xFEB5A8")]
		private static void SelectRewardRemove(ShipAbilityPassive ability, ConPassiveAbilityPickDisplay display)
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xFEB708", Offset = "0xFEB708", VA = "0xFEB708")]
		private static void SelectRewardLevel(ShipAbilityPassive ability, ConPassiveAbilityPickDisplay display)
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xFEB984", Offset = "0xFEB984", VA = "0xFEB984", Slot = "5")]
		public override bool CheckRewardConditions()
		{
			return default(bool);
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xFEBA90", Offset = "0xFEBA90", VA = "0xFEBA90", Slot = "6")]
		protected override void FormatRewardDisplay(ConversationFormatting formatting, Dictionary<string, string> values, ref ConversationFormatting.ValueFormat defaultFormatter)
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xFEBDB0", Offset = "0xFEBDB0", VA = "0xFEBDB0")]
		private void FormatRewardDisplayAdd(ConversationFormatting formatting, Dictionary<string, string> values, ref ConversationFormatting.ValueFormat defaultFormatter, ref int formatLevel)
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xFEBFFC", Offset = "0xFEBFFC", VA = "0xFEBFFC")]
		private void FormatRewardDisplayRemove(ConversationFormatting formatting, Dictionary<string, string> values, ref ConversationFormatting.ValueFormat defaultFormatter, ref int formatLevel)
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xFEC100", Offset = "0xFEC100", VA = "0xFEC100")]
		private void FormatRewardDisplayLevel(ConversationFormatting formatting, Dictionary<string, string> values, ref ConversationFormatting.ValueFormat defaultFormatter, ref int formatLevel)
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xFEC2BC", Offset = "0xFEC2BC", VA = "0xFEC2BC")]
		private static ConversationFormatting.ValueFormat GetRewardFormat(ConversationFormatting.AbilityFormat format, int amount, int level, string tag, RunAbilityRewardSelection selection, RunAbilityRewardType type)
		{
			return default(ConversationFormatting.ValueFormat);
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xFEC394", Offset = "0xFEC394", VA = "0xFEC394")]
		private static ConversationFormatting.ValueFormat GetRewardFormat(ConversationFormatting.AbilityFormatSelection format, int amount, int level, string tag, RunAbilityRewardSelection selection)
		{
			return default(ConversationFormatting.ValueFormat);
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xFEC598", Offset = "0xFEC598", VA = "0xFEC598")]
		private static ConversationFormatting.ValueFormat GetRewardFormat(ConversationFormatting.AbilityFormatLevel format, int amount, int level)
		{
			return default(ConversationFormatting.ValueFormat);
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xFEC67C", Offset = "0xFEC67C", VA = "0xFEC67C")]
		private static ConversationFormatting.ValueFormat GetRewardFormat(ConversationFormatting.AbilityFormatAmount format, int amount)
		{
			return default(ConversationFormatting.ValueFormat);
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xFEC6C4", Offset = "0xFEC6C4", VA = "0xFEC6C4")]
		public ConRewardObjectPassiveAbility()
		{
		}
	}
	[Token(Token = "0x2000600")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABEF0", Offset = "0x8ABEF0")]
	public class ConRewardObjectStats : ConRewardObjectBase
	{
		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9CA0", Offset = "0x8C9CA0")]
		private float maxHealthChange;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool healMaxHealthChange;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float maxShieldChange;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool healMaxShieldChange;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float maxSpeed;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float specialAbilityDuration;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int maxAmmoChange;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8C9D4C", Offset = "0x8C9D4C")]
		private SectorTag maxAmmoMultiplierStat;

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xFEC6DC", Offset = "0xFEC6DC", VA = "0xFEC6DC", Slot = "4")]
		public override void GetReward(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xFECF28", Offset = "0xFECF28", VA = "0xFECF28", Slot = "5")]
		public override bool CheckRewardConditions()
		{
			return default(bool);
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xFECF30", Offset = "0xFECF30", VA = "0xFECF30", Slot = "6")]
		protected override void FormatRewardDisplay(ConversationFormatting formatting, Dictionary<string, string> values, ref ConversationFormatting.ValueFormat defaultFormatter)
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xFECCB0", Offset = "0xFECCB0", VA = "0xFECCB0")]
		public static BuffBase CreateAndAssignStatBuff(IBuffable buffable, float modifier, BasicStatBuffObject.ApplyMode mode, SectorTag targetSource, SectorTag targetStat, bool syncToGlobal = false, bool saveAsPermanent = true)
		{
			return null;
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xFED2B4", Offset = "0xFED2B4", VA = "0xFED2B4")]
		public ConRewardObjectStats()
		{
		}
	}
	[Token(Token = "0x2000601")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABF5C", Offset = "0x8ABF5C")]
	public class ConversationFormatting : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000602")]
		public struct ValueFormat
		{
			[Token(Token = "0x40021BA")]
			public const string PARAMETER_NAME_CHANCE = "chance";

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LocalizationKey formatKey;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string formatText;

			[Token(Token = "0x6002597")]
			[Address(RVA = "0xC6838C", Offset = "0xC6838C", VA = "0xC6838C")]
			public string Format(string value, float chance = -1f, [System.Runtime.InteropServices.Optional] ValueFormat formatChance)
			{
				return null;
			}

			[Token(Token = "0x6002598")]
			[Address(RVA = "0xC6B630", Offset = "0xC6B630", VA = "0xC6B630")]
			public string Format(Dictionary<string, string> values, float chance = -1f, [System.Runtime.InteropServices.Optional] ValueFormat formatChance, bool returnParametersToPool = true)
			{
				return null;
			}

			[Token(Token = "0x6002599")]
			[Address(RVA = "0xC6B5B0", Offset = "0xC6B5B0", VA = "0xC6B5B0")]
			public static string Format(LocalizationKey formatKey, string formatText, string value, float chance = -1f, [System.Runtime.InteropServices.Optional] ValueFormat formatChance)
			{
				return null;
			}

			[Token(Token = "0x600259A")]
			[Address(RVA = "0xC6B678", Offset = "0xC6B678", VA = "0xC6B678")]
			public static string Format(LocalizationKey formatKey, string formatText, Dictionary<string, string> values, float chance = -1f, [System.Runtime.InteropServices.Optional] ValueFormat formatChance, bool returnParametersToPool = true)
			{
				return null;
			}

			[Token(Token = "0x600259B")]
			[Address(RVA = "0xC6B8C0", Offset = "0xC6B8C0", VA = "0xC6B8C0")]
			public static string FormatPercentage(float value)
			{
				return null;
			}

			[Token(Token = "0x600259C")]
			[Address(RVA = "0xC6B814", Offset = "0xC6B814", VA = "0xC6B814")]
			public static string FormatClampedPercentage(float value)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000603")]
		public struct AbilityFormatAmount
		{
			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueFormat single;

			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueFormat multiple;
		}

		[Serializable]
		[Token(Token = "0x2000604")]
		public struct AbilityFormatLevel
		{
			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AbilityFormatAmount generic;

			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AbilityFormatAmount level;
		}

		[Serializable]
		[Token(Token = "0x2000605")]
		public struct AbilityFormatSelection
		{
			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AbilityFormatLevel random;

			[Token(Token = "0x40021C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public AbilityFormatLevel drafted;

			[Token(Token = "0x40021C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public ValueFormat specific;
		}

		[Serializable]
		[Token(Token = "0x2000606")]
		public struct AbilityFormat
		{
			[Token(Token = "0x40021C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AbilityFormatSelection ability;

			[Token(Token = "0x40021C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public AbilityFormatSelection defect;
		}

		[Serializable]
		[Token(Token = "0x2000607")]
		public struct AbilityFormatAdd
		{
			[Token(Token = "0x40021C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AbilityFormat generic;

			[Token(Token = "0x40021C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
			public AbilityFormatSelection category;
		}

		[Serializable]
		[Token(Token = "0x2000608")]
		public struct AbilityFormatRemove
		{
			[Token(Token = "0x40021C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AbilityFormat generic;
		}

		[Serializable]
		[Token(Token = "0x2000609")]
		public struct AbilityFormatLevelChange
		{
			[Token(Token = "0x40021C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AbilityFormatSelection upgrade;

			[Token(Token = "0x40021CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public AbilityFormatSelection downgrade;
		}

		[Serializable]
		[Token(Token = "0x200060A")]
		public struct AbilityFormatCategory
		{
			[Token(Token = "0x40021CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SectorTag category;

			[Token(Token = "0x40021CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizationKey name;
		}

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9D98", Offset = "0x8C9D98")]
		private ValueFormat formatChance;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ValueFormat formatOr;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9DF4", Offset = "0x8C9DF4")]
		[SerializeField]
		private ValueFormat formatScrapGain;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ValueFormat formatScrapLoss;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ValueFormat formatExperienceGain;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ValueFormat formatExperienceLoss;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ValueFormat formatStoryKeyGain;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ValueFormat formatStoryKeyLoss;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9E90", Offset = "0x8C9E90")]
		private ValueFormat formatHealthGain;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private ValueFormat formatHealthLoss;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private ValueFormat formatShieldGain;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private ValueFormat formatShieldLoss;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9F0C", Offset = "0x8C9F0C")]
		[SerializeField]
		private ValueFormat formatMaxHealthGain;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private ValueFormat formatMaxHealthLoss;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private ValueFormat formatMaxShieldGain;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private ValueFormat formatMaxShieldLoss;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private ValueFormat formatMaxSpeedGain;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private ValueFormat formatMaxSpeedLoss;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private ValueFormat formatSpecialAbilityDurationGain;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private ValueFormat formatSpecialAbilityDurationLoss;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9FC8", Offset = "0x8C9FC8")]
		[SerializeField]
		private ValueFormat formatAmmoGain;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private ValueFormat formatMaxAmmoGain;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private ValueFormat formatMaxAmmoLoss;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA034", Offset = "0x8CA034")]
		[SerializeField]
		private AbilityFormatAdd formatAbilityAdd;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		[SerializeField]
		private AbilityFormatRemove formatAbilityRemove;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
		[SerializeField]
		private AbilityFormatLevelChange formatAbilityLevel;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x828")]
		[SerializeField]
		private ValueFormat formatAbilityDescription;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x840")]
		[SerializeField]
		private ValueFormat formatDefectDescription;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x858")]
		[SerializeField]
		private AbilityFormatCategory[] formatAbilityCategories;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x860")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA0D0", Offset = "0x8CA0D0")]
		private ValueFormat formatBuff;

		[Token(Token = "0x170006EC")]
		public ValueFormat FormatChance
		{
			[Token(Token = "0x6002578")]
			[Address(RVA = "0xFF0E7C", Offset = "0xFF0E7C", VA = "0xFF0E7C")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006ED")]
		public ValueFormat FormatOr
		{
			[Token(Token = "0x6002579")]
			[Address(RVA = "0xFF0E90", Offset = "0xFF0E90", VA = "0xFF0E90")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006EE")]
		public ValueFormat FormatScrapGain
		{
			[Token(Token = "0x600257A")]
			[Address(RVA = "0xFF0EA4", Offset = "0xFF0EA4", VA = "0xFF0EA4")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006EF")]
		public ValueFormat FormatScrapLoss
		{
			[Token(Token = "0x600257B")]
			[Address(RVA = "0xFF0EB8", Offset = "0xFF0EB8", VA = "0xFF0EB8")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006F0")]
		public ValueFormat FormatExperienceGain
		{
			[Token(Token = "0x600257C")]
			[Address(RVA = "0xFF0ECC", Offset = "0xFF0ECC", VA = "0xFF0ECC")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006F1")]
		public ValueFormat FormatExperienceLoss
		{
			[Token(Token = "0x600257D")]
			[Address(RVA = "0xFF0EE0", Offset = "0xFF0EE0", VA = "0xFF0EE0")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006F2")]
		public ValueFormat FormatStoryKeyGain
		{
			[Token(Token = "0x600257E")]
			[Address(RVA = "0xFF0EF4", Offset = "0xFF0EF4", VA = "0xFF0EF4")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006F3")]
		public ValueFormat FormatStoryKeyLoss
		{
			[Token(Token = "0x600257F")]
			[Address(RVA = "0xFF0F08", Offset = "0xFF0F08", VA = "0xFF0F08")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006F4")]
		public ValueFormat FormatHealthGain
		{
			[Token(Token = "0x6002580")]
			[Address(RVA = "0xFF0F1C", Offset = "0xFF0F1C", VA = "0xFF0F1C")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006F5")]
		public ValueFormat FormatHealthLoss
		{
			[Token(Token = "0x6002581")]
			[Address(RVA = "0xFF0F30", Offset = "0xFF0F30", VA = "0xFF0F30")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006F6")]
		public ValueFormat FormatShieldGain
		{
			[Token(Token = "0x6002582")]
			[Address(RVA = "0xFF0F44", Offset = "0xFF0F44", VA = "0xFF0F44")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006F7")]
		public ValueFormat FormatShieldLoss
		{
			[Token(Token = "0x6002583")]
			[Address(RVA = "0xFF0F5C", Offset = "0xFF0F5C", VA = "0xFF0F5C")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006F8")]
		public ValueFormat FormatMaxHealthGain
		{
			[Token(Token = "0x6002584")]
			[Address(RVA = "0xFF0F70", Offset = "0xFF0F70", VA = "0xFF0F70")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006F9")]
		public ValueFormat FormatMaxHealthLoss
		{
			[Token(Token = "0x6002585")]
			[Address(RVA = "0xFF0F88", Offset = "0xFF0F88", VA = "0xFF0F88")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006FA")]
		public ValueFormat FormatMaxShieldGain
		{
			[Token(Token = "0x6002586")]
			[Address(RVA = "0xFF0F9C", Offset = "0xFF0F9C", VA = "0xFF0F9C")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006FB")]
		public ValueFormat FormatMaxShieldLoss
		{
			[Token(Token = "0x6002587")]
			[Address(RVA = "0xFF0FB4", Offset = "0xFF0FB4", VA = "0xFF0FB4")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006FC")]
		public ValueFormat FormatMaxSpeedGain
		{
			[Token(Token = "0x6002588")]
			[Address(RVA = "0xFF0FC8", Offset = "0xFF0FC8", VA = "0xFF0FC8")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006FD")]
		public ValueFormat FormatMaxSpeedLoss
		{
			[Token(Token = "0x6002589")]
			[Address(RVA = "0xFF0FE0", Offset = "0xFF0FE0", VA = "0xFF0FE0")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006FE")]
		public ValueFormat FormatSpecialAbilityDurationGain
		{
			[Token(Token = "0x600258A")]
			[Address(RVA = "0xFF0FF4", Offset = "0xFF0FF4", VA = "0xFF0FF4")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x170006FF")]
		public ValueFormat FormatSpecialAbilityDurationLoss
		{
			[Token(Token = "0x600258B")]
			[Address(RVA = "0xFF100C", Offset = "0xFF100C", VA = "0xFF100C")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x17000700")]
		public ValueFormat FormatAmmoGain
		{
			[Token(Token = "0x600258C")]
			[Address(RVA = "0xFF1020", Offset = "0xFF1020", VA = "0xFF1020")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x17000701")]
		public ValueFormat FormatMaxAmmoGain
		{
			[Token(Token = "0x600258D")]
			[Address(RVA = "0xFF1038", Offset = "0xFF1038", VA = "0xFF1038")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x17000702")]
		public ValueFormat FormatMaxAmmoLoss
		{
			[Token(Token = "0x600258E")]
			[Address(RVA = "0xFF104C", Offset = "0xFF104C", VA = "0xFF104C")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x17000703")]
		public AbilityFormatAdd FormatAbilityAdd
		{
			[Token(Token = "0x600258F")]
			[Address(RVA = "0xFF1064", Offset = "0xFF1064", VA = "0xFF1064")]
			get
			{
				return default(AbilityFormatAdd);
			}
		}

		[Token(Token = "0x17000704")]
		public AbilityFormatRemove FormatAbilityRemove
		{
			[Token(Token = "0x6002590")]
			[Address(RVA = "0xFF1074", Offset = "0xFF1074", VA = "0xFF1074")]
			get
			{
				return default(AbilityFormatRemove);
			}
		}

		[Token(Token = "0x17000705")]
		public AbilityFormatLevelChange FormatAbilityLevel
		{
			[Token(Token = "0x6002591")]
			[Address(RVA = "0xFF1084", Offset = "0xFF1084", VA = "0xFF1084")]
			get
			{
				return default(AbilityFormatLevelChange);
			}
		}

		[Token(Token = "0x17000706")]
		public ValueFormat FormatAbilityDescription
		{
			[Token(Token = "0x6002592")]
			[Address(RVA = "0xFF1094", Offset = "0xFF1094", VA = "0xFF1094")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x17000707")]
		public ValueFormat FormatDefectDescription
		{
			[Token(Token = "0x6002593")]
			[Address(RVA = "0xFF10AC", Offset = "0xFF10AC", VA = "0xFF10AC")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x17000708")]
		public ValueFormat FormatBuff
		{
			[Token(Token = "0x6002594")]
			[Address(RVA = "0xFF10C0", Offset = "0xFF10C0", VA = "0xFF10C0")]
			get
			{
				return default(ValueFormat);
			}
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xFEC468", Offset = "0xFEC468", VA = "0xFEC468")]
		public bool TryFormatAbilityCategory(SectorTag category, out AbilityFormatCategory format)
		{
			return default(bool);
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xFF10D4", Offset = "0xFF10D4", VA = "0xFF10D4")]
		public ConversationFormatting()
		{
		}
	}
	[Token(Token = "0x200060B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ABFC8", Offset = "0x8ABFC8")]
	public class EntryAbilityIndexEnabledObject : EntryBaseObject
	{
		[Token(Token = "0x200060C")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x40021CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int[] abilityIndices;

			[Token(Token = "0x40021D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool abilityEnabled;

			[Token(Token = "0x600259F")]
			[Address(RVA = "0xC6E4D0", Offset = "0xC6E4D0", VA = "0xC6E4D0")]
			public Instance(EntryAbilityIndexEnabledObject baseObject)
			{
			}

			[Token(Token = "0x60025A0")]
			[Address(RVA = "0xC6E518", Offset = "0xC6E518", VA = "0xC6E518", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int[] abilityIndices;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool abilityEnabled;

		[Token(Token = "0x17000709")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x600259D")]
			[Address(RVA = "0xC53D1C", Offset = "0xC53D1C", VA = "0xC53D1C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xC53D7C", Offset = "0xC53D7C", VA = "0xC53D7C")]
		public EntryAbilityIndexEnabledObject()
		{
		}
	}
	[Token(Token = "0x200060D")]
	public enum EntryAdvisorAction
	{
		[Token(Token = "0x40021D2")]
		None,
		[Token(Token = "0x40021D3")]
		EnableVisibleOutsideConversations,
		[Token(Token = "0x40021D4")]
		DisableVisibleOutsideConversations
	}
	[Token(Token = "0x200060E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC034", Offset = "0x8AC034")]
	public class EntryAdvisorObject : EntryBaseObject
	{
		[Token(Token = "0x200060F")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private EntryAdvisorAction advisorAction;

			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool updateVisibilityInstant;

			[Token(Token = "0x60025A3")]
			[Address(RVA = "0xC6E63C", Offset = "0xC6E63C", VA = "0xC6E63C")]
			public Instance(EntryAdvisorObject baseObject)
			{
			}

			[Token(Token = "0x60025A4")]
			[Address(RVA = "0xC6E67C", Offset = "0xC6E67C", VA = "0xC6E67C", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x60025A5")]
			[Address(RVA = "0xC6E794", Offset = "0xC6E794", VA = "0xC6E794", Slot = "5")]
			public override void OnInterupt()
			{
			}
		}

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private EntryAdvisorAction advisorAction;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool updateVisibilityInstant;

		[Token(Token = "0x1700070A")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60025A1")]
			[Address(RVA = "0xC53D94", Offset = "0xC53D94", VA = "0xC53D94", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xC53DF4", Offset = "0xC53DF4", VA = "0xC53DF4")]
		public EntryAdvisorObject()
		{
		}
	}
	[Token(Token = "0x2000610")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC0A0", Offset = "0x8AC0A0")]
	public class EntryBarkObject : EntryBaseObject
	{
		[Token(Token = "0x2000611")]
		private class InstanceBark : EventEntry
		{
			[Token(Token = "0x40021DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private BarkType barkType;

			[Token(Token = "0x40021DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float delay;

			[Token(Token = "0x60025A8")]
			[Address(RVA = "0xC6E870", Offset = "0xC6E870", VA = "0xC6E870")]
			public InstanceBark(EntryBarkObject baseObject)
			{
			}

			[Token(Token = "0x60025A9")]
			[Address(RVA = "0xC6E8B0", Offset = "0xC6E8B0", VA = "0xC6E8B0", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BarkType barkType;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float delay;

		[Token(Token = "0x1700070B")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60025A6")]
			[Address(RVA = "0xC53E04", Offset = "0xC53E04", VA = "0xC53E04", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xC53E64", Offset = "0xC53E64", VA = "0xC53E64")]
		public EntryBarkObject()
		{
		}
	}
	[Token(Token = "0x2000612")]
	public class EntryBaseObject : ScriptableObject
	{
		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA17C", Offset = "0x8CA17C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA17C", Offset = "0x8CA17C")]
		public EventRunEnum Run;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CA1DC", Offset = "0x8CA1DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA1DC", Offset = "0x8CA1DC")]
		public float RunWait;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA230", Offset = "0x8CA230")]
		public EventAudioData[] AudioToPlay;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA268", Offset = "0x8CA268")]
		public string[] AudioToStop;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA2A0", Offset = "0x8CA2A0")]
		private readonly EventEntry <GetEntry>k__BackingField;

		[Token(Token = "0x1700070C")]
		public virtual EventEntry GetEntry
		{
			[Token(Token = "0x60025AA")]
			[Address(RVA = "0xC53E6C", Offset = "0xC53E6C", VA = "0xC53E6C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D63E8", Offset = "0x8D63E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xC53D8C", Offset = "0xC53D8C", VA = "0xC53D8C")]
		public EntryBaseObject()
		{
		}
	}
	[Token(Token = "0x2000613")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC10C", Offset = "0x8AC10C")]
	public class EntryBlockScannableSpawnObject : EntryBaseObject
	{
		[Token(Token = "0x2000614")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x40021E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool blockScannableSpawn;

			[Token(Token = "0x60025AE")]
			[Address(RVA = "0xC6E97C", Offset = "0xC6E97C", VA = "0xC6E97C")]
			public Instance(EntryBlockScannableSpawnObject baseObject)
			{
			}

			[Token(Token = "0x60025AF")]
			[Address(RVA = "0xC6E9B4", Offset = "0xC6E9B4", VA = "0xC6E9B4", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool blockScannableSpawn;

		[Token(Token = "0x1700070D")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60025AC")]
			[Address(RVA = "0xC53E74", Offset = "0xC53E74", VA = "0xC53E74", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0xC53ED4", Offset = "0xC53ED4", VA = "0xC53ED4")]
		public EntryBlockScannableSpawnObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000615")]
	public struct ConditionalConversationObject
	{
		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EntryConversationObject conversationObject;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public EventCondition[] eventConditions;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SectorTagCollectionHierarchy tagConditions;

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0xFEEA14", Offset = "0xFEEA14", VA = "0xFEEA14")]
		public ConditionalConversationObject Validate()
		{
			return default(ConditionalConversationObject);
		}
	}
	[Token(Token = "0x2000616")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC178", Offset = "0x8AC178")]
	public class EntryConditionalConversationObject : EntryBaseObject
	{
		[Token(Token = "0x2000617")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x2000618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC1E4", Offset = "0x8AC1E4")]
			private sealed class <StartAsyncRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40021EB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40021EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40021ED")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x40021EE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private IEnumerator <routine>5__2;

				[Token(Token = "0x1700070F")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60025BB")]
					[Address(RVA = "0xEA973C", Offset = "0xEA973C", VA = "0xEA973C", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000710")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60025BD")]
					[Address(RVA = "0xEA9784", Offset = "0xEA9784", VA = "0xEA9784", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60025B8")]
				[Address(RVA = "0xEA9540", Offset = "0xEA9540", VA = "0xEA9540")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__5(int <>1__state)
				{
				}

				[Token(Token = "0x60025B9")]
				[Address(RVA = "0xEA956C", Offset = "0xEA956C", VA = "0xEA956C", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60025BA")]
				[Address(RVA = "0xEA9570", Offset = "0xEA9570", VA = "0xEA9570", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60025BC")]
				[Address(RVA = "0xEA9744", Offset = "0xEA9744", VA = "0xEA9744", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x40021E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ConditionalConversationObject[] conditionalConversations;

			[Token(Token = "0x40021E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private EventEntry conversationEntry;

			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

			[Token(Token = "0x60025B3")]
			[Address(RVA = "0xC6EA28", Offset = "0xC6EA28", VA = "0xC6EA28")]
			public Instance(EntryConditionalConversationObject baseObject)
			{
			}

			[Token(Token = "0x60025B4")]
			[Address(RVA = "0xC6EA74", Offset = "0xC6EA74", VA = "0xC6EA74")]
			private EventEntry SelectConversationObject()
			{
				return null;
			}

			[Token(Token = "0x60025B5")]
			[Address(RVA = "0xC6EC9C", Offset = "0xC6EC9C", VA = "0xC6EC9C", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D63F8", Offset = "0x8D63F8")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x60025B6")]
			[Address(RVA = "0xC6ED14", Offset = "0xC6ED14", VA = "0xC6ED14", Slot = "5")]
			public override void OnInterupt()
			{
			}
		}

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ConditionalConversationObject[] conditionalConversations;

		[Token(Token = "0x1700070E")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60025B1")]
			[Address(RVA = "0xC53EDC", Offset = "0xC53EDC", VA = "0xC53EDC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xC53F3C", Offset = "0xC53F3C", VA = "0xC53F3C")]
		public EntryConditionalConversationObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000619")]
	public struct ConditionalEventObject
	{
		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EventObject eventObject;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public EventCondition[] eventConditions;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SectorTagCollectionHierarchy tagConditions;

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xFEEA64", Offset = "0xFEEA64", VA = "0xFEEA64")]
		public ConditionalEventObject Validate()
		{
			return default(ConditionalEventObject);
		}
	}
	[Token(Token = "0x200061A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC1F4", Offset = "0x8AC1F4")]
	public class EntryConditionalEventObject : EntryBaseObject
	{
		[Token(Token = "0x200061B")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x40021F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ConditionalEventObject[] conditionalEvents;

			[Token(Token = "0x40021F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

			[Token(Token = "0x60025C1")]
			[Address(RVA = "0xC6EDA4", Offset = "0xC6EDA4", VA = "0xC6EDA4")]
			public Instance(EntryConditionalEventObject baseObject)
			{
			}

			[Token(Token = "0x60025C2")]
			[Address(RVA = "0xC6EDE0", Offset = "0xC6EDE0", VA = "0xC6EDE0")]
			private EventObject SelectEventObject()
			{
				return null;
			}

			[Token(Token = "0x60025C3")]
			[Address(RVA = "0xC6EF98", Offset = "0xC6EF98", VA = "0xC6EF98", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ConditionalEventObject[] conditionalEvents;

		[Token(Token = "0x17000711")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60025BF")]
			[Address(RVA = "0xC53F44", Offset = "0xC53F44", VA = "0xC53F44", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0xC53FA4", Offset = "0xC53FA4", VA = "0xC53FA4")]
		public EntryConditionalEventObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200061C")]
	public class WeightedRandom<T>
	{
		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NextRandomEntry<T>[] Possible;

		[Token(Token = "0x17000712")]
		public int TotalWeight
		{
			[Token(Token = "0x60025C5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60025C6")]
		public bool TryGetRandom(out T resultObj)
		{
			return default(bool);
		}

		[Token(Token = "0x60025C7")]
		public WeightedRandom<T> Validate()
		{
			return null;
		}

		[Token(Token = "0x60025C8")]
		public WeightedRandom()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200061D")]
	public class NextRandomEntry<T>
	{
		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public string ElementName;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T ResultObj;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isGuaranteed;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA2F0", Offset = "0x8CA2F0")]
		public int Weight;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EventCondition[] eventConditions;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SectorTagCollectionHierarchy tagConditions;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x17000713")]
		public bool ConditionsMet
		{
			[Token(Token = "0x60025C9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60025CA")]
		public NextRandomEntry(T resultObj, bool isGuaranteed, int weight, EventCondition[] eventConditions, SectorTagCollectionHierarchy tagConditions)
		{
		}

		[Token(Token = "0x60025CB")]
		public NextRandomEntry<T> Validate()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200061E")]
	public class ConScreenData
	{
		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string ElementName;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA338", Offset = "0x8CA338")]
		public string ScreenId;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA370", Offset = "0x8CA370")]
		public ConBackgroundObject Background;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA3A8", Offset = "0x8CA3A8")]
		public LocalizationColor HighlightColor;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA3E0", Offset = "0x8CA3E0")]
		public ConNpcObject Npc;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA418", Offset = "0x8CA418")]
		public bool NpcFlipped;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA450", Offset = "0x8CA450")]
		public SfxTrigger AudioVoiceOver;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA488", Offset = "0x8CA488")]
		public EventAudioData[] AudioToPlay;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA4C0", Offset = "0x8CA4C0")]
		public string[] AudioToStop;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA4F8", Offset = "0x8CA4F8")]
		public WeightedRandom<ConRewardObjectBase> ScreenReward;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA530", Offset = "0x8CA530")]
		public SectorTagCollectionHierarchy ScreenTags;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA568", Offset = "0x8CA568")]
		public WeightedRandom<string> NextScreen;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA5A0", Offset = "0x8CA5A0")]
		public WeightedRandom<EventObject> NextEvent;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA5D8", Offset = "0x8CA5D8")]
		public LocalizationKey Text;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA610", Offset = "0x8CA610")]
		public LocalizationKey Question;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA648", Offset = "0x8CA648")]
		public ConScreenReactorBase AnswerReactor;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ConScreenAnswers[] Answers;

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0xFED384", Offset = "0xFED384", VA = "0xFED384")]
		public ConScreenData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200061F")]
	public class ConScreenAnswers
	{
		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string ElementName;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA690", Offset = "0x8CA690")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA690", Offset = "0x8CA690")]
		public WeightedRandom<string> NextScreen;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA6F0", Offset = "0x8CA6F0")]
		public WeightedRandom<EventObject> NextEvent;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA728", Offset = "0x8CA728")]
		public SectorTagCollectionHierarchy NextTags;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA760", Offset = "0x8CA760")]
		public LocalizationKey Answer;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ButtonHold;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WeightedRandom<ConRewardObjectBase> Reward;

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xFED2C8", Offset = "0xFED2C8", VA = "0xFED2C8")]
		public ConScreenAnswers Validate()
		{
			return null;
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0xFED374", Offset = "0xFED374", VA = "0xFED374")]
		public ConScreenAnswers()
		{
		}
	}
	[Token(Token = "0x2000620")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC260", Offset = "0x8AC260")]
	public class EntryConversationObject : EntryBaseObject
	{
		[Token(Token = "0x2000621")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x2000622")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC2CC", Offset = "0x8AC2CC")]
			private sealed class <StartAsyncRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x400221B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400221C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x400221D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x400221E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private IEnumerator <enumerator>5__2;

				[Token(Token = "0x17000715")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60025D9")]
					[Address(RVA = "0xEA9A48", Offset = "0xEA9A48", VA = "0xEA9A48", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000716")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60025DB")]
					[Address(RVA = "0xEA9A90", Offset = "0xEA9A90", VA = "0xEA9A90", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60025D6")]
				[Address(RVA = "0xEA97C0", Offset = "0xEA97C0", VA = "0xEA97C0")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__4(int <>1__state)
				{
				}

				[Token(Token = "0x60025D7")]
				[Address(RVA = "0xEA97EC", Offset = "0xEA97EC", VA = "0xEA97EC", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60025D8")]
				[Address(RVA = "0xEA97F0", Offset = "0xEA97F0", VA = "0xEA97F0", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60025DA")]
				[Address(RVA = "0xEA9A50", Offset = "0xEA9A50", VA = "0xEA9A50", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x2000623")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC2DC", Offset = "0x8AC2DC")]
			private sealed class <>c__DisplayClass6_0
			{
				[Token(Token = "0x400221F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public NextRandomEntry<string> nextPossibleScreen;

				[Token(Token = "0x60025DC")]
				[Address(RVA = "0xEA978C", Offset = "0xEA978C", VA = "0xEA978C")]
				public <>c__DisplayClass6_0()
				{
				}

				[Token(Token = "0x60025DD")]
				[Address(RVA = "0xEA9794", Offset = "0xEA9794", VA = "0xEA9794")]
				internal bool <GetConversationEvent>b__0(ConScreenData s)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x4002218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SectorTag conversationMenuTag;

			[Token(Token = "0x4002219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WeightedRandom<string> firstScreen;

			[Token(Token = "0x400221A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private ConScreenData[] screens;

			[Token(Token = "0x60025D2")]
			[Address(RVA = "0xC6F0F0", Offset = "0xC6F0F0", VA = "0xC6F0F0")]
			public Instance(EntryConversationObject baseObject, SectorTag conversationMenuTag, WeightedRandom<string> firstScreen, ConScreenData[] screens)
			{
			}

			[Token(Token = "0x60025D3")]
			[Address(RVA = "0xC6F164", Offset = "0xC6F164", VA = "0xC6F164", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D64A8", Offset = "0x8D64A8")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x60025D4")]
			[Address(RVA = "0xC6F1DC", Offset = "0xC6F1DC", VA = "0xC6F1DC", Slot = "5")]
			public override void OnInterupt()
			{
			}

			[Token(Token = "0x60025D5")]
			[Address(RVA = "0xC6F2D0", Offset = "0xC6F2D0", VA = "0xC6F2D0")]
			private ConversationEvent GetConversationEvent()
			{
				return null;
			}
		}

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8CA798", Offset = "0x8CA798")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA798", Offset = "0x8CA798")]
		[SerializeField]
		private SectorTag conversationMenuTag;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WeightedRandom<string> firstScreen;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ConScreenData[] screens;

		[Token(Token = "0x17000714")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60025D0")]
			[Address(RVA = "0xC53FAC", Offset = "0xC53FAC", VA = "0xC53FAC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0xC54034", Offset = "0xC54034", VA = "0xC54034")]
		public EntryConversationObject()
		{
		}
	}
	[Token(Token = "0x2000624")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC2EC", Offset = "0x8AC2EC")]
	public class EntryConversationScreenReactorObject : EntryBaseObject
	{
		[Token(Token = "0x2000625")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x2000626")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC358", Offset = "0x8AC358")]
			private sealed class <StartAsyncRoutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4002223")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4002224")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4002225")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x17000718")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60025E6")]
					[Address(RVA = "0xEA9BCC", Offset = "0xEA9BCC", VA = "0xEA9BCC", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000719")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60025E8")]
					[Address(RVA = "0xEA9C14", Offset = "0xEA9C14", VA = "0xEA9C14", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60025E3")]
				[Address(RVA = "0xEA9A98", Offset = "0xEA9A98", VA = "0xEA9A98")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__3(int <>1__state)
				{
				}

				[Token(Token = "0x60025E4")]
				[Address(RVA = "0xEA9AC4", Offset = "0xEA9AC4", VA = "0xEA9AC4", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60025E5")]
				[Address(RVA = "0xEA9AC8", Offset = "0xEA9AC8", VA = "0xEA9AC8", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60025E7")]
				[Address(RVA = "0xEA9BD4", Offset = "0xEA9BD4", VA = "0xEA9BD4", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4002221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ConScreenReactorBase screenReactor;

			[Token(Token = "0x4002222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ConScreenReactorBase.ReactorInstance screenReactorInstance;

			[Token(Token = "0x60025E0")]
			[Address(RVA = "0xC6FAC0", Offset = "0xC6FAC0", VA = "0xC6FAC0")]
			public Instance(EntryConversationScreenReactorObject baseObject, ConScreenReactorBase screenReactor)
			{
			}

			[Token(Token = "0x60025E1")]
			[Address(RVA = "0xC6FB04", Offset = "0xC6FB04", VA = "0xC6FB04", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6558", Offset = "0x8D6558")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x60025E2")]
			[Address(RVA = "0xC6FB7C", Offset = "0xC6FB7C", VA = "0xC6FB7C", Slot = "5")]
			public override void OnInterupt()
			{
			}
		}

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA828", Offset = "0x8CA828")]
		private ConScreenReactorBase screenReactor;

		[Token(Token = "0x17000717")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60025DE")]
			[Address(RVA = "0xC5403C", Offset = "0xC5403C", VA = "0xC5403C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xC540AC", Offset = "0xC540AC", VA = "0xC540AC")]
		public EntryConversationScreenReactorObject()
		{
		}
	}
	[Token(Token = "0x2000627")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC368", Offset = "0x8AC368")]
	public class EntryEmptyObject : EntryBaseObject
	{
		[Token(Token = "0x2000628")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x60025EB")]
			[Address(RVA = "0xC6FBC4", Offset = "0xC6FBC4", VA = "0xC6FBC4")]
			public Instance(EntryEmptyObject baseObject)
			{
			}

			[Token(Token = "0x60025EC")]
			[Address(RVA = "0xC6FBCC", Offset = "0xC6FBCC", VA = "0xC6FBCC", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x1700071A")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60025E9")]
			[Address(RVA = "0xC540B4", Offset = "0xC540B4", VA = "0xC540B4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0xC54114", Offset = "0xC54114", VA = "0xC54114")]
		public EntryEmptyObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000629")]
	public struct EnemyWaveData
	{
		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public string WaveName;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA884", Offset = "0x8CA884")]
		public AssetReferenceGameObject Prefab;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA8BC", Offset = "0x8CA8BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CA8BC", Offset = "0x8CA8BC")]
		public int Count;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA914", Offset = "0x8CA914")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CA914", Offset = "0x8CA914")]
		public float PlayerDistance;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CA96C", Offset = "0x8CA96C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA96C", Offset = "0x8CA96C")]
		public float Distribution;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CA9C4", Offset = "0x8CA9C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA9C4", Offset = "0x8CA9C4")]
		public float MinimumDistance;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CAA1C", Offset = "0x8CAA1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAA1C", Offset = "0x8CAA1C")]
		public float WaveDealy;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAA74", Offset = "0x8CAA74")]
		public bool TeleportIn;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAAAC", Offset = "0x8CAAAC")]
		public EventObject OnWaveDeathEvent;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAAE4", Offset = "0x8CAAE4")]
		private List<SpaceEntity> <WaveMembers>k__BackingField;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAAF4", Offset = "0x8CAAF4")]
		private bool <WaveEventDone>k__BackingField;

		[Token(Token = "0x1700071B")]
		public List<SpaceEntity> WaveMembers
		{
			[Token(Token = "0x60025ED")]
			[Address(RVA = "0xC537C4", Offset = "0xC537C4", VA = "0xC537C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6608", Offset = "0x8D6608")]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x60025EE")]
			[Address(RVA = "0xC537CC", Offset = "0xC537CC", VA = "0xC537CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6640", Offset = "0x8D6640")]
			set
			{
			}
		}

		[Token(Token = "0x1700071C")]
		public bool WaveEventDone
		{
			[Token(Token = "0x60025EF")]
			[Address(RVA = "0xC537D4", Offset = "0xC537D4", VA = "0xC537D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6650", Offset = "0x8D6650")]
			readonly get
			{
				return default(bool);
			}
			[Token(Token = "0x60025F0")]
			[Address(RVA = "0xC537DC", Offset = "0xC537DC", VA = "0xC537DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6688", Offset = "0x8D6688")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200062A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC3D4", Offset = "0x8AC3D4")]
	public class EntryEncounterObject : EntryBaseObject
	{
		[Token(Token = "0x200062B")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x200062C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC440", Offset = "0x8AC440")]
			private sealed class <StartAsyncRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4002235")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4002236")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4002237")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x4002238")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private WaitForSeconds <spawnDelay>5__2;

				[Token(Token = "0x4002239")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int <i>5__3;

				[Token(Token = "0x400223A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private int <ei>5__4;

				[Token(Token = "0x1700071E")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60025FA")]
					[Address(RVA = "0xEAA2D8", Offset = "0xEAA2D8", VA = "0xEAA2D8", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700071F")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60025FC")]
					[Address(RVA = "0xEAA320", Offset = "0xEAA320", VA = "0xEAA320", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60025F7")]
				[Address(RVA = "0xEA9C1C", Offset = "0xEA9C1C", VA = "0xEA9C1C")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__5(int <>1__state)
				{
				}

				[Token(Token = "0x60025F8")]
				[Address(RVA = "0xEA9C48", Offset = "0xEA9C48", VA = "0xEA9C48", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60025F9")]
				[Address(RVA = "0xEA9C4C", Offset = "0xEA9C4C", VA = "0xEA9C4C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60025FB")]
				[Address(RVA = "0xEAA2E0", Offset = "0xEAA2E0", VA = "0xEAA2E0", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4002232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private EnemyWaveData[] waves;

			[Token(Token = "0x4002233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<GameObject> spawnedEntries;

			[Token(Token = "0x4002234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int spawnCount;

			[Token(Token = "0x60025F3")]
			[Address(RVA = "0xC6FBD4", Offset = "0xC6FBD4", VA = "0xC6FBD4")]
			public Instance(EntryEncounterObject baseObject, EnemyWaveData[] waves)
			{
			}

			[Token(Token = "0x60025F4")]
			[Address(RVA = "0xC6FC7C", Offset = "0xC6FC7C", VA = "0xC6FC7C", Slot = "5")]
			public override void OnInterupt()
			{
			}

			[Token(Token = "0x60025F5")]
			[Address(RVA = "0xC6FD54", Offset = "0xC6FD54", VA = "0xC6FD54", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6698", Offset = "0x8D6698")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x60025F6")]
			[Address(RVA = "0xC6FDCC", Offset = "0xC6FDCC", VA = "0xC6FDCC")]
			private void InstantiateWaveEntry(EnemyWaveData waveEntry, GameObject prefab)
			{
			}
		}

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EnemyWaveData[] Waves;

		[Token(Token = "0x1700071D")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60025F1")]
			[Address(RVA = "0xC5411C", Offset = "0xC5411C", VA = "0xC5411C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xC5418C", Offset = "0xC5418C", VA = "0xC5418C")]
		public EntryEncounterObject()
		{
		}
	}
	[Token(Token = "0x200062D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC450", Offset = "0x8AC450")]
	public class EntryEventObjectiveObject : EntryBaseObject
	{
		[Token(Token = "0x200062E")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x400223C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool objectiveComplete;

			[Token(Token = "0x60025FF")]
			[Address(RVA = "0xC704AC", Offset = "0xC704AC", VA = "0xC704AC")]
			public Instance(EntryEventObjectiveObject baseObject)
			{
			}

			[Token(Token = "0x6002600")]
			[Address(RVA = "0xC704E4", Offset = "0xC704E4", VA = "0xC704E4", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAB04", Offset = "0x8CAB04")]
		public bool objectiveComplete;

		[Token(Token = "0x17000720")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60025FD")]
			[Address(RVA = "0xC54194", Offset = "0xC54194", VA = "0xC54194", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xC541F4", Offset = "0xC541F4", VA = "0xC541F4")]
		public EntryEventObjectiveObject()
		{
		}
	}
	[Token(Token = "0x200062F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC4BC", Offset = "0x8AC4BC")]
	public class EntryFactionAffinityObject : EntryBaseObject
	{
		[Token(Token = "0x2000630")]
		public enum AffinityAction
		{
			[Token(Token = "0x4002241")]
			None,
			[Token(Token = "0x4002242")]
			PlayerAffinityOverrideSet,
			[Token(Token = "0x4002243")]
			PlayerAffinityOverrideClear
		}

		[Token(Token = "0x2000631")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Faction faction;

			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AffinityAction affinityAction;

			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private FactionAffinity affinityValue;

			[Token(Token = "0x6002603")]
			[Address(RVA = "0xC705AC", Offset = "0xC705AC", VA = "0xC705AC")]
			public Instance(EntryFactionAffinityObject baseObject)
			{
			}

			[Token(Token = "0x6002604")]
			[Address(RVA = "0xC705FC", Offset = "0xC705FC", VA = "0xC705FC", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAB3C", Offset = "0x8CAB3C")]
		public Faction faction;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAB74", Offset = "0x8CAB74")]
		public AffinityAction affinityAction;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CABAC", Offset = "0x8CABAC")]
		public FactionAffinity affinityValue;

		[Token(Token = "0x17000721")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002601")]
			[Address(RVA = "0xC541FC", Offset = "0xC541FC", VA = "0xC541FC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0xC5425C", Offset = "0xC5425C", VA = "0xC5425C")]
		public EntryFactionAffinityObject()
		{
		}
	}
	[Token(Token = "0x2000632")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC528", Offset = "0x8AC528")]
	public class EntryFirstGameLoadObject : EntryBaseObject
	{
		[Token(Token = "0x2000633")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x6002607")]
			[Address(RVA = "0xC70700", Offset = "0xC70700", VA = "0xC70700")]
			public Instance(EntryFirstGameLoadObject baseObject)
			{
			}

			[Token(Token = "0x6002608")]
			[Address(RVA = "0xC70708", Offset = "0xC70708", VA = "0xC70708", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x17000722")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002605")]
			[Address(RVA = "0xC54264", Offset = "0xC54264", VA = "0xC54264", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xC542C4", Offset = "0xC542C4", VA = "0xC542C4")]
		public EntryFirstGameLoadObject()
		{
		}
	}
	[Token(Token = "0x2000634")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC594", Offset = "0x8AC594")]
	public class EntryHandPulseObject : EntryBaseObject
	{
		[Token(Token = "0x2000635")]
		public enum PulseStateChange
		{
			[Token(Token = "0x400224C")]
			None,
			[Token(Token = "0x400224D")]
			Enable,
			[Token(Token = "0x400224E")]
			Disable
		}

		[Token(Token = "0x2000636")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PulseStateChange handPulseRight;

			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private PulseStateChange handPulseLeft;

			[Token(Token = "0x4002251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private PulseStateChange handPulseMain;

			[Token(Token = "0x4002252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private PulseStateChange handPulseOff;

			[Token(Token = "0x600260B")]
			[Address(RVA = "0xC707CC", Offset = "0xC707CC", VA = "0xC707CC")]
			public Instance(EntryHandPulseObject baseObject)
			{
			}

			[Token(Token = "0x600260C")]
			[Address(RVA = "0xC7081C", Offset = "0xC7081C", VA = "0xC7081C", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PulseStateChange handPulseRight;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private PulseStateChange handPulseLeft;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PulseStateChange handPulseMain;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private PulseStateChange handPulseOff;

		[Token(Token = "0x17000723")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002609")]
			[Address(RVA = "0xC542CC", Offset = "0xC542CC", VA = "0xC542CC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xC5432C", Offset = "0xC5432C", VA = "0xC5432C")]
		public EntryHandPulseObject()
		{
		}
	}
	[Token(Token = "0x2000637")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC600", Offset = "0x8AC600")]
	public class EntryHandsStateObject : EntryBaseObject
	{
		[Token(Token = "0x2000638")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private VRPlayerHandState state;

			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool stateActive;

			[Token(Token = "0x6002611")]
			[Address(RVA = "0xC709E4", Offset = "0xC709E4", VA = "0xC709E4")]
			public Instance(EntryHandsStateObject baseObject)
			{
			}

			[Token(Token = "0x6002612")]
			[Address(RVA = "0xC70A24", Offset = "0xC70A24", VA = "0xC70A24", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x6002613")]
			[Address(RVA = "0xC70BE4", Offset = "0xC70BE4", VA = "0xC70BE4")]
			private FlagGroup GetHandStateGroup()
			{
				return null;
			}
		}

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRPlayerHandState state;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool stateActive;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<VRPlayerHandState, AsyncFlag> EventHandStates;

		[Token(Token = "0x17000724")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x600260D")]
			[Address(RVA = "0xC54334", Offset = "0xC54334", VA = "0xC54334", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xC54394", Offset = "0xC54394", VA = "0xC54394")]
		public static void ResetEventHandStates()
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xC54534", Offset = "0xC54534", VA = "0xC54534")]
		public EntryHandsStateObject()
		{
		}
	}
	[Token(Token = "0x2000639")]
	public enum EntryMenuAction
	{
		[Token(Token = "0x4002259")]
		None,
		[Token(Token = "0x400225A")]
		Show,
		[Token(Token = "0x400225B")]
		Hide
	}
	[Token(Token = "0x200063A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC66C", Offset = "0x8AC66C")]
	public class EntryMenuObject : EntryBaseObject
	{
		[Token(Token = "0x200063B")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x400225F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SectorTag menuTag;

			[Token(Token = "0x4002260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private EntryMenuAction menuAction;

			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool menuAddBackStep;

			[Token(Token = "0x6002616")]
			[Address(RVA = "0xC70D68", Offset = "0xC70D68", VA = "0xC70D68")]
			public Instance(EntryMenuObject baseObject)
			{
			}

			[Token(Token = "0x6002617")]
			[Address(RVA = "0xC70DBC", Offset = "0xC70DBC", VA = "0xC70DBC", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x6002618")]
			[Address(RVA = "0xC70EDC", Offset = "0xC70EDC", VA = "0xC70EDC", Slot = "5")]
			public override void OnInterupt()
			{
			}
		}

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8CAC44", Offset = "0x8CAC44")]
		[SerializeField]
		private SectorTag menuTag;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EntryMenuAction menuAction;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool menuAddBackStep;

		[Token(Token = "0x17000725")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002614")]
			[Address(RVA = "0xC545D0", Offset = "0xC545D0", VA = "0xC545D0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xC54630", Offset = "0xC54630", VA = "0xC54630")]
		public EntryMenuObject()
		{
		}
	}
	[Token(Token = "0x200063C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC6D8", Offset = "0x8AC6D8")]
	public class EntryMusicUpdateObject : EntrySectorTagObject
	{
		[Token(Token = "0x200063D")]
		private class InstanceMusicUpdate : InstanceSectorTag
		{
			[Token(Token = "0x200063E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC744", Offset = "0x8AC744")]
			private sealed class <StartAsyncRoutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4002262")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4002263")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4002264")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public InstanceMusicUpdate <>4__this;

				[Token(Token = "0x4002265")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private IEnumerator <enumerator>5__2;

				[Token(Token = "0x17000727")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002621")]
					[Address(RVA = "0xEAA588", Offset = "0xEAA588", VA = "0xEAA588", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000728")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002623")]
					[Address(RVA = "0xEAA5D0", Offset = "0xEAA5D0", VA = "0xEAA5D0", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600261E")]
				[Address(RVA = "0xEAA328", Offset = "0xEAA328", VA = "0xEAA328")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__1(int <>1__state)
				{
				}

				[Token(Token = "0x600261F")]
				[Address(RVA = "0xEAA354", Offset = "0xEAA354", VA = "0xEAA354", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6002620")]
				[Address(RVA = "0xEAA358", Offset = "0xEAA358", VA = "0xEAA358", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002622")]
				[Address(RVA = "0xEAA590", Offset = "0xEAA590", VA = "0xEAA590", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x600261B")]
			[Address(RVA = "0xC70FB8", Offset = "0xC70FB8", VA = "0xC70FB8")]
			public InstanceMusicUpdate(EntryMusicUpdateObject baseObject)
			{
			}

			[Token(Token = "0x600261C")]
			[Address(RVA = "0xC71074", Offset = "0xC71074", VA = "0xC71074", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6748", Offset = "0x8D6748")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x600261D")]
			[Address(RVA = "0xC710EC", Offset = "0xC710EC", VA = "0xC710EC")]
			[DebuggerHidden]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D67A8", Offset = "0x8D67A8")]
			private IEnumerator <>n__0()
			{
				return null;
			}
		}

		[Token(Token = "0x17000726")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002619")]
			[Address(RVA = "0xC54638", Offset = "0xC54638", VA = "0xC54638", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xC54698", Offset = "0xC54698", VA = "0xC54698")]
		public EntryMusicUpdateObject()
		{
		}
	}
	[Token(Token = "0x200063F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC754", Offset = "0x8AC754")]
	public class EntryNotificationObject : EntryBaseObject
	{
		[Token(Token = "0x2000640")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x4002269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private NotificationType notificationType;

			[Token(Token = "0x400226A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int notificationValueInt;

			[Token(Token = "0x400226B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool playNotificationEnableSfx;

			[Token(Token = "0x6002626")]
			[Address(RVA = "0xC71168", Offset = "0xC71168", VA = "0xC71168")]
			public Instance(EntryNotificationObject baseObject)
			{
			}

			[Token(Token = "0x6002627")]
			[Address(RVA = "0xC711B0", Offset = "0xC711B0", VA = "0xC711B0", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CACB0", Offset = "0x8CACB0")]
		private NotificationType notificationType;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int notificationValueInt;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CAD0C", Offset = "0x8CAD0C")]
		[SerializeField]
		private bool playNotificationEnableSfx;

		[Token(Token = "0x17000729")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002624")]
			[Address(RVA = "0xC546A8", Offset = "0xC546A8", VA = "0xC546A8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xC54708", Offset = "0xC54708", VA = "0xC54708")]
		public EntryNotificationObject()
		{
		}
	}
	[Token(Token = "0x2000641")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC7C0", Offset = "0x8AC7C0")]
	public class EntryPlayerDeathObject : EntryBaseObject
	{
		[Token(Token = "0x2000642")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x2000643")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC82C", Offset = "0x8AC82C")]
			private sealed class <StartAsyncRoutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x400226D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400226E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x400226F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x1700072B")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002630")]
					[Address(RVA = "0xEAA820", Offset = "0xEAA820", VA = "0xEAA820", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700072C")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002632")]
					[Address(RVA = "0xEAA868", Offset = "0xEAA868", VA = "0xEAA868", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600262D")]
				[Address(RVA = "0xEAA5D8", Offset = "0xEAA5D8", VA = "0xEAA5D8")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__2(int <>1__state)
				{
				}

				[Token(Token = "0x600262E")]
				[Address(RVA = "0xEAA604", Offset = "0xEAA604", VA = "0xEAA604", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600262F")]
				[Address(RVA = "0xEAA608", Offset = "0xEAA608", VA = "0xEAA608", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002631")]
				[Address(RVA = "0xEAA828", Offset = "0xEAA828", VA = "0xEAA828", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x400226C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool playerDeath;

			[Token(Token = "0x600262A")]
			[Address(RVA = "0xC712F8", Offset = "0xC712F8", VA = "0xC712F8")]
			public Instance(EntryPlayerDeathObject baseObject)
			{
			}

			[Token(Token = "0x600262B")]
			[Address(RVA = "0xC71300", Offset = "0xC71300", VA = "0xC71300", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6830", Offset = "0x8D6830")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x600262C")]
			[Address(RVA = "0xC71378", Offset = "0xC71378", VA = "0xC71378")]
			private void OnPlayerDeath(SpaceObject playerShip)
			{
			}
		}

		[Token(Token = "0x1700072A")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002628")]
			[Address(RVA = "0xC54718", Offset = "0xC54718", VA = "0xC54718", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xC54778", Offset = "0xC54778", VA = "0xC54778")]
		public EntryPlayerDeathObject()
		{
		}
	}
	[Token(Token = "0x2000644")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC83C", Offset = "0x8AC83C")]
	public class EntryQueuedRewardsObject : EntryBaseObject
	{
		[Token(Token = "0x2000645")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x2000646")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC8A8", Offset = "0x8AC8A8")]
			private sealed class <StartAsyncRoutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4002270")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4002271")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x1700072E")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x600263A")]
					[Address(RVA = "0xEAAB4C", Offset = "0xEAAB4C", VA = "0xEAAB4C", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700072F")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x600263C")]
					[Address(RVA = "0xEAAB94", Offset = "0xEAAB94", VA = "0xEAAB94", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002637")]
				[Address(RVA = "0xEAA870", Offset = "0xEAA870", VA = "0xEAA870")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__1(int <>1__state)
				{
				}

				[Token(Token = "0x6002638")]
				[Address(RVA = "0xEAA89C", Offset = "0xEAA89C", VA = "0xEAA89C", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6002639")]
				[Address(RVA = "0xEAA8A0", Offset = "0xEAA8A0", VA = "0xEAA8A0", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x600263B")]
				[Address(RVA = "0xEAAB54", Offset = "0xEAAB54", VA = "0xEAAB54", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x6002635")]
			[Address(RVA = "0xC713B4", Offset = "0xC713B4", VA = "0xC713B4")]
			public Instance(EntryQueuedRewardsObject baseObject)
			{
			}

			[Token(Token = "0x6002636")]
			[Address(RVA = "0xC713BC", Offset = "0xC713BC", VA = "0xC713BC", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D68E0", Offset = "0x8D68E0")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x1700072D")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002633")]
			[Address(RVA = "0xC54780", Offset = "0xC54780", VA = "0xC54780", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xC547E0", Offset = "0xC547E0", VA = "0xC547E0")]
		public EntryQueuedRewardsObject()
		{
		}
	}
	[Token(Token = "0x2000647")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC8B8", Offset = "0x8AC8B8")]
	public class EntryRemoveEventSpawnsObject : EntryBaseObject
	{
		[Token(Token = "0x2000648")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x600263F")]
			[Address(RVA = "0xC71418", Offset = "0xC71418", VA = "0xC71418")]
			public Instance(EntryRemoveEventSpawnsObject baseObject)
			{
			}

			[Token(Token = "0x6002640")]
			[Address(RVA = "0xC71420", Offset = "0xC71420", VA = "0xC71420", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x17000730")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x600263D")]
			[Address(RVA = "0xC547E8", Offset = "0xC547E8", VA = "0xC547E8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0xC54848", Offset = "0xC54848", VA = "0xC54848")]
		public EntryRemoveEventSpawnsObject()
		{
		}
	}
	[Token(Token = "0x2000649")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC924", Offset = "0x8AC924")]
	public class EntryResetPlayerProfileObject : EntryBaseObject
	{
		[Token(Token = "0x200064A")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<SectorTag> excludeTags;

			[Token(Token = "0x6002643")]
			[Address(RVA = "0xC714A8", Offset = "0xC714A8", VA = "0xC714A8")]
			public Instance(EntryResetPlayerProfileObject baseObject)
			{
			}

			[Token(Token = "0x6002644")]
			[Address(RVA = "0xC714E4", Offset = "0xC714E4", VA = "0xC714E4", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<SectorTag> excludeTags;

		[Token(Token = "0x17000731")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002641")]
			[Address(RVA = "0xC54850", Offset = "0xC54850", VA = "0xC54850", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0xC548B0", Offset = "0xC548B0", VA = "0xC548B0")]
		public EntryResetPlayerProfileObject()
		{
		}
	}
	[Token(Token = "0x200064B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AC990", Offset = "0x8AC990")]
	public class EntryRunIntroAnimationObject : EntryBaseObject
	{
		[Token(Token = "0x200064C")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x200064D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC9FC", Offset = "0x8AC9FC")]
			private sealed class <StartAsyncRoutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4002277")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4002278")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4002279")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x17000733")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x600264D")]
					[Address(RVA = "0xEAAD50", Offset = "0xEAAD50", VA = "0xEAAD50", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000734")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x600264F")]
					[Address(RVA = "0xEAAD98", Offset = "0xEAAD98", VA = "0xEAAD98", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600264A")]
				[Address(RVA = "0xEAAB9C", Offset = "0xEAAB9C", VA = "0xEAAB9C")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__3(int <>1__state)
				{
				}

				[Token(Token = "0x600264B")]
				[Address(RVA = "0xEAABC8", Offset = "0xEAABC8", VA = "0xEAABC8", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600264C")]
				[Address(RVA = "0xEAABCC", Offset = "0xEAABCC", VA = "0xEAABCC", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x600264E")]
				[Address(RVA = "0xEAAD58", Offset = "0xEAAD58", VA = "0xEAAD58", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4002275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private RunIntroVariant introVariant;

			[Token(Token = "0x4002276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool introFinished;

			[Token(Token = "0x6002647")]
			[Address(RVA = "0xC715D0", Offset = "0xC715D0", VA = "0xC715D0")]
			public Instance(EntryRunIntroAnimationObject baseObject)
			{
			}

			[Token(Token = "0x6002648")]
			[Address(RVA = "0xC7160C", Offset = "0xC7160C", VA = "0xC7160C", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6990", Offset = "0x8D6990")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x6002649")]
			[Address(RVA = "0xC71684", Offset = "0xC71684", VA = "0xC71684")]
			private void SetIntroFinished()
			{
			}
		}

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RunIntroVariant introVariant;

		[Token(Token = "0x17000732")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002645")]
			[Address(RVA = "0xC548B8", Offset = "0xC548B8", VA = "0xC548B8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xC54918", Offset = "0xC54918", VA = "0xC54918")]
		public EntryRunIntroAnimationObject()
		{
		}
	}
	[Token(Token = "0x200064E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACA0C", Offset = "0x8ACA0C")]
	public class EntryRunManagerForwardEndRunObject : EntryBaseObject
	{
		[Token(Token = "0x200064F")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x400227B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SectorTagAmount[] overrideTags;

			[Token(Token = "0x6002652")]
			[Address(RVA = "0xC71690", Offset = "0xC71690", VA = "0xC71690")]
			public Instance(EntryRunManagerForwardEndRunObject baseObject)
			{
			}

			[Token(Token = "0x6002653")]
			[Address(RVA = "0xC716CC", Offset = "0xC716CC", VA = "0xC716CC", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SectorTagAmount[] overrideTags;

		[Token(Token = "0x17000735")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002650")]
			[Address(RVA = "0xC54920", Offset = "0xC54920", VA = "0xC54920", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0xC54980", Offset = "0xC54980", VA = "0xC54980")]
		public EntryRunManagerForwardEndRunObject()
		{
		}
	}
	[Token(Token = "0x2000650")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACA78", Offset = "0x8ACA78")]
	public class EntryRunManagerObject : EntryBaseObject
	{
		[Token(Token = "0x2000651")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string seed;

			[Token(Token = "0x4002281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string overrideGameMode;

			[Token(Token = "0x4002282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SectorMapDescription overrideSectorMap;

			[Token(Token = "0x4002283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<string> additionalTags;

			[Token(Token = "0x6002656")]
			[Address(RVA = "0xC718BC", Offset = "0xC718BC", VA = "0xC718BC")]
			public Instance(EntryRunManagerObject baseObject)
			{
			}

			[Token(Token = "0x6002657")]
			[Address(RVA = "0xC71928", Offset = "0xC71928", VA = "0xC71928", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string seed;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string overrideGameMode;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SectorMapDescription overrideSectorMap;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<string> additionalTags;

		[Token(Token = "0x17000736")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002654")]
			[Address(RVA = "0xC54988", Offset = "0xC54988", VA = "0xC54988", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0xC549E8", Offset = "0xC549E8", VA = "0xC549E8")]
		public EntryRunManagerObject()
		{
		}
	}
	[Token(Token = "0x2000652")]
	public enum EntrySectorEncounterAI
	{
		[Token(Token = "0x4002285")]
		None,
		[Token(Token = "0x4002286")]
		ActivateAI,
		[Token(Token = "0x4002287")]
		DeactivateAI
	}
	[Token(Token = "0x2000653")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACAE4", Offset = "0x8ACAE4")]
	public class EntrySectorEncounterObject : EntryBaseObject
	{
		[Token(Token = "0x2000654")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x2000655")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACB50", Offset = "0x8ACB50")]
			private sealed class <StartAsyncRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x400228E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400228F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4002290")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x4002291")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private float <clearTimer>5__2;

				[Token(Token = "0x17000738")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002660")]
					[Address(RVA = "0xEAB338", Offset = "0xEAB338", VA = "0xEAB338", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000739")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002662")]
					[Address(RVA = "0xEAB380", Offset = "0xEAB380", VA = "0xEAB380", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600265D")]
				[Address(RVA = "0xEAADA0", Offset = "0xEAADA0", VA = "0xEAADA0")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__4(int <>1__state)
				{
				}

				[Token(Token = "0x600265E")]
				[Address(RVA = "0xEAADCC", Offset = "0xEAADCC", VA = "0xEAADCC", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600265F")]
				[Address(RVA = "0xEAADD0", Offset = "0xEAADD0", VA = "0xEAADD0", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002661")]
				[Address(RVA = "0xEAB340", Offset = "0xEAB340", VA = "0xEAB340", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x400228B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private EntrySectorEncounterAI encounterAI;

			[Token(Token = "0x400228C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool waitForSectorClear;

			[Token(Token = "0x400228D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float waitForSectorClearDuration;

			[Token(Token = "0x600265A")]
			[Address(RVA = "0xC71A50", Offset = "0xC71A50", VA = "0xC71A50")]
			public Instance(EntrySectorEncounterObject baseObject)
			{
			}

			[Token(Token = "0x600265B")]
			[Address(RVA = "0xC71A98", Offset = "0xC71A98", VA = "0xC71A98", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6A40", Offset = "0x8D6A40")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x600265C")]
			[Address(RVA = "0xC71B10", Offset = "0xC71B10", VA = "0xC71B10")]
			private static void SetAIActive(bool active)
			{
			}
		}

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CADC8", Offset = "0x8CADC8")]
		public EntrySectorEncounterAI encounterAI;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAE00", Offset = "0x8CAE00")]
		public bool waitForSectorClear;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAE38", Offset = "0x8CAE38")]
		public float waitForSectorClearDuration;

		[Token(Token = "0x17000737")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002658")]
			[Address(RVA = "0xC54A6C", Offset = "0xC54A6C", VA = "0xC54A6C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0xC54ACC", Offset = "0xC54ACC", VA = "0xC54ACC")]
		public EntrySectorEncounterObject()
		{
		}
	}
	[Token(Token = "0x2000656")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACB60", Offset = "0x8ACB60")]
	public class EntrySectorEngagementObject : EntryBaseObject
	{
		[Token(Token = "0x2000657")]
		public enum EngagementPauseAction
		{
			[Token(Token = "0x4002299")]
			None,
			[Token(Token = "0x400229A")]
			Pause,
			[Token(Token = "0x400229B")]
			Unpause
		}

		[Token(Token = "0x2000658")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x2000659")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACBCC", Offset = "0x8ACBCC")]
			private sealed class <StartAsyncRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40022A3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40022A4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40022A5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x40022A6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private List<SectorEngagementSlotLayer>.Enumerator <>7__wrap1;

				[Token(Token = "0x40022A7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private SectorEngagementSlotLayer <engagement>5__3;

				[Token(Token = "0x1700073B")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x600266D")]
					[Address(RVA = "0xEABABC", Offset = "0xEABABC", VA = "0xEABABC", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700073C")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x600266F")]
					[Address(RVA = "0xEABB04", Offset = "0xEABB04", VA = "0xEABB04", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002669")]
				[Address(RVA = "0xEAB388", Offset = "0xEAB388", VA = "0xEAB388")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__8(int <>1__state)
				{
				}

				[Token(Token = "0x600266A")]
				[Address(RVA = "0xEAB3B4", Offset = "0xEAB3B4", VA = "0xEAB3B4", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600266B")]
				[Address(RVA = "0xEAB424", Offset = "0xEAB424", VA = "0xEAB424", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x600266C")]
				[Address(RVA = "0xEAB3D0", Offset = "0xEAB3D0", VA = "0xEAB3D0")]
				private void <>m__Finally1()
				{
				}

				[Token(Token = "0x600266E")]
				[Address(RVA = "0xEABAC4", Offset = "0xEABAC4", VA = "0xEABAC4", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x400229C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool triggerNextEngagementWave;

			[Token(Token = "0x400229D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private EngagementPauseAction pauseEngagement;

			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool stopEngagement;

			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			private bool waitForEngagementTrigger;

			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			private bool waitForEngagementFinish;

			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Faction engagementFilterFaction;

			[Token(Token = "0x40022A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<SectorEngagementSlotLayer> engagements;

			[Token(Token = "0x6002665")]
			[Address(RVA = "0xC71E7C", Offset = "0xC71E7C", VA = "0xC71E7C")]
			public Instance(EntrySectorEngagementObject baseObject)
			{
			}

			[Token(Token = "0x6002666")]
			[Address(RVA = "0xC71F50", Offset = "0xC71F50", VA = "0xC71F50", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6AF0", Offset = "0x8D6AF0")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x6002667")]
			[Address(RVA = "0xC71FC8", Offset = "0xC71FC8", VA = "0xC71FC8")]
			private List<SectorEngagementSlotLayer> GetActiveEngagementMatches()
			{
				return null;
			}

			[Token(Token = "0x6002668")]
			[Address(RVA = "0xC72354", Offset = "0xC72354", VA = "0xC72354")]
			private bool IsEngagementMatch(SectorEngagementSlotLayer engagement)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAE70", Offset = "0x8CAE70")]
		[SerializeField]
		private bool triggerNextEngagementWave;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAEBC", Offset = "0x8CAEBC")]
		private EngagementPauseAction pauseEngagement;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAF08", Offset = "0x8CAF08")]
		private bool stopEngagement;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAF54", Offset = "0x8CAF54")]
		private bool waitForEngagementTrigger;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAFA0", Offset = "0x8CAFA0")]
		private bool waitForEngagementFinish;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAFEC", Offset = "0x8CAFEC")]
		private Faction engagementFilterFaction;

		[Token(Token = "0x1700073A")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002663")]
			[Address(RVA = "0xC54AD4", Offset = "0xC54AD4", VA = "0xC54AD4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xC54B34", Offset = "0xC54B34", VA = "0xC54B34")]
		public EntrySectorEngagementObject()
		{
		}
	}
	[Token(Token = "0x200065A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACBDC", Offset = "0x8ACBDC")]
	public class EntrySectorForceNotClearObject : EntryBaseObject
	{
		[Token(Token = "0x200065B")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool forceSectorNotClear;

			[Token(Token = "0x6002672")]
			[Address(RVA = "0xC72404", Offset = "0xC72404", VA = "0xC72404")]
			public Instance(EntrySectorForceNotClearObject baseObject)
			{
			}

			[Token(Token = "0x6002673")]
			[Address(RVA = "0xC7243C", Offset = "0xC7243C", VA = "0xC7243C", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool forceSectorNotClear;

		[Token(Token = "0x1700073D")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002670")]
			[Address(RVA = "0xC54B3C", Offset = "0xC54B3C", VA = "0xC54B3C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0xC54B9C", Offset = "0xC54B9C", VA = "0xC54B9C")]
		public EntrySectorForceNotClearObject()
		{
		}
	}
	[Token(Token = "0x200065C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACC48", Offset = "0x8ACC48")]
	public class EntrySectorSlotScanObject : EntryBaseObject
	{
		[Token(Token = "0x200065D")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x200065E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACCB4", Offset = "0x8ACCB4")]
			private sealed class <>c__DisplayClass5_0
			{
				[Token(Token = "0x40022B3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SectorTagCollection slotTags;

				[Token(Token = "0x600267B")]
				[Address(RVA = "0xEABB0C", Offset = "0xEABB0C", VA = "0xEABB0C")]
				public <>c__DisplayClass5_0()
				{
				}

				[Token(Token = "0x600267C")]
				[Address(RVA = "0xEABB14", Offset = "0xEABB14", VA = "0xEABB14")]
				internal void <StartAsyncRoutine>b__0()
				{
				}
			}

			[Token(Token = "0x200065F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACCC4", Offset = "0x8ACCC4")]
			private sealed class <StartAsyncRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40022B4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40022B5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40022B6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x40022B7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private <>c__DisplayClass5_0 <>8__1;

				[Token(Token = "0x40022B8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private VRScannableBase <scannable>5__2;

				[Token(Token = "0x1700073F")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002680")]
					[Address(RVA = "0xEABF7C", Offset = "0xEABF7C", VA = "0xEABF7C", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000740")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002682")]
					[Address(RVA = "0xEABFC4", Offset = "0xEABFC4", VA = "0xEABFC4", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600267D")]
				[Address(RVA = "0xEABB90", Offset = "0xEABB90", VA = "0xEABB90")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__5(int <>1__state)
				{
				}

				[Token(Token = "0x600267E")]
				[Address(RVA = "0xEABBBC", Offset = "0xEABBBC", VA = "0xEABBBC", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600267F")]
				[Address(RVA = "0xEABBC0", Offset = "0xEABBC0", VA = "0xEABBC0", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002681")]
				[Address(RVA = "0xEABF84", Offset = "0xEABF84", VA = "0xEABF84", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ScannableType scannableType;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool disableAutoScan;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			private bool waitForScan;

			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SectorTagCollectionHierarchy scanObjectTags;

			[Token(Token = "0x6002678")]
			[Address(RVA = "0xC724B0", Offset = "0xC724B0", VA = "0xC724B0")]
			public Instance(EntrySectorSlotScanObject baseObject)
			{
			}

			[Token(Token = "0x6002679")]
			[Address(RVA = "0xC72508", Offset = "0xC72508", VA = "0xC72508", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6BC0", Offset = "0x8D6BC0")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x600267A")]
			[Address(RVA = "0xC72580", Offset = "0xC72580", VA = "0xC72580")]
			private bool TryGetSectorSlotObject(out GameObject sectorSlotObj, out SectorTagCollection slotTags)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScannableType scannableType;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool disableAutoScan;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool waitForScan;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB078", Offset = "0x8CB078")]
		private SectorTagCollectionHierarchy scanObjectTags;

		[Token(Token = "0x1700073E")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002676")]
			[Address(RVA = "0xC54D1C", Offset = "0xC54D1C", VA = "0xC54D1C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400009E")]
		public static event Action<SectorTagCollection> OnEventScan
		{
			[Token(Token = "0x6002674")]
			[Address(RVA = "0xC54BA4", Offset = "0xC54BA4", VA = "0xC54BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6BA0", Offset = "0x8D6BA0")]
			add
			{
			}
			[Token(Token = "0x6002675")]
			[Address(RVA = "0xC54C60", Offset = "0xC54C60", VA = "0xC54C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6BB0", Offset = "0x8D6BB0")]
			remove
			{
			}
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xC54D7C", Offset = "0xC54D7C", VA = "0xC54D7C")]
		public EntrySectorSlotScanObject()
		{
		}
	}
	[Token(Token = "0x2000660")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACCD4", Offset = "0x8ACCD4")]
	public class EntrySectorSlotScannableActionObject : EntryBaseObject
	{
		[Token(Token = "0x2000661")]
		public enum ScannableAction
		{
			[Token(Token = "0x40022BC")]
			Scan = 1,
			[Token(Token = "0x40022BD")]
			UnScan = 2,
			[Token(Token = "0x40022BE")]
			Reveal = 11,
			[Token(Token = "0x40022BF")]
			UnReveal = 12,
			[Token(Token = "0x40022C0")]
			Despawn = 22
		}

		[Token(Token = "0x2000662")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ScannableAction scannableAction;

			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SectorTagCollectionHierarchy scanObjectTags;

			[Token(Token = "0x6002685")]
			[Address(RVA = "0xC72FC0", Offset = "0xC72FC0", VA = "0xC72FC0")]
			public Instance(EntrySectorSlotScannableActionObject baseObject)
			{
			}

			[Token(Token = "0x6002686")]
			[Address(RVA = "0xC73008", Offset = "0xC73008", VA = "0xC73008", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x6002687")]
			[Address(RVA = "0xC73B70", Offset = "0xC73B70", VA = "0xC73B70")]
			private void ApplyScannableAction(VRScannableSpawner scannableSpawner, VRScannableBase scannable)
			{
			}
		}

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScannableAction scannableAction;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB0E4", Offset = "0x8CB0E4")]
		[SerializeField]
		private SectorTagCollectionHierarchy scanObjectTags;

		[Token(Token = "0x17000741")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002683")]
			[Address(RVA = "0xC54D94", Offset = "0xC54D94", VA = "0xC54D94", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xC54DF4", Offset = "0xC54DF4", VA = "0xC54DF4")]
		public EntrySectorSlotScannableActionObject()
		{
		}
	}
	[Token(Token = "0x2000663")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACD40", Offset = "0x8ACD40")]
	public class EntrySectorTagObject : EntryBaseObject
	{
		[Token(Token = "0x2000664")]
		protected class InstanceSectorTag : EventEntry
		{
			[Token(Token = "0x2000665")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACDAC", Offset = "0x8ACDAC")]
			private sealed class <StartAsyncRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40022C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40022C9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40022CA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public InstanceSectorTag <>4__this;

				[Token(Token = "0x40022CB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private SectorTagCollection <tagCollection>5__2;

				[Token(Token = "0x17000743")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002690")]
					[Address(RVA = "0xEAC1CC", Offset = "0xEAC1CC", VA = "0xEAC1CC", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000744")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002692")]
					[Address(RVA = "0xEAC214", Offset = "0xEAC214", VA = "0xEAC214", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600268D")]
				[Address(RVA = "0xEABFCC", Offset = "0xEABFCC", VA = "0xEABFCC")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__4(int <>1__state)
				{
				}

				[Token(Token = "0x600268E")]
				[Address(RVA = "0xEABFF8", Offset = "0xEABFF8", VA = "0xEABFF8", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600268F")]
				[Address(RVA = "0xEABFFC", Offset = "0xEABFFC", VA = "0xEABFFC", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002691")]
				[Address(RVA = "0xEAC1D4", Offset = "0xEAC1D4", VA = "0xEAC1D4", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x40022C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SectorTagCollectionHierarchy tags;

			[Token(Token = "0x40022C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool saveGame;

			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

			[Token(Token = "0x600268A")]
			[Address(RVA = "0xC71028", Offset = "0xC71028", VA = "0xC71028")]
			public InstanceSectorTag(EntrySectorTagObject baseObject)
			{
			}

			[Token(Token = "0x600268B")]
			[Address(RVA = "0xC710F0", Offset = "0xC710F0", VA = "0xC710F0", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6C70", Offset = "0x8D6C70")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SectorTagCollectionHierarchy tags;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool saveGame;

		[Token(Token = "0x17000742")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002688")]
			[Address(RVA = "0xC54E04", Offset = "0xC54E04", VA = "0xC54E04", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xC546A0", Offset = "0xC546A0", VA = "0xC546A0")]
		public EntrySectorTagObject()
		{
		}
	}
	[Token(Token = "0x2000666")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACDBC", Offset = "0x8ACDBC")]
	public class EntrySectorTravelObject : EntryBaseObject
	{
		[Token(Token = "0x2000667")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Game.Menu.SectorMapNode.SectorMapNodeAction sectorAction;

			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool transitionVariantOverride;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SectorTransitionVariant transitionVariant;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SectorTagAmount[] overrideTags;

			[Token(Token = "0x6002695")]
			[Address(RVA = "0xC73D78", Offset = "0xC73D78", VA = "0xC73D78")]
			public Instance(EntrySectorTravelObject baseObject)
			{
			}

			[Token(Token = "0x6002696")]
			[Address(RVA = "0xC73DCC", Offset = "0xC73DCC", VA = "0xC73DCC", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Game.Menu.SectorMapNode.SectorMapNodeAction sectorAction;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool transitionVariantOverride;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SectorTransitionVariant transitionVariant;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SectorTagAmount[] overrideTags;

		[Token(Token = "0x17000745")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002693")]
			[Address(RVA = "0xC54E64", Offset = "0xC54E64", VA = "0xC54E64", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xC54EC4", Offset = "0xC54EC4", VA = "0xC54EC4")]
		public EntrySectorTravelObject()
		{
		}
	}
	[Token(Token = "0x2000668")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACE28", Offset = "0x8ACE28")]
	public class EntryShipActionsEnabledObject : EntryBaseObject
	{
		[Token(Token = "0x2000669")]
		public enum ActionStateChange
		{
			[Token(Token = "0x40022D8")]
			None,
			[Token(Token = "0x40022D9")]
			Enable,
			[Token(Token = "0x40022DA")]
			Disable
		}

		[Token(Token = "0x200066A")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ActionStateChange enableShipActions;

			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private ActionStateChange enableShipMoveActions;

			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ActionStateChange enableScannerActions;

			[Token(Token = "0x6002699")]
			[Address(RVA = "0xC73E10", Offset = "0xC73E10", VA = "0xC73E10")]
			public Instance(EntryShipActionsEnabledObject baseObject)
			{
			}

			[Token(Token = "0x600269A")]
			[Address(RVA = "0xC73E58", Offset = "0xC73E58", VA = "0xC73E58", Slot = "4")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ActionStateChange enableShipActions;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private ActionStateChange enableShipMoveActions;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ActionStateChange enableScannerActions;

		[Token(Token = "0x17000746")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x6002697")]
			[Address(RVA = "0xC54ECC", Offset = "0xC54ECC", VA = "0xC54ECC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0xC54F2C", Offset = "0xC54F2C", VA = "0xC54F2C")]
		public EntryShipActionsEnabledObject()
		{
		}
	}
	[Token(Token = "0x200066B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACE94", Offset = "0x8ACE94")]
	public class EntryTeleportShipsAwayObject : EntryBaseObject
	{
		[Token(Token = "0x200066C")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x200066D")]
			private struct TeleportShip
			{
				[Serializable]
				[Token(Token = "0x200066E")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACF00", Offset = "0x8ACF00")]
				private sealed class <>c
				{
					[Token(Token = "0x40022EA")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
					public static readonly <>c <>9;

					[Token(Token = "0x40022EB")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
					public static Action<SpaceEntity> <>9__3_0;

					[Token(Token = "0x60026A3")]
					[Address(RVA = "0xEAE8D0", Offset = "0xEAE8D0", VA = "0xEAE8D0")]
					public <>c()
					{
					}

					[Token(Token = "0x60026A4")]
					[Address(RVA = "0xEAE8D8", Offset = "0xEAE8D8", VA = "0xEAE8D8")]
					internal void <TryTeleport>b__3_0(SpaceEntity p)
					{
					}
				}

				[Token(Token = "0x40022E8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public SpaceShip ship;

				[Token(Token = "0x40022E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public float delay;

				[Token(Token = "0x60026A0")]
				[Address(RVA = "0xEACE78", Offset = "0xEACE78", VA = "0xEACE78")]
				public TeleportShip(SpaceShip ship, float delay)
				{
				}

				[Token(Token = "0x60026A1")]
				[Address(RVA = "0xEACC48", Offset = "0xEACC48", VA = "0xEACC48")]
				public bool TryTeleport(float teleportStartTime)
				{
					return default(bool);
				}
			}

			[Serializable]
			[Token(Token = "0x200066F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACF10", Offset = "0x8ACF10")]
			private sealed class <>c
			{
				[Token(Token = "0x40022EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x40022ED")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Predicate<SpaceShip> <>9__7_0;

				[Token(Token = "0x40022EE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static Predicate<SpaceShip> <>9__7_1;

				[Token(Token = "0x40022EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public static Predicate<SpaceShip> <>9__7_2;

				[Token(Token = "0x40022F0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public static Comparison<TeleportShip> <>9__7_3;

				[Token(Token = "0x60026A6")]
				[Address(RVA = "0xEAC280", Offset = "0xEAC280", VA = "0xEAC280")]
				public <>c()
				{
				}

				[Token(Token = "0x60026A7")]
				[Address(RVA = "0xEAC288", Offset = "0xEAC288", VA = "0xEAC288")]
				internal bool <StartAsyncRoutine>b__7_0(SpaceShip p)
				{
					return default(bool);
				}

				[Token(Token = "0x60026A8")]
				[Address(RVA = "0xEAC390", Offset = "0xEAC390", VA = "0xEAC390")]
				internal bool <StartAsyncRoutine>b__7_1(SpaceShip p)
				{
					return default(bool);
				}

				[Token(Token = "0x60026A9")]
				[Address(RVA = "0xEAC3BC", Offset = "0xEAC3BC", VA = "0xEAC3BC")]
				internal bool <StartAsyncRoutine>b__7_2(SpaceShip p)
				{
					return default(bool);
				}

				[Token(Token = "0x60026AA")]
				[Address(RVA = "0xEAC3E8", Offset = "0xEAC3E8", VA = "0xEAC3E8")]
				internal int <StartAsyncRoutine>b__7_3(TeleportShip a, TeleportShip b)
				{
					return default(int);
				}
			}

			[Token(Token = "0x2000670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACF20", Offset = "0x8ACF20")]
			private sealed class <StartAsyncRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40022F1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40022F2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40022F3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x40022F4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private List<TeleportShip> <teleportShips>5__2;

				[Token(Token = "0x40022F5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private float <teleportStartTime>5__3;

				[Token(Token = "0x40022F6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private int <i>5__4;

				[Token(Token = "0x40022F7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private List<TeleportShip>.Enumerator <>7__wrap4;

				[Token(Token = "0x40022F8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				private TeleportShip <teleportShip>5__6;

				[Token(Token = "0x17000748")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60026AF")]
					[Address(RVA = "0xEACE28", Offset = "0xEACE28", VA = "0xEACE28", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000749")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60026B1")]
					[Address(RVA = "0xEACE70", Offset = "0xEACE70", VA = "0xEACE70", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60026AB")]
				[Address(RVA = "0xEAC418", Offset = "0xEAC418", VA = "0xEAC418")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__7(int <>1__state)
				{
				}

				[Token(Token = "0x60026AC")]
				[Address(RVA = "0xEAC444", Offset = "0xEAC444", VA = "0xEAC444", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60026AD")]
				[Address(RVA = "0xEAC4B4", Offset = "0xEAC4B4", VA = "0xEAC4B4", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60026AE")]
				[Address(RVA = "0xEAC460", Offset = "0xEAC460", VA = "0xEAC460")]
				private void <>m__Finally1()
				{
				}

				[Token(Token = "0x60026B0")]
				[Address(RVA = "0xEACE30", Offset = "0xEACE30", VA = "0xEACE30", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x40022E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool teleportAlliedShipsAway;

			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			private bool teleportNeutralShipsAway;

			[Token(Token = "0x40022E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
			private bool teleportHostileShipsAway;

			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector2 teleportDelayRange;

			[Token(Token = "0x40022E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool waitForTeleportAway;

			[Token(Token = "0x600269D")]
			[Address(RVA = "0xC73FD8", Offset = "0xC73FD8", VA = "0xC73FD8")]
			public Instance(EntryTeleportShipsAwayObject baseObject)
			{
			}

			[Token(Token = "0x600269E")]
			[Address(RVA = "0xC74030", Offset = "0xC74030", VA = "0xC74030", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6D20", Offset = "0x8D6D20")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x600269F")]
			[Address(RVA = "0xC740A8", Offset = "0xC740A8", VA = "0xC740A8")]
			private void TeleportAwayAndDestroyShips(Predicate<SpaceShip> condition, List<TeleportShip> result)
			{
			}
		}

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB1C0", Offset = "0x8CB1C0")]
		public bool teleportAlliedShipsAway;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB1F8", Offset = "0x8CB1F8")]
		public bool teleportNeutralShipsAway;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB230", Offset = "0x8CB230")]
		public bool teleportHostileShipsAway;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB268", Offset = "0x8CB268")]
		public Vector2 teleportDelayRange;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB2A0", Offset = "0x8CB2A0")]
		public bool waitForTeleportAway;

		[Token(Token = "0x17000747")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x600269B")]
			[Address(RVA = "0xC54F34", Offset = "0xC54F34", VA = "0xC54F34", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xC54F94", Offset = "0xC54F94", VA = "0xC54F94")]
		public EntryTeleportShipsAwayObject()
		{
		}
	}
	[Token(Token = "0x2000671")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACF30", Offset = "0x8ACF30")]
	public class EntryTutorialEngagementObject : EntryBaseObject
	{
		[Token(Token = "0x2000672")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x2000673")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACF9C", Offset = "0x8ACF9C")]
			private sealed class <StartAsyncRoutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40022FB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40022FC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40022FD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x40022FE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private SectorEngagementSlotLayer <engagement>5__2;

				[Token(Token = "0x1700074B")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60026B9")]
					[Address(RVA = "0xEAD0BC", Offset = "0xEAD0BC", VA = "0xEAD0BC", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700074C")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60026BB")]
					[Address(RVA = "0xEAD104", Offset = "0xEAD104", VA = "0xEAD104", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60026B6")]
				[Address(RVA = "0xEACEAC", Offset = "0xEACEAC", VA = "0xEACEAC")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__2(int <>1__state)
				{
				}

				[Token(Token = "0x60026B7")]
				[Address(RVA = "0xEACED8", Offset = "0xEACED8", VA = "0xEACED8", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60026B8")]
				[Address(RVA = "0xEACEDC", Offset = "0xEACEDC", VA = "0xEACEDC", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60026BA")]
				[Address(RVA = "0xEAD0C4", Offset = "0xEAD0C4", VA = "0xEAD0C4", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x40022FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int tutorialEngagementIndex;

			[Token(Token = "0x60026B4")]
			[Address(RVA = "0xC7441C", Offset = "0xC7441C", VA = "0xC7441C")]
			public Instance(EntryTutorialEngagementObject baseObject)
			{
			}

			[Token(Token = "0x60026B5")]
			[Address(RVA = "0xC74454", Offset = "0xC74454", VA = "0xC74454", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6DD0", Offset = "0x8D6DD0")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}
		}

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int tutorialEngagementIndex;

		[Token(Token = "0x1700074A")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60026B2")]
			[Address(RVA = "0xC54FC4", Offset = "0xC54FC4", VA = "0xC54FC4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0xC55024", Offset = "0xC55024", VA = "0xC55024")]
		public EntryTutorialEngagementObject()
		{
		}
	}
	[Token(Token = "0x2000674")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ACFAC", Offset = "0x8ACFAC")]
	public class EntryTutorialObjectivesObject : EntryBaseObject
	{
		[Serializable]
		[Token(Token = "0x2000675")]
		public struct TutorialObjectiveEntry
		{
			[Token(Token = "0x4002302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TutorialObjectiveDescription objective;

			[Token(Token = "0x4002303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public ConScreenReactorBase conditionReactor;
		}

		[Token(Token = "0x2000676")]
		private class TutorialObjectiveInstance
		{
			[Token(Token = "0x4002304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4002305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TutorialObjective objective;

			[Token(Token = "0x4002306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public ConScreenReactorBase.ReactorInstance conditionReactor;

			[Token(Token = "0x60026BE")]
			[Address(RVA = "0xC746EC", Offset = "0xC746EC", VA = "0xC746EC")]
			public TutorialObjectiveInstance(int index, TutorialObjectiveEntry entry)
			{
			}

			[Token(Token = "0x60026BF")]
			[Address(RVA = "0xC747A4", Offset = "0xC747A4", VA = "0xC747A4")]
			public void CompleteObjective()
			{
			}
		}

		[Token(Token = "0x2000677")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x2000678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD018", Offset = "0x8AD018")]
			private sealed class <StartAsyncRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x400230B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400230C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x400230D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x1700074E")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60026C6")]
					[Address(RVA = "0xEAD7B8", Offset = "0xEAD7B8", VA = "0xEAD7B8", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700074F")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60026C8")]
					[Address(RVA = "0xEAD800", Offset = "0xEAD800", VA = "0xEAD800", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60026C3")]
				[Address(RVA = "0xEAD10C", Offset = "0xEAD10C", VA = "0xEAD10C")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__5(int <>1__state)
				{
				}

				[Token(Token = "0x60026C4")]
				[Address(RVA = "0xEAD138", Offset = "0xEAD138", VA = "0xEAD138", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60026C5")]
				[Address(RVA = "0xEAD13C", Offset = "0xEAD13C", VA = "0xEAD13C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60026C7")]
				[Address(RVA = "0xEAD7C0", Offset = "0xEAD7C0", VA = "0xEAD7C0", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4002307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float completeLingerTime;

			[Token(Token = "0x4002308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TutorialObjectivesInfo tutorialObjectivesInfo;

			[Token(Token = "0x4002309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private TutorialObjectiveEntry[] tutorialObjectivesEntries;

			[Token(Token = "0x400230A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private TutorialObjectiveInstance[] tutorialObjectivesInstances;

			[Token(Token = "0x60026C0")]
			[Address(RVA = "0xC744CC", Offset = "0xC744CC", VA = "0xC744CC")]
			public Instance(EntryTutorialObjectivesObject baseObject)
			{
			}

			[Token(Token = "0x60026C1")]
			[Address(RVA = "0xC74544", Offset = "0xC74544", VA = "0xC74544", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6E80", Offset = "0x8D6E80")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x60026C2")]
			[Address(RVA = "0xC745BC", Offset = "0xC745BC", VA = "0xC745BC", Slot = "5")]
			public override void OnInterupt()
			{
			}
		}

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float completeLingerTime;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TutorialObjectivesInfo tutorialObjectivesInfo;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TutorialObjectiveEntry[] tutorialObjectives;

		[Token(Token = "0x1700074D")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60026BC")]
			[Address(RVA = "0xC5502C", Offset = "0xC5502C", VA = "0xC5502C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0xC5508C", Offset = "0xC5508C", VA = "0xC5508C")]
		public EntryTutorialObjectivesObject()
		{
		}
	}
	[Token(Token = "0x2000679")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD028", Offset = "0x8AD028")]
	public class EntryWaitForSectorsObject : EntryBaseObject
	{
		[Token(Token = "0x200067A")]
		private class Instance : EventEntry
		{
			[Token(Token = "0x200067B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD094", Offset = "0x8AD094")]
			private sealed class <StartAsyncRoutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4002310")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4002311")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4002312")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Instance <>4__this;

				[Token(Token = "0x17000751")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60026D2")]
					[Address(RVA = "0xEAD9F0", Offset = "0xEAD9F0", VA = "0xEAD9F0", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000752")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60026D4")]
					[Address(RVA = "0xEADA38", Offset = "0xEADA38", VA = "0xEADA38", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60026CF")]
				[Address(RVA = "0xEAD808", Offset = "0xEAD808", VA = "0xEAD808")]
				[DebuggerHidden]
				public <StartAsyncRoutine>d__3(int <>1__state)
				{
				}

				[Token(Token = "0x60026D0")]
				[Address(RVA = "0xEAD834", Offset = "0xEAD834", VA = "0xEAD834", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60026D1")]
				[Address(RVA = "0xEAD838", Offset = "0xEAD838", VA = "0xEAD838", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60026D3")]
				[Address(RVA = "0xEAD9F8", Offset = "0xEAD9F8", VA = "0xEAD9F8", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x400230F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int waitFor;

			[Token(Token = "0x60026CB")]
			[Address(RVA = "0xC74874", Offset = "0xC74874", VA = "0xC74874")]
			public Instance(EntryWaitForSectorsObject baseObject, int waitFor)
			{
			}

			[Token(Token = "0x60026CC")]
			[Address(RVA = "0xC748A0", Offset = "0xC748A0", VA = "0xC748A0", Slot = "5")]
			public override void OnInterupt()
			{
			}

			[Token(Token = "0x60026CD")]
			[Address(RVA = "0xC74980", Offset = "0xC74980", VA = "0xC74980", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D6F30", Offset = "0x8D6F30")]
			public override IEnumerator StartAsyncRoutine()
			{
				return null;
			}

			[Token(Token = "0x60026CE")]
			[Address(RVA = "0xC749F8", Offset = "0xC749F8", VA = "0xC749F8")]
			private void OnSectorStart()
			{
			}
		}

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int waitForSectors;

		[Token(Token = "0x17000750")]
		public override EventEntry GetEntry
		{
			[Token(Token = "0x60026C9")]
			[Address(RVA = "0xC55094", Offset = "0xC55094", VA = "0xC55094", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0xC55104", Offset = "0xC55104", VA = "0xC55104")]
		public EntryWaitForSectorsObject()
		{
		}
	}
	[Token(Token = "0x200067C")]
	public abstract class EventCondition : ScriptableObject
	{
		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool invertEventCondition;

		[Token(Token = "0x60026D5")]
		protected abstract bool CheckEventConditionInternal();

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0xC565AC", Offset = "0xC565AC", VA = "0xC565AC")]
		public bool CheckEventCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xC565E8", Offset = "0xC565E8", VA = "0xC565E8")]
		public static bool CheckEventConditions(IEnumerable<EventCondition> conditions)
		{
			return default(bool);
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0xC568DC", Offset = "0xC568DC", VA = "0xC568DC")]
		protected EventCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200067D")]
	public class EventAudioData
	{
		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Id;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SfxTrigger Audio;

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xC565A4", Offset = "0xC565A4", VA = "0xC565A4")]
		public EventAudioData()
		{
		}
	}
	[Token(Token = "0x200067E")]
	public class EventManager : MonoBehaviourSingleton<EventManager>, IGameLoaderSubsystem
	{
		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD0A4", Offset = "0x8AD0A4")]
		private sealed class <LoadSectorTagEvents>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400231C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400231D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400231E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<string> eventNames;

			[Token(Token = "0x400231F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EventManager <>4__this;

			[Token(Token = "0x4002320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x4002321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <eventName>5__3;

			[Token(Token = "0x4002322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncOperationHandle<EventObject> <eventHandle>5__4;

			[Token(Token = "0x17000755")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026F9")]
				[Address(RVA = "0xC75BE0", Offset = "0xC75BE0", VA = "0xC75BE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000756")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026FB")]
				[Address(RVA = "0xC75C28", Offset = "0xC75C28", VA = "0xC75C28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026F6")]
			[Address(RVA = "0xC75848", Offset = "0xC75848", VA = "0xC75848")]
			[DebuggerHidden]
			public <LoadSectorTagEvents>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60026F7")]
			[Address(RVA = "0xC75874", Offset = "0xC75874", VA = "0xC75874", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026F8")]
			[Address(RVA = "0xC75878", Offset = "0xC75878", VA = "0xC75878", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026FA")]
			[Address(RVA = "0xC75BE8", Offset = "0xC75BE8", VA = "0xC75BE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD0B4", Offset = "0x8AD0B4")]
		private sealed class <RemoveEntityRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpaceEntity entity;

			[Token(Token = "0x4002326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EventManager <>4__this;

			[Token(Token = "0x17000757")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026FF")]
				[Address(RVA = "0xC75E0C", Offset = "0xC75E0C", VA = "0xC75E0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000758")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002701")]
				[Address(RVA = "0xC75E54", Offset = "0xC75E54", VA = "0xC75E54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026FC")]
			[Address(RVA = "0xC75C30", Offset = "0xC75C30", VA = "0xC75C30")]
			[DebuggerHidden]
			public <RemoveEntityRoutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60026FD")]
			[Address(RVA = "0xC75C5C", Offset = "0xC75C5C", VA = "0xC75C5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026FE")]
			[Address(RVA = "0xC75C60", Offset = "0xC75C60", VA = "0xC75C60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002700")]
			[Address(RVA = "0xC75E14", Offset = "0xC75E14", VA = "0xC75E14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB338", Offset = "0x8CB338")]
		private List<SpaceEntity> <EventEntities>k__BackingField;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<bool> OnEventObjectiveCompleteChanged;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<EventAudioData> eventAudio;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool eventObjectiveComplete;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<EventData> currentEvents;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0x8CB348", Offset = "0x8CB348")]
		private List<(EventData, AsyncOperationHandle<EventObject>)> loadedAddressableEvents;

		[Token(Token = "0x17000753")]
		public List<SpaceEntity> EventEntities
		{
			[Token(Token = "0x60026DA")]
			[Address(RVA = "0xC57D14", Offset = "0xC57D14", VA = "0xC57D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6FE0", Offset = "0x8D6FE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026DB")]
			[Address(RVA = "0xC57D1C", Offset = "0xC57D1C", VA = "0xC57D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D6FF0", Offset = "0x8D6FF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000754")]
		public bool EventObjectiveComplete
		{
			[Token(Token = "0x60026DC")]
			[Address(RVA = "0xC57D24", Offset = "0xC57D24", VA = "0xC57D24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026DD")]
			[Address(RVA = "0xC57D2C", Offset = "0xC57D2C", VA = "0xC57D2C")]
			set
			{
			}
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xC57E54", Offset = "0xC57E54", VA = "0xC57E54", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0xC57F68", Offset = "0xC57F68", VA = "0xC57F68", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0xC581A0", Offset = "0xC581A0", VA = "0xC581A0", Slot = "11")]
		private YieldInstruction Game.Manager.IGameLoaderSubsystem.OnGameSetupAsync(SectorTagsInput tags)
		{
			return null;
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0xC585EC", Offset = "0xC585EC", VA = "0xC585EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7000", Offset = "0x8D7000")]
		private IEnumerator LoadSectorTagEvents(List<string> eventNames)
		{
			return null;
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0xC58680", Offset = "0xC58680", VA = "0xC58680", Slot = "8")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadPrepare(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0xC58688", Offset = "0xC58688", VA = "0xC58688", Slot = "10")]
		private void Game.Manager.IGameLoaderSubsystem.OnUnloadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0xC58844", Offset = "0xC58844", VA = "0xC58844")]
		private void OnPlayerShipChanged(SpaceShip playerShip)
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0xC5899C", Offset = "0xC5899C", VA = "0xC5899C")]
		public void RegisterEventAudio(EventAudioData[] audioData)
		{
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0xC58A6C", Offset = "0xC58A6C", VA = "0xC58A6C")]
		public void RemoveEventAudio(string[] id)
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0xC58C58", Offset = "0xC58C58", VA = "0xC58C58")]
		public void RemoveAllEventAudio()
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0xC58D8C", Offset = "0xC58D8C", VA = "0xC58D8C")]
		public void RemoveEntity(SpaceEntity entity)
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0xC58FEC", Offset = "0xC58FEC", VA = "0xC58FEC")]
		public void RemoveAllEntities()
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0xC58F58", Offset = "0xC58F58", VA = "0xC58F58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7060", Offset = "0x8D7060")]
		private IEnumerator RemoveEntityRoutine(SpaceEntity entity)
		{
			return null;
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0xC59158", Offset = "0xC59158", VA = "0xC59158")]
		private int GetUniqueId()
		{
			return default(int);
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0xC5922C", Offset = "0xC5922C", VA = "0xC5922C")]
		public EventData StartEvent(EventObject eventObj)
		{
			return null;
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0xC59508", Offset = "0xC59508", VA = "0xC59508")]
		public void EventFinished(int id)
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0xC58848", Offset = "0xC58848", VA = "0xC58848")]
		public void StopAllEvents()
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0xC58768", Offset = "0xC58768", VA = "0xC58768")]
		public void StopEvent(int id)
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0xC595E4", Offset = "0xC595E4", VA = "0xC595E4")]
		private bool TryRemoveFromList(int id, bool interupt)
		{
			return default(bool);
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0xC59780", Offset = "0xC59780", VA = "0xC59780", Slot = "6")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0xC59784", Offset = "0xC59784", VA = "0xC59784", Slot = "7")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0xC59788", Offset = "0xC59788", VA = "0xC59788", Slot = "9")]
		private void Game.Manager.IGameLoaderSubsystem.OnLoadWindDown(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0xC5978C", Offset = "0xC5978C", VA = "0xC5978C", Slot = "12")]
		private void Game.Manager.IGameLoaderSubsystem.OnGameStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xC59790", Offset = "0xC59790", VA = "0xC59790")]
		public EventManager()
		{
		}
	}
	[Token(Token = "0x2000681")]
	public enum EventRunEnum
	{
		[Token(Token = "0x4002328")]
		Any,
		[Token(Token = "0x4002329")]
		AtSectorStart,
		[Token(Token = "0x400232A")]
		OnSectorClear,
		[Token(Token = "0x400232B")]
		AtSectorWindDown
	}
	[Serializable]
	[Token(Token = "0x2000682")]
	public class EventData
	{
		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD0C4", Offset = "0x8AD0C4")]
		private sealed class <EventRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventData <>4__this;

			[Token(Token = "0x4002338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IEnumerator <entryRoutine>5__2;

			[Token(Token = "0x4002339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x400233A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private EventEntry <entry>5__4;

			[Token(Token = "0x17000759")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600270F")]
				[Address(RVA = "0xC75288", Offset = "0xC75288", VA = "0xC75288", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700075A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002711")]
				[Address(RVA = "0xC752D0", Offset = "0xC752D0", VA = "0xC752D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600270C")]
			[Address(RVA = "0xC74C48", Offset = "0xC74C48", VA = "0xC74C48")]
			[DebuggerHidden]
			public <EventRoutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600270D")]
			[Address(RVA = "0xC74C74", Offset = "0xC74C74", VA = "0xC74C74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600270E")]
			[Address(RVA = "0xC74C78", Offset = "0xC74C78", VA = "0xC74C78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002710")]
			[Address(RVA = "0xC75290", Offset = "0xC75290", VA = "0xC75290", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD0D4", Offset = "0x8AD0D4")]
		private sealed class <WaitForSectorStartEnumerator>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400233B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400233C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400233D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventData <>4__this;

			[Token(Token = "0x1700075B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002715")]
				[Address(RVA = "0xC755B8", Offset = "0xC755B8", VA = "0xC755B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700075C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002717")]
				[Address(RVA = "0xC75600", Offset = "0xC75600", VA = "0xC75600", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002712")]
			[Address(RVA = "0xC753F4", Offset = "0xC753F4", VA = "0xC753F4")]
			[DebuggerHidden]
			public <WaitForSectorStartEnumerator>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002713")]
			[Address(RVA = "0xC75420", Offset = "0xC75420", VA = "0xC75420", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002714")]
			[Address(RVA = "0xC75424", Offset = "0xC75424", VA = "0xC75424", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002716")]
			[Address(RVA = "0xC755C0", Offset = "0xC755C0", VA = "0xC755C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000685")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD0E4", Offset = "0x8AD0E4")]
		private sealed class <WaitForSectorWindDownEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400233E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400233F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventData <>4__this;

			[Token(Token = "0x1700075D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600271B")]
				[Address(RVA = "0xC757F8", Offset = "0xC757F8", VA = "0xC757F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700075E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600271D")]
				[Address(RVA = "0xC75840", Offset = "0xC75840", VA = "0xC75840", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002718")]
			[Address(RVA = "0xC75608", Offset = "0xC75608", VA = "0xC75608")]
			[DebuggerHidden]
			public <WaitForSectorWindDownEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002719")]
			[Address(RVA = "0xC75634", Offset = "0xC75634", VA = "0xC75634", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600271A")]
			[Address(RVA = "0xC75638", Offset = "0xC75638", VA = "0xC75638", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600271C")]
			[Address(RVA = "0xC75800", Offset = "0xC75800", VA = "0xC75800", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD0F4", Offset = "0x8AD0F4")]
		private sealed class <WaitForSectorClearEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700075F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002721")]
				[Address(RVA = "0xC753A4", Offset = "0xC753A4", VA = "0xC753A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000760")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002723")]
				[Address(RVA = "0xC753EC", Offset = "0xC753EC", VA = "0xC753EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600271E")]
			[Address(RVA = "0xC752D8", Offset = "0xC752D8", VA = "0xC752D8")]
			[DebuggerHidden]
			public <WaitForSectorClearEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600271F")]
			[Address(RVA = "0xC75304", Offset = "0xC75304", VA = "0xC75304", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002720")]
			[Address(RVA = "0xC75308", Offset = "0xC75308", VA = "0xC75308", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002722")]
			[Address(RVA = "0xC753AC", Offset = "0xC753AC", VA = "0xC753AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EventRunEnum Run;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float RunWait;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool RunSpanMultipleSectors;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventEntry[] Entries;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Id;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string EventName;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine routine;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool atSectorStart;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool atSectorWindDown;

		[Token(Token = "0x6002702")]
		[Address(RVA = "0xC57870", Offset = "0xC57870", VA = "0xC57870")]
		public void StartEvent()
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0xC57918", Offset = "0xC57918", VA = "0xC57918")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7160", Offset = "0x8D7160")]
		private IEnumerator EventRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0xC57990", Offset = "0xC57990", VA = "0xC57990")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0xC57B00", Offset = "0xC57B00", VA = "0xC57B00")]
		private IEnumerator CreateWaitEnumerator(EventRunEnum run)
		{
			return null;
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0xC57B2C", Offset = "0xC57B2C", VA = "0xC57B2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D71C0", Offset = "0x8D71C0")]
		private IEnumerator WaitForSectorStartEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0xC57BA4", Offset = "0xC57BA4", VA = "0xC57BA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7220", Offset = "0x8D7220")]
		private IEnumerator WaitForSectorWindDownEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0xC57C1C", Offset = "0xC57C1C", VA = "0xC57C1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7280", Offset = "0x8D7280")]
		private IEnumerator WaitForSectorClearEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0xC57C78", Offset = "0xC57C78", VA = "0xC57C78")]
		private void OnSectorStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0xC57C84", Offset = "0xC57C84", VA = "0xC57C84")]
		private void OnSectorWindDown(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0xC57C90", Offset = "0xC57C90", VA = "0xC57C90")]
		public EventData()
		{
		}
	}
	[Token(Token = "0x2000687")]
	public abstract class EventEntry
	{
		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EventName;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventRunEnum Run;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RunWait;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventAudioData[] AudioToPlay;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] AudioToStop;

		[Token(Token = "0x6002724")]
		[Address(RVA = "0xC57C98", Offset = "0xC57C98", VA = "0xC57C98")]
		public EventEntry(EntryBaseObject objectBase)
		{
		}

		[Token(Token = "0x6002725")]
		public abstract IEnumerator StartAsyncRoutine();

		[Token(Token = "0x6002726")]
		[Address(RVA = "0xC57D10", Offset = "0xC57D10", VA = "0xC57D10", Slot = "5")]
		public virtual void OnInterupt()
		{
		}
	}
	[Token(Token = "0x2000688")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD104", Offset = "0x8AD104")]
	public class EventObject : ScriptableObject
	{
		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB3E4", Offset = "0x8CB3E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB3E4", Offset = "0x8CB3E4")]
		public EventRunEnum Run;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CB444", Offset = "0x8CB444")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB444", Offset = "0x8CB444")]
		public float RunWait;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB498", Offset = "0x8CB498")]
		public bool RunSpanMultipleSectors;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB4D0", Offset = "0x8CB4D0")]
		public EntryBaseObject[] entries;

		[Token(Token = "0x17000761")]
		public EventData EventData
		{
			[Token(Token = "0x6002727")]
			[Address(RVA = "0xC59394", Offset = "0xC59394", VA = "0xC59394")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0xC5994C", Offset = "0xC5994C", VA = "0xC5994C")]
		public EventObject()
		{
		}
	}
	[Token(Token = "0x2000689")]
	public class EventPlayer : GameMonoBehaviour
	{
		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD16C", Offset = "0x8AD16C")]
		private sealed class <WaitForManagers>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400234F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventPlayer <>4__this;

			[Token(Token = "0x17000764")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002732")]
				[Address(RVA = "0xC75F04", Offset = "0xC75F04", VA = "0xC75F04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000765")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002734")]
				[Address(RVA = "0xC75F4C", Offset = "0xC75F4C", VA = "0xC75F4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600272F")]
			[Address(RVA = "0xC75E5C", Offset = "0xC75E5C", VA = "0xC75E5C")]
			[DebuggerHidden]
			public <WaitForManagers>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002730")]
			[Address(RVA = "0xC75E88", Offset = "0xC75E88", VA = "0xC75E88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002731")]
			[Address(RVA = "0xC75E8C", Offset = "0xC75E8C", VA = "0xC75E8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002733")]
			[Address(RVA = "0xC75F0C", Offset = "0xC75F0C", VA = "0xC75F0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private EventObject eventToPlay;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool runOnAwake;

		[Token(Token = "0x17000762")]
		private bool AreManagersReady
		{
			[Token(Token = "0x6002729")]
			[Address(RVA = "0xC59954", Offset = "0xC59954", VA = "0xC59954")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000763")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x600272A")]
			[Address(RVA = "0xC59A5C", Offset = "0xC59A5C", VA = "0xC59A5C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0xC59A64", Offset = "0xC59A64", VA = "0xC59A64", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0xC59AB8", Offset = "0xC59AB8", VA = "0xC59AB8")]
		public void PlayEvent()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0xC59B94", Offset = "0xC59B94", VA = "0xC59B94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7420", Offset = "0x8D7420")]
		private IEnumerator WaitForManagers()
		{
			return null;
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0xC59C0C", Offset = "0xC59C0C", VA = "0xC59C0C")]
		public EventPlayer()
		{
		}
	}
}
namespace Events.Conversation
{
	[Token(Token = "0x200068B")]
	public abstract class ConDisplay
	{
		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ConversationEvent conversation;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB528", Offset = "0x8CB528")]
		private bool <IsSetUp>k__BackingField;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB538", Offset = "0x8CB538")]
		private float <ExitTime>k__BackingField;

		[Token(Token = "0x17000766")]
		public bool IsSetUp
		{
			[Token(Token = "0x6002735")]
			[Address(RVA = "0xFE9650", Offset = "0xFE9650", VA = "0xFE9650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D74D0", Offset = "0x8D74D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002736")]
			[Address(RVA = "0xFE9658", Offset = "0xFE9658", VA = "0xFE9658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D74E0", Offset = "0x8D74E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000767")]
		public float ExitTime
		{
			[Token(Token = "0x6002737")]
			[Address(RVA = "0xFE9664", Offset = "0xFE9664", VA = "0xFE9664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D74F0", Offset = "0x8D74F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002738")]
			[Address(RVA = "0xFE966C", Offset = "0xFE966C", VA = "0xFE966C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7500", Offset = "0x8D7500")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xFE9674", Offset = "0xFE9674", VA = "0xFE9674")]
		public ConDisplay(float exitTime)
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0xFE96A8", Offset = "0xFE96A8", VA = "0xFE96A8", Slot = "4")]
		public virtual void Setup(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0xFE96B8", Offset = "0xFE96B8", VA = "0xFE96B8", Slot = "5")]
		public virtual void Cleanup()
		{
		}

		[Token(Token = "0x600273C")]
		public abstract bool Display();

		[Token(Token = "0x600273D")]
		[Address(RVA = "0xFE96BC", Offset = "0xFE96BC", VA = "0xFE96BC", Slot = "7")]
		public virtual void Tick(float delta)
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0xFE96C0", Offset = "0xFE96C0", VA = "0xFE96C0", Slot = "8")]
		public virtual void Remove()
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0xFE96C4", Offset = "0xFE96C4", VA = "0xFE96C4", Slot = "9")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0xFE96C8", Offset = "0xFE96C8", VA = "0xFE96C8", Slot = "10")]
		public virtual void OnBeforeEnqueued()
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xFE96CC", Offset = "0xFE96CC", VA = "0xFE96CC", Slot = "11")]
		public virtual void OnAfterEnqueued()
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xFE96D0", Offset = "0xFE96D0", VA = "0xFE96D0", Slot = "12")]
		public virtual bool OnPlayerInput(int selection)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200068C")]
	public abstract class ConDisplay<TOption> : ConDisplay where TOption : ConDisplayOption
	{
		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected IReadOnlyList<TOption> options;

		[Token(Token = "0x6002743")]
		public ConDisplay(float exitTime, IReadOnlyList<TOption> options)
		{
		}

		[Token(Token = "0x6002744")]
		public override void Setup(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x6002745")]
		public void SetupOptions()
		{
		}

		[Token(Token = "0x6002746")]
		public override bool OnPlayerInput(int selection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002747")]
		protected bool SelectOption(int index)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200068D")]
	public class ConDisplayOption
	{
		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizationKey answer;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool buttonHold;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ConDisplay display;

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xFE9708", Offset = "0xFE9708", VA = "0xFE9708")]
		public ConDisplayOption(LocalizationKey answer, bool buttonHold = true)
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0xFE975C", Offset = "0xFE975C", VA = "0xFE975C")]
		public void Setup(ConDisplay display)
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0xFE9764", Offset = "0xFE9764", VA = "0xFE9764", Slot = "4")]
		public virtual void OnPlayerSelect()
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0xFE9768", Offset = "0xFE9768", VA = "0xFE9768", Slot = "5")]
		public virtual void AppendEffectText(StringBuilder builder)
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0xFE976C", Offset = "0xFE976C", VA = "0xFE976C", Slot = "6")]
		public virtual bool CheckOptionConditions()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200068E")]
	public class ConScreenQuestion : ConDisplay<AnswerData>
	{
		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string screenId;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected ConBackgroundObject background;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected LocalizationColor highlightColor;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected ConNpcObject npc;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool npcFlipped;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected LocalizationKey question;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected LocalizationKey text;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected WeightedRandom<string> nextScreen;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected WeightedRandom<EventObject> nextEvent;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected WeightedRandom<ConRewardObjectBase> screenReward;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected SectorTagCollectionHierarchy screenTags;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected SfxTrigger audioVoiceOver;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected EventAudioData[] audioToPlay;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected string[] audioToStop;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected ConScreenReactorBase reactor;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected ConScreenReactorBase.ReactorInstance reactorInstance;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SectorTagCollection CHECK_TAG_COLLECTION;

		[Token(Token = "0x17000768")]
		public ConBackgroundObject Background
		{
			[Token(Token = "0x600274E")]
			[Address(RVA = "0xFED588", Offset = "0xFED588", VA = "0xFED588")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0xFED38C", Offset = "0xFED38C", VA = "0xFED38C")]
		public ConScreenQuestion(float exitTime, string screenId, ConBackgroundObject background, LocalizationColor highlightColor, ConNpcObject npc, bool npcFlipped, LocalizationKey text, ConScreenReactorBase reactor, WeightedRandom<string> nextScreen, WeightedRandom<EventObject> nextEvent, WeightedRandom<ConRewardObjectBase> screenReward, SectorTagCollectionHierarchy screenTags, SfxTrigger audioVoiceOver, EventAudioData[] audioToPlay, string[] audioToStop, LocalizationKey question, AnswerData[] answers)
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0xFED590", Offset = "0xFED590", VA = "0xFED590", Slot = "4")]
		public override void Setup(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0xFED688", Offset = "0xFED688", VA = "0xFED688", Slot = "5")]
		public override void Cleanup()
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0xFED72C", Offset = "0xFED72C", VA = "0xFED72C", Slot = "6")]
		public override bool Display()
		{
			return default(bool);
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0xFEDAA0", Offset = "0xFEDAA0", VA = "0xFEDAA0", Slot = "7")]
		public override void Tick(float delta)
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0xFEDAB8", Offset = "0xFEDAB8", VA = "0xFEDAB8", Slot = "8")]
		public override void Remove()
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0xFEDCFC", Offset = "0xFEDCFC", VA = "0xFEDCFC", Slot = "9")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0xFEDDB0", Offset = "0xFEDDB0", VA = "0xFEDDB0", Slot = "10")]
		public override void OnBeforeEnqueued()
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0xFEDF98", Offset = "0xFEDF98", VA = "0xFEDF98", Slot = "12")]
		public override bool OnPlayerInput(int selection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0xFEDBF8", Offset = "0xFEDBF8", VA = "0xFEDBF8")]
		private static void StopAudioVoiceOver(SfxTrigger audioTrigger, bool unload)
		{
		}
	}
	[Token(Token = "0x200068F")]
	public class AnswerData : ConDisplayOption
	{
		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightedRandom<ConRewardObjectBase> possibleAnswerRewards;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WeightedRandom<AnswerScreenData> nextScreen;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WeightedRandom<EventObject> onCompletedEvent;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SectorTagCollectionHierarchy onCompletedTags;

		[Token(Token = "0x6002759")]
		[Address(RVA = "0xEEBB0C", Offset = "0xEEBB0C", VA = "0xEEBB0C")]
		public AnswerData(LocalizationKey answer, bool buttonHold, WeightedRandom<AnswerScreenData> nextScreens, WeightedRandom<ConRewardObjectBase> possibleAnswerRewards, WeightedRandom<EventObject> onCompletedEvent, SectorTagCollectionHierarchy onCompletedTags)
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0xEEBB94", Offset = "0xEEBB94", VA = "0xEEBB94", Slot = "4")]
		public override void OnPlayerSelect()
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0xEEBF0C", Offset = "0xEEBF0C", VA = "0xEEBF0C", Slot = "5")]
		public override void AppendEffectText(StringBuilder builder)
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0xEEC3A0", Offset = "0xEEC3A0", VA = "0xEEC3A0", Slot = "6")]
		public override bool CheckOptionConditions()
		{
			return default(bool);
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0xEEC0F4", Offset = "0xEEC0F4", VA = "0xEEC0F4")]
		public static void FormatRewards(StringBuilder builder, WeightedRandom<ConRewardObjectBase> rewards, ref int chanceRewardsAppended, float chanceMultiplier, string chanceOrFormat)
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0xEEC454", Offset = "0xEEC454", VA = "0xEEC454")]
		public static bool CheckRewardConditionsList(WeightedRandom<ConRewardObjectBase> rewards, float chanceMultiplier)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000690")]
	public struct AnswerScreenData
	{
		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string screenId;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float screenChance;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WeightedRandom<ConRewardObjectBase> possibleScreenRewards;

		[Token(Token = "0x600275F")]
		[Address(RVA = "0xEEC620", Offset = "0xEEC620", VA = "0xEEC620")]
		public AnswerScreenData(string screenId, float screenChance, WeightedRandom<ConRewardObjectBase> possibleScreenRewards)
		{
		}
	}
	[Token(Token = "0x2000691")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD17C", Offset = "0x8AD17C")]
	public class ConScreenReactorAbilityActivate : ConScreenReactorBase
	{
		[Token(Token = "0x2000692")]
		public class ReactorInstanceAbilityActivate : ReactorInstance
		{
			[Token(Token = "0x4002371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SectorTag abilitySourceTag;

			[Token(Token = "0x6002762")]
			[Address(RVA = "0xC68414", Offset = "0xC68414", VA = "0xC68414")]
			public ReactorInstanceAbilityActivate(SectorTag abilitySourceTag)
			{
			}

			[Token(Token = "0x6002763")]
			[Address(RVA = "0xC68460", Offset = "0xC68460", VA = "0xC68460", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x6002764")]
			[Address(RVA = "0xC68544", Offset = "0xC68544", VA = "0xC68544", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x6002765")]
			[Address(RVA = "0xC6861C", Offset = "0xC6861C", VA = "0xC6861C")]
			private void OnAbilityActivate(ShipAbilityActive ability)
			{
			}
		}

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8CB548", Offset = "0x8CB548")]
		[SerializeField]
		private SectorTag abilitySourceTag;

		[Token(Token = "0x6002760")]
		[Address(RVA = "0xFEE16C", Offset = "0xFEE16C", VA = "0xFEE16C", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0xFEE1DC", Offset = "0xFEE1DC", VA = "0xFEE1DC")]
		public ConScreenReactorAbilityActivate()
		{
		}
	}
	[Token(Token = "0x2000693")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD1E8", Offset = "0x8AD1E8")]
	public class ConScreenReactorAbilitySelect : ConScreenReactorBase
	{
		[Token(Token = "0x2000694")]
		public class ReactorInstanceAbilitySelect : ReactorInstance
		{
			[Token(Token = "0x4002373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SectorTag abilitySourceTag;

			[Token(Token = "0x6002768")]
			[Address(RVA = "0xC686A8", Offset = "0xC686A8", VA = "0xC686A8")]
			public ReactorInstanceAbilitySelect(SectorTag abilitySourceTag)
			{
			}

			[Token(Token = "0x6002769")]
			[Address(RVA = "0xC686EC", Offset = "0xC686EC", VA = "0xC686EC", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x600276A")]
			[Address(RVA = "0xC687A0", Offset = "0xC687A0", VA = "0xC687A0", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x600276B")]
			[Address(RVA = "0xC68848", Offset = "0xC68848", VA = "0xC68848")]
			private void OnAbilitySelect(ShipAbilityActive ability)
			{
			}
		}

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8CB594", Offset = "0x8CB594")]
		private SectorTag abilitySourceTag;

		[Token(Token = "0x6002766")]
		[Address(RVA = "0xFEE1EC", Offset = "0xFEE1EC", VA = "0xFEE1EC", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0xFEE25C", Offset = "0xFEE25C", VA = "0xFEE25C")]
		public ConScreenReactorAbilitySelect()
		{
		}
	}
	[Token(Token = "0x2000695")]
	public abstract class ConScreenReactorBase : ScriptableObject
	{
		[Token(Token = "0x2000696")]
		public abstract class ReactorInstance
		{
			[Token(Token = "0x4002374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CB5E0", Offset = "0x8CB5E0")]
			private bool <HasReacted>k__BackingField;

			[Token(Token = "0x4002376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected ConDisplay display;

			[Token(Token = "0x4002377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			protected bool isActive;

			[Token(Token = "0x17000769")]
			public bool HasReacted
			{
				[Token(Token = "0x600276E")]
				[Address(RVA = "0xC688CC", Offset = "0xC688CC", VA = "0xC688CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7510", Offset = "0x8D7510")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600276F")]
				[Address(RVA = "0xC688D4", Offset = "0xC688D4", VA = "0xC688D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7520", Offset = "0x8D7520")]
				protected set
				{
				}
			}

			[Token(Token = "0x1400009F")]
			public event Action OnReact
			{
				[Token(Token = "0x6002770")]
				[Address(RVA = "0xC688E0", Offset = "0xC688E0", VA = "0xC688E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7530", Offset = "0x8D7530")]
				add
				{
				}
				[Token(Token = "0x6002771")]
				[Address(RVA = "0xC68980", Offset = "0xC68980", VA = "0xC68980")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7540", Offset = "0x8D7540")]
				remove
				{
				}
			}

			[Token(Token = "0x6002772")]
			[Address(RVA = "0xC68514", Offset = "0xC68514", VA = "0xC68514", Slot = "4")]
			public virtual void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x6002773")]
			[Address(RVA = "0xC685EC", Offset = "0xC685EC", VA = "0xC685EC", Slot = "5")]
			public virtual void OnStop()
			{
			}

			[Token(Token = "0x6002774")]
			[Address(RVA = "0xC68A20", Offset = "0xC68A20", VA = "0xC68A20", Slot = "6")]
			public virtual void Tick(float deltaTime)
			{
			}

			[Token(Token = "0x6002775")]
			[Address(RVA = "0xC686A0", Offset = "0xC686A0", VA = "0xC686A0")]
			protected void DoReact()
			{
			}

			[Token(Token = "0x6002776")]
			[Address(RVA = "0xC68A24", Offset = "0xC68A24", VA = "0xC68A24")]
			protected void DoReact(int selection)
			{
			}

			[Token(Token = "0x6002777")]
			[Address(RVA = "0xC68458", Offset = "0xC68458", VA = "0xC68458")]
			protected ReactorInstance()
			{
			}
		}

		[Token(Token = "0x600276C")]
		public abstract ReactorInstance CreateInstance();

		[Token(Token = "0x600276D")]
		[Address(RVA = "0xFEE1E4", Offset = "0xFEE1E4", VA = "0xFEE1E4")]
		protected ConScreenReactorBase()
		{
		}
	}
	[Token(Token = "0x2000697")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD254", Offset = "0x8AD254")]
	public class ConScreenReactorChain : ConScreenReactorBase
	{
		[Token(Token = "0x2000698")]
		public class ReactorInstanceChain : ReactorInstance
		{
			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Queue<ConScreenReactorBase> reactorChain;

			[Token(Token = "0x400237A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ReactorInstance currentReactor;

			[Token(Token = "0x600277A")]
			[Address(RVA = "0xC68A74", Offset = "0xC68A74", VA = "0xC68A74")]
			public ReactorInstanceChain(ConScreenReactorBase[] reactorChain)
			{
			}

			[Token(Token = "0x600277B")]
			[Address(RVA = "0xC68B94", Offset = "0xC68B94", VA = "0xC68B94", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x600277C")]
			[Address(RVA = "0xC68CA4", Offset = "0xC68CA4", VA = "0xC68CA4", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x600277D")]
			[Address(RVA = "0xC68D38", Offset = "0xC68D38", VA = "0xC68D38", Slot = "6")]
			public override void Tick(float deltaTime)
			{
			}

			[Token(Token = "0x600277E")]
			[Address(RVA = "0xC68D50", Offset = "0xC68D50", VA = "0xC68D50")]
			private void OnChainReact()
			{
			}
		}

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ConScreenReactorBase[] reactorChain;

		[Token(Token = "0x6002778")]
		[Address(RVA = "0xFEE264", Offset = "0xFEE264", VA = "0xFEE264", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0xFEE2C8", Offset = "0xFEE2C8", VA = "0xFEE2C8")]
		public ConScreenReactorChain()
		{
		}
	}
	[Token(Token = "0x2000699")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD2C0", Offset = "0x8AD2C0")]
	public class ConScreenReactorEventScan : ConScreenReactorBase
	{
		[Token(Token = "0x200069A")]
		public class ReactorInstanceEventScan : ReactorInstance
		{
			[Token(Token = "0x400237C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SectorTagCollectionHierarchy scanObjectTags;

			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly SectorTagCollection CHECK_TAG_COLLECTION;

			[Token(Token = "0x6002781")]
			[Address(RVA = "0xC68E94", Offset = "0xC68E94", VA = "0xC68E94")]
			public ReactorInstanceEventScan(SectorTagCollectionHierarchy scanObjectTags)
			{
			}

			[Token(Token = "0x6002782")]
			[Address(RVA = "0xC68ED8", Offset = "0xC68ED8", VA = "0xC68ED8", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x6002783")]
			[Address(RVA = "0xC68F8C", Offset = "0xC68F8C", VA = "0xC68F8C", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x6002784")]
			[Address(RVA = "0xC69034", Offset = "0xC69034", VA = "0xC69034")]
			private void OnScanEvent(SectorTagCollection slotTags)
			{
			}
		}

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB610", Offset = "0x8CB610")]
		[SerializeField]
		private SectorTagCollectionHierarchy scanObjectTags;

		[Token(Token = "0x600277F")]
		[Address(RVA = "0xFEE2D0", Offset = "0xFEE2D0", VA = "0xFEE2D0", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0xFEE340", Offset = "0xFEE340", VA = "0xFEE340")]
		public ConScreenReactorEventScan()
		{
		}
	}
	[Token(Token = "0x200069B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD32C", Offset = "0x8AD32C")]
	public class ConScreenReactorLoadStart : ConScreenReactorBase
	{
		[Token(Token = "0x200069C")]
		public class ReactorInstanceLoadStart : ReactorInstance
		{
			[Token(Token = "0x6002788")]
			[Address(RVA = "0xC69160", Offset = "0xC69160", VA = "0xC69160", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x6002789")]
			[Address(RVA = "0xC6922C", Offset = "0xC6922C", VA = "0xC6922C", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x600278A")]
			[Address(RVA = "0xC69338", Offset = "0xC69338", VA = "0xC69338")]
			private void DoReactOnLoadStart(SectorTagsInput tags)
			{
			}

			[Token(Token = "0x600278B")]
			[Address(RVA = "0xC69340", Offset = "0xC69340", VA = "0xC69340")]
			public ReactorInstanceLoadStart()
			{
			}
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0xFEE348", Offset = "0xFEE348", VA = "0xFEE348", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0xFEE3A0", Offset = "0xFEE3A0", VA = "0xFEE3A0")]
		public ConScreenReactorLoadStart()
		{
		}
	}
	[Token(Token = "0x200069D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD398", Offset = "0x8AD398")]
	public class ConScreenReactorMenuVisibility : ConScreenReactorBase
	{
		[Token(Token = "0x200069E")]
		public class ReactorInstanceMenuVisibility : ReactorInstance
		{
			[Token(Token = "0x4002381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SectorTag menuTag;

			[Token(Token = "0x4002382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool menuVisible;

			[Token(Token = "0x4002383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			private bool onlyStateChange;

			[Token(Token = "0x600278E")]
			[Address(RVA = "0xC69348", Offset = "0xC69348", VA = "0xC69348")]
			public ReactorInstanceMenuVisibility(SectorTag menuTag, bool menuVisible, bool onlyStateChange)
			{
			}

			[Token(Token = "0x600278F")]
			[Address(RVA = "0xC693B0", Offset = "0xC693B0", VA = "0xC693B0", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x6002790")]
			[Address(RVA = "0xC6958C", Offset = "0xC6958C", VA = "0xC6958C", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x6002791")]
			[Address(RVA = "0xC696BC", Offset = "0xC696BC", VA = "0xC696BC")]
			private void OnMenuVisibilityChanged(SectorTag menuTag, bool visible)
			{
			}

			[Token(Token = "0x6002792")]
			[Address(RVA = "0xC69564", Offset = "0xC69564", VA = "0xC69564")]
			private void DoReactIfVisibilityMatch(bool visible)
			{
			}
		}

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SectorTagTypeAttribute", RVA = "0x8CB65C", Offset = "0x8CB65C")]
		[SerializeField]
		private SectorTag menuTag;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool menuVisible;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool onlyStateChange;

		[Token(Token = "0x600278C")]
		[Address(RVA = "0xFEE3A8", Offset = "0xFEE3A8", VA = "0xFEE3A8", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0xFEE430", Offset = "0xFEE430", VA = "0xFEE430")]
		public ConScreenReactorMenuVisibility()
		{
		}
	}
	[Token(Token = "0x200069F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD404", Offset = "0x8AD404")]
	public class ConScreenReactorMoveWaypoint : ConScreenReactorBase
	{
		[Token(Token = "0x20006A0")]
		public class ReactorInstanceMoveWaypoint : ReactorInstance
		{
			[Token(Token = "0x4002385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int minWaypointAmount;

			[Token(Token = "0x4002386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SpaceShipController playerShip;

			[Token(Token = "0x6002795")]
			[Address(RVA = "0xC6978C", Offset = "0xC6978C", VA = "0xC6978C")]
			public ReactorInstanceMoveWaypoint(int minWaypointAmount)
			{
			}

			[Token(Token = "0x6002796")]
			[Address(RVA = "0xC697C4", Offset = "0xC697C4", VA = "0xC697C4", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x6002797")]
			[Address(RVA = "0xC69B28", Offset = "0xC69B28", VA = "0xC69B28", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x6002798")]
			[Address(RVA = "0xC69938", Offset = "0xC69938", VA = "0xC69938")]
			private void OnPlayerShipChanged(SpaceShip playerShip)
			{
			}

			[Token(Token = "0x6002799")]
			[Address(RVA = "0xC69C78", Offset = "0xC69C78", VA = "0xC69C78")]
			private void OnMoveNodeAdded(int moveNodeCount)
			{
			}
		}

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int minWaypointAmount;

		[Token(Token = "0x6002793")]
		[Address(RVA = "0xFEE438", Offset = "0xFEE438", VA = "0xFEE438", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0xFEE49C", Offset = "0xFEE49C", VA = "0xFEE49C")]
		public ConScreenReactorMoveWaypoint()
		{
		}
	}
	[Token(Token = "0x20006A1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD470", Offset = "0x8AD470")]
	public class ConScreenReactorMultiple : ConScreenReactorBase
	{
		[Token(Token = "0x20006A2")]
		public class ReactorInstanceMultiple : ReactorInstance
		{
			[Token(Token = "0x4002388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ReactorInstance[] reactorInstances;

			[Token(Token = "0x600279C")]
			[Address(RVA = "0xC69C90", Offset = "0xC69C90", VA = "0xC69C90")]
			public ReactorInstanceMultiple(ReactorInstance[] reactorInstances)
			{
			}

			[Token(Token = "0x600279D")]
			[Address(RVA = "0xC69CC4", Offset = "0xC69CC4", VA = "0xC69CC4", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x600279E")]
			[Address(RVA = "0xC69D5C", Offset = "0xC69D5C", VA = "0xC69D5C", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x600279F")]
			[Address(RVA = "0xC69DE4", Offset = "0xC69DE4", VA = "0xC69DE4", Slot = "6")]
			public override void Tick(float deltaTime)
			{
			}
		}

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ConScreenReactorBase[] reactors;

		[Token(Token = "0x600279A")]
		[Address(RVA = "0xFEE4AC", Offset = "0xFEE4AC", VA = "0xFEE4AC", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0xFEE5F0", Offset = "0xFEE5F0", VA = "0xFEE5F0")]
		public ConScreenReactorMultiple()
		{
		}
	}
	[Token(Token = "0x20006A3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD4DC", Offset = "0x8AD4DC")]
	public class ConScreenReactorPickupCollected : ConScreenReactorBase
	{
		[Token(Token = "0x20006A4")]
		public class ReactorInstancePickupCollected : ReactorInstance
		{
			[Token(Token = "0x60027A2")]
			[Address(RVA = "0xC69E64", Offset = "0xC69E64", VA = "0xC69E64", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x60027A3")]
			[Address(RVA = "0xC69F44", Offset = "0xC69F44", VA = "0xC69F44", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x60027A4")]
			[Address(RVA = "0xC6A018", Offset = "0xC6A018", VA = "0xC6A018")]
			private void OnPickupCollectPickUp(Pickup _)
			{
			}

			[Token(Token = "0x60027A5")]
			[Address(RVA = "0xC6A020", Offset = "0xC6A020", VA = "0xC6A020")]
			public ReactorInstancePickupCollected()
			{
			}
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0xFEE5F8", Offset = "0xFEE5F8", VA = "0xFEE5F8", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0xFEE650", Offset = "0xFEE650", VA = "0xFEE650")]
		public ConScreenReactorPickupCollected()
		{
		}
	}
	[Token(Token = "0x20006A5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD548", Offset = "0x8AD548")]
	public class ConScreenReactorSectorClear : ConScreenReactorBase
	{
		[Token(Token = "0x20006A6")]
		public class ReactorInstanceSectorClear : ReactorInstance
		{
			[Token(Token = "0x400238A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			private bool waitForBattle;

			[Token(Token = "0x60027A8")]
			[Address(RVA = "0xC6A028", Offset = "0xC6A028", VA = "0xC6A028")]
			public ReactorInstanceSectorClear(bool delayStartUntilSectorNotClear)
			{
			}

			[Token(Token = "0x60027A9")]
			[Address(RVA = "0xC6A05C", Offset = "0xC6A05C", VA = "0xC6A05C", Slot = "6")]
			public override void Tick(float deltaTime)
			{
			}
		}

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool delayStartUntilSectorNotClear;

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0xFEE658", Offset = "0xFEE658", VA = "0xFEE658", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0xFEE6BC", Offset = "0xFEE6BC", VA = "0xFEE6BC")]
		public ConScreenReactorSectorClear()
		{
		}
	}
	[Token(Token = "0x20006A7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD5B4", Offset = "0x8AD5B4")]
	public class ConScreenReactorShipwreckScan : ConScreenReactorBase
	{
		[Token(Token = "0x20006A8")]
		public class ReactorInstanceShipwreckScan : ReactorInstance
		{
			[Token(Token = "0x60027AC")]
			[Address(RVA = "0xC6A104", Offset = "0xC6A104", VA = "0xC6A104", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x60027AD")]
			[Address(RVA = "0xC6A260", Offset = "0xC6A260", VA = "0xC6A260", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x60027AE")]
			[Address(RVA = "0xC6A3A4", Offset = "0xC6A3A4", VA = "0xC6A3A4")]
			private void OnScannedShipwreck(string _)
			{
			}

			[Token(Token = "0x60027AF")]
			[Address(RVA = "0xC6A3AC", Offset = "0xC6A3AC", VA = "0xC6A3AC")]
			public ReactorInstanceShipwreckScan()
			{
			}
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0xFEE6C4", Offset = "0xFEE6C4", VA = "0xFEE6C4", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0xFEE71C", Offset = "0xFEE71C", VA = "0xFEE71C")]
		public ConScreenReactorShipwreckScan()
		{
		}
	}
	[Token(Token = "0x20006A9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD620", Offset = "0x8AD620")]
	public class ConScreenReactorShopMaxPurchaseAmountReached : ConScreenReactorBase
	{
		[Token(Token = "0x20006AA")]
		public class ReactorInstanceShopMaxPurchaseAmountReached : ReactorInstance
		{
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0xC6A3B4", Offset = "0xC6A3B4", VA = "0xC6A3B4", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x60027B3")]
			[Address(RVA = "0xC6A4E8", Offset = "0xC6A4E8", VA = "0xC6A4E8", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x60027B4")]
			[Address(RVA = "0xC6A614", Offset = "0xC6A614", VA = "0xC6A614")]
			private void OnMaxPurchaseAmountReached(ShopInstance shop)
			{
			}

			[Token(Token = "0x60027B5")]
			[Address(RVA = "0xC6A61C", Offset = "0xC6A61C", VA = "0xC6A61C")]
			public ReactorInstanceShopMaxPurchaseAmountReached()
			{
			}
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0xFEE724", Offset = "0xFEE724", VA = "0xFEE724", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0xFEE77C", Offset = "0xFEE77C", VA = "0xFEE77C")]
		public ConScreenReactorShopMaxPurchaseAmountReached()
		{
		}
	}
	[Token(Token = "0x20006AB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD68C", Offset = "0x8AD68C")]
	public class ConScreenReactorSpaceObjectDestroyStats : ConScreenReactorBase
	{
		[Token(Token = "0x20006AC")]
		public enum DestroyCallback
		{
			[Token(Token = "0x400238E")]
			Destroy,
			[Token(Token = "0x400238F")]
			Death
		}

		[Token(Token = "0x20006AD")]
		public class ReactorInstanceSpaceObjectDestroyStats : ReactorInstance
		{
			[Token(Token = "0x4002390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private StatsEnum statType;

			[Token(Token = "0x4002391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private DestroyCallback destroyCallback;

			[Token(Token = "0x60027B8")]
			[Address(RVA = "0xC6A624", Offset = "0xC6A624", VA = "0xC6A624")]
			public ReactorInstanceSpaceObjectDestroyStats(StatsEnum statType, DestroyCallback destroyCallback)
			{
			}

			[Token(Token = "0x60027B9")]
			[Address(RVA = "0xC6A65C", Offset = "0xC6A65C", VA = "0xC6A65C", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x60027BA")]
			[Address(RVA = "0xC6A778", Offset = "0xC6A778", VA = "0xC6A778", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x60027BB")]
			[Address(RVA = "0xC6A890", Offset = "0xC6A890", VA = "0xC6A890")]
			private void OnSpaceObjectDeath(SpaceObject obj, IDamagable _)
			{
			}

			[Token(Token = "0x60027BC")]
			[Address(RVA = "0xC6A984", Offset = "0xC6A984", VA = "0xC6A984")]
			private void OnSpaceObjectDestroy(SpaceObject obj, IDamagable _)
			{
			}
		}

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StatsEnum statType;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private DestroyCallback destroyCallback;

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0xFEE784", Offset = "0xFEE784", VA = "0xFEE784", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0xFEE7F4", Offset = "0xFEE7F4", VA = "0xFEE7F4")]
		public ConScreenReactorSpaceObjectDestroyStats()
		{
		}
	}
	[Token(Token = "0x20006AE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD6F8", Offset = "0x8AD6F8")]
	public class ConScreenReactorStatsAdd : ConScreenReactorBase
	{
		[Token(Token = "0x20006AF")]
		public class ReactorInstanceStatsAdd : ReactorInstance
		{
			[Token(Token = "0x4002393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private StatsEnum statType;

			[Token(Token = "0x60027BF")]
			[Address(RVA = "0xC6AA74", Offset = "0xC6AA74", VA = "0xC6AA74")]
			public ReactorInstanceStatsAdd(StatsEnum statType)
			{
			}

			[Token(Token = "0x60027C0")]
			[Address(RVA = "0xC6AAA0", Offset = "0xC6AAA0", VA = "0xC6AAA0", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x60027C1")]
			[Address(RVA = "0xC6ABFC", Offset = "0xC6ABFC", VA = "0xC6ABFC", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x60027C2")]
			[Address(RVA = "0xC6AD40", Offset = "0xC6AD40", VA = "0xC6AD40")]
			private void OnStatAdded(StatsEnum statType, int amount)
			{
			}
		}

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StatsEnum statType;

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0xFEE7FC", Offset = "0xFEE7FC", VA = "0xFEE7FC", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0xFEE860", Offset = "0xFEE860", VA = "0xFEE860")]
		public ConScreenReactorStatsAdd()
		{
		}
	}
	[Token(Token = "0x20006B0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD764", Offset = "0x8AD764")]
	public class ConScreenReactorStatsReveal : ConScreenReactorBase
	{
		[Token(Token = "0x20006B1")]
		public class ReactorInstanceStatsReveal : ReactorInstance
		{
			[Token(Token = "0x4002395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private StatsEnum statType;

			[Token(Token = "0x60027C5")]
			[Address(RVA = "0xC6AD58", Offset = "0xC6AD58", VA = "0xC6AD58")]
			public ReactorInstanceStatsReveal(StatsEnum statType)
			{
			}

			[Token(Token = "0x60027C6")]
			[Address(RVA = "0xC6AD84", Offset = "0xC6AD84", VA = "0xC6AD84", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x60027C7")]
			[Address(RVA = "0xC6AE38", Offset = "0xC6AE38", VA = "0xC6AE38", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x60027C8")]
			[Address(RVA = "0xC6AEE0", Offset = "0xC6AEE0", VA = "0xC6AEE0")]
			private void OnScannableRevealed(VRScannableBase scannable)
			{
			}
		}

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StatsEnum statType;

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0xFEE868", Offset = "0xFEE868", VA = "0xFEE868", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0xFEE8CC", Offset = "0xFEE8CC", VA = "0xFEE8CC")]
		public ConScreenReactorStatsReveal()
		{
		}
	}
	[Token(Token = "0x20006B2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD7D0", Offset = "0x8AD7D0")]
	public class ConScreenReactorStatsScan : ConScreenReactorBase
	{
		[Token(Token = "0x20006B3")]
		public class ReactorInstanceStatsScan : ReactorInstance
		{
			[Token(Token = "0x4002397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private StatsEnum statType;

			[Token(Token = "0x60027CB")]
			[Address(RVA = "0xC6AFE8", Offset = "0xC6AFE8", VA = "0xC6AFE8")]
			public ReactorInstanceStatsScan(StatsEnum statType)
			{
			}

			[Token(Token = "0x60027CC")]
			[Address(RVA = "0xC6B014", Offset = "0xC6B014", VA = "0xC6B014", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x60027CD")]
			[Address(RVA = "0xC6B0C8", Offset = "0xC6B0C8", VA = "0xC6B0C8", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x60027CE")]
			[Address(RVA = "0xC6B170", Offset = "0xC6B170", VA = "0xC6B170")]
			private void OnScanStatRecord(StatsEnum statType)
			{
			}
		}

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StatsEnum statType;

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0xFEE8D4", Offset = "0xFEE8D4", VA = "0xFEE8D4", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0xFEE938", Offset = "0xFEE938", VA = "0xFEE938")]
		public ConScreenReactorStatsScan()
		{
		}
	}
	[Token(Token = "0x20006B4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD83C", Offset = "0x8AD83C")]
	public class ConScreenReactorTechTreeNodeResearched : ConScreenReactorBase
	{
		[Token(Token = "0x20006B5")]
		public class ReactorInstanceTechTreeNodeResearched : ReactorInstance
		{
			[Token(Token = "0x60027D1")]
			[Address(RVA = "0xC6B188", Offset = "0xC6B188", VA = "0xC6B188", Slot = "4")]
			public override void OnStart(ConDisplay display)
			{
			}

			[Token(Token = "0x60027D2")]
			[Address(RVA = "0xC6B32C", Offset = "0xC6B32C", VA = "0xC6B32C", Slot = "5")]
			public override void OnStop()
			{
			}

			[Token(Token = "0x60027D3")]
			[Address(RVA = "0xC6B45C", Offset = "0xC6B45C", VA = "0xC6B45C")]
			private void OnTechTreeNodeIdsChanged()
			{
			}

			[Token(Token = "0x60027D4")]
			[Address(RVA = "0xC6B548", Offset = "0xC6B548", VA = "0xC6B548")]
			public ReactorInstanceTechTreeNodeResearched()
			{
			}
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0xFEE940", Offset = "0xFEE940", VA = "0xFEE940", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0xFEE998", Offset = "0xFEE998", VA = "0xFEE998")]
		public ConScreenReactorTechTreeNodeResearched()
		{
		}
	}
	[Token(Token = "0x20006B6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD8A8", Offset = "0x8AD8A8")]
	public class ConScreenReactorTimer : ConScreenReactorBase
	{
		[Token(Token = "0x20006B7")]
		public class ReactorInstanceTimer : ReactorInstance
		{
			[Token(Token = "0x4002399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float timeDelay;

			[Token(Token = "0x400239A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float timePassed;

			[Token(Token = "0x60027D7")]
			[Address(RVA = "0xC6B550", Offset = "0xC6B550", VA = "0xC6B550")]
			public ReactorInstanceTimer(float timeDelay)
			{
			}

			[Token(Token = "0x60027D8")]
			[Address(RVA = "0xC6B588", Offset = "0xC6B588", VA = "0xC6B588", Slot = "6")]
			public override void Tick(float deltaTime)
			{
			}
		}

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float timer;

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0xFEE9A0", Offset = "0xFEE9A0", VA = "0xFEE9A0", Slot = "4")]
		public override ReactorInstance CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0xFEEA0C", Offset = "0xFEEA0C", VA = "0xFEEA0C")]
		public ConScreenReactorTimer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B8")]
	public class ConversationDisplayAnswerGroup
	{
		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ConversationDisplayAnswer answerHold;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConversationDisplayAnswer answerClick;

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0xFF02F0", Offset = "0xFF02F0", VA = "0xFF02F0")]
		public ConversationDisplayAnswer GetAnswerHold()
		{
			return null;
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0xFF03C4", Offset = "0xFF03C4", VA = "0xFF03C4")]
		public ConversationDisplayAnswer GetAnswerClick()
		{
			return null;
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0xFF0498", Offset = "0xFF0498", VA = "0xFF0498")]
		public ConversationDisplayAnswerGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B9")]
	public class ConversationDisplayAnswer
	{
		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string displayName;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UiButton button;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI answerText;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI resultText;

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0xFF01F4", Offset = "0xFF01F4", VA = "0xFF01F4")]
		public void SetName()
		{
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0xFF02A0", Offset = "0xFF02A0", VA = "0xFF02A0")]
		public void Normal()
		{
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0xFF02C4", Offset = "0xFF02C4", VA = "0xFF02C4")]
		public void GrayedOut()
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0xFF02E8", Offset = "0xFF02E8", VA = "0xFF02E8")]
		public ConversationDisplayAnswer()
		{
		}
	}
	[Token(Token = "0x20006BA")]
	public class ConversationDisplay : MonoBehaviour
	{
		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuRoot menuRoot;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB778", Offset = "0x8CB778")]
		private UiButton nextButton;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI answerHintText;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ConversationDisplayAnswerGroup[] answerDisplayGroups;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject textBox;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI displayText;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB804", Offset = "0x8CB804")]
		[SerializeField]
		private RectTransform portraitParent;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI npcName;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ConNpcObject unknownNpc;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB870", Offset = "0x8CB870")]
		[SerializeField]
		private Image backgroundImage;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RectTransform backgroundRect;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Vector2 backgroundAnimationSizeMask;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float backgroundAnimationSpeed;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationCurve backgroundAnimationCurve;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB8FC", Offset = "0x8CB8FC")]
		private Image[] highlightImages;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB948", Offset = "0x8CB948")]
		[SerializeField]
		private SfxTrigger displayTextboxSfx;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB994", Offset = "0x8CB994")]
		[SerializeField]
		private UnityEvent onNewTextDisplay;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isDisplayed;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool hasAnswers;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool hasAnswered;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		private bool hasText;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 portraitParentLocalScale;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject currentPortrait;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector2 backgroundRectSize;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float backgroundAnimation;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private string backgroundCurrentName;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private string backgroundNextName;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Sprite backgroundNextSprite;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool hasBackgroundNextSprite;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Color[] highlightImagesDefaultColor;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private StringBuilder textBuilder;

		[Token(Token = "0x1700076A")]
		public SectorTag MenuTag
		{
			[Token(Token = "0x60027E0")]
			[Address(RVA = "0xFEF040", Offset = "0xFEF040", VA = "0xFEF040")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0xFEF05C", Offset = "0xFEF05C", VA = "0xFEF05C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0xFEF440", Offset = "0xFEF440", VA = "0xFEF440")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0xFEF734", Offset = "0xFEF734", VA = "0xFEF734")]
		public void Setup()
		{
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0xFEF338", Offset = "0xFEF338", VA = "0xFEF338")]
		public void RemoveDisplay()
		{
		}

		[Token(Token = "0x60027E5")]
		public void Display<TAnswer>(LocalizationKey textToDisplay, LocalizationKey question, ConBackgroundObject background, LocalizationColor highlightColor, ConNpcObject npc, bool npcFlipped, IReadOnlyList<TAnswer> answers, bool allowNextButton) where TAnswer : ConDisplayOption
		{
		}

		[Token(Token = "0x60027E6")]
		public void Display<TAnswer>(LocalizationKey textToDisplay, LocalizationKey question, IReadOnlyList<TAnswer> answers, bool allowNextButton) where TAnswer : ConDisplayOption
		{
		}

		[Token(Token = "0x60027E7")]
		public void Display<TAnswer>(IReadOnlyList<TAnswer> answers, bool allowNextButton) where TAnswer : ConDisplayOption
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0xFEF738", Offset = "0xFEF738", VA = "0xFEF738")]
		private void ChangeThePortrait(ConNpcObject to, bool flipped)
		{
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0xFEFB28", Offset = "0xFEFB28", VA = "0xFEFB28")]
		private void ChangeTheBackground(ConBackgroundObject to, bool instant)
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0xFEFD58", Offset = "0xFEFD58", VA = "0xFEFD58")]
		private void ChangeTheHighlight(LocalizationColor highlightColor)
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0xFEF604", Offset = "0xFEF604", VA = "0xFEF604")]
		private void UpdateBackgroundAnimation()
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0xFEFF60", Offset = "0xFEFF60", VA = "0xFEFF60")]
		public void OnAnswerBtn(int input)
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0xFF0060", Offset = "0xFF0060", VA = "0xFF0060")]
		public void NextScreenBtn()
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0xFF0148", Offset = "0xFF0148", VA = "0xFF0148")]
		public ConversationDisplay()
		{
		}
	}
	[Token(Token = "0x20006BB")]
	public class ConversationEvent
	{
		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action onScreenCompleted;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SectorTag conversationMenuTag;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string conversationId;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ConScreenQuestion[] screens;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float conversationTime;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float exitTime;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool moveToNext;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int lastScreenIndex;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ConDisplay> displayQueue;

		[Token(Token = "0x1700076B")]
		public SectorTag ConversationMenuTag
		{
			[Token(Token = "0x60027EF")]
			[Address(RVA = "0xFF04A0", Offset = "0xFF04A0", VA = "0xFF04A0")]
			get
			{
				return default(SectorTag);
			}
		}

		[Token(Token = "0x1700076C")]
		public IReadOnlyList<ConScreenQuestion> Screens
		{
			[Token(Token = "0x60027F0")]
			[Address(RVA = "0xFF04AC", Offset = "0xFF04AC", VA = "0xFF04AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700076D")]
		private ConDisplay DisplayCurrent
		{
			[Token(Token = "0x60027F1")]
			[Address(RVA = "0xFF04B4", Offset = "0xFF04B4", VA = "0xFF04B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0xFF0524", Offset = "0xFF0524", VA = "0xFF0524")]
		public ConversationEvent(SectorTag conversationMenuTag, string conversationId, Action onScreenCompleted, ConScreenQuestion[] screens, int startScreenIndex)
		{
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0xFF0680", Offset = "0xFF0680", VA = "0xFF0680")]
		public void Start()
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0xFF0798", Offset = "0xFF0798", VA = "0xFF0798")]
		public void Stop()
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0xFF08C8", Offset = "0xFF08C8", VA = "0xFF08C8")]
		public void Finish()
		{
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0xFF09D4", Offset = "0xFF09D4", VA = "0xFF09D4")]
		public void Tick(float delta)
		{
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0xFF0A80", Offset = "0xFF0A80", VA = "0xFF0A80")]
		private void DisplayNext()
		{
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0xFF0D34", Offset = "0xFF0D34", VA = "0xFF0D34")]
		public bool OnPlayerInput()
		{
			return default(bool);
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0xFF0D3C", Offset = "0xFF0D3C", VA = "0xFF0D3C")]
		public bool OnPlayerInput(int selection)
		{
			return default(bool);
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0xFE96F8", Offset = "0xFE96F8", VA = "0xFE96F8")]
		public void OnMoveToNext()
		{
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0xFEE08C", Offset = "0xFEE08C", VA = "0xFEE08C")]
		public void GoToConScreen(string screenId)
		{
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0xFEB384", Offset = "0xFEB384", VA = "0xFEB384")]
		public void GoToDisplay(ConDisplay display)
		{
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0xFF0D70", Offset = "0xFF0D70", VA = "0xFF0D70")]
		private bool TryGetScreenIndex(string screenId, out int screenIndex)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006BC")]
	public class ConversationManager : MonoBehaviourSingleton<ConversationManager>
	{
		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD914", Offset = "0x8AD914")]
		private sealed class <StartConversationAsync>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConversationManager <>4__this;

			[Token(Token = "0x40023DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ConversationEvent conversation;

			[Token(Token = "0x17000773")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600281B")]
				[Address(RVA = "0xC6BA1C", Offset = "0xC6BA1C", VA = "0xC6BA1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000774")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600281D")]
				[Address(RVA = "0xC6BA64", Offset = "0xC6BA64", VA = "0xC6BA64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002818")]
			[Address(RVA = "0xC6B95C", Offset = "0xC6B95C", VA = "0xC6B95C")]
			[DebuggerHidden]
			public <StartConversationAsync>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6002819")]
			[Address(RVA = "0xC6B988", Offset = "0xC6B988", VA = "0xC6B988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600281A")]
			[Address(RVA = "0xC6B98C", Offset = "0xC6B98C", VA = "0xC6B98C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600281C")]
			[Address(RVA = "0xC6BA24", Offset = "0xC6BA24", VA = "0xC6BA24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float audioVoiceOverFadeOutTime;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ConversationFormatting conversationFormatting;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ConversationDisplay[] conversationDisplays;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBA10", Offset = "0x8CBA10")]
		[SerializeField]
		private UnityEvent onConversationStartWithBackground;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent onConversationStartWithoutBackground;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onConversationStop;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isInConversation;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ConversationDisplay currentConversationDisplay;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ConversationEvent currentConversation;

		[Token(Token = "0x1700076E")]
		public float AudioVoiceOverFadeOutTime
		{
			[Token(Token = "0x60027FE")]
			[Address(RVA = "0xFF10DC", Offset = "0xFF10DC", VA = "0xFF10DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700076F")]
		public ConversationFormatting ConversationFormatting
		{
			[Token(Token = "0x60027FF")]
			[Address(RVA = "0xFF10E4", Offset = "0xFF10E4", VA = "0xFF10E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000770")]
		public ConversationDisplay ConversationDisplay
		{
			[Token(Token = "0x6002800")]
			[Address(RVA = "0xFF10EC", Offset = "0xFF10EC", VA = "0xFF10EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000771")]
		public bool IsDisplayingConversation
		{
			[Token(Token = "0x6002801")]
			[Address(RVA = "0xFF10F4", Offset = "0xFF10F4", VA = "0xFF10F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000772")]
		public bool IsInConversation
		{
			[Token(Token = "0x6002802")]
			[Address(RVA = "0xFF1104", Offset = "0xFF1104", VA = "0xFF1104")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002803")]
			[Address(RVA = "0xFF110C", Offset = "0xFF110C", VA = "0xFF110C")]
			private set
			{
			}
		}

		[Token(Token = "0x140000A0")]
		public event Action OnConversationStartBefore
		{
			[Token(Token = "0x6002804")]
			[Address(RVA = "0xFF1384", Offset = "0xFF1384", VA = "0xFF1384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7550", Offset = "0x8D7550")]
			add
			{
			}
			[Token(Token = "0x6002805")]
			[Address(RVA = "0xFF1424", Offset = "0xFF1424", VA = "0xFF1424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7560", Offset = "0x8D7560")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A1")]
		public event Action OnConversationStartAfter
		{
			[Token(Token = "0x6002806")]
			[Address(RVA = "0xFF14C4", Offset = "0xFF14C4", VA = "0xFF14C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7570", Offset = "0x8D7570")]
			add
			{
			}
			[Token(Token = "0x6002807")]
			[Address(RVA = "0xFF1564", Offset = "0xFF1564", VA = "0xFF1564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7580", Offset = "0x8D7580")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A2")]
		public event Action OnConversationEndBefore
		{
			[Token(Token = "0x6002808")]
			[Address(RVA = "0xFF1604", Offset = "0xFF1604", VA = "0xFF1604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7590", Offset = "0x8D7590")]
			add
			{
			}
			[Token(Token = "0x6002809")]
			[Address(RVA = "0xFF16A4", Offset = "0xFF16A4", VA = "0xFF16A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D75A0", Offset = "0x8D75A0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A3")]
		public event Action OnConversationEndAfter
		{
			[Token(Token = "0x600280A")]
			[Address(RVA = "0xFF1744", Offset = "0xFF1744", VA = "0xFF1744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D75B0", Offset = "0x8D75B0")]
			add
			{
			}
			[Token(Token = "0x600280B")]
			[Address(RVA = "0xFF17E4", Offset = "0xFF17E4", VA = "0xFF17E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D75C0", Offset = "0x8D75C0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A4")]
		public event Action<bool> IsInConversationChanged
		{
			[Token(Token = "0x600280C")]
			[Address(RVA = "0xFF1884", Offset = "0xFF1884", VA = "0xFF1884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D75D0", Offset = "0x8D75D0")]
			add
			{
			}
			[Token(Token = "0x600280D")]
			[Address(RVA = "0xFF1924", Offset = "0xFF1924", VA = "0xFF1924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D75E0", Offset = "0x8D75E0")]
			remove
			{
			}
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0xFF19C4", Offset = "0xFF19C4", VA = "0xFF19C4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0xFF1BC0", Offset = "0xFF1BC0", VA = "0xFF1BC0")]
		protected void Update()
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0xFF1BF8", Offset = "0xFF1BF8", VA = "0xFF1BF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D75F0", Offset = "0x8D75F0")]
		public IEnumerator StartConversationAsync(ConversationEvent conversation)
		{
			return null;
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0xFF1C8C", Offset = "0xFF1C8C", VA = "0xFF1C8C")]
		public void StopCurrentConversation()
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0xFF1D14", Offset = "0xFF1D14", VA = "0xFF1D14")]
		public void StartConversation(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0xFF0CB4", Offset = "0xFF0CB4", VA = "0xFF0CB4")]
		public void OnConversationEnd(ConversationEvent conversation)
		{
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0xFF004C", Offset = "0xFF004C", VA = "0xFF004C")]
		public bool ScreenInput(int selection = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0xFF1AAC", Offset = "0xFF1AAC", VA = "0xFF1AAC")]
		private ConversationDisplay GetConversationDisplay(SectorTag menuTag)
		{
			return null;
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0xFF11D0", Offset = "0xFF11D0", VA = "0xFF11D0")]
		private static bool ConversationHasAnyBackground(ConversationEvent conversationEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0xFF1DB8", Offset = "0xFF1DB8", VA = "0xFF1DB8")]
		public ConversationManager()
		{
		}
	}
}
namespace Events.Conditions
{
	[Token(Token = "0x20006BE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD924", Offset = "0x8AD924")]
	public class EventConditionAffinityShipsAlive : EventCondition
	{
		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FactionAffinity affinity;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int minimumShipCount;

		[Token(Token = "0x600281E")]
		[Address(RVA = "0xC568E4", Offset = "0xC568E4", VA = "0xC568E4", Slot = "4")]
		protected override bool CheckEventConditionInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0xC56C4C", Offset = "0xC56C4C", VA = "0xC56C4C")]
		public EventConditionAffinityShipsAlive()
		{
		}
	}
	[Token(Token = "0x20006BF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD990", Offset = "0x8AD990")]
	public class EventConditionCurrentThreatLevelEqual : EventCondition
	{
		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int threatLevel;

		[Token(Token = "0x6002820")]
		[Address(RVA = "0xC56C5C", Offset = "0xC56C5C", VA = "0xC56C5C", Slot = "4")]
		protected override bool CheckEventConditionInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0xC56DD8", Offset = "0xC56DD8", VA = "0xC56DD8")]
		public EventConditionCurrentThreatLevelEqual()
		{
		}
	}
	[Token(Token = "0x20006C0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8AD9FC", Offset = "0x8AD9FC")]
	public class EventConditionFactionShipsAlive : EventCondition
	{
		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Faction faction;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int minimumShipCount;

		[Token(Token = "0x6002822")]
		[Address(RVA = "0xC56DE0", Offset = "0xC56DE0", VA = "0xC56DE0", Slot = "4")]
		protected override bool CheckEventConditionInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0xC57148", Offset = "0xC57148", VA = "0xC57148")]
		public EventConditionFactionShipsAlive()
		{
		}
	}
	[Token(Token = "0x20006C1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ADA68", Offset = "0x8ADA68")]
	public class EventConditionHasClearedRunAny : EventCondition
	{
		[Serializable]
		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADAD4", Offset = "0x8ADAD4")]
		private sealed class <>c
		{
			[Token(Token = "0x40023E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40023E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RunData, bool> <>9__1_0;

			[Token(Token = "0x6002828")]
			[Address(RVA = "0xC74BE0", Offset = "0xC74BE0", VA = "0xC74BE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002829")]
			[Address(RVA = "0xC74BE8", Offset = "0xC74BE8", VA = "0xC74BE8")]
			internal bool <HasClearedAnyRun>b__1_0(RunData run)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0xC57158", Offset = "0xC57158", VA = "0xC57158", Slot = "4")]
		protected override bool CheckEventConditionInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0xC5715C", Offset = "0xC5715C", VA = "0xC5715C")]
		public static bool HasClearedAnyRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0xC57320", Offset = "0xC57320", VA = "0xC57320")]
		public EventConditionHasClearedRunAny()
		{
		}
	}
	[Token(Token = "0x20006C3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ADAE4", Offset = "0x8ADAE4")]
	public class EventConditionHasQueuedRewards : EventCondition
	{
		[Token(Token = "0x600282A")]
		[Address(RVA = "0xC57328", Offset = "0xC57328", VA = "0xC57328", Slot = "4")]
		protected override bool CheckEventConditionInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0xC57404", Offset = "0xC57404", VA = "0xC57404")]
		public EventConditionHasQueuedRewards()
		{
		}
	}
	[Token(Token = "0x20006C4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ADB50", Offset = "0x8ADB50")]
	public class EventConditionLatestRunOnNewThreatLevel : EventCondition
	{
		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool requireLatestRunFinished;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool requireLatestRunSuccess;

		[Token(Token = "0x600282C")]
		[Address(RVA = "0xC5740C", Offset = "0xC5740C", VA = "0xC5740C", Slot = "4")]
		protected override bool CheckEventConditionInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0xC575E8", Offset = "0xC575E8", VA = "0xC575E8")]
		public EventConditionLatestRunOnNewThreatLevel()
		{
		}
	}
	[Token(Token = "0x20006C5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ADBBC", Offset = "0x8ADBBC")]
	public class EventConditionLatestRunThreatLevelEqual : EventCondition
	{
		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int threatLevel;

		[Token(Token = "0x600282E")]
		[Address(RVA = "0xC575F8", Offset = "0xC575F8", VA = "0xC575F8", Slot = "4")]
		protected override bool CheckEventConditionInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0xC57774", Offset = "0xC57774", VA = "0xC57774")]
		public EventConditionLatestRunThreatLevelEqual()
		{
		}
	}
	[Token(Token = "0x20006C6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ADC28", Offset = "0x8ADC28")]
	public class EventConditionPlayingOnNewThreatLevel : EventCondition
	{
		[Token(Token = "0x6002830")]
		[Address(RVA = "0xC5777C", Offset = "0xC5777C", VA = "0xC5777C", Slot = "4")]
		protected override bool CheckEventConditionInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0xC56C88", Offset = "0xC56C88", VA = "0xC56C88")]
		public static int GetCurrentThreatLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0xC57624", Offset = "0xC57624", VA = "0xC57624")]
		public static int GetLatestThreatLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0xC577A8", Offset = "0xC577A8", VA = "0xC577A8")]
		public static int GetClearedThreatLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0xC57868", Offset = "0xC57868", VA = "0xC57868")]
		public EventConditionPlayingOnNewThreatLevel()
		{
		}
	}
}
namespace Audio
{
	[Token(Token = "0x20006C7")]
	public static class AudioBlendModes
	{
		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<AudioEaseEnum, AnimationCurve> EASE_DICTIONARY;

		[Token(Token = "0x6002835")]
		[Address(RVA = "0xEF2880", Offset = "0xEF2880", VA = "0xEF2880")]
		public static bool TryGetAudioEase(AudioEaseEnum ease, out AnimationCurve curve)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20006C8")]
	public class AudioButtonSound
	{
		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string _name;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonInteractionEnum OnInteraction;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SfxSoundToPlay;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioEaseEnum Ease;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBB5C", Offset = "0x8CBB5C")]
		private SfxTrigger <Trigger>k__BackingField;

		[Token(Token = "0x17000775")]
		public SfxTrigger Trigger
		{
			[Token(Token = "0x6002837")]
			[Address(RVA = "0xEF34DC", Offset = "0xEF34DC", VA = "0xEF34DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D76A0", Offset = "0x8D76A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002838")]
			[Address(RVA = "0xEF34E4", Offset = "0xEF34E4", VA = "0xEF34E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D76B0", Offset = "0x8D76B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0xEF3244", Offset = "0xEF3244", VA = "0xEF3244")]
		public void PrepareTrigger()
		{
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0xEF2FAC", Offset = "0xEF2FAC", VA = "0xEF2FAC")]
		public void UpdateName()
		{
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0xEF34EC", Offset = "0xEF34EC", VA = "0xEF34EC")]
		public AudioButtonSound()
		{
		}
	}
	[Token(Token = "0x20006C9")]
	public enum ButtonInteractionEnum
	{
		[Token(Token = "0x40023EC")]
		OnDown,
		[Token(Token = "0x40023ED")]
		OnUp,
		[Token(Token = "0x40023EE")]
		OnClick,
		[Token(Token = "0x40023EF")]
		OnEnter,
		[Token(Token = "0x40023F0")]
		OnExit
	}
	[Token(Token = "0x20006CA")]
	public class AudioButtonAddon : MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioButtonSound[] _sounds;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioButtonSound _onClick;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioButtonSound _onDown;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioButtonSound _onUp;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioButtonSound _onEnter;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioButtonSound _onExit;

		[Token(Token = "0x600283C")]
		[Address(RVA = "0xEF2F44", Offset = "0xEF2F44", VA = "0xEF2F44")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0xEF303C", Offset = "0xEF303C", VA = "0xEF303C")]
		private void Start()
		{
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0xEF32E0", Offset = "0xEF32E0", VA = "0xEF32E0", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0xEF3344", Offset = "0xEF3344", VA = "0xEF3344", Slot = "5")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0xEF33A8", Offset = "0xEF33A8", VA = "0xEF33A8", Slot = "6")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0xEF340C", Offset = "0xEF340C", VA = "0xEF340C", Slot = "7")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0xEF3470", Offset = "0xEF3470", VA = "0xEF3470", Slot = "8")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0xEF34D4", Offset = "0xEF34D4", VA = "0xEF34D4")]
		public AudioButtonAddon()
		{
		}
	}
	[Token(Token = "0x20006CB")]
	public enum MixerGroupEnum
	{
		[Token(Token = "0x40023F8")]
		Music,
		[Token(Token = "0x40023F9")]
		Ambience,
		[Token(Token = "0x40023FA")]
		Sfx,
		[Token(Token = "0x40023FB")]
		Duckers,
		[Token(Token = "0x40023FC")]
		Duckers_Short,
		[Token(Token = "0x40023FD")]
		SFX_NonDucking,
		[Token(Token = "0x40023FE")]
		Buttons,
		[Token(Token = "0x40023FF")]
		Voice
	}
	[Token(Token = "0x20006CC")]
	public enum AudioEaseEnum
	{
		[Token(Token = "0x4002401")]
		Default_none,
		[Token(Token = "0x4002402")]
		EaseInEaseOut,
		[Token(Token = "0x4002403")]
		EaseInQuint,
		[Token(Token = "0x4002404")]
		EaseOutQuint,
		[Token(Token = "0x4002405")]
		EaseInSine,
		[Token(Token = "0x4002406")]
		EaseOutSine
	}
	[Token(Token = "0x20006CD")]
	public class AudioManager : MonoBehaviourSingleton<AudioManager>, IAsyncSystemSetup, IGameLoaderSubsystem
	{
		[Token(Token = "0x20006CE")]
		private struct AudioPoolReturnQueueState
		{
			[Token(Token = "0x4002416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool paused;
		}

		[Token(Token = "0x20006CF")]
		private struct AudioPoolReturnQueueEntry
		{
			[Token(Token = "0x4002417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioSource source;

			[Token(Token = "0x4002418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TriggerBase trigger;

			[Token(Token = "0x4002419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int createdFrameIndex;

			[Token(Token = "0x400241A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AsyncOperationHandle unloadHandle;

			[Token(Token = "0x400241B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Coroutine followRoutine;

			[Token(Token = "0x400241C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Coroutine fadeRoutine;

			[Token(Token = "0x400241D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool canBePaused;

			[Token(Token = "0x400241E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public AudioPoolReturnQueueState state;

			[Token(Token = "0x17000779")]
			public bool IsSourceFinished
			{
				[Token(Token = "0x6002866")]
				[Address(RVA = "0xC60FDC", Offset = "0xC60FDC", VA = "0xC60FDC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002867")]
			[Address(RVA = "0xC6104C", Offset = "0xC6104C", VA = "0xC6104C")]
			public AudioPoolReturnQueueEntry TrySetPaused(bool paused)
			{
				return default(AudioPoolReturnQueueEntry);
			}

			[Token(Token = "0x6002868")]
			[Address(RVA = "0xC6113C", Offset = "0xC6113C", VA = "0xC6113C")]
			public AudioPoolReturnQueueEntry SetState(AudioPoolReturnQueueState state)
			{
				return default(AudioPoolReturnQueueEntry);
			}
		}

		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADC94", Offset = "0x8ADC94")]
		private sealed class <Initialize>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400241F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private AsyncOperationHandle <handle>5__2;

			[Token(Token = "0x1700077A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600286C")]
				[Address(RVA = "0xC60F8C", Offset = "0xC60F8C", VA = "0xC60F8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700077B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600286E")]
				[Address(RVA = "0xC60FD4", Offset = "0xC60FD4", VA = "0xC60FD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002869")]
			[Address(RVA = "0xC60A8C", Offset = "0xC60A8C", VA = "0xC60A8C")]
			[DebuggerHidden]
			public <Initialize>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x600286A")]
			[Address(RVA = "0xC60AB8", Offset = "0xC60AB8", VA = "0xC60AB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600286B")]
			[Address(RVA = "0xC60ABC", Offset = "0xC60ABC", VA = "0xC60ABC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600286D")]
			[Address(RVA = "0xC60F94", Offset = "0xC60F94", VA = "0xC60F94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADCA4", Offset = "0x8ADCA4")]
		private sealed class <FadeSfxVolumeOverTime>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float toVolumeFactor;

			[Token(Token = "0x4002425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float time;

			[Token(Token = "0x4002426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fromVolumeFactor>5__2;

			[Token(Token = "0x4002427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timer>5__3;

			[Token(Token = "0x1700077C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002872")]
				[Address(RVA = "0xE05238", Offset = "0xE05238", VA = "0xE05238", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700077D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002874")]
				[Address(RVA = "0xE05280", Offset = "0xE05280", VA = "0xE05280", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600286F")]
			[Address(RVA = "0xE05074", Offset = "0xE05074", VA = "0xE05074")]
			[DebuggerHidden]
			public <FadeSfxVolumeOverTime>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6002870")]
			[Address(RVA = "0xE050A0", Offset = "0xE050A0", VA = "0xE050A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002871")]
			[Address(RVA = "0xE050A4", Offset = "0xE050A4", VA = "0xE050A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002873")]
			[Address(RVA = "0xE05240", Offset = "0xE05240", VA = "0xE05240", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADCB4", Offset = "0x8ADCB4")]
		private sealed class <FadeMusicVolumeOverTime>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400242A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float toVolumeFactor;

			[Token(Token = "0x400242B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float time;

			[Token(Token = "0x400242C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fromVolumeFactor>5__2;

			[Token(Token = "0x400242D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timer>5__3;

			[Token(Token = "0x1700077E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002878")]
				[Address(RVA = "0xE05024", Offset = "0xE05024", VA = "0xE05024", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700077F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600287A")]
				[Address(RVA = "0xE0506C", Offset = "0xE0506C", VA = "0xE0506C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002875")]
			[Address(RVA = "0xE04EA0", Offset = "0xE04EA0", VA = "0xE04EA0")]
			[DebuggerHidden]
			public <FadeMusicVolumeOverTime>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6002876")]
			[Address(RVA = "0xE04ECC", Offset = "0xE04ECC", VA = "0xE04ECC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002877")]
			[Address(RVA = "0xE04ED0", Offset = "0xE04ED0", VA = "0xE04ED0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002879")]
			[Address(RVA = "0xE0502C", Offset = "0xE0502C", VA = "0xE0502C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002407")]
		private const string SFX_MIXER_NAME = "SfxVolume";

		[Token(Token = "0x4002408")]
		private const string MUSIC_MIXER_NAME = "MusicVolume";

		[Token(Token = "0x4002409")]
		private const string AUDIO_SOURCE_DEFAULT_NAME = "Speaker";

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int defaultPoolCount;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float SfxFactor;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float MusicFactor;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioMixer audioMixer;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<MixerGroupEnum, AudioMixerGroup> audioMixerGroupCache;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AudioSource> sourcePool;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform sourcePoolParent;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<AudioPoolReturnQueueEntry> sourcePoolReturnQueue;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform playingParent;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine fadeSfxVolumeCoroutine;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine fadeMusicVolumeCoroutine;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBB7C", Offset = "0x8CBB7C")]
		private static bool <IsInitialized>k__BackingField;

		[Token(Token = "0x17000776")]
		public static float SfxVolume
		{
			[Token(Token = "0x6002844")]
			[Address(RVA = "0xEF3748", Offset = "0xEF3748", VA = "0xEF3748")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002845")]
			[Address(RVA = "0xEF37AC", Offset = "0xEF37AC", VA = "0xEF37AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000777")]
		public static float MusicVolume
		{
			[Token(Token = "0x6002846")]
			[Address(RVA = "0xEF3974", Offset = "0xEF3974", VA = "0xEF3974")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002847")]
			[Address(RVA = "0xEF39D8", Offset = "0xEF39D8", VA = "0xEF39D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000778")]
		public static bool IsInitialized
		{
			[Token(Token = "0x6002848")]
			[Address(RVA = "0xEF3BA0", Offset = "0xEF3BA0", VA = "0xEF3BA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D76C0", Offset = "0x8D76C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002849")]
			[Address(RVA = "0xEF3C04", Offset = "0xEF3C04", VA = "0xEF3C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D76D0", Offset = "0x8D76D0")]
			set
			{
			}
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0xEF3C70", Offset = "0xEF3C70", VA = "0xEF3C70", Slot = "6")]
		public YieldInstruction OnSetupSystemAsync()
		{
			return null;
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0xEF3E24", Offset = "0xEF3E24", VA = "0xEF3E24", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0xEF3F6C", Offset = "0xEF3F6C", VA = "0xEF3F6C", Slot = "9")]
		public void OnLoadPrepare(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0xEF4118", Offset = "0xEF4118", VA = "0xEF4118")]
		private void OnPauseChanged(bool wasPaused, bool isPaused)
		{
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0xEF4250", Offset = "0xEF4250", VA = "0xEF4250", Slot = "12")]
		public YieldInstruction OnGameSetupAsync(SectorTagsInput tags)
		{
			return null;
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0xEF4258", Offset = "0xEF4258", VA = "0xEF4258", Slot = "13")]
		public void OnGameStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0xEF425C", Offset = "0xEF425C", VA = "0xEF425C", Slot = "7")]
		public void OnLoadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0xEF4260", Offset = "0xEF4260", VA = "0xEF4260", Slot = "8")]
		public void OnLoadEnd(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0xEF4264", Offset = "0xEF4264", VA = "0xEF4264", Slot = "10")]
		public void OnLoadWindDown(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0xEF4268", Offset = "0xEF4268", VA = "0xEF4268", Slot = "11")]
		public void OnUnloadStart(SectorTagsInput tags)
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0xEF3DC8", Offset = "0xEF3DC8", VA = "0xEF3DC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D76E0", Offset = "0x8D76E0")]
		public static IEnumerator Initialize()
		{
			return null;
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0xEF3FC4", Offset = "0xEF3FC4", VA = "0xEF3FC4")]
		public static void Cleanup()
		{
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0xEF426C", Offset = "0xEF426C", VA = "0xEF426C")]
		protected void Update()
		{
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0xEF445C", Offset = "0xEF445C", VA = "0xEF445C")]
		public AudioMixerGroup GetMixerGroup(MixerGroupEnum ofGroup)
		{
			return null;
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0xEF4634", Offset = "0xEF4634", VA = "0xEF4634")]
		public AudioSource GetPooledAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0xEF47F8", Offset = "0xEF47F8", VA = "0xEF47F8")]
		public void ReturnPooledAudioSource(AudioSource source)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0xEF46D8", Offset = "0xEF46D8", VA = "0xEF46D8")]
		private AudioSource CreateAudioSource()
		{
			return null;
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0xEF4934", Offset = "0xEF4934", VA = "0xEF4934")]
		public void SetAudioSourceInPoolQueue(AudioSource source, TriggerBase trigger, bool canBePaused)
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0xEF25E0", Offset = "0xEF25E0", VA = "0xEF25E0")]
		public void SetAudioSourceInPoolQueue(AudioSource source, AsyncOperationHandle unloadHandle, Coroutine followRoutine, Coroutine fadeRoutine, bool canBePaused)
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0xEF49F8", Offset = "0xEF49F8", VA = "0xEF49F8")]
		private void SetAudioSourceInPoolQueue(AudioPoolReturnQueueEntry entry)
		{
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0xEF4BD4", Offset = "0xEF4BD4", VA = "0xEF4BD4")]
		public bool RemoveAudioSourceFromPoolQueue(AudioSource source)
		{
			return default(bool);
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0xEF4CF0", Offset = "0xEF4CF0", VA = "0xEF4CF0")]
		public void FadeSfxVolume(float toVolumeFactor, float time)
		{
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0xEF4D5C", Offset = "0xEF4D5C", VA = "0xEF4D5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7740", Offset = "0x8D7740")]
		private IEnumerator FadeSfxVolumeOverTime(float toVolumeFactor, float time)
		{
			return null;
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0xEF4DD4", Offset = "0xEF4DD4", VA = "0xEF4DD4")]
		public void FadeMusicVolume(float toVolumeFactor, float time)
		{
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0xEF4E40", Offset = "0xEF4E40", VA = "0xEF4E40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D77A0", Offset = "0x8D77A0")]
		private IEnumerator FadeMusicVolumeOverTime(float toVolumeFactor, float time)
		{
			return null;
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0xEF4EB8", Offset = "0xEF4EB8", VA = "0xEF4EB8")]
		public static void UpdateVolumes()
		{
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0xEF4F9C", Offset = "0xEF4F9C", VA = "0xEF4F9C")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20006D3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ADCC4", Offset = "0x8ADCC4")]
	public class AudioObjectBark : AudioObjectBase
	{
		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip[] _clips;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<int> pickableIndices;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int lastPickedIndex;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBB8C", Offset = "0x8CBB8C")]
		private static bool <EnableBark>k__BackingField;

		[Token(Token = "0x17000780")]
		public static bool EnableBark
		{
			[Token(Token = "0x600287B")]
			[Address(RVA = "0xEF5110", Offset = "0xEF5110", VA = "0xEF5110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D78F0", Offset = "0x8D78F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600287C")]
			[Address(RVA = "0xEF5174", Offset = "0xEF5174", VA = "0xEF5174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7900", Offset = "0x8D7900")]
			set
			{
			}
		}

		[Token(Token = "0x17000781")]
		public override bool HasClip
		{
			[Token(Token = "0x600287E")]
			[Address(RVA = "0xEF5268", Offset = "0xEF5268", VA = "0xEF5268", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0xEF51E0", Offset = "0xEF51E0", VA = "0xEF51E0", Slot = "6")]
		public override void Setup()
		{
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0xEF54E8", Offset = "0xEF54E8", VA = "0xEF54E8", Slot = "5")]
		public override AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0xEF5738", Offset = "0xEF5738", VA = "0xEF5738")]
		public AudioObjectBark()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D4")]
	public class SoundCurve
	{
		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSourceCurveType type;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x6002882")]
		[Address(RVA = "0xF53B00", Offset = "0xF53B00", VA = "0xF53B00")]
		public SoundCurve()
		{
		}
	}
	[Token(Token = "0x20006D5")]
	public abstract class AudioObjectBase : ScriptableObject
	{
		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 _volumeSpan;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 _pitchSpan;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MixerGroupEnum Mixer;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool Loop;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool BypassListenerEffects;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool BypassReverbZones;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Priority;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float SpatialBlend;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float DopplerLevel;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float Spread;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxDistance;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinDistance;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float LowpassCutoff;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool EnableLowpass;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundCurve VolumeCurve;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundCurve SpatialCurve;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SoundCurve SpreadCurve;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SoundCurve ReverbCurve;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve LowpassCurve;

		[Token(Token = "0x17000782")]
		public abstract bool HasClip
		{
			[Token(Token = "0x6002883")]
			get;
		}

		[Token(Token = "0x6002884")]
		public abstract AudioClip GetClip();

		[Token(Token = "0x6002885")]
		[Address(RVA = "0xEF5264", Offset = "0xEF5264", VA = "0xEF5264", Slot = "6")]
		public virtual void Setup()
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0xEF5A28", Offset = "0xEF5A28", VA = "0xEF5A28")]
		public float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0xEF5A34", Offset = "0xEF5A34", VA = "0xEF5A34")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0xEF5A40", Offset = "0xEF5A40", VA = "0xEF5A40")]
		public AnimationCurve GetDefaultCurve()
		{
			return null;
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0xEF57B8", Offset = "0xEF57B8", VA = "0xEF57B8")]
		protected AudioObjectBase()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ADD30", Offset = "0x8ADD30")]
	public class AudioObjectEffect : AudioObjectBase
	{
		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip[] _clips;

		[Token(Token = "0x17000783")]
		public override bool HasClip
		{
			[Token(Token = "0x600288A")]
			[Address(RVA = "0xEF5CA0", Offset = "0xEF5CA0", VA = "0xEF5CA0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0xEF5CA8", Offset = "0xEF5CA8", VA = "0xEF5CA8", Slot = "5")]
		public override AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0xEF532C", Offset = "0xEF532C", VA = "0xEF532C")]
		public static bool HasEffectClip(IReadOnlyList<AudioClip> clips)
		{
			return default(bool);
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0xEF5CB0", Offset = "0xEF5CB0", VA = "0xEF5CB0")]
		public static AudioClip GetEffectClip(IReadOnlyList<AudioClip> clips)
		{
			return null;
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0xEF5E18", Offset = "0xEF5E18", VA = "0xEF5E18")]
		public AudioObjectEffect()
		{
		}
	}
	[Token(Token = "0x20006D7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8ADD9C", Offset = "0x8ADD9C")]
	public class AudioObjectVoiceOver : AudioObjectBase
	{
		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip clipDefault;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip[] clipsVoiceOverDisabled;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBB9C", Offset = "0x8CBB9C")]
		private static bool <EnableVoiceOver>k__BackingField;

		[Token(Token = "0x17000784")]
		public static bool EnableVoiceOver
		{
			[Token(Token = "0x600288F")]
			[Address(RVA = "0xEF5F28", Offset = "0xEF5F28", VA = "0xEF5F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7910", Offset = "0x8D7910")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002890")]
			[Address(RVA = "0xEF5F8C", Offset = "0xEF5F8C", VA = "0xEF5F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7920", Offset = "0x8D7920")]
			set
			{
			}
		}

		[Token(Token = "0x17000785")]
		public override bool HasClip
		{
			[Token(Token = "0x6002891")]
			[Address(RVA = "0xEF5FF8", Offset = "0xEF5FF8", VA = "0xEF5FF8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0xEF60F4", Offset = "0xEF60F4", VA = "0xEF60F4", Slot = "5")]
		public override AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0xEF61B8", Offset = "0xEF61B8", VA = "0xEF61B8")]
		public AudioObjectVoiceOver()
		{
		}
	}
	[Token(Token = "0x20006D8")]
	public class AudioTriggerOnAwake : MonoBehaviour
	{
		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SfxTrigger triggerObj;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CBBBC", Offset = "0x8CBBBC")]
		[SerializeField]
		private Transform follow;

		[Token(Token = "0x6002895")]
		[Address(RVA = "0xEF620C", Offset = "0xEF620C", VA = "0xEF620C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0xEF62DC", Offset = "0xEF62DC", VA = "0xEF62DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0xEF62F4", Offset = "0xEF62F4", VA = "0xEF62F4")]
		public AudioTriggerOnAwake()
		{
		}
	}
	[Token(Token = "0x20006D9")]
	public abstract class AudioTriggerSourceBase : GameMonoBehaviour
	{
		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBC08", Offset = "0x8CBC08")]
		public Transform follow;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBC40", Offset = "0x8CBC40")]
		[SerializeField]
		private bool playOnAwake;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBC8C", Offset = "0x8CBC8C")]
		[SerializeField]
		private bool easeIn;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private AudioEaseEnum easeInType;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float easeInDuration;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBCF8", Offset = "0x8CBCF8")]
		private bool easeOut;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioEaseEnum easeOutType;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float easeOutDuration;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool unloaded;

		[Token(Token = "0x17000786")]
		protected abstract TriggerBase Trigger
		{
			[Token(Token = "0x6002898")]
			get;
		}

		[Token(Token = "0x17000787")]
		protected override bool EnableOnGameSetupAsync
		{
			[Token(Token = "0x6002899")]
			[Address(RVA = "0xEF62FC", Offset = "0xEF62FC", VA = "0xEF62FC", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0xEF6304", Offset = "0xEF6304", VA = "0xEF6304", Slot = "31")]
		protected override YieldInstruction OnGameSetupAsync()
		{
			return null;
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0xEF6538", Offset = "0xEF6538", VA = "0xEF6538", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0xEF636C", Offset = "0xEF636C", VA = "0xEF636C")]
		public void Play()
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0xEF664C", Offset = "0xEF664C", VA = "0xEF664C")]
		public void Stop()
		{
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0xEF6570", Offset = "0xEF6570", VA = "0xEF6570")]
		private void Stop(bool unload)
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0xEF6654", Offset = "0xEF6654", VA = "0xEF6654")]
		protected AudioTriggerSourceBase()
		{
		}
	}
	[Token(Token = "0x20006DA")]
	public class AudioTriggerSourceSfx : AudioTriggerSourceBase
	{
		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBD64", Offset = "0x8CBD64")]
		[SerializeField]
		private SfxTrigger trigger;

		[Token(Token = "0x17000788")]
		protected override TriggerBase Trigger
		{
			[Token(Token = "0x60028A0")]
			[Address(RVA = "0xEF665C", Offset = "0xEF665C", VA = "0xEF665C", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0xEF6664", Offset = "0xEF6664", VA = "0xEF6664")]
		public AudioTriggerSourceSfx()
		{
		}
	}
	[Token(Token = "0x20006DB")]
	public class AudioTriggerSourceSfxDelay : AudioTriggerSourceSfx
	{
		[Token(Token = "0x20006DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADE08", Offset = "0x8ADE08")]
		private sealed class <PlayDelayedSound>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400245A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400245B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioTriggerSourceSfxDelay <>4__this;

			[Token(Token = "0x17000789")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028A9")]
				[Address(RVA = "0xC6127C", Offset = "0xC6127C", VA = "0xC6127C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700078A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028AB")]
				[Address(RVA = "0xC612C4", Offset = "0xC612C4", VA = "0xC612C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028A6")]
			[Address(RVA = "0xC6118C", Offset = "0xC6118C", VA = "0xC6118C")]
			[DebuggerHidden]
			public <PlayDelayedSound>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60028A7")]
			[Address(RVA = "0xC611B8", Offset = "0xC611B8", VA = "0xC611B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028A8")]
			[Address(RVA = "0xC611BC", Offset = "0xC611BC", VA = "0xC611BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028AA")]
			[Address(RVA = "0xC61284", Offset = "0xC61284", VA = "0xC61284", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8CBDB0", Offset = "0x8CBDB0")]
		[SerializeField]
		private float delay;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private bool shouldDelayOnAwake;

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0xEF666C", Offset = "0xEF666C", VA = "0xEF666C", Slot = "36")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0xEF66B8", Offset = "0xEF66B8", VA = "0xEF66B8")]
		public void SetPlayDelayedSound()
		{
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0xEF66E4", Offset = "0xEF66E4", VA = "0xEF66E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7930", Offset = "0x8D7930")]
		private IEnumerator PlayDelayedSound()
		{
			return null;
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0xEF675C", Offset = "0xEF675C", VA = "0xEF675C")]
		public AudioTriggerSourceSfxDelay()
		{
		}
	}
	[Token(Token = "0x20006DD")]
	public class AudioTriggerSourceSfxOnAnimationEvent : AudioTriggerSourceSfx
	{
		[Token(Token = "0x60028AC")]
		[Address(RVA = "0xEF6764", Offset = "0xEF6764", VA = "0xEF6764")]
		public void OnMoveEvent()
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0xEF6768", Offset = "0xEF6768", VA = "0xEF6768")]
		public void OnRoar()
		{
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0xEF676C", Offset = "0xEF676C", VA = "0xEF676C")]
		public AudioTriggerSourceSfxOnAnimationEvent()
		{
		}
	}
	[Token(Token = "0x20006DE")]
	public class AudioTriggerSourceSfxRandomDelay : AudioTriggerSourceSfx
	{
		[Token(Token = "0x20006DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADE18", Offset = "0x8ADE18")]
		private sealed class <DelayedPlaySound>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400245F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioTriggerSourceSfxRandomDelay <>4__this;

			[Token(Token = "0x1700078B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028B8")]
				[Address(RVA = "0xC613D0", Offset = "0xC613D0", VA = "0xC613D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700078C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028BA")]
				[Address(RVA = "0xC61418", Offset = "0xC61418", VA = "0xC61418", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028B5")]
			[Address(RVA = "0xC612CC", Offset = "0xC612CC", VA = "0xC612CC")]
			[DebuggerHidden]
			public <DelayedPlaySound>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60028B6")]
			[Address(RVA = "0xC612F8", Offset = "0xC612F8", VA = "0xC612F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028B7")]
			[Address(RVA = "0xC612FC", Offset = "0xC612FC", VA = "0xC612FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028B9")]
			[Address(RVA = "0xC613D8", Offset = "0xC613D8", VA = "0xC613D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBDFC", Offset = "0x8CBDFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CBDFC", Offset = "0x8CBDFC")]
		[SerializeField]
		private Vector2 randomDelayRange;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool startRandomDelayOnEnable;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine delayRoutine;

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0xEF6774", Offset = "0xEF6774", VA = "0xEF6774")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0xEF67D8", Offset = "0xEF67D8", VA = "0xEF67D8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0xEF6784", Offset = "0xEF6784", VA = "0xEF6784")]
		private void PlayRandomDelay()
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0xEF67DC", Offset = "0xEF67DC", VA = "0xEF67DC")]
		private void StopRandomDelay()
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0xEF6824", Offset = "0xEF6824", VA = "0xEF6824")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D79E0", Offset = "0x8D79E0")]
		private IEnumerator DelayedPlaySound()
		{
			return null;
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0xEF689C", Offset = "0xEF689C", VA = "0xEF689C")]
		public AudioTriggerSourceSfxRandomDelay()
		{
		}
	}
	[Token(Token = "0x20006E0")]
	public class AudioTriggerSourceStatic : AudioTriggerSourceBase
	{
		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBE7C", Offset = "0x8CBE7C")]
		[SerializeField]
		private StaticTrigger trigger;

		[Token(Token = "0x1700078D")]
		protected override TriggerBase Trigger
		{
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0xEF68B8", Offset = "0xEF68B8", VA = "0xEF68B8", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0xEF68C0", Offset = "0xEF68C0", VA = "0xEF68C0")]
		public AudioTriggerSourceStatic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006E1")]
	public abstract class TriggerBase
	{
		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADE28", Offset = "0x8ADE28")]
		private sealed class <>c__DisplayClass66_0
		{
			[Token(Token = "0x4002471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Coroutine stopFollowRoutine;

			[Token(Token = "0x60028EC")]
			[Address(RVA = "0xEA1B04", Offset = "0xEA1B04", VA = "0xEA1B04")]
			public <>c__DisplayClass66_0()
			{
			}

			[Token(Token = "0x60028ED")]
			[Address(RVA = "0xEA1B0C", Offset = "0xEA1B0C", VA = "0xEA1B0C")]
			internal void <OnStop>b__0(AudioSource s)
			{
			}

			[Token(Token = "0x60028EE")]
			[Address(RVA = "0xEA1B20", Offset = "0xEA1B20", VA = "0xEA1B20")]
			internal void <OnStop>b__1(AudioSource s)
			{
			}
		}

		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADE38", Offset = "0x8ADE38")]
		private sealed class <FollowRoutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggerBase <>4__this;

			[Token(Token = "0x1700079C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028F2")]
				[Address(RVA = "0xEA2138", Offset = "0xEA2138", VA = "0xEA2138", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700079D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028F4")]
				[Address(RVA = "0xEA2180", Offset = "0xEA2180", VA = "0xEA2180", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028EF")]
			[Address(RVA = "0xEA2004", Offset = "0xEA2004", VA = "0xEA2004")]
			[DebuggerHidden]
			public <FollowRoutine>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x60028F0")]
			[Address(RVA = "0xEA2030", Offset = "0xEA2030", VA = "0xEA2030", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028F1")]
			[Address(RVA = "0xEA2034", Offset = "0xEA2034", VA = "0xEA2034", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028F3")]
			[Address(RVA = "0xEA2140", Offset = "0xEA2140", VA = "0xEA2140", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADE48", Offset = "0x8ADE48")]
		private sealed class <AudioFadeCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioSource source;

			[Token(Token = "0x4002478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioEaseEnum ease;

			[Token(Token = "0x4002479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float targetVolume;

			[Token(Token = "0x400247A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400247B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<AudioSource> onFinished;

			[Token(Token = "0x400247C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TriggerBase <>4__this;

			[Token(Token = "0x400247D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AsyncOperationHandle unloadHandle;

			[Token(Token = "0x400247E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool syncCoroutine;

			[Token(Token = "0x400247F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float <timer>5__2;

			[Token(Token = "0x4002480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private float <current>5__3;

			[Token(Token = "0x4002481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private AnimationCurve <curve>5__4;

			[Token(Token = "0x1700079E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028F8")]
				[Address(RVA = "0xEA1FB4", Offset = "0xEA1FB4", VA = "0xEA1FB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700079F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028FA")]
				[Address(RVA = "0xEA1FFC", Offset = "0xEA1FFC", VA = "0xEA1FFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028F5")]
			[Address(RVA = "0xEA1B34", Offset = "0xEA1B34", VA = "0xEA1B34")]
			[DebuggerHidden]
			public <AudioFadeCoroutine>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x60028F6")]
			[Address(RVA = "0xEA1B60", Offset = "0xEA1B60", VA = "0xEA1B60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028F7")]
			[Address(RVA = "0xEA1B64", Offset = "0xEA1B64", VA = "0xEA1B64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028F9")]
			[Address(RVA = "0xEA1FBC", Offset = "0xEA1FBC", VA = "0xEA1FBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBEC8", Offset = "0x8CBEC8")]
		private AudioSource <Source>k__BackingField;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBED8", Offset = "0x8CBED8")]
		private AudioObjectBase <AudioObject>k__BackingField;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBEE8", Offset = "0x8CBEE8")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBEF8", Offset = "0x8CBEF8")]
		private Transform <Follow>k__BackingField;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBF08", Offset = "0x8CBF08")]
		private AudioEaseEnum <Ease>k__BackingField;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBF18", Offset = "0x8CBF18")]
		private float <FadeTime>k__BackingField;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CBF28", Offset = "0x8CBF28")]
		private string <AudioName>k__BackingField;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool playOnLoad;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		protected bool unloadOnLoad;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected AsyncOperationHandle<AudioObjectBase> handle;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Coroutine followRoutine;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Coroutine fadeRoutine;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool canBePausedSet;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool canBePaused;

		[Token(Token = "0x1700078E")]
		public AudioSource Source
		{
			[Token(Token = "0x60028BD")]
			[Address(RVA = "0xF371C0", Offset = "0xF371C0", VA = "0xF371C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7A90", Offset = "0x8D7A90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028BE")]
			[Address(RVA = "0xF371C8", Offset = "0xF371C8", VA = "0xF371C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AA0", Offset = "0x8D7AA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700078F")]
		public AudioObjectBase AudioObject
		{
			[Token(Token = "0x60028BF")]
			[Address(RVA = "0xF371D0", Offset = "0xF371D0", VA = "0xF371D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AB0", Offset = "0x8D7AB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028C0")]
			[Address(RVA = "0xF371D8", Offset = "0xF371D8", VA = "0xF371D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AC0", Offset = "0x8D7AC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000790")]
		public Vector3 Position
		{
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0xF371E0", Offset = "0xF371E0", VA = "0xF371E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AD0", Offset = "0x8D7AD0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60028C2")]
			[Address(RVA = "0xF371EC", Offset = "0xF371EC", VA = "0xF371EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AE0", Offset = "0x8D7AE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000791")]
		public Transform Follow
		{
			[Token(Token = "0x60028C3")]
			[Address(RVA = "0xF371F8", Offset = "0xF371F8", VA = "0xF371F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7AF0", Offset = "0x8D7AF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028C4")]
			[Address(RVA = "0xF37200", Offset = "0xF37200", VA = "0xF37200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B00", Offset = "0x8D7B00")]
			set
			{
			}
		}

		[Token(Token = "0x17000792")]
		public AudioEaseEnum Ease
		{
			[Token(Token = "0x60028C5")]
			[Address(RVA = "0xF37208", Offset = "0xF37208", VA = "0xF37208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B10", Offset = "0x8D7B10")]
			get
			{
				return default(AudioEaseEnum);
			}
			[Token(Token = "0x60028C6")]
			[Address(RVA = "0xF37210", Offset = "0xF37210", VA = "0xF37210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B20", Offset = "0x8D7B20")]
			set
			{
			}
		}

		[Token(Token = "0x17000793")]
		public float FadeTime
		{
			[Token(Token = "0x60028C7")]
			[Address(RVA = "0xF37218", Offset = "0xF37218", VA = "0xF37218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B30", Offset = "0x8D7B30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028C8")]
			[Address(RVA = "0xF37220", Offset = "0xF37220", VA = "0xF37220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B40", Offset = "0x8D7B40")]
			set
			{
			}
		}

		[Token(Token = "0x17000794")]
		public string AudioName
		{
			[Token(Token = "0x60028C9")]
			[Address(RVA = "0xF37228", Offset = "0xF37228", VA = "0xF37228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B50", Offset = "0x8D7B50")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028CA")]
			[Address(RVA = "0xF37230", Offset = "0xF37230", VA = "0xF37230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D7B60", Offset = "0x8D7B60")]
			set
			{
			}
		}

		[Token(Token = "0x17000795")]
		public bool IsPlaying
		{
			[Token(Token = "0x60028CB")]
			[Address(RVA = "0xF265C8", Offset = "0xF265C8", VA = "0xF265C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000796")]
		public bool IsLoaded
		{
			[Token(Token = "0x60028CC")]
			[Address(RVA = "0xF37238", Offset = "0xF37238", VA = "0xF37238")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000797")]
		public virtual bool IsLoading
		{
			[Token(Token = "0x60028CD")]
			[Address(RVA = "0xF372A4", Offset = "0xF372A4", VA = "0xF372A4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000798")]
		public abstract bool IsValid
		{
			[Token(Token = "0x60028CE")]
			get;
		}

		[Token(Token = "0x17000799")]
		protected virtual bool CanBePausedDefault
		{
			[Token(Token = "0x60028CF")]
			[Address(RVA = "0xF3730C", Offset = "0xF3730C", VA = "0xF3730C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700079A")]
		public bool CanBePaused
		{
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0xF26644", Offset = "0xF26644", VA = "0xF26644")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028D1")]
			[Address(RVA = "0xF37314", Offset = "0xF37314", VA = "0xF37314")]
			set
			{
			}
		}

		[Token(Token = "0x1700079B")]
		public virtual string AdressPrefix
		{
			[Token(Token = "0x60028D2")]
			[Address(RVA = "0xF37328", Offset = "0xF37328", VA = "0xF37328", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0xF37374", Offset = "0xF37374", VA = "0xF37374")]
		public AsyncOperationHandle Load(Action<AsyncOperationHandle> completeAction)
		{
			return default(AsyncOperationHandle);
		}

		[Token(Token = "0x60028D4")]
		public abstract AsyncOperationHandle Load();

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0xF373F4", Offset = "0xF373F4", VA = "0xF373F4")]
		public void Play()
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0xF37714", Offset = "0xF37714", VA = "0xF37714")]
		public void Play(Vector3 atPos)
		{
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0xF37724", Offset = "0xF37724", VA = "0xF37724")]
		public void Play(Transform follow)
		{
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0xF37768", Offset = "0xF37768", VA = "0xF37768")]
		public void Play(AudioEaseEnum ease)
		{
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0xF377A0", Offset = "0xF377A0", VA = "0xF377A0")]
		public void Play(AudioEaseEnum ease, float fadeTime)
		{
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0xF377E4", Offset = "0xF377E4", VA = "0xF377E4")]
		public void Play(Vector3 atPos, AudioEaseEnum ease)
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0xF377F4", Offset = "0xF377F4", VA = "0xF377F4")]
		public void Play(Transform follow, AudioEaseEnum ease)
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0xF37844", Offset = "0xF37844", VA = "0xF37844")]
		public void Play(Vector3 atPos, AudioEaseEnum ease, float fadeTime)
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0xF37850", Offset = "0xF37850", VA = "0xF37850")]
		public void Play(Transform follow, AudioEaseEnum ease, float fadeTime)
		{
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0xF37428", Offset = "0xF37428", VA = "0xF37428")]
		private void OnPlay(Vector3 atPos, Transform follow, AudioEaseEnum ease, float fadeTime)
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0xF25AF4", Offset = "0xF25AF4", VA = "0xF25AF4")]
		protected bool TryPlayAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0xF26634", Offset = "0xF26634", VA = "0xF26634")]
		public void Stop(bool unload)
		{
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0xF37B84", Offset = "0xF37B84", VA = "0xF37B84")]
		public void Stop(AudioEaseEnum ease, bool unload)
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0xF38058", Offset = "0xF38058", VA = "0xF38058")]
		public void Stop(AudioEaseEnum ease, float fadeTime, bool unload)
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0xF37C08", Offset = "0xF37C08", VA = "0xF37C08")]
		private void OnStop(AudioEaseEnum ease, float fadeTime, bool unload)
		{
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0xF37B90", Offset = "0xF37B90", VA = "0xF37B90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7B70", Offset = "0x8D7B70")]
		private IEnumerator FollowRoutine()
		{
			return null;
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0xF37990", Offset = "0xF37990", VA = "0xF37990")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7BD0", Offset = "0x8D7BD0")]
		private IEnumerator AudioFadeCoroutine(AudioSource source, AudioEaseEnum ease, float fadeTime, float targetVolume, Action<AudioSource> onFinished, AsyncOperationHandle unloadHandle, bool syncCoroutine)
		{
			return null;
		}

		[Token(Token = "0x60028E6")]
		public abstract void Unload();

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0xF3819C", Offset = "0xF3819C", VA = "0xF3819C")]
		public static void StopAudioCoroutineAndReturnSource(AudioSource source, Coroutine routine)
		{
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0xF38060", Offset = "0xF38060", VA = "0xF38060")]
		public static void StopAndReturnSource(AudioSource source)
		{
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0xF37A90", Offset = "0xF37A90", VA = "0xF37A90")]
		protected static void StartAudioCoroutine(ref Coroutine coroutine, IEnumerator action)
		{
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0xF378AC", Offset = "0xF378AC", VA = "0xF378AC")]
		protected static void StopAudioCoroutine(ref Coroutine coroutine)
		{
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0xF26668", Offset = "0xF26668", VA = "0xF26668")]
		protected TriggerBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006E5")]
	public class AsyncTrigger : TriggerBase
	{
		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AssetReference audioAsset;

		[Token(Token = "0x170007A0")]
		public override bool IsValid
		{
			[Token(Token = "0x60028FB")]
			[Address(RVA = "0xEF1C68", Offset = "0xEF1C68", VA = "0xEF1C68", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0xEF1C84", Offset = "0xEF1C84", VA = "0xEF1C84", Slot = "8")]
		public override AsyncOperationHandle Load()
		{
			return default(AsyncOperationHandle);
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0xEF201C", Offset = "0xEF201C", VA = "0xEF201C")]
		private void OnLoaded(AsyncOperationHandle<AudioObjectBase> operationHandle)
		{
		}

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0xEF22FC", Offset = "0xEF22FC", VA = "0xEF22FC", Slot = "9")]
		public override void Unload()
		{
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0xEF26CC", Offset = "0xEF26CC", VA = "0xEF26CC")]
		public AsyncTrigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006E6")]
	public class StaticTrigger : TriggerBase
	{
		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioObjectBase audioAsset;

		[Token(Token = "0x170007A1")]
		public override bool IsLoading
		{
			[Token(Token = "0x6002900")]
			[Address(RVA = "0xF258E0", Offset = "0xF258E0", VA = "0xF258E0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007A2")]
		public override bool IsValid
		{
			[Token(Token = "0x6002901")]
			[Address(RVA = "0xF258E8", Offset = "0xF258E8", VA = "0xF258E8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0xF25954", Offset = "0xF25954", VA = "0xF25954", Slot = "8")]
		public override AsyncOperationHandle Load()
		{
			return default(AsyncOperationHandle);
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0xF262C4", Offset = "0xF262C4", VA = "0xF262C4", Slot = "9")]
		public override void Unload()
		{
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0xF26660", Offset = "0xF26660", VA = "0xF26660")]
		public StaticTrigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006E7")]
	public class SfxTrigger : AsyncTrigger
	{
		[Token(Token = "0x4002484")]
		public const string ADDRESS_PREFIX = "Sfx/";

		[Token(Token = "0x170007A3")]
		public override string AdressPrefix
		{
			[Token(Token = "0x6002905")]
			[Address(RVA = "0xE19F7C", Offset = "0xE19F7C", VA = "0xE19F7C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0xE19FC0", Offset = "0xE19FC0", VA = "0xE19FC0")]
		public SfxTrigger(string sfxObjectName)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006E8")]
	public class MusicTrigger : AsyncTrigger
	{
		[Token(Token = "0x4002485")]
		public const string ADDRESS_PREFIX = "Music/";

		[Token(Token = "0x170007A4")]
		public override string AdressPrefix
		{
			[Token(Token = "0x6002907")]
			[Address(RVA = "0x248AE10", Offset = "0x248AE10", VA = "0x248AE10", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007A5")]
		protected override bool CanBePausedDefault
		{
			[Token(Token = "0x6002908")]
			[Address(RVA = "0x248AE54", Offset = "0x248AE54", VA = "0x248AE54", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x248AE5C", Offset = "0x248AE5C", VA = "0x248AE5C")]
		public MusicTrigger(string musicObjectName)
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x20006E9")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x600290A")]
		[Address(RVA = "0xFF5620", Offset = "0xFF5620", VA = "0xFF5620", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0xFF5680", Offset = "0xFF5680", VA = "0xFF5680")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x20006EA")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x600290C")]
		[Address(RVA = "0xFF56E4", Offset = "0xFF56E4", VA = "0xFF56E4")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0xFF5714", Offset = "0xFF5714", VA = "0xFF5714")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0xFF5730", Offset = "0xFF5730", VA = "0xFF5730")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0xFF5760", Offset = "0xFF5760", VA = "0xFF5760")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0xFF5780", Offset = "0xFF5780", VA = "0xFF5780")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0xFF5758", Offset = "0xFF5758", VA = "0xFF5758")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6002912")]
		[Address(RVA = "0xFF579C", Offset = "0xFF579C", VA = "0xFF579C")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x6002913")]
		[Address(RVA = "0xFF57B8", Offset = "0xFF57B8", VA = "0xFF57B8")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x6002914")]
		[Address(RVA = "0xFF57C0", Offset = "0xFF57C0", VA = "0xFF57C0")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x6002915")]
		[Address(RVA = "0xFF57C8", Offset = "0xFF57C8", VA = "0xFF57C8")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6002916")]
		[Address(RVA = "0xFF57D0", Offset = "0xFF57D0", VA = "0xFF57D0")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0xFF57D8", Offset = "0xFF57D8", VA = "0xFF57D8")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6002918")]
		[Address(RVA = "0xFF57E0", Offset = "0xFF57E0", VA = "0xFF57E0")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002919")]
		[Address(RVA = "0xFF57E8", Offset = "0xFF57E8", VA = "0xFF57E8")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0xFF57F0", Offset = "0xFF57F0", VA = "0xFF57F0")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0xFF57F8", Offset = "0xFF57F8", VA = "0xFF57F8")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0xFF5800", Offset = "0xFF5800", VA = "0xFF5800")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0xFF5808", Offset = "0xFF5808", VA = "0xFF5808")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x600291E")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600291F")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x20006EB")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CBF68", Offset = "0x8CBF68")]
		[SerializeField]
		private bool autoSwitchHands;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CBFB4", Offset = "0x8CBFB4")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBFB4", Offset = "0x8CBFB4")]
		private Transform leftHandOverride;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CC024", Offset = "0x8CC024")]
		[SerializeField]
		private Transform rightHandOverride;

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x14214D0", Offset = "0x14214D0", VA = "0x14214D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0x1421920", Offset = "0x1421920", VA = "0x1421920")]
		private void Update()
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x1421658", Offset = "0x1421658", VA = "0x1421658")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0x1421EBC", Offset = "0x1421EBC", VA = "0x1421EBC")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADE68", Offset = "0x8ADE68")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x170007A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002936")]
				[Address(RVA = "0xC6C220", Offset = "0xC6C220", VA = "0xC6C220", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170007AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002938")]
				[Address(RVA = "0xC6C268", Offset = "0xC6C268", VA = "0xC6C268", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002933")]
			[Address(RVA = "0xC6C0D0", Offset = "0xC6C0D0", VA = "0xC6C0D0")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002934")]
			[Address(RVA = "0xC6C0FC", Offset = "0xC6C0FC", VA = "0xC6C0FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002935")]
			[Address(RVA = "0xC6C100", Offset = "0xC6C100", VA = "0xC6C100", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002937")]
			[Address(RVA = "0xC6C228", Offset = "0xC6C228", VA = "0xC6C228", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x170007A6")]
		public Color CaretColor
		{
			[Token(Token = "0x600292C")]
			[Address(RVA = "0x14228D0", Offset = "0x14228D0", VA = "0x14228D0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600292D")]
			[Address(RVA = "0x14228DC", Offset = "0x14228DC", VA = "0x14228DC")]
			set
			{
			}
		}

		[Token(Token = "0x170007A7")]
		public Color SelectionColor
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0x14228E8", Offset = "0x14228E8", VA = "0x14228E8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600292F")]
			[Address(RVA = "0x14228F4", Offset = "0x14228F4", VA = "0x14228F4")]
			set
			{
			}
		}

		[Token(Token = "0x170007A8")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0x1422900", Offset = "0x1422900", VA = "0x1422900")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002931")]
			[Address(RVA = "0x142291C", Offset = "0x142291C", VA = "0x142291C")]
			set
			{
			}
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0x1421ECC", Offset = "0x1421ECC", VA = "0x1421ECC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002925")]
		[Address(RVA = "0x1421F28", Offset = "0x1421F28", VA = "0x1421F28")]
		private void Update()
		{
		}

		[Token(Token = "0x6002926")]
		[Address(RVA = "0x1422200", Offset = "0x1422200", VA = "0x1422200", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0x1422658", Offset = "0x1422658", VA = "0x1422658", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x14225E0", Offset = "0x14225E0", VA = "0x14225E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7E10", Offset = "0x8D7E10")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0x14222BC", Offset = "0x14222BC", VA = "0x14222BC")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0x1421F38", Offset = "0x1421F38", VA = "0x1421F38")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x600292B")]
		[Address(RVA = "0x1422690", Offset = "0x1422690", VA = "0x1422690")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0x1422938", Offset = "0x1422938", VA = "0x1422938")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x20006EE")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADE78", Offset = "0x8ADE78")]
		private sealed class <>c
		{
			[Token(Token = "0x4002498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__3_0;

			[Token(Token = "0x600293C")]
			[Address(RVA = "0xC6C2D4", Offset = "0xC6C2D4", VA = "0xC6C2D4")]
			public <>c()
			{
			}

			[Token(Token = "0x600293D")]
			[Address(RVA = "0xC6C2DC", Offset = "0xC6C2DC", VA = "0xC6C2DC")]
			internal bool <Update>b__3_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x6002939")]
		[Address(RVA = "0x14253FC", Offset = "0x14253FC", VA = "0x14253FC")]
		protected void Update()
		{
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0x1425930", Offset = "0x1425930", VA = "0x1425930")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x20006F0")]
	public class CurvedUIPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int sortOrder;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RaycastHit hitInfo;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastResult result;

		[Token(Token = "0x170007AB")]
		public int CompoundEventMask
		{
			[Token(Token = "0x6002940")]
			[Address(RVA = "0x1425C40", Offset = "0x1425C40", VA = "0x1425C40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007AC")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6002941")]
			[Address(RVA = "0x1425D44", Offset = "0x1425D44", VA = "0x1425D44", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007AD")]
		public virtual int Depth
		{
			[Token(Token = "0x6002942")]
			[Address(RVA = "0x1425E14", Offset = "0x1425E14", VA = "0x1425E14", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007AE")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6002943")]
			[Address(RVA = "0x1425ED0", Offset = "0x1425ED0", VA = "0x1425ED0", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x1425938", Offset = "0x1425938", VA = "0x1425938")]
		protected CurvedUIPhysicsRaycaster()
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0x1425948", Offset = "0x1425948", VA = "0x1425948", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
	[Token(Token = "0x20006F1")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x20006F2")]
		public enum ControllerType
		{
			[Token(Token = "0x40024A0")]
			NONE = -1,
			[Token(Token = "0x40024A1")]
			VIVE
		}

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject Controller;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x6002944")]
		[Address(RVA = "0x1425ED8", Offset = "0x1425ED8", VA = "0x1425ED8")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x20006F3")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x20006F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADE88", Offset = "0x8ADE88")]
		private sealed class <>c
		{
			[Token(Token = "0x40024B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40024B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__21_0;

			[Token(Token = "0x40024B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__32_0;

			[Token(Token = "0x40024BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<Graphic> <>9__55_0;

			[Token(Token = "0x600296C")]
			[Address(RVA = "0xC6C43C", Offset = "0xC6C43C", VA = "0xC6C43C")]
			public <>c()
			{
			}

			[Token(Token = "0x600296D")]
			[Address(RVA = "0xC6C444", Offset = "0xC6C444", VA = "0xC6C444")]
			internal bool <Update>b__21_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600296E")]
			[Address(RVA = "0xC6C510", Offset = "0xC6C510", VA = "0xC6C510")]
			internal int <FlatRaycastAndSort>b__32_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}

			[Token(Token = "0x600296F")]
			[Address(RVA = "0xC6C568", Offset = "0xC6C568", VA = "0xC6C568")]
			internal int <GetObjectsHitByRay>b__55_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData curEventData;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerEventData eventDataToUse;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ray cachedRay;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Graphic gph;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool gazeClickExecuted;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool pointingAtCanvas;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool pointingAtCanvasLastFrame;

		[NonSerialized]
		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x170007AF")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x6002958")]
			[Address(RVA = "0x1426F38", Offset = "0x1426F38", VA = "0x1426F38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007B0")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6002961")]
			[Address(RVA = "0x142D5C0", Offset = "0x142D5C0", VA = "0x142D5C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0x1425F14", Offset = "0x1425F14", VA = "0x1425F14", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0x1426160", Offset = "0x1426160", VA = "0x1426160", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x142697C", Offset = "0x142697C", VA = "0x142697C", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0x1426D74", Offset = "0x1426D74", VA = "0x1426D74")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0x1426D48", Offset = "0x1426D48", VA = "0x1426D48")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0x1427534", Offset = "0x1427534", VA = "0x1427534", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x1428904", Offset = "0x1428904", VA = "0x1428904", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0x142903C", Offset = "0x142903C", VA = "0x142903C", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0x142966C", Offset = "0x142966C", VA = "0x142966C", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0x1429B7C", Offset = "0x1429B7C", VA = "0x1429B7C", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0x1428358", Offset = "0x1428358", VA = "0x1428358")]
		private void FlatRaycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0x142A538", Offset = "0x142A538", VA = "0x142A538")]
		private static void FlatRaycastAndSort(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0x14263F4", Offset = "0x14263F4", VA = "0x14263F4")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0x142C008", Offset = "0x142C008", VA = "0x142C008")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0x142AA90", Offset = "0x142AA90", VA = "0x142AA90")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0x142B660", Offset = "0x142B660", VA = "0x142B660")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0x142C0C0", Offset = "0x142C0C0", VA = "0x142C0C0")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0x142CB84", Offset = "0x142CB84", VA = "0x142CB84")]
		private bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0x1428F30", Offset = "0x1428F30", VA = "0x1428F30")]
		private LayerMask GetRaycastLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0x1428F98", Offset = "0x1428F98", VA = "0x1428F98")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0x142CBDC", Offset = "0x142CBDC", VA = "0x142CBDC")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0x142CC2C", Offset = "0x142CC2C", VA = "0x142CC2C", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x1427CDC", Offset = "0x1427CDC", VA = "0x1427CDC")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0x142CC44", Offset = "0x142CC44", VA = "0x142CC44")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0x142D2E8", Offset = "0x142D2E8", VA = "0x142D2E8")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0x142D48C", Offset = "0x142D48C", VA = "0x142D48C")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0x14261EC", Offset = "0x14261EC", VA = "0x14261EC")]
		private bool CheckEventCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x142D5C8", Offset = "0x142D5C8", VA = "0x142D5C8")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0x142D604", Offset = "0x142D604", VA = "0x142D604")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x142D68C", Offset = "0x142D68C", VA = "0x142D68C")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [System.Runtime.InteropServices.Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0x142D774", Offset = "0x142D774", VA = "0x142D774")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x1426FA0", Offset = "0x1426FA0", VA = "0x1426FA0")]
		public void Click()
		{
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x142C858", Offset = "0x142C858", VA = "0x142C858")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x142DC68", Offset = "0x142DC68", VA = "0x142DC68")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x142DE1C", Offset = "0x142DE1C", VA = "0x142DE1C")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x20006F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8ADE98", Offset = "0x8ADE98")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8ADE98", Offset = "0x8ADE98")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x20006F6")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x40024D3")]
			CYLINDER,
			[Token(Token = "0x40024D4")]
			RING,
			[Token(Token = "0x40024D5")]
			SPHERE,
			[Token(Token = "0x40024D6")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x40024BB")]
		public const string Version = "3.3";

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Canvas> staticCanvasList;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Graphic> staticGraphicsList;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<CurvedUIVertexEffect> staticCurvedUIVertexEffectList;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<InputField> staticInputFieldList;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<TextMeshProUGUI> staticTMPUGUIList;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static List<TMP_InputField> staticTMPInputField;

		[Token(Token = "0x170007B1")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x600297A")]
			[Address(RVA = "0x142E094", Offset = "0x142E094", VA = "0x142E094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007B2")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x6002983")]
			[Address(RVA = "0x1430010", Offset = "0x1430010", VA = "0x1430010")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007B3")]
		public int Angle
		{
			[Token(Token = "0x6002984")]
			[Address(RVA = "0x1430018", Offset = "0x1430018", VA = "0x1430018")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002985")]
			[Address(RVA = "0x1430020", Offset = "0x1430020", VA = "0x1430020")]
			set
			{
			}
		}

		[Token(Token = "0x170007B4")]
		public float Quality
		{
			[Token(Token = "0x6002986")]
			[Address(RVA = "0x1430034", Offset = "0x1430034", VA = "0x1430034")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002987")]
			[Address(RVA = "0x143003C", Offset = "0x143003C", VA = "0x143003C")]
			set
			{
			}
		}

		[Token(Token = "0x170007B5")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x6002988")]
			[Address(RVA = "0x1430058", Offset = "0x1430058", VA = "0x1430058")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x6002989")]
			[Address(RVA = "0x1430060", Offset = "0x1430060", VA = "0x1430060")]
			set
			{
			}
		}

		[Token(Token = "0x170007B6")]
		public int VerticalAngle
		{
			[Token(Token = "0x600298A")]
			[Address(RVA = "0x1430080", Offset = "0x1430080", VA = "0x1430080")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600298B")]
			[Address(RVA = "0x1430088", Offset = "0x1430088", VA = "0x1430088")]
			set
			{
			}
		}

		[Token(Token = "0x170007B7")]
		public float RingFill
		{
			[Token(Token = "0x600298C")]
			[Address(RVA = "0x14300A8", Offset = "0x14300A8", VA = "0x14300A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600298D")]
			[Address(RVA = "0x14300B0", Offset = "0x14300B0", VA = "0x14300B0")]
			set
			{
			}
		}

		[Token(Token = "0x170007B8")]
		public float SavedRadius
		{
			[Token(Token = "0x600298E")]
			[Address(RVA = "0x142EF68", Offset = "0x142EF68", VA = "0x142EF68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170007B9")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x600298F")]
			[Address(RVA = "0x14300CC", Offset = "0x14300CC", VA = "0x14300CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002990")]
			[Address(RVA = "0x14300D4", Offset = "0x14300D4", VA = "0x14300D4")]
			set
			{
			}
		}

		[Token(Token = "0x170007BA")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x6002991")]
			[Address(RVA = "0x14300F4", Offset = "0x14300F4", VA = "0x14300F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002992")]
			[Address(RVA = "0x14300FC", Offset = "0x14300FC", VA = "0x14300FC")]
			set
			{
			}
		}

		[Token(Token = "0x170007BB")]
		public bool PreserveAspect
		{
			[Token(Token = "0x6002993")]
			[Address(RVA = "0x1430128", Offset = "0x1430128", VA = "0x1430128")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002994")]
			[Address(RVA = "0x1430130", Offset = "0x1430130", VA = "0x1430130")]
			set
			{
			}
		}

		[Token(Token = "0x170007BC")]
		public bool Interactable
		{
			[Token(Token = "0x6002995")]
			[Address(RVA = "0x143015C", Offset = "0x143015C", VA = "0x143015C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002996")]
			[Address(RVA = "0x1430164", Offset = "0x1430164", VA = "0x1430164")]
			set
			{
			}
		}

		[Token(Token = "0x170007BD")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x6002997")]
			[Address(RVA = "0x1430170", Offset = "0x1430170", VA = "0x1430170")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002998")]
			[Address(RVA = "0x1430178", Offset = "0x1430178", VA = "0x1430178")]
			set
			{
			}
		}

		[Token(Token = "0x170007BE")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0x1430184", Offset = "0x1430184", VA = "0x1430184")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600299A")]
			[Address(RVA = "0x143018C", Offset = "0x143018C", VA = "0x143018C")]
			set
			{
			}
		}

		[Token(Token = "0x170007BF")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8D8574", Offset = "0x8D8574")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x600299B")]
			[Address(RVA = "0x1430270", Offset = "0x1430270", VA = "0x1430270")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600299C")]
			[Address(RVA = "0x1430278", Offset = "0x1430278", VA = "0x1430278")]
			set
			{
			}
		}

		[Token(Token = "0x170007C0")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x600299E")]
			[Address(RVA = "0x1430440", Offset = "0x1430440", VA = "0x1430440")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007C1")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x60029A0")]
			[Address(RVA = "0x142D290", Offset = "0x142D290", VA = "0x142D290")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x60029A1")]
			[Address(RVA = "0x14305F0", Offset = "0x14305F0", VA = "0x14305F0")]
			set
			{
			}
		}

		[Token(Token = "0x170007C2")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x60029A5")]
			[Address(RVA = "0x14308D8", Offset = "0x14308D8", VA = "0x14308D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029A6")]
			[Address(RVA = "0x1430940", Offset = "0x1430940", VA = "0x1430940")]
			set
			{
			}
		}

		[Token(Token = "0x170007C3")]
		public float GazeClickTimer
		{
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0x14309B0", Offset = "0x14309B0", VA = "0x14309B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029A8")]
			[Address(RVA = "0x1430A18", Offset = "0x1430A18", VA = "0x1430A18")]
			set
			{
			}
		}

		[Token(Token = "0x170007C4")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x60029A9")]
			[Address(RVA = "0x1430AA0", Offset = "0x1430AA0", VA = "0x1430AA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029AA")]
			[Address(RVA = "0x1430B08", Offset = "0x1430B08", VA = "0x1430B08")]
			set
			{
			}
		}

		[Token(Token = "0x170007C5")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x60029AB")]
			[Address(RVA = "0x1430B90", Offset = "0x1430B90", VA = "0x1430B90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0x142E008", Offset = "0x142E008", VA = "0x142E008")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0x142E160", Offset = "0x142E160", VA = "0x142E160")]
		private void Start()
		{
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x142E59C", Offset = "0x142E59C", VA = "0x142E59C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0x142E748", Offset = "0x142E748", VA = "0x142E748")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x142E8F4", Offset = "0x142E8F4", VA = "0x142E8F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x142EA20", Offset = "0x142EA20", VA = "0x142EA20")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x142EE80", Offset = "0x142EE80", VA = "0x142EE80")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x142EF98", Offset = "0x142EF98", VA = "0x142EF98")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x142F080", Offset = "0x142F080", VA = "0x142F080")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0x142F170", Offset = "0x142F170", VA = "0x142F170")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x142F30C", Offset = "0x142F30C", VA = "0x142F30C")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x142FBCC", Offset = "0x142FBCC", VA = "0x142FBCC")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x1428298", Offset = "0x1428298", VA = "0x1428298")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x142FC04", Offset = "0x142FC04", VA = "0x142FC04")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x142FDE8", Offset = "0x142FDE8", VA = "0x142FDE8")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x1426028", Offset = "0x1426028", VA = "0x1426028")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x142C6EC", Offset = "0x142C6EC", VA = "0x142C6EC")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x142FF70", Offset = "0x142FF70", VA = "0x142FF70")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0x143027C", Offset = "0x143027C", VA = "0x143027C")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0x1430540", Offset = "0x1430540", VA = "0x1430540")]
		public void Click()
		{
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x1425840", Offset = "0x1425840", VA = "0x1425840")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x1430650", Offset = "0x1430650", VA = "0x1430650")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [System.Runtime.InteropServices.Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x14307B0", Offset = "0x14307B0", VA = "0x14307B0")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x1430BF8", Offset = "0x1430BF8", VA = "0x1430BF8")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x20006F7")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CC170", Offset = "0x8CC170")]
		public bool DoNotTesselate;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI myTMP;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUITMPSubmesh myTMPSubMesh;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_tesselationRequired;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool curvingRequired;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool TransformMisaligned;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIVertex m_ret;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float[] m_weights;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedPos;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[HideInInspector]
		[SerializeField]
		private Vector2 savedRectSize;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[HideInInspector]
		[SerializeField]
		private Color savedColor;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[HideInInspector]
		[SerializeField]
		private Vector4 savedTextUV0;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[HideInInspector]
		[SerializeField]
		private float savedFill;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Vector4 _uv0;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Vector4 _uv1;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Vector3 _pos;

		[Token(Token = "0x170007C6")]
		private bool tesselationRequired
		{
			[Token(Token = "0x60029AE")]
			[Address(RVA = "0x1433658", Offset = "0x1433658", VA = "0x1433658")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0x1433660", Offset = "0x1433660", VA = "0x1433660")]
			set
			{
			}
		}

		[Token(Token = "0x170007C7")]
		public bool TesselationRequired
		{
			[Token(Token = "0x60029C2")]
			[Address(RVA = "0x14362B4", Offset = "0x14362B4", VA = "0x14362B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029C3")]
			[Address(RVA = "0x14362A8", Offset = "0x14362A8", VA = "0x14362A8")]
			set
			{
			}
		}

		[Token(Token = "0x170007C8")]
		public bool CurvingRequired
		{
			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x14362BC", Offset = "0x14362BC", VA = "0x14362BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x14362C4", Offset = "0x14362C4", VA = "0x14362C4")]
			set
			{
			}
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0x143366C", Offset = "0x143366C", VA = "0x143366C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0x1433764", Offset = "0x1433764", VA = "0x1433764", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0x1433A74", Offset = "0x1433A74", VA = "0x1433A74", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0x1434100", Offset = "0x1434100", VA = "0x1434100", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0x14342B8", Offset = "0x14342B8", VA = "0x14342B8")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0x14342C4", Offset = "0x14342C4", VA = "0x14342C4")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0x1434364", Offset = "0x1434364", VA = "0x1434364")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0x14348C4", Offset = "0x14348C4", VA = "0x14348C4", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0x1431E58", Offset = "0x1431E58", VA = "0x1431E58")]
		public void ModifyTMPMesh(ref List<UIVertex> vertexList)
		{
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0x1434F38", Offset = "0x1434F38", VA = "0x1434F38")]
		private bool ShouldModify()
		{
			return default(bool);
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0x1435038", Offset = "0x1435038", VA = "0x1435038")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0x1433940", Offset = "0x1433940", VA = "0x1433940")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x14354AC", Offset = "0x14354AC", VA = "0x14354AC")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x14352DC", Offset = "0x14352DC", VA = "0x14352DC")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x1435A6C", Offset = "0x1435A6C", VA = "0x1435A6C")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0x14357D4", Offset = "0x14357D4", VA = "0x14357D4")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x1435F44", Offset = "0x1435F44", VA = "0x1435F44")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0x142EE74", Offset = "0x142EE74", VA = "0x142EE74")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x14362D0", Offset = "0x14362D0", VA = "0x14362D0")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x60029C7")]
		[Address(RVA = "0xC44A94", Offset = "0xC44A94", VA = "0xC44A94")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x20006F9")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x20006FA")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x20006FB")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x20006FC")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpText;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UIVertex> m_UIVerts;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIVertex m_tempVertex;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CurvedUITMPSubmesh m_tempSubMsh;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 savedSize;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 savedUp;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 savedPos;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 savedLocalScale;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 savedGlobalScale;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<CurvedUITMPSubmesh> subMeshes;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool Dirty;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool curvingRequired;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool tesselationRequired;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool quitting;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3[] vertices;

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0x1430E58", Offset = "0x1430E58", VA = "0x1430E58")]
		private void Start()
		{
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0x1430F14", Offset = "0x1430F14", VA = "0x1430F14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0x1431258", Offset = "0x1431258", VA = "0x1431258")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0x14313F4", Offset = "0x14313F4", VA = "0x14313F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0x1431400", Offset = "0x1431400", VA = "0x1431400")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0x1431C00", Offset = "0x1431C00", VA = "0x1431C00")]
		private void CreateUIVertexList(Mesh mesh)
		{
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0x143286C", Offset = "0x143286C", VA = "0x143286C")]
		private void GetUIVertexFromMesh(ref UIVertex vert, int i)
		{
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0x143214C", Offset = "0x143214C", VA = "0x143214C")]
		private void FillMeshWithUIVertexList(Mesh mesh, List<UIVertex> list)
		{
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x14310E8", Offset = "0x14310E8", VA = "0x14310E8")]
		private void FindTMP()
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0x14322C0", Offset = "0x14322C0", VA = "0x14322C0")]
		private void FindSubmeshes()
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0x143192C", Offset = "0x143192C", VA = "0x143192C")]
		private bool ShouldTesselate()
		{
			return default(bool);
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0x14328BC", Offset = "0x14328BC", VA = "0x14328BC")]
		private void TMPTextChangedCallback(object obj)
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0x14328D8", Offset = "0x14328D8", VA = "0x14328D8")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0x14328E4", Offset = "0x14328E4", VA = "0x14328E4")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x20006FD")]
	[ExecuteInEditMode]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x20006FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADF3C", Offset = "0x8ADF3C")]
		private sealed class <CaretBlinker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400250E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400250F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUITMPInputFieldCaret <>4__this;

			[Token(Token = "0x170007CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029F1")]
				[Address(RVA = "0xC6C710", Offset = "0xC6C710", VA = "0xC6C710", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170007CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029F3")]
				[Address(RVA = "0xC6C758", Offset = "0xC6C758", VA = "0xC6C758", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029EE")]
			[Address(RVA = "0xC6C5C0", Offset = "0xC6C5C0", VA = "0xC6C5C0")]
			[DebuggerHidden]
			public <CaretBlinker>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60029EF")]
			[Address(RVA = "0xC6C5EC", Offset = "0xC6C5EC", VA = "0xC6C5EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029F0")]
			[Address(RVA = "0xC6C5F0", Offset = "0xC6C5F0", VA = "0xC6C5F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029F2")]
			[Address(RVA = "0xC6C718", Offset = "0xC6C718", VA = "0xC6C718", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField myField;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x170007C9")]
		public Color CaretColor
		{
			[Token(Token = "0x60029E7")]
			[Address(RVA = "0x14335E0", Offset = "0x14335E0", VA = "0x14335E0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x14335EC", Offset = "0x14335EC", VA = "0x14335EC")]
			set
			{
			}
		}

		[Token(Token = "0x170007CA")]
		public Color SelectionColor
		{
			[Token(Token = "0x60029E9")]
			[Address(RVA = "0x14335F8", Offset = "0x14335F8", VA = "0x14335F8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0x1433604", Offset = "0x1433604", VA = "0x1433604")]
			set
			{
			}
		}

		[Token(Token = "0x170007CB")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x1433610", Offset = "0x1433610", VA = "0x1433610")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0x143362C", Offset = "0x143362C", VA = "0x143362C")]
			set
			{
			}
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x14329B4", Offset = "0x14329B4", VA = "0x14329B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0x1432DF8", Offset = "0x1432DF8", VA = "0x1432DF8")]
		private void Update()
		{
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x14330B0", Offset = "0x14330B0", VA = "0x14330B0", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x1433528", Offset = "0x1433528", VA = "0x1433528", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x14334B0", Offset = "0x14334B0", VA = "0x14334B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8D7EC0", Offset = "0x8D7EC0")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x143316C", Offset = "0x143316C", VA = "0x143316C")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x1432E08", Offset = "0x1432E08", VA = "0x1432E08")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x1433560", Offset = "0x1433560", VA = "0x1433560")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x1432A64", Offset = "0x1432A64", VA = "0x1432A64")]
		private void CheckAndConvertMask()
		{
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x1433648", Offset = "0x1433648", VA = "0x1433648")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x20006FF")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VertexHelper vh;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh straightMesh;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh curvedMesh;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_SubMeshUI TMPsub;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI TMPtext;

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x1432400", Offset = "0x1432400", VA = "0x1432400")]
		public void UpdateSubmesh(bool tesselate, bool curve)
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x1433650", Offset = "0x1433650", VA = "0x1433650")]
		public CurvedUITMPSubmesh()
		{
		}
	}
	[Token(Token = "0x2000700")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8ADF5C", Offset = "0x8ADF5C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8ADF5C", Offset = "0x8ADF5C")]
	public class OptionalDependencyAttribute : Attribute
	{
		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dependentClass;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string define;

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x2491848", Offset = "0x2491848", VA = "0x2491848")]
		public OptionalDependencyAttribute(string dependentClass, string define)
		{
		}
	}
}
