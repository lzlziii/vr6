using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Net.Security;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using AbilityUtils;
using Descriptors;
using Il2CppDummyDll;
using Impact.Data;
using Impact.Interactions;
using Impact.Materials;
using Impact.Objects;
using Impact.TagLibrary;
using Impact.Utility;
using Impact.Utility.ObjectPool;
using IngameDebugConsole;
using Mirror;
using Mirror.Discovery;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using PathCreation;
using Skin;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using util;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class DebugButtonToAction : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRInput.RawButton m_OVRRawButton;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent m_action;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x977090", Offset = "0x977090", VA = "0x977090")]
	private void Update()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x977124", Offset = "0x977124", VA = "0x977124")]
	public DebugButtonToAction()
	{
	}
}
[Token(Token = "0x2000003")]
public class MaterialInstance : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x980BD0", Offset = "0x980BD0", VA = "0x980BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x980C38", Offset = "0x980C38", VA = "0x980C38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x980C3C", Offset = "0x980C3C", VA = "0x980C3C")]
	public MaterialInstance()
	{
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x724C6C", Offset = "0x724C6C")]
public class FastList<T>
{
	[Token(Token = "0x2000005")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000006")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724CA4", Offset = "0x724CA4")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000003")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000027")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000029")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000024")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000025")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000026")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000028")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000008")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000009")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x600000A")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600000B")]
		set
		{
		}
	}

	[Token(Token = "0x6000006")]
	public FastList()
	{
	}

	[Token(Token = "0x6000007")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x600000C")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x600000D")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x600000E")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600000F")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000010")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000011")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000012")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000013")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000014")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000015")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000016")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000017")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000019")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600001A")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72D44C", Offset = "0x72D44C")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600001B")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600001C")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600001D")]
	private void Trim()
	{
	}

	[Token(Token = "0x600001E")]
	public void Clear()
	{
	}

	[Token(Token = "0x600001F")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000007")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x93DDBC", Offset = "0x93DDBC", VA = "0x93DDBC")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000008")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x93DD90", Offset = "0x93DD90", VA = "0x93DD90")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000009")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xAC9550", Offset = "0xAC9550", VA = "0xAC9550")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xAC96BC", Offset = "0xAC96BC", VA = "0xAC96BC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xAC9A60", Offset = "0xAC9A60", VA = "0xAC9A60")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xAC9C08", Offset = "0xAC9C08", VA = "0xAC9C08", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xAC9C34", Offset = "0xAC9C34", VA = "0xAC9C34")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200000A")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xA26158", Offset = "0xA26158", VA = "0xA26158")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xA261E4", Offset = "0xA261E4", VA = "0xA261E4")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xA26350", Offset = "0xA26350", VA = "0xA26350")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200000B")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000005")]
	public bool IsVisible
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0xAB0C78", Offset = "0xAB0C78", VA = "0xAB0C78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000035")]
		[Address(RVA = "0xAB0C80", Offset = "0xAB0C80", VA = "0xAB0C80")]
		set
		{
		}
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xAB0DA8", Offset = "0xAB0DA8", VA = "0xAB0DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xAB0FC4", Offset = "0xAB0FC4", VA = "0xAB0FC4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xAB0FCC", Offset = "0xAB0FCC", VA = "0xAB0FCC")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200000C")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200000D")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600003F")]
		[Address(RVA = "0xA2C214", Offset = "0xA2C214", VA = "0xA2C214")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200000E")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x726E3C", Offset = "0x726E3C")]
		public float FakeLatencyMax;

		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x726E54", Offset = "0x726E54")]
		public float FakeLatencyMin;

		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x726E6C", Offset = "0x726E6C")]
		public float LatencyWeight;

		[Token(Token = "0x400001F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x726E84", Offset = "0x726E84")]
		public int MaxSamples;

		[Token(Token = "0x4000020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000040")]
		[Address(RVA = "0xA2C21C", Offset = "0xA2C21C", VA = "0xA2C21C")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0xA2C3B4", Offset = "0xA2C3B4", VA = "0xA2C3B4")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xA2B8B4", Offset = "0xA2B8B4", VA = "0xA2B8B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xA2B9D8", Offset = "0xA2B9D8", VA = "0xA2B9D8")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xA2BD3C", Offset = "0xA2BD3C", VA = "0xA2BD3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xA2BCA0", Offset = "0xA2BCA0", VA = "0xA2BCA0")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xA2BF98", Offset = "0xA2BF98", VA = "0xA2BF98")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xA2C328", Offset = "0xA2C328", VA = "0xA2C328")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200000F")]
public class P2PManager
{
	[Token(Token = "0x2000010")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000024")]
		Update = 1
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xACAB70", Offset = "0xACAB70", VA = "0xACAB70")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xACAC30", Offset = "0xACAC30", VA = "0xACAC30")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xACAD14", Offset = "0xACAD14", VA = "0xACAD14")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xACAD98", Offset = "0xACAD98", VA = "0xACAD98")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xACAEF4", Offset = "0xACAEF4", VA = "0xACAEF4")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xACB1A4", Offset = "0xACB1A4", VA = "0xACB1A4")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xACB598", Offset = "0xACB598", VA = "0xACB598")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xACB83C", Offset = "0xACB83C", VA = "0xACB83C")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xACB368", Offset = "0xACB368", VA = "0xACB368")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xACB76C", Offset = "0xACB76C", VA = "0xACB76C")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xACB450", Offset = "0xACB450", VA = "0xACB450")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xACBA54", Offset = "0xACBA54", VA = "0xACBA54")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xACB3B0", Offset = "0xACB3B0", VA = "0xACB3B0")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xACB7B0", Offset = "0xACB7B0", VA = "0xACB7B0")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xACB4F8", Offset = "0xACB4F8", VA = "0xACB4F8")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xACBAE0", Offset = "0xACBAE0", VA = "0xACBAE0")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000011")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xA230B4", Offset = "0xA230B4", VA = "0xA230B4", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xA233E8", Offset = "0xA233E8", VA = "0xA233E8", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xA2340C", Offset = "0xA2340C", VA = "0xA2340C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xA237BC", Offset = "0xA237BC", VA = "0xA237BC")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xA2395C", Offset = "0xA2395C", VA = "0xA2395C")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xA239DC", Offset = "0xA239DC", VA = "0xA239DC")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xA23A30", Offset = "0xA23A30", VA = "0xA23A30")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000012")]
public class RemotePlayer
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xA2C43C", Offset = "0xA2C43C", VA = "0xA2C43C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000013")]
public class RoomManager
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xA2DA7C", Offset = "0xA2DA7C", VA = "0xA2DA7C")]
	public RoomManager()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xA2DB48", Offset = "0xA2DB48", VA = "0xA2DB48")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xA2DE0C", Offset = "0xA2DE0C", VA = "0xA2DE0C")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xA2DF18", Offset = "0xA2DF18", VA = "0xA2DF18")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xA2DFCC", Offset = "0xA2DFCC", VA = "0xA2DFCC")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xA2E5D8", Offset = "0xA2E5D8", VA = "0xA2E5D8")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xA2DE3C", Offset = "0xA2DE3C", VA = "0xA2DE3C")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xA2E660", Offset = "0xA2E660", VA = "0xA2E660")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xA2ECD4", Offset = "0xA2ECD4", VA = "0xA2ECD4")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xA2EF9C", Offset = "0xA2EF9C", VA = "0xA2EF9C")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xA2E8FC", Offset = "0xA2E8FC", VA = "0xA2E8FC")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000014")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	public enum State
	{
		[Token(Token = "0x400005C")]
		INITIALIZING,
		[Token(Token = "0x400005D")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x400005E")]
		CREATING_A_ROOM,
		[Token(Token = "0x400005F")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000060")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000061")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000062")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000063")]
		SHUTDOWN
	}

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000006")]
	public static State CurrentState
	{
		[Token(Token = "0x6000071")]
		[Address(RVA = "0xA35EFC", Offset = "0xA35EFC", VA = "0xA35EFC")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000007")]
	public static ulong MyID
	{
		[Token(Token = "0x6000072")]
		[Address(RVA = "0xA2E0F0", Offset = "0xA2E0F0", VA = "0xA2E0F0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000008")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0xA35F70", Offset = "0xA35F70", VA = "0xA35F70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xA23430", Offset = "0xA23430", VA = "0xA23430", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xA230EC", Offset = "0xA230EC", VA = "0xA230EC", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xA34D6C", Offset = "0xA34D6C", VA = "0xA34D6C")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xA23408", Offset = "0xA23408", VA = "0xA23408", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xA34EC8", Offset = "0xA34EC8", VA = "0xA34EC8")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xA34FBC", Offset = "0xA34FBC", VA = "0xA34FBC")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xA356BC", Offset = "0xA356BC", VA = "0xA356BC")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xA35B74", Offset = "0xA35B74", VA = "0xA35B74")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xA35D40", Offset = "0xA35D40", VA = "0xA35D40")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xA35E8C", Offset = "0xA35E8C", VA = "0xA35E8C")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xA34CB8", Offset = "0xA34CB8", VA = "0xA34CB8")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xA2DCA0", Offset = "0xA2DCA0", VA = "0xA2DCA0")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xA2E1C8", Offset = "0xA2E1C8", VA = "0xA2E1C8")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xA36084", Offset = "0xA36084", VA = "0xA36084")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xA2E4F0", Offset = "0xA2E4F0", VA = "0xA2E4F0")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xA2F014", Offset = "0xA2F014", VA = "0xA2F014")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xA2F398", Offset = "0xA2F398", VA = "0xA2F398")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xA2F468", Offset = "0xA2F468", VA = "0xA2F468")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xA2DD50", Offset = "0xA2DD50", VA = "0xA2DD50")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xA2F138", Offset = "0xA2F138", VA = "0xA2F138")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xA2F1C4", Offset = "0xA2F1C4", VA = "0xA2F1C4")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xA36204", Offset = "0xA36204", VA = "0xA36204")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xA363E0", Offset = "0xA363E0", VA = "0xA363E0")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xA34C30", Offset = "0xA34C30", VA = "0xA34C30")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x72D500", Offset = "0x72D500")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xA3651C", Offset = "0xA3651C", VA = "0xA3651C")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xA23A9C", Offset = "0xA23A9C", VA = "0xA23A9C")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000016")]
public class VoipManager
{
	[Token(Token = "0x6000083")]
	[Address(RVA = "0xAFF8F0", Offset = "0xAFF8F0", VA = "0xAFF8F0")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xAFF9B0", Offset = "0xAFF9B0", VA = "0xAFF9B0")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xAFFA94", Offset = "0xAFFA94", VA = "0xAFFA94")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xAFFB18", Offset = "0xAFFB18", VA = "0xAFFB18")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xAFFC74", Offset = "0xAFFC74", VA = "0xAFFC74")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000017")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xAB0904", Offset = "0xAB0904", VA = "0xAB0904")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xAB0974", Offset = "0xAB0974", VA = "0xAB0974")]
	private void Start()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xAB0AF0", Offset = "0xAB0AF0", VA = "0xAB0AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xAB0B54", Offset = "0xAB0B54", VA = "0xAB0B54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xAB09B0", Offset = "0xAB09B0", VA = "0xAB09B0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xAB0C10", Offset = "0xAB0C10", VA = "0xAB0C10")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xAB0C70", Offset = "0xAB0C70", VA = "0xAB0C70")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000018")]
public class AvatarLayer
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x96B6AC", Offset = "0x96B6AC", VA = "0x96B6AC")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000019")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xACC450", Offset = "0xACC450", VA = "0xACC450")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200001A")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200001B")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xABCD10", Offset = "0xABCD10", VA = "0xABCD10")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200001C")]
	public enum HandType
	{
		[Token(Token = "0x40000C5")]
		Right,
		[Token(Token = "0x40000C6")]
		Left,
		[Token(Token = "0x40000C7")]
		Max
	}

	[Token(Token = "0x200001D")]
	public enum HandJoint
	{
		[Token(Token = "0x40000C9")]
		HandBase,
		[Token(Token = "0x40000CA")]
		IndexBase,
		[Token(Token = "0x40000CB")]
		IndexTip,
		[Token(Token = "0x40000CC")]
		ThumbBase,
		[Token(Token = "0x40000CD")]
		ThumbTip,
		[Token(Token = "0x40000CE")]
		Max
	}

	[Token(Token = "0x200001E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724CB4", Offset = "0x724CB4")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C9")]
			[Address(RVA = "0xABCCA0", Offset = "0xABCCA0", VA = "0xABCCA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CB")]
			[Address(RVA = "0xABCD08", Offset = "0xABCD08", VA = "0xABCD08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0xABCAE4", Offset = "0xABCAE4", VA = "0xABCAE4")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0xABCB10", Offset = "0xABCB10", VA = "0xABCB10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C8")]
		[Address(RVA = "0xABCB14", Offset = "0xABCB14", VA = "0xABCB14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xABCCA8", Offset = "0xABCCA8", VA = "0xABCCA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x726E9C", Offset = "0x726E9C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x726ED4", Offset = "0x726ED4")]
	public bool EnableBody;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x726F0C", Offset = "0x726F0C")]
	public bool RecordPackets;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x726F44", Offset = "0x726F44")]
	public bool StartWithControllers;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x726F7C", Offset = "0x726F7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x726F7C", Offset = "0x726F7C")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x726FEC", Offset = "0x726FEC")]
	private bool CombineMeshes;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727024", Offset = "0x727024")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x72705C", Offset = "0x72705C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x727094", Offset = "0x727094")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7270CC", Offset = "0x7270CC")]
	public bool EnableLaughter;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000A5")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000A7")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000A8")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000A9")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000AA")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000AB")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x92F61C", Offset = "0x92F61C", VA = "0x92F61C")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x92F984", Offset = "0x92F984", VA = "0x92F984")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x92FA10", Offset = "0x92FA10", VA = "0x92FA10")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x92FA7C", Offset = "0x92FA7C", VA = "0x92FA7C")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x92FBA4", Offset = "0x92FBA4", VA = "0x92FBA4")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x92FC88", Offset = "0x92FC88", VA = "0x92FC88")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x92FD68", Offset = "0x92FD68", VA = "0x92FD68")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x92FF50", Offset = "0x92FF50", VA = "0x92FF50")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x930018", Offset = "0x930018", VA = "0x930018")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x93009C", Offset = "0x93009C", VA = "0x93009C")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x930184", Offset = "0x930184", VA = "0x930184")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x930210", Offset = "0x930210", VA = "0x930210")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x93032C", Offset = "0x93032C", VA = "0x93032C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x93038C", Offset = "0x93038C", VA = "0x93038C")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x600009F")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x930810", Offset = "0x930810", VA = "0x930810")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x930B70", Offset = "0x930B70", VA = "0x930B70")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x930CD4", Offset = "0x930CD4", VA = "0x930CD4")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x930F9C", Offset = "0x930F9C", VA = "0x930F9C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x931088", Offset = "0x931088", VA = "0x931088")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x93143C", Offset = "0x93143C", VA = "0x93143C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x93173C", Offset = "0x93173C", VA = "0x93173C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x932154", Offset = "0x932154", VA = "0x932154")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x9321A8", Offset = "0x9321A8", VA = "0x9321A8")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x931304", Offset = "0x931304", VA = "0x931304")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x9313A0", Offset = "0x9313A0", VA = "0x9313A0")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x9321D8", Offset = "0x9321D8", VA = "0x9321D8")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x931AB0", Offset = "0x931AB0", VA = "0x931AB0")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x932424", Offset = "0x932424", VA = "0x932424")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x932240", Offset = "0x932240", VA = "0x932240")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x9326C0", Offset = "0x9326C0", VA = "0x9326C0")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x932AC4", Offset = "0x932AC4", VA = "0x932AC4")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x932CF4", Offset = "0x932CF4", VA = "0x932CF4")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x932E34", Offset = "0x932E34", VA = "0x932E34")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x932FEC", Offset = "0x932FEC", VA = "0x932FEC")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x931C50", Offset = "0x931C50", VA = "0x931C50")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x9330C4", Offset = "0x9330C4", VA = "0x9330C4")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x931AC0", Offset = "0x931AC0", VA = "0x931AC0")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x9331B8", Offset = "0x9331B8", VA = "0x9331B8")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x933764", Offset = "0x933764", VA = "0x933764")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x933C24", Offset = "0x933C24", VA = "0x933C24")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x933C9C", Offset = "0x933C9C", VA = "0x933C9C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x933D18", Offset = "0x933D18", VA = "0x933D18")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x931FE8", Offset = "0x931FE8", VA = "0x931FE8")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x933274", Offset = "0x933274", VA = "0x933274")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x9341B0", Offset = "0x9341B0", VA = "0x9341B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72D564", Offset = "0x72D564")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x934220", Offset = "0x934220", VA = "0x934220")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x934054", Offset = "0x934054", VA = "0x934054")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x9342E8", Offset = "0x9342E8", VA = "0x9342E8")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x9343D4", Offset = "0x9343D4", VA = "0x9343D4")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x933DE8", Offset = "0x933DE8", VA = "0x933DE8")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x9344C0", Offset = "0x9344C0", VA = "0x9344C0")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200001F")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xABCD8C", Offset = "0xABCD8C", VA = "0xABCD8C")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000020")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xABCE3C", Offset = "0xABCE3C", VA = "0xABCE3C")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xABE11C", Offset = "0xABE11C", VA = "0xABE11C")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xABDCC0", Offset = "0xABDCC0", VA = "0xABDCC0")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xABDA64", Offset = "0xABDA64", VA = "0xABDA64")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xABDB34", Offset = "0xABDB34", VA = "0xABDB34")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xABE380", Offset = "0xABE380", VA = "0xABE380")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000021")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000D7")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xABE900", Offset = "0xABE900", VA = "0xABE900")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000022")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xABEB68", Offset = "0xABEB68", VA = "0xABEB68")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xABEF68", Offset = "0xABEF68", VA = "0xABEF68")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000023")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xABF064", Offset = "0xABF064", VA = "0xABF064")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xABF1C0", Offset = "0xABF1C0", VA = "0xABF1C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xABF2DC", Offset = "0xABF2DC", VA = "0xABF2DC")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000024")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xABF340", Offset = "0xABF340", VA = "0xABF340")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xABEC84", Offset = "0xABEC84", VA = "0xABEC84")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xABF924", Offset = "0xABF924", VA = "0xABF924")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xABF984", Offset = "0xABF984", VA = "0xABF984")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xAC0168", Offset = "0xAC0168", VA = "0xAC0168")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xABEFCC", Offset = "0xABEFCC", VA = "0xABEFCC")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000025")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000026")]
	public enum PacketMode
	{
		[Token(Token = "0x40000EB")]
		SDK,
		[Token(Token = "0x40000EC")]
		Unity
	}

	[Token(Token = "0x2000027")]
	public struct ControllerPose
	{
		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xAC1790", Offset = "0xAC1790", VA = "0xAC1790")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000028")]
	public struct PoseFrame
	{
		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xAC18EC", Offset = "0xAC18EC", VA = "0xAC18EC")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xAC1464", Offset = "0xAC1464", VA = "0xAC1464")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000E1")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xAC1474", Offset = "0xAC1474", VA = "0xAC1474")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xAC1500", Offset = "0xAC1500", VA = "0xAC1500")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xAC1778", Offset = "0xAC1778", VA = "0xAC1778")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xAC1780", Offset = "0xAC1780", VA = "0xAC1780")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000029")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xAC1CA4", Offset = "0xAC1CA4", VA = "0xAC1CA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xAC1E00", Offset = "0xAC1E00", VA = "0xAC1E00")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200002A")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xAC1E6C", Offset = "0xAC1E6C", VA = "0xAC1E6C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xAC1FD8", Offset = "0xAC1FD8", VA = "0xAC1FD8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xAC237C", Offset = "0xAC237C", VA = "0xAC237C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xAC2598", Offset = "0xAC2598", VA = "0xAC2598", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xAC25C4", Offset = "0xAC25C4", VA = "0xAC25C4")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200002B")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200002C")]
	public enum TextureType
	{
		[Token(Token = "0x4000122")]
		DiffuseTextures,
		[Token(Token = "0x4000123")]
		NormalMaps,
		[Token(Token = "0x4000124")]
		RoughnessMaps,
		[Token(Token = "0x4000125")]
		Count
	}

	[Token(Token = "0x200002D")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200002E")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200002F")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000030")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xAC47E4", Offset = "0xAC47E4", VA = "0xAC47E4")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000031")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724CC4", Offset = "0x724CC4")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000102")]
			[Address(RVA = "0xAC50F4", Offset = "0xAC50F4", VA = "0xAC50F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000104")]
			[Address(RVA = "0xAC515C", Offset = "0xAC515C", VA = "0xAC515C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xAC464C", Offset = "0xAC464C", VA = "0xAC464C")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0xAC4A7C", Offset = "0xAC4A7C", VA = "0xAC4A7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000101")]
		[Address(RVA = "0xAC4A80", Offset = "0xAC4A80", VA = "0xAC4A80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0xAC50FC", Offset = "0xAC50FC", VA = "0xAC50FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400011D")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x400011E")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x400011F")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000120")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xAC2674", Offset = "0xAC2674", VA = "0xAC2674")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xAC27D4", Offset = "0xAC27D4", VA = "0xAC27D4")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xAC27FC", Offset = "0xAC27FC", VA = "0xAC27FC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xAC2F14", Offset = "0xAC2F14", VA = "0xAC2F14")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xAC3194", Offset = "0xAC3194", VA = "0xAC3194")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xAC2890", Offset = "0xAC2890", VA = "0xAC2890")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xAC3284", Offset = "0xAC3284", VA = "0xAC3284")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xAC2C90", Offset = "0xAC2C90", VA = "0xAC2C90")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xAC34EC", Offset = "0xAC34EC", VA = "0xAC34EC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xAC3764", Offset = "0xAC3764", VA = "0xAC3764")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xAC3860", Offset = "0xAC3860", VA = "0xAC3860")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xAC3898", Offset = "0xAC3898", VA = "0xAC3898")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xAC2E98", Offset = "0xAC2E98", VA = "0xAC2E98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72D618", Offset = "0x72D618")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xAC4678", Offset = "0xAC4678", VA = "0xAC4678")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000032")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700000D")]
	public float Duration
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0xAC5164", Offset = "0xAC5164", VA = "0xAC5164")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000E")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0xAC51D0", Offset = "0xAC51D0", VA = "0xAC51D0")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xAC5254", Offset = "0xAC5254", VA = "0xAC5254")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xAC5318", Offset = "0xAC5318", VA = "0xAC5318")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xAC5458", Offset = "0xAC5458", VA = "0xAC5458")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xAC5534", Offset = "0xAC5534", VA = "0xAC5534")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xAC5604", Offset = "0xAC5604", VA = "0xAC5604")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xAC580C", Offset = "0xAC580C", VA = "0xAC580C")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xAC5A64", Offset = "0xAC5A64", VA = "0xAC5A64")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000033")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600010E")]
	[Address(RVA = "0x96E688", Offset = "0x96E688", VA = "0x96E688")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x96E79C", Offset = "0x96E79C", VA = "0x96E79C")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x96E948", Offset = "0x96E948", VA = "0x96E948")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x96E80C", Offset = "0x96E80C", VA = "0x96E80C")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x96E8A0", Offset = "0x96E8A0", VA = "0x96E8A0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000034")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000113")]
	[Address(RVA = "0x96E288", Offset = "0x96E288", VA = "0x96E288")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x96E62C", Offset = "0x96E62C", VA = "0x96E62C")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x96E428", Offset = "0x96E428", VA = "0x96E428")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x96E4A0", Offset = "0x96E4A0", VA = "0x96E4A0")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x96E53C", Offset = "0x96E53C", VA = "0x96E53C")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000035")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000147")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000148")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xAC5C54", Offset = "0xAC5C54", VA = "0xAC5C54")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xAC5CE0", Offset = "0xAC5CE0", VA = "0xAC5CE0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xAC5CFC", Offset = "0xAC5CFC", VA = "0xAC5CFC")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xAC5EA8", Offset = "0xAC5EA8", VA = "0xAC5EA8")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xAC6050", Offset = "0xAC6050", VA = "0xAC6050")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000036")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xAC60D0", Offset = "0xAC60D0", VA = "0xAC60D0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xAC61B4", Offset = "0xAC61B4", VA = "0xAC61B4")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xAC63A8", Offset = "0xAC63A8", VA = "0xAC63A8")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xAC673C", Offset = "0xAC673C", VA = "0xAC673C")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xAC6834", Offset = "0xAC6834", VA = "0xAC6834")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000037")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000151")]
	Body = 1,
	[Token(Token = "0x4000152")]
	Hands = 2,
	[Token(Token = "0x4000153")]
	Base = 4,
	[Token(Token = "0x4000154")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000155")]
	Expressive = 0x20,
	[Token(Token = "0x4000156")]
	All = -1
}
[Token(Token = "0x2000038")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000158")]
	AvatarSpecification,
	[Token(Token = "0x4000159")]
	AssetLoaded,
	[Token(Token = "0x400015A")]
	Count
}
[Token(Token = "0x2000039")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200003A")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200003B")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000160")]
	Mesh,
	[Token(Token = "0x4000161")]
	Texture,
	[Token(Token = "0x4000162")]
	Pose,
	[Token(Token = "0x4000163")]
	Material,
	[Token(Token = "0x4000164")]
	CombinedMesh,
	[Token(Token = "0x4000165")]
	PBSMaterial,
	[Token(Token = "0x4000166")]
	FailedLoad,
	[Token(Token = "0x4000167")]
	Count
}
[Token(Token = "0x200003C")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200003D")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200003E")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200003F")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000040")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000041")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400019C")]
	RGB24,
	[Token(Token = "0x400019D")]
	DXT1,
	[Token(Token = "0x400019E")]
	DXT5,
	[Token(Token = "0x400019F")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40001A0")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40001A1")]
	Count
}
[Token(Token = "0x2000042")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000043")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001A9")]
	SkinnedMeshRender,
	[Token(Token = "0x40001AA")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001AB")]
	ProjectorRender,
	[Token(Token = "0x40001AC")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001AD")]
	Count
}
[Token(Token = "0x2000044")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001AF")]
	Unknown,
	[Token(Token = "0x40001B0")]
	Default,
	[Token(Token = "0x40001B1")]
	Verbose,
	[Token(Token = "0x40001B2")]
	Debug,
	[Token(Token = "0x40001B3")]
	Info,
	[Token(Token = "0x40001B4")]
	Warn,
	[Token(Token = "0x40001B5")]
	Error,
	[Token(Token = "0x40001B6")]
	Fatal,
	[Token(Token = "0x40001B7")]
	Silent
}
[Token(Token = "0x2000045")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000046")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001BC")]
	One = 1,
	[Token(Token = "0x40001BD")]
	Two = 2,
	[Token(Token = "0x40001BE")]
	Three = 4,
	[Token(Token = "0x40001BF")]
	Joystick = 8
}
[Token(Token = "0x2000047")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001C1")]
	One = 1,
	[Token(Token = "0x40001C2")]
	Two = 2,
	[Token(Token = "0x40001C3")]
	Joystick = 4,
	[Token(Token = "0x40001C4")]
	ThumbRest = 8,
	[Token(Token = "0x40001C5")]
	Index = 0x10,
	[Token(Token = "0x40001C6")]
	Pointing = 0x40,
	[Token(Token = "0x40001C7")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000048")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200004A")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200004B")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004C")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004D")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200004E")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004F")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000050")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001E7")]
	Add,
	[Token(Token = "0x40001E8")]
	Multiply,
	[Token(Token = "0x40001E9")]
	Count
}
[Token(Token = "0x2000051")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001EB")]
	Color,
	[Token(Token = "0x40001EC")]
	Texture,
	[Token(Token = "0x40001ED")]
	TextureSingleChannel,
	[Token(Token = "0x40001EE")]
	Parallax,
	[Token(Token = "0x40001EF")]
	Count
}
[Token(Token = "0x2000052")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001F1")]
	None,
	[Token(Token = "0x40001F2")]
	Positional,
	[Token(Token = "0x40001F3")]
	ViewReflection,
	[Token(Token = "0x40001F4")]
	Fresnel,
	[Token(Token = "0x40001F5")]
	Pulse,
	[Token(Token = "0x40001F6")]
	Count
}
[Token(Token = "0x2000053")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001F8")]
	Touch,
	[Token(Token = "0x40001F9")]
	Malibu,
	[Token(Token = "0x40001FA")]
	Go,
	[Token(Token = "0x40001FB")]
	Quest,
	[Token(Token = "0x40001FC")]
	Count
}
[Token(Token = "0x2000054")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001FE")]
	Lowest = 1,
	[Token(Token = "0x40001FF")]
	Medium = 3,
	[Token(Token = "0x4000200")]
	Highest = 5
}
[Token(Token = "0x2000055")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000202")]
	Unknown = -1,
	[Token(Token = "0x4000203")]
	One,
	[Token(Token = "0x4000204")]
	Two
}
[Token(Token = "0x2000056")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xB0213C", Offset = "0xB0213C", VA = "0xB0213C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB0216C", Offset = "0xB0216C", VA = "0xB0216C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xB0238C", Offset = "0xB0238C", VA = "0xB0238C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000057")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xB02470", Offset = "0xB02470", VA = "0xB02470")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xB024A0", Offset = "0xB024A0", VA = "0xB024A0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xB02834", Offset = "0xB02834", VA = "0xB02834", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000058")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xB017E4", Offset = "0xB017E4", VA = "0xB017E4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xB01814", Offset = "0xB01814", VA = "0xB01814", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xB01AA8", Offset = "0xB01AA8", VA = "0xB01AA8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000059")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xB0299C", Offset = "0xB0299C", VA = "0xB0299C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xB029CC", Offset = "0xB029CC", VA = "0xB029CC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xB02BC0", Offset = "0xB02BC0", VA = "0xB02BC0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200005A")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xABCD94", Offset = "0xABCD94", VA = "0xABCD94")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200005B")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200005C")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000239")]
	FirstPerson = 1,
	[Token(Token = "0x400023A")]
	ThirdPerson = 2,
	[Token(Token = "0x400023B")]
	SelfOccluding = 4
}
[Token(Token = "0x200005D")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005F")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000060")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000061")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000251")]
	Default,
	[Token(Token = "0x4000252")]
	GripSphere,
	[Token(Token = "0x4000253")]
	GripCube,
	[Token(Token = "0x4000254")]
	Count
}
[Token(Token = "0x2000062")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000256")]
	Body,
	[Token(Token = "0x4000257")]
	Clothing,
	[Token(Token = "0x4000258")]
	Eyewear,
	[Token(Token = "0x4000259")]
	Hair,
	[Token(Token = "0x400025A")]
	Beard,
	[Token(Token = "0x400025B")]
	Count
}
[Token(Token = "0x2000063")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000064")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000065")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000066")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000067")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000265")]
	AvatarHead,
	[Token(Token = "0x4000266")]
	AvatarHand,
	[Token(Token = "0x4000267")]
	Object,
	[Token(Token = "0x4000268")]
	ObjectStatic,
	[Token(Token = "0x4000269")]
	Count
}
[Token(Token = "0x2000068")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000069")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200006A")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x200006B")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200006C")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000275")]
	Point,
	[Token(Token = "0x4000276")]
	Direction,
	[Token(Token = "0x4000277")]
	Spot,
	[Token(Token = "0x4000278")]
	Count
}
[Token(Token = "0x200006D")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200006E")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200006F")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000070")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000071")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x400028E")]
	None = 0u,
	[Token(Token = "0x400028F")]
	GazeTarget = 1u,
	[Token(Token = "0x4000290")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000072")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000073")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000074")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000075")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000076")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000077")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000078")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000154")]
		[Address(RVA = "0xAC7894", Offset = "0xAC7894", VA = "0xAC7894")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002A5")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000F")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000143")]
		[Address(RVA = "0xAC01FC", Offset = "0xAC01FC", VA = "0xAC01FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xAC6844", Offset = "0xAC6844", VA = "0xAC6844")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xAC6A90", Offset = "0xAC6A90", VA = "0xAC6A90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xAC6B04", Offset = "0xAC6B04", VA = "0xAC6B04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xAC7348", Offset = "0xAC7348", VA = "0xAC7348")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xAC73A0", Offset = "0xAC73A0", VA = "0xAC73A0")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xAC73F8", Offset = "0xAC73F8", VA = "0xAC73F8")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xAC7460", Offset = "0xAC7460", VA = "0xAC7460")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xAC74C8", Offset = "0xAC74C8", VA = "0xAC74C8")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xAC7180", Offset = "0xAC7180", VA = "0xAC7180")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xAC75A8", Offset = "0xAC75A8", VA = "0xAC75A8")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xAC76C4", Offset = "0xAC76C4", VA = "0xAC76C4")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xAC038C", Offset = "0xAC038C", VA = "0xAC038C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xAC77A4", Offset = "0xAC77A4", VA = "0xAC77A4")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xAC6A44", Offset = "0xAC6A44", VA = "0xAC6A44")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xAC2F74", Offset = "0xAC2F74", VA = "0xAC2F74")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xAC787C", Offset = "0xAC787C", VA = "0xAC787C")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000079")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000010")]
	public static string AppID
	{
		[Token(Token = "0x6000155")]
		[Address(RVA = "0xAC783C", Offset = "0xAC783C", VA = "0xAC783C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000156")]
		[Address(RVA = "0xAC79D4", Offset = "0xAC79D4", VA = "0xAC79D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000157")]
		[Address(RVA = "0xAC785C", Offset = "0xAC785C", VA = "0xAC785C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000158")]
		[Address(RVA = "0xAC7A00", Offset = "0xAC7A00", VA = "0xAC7A00")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000159")]
		[Address(RVA = "0xAC78C0", Offset = "0xAC78C0", VA = "0xAC78C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600015A")]
		[Address(RVA = "0xAC7A2C", Offset = "0xAC7A2C", VA = "0xAC7A2C")]
		set
		{
		}
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xAC7A80", Offset = "0xAC7A80", VA = "0xAC7A80")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200007A")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xAC915C", Offset = "0xAC915C", VA = "0xAC915C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xABF348", Offset = "0xABF348", VA = "0xABF348")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xAC92A0", Offset = "0xAC92A0", VA = "0xAC92A0")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xAC9400", Offset = "0xAC9400", VA = "0xAC9400")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200007B")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xAC9410", Offset = "0xAC9410", VA = "0xAC9410")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xABF570", Offset = "0xABF570", VA = "0xABF570")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xAC9540", Offset = "0xAC9540", VA = "0xAC9540")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200007C")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002BC")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002BD")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002BE")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xAC7AD8", Offset = "0xAC7AD8", VA = "0xAC7AD8")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xABF708", Offset = "0xABF708", VA = "0xABF708")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xAC8918", Offset = "0xAC8918", VA = "0xAC8918")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xAC80AC", Offset = "0xAC80AC", VA = "0xAC80AC")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xAC7E7C", Offset = "0xAC7E7C", VA = "0xAC7E7C")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xAC7F90", Offset = "0xAC7F90", VA = "0xAC7F90")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xAC914C", Offset = "0xAC914C", VA = "0xAC914C")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200007D")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200007E")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200007F")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000174")]
		[Address(RVA = "0xACA248", Offset = "0xACA248", VA = "0xACA248")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000080")]
	public struct TextureSet
	{
		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000175")]
		[Address(RVA = "0xACA258", Offset = "0xACA258", VA = "0xACA258")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000081")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724D44", Offset = "0x724D44")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000179")]
			[Address(RVA = "0xACA938", Offset = "0xACA938", VA = "0xACA938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600017B")]
			[Address(RVA = "0xACA9A0", Offset = "0xACA9A0", VA = "0xACA9A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0xACA2FC", Offset = "0xACA2FC", VA = "0xACA2FC")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0xACA464", Offset = "0xACA464", VA = "0xACA464", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0xACA468", Offset = "0xACA468", VA = "0xACA468", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0xACA940", Offset = "0xACA940", VA = "0xACA940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002C2")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002C3")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002C6")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002C7")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002C8")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002C9")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002CA")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002CB")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002CC")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xAC9CF4", Offset = "0xAC9CF4", VA = "0xAC9CF4")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xACA050", Offset = "0xACA050", VA = "0xACA050")]
	public void Update()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xAC50A4", Offset = "0xAC50A4", VA = "0xAC50A4")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xAC3368", Offset = "0xAC3368", VA = "0xAC3368")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xACA1B8", Offset = "0xACA1B8", VA = "0xACA1B8")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xAC2FF8", Offset = "0xAC2FF8", VA = "0xAC2FF8")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xAC31DC", Offset = "0xAC31DC", VA = "0xAC31DC")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xACA268", Offset = "0xACA268", VA = "0xACA268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72D76C", Offset = "0x72D76C")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xAC755C", Offset = "0xAC755C", VA = "0xAC755C")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xACA328", Offset = "0xACA328", VA = "0xACA328")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000082")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xACA9A8", Offset = "0xACA9A8", VA = "0xACA9A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xACAB04", Offset = "0xACAB04", VA = "0xACAB04")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000083")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x600017E")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xAAC00C", Offset = "0xAAC00C", VA = "0xAAC00C")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000084")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727124", Offset = "0x727124")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72715C", Offset = "0x72715C")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727194", Offset = "0x727194")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x942FCC", Offset = "0x942FCC", VA = "0x942FCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x942FD0", Offset = "0x942FD0", VA = "0x942FD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x943050", Offset = "0x943050", VA = "0x943050")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x94323C", Offset = "0x94323C", VA = "0x94323C")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000085")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x94326C", Offset = "0x94326C", VA = "0x94326C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x943370", Offset = "0x943370", VA = "0x943370")]
	private void Update()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x943684", Offset = "0x943684", VA = "0x943684")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x943910", Offset = "0x943910", VA = "0x943910")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x943960", Offset = "0x943960", VA = "0x943960")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x2000086")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000015")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0xD829C4", Offset = "0xD829C4", VA = "0xD829C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xD82C7C", Offset = "0xD82C7C", VA = "0xD82C7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xD82DB8", Offset = "0xD82DB8", VA = "0xD82DB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xD82CEC", Offset = "0xD82CEC", VA = "0xD82CEC")]
	public void Init()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xD80C6C", Offset = "0xD80C6C", VA = "0xD80C6C")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xD82F40", Offset = "0xD82F40", VA = "0xD82F40")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xD80C04", Offset = "0xD80C04", VA = "0xD80C04")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xD80CEC", Offset = "0xD80CEC", VA = "0xD80CEC")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xD82E50", Offset = "0xD82E50", VA = "0xD82E50")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xD82FE0", Offset = "0xD82FE0", VA = "0xD82FE0")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xD8301C", Offset = "0xD8301C", VA = "0xD8301C")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xD83210", Offset = "0xD83210", VA = "0xD83210")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xD8302C", Offset = "0xD8302C", VA = "0xD8302C")]
	private void Display()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xD832C0", Offset = "0xD832C0", VA = "0xD832C0")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000087")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xD83D84", Offset = "0xD83D84", VA = "0xD83D84")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000088")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000089")]
	public enum TouchEvent
	{
		[Token(Token = "0x40002F5")]
		SingleTap,
		[Token(Token = "0x40002F6")]
		DoubleTap,
		[Token(Token = "0x40002F7")]
		Left,
		[Token(Token = "0x40002F8")]
		Right,
		[Token(Token = "0x40002F9")]
		Up,
		[Token(Token = "0x40002FA")]
		Down
	}

	[Token(Token = "0x200008A")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xD7F880", Offset = "0xD7F880", VA = "0xD7F880")]
	public static void Create()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xD86768", Offset = "0xD86768", VA = "0xD86768")]
	public static void Update()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xD86A88", Offset = "0xD86A88", VA = "0xD86A88")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xD868D8", Offset = "0xD868D8", VA = "0xD868D8")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xD80760", Offset = "0xD80760", VA = "0xD80760")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200008B")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xD86B38", Offset = "0xD86B38", VA = "0xD86B38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xD86BB4", Offset = "0xD86BB4", VA = "0xD86BB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xD86C4C", Offset = "0xD86C4C", VA = "0xD86C4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xD86CA8", Offset = "0xD86CA8", VA = "0xD86CA8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xD86D0C", Offset = "0xD86D0C", VA = "0xD86D0C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xD86D10", Offset = "0xD86D10", VA = "0xD86D10")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200008C")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x200008D")]
	public enum Result
	{
		[Token(Token = "0x4000301")]
		Success = 0,
		[Token(Token = "0x4000302")]
		Unknown = -2200,
		[Token(Token = "0x4000303")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4000304")]
		InvalidParam = -2202,
		[Token(Token = "0x4000305")]
		BadSampleRate = -2203,
		[Token(Token = "0x4000306")]
		MissingDLL = -2204,
		[Token(Token = "0x4000307")]
		BadVersion = -2205,
		[Token(Token = "0x4000308")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x200008E")]
	public enum AudioDataType
	{
		[Token(Token = "0x400030A")]
		S16_Mono,
		[Token(Token = "0x400030B")]
		S16_Stereo,
		[Token(Token = "0x400030C")]
		F32_Mono,
		[Token(Token = "0x400030D")]
		F32_Stereo
	}

	[Token(Token = "0x200008F")]
	public enum Viseme
	{
		[Token(Token = "0x400030F")]
		sil,
		[Token(Token = "0x4000310")]
		PP,
		[Token(Token = "0x4000311")]
		FF,
		[Token(Token = "0x4000312")]
		TH,
		[Token(Token = "0x4000313")]
		DD,
		[Token(Token = "0x4000314")]
		kk,
		[Token(Token = "0x4000315")]
		CH,
		[Token(Token = "0x4000316")]
		SS,
		[Token(Token = "0x4000317")]
		nn,
		[Token(Token = "0x4000318")]
		RR,
		[Token(Token = "0x4000319")]
		aa,
		[Token(Token = "0x400031A")]
		E,
		[Token(Token = "0x400031B")]
		ih,
		[Token(Token = "0x400031C")]
		oh,
		[Token(Token = "0x400031D")]
		ou
	}

	[Token(Token = "0x2000090")]
	public enum Signals
	{
		[Token(Token = "0x400031F")]
		VisemeOn,
		[Token(Token = "0x4000320")]
		VisemeOff,
		[Token(Token = "0x4000321")]
		VisemeAmount,
		[Token(Token = "0x4000322")]
		VisemeSmoothing,
		[Token(Token = "0x4000323")]
		LaughterAmount
	}

	[Token(Token = "0x2000091")]
	public enum ContextProviders
	{
		[Token(Token = "0x4000325")]
		Original,
		[Token(Token = "0x4000326")]
		Enhanced,
		[Token(Token = "0x4000327")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000092")]
	public class Frame
	{
		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xD804C8", Offset = "0xD804C8", VA = "0xD804C8")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xD80520", Offset = "0xD80520", VA = "0xD80520")]
		public void Reset()
		{
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xD805B0", Offset = "0xD805B0", VA = "0xD805B0")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40002FD")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xD7EE50", Offset = "0xD7EE50", VA = "0xD7EE50")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xD7EEE0", Offset = "0xD7EEE0", VA = "0xD7EEE0")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xD7EF50", Offset = "0xD7EF50", VA = "0xD7EF50")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xD7EFE4", Offset = "0xD7EFE4", VA = "0xD7EFE4")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xD7F08C", Offset = "0xD7F08C", VA = "0xD7F08C")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xD7F158", Offset = "0xD7F158", VA = "0xD7F158")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xD7F1D8", Offset = "0xD7F1D8", VA = "0xD7F1D8")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xD7F258", Offset = "0xD7F258", VA = "0xD7F258")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xD7F300", Offset = "0xD7F300", VA = "0xD7F300")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xD7F408", Offset = "0xD7F408", VA = "0xD7F408")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xD7F884", Offset = "0xD7F884", VA = "0xD7F884")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xD7F748", Offset = "0xD7F748", VA = "0xD7F748")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xD7F964", Offset = "0xD7F964", VA = "0xD7F964")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xD7FA78", Offset = "0xD7FA78", VA = "0xD7FA78")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xD7FAE8", Offset = "0xD7FAE8", VA = "0xD7FAE8")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xD7FB50", Offset = "0xD7FB50", VA = "0xD7FB50")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xD7FC74", Offset = "0xD7FC74", VA = "0xD7FC74")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xD7FDAC", Offset = "0xD7FDAC", VA = "0xD7FDAC")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xD7FE8C", Offset = "0xD7FE8C", VA = "0xD7FE8C")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xD7FF6C", Offset = "0xD7FF6C", VA = "0xD7FF6C")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xD80070", Offset = "0xD80070", VA = "0xD80070")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xD80214", Offset = "0xD80214", VA = "0xD80214")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xD803B0", Offset = "0xD803B0", VA = "0xD803B0")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x724D54", Offset = "0x724D54")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7271CC", Offset = "0x7271CC")]
	public bool enableKeyboardInput;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727204", Offset = "0x727204")]
	public bool enableTouchInput;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72723C", Offset = "0x72723C")]
	public bool audioLoopback;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727274", Offset = "0x727274")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7272AC", Offset = "0x7272AC")]
	public bool showVisemes;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7272E4", Offset = "0x7272E4")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72731C", Offset = "0x72731C")]
	public bool skipAudioSource;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727354", Offset = "0x727354")]
	public float gain;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xD80638", Offset = "0xD80638", VA = "0xD80638")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xD80820", Offset = "0xD80820", VA = "0xD80820")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xD80D6C", Offset = "0xD80D6C", VA = "0xD80D6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xD81018", Offset = "0xD81018", VA = "0xD81018")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xD8107C", Offset = "0xD8107C", VA = "0xD8107C")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xD810E8", Offset = "0xD810E8", VA = "0xD810E8")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xD8124C", Offset = "0xD8124C", VA = "0xD8124C")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xD813B0", Offset = "0xD813B0", VA = "0xD813B0")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xD814E4", Offset = "0xD814E4", VA = "0xD814E4")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xD80DB0", Offset = "0xD80DB0", VA = "0xD80DB0")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xD80B30", Offset = "0xD80B30", VA = "0xD80B30")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xD814F4", Offset = "0xD814F4", VA = "0xD814F4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xD81620", Offset = "0xD81620", VA = "0xD81620")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x724DB8", Offset = "0x724DB8")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72738C", Offset = "0x72738C")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7273C4", Offset = "0x7273C4")]
	public bool enableAcceleration;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000016")]
	public int Smoothing
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xD817A0", Offset = "0xD817A0", VA = "0xD817A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xD816B4", Offset = "0xD816B4", VA = "0xD816B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public uint Context
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xD817A8", Offset = "0xD817A8", VA = "0xD817A8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000018")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xD817B0", Offset = "0xD817B0", VA = "0xD817B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xD817B8", Offset = "0xD817B8", VA = "0xD817B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xD81948", Offset = "0xD81948", VA = "0xD81948")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xD81A64", Offset = "0xD81A64", VA = "0xD81A64")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xD81A6C", Offset = "0xD81A6C", VA = "0xD81A6C")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xD81B60", Offset = "0xD81B60", VA = "0xD81B60")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xD81C28", Offset = "0xD81C28", VA = "0xD81C28")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xD81644", Offset = "0xD81644", VA = "0xD81644")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x724E1C", Offset = "0x724E1C")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7273FC", Offset = "0x7273FC")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xD81CA0", Offset = "0xD81CA0", VA = "0xD81CA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xD81E10", Offset = "0xD81E10", VA = "0xD81E10")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000096")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727434", Offset = "0x727434")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72746C", Offset = "0x72746C")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7274A4", Offset = "0x7274A4")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7274DC", Offset = "0x7274DC")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727514", Offset = "0x727514")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72754C", Offset = "0x72754C")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x727584", Offset = "0x727584")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727584", Offset = "0x727584")]
	public float laughterThreshold;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7275D8", Offset = "0x7275D8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7275D8", Offset = "0x7275D8")]
	public float laughterMultiplier;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72762C", Offset = "0x72762C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72762C", Offset = "0x72762C")]
	public int smoothAmount;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xD81E14", Offset = "0xD81E14", VA = "0xD81E14")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xD81F58", Offset = "0xD81F58", VA = "0xD81F58")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xD82208", Offset = "0xD82208", VA = "0xD82208")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xD82064", Offset = "0xD82064", VA = "0xD82064")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xD82118", Offset = "0xD82118", VA = "0xD82118")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xD822D8", Offset = "0xD822D8", VA = "0xD822D8")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xD8239C", Offset = "0xD8239C", VA = "0xD8239C")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xD82404", Offset = "0xD82404", VA = "0xD82404")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000097")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727684", Offset = "0x727684")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x727684", Offset = "0x727684")]
	public Texture[] Textures;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x727800", Offset = "0x727800")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727800", Offset = "0x727800")]
	public int smoothAmount;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xD824FC", Offset = "0xD824FC", VA = "0xD824FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xD82650", Offset = "0xD82650", VA = "0xD82650")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xD827F4", Offset = "0xD827F4", VA = "0xD827F4")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xD82918", Offset = "0xD82918", VA = "0xD82918")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000098")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x724E80", Offset = "0x724E80")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x2000099")]
	public enum micActivation
	{
		[Token(Token = "0x400035C")]
		HoldToSpeak,
		[Token(Token = "0x400035D")]
		PushToSpeak,
		[Token(Token = "0x400035E")]
		ConstantSpeak
	}

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727858", Offset = "0x727858")]
	public AudioSource audioSource;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727890", Offset = "0x727890")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7278C8", Offset = "0x7278C8")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x727900", Offset = "0x727900")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727900", Offset = "0x727900")]
	private float micInputVolume;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727968", Offset = "0x727968")]
	private int micFrequency;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7279B4", Offset = "0x7279B4")]
	public micActivation micControl;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7279EC", Offset = "0x7279EC")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727A24", Offset = "0x727A24")]
	public string selectedDevice;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000019")]
	public float MicFrequency
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xD83334", Offset = "0xD83334", VA = "0xD83334")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xD83340", Offset = "0xD83340", VA = "0xD83340")]
		set
		{
		}
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xD833CC", Offset = "0xD833CC", VA = "0xD833CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xD8348C", Offset = "0xD8348C", VA = "0xD8348C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xD834D8", Offset = "0xD834D8", VA = "0xD834D8")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xD8361C", Offset = "0xD8361C", VA = "0xD8361C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xD83A54", Offset = "0xD83A54", VA = "0xD83A54")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xD83A68", Offset = "0xD83A68", VA = "0xD83A68")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xD83A80", Offset = "0xD83A80", VA = "0xD83A80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xD83A84", Offset = "0xD83A84", VA = "0xD83A84")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xD83AFC", Offset = "0xD83AFC", VA = "0xD83AFC")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xD83560", Offset = "0xD83560", VA = "0xD83560")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xD838C0", Offset = "0xD838C0", VA = "0xD838C0")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xD83778", Offset = "0xD83778", VA = "0xD83778")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xD83CDC", Offset = "0xD83CDC", VA = "0xD83CDC")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xD83CE4", Offset = "0xD83CE4", VA = "0xD83CE4")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x200009A")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xD81D6C", Offset = "0xD81D6C", VA = "0xD81D6C")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xD83D14", Offset = "0xD83D14", VA = "0xD83D14")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x200009B")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200009C")]
	public delegate void OnClick();

	[Token(Token = "0x200009D")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200009E")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200009F")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724EE4", Offset = "0x724EE4")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x97883C", Offset = "0x97883C", VA = "0x97883C")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x9791DC", Offset = "0x9791DC", VA = "0x9791DC")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20000A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724EF4", Offset = "0x724EF4")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x978AB0", Offset = "0x978AB0", VA = "0x978AB0")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x979400", Offset = "0x979400", VA = "0x979400")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20000A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724F04", Offset = "0x724F04")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600021E")]
		[Address(RVA = "0x978CC8", Offset = "0x978CC8", VA = "0x978CC8")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x979678", Offset = "0x979678", VA = "0x979678")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724F14", Offset = "0x724F14")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000220")]
		[Address(RVA = "0x978E5C", Offset = "0x978E5C", VA = "0x978E5C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x979A2C", Offset = "0x979A2C", VA = "0x979A2C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724F24", Offset = "0x724F24")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000222")]
		[Address(RVA = "0x9790B4", Offset = "0x9790B4", VA = "0x9790B4")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0x979A4C", Offset = "0x979A4C", VA = "0x979A4C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000361")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000362")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000363")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000370")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000371")]
	private const float marginH = 16f;

	[Token(Token = "0x4000372")]
	private const float marginV = 16f;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x9777E8", Offset = "0x9777E8", VA = "0x9777E8")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x977BEC", Offset = "0x977BEC", VA = "0x977BEC")]
	public void Show()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x9781B8", Offset = "0x9781B8", VA = "0x9781B8")]
	public void Hide()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x977F64", Offset = "0x977F64", VA = "0x977F64")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x978360", Offset = "0x978360", VA = "0x978360")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x978614", Offset = "0x978614", VA = "0x978614")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x978844", Offset = "0x978844", VA = "0x978844")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x978928", Offset = "0x978928", VA = "0x978928")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x978AB8", Offset = "0x978AB8", VA = "0x978AB8")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x978B54", Offset = "0x978B54", VA = "0x978B54")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x978CD0", Offset = "0x978CD0", VA = "0x978CD0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x978E64", Offset = "0x978E64", VA = "0x978E64")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x9790BC", Offset = "0x9790BC", VA = "0x9790BC")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x97916C", Offset = "0x97916C", VA = "0x97916C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000A5")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xAB389C", Offset = "0xAB389C", VA = "0xAB389C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xAB3924", Offset = "0xAB3924", VA = "0xAB3924")]
	private void Update()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xAB39EC", Offset = "0xAB39EC", VA = "0xAB39EC")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xAB3A28", Offset = "0xAB3A28", VA = "0xAB3A28")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000A6")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20000A7")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x400038F")]
		On,
		[Token(Token = "0x4000390")]
		Off,
		[Token(Token = "0x4000391")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700001A")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x941EA4", Offset = "0x941EA4", VA = "0x941EA4")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x941E60", Offset = "0x941E60", VA = "0x941E60")]
		set
		{
		}
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x941EAC", Offset = "0x941EAC", VA = "0x941EAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x941F04", Offset = "0x941F04", VA = "0x941F04")]
	private void Start()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x94201C", Offset = "0x94201C", VA = "0x94201C", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x942038", Offset = "0x942038", VA = "0x942038", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x94208C", Offset = "0x94208C", VA = "0x94208C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x9422E8", Offset = "0x9422E8", VA = "0x9422E8")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x9423FC", Offset = "0x9423FC", VA = "0x9423FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x942490", Offset = "0x942490", VA = "0x942490")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x942560", Offset = "0x942560", VA = "0x942560")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x942618", Offset = "0x942618", VA = "0x942618")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x9426E4", Offset = "0x9426E4", VA = "0x9426E4")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000A8")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000392")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000393")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000394")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727AFC", Offset = "0x727AFC")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727B34", Offset = "0x727B34")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727B6C", Offset = "0x727B6C")]
	public float HeightOffset;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727BA4", Offset = "0x727BA4")]
	public float MinimumHeight;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727BDC", Offset = "0x727BDC")]
	public float MaximumHeight;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x96F9A8", Offset = "0x96F9A8", VA = "0x96F9A8")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x96F9B0", Offset = "0x96F9B0", VA = "0x96F9B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x96FA20", Offset = "0x96FA20", VA = "0x96FA20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x96FAAC", Offset = "0x96FAAC", VA = "0x96FAAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x96FB38", Offset = "0x96FB38", VA = "0x96FB38")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x96FF40", Offset = "0x96FF40", VA = "0x96FF40")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x9701E8", Offset = "0x9701E8", VA = "0x9701E8")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000A9")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x94924C", Offset = "0x94924C", VA = "0x94924C")]
	private void Start()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x9492F8", Offset = "0x9492F8", VA = "0x9492F8")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000AA")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20000AB")]
	public enum States
	{
		[Token(Token = "0x40003C2")]
		Ready,
		[Token(Token = "0x40003C3")]
		Aim,
		[Token(Token = "0x40003C4")]
		CancelAim,
		[Token(Token = "0x40003C5")]
		PreTeleport,
		[Token(Token = "0x40003C6")]
		CancelTeleport,
		[Token(Token = "0x40003C7")]
		Teleporting,
		[Token(Token = "0x40003C8")]
		PostTeleport
	}

	[Token(Token = "0x20000AC")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40003CA")]
		None,
		[Token(Token = "0x40003CB")]
		Aim,
		[Token(Token = "0x40003CC")]
		PreTeleport,
		[Token(Token = "0x40003CD")]
		Teleport
	}

	[Token(Token = "0x20000AD")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40003CF")]
		Point,
		[Token(Token = "0x40003D0")]
		Sphere,
		[Token(Token = "0x40003D1")]
		Capsule
	}

	[Token(Token = "0x20000AE")]
	public class AimData
	{
		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x727FF4", Offset = "0x727FF4")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700001E")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000273")]
			[Address(RVA = "0x97EB9C", Offset = "0x97EB9C", VA = "0x97EB9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DCB4", Offset = "0x72DCB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000274")]
			[Address(RVA = "0x97EBA4", Offset = "0x97EBA4", VA = "0x97EBA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DCC4", Offset = "0x72DCC4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x97EB28", Offset = "0x97EB28", VA = "0x97EB28")]
		public AimData()
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0x97EBAC", Offset = "0x97EBAC", VA = "0x97EBAC")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724F34", Offset = "0x724F34")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0x97E940", Offset = "0x97E940", VA = "0x97E940", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027B")]
			[Address(RVA = "0x97E9A8", Offset = "0x97E9A8", VA = "0x97E9A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0x97E824", Offset = "0x97E824", VA = "0x97E824")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0x97E850", Offset = "0x97E850", VA = "0x97E850", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0x97E854", Offset = "0x97E854", VA = "0x97E854", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x97E948", Offset = "0x97E948", VA = "0x97E948", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724F44", Offset = "0x724F44")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0x94BB6C", Offset = "0x94BB6C", VA = "0x94BB6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000281")]
			[Address(RVA = "0x94BBD4", Offset = "0x94BBD4", VA = "0x94BBD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x94AC54", Offset = "0x94AC54", VA = "0x94AC54")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0x94BA34", Offset = "0x94BA34", VA = "0x94BA34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x94BA38", Offset = "0x94BA38", VA = "0x94BA38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x94BB74", Offset = "0x94BB74", VA = "0x94BB74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724F54", Offset = "0x724F54")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000285")]
			[Address(RVA = "0x97E36C", Offset = "0x97E36C", VA = "0x97E36C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000287")]
			[Address(RVA = "0x97E3D4", Offset = "0x97E3D4", VA = "0x97E3D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x97E29C", Offset = "0x97E29C", VA = "0x97E29C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x97E2C8", Offset = "0x97E2C8", VA = "0x97E2C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x97E2CC", Offset = "0x97E2CC", VA = "0x97E2CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x97E374", Offset = "0x97E374", VA = "0x97E374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724F64", Offset = "0x724F64")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600028B")]
			[Address(RVA = "0x97E7B4", Offset = "0x97E7B4", VA = "0x97E7B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028D")]
			[Address(RVA = "0x97E81C", Offset = "0x97E81C", VA = "0x97E81C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x97E6A4", Offset = "0x97E6A4", VA = "0x97E6A4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0x97E6D0", Offset = "0x97E6D0", VA = "0x97E6D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0x97E6D4", Offset = "0x97E6D4", VA = "0x97E6D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0x97E7BC", Offset = "0x97E7BC", VA = "0x97E7BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724F74", Offset = "0x724F74")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000291")]
			[Address(RVA = "0x97E4AC", Offset = "0x97E4AC", VA = "0x97E4AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000293")]
			[Address(RVA = "0x97E514", Offset = "0x97E514", VA = "0x97E514", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0x97E3DC", Offset = "0x97E3DC", VA = "0x97E3DC")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0x97E408", Offset = "0x97E408", VA = "0x97E408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x97E40C", Offset = "0x97E40C", VA = "0x97E40C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x97E4B4", Offset = "0x97E4B4", VA = "0x97E4B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724F84", Offset = "0x724F84")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000297")]
			[Address(RVA = "0x97EAB8", Offset = "0x97EAB8", VA = "0x97EAB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000299")]
			[Address(RVA = "0x97EB20", Offset = "0x97EB20", VA = "0x97EB20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x97E9B0", Offset = "0x97E9B0", VA = "0x97E9B0")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0x97E9DC", Offset = "0x97E9DC", VA = "0x97E9DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000296")]
		[Address(RVA = "0x97E9E0", Offset = "0x97E9E0", VA = "0x97E9E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x97EAC0", Offset = "0x97EAC0", VA = "0x97EAC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724F94", Offset = "0x724F94")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029D")]
			[Address(RVA = "0x97E634", Offset = "0x97E634", VA = "0x97E634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600029F")]
			[Address(RVA = "0x97E69C", Offset = "0x97E69C", VA = "0x97E69C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0x97E51C", Offset = "0x97E51C", VA = "0x97E51C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x97E548", Offset = "0x97E548", VA = "0x97E548", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x97E54C", Offset = "0x97E54C", VA = "0x97E54C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x97E63C", Offset = "0x97E63C", VA = "0x97E63C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727C14", Offset = "0x727C14")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727C4C", Offset = "0x727C4C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727C84", Offset = "0x727C84")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727CBC", Offset = "0x727CBC")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727CF4", Offset = "0x727CF4")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727D2C", Offset = "0x727D2C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727D64", Offset = "0x727D64")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727D9C", Offset = "0x727D9C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x727DD4", Offset = "0x727DD4")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727DE4", Offset = "0x727DE4")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727E1C", Offset = "0x727E1C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x727E64", Offset = "0x727E64")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727E74", Offset = "0x727E74")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727EAC", Offset = "0x727EAC")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727EE4", Offset = "0x727EE4")]
	public float AimCollisionRadius;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x727F1C", Offset = "0x727F1C")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700001B")]
	public States CurrentState
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x949CDC", Offset = "0x949CDC", VA = "0x949CDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D820", Offset = "0x72D820")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000241")]
		[Address(RVA = "0x949CE4", Offset = "0x949CE4", VA = "0x949CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D830", Offset = "0x72D830")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0x949F14", Offset = "0x949F14", VA = "0x949F14")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001D")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0x949F3C", Offset = "0x949F3C", VA = "0x949F3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D860", Offset = "0x72D860")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000247")]
		[Address(RVA = "0x949F44", Offset = "0x949F44", VA = "0x949F44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D870", Offset = "0x72D870")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000242")]
		[Address(RVA = "0x949CEC", Offset = "0x949CEC", VA = "0x949CEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D840", Offset = "0x72D840")]
		add
		{
		}
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x949D90", Offset = "0x949D90", VA = "0x949D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D850", Offset = "0x72D850")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x94A650", Offset = "0x94A650", VA = "0x94A650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D8B8", Offset = "0x72D8B8")]
		add
		{
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x94A6F4", Offset = "0x94A6F4", VA = "0x94A6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D8C8", Offset = "0x72D8C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x94A798", Offset = "0x94A798", VA = "0x94A798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D93C", Offset = "0x72D93C")]
		add
		{
		}
		[Token(Token = "0x6000255")]
		[Address(RVA = "0x94A83C", Offset = "0x94A83C", VA = "0x94A83C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D94C", Offset = "0x72D94C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x94A8E0", Offset = "0x94A8E0", VA = "0x94A8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D95C", Offset = "0x72D95C")]
		add
		{
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x94A984", Offset = "0x94A984", VA = "0x94A984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D96C", Offset = "0x72D96C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x94AA9C", Offset = "0x94AA9C", VA = "0x94AA9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D97C", Offset = "0x72D97C")]
		add
		{
		}
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x94AB40", Offset = "0x94AB40", VA = "0x94AB40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72D98C", Offset = "0x72D98C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x94AC80", Offset = "0x94AC80", VA = "0x94AC80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DA00", Offset = "0x72DA00")]
		add
		{
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x94AD24", Offset = "0x94AD24", VA = "0x94AD24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DA10", Offset = "0x72DA10")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x94AE38", Offset = "0x94AE38", VA = "0x94AE38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DA84", Offset = "0x72DA84")]
		add
		{
		}
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x94AEDC", Offset = "0x94AEDC", VA = "0x94AEDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DA94", Offset = "0x72DA94")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x94AFF0", Offset = "0x94AFF0", VA = "0x94AFF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DB08", Offset = "0x72DB08")]
		add
		{
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x94B094", Offset = "0x94B094", VA = "0x94B094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DB18", Offset = "0x72DB18")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x94B1A8", Offset = "0x94B1A8", VA = "0x94B1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DB8C", Offset = "0x72DB8C")]
		add
		{
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x94B24C", Offset = "0x94B24C", VA = "0x94B24C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DB9C", Offset = "0x72DB9C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x94B360", Offset = "0x94B360", VA = "0x94B360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DC10", Offset = "0x72DC10")]
		add
		{
		}
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x94B404", Offset = "0x94B404", VA = "0x94B404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DC20", Offset = "0x72DC20")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600026B")]
		[Address(RVA = "0x94B518", Offset = "0x94B518", VA = "0x94B518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DC94", Offset = "0x72DC94")]
		add
		{
		}
		[Token(Token = "0x600026C")]
		[Address(RVA = "0x94B5BC", Offset = "0x94B5BC", VA = "0x94B5BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DCA4", Offset = "0x72DCA4")]
		remove
		{
		}
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x9499AC", Offset = "0x9499AC", VA = "0x9499AC")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x9499D0", Offset = "0x9499D0", VA = "0x9499D0")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x949E34", Offset = "0x949E34", VA = "0x949E34")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x949F4C", Offset = "0x949F4C", VA = "0x949F4C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x94A2A4", Offset = "0x94A2A4", VA = "0x94A2A4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x72D880", Offset = "0x72D880")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x94A35C", Offset = "0x94A35C", VA = "0x94A35C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x94A424", Offset = "0x94A424", VA = "0x94A424")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x94A440", Offset = "0x94A440", VA = "0x94A440")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x94A508", Offset = "0x94A508", VA = "0x94A508")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x94A54C", Offset = "0x94A54C", VA = "0x94A54C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x94A5A8", Offset = "0x94A5A8", VA = "0x94A5A8", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x94A648", Offset = "0x94A648", VA = "0x94A648", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x94A5D8", Offset = "0x94A5D8", VA = "0x94A5D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72D8D8", Offset = "0x72D8D8")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x94AA28", Offset = "0x94AA28", VA = "0x94AA28")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x94ABE4", Offset = "0x94ABE4", VA = "0x94ABE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72D99C", Offset = "0x72D99C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x94ADC8", Offset = "0x94ADC8", VA = "0x94ADC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72DA20", Offset = "0x72DA20")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x94AF80", Offset = "0x94AF80", VA = "0x94AF80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72DAA4", Offset = "0x72DAA4")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x94B138", Offset = "0x94B138", VA = "0x94B138")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72DB28", Offset = "0x72DB28")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x94B2F0", Offset = "0x94B2F0", VA = "0x94B2F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72DBAC", Offset = "0x72DBAC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x94B4A8", Offset = "0x94B4A8", VA = "0x94B4A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72DC30", Offset = "0x72DC30")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x94B660", Offset = "0x94B660", VA = "0x94B660")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x94B7A4", Offset = "0x94B7A4", VA = "0x94B7A4")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x94B7D8", Offset = "0x94B7D8", VA = "0x94B7D8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x94B8F8", Offset = "0x94B8F8", VA = "0x94B8F8")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x94BA24", Offset = "0x94BA24", VA = "0x94BA24")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000B6")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xA33B34", Offset = "0xA33B34", VA = "0xA33B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DF04", Offset = "0x72DF04")]
		add
		{
		}
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xA33BD8", Offset = "0xA33BD8", VA = "0xA33BD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DF14", Offset = "0x72DF14")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xA33C7C", Offset = "0xA33C7C", VA = "0xA33C7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DF24", Offset = "0x72DF24")]
		add
		{
		}
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xA33D20", Offset = "0xA33D20", VA = "0xA33D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DF34", Offset = "0x72DF34")]
		remove
		{
		}
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xA33DC4", Offset = "0xA33DC4", VA = "0xA33DC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xA33E6C", Offset = "0xA33E6C", VA = "0xA33E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xA33E70", Offset = "0xA33E70", VA = "0xA33E70")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xA33EE4", Offset = "0xA33EE4", VA = "0xA33EE4")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xA34054", Offset = "0xA34054", VA = "0xA34054")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xA34338", Offset = "0xA34338", VA = "0xA34338")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xA34528", Offset = "0xA34528", VA = "0xA34528")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000B7")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xA440A0", Offset = "0xA440A0", VA = "0xA440A0", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xA44134", Offset = "0xA44134", VA = "0xA44134", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002AD")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xA44204", Offset = "0xA44204", VA = "0xA44204")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000B8")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728024", Offset = "0x728024")]
	public float Range;

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xA44214", Offset = "0xA44214", VA = "0xA44214", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xA44370", Offset = "0xA44370", VA = "0xA44370")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000B9")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72805C", Offset = "0x72805C")]
	public float Range;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728094", Offset = "0x728094")]
	public float MinimumElevation;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7280CC", Offset = "0x7280CC")]
	public float Gravity;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728104", Offset = "0x728104")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728104", Offset = "0x728104")]
	public float AimVelocity;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728160", Offset = "0x728160")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728160", Offset = "0x728160")]
	public float AimStep;

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xA44380", Offset = "0xA44380", VA = "0xA44380", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xA445CC", Offset = "0xA445CC", VA = "0xA445CC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000BA")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7281B8", Offset = "0x7281B8")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xA445E0", Offset = "0xA445E0", VA = "0xA445E0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xA446C4", Offset = "0xA446C4", VA = "0xA446C4")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xA446F4", Offset = "0xA446F4", VA = "0xA446F4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xA44724", Offset = "0xA44724", VA = "0xA44724")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xA447C4", Offset = "0xA447C4", VA = "0xA447C4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xA44830", Offset = "0xA44830", VA = "0xA44830", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xA44898", Offset = "0xA44898", VA = "0xA44898")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000BB")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7281F0", Offset = "0x7281F0")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728200", Offset = "0x728200")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728238", Offset = "0x728238")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728270", Offset = "0x728270")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700002D")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xA449B4", Offset = "0xA449B4", VA = "0xA449B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DF44", Offset = "0x72DF44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xA449BC", Offset = "0xA449BC", VA = "0xA449BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DF54", Offset = "0x72DF54")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xA44B6C", Offset = "0xA44B6C", VA = "0xA44B6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DF64", Offset = "0x72DF64")]
		add
		{
		}
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xA44C10", Offset = "0xA44C10", VA = "0xA44C10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72DF74", Offset = "0x72DF74")]
		remove
		{
		}
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xA449C8", Offset = "0xA449C8", VA = "0xA449C8")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xA44A50", Offset = "0xA44A50", VA = "0xA44A50")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xA44B28", Offset = "0xA44B28", VA = "0xA44B28")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xA44B68", Offset = "0xA44B68", VA = "0xA44B68")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xA44CB4", Offset = "0xA44CB4", VA = "0xA44CB4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xA44D1C", Offset = "0xA44D1C", VA = "0xA44D1C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xA44D3C", Offset = "0xA44D3C", VA = "0xA44D3C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000BC")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724FA4", Offset = "0x724FA4")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D1")]
			[Address(RVA = "0xA45560", Offset = "0xA45560", VA = "0xA45560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D3")]
			[Address(RVA = "0xA455C8", Offset = "0xA455C8", VA = "0xA455C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xA452AC", Offset = "0xA452AC", VA = "0xA452AC")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xA454D0", Offset = "0xA454D0", VA = "0xA454D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xA454D4", Offset = "0xA454D4", VA = "0xA454D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xA45568", Offset = "0xA45568", VA = "0xA45568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724FB4", Offset = "0x724FB4")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D7")]
			[Address(RVA = "0xA45460", Offset = "0xA45460", VA = "0xA45460", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D9")]
			[Address(RVA = "0xA454C8", Offset = "0xA454C8", VA = "0xA454C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xA45348", Offset = "0xA45348", VA = "0xA45348")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xA453CC", Offset = "0xA453CC", VA = "0xA453CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xA453D0", Offset = "0xA453D0", VA = "0xA453D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xA45468", Offset = "0xA45468", VA = "0xA45468", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xA4507C", Offset = "0xA4507C", VA = "0xA4507C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xA45128", Offset = "0xA45128", VA = "0xA45128", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xA45180", Offset = "0xA45180", VA = "0xA45180", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xA4523C", Offset = "0xA4523C", VA = "0xA4523C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72DF84", Offset = "0x72DF84")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xA452D8", Offset = "0xA452D8", VA = "0xA452D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72DFE8", Offset = "0x72DFE8")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002CA")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002CB")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xA45374", Offset = "0xA45374", VA = "0xA45374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E04C", Offset = "0x72E04C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xA453A0", Offset = "0xA453A0", VA = "0xA453A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E05C", Offset = "0x72E05C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000BF")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7282B8", Offset = "0x7282B8")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7282C8", Offset = "0x7282C8")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728300", Offset = "0x728300")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728338", Offset = "0x728338")]
	public bool FastTeleport;

	[Token(Token = "0x17000032")]
	public Transform Pointer
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xA455D0", Offset = "0xA455D0", VA = "0xA455D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E10C", Offset = "0x72E10C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xA455D8", Offset = "0xA455D8", VA = "0xA455D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E11C", Offset = "0x72E11C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xA455E0", Offset = "0xA455E0", VA = "0xA455E0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xA4573C", Offset = "0xA4573C", VA = "0xA4573C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xA457F4", Offset = "0xA457F4", VA = "0xA457F4")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000C0")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000C1")]
	public enum InputModes
	{
		[Token(Token = "0x4000422")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000423")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000424")]
		ThumbstickTeleport,
		[Token(Token = "0x4000425")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000C2")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000427")]
		A,
		[Token(Token = "0x4000428")]
		B,
		[Token(Token = "0x4000429")]
		LeftTrigger,
		[Token(Token = "0x400042A")]
		LeftThumbstick,
		[Token(Token = "0x400042B")]
		RightTrigger,
		[Token(Token = "0x400042C")]
		RightThumbstick,
		[Token(Token = "0x400042D")]
		X,
		[Token(Token = "0x400042E")]
		Y
	}

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728370", Offset = "0x728370")]
	public InputModes InputMode;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7283A8", Offset = "0x7283A8")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7283E0", Offset = "0x7283E0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728418", Offset = "0x728418")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xA457F8", Offset = "0xA457F8", VA = "0xA457F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xA457FC", Offset = "0xA457FC", VA = "0xA457FC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xA45C44", Offset = "0xA45C44", VA = "0xA45C44", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xA45D04", Offset = "0xA45D04", VA = "0xA45D04")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000C3")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000C4")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000433")]
		HeadRelative,
		[Token(Token = "0x4000434")]
		ForwardFacing
	}

	[Token(Token = "0x20000C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724FC4", Offset = "0x724FC4")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002EF")]
			[Address(RVA = "0xA46194", Offset = "0xA46194", VA = "0xA46194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F1")]
			[Address(RVA = "0xA461FC", Offset = "0xA461FC", VA = "0xA461FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xA45F70", Offset = "0xA45F70", VA = "0xA45F70")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xA460EC", Offset = "0xA460EC", VA = "0xA460EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xA460F0", Offset = "0xA460F0", VA = "0xA460F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0xA4619C", Offset = "0xA4619C", VA = "0xA4619C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xA45DB0", Offset = "0xA45DB0", VA = "0xA45DB0")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xA45E64", Offset = "0xA45E64", VA = "0xA45E64")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xA45E6C", Offset = "0xA45E6C", VA = "0xA45E6C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xA45EB8", Offset = "0xA45EB8", VA = "0xA45EB8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xA45F00", Offset = "0xA45F00", VA = "0xA45F00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72E12C", Offset = "0x72E12C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E8")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002E9")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xA45F9C", Offset = "0xA45F9C", VA = "0xA45F9C")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xA460C0", Offset = "0xA460C0", VA = "0xA460C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E190", Offset = "0x72E190")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000C6")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xA46204", Offset = "0xA46204", VA = "0xA46204", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xA46208", Offset = "0xA46208", VA = "0xA46208", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xA46284", Offset = "0xA46284", VA = "0xA46284")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000C7")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728450", Offset = "0x728450")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728488", Offset = "0x728488")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7284C0", Offset = "0x7284C0")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7284F8", Offset = "0x7284F8")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xA46288", Offset = "0xA46288", VA = "0xA46288", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xA462F8", Offset = "0xA462F8", VA = "0xA462F8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xA46770", Offset = "0xA46770", VA = "0xA46770")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000C8")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728530", Offset = "0x728530")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728568", Offset = "0x728568")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7285A0", Offset = "0x7285A0")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xA46774", Offset = "0xA46774", VA = "0xA46774", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xA467B8", Offset = "0xA467B8", VA = "0xA467B8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xA46C28", Offset = "0xA46C28", VA = "0xA46C28")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000C9")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xA46C38", Offset = "0xA46C38", VA = "0xA46C38")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xA46C3C", Offset = "0xA46C3C", VA = "0xA46C3C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xA46C44", Offset = "0xA46C44", VA = "0xA46C44")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xA46D2C", Offset = "0xA46D2C", VA = "0xA46D2C")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xA46D54", Offset = "0xA46D54", VA = "0xA46D54")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000CA")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7285D8", Offset = "0x7285D8")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000035")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0xA46D6C", Offset = "0xA46D6C", VA = "0xA46D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E1F0", Offset = "0x72E1F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000301")]
		[Address(RVA = "0xA46D74", Offset = "0xA46D74", VA = "0xA46D74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E200", Offset = "0x72E200")]
		private set
		{
		}
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xA440D0", Offset = "0xA440D0", VA = "0xA440D0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xA441D8", Offset = "0xA441D8", VA = "0xA441D8", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xA46D7C", Offset = "0xA46D7C", VA = "0xA46D7C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x72E210", Offset = "0x72E210")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xA44824", Offset = "0xA44824", VA = "0xA44824", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xA44890", Offset = "0xA44890", VA = "0xA44890", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xA4420C", Offset = "0xA4420C", VA = "0xA4420C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000CB")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724FD4", Offset = "0x724FD4")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000313")]
			[Address(RVA = "0xA473D0", Offset = "0xA473D0", VA = "0xA473D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000315")]
			[Address(RVA = "0xA47438", Offset = "0xA47438", VA = "0xA47438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0xA46FCC", Offset = "0xA46FCC", VA = "0xA46FCC")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0xA47164", Offset = "0xA47164", VA = "0xA47164", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0xA47168", Offset = "0xA47168", VA = "0xA47168", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0xA473D8", Offset = "0xA473D8", VA = "0xA473D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7285E8", Offset = "0x7285E8")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400044E")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xA46E44", Offset = "0xA46E44", VA = "0xA46E44")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xA46F08", Offset = "0xA46F08", VA = "0xA46F08", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xA46F34", Offset = "0xA46F34", VA = "0xA46F34", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xA46F5C", Offset = "0xA46F5C", VA = "0xA46F5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72E248", Offset = "0x72E248")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xA46FF8", Offset = "0xA46FF8", VA = "0xA46FF8", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600030D")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xA47014", Offset = "0xA47014", VA = "0xA47014", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xA47138", Offset = "0xA47138", VA = "0xA47138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E2AC", Offset = "0x72E2AC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000CD")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xA47440", Offset = "0xA47440", VA = "0xA47440")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xA474A0", Offset = "0xA474A0", VA = "0xA474A0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xA47624", Offset = "0xA47624", VA = "0xA47624", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xA47714", Offset = "0xA47714", VA = "0xA47714")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x72E30C", Offset = "0x72E30C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xA47718", Offset = "0xA47718", VA = "0xA47718")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000CE")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728620", Offset = "0x728620")]
	public float LOSOffset;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728658", Offset = "0x728658")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xA47724", Offset = "0xA47724", VA = "0xA47724", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xA47954", Offset = "0xA47954", VA = "0xA47954")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000CF")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600031D")]
	[Address(RVA = "0xA47960", Offset = "0xA47960", VA = "0xA47960", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xA47AE4", Offset = "0xA47AE4", VA = "0xA47AE4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000D0")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600031F")]
	[Address(RVA = "0xA47AE8", Offset = "0xA47AE8", VA = "0xA47AE8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xA47B80", Offset = "0xA47B80", VA = "0xA47B80", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000321")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xA47C14", Offset = "0xA47C14", VA = "0xA47C14")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000D1")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724FE4", Offset = "0x724FE4")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000329")]
			[Address(RVA = "0xA47F7C", Offset = "0xA47F7C", VA = "0xA47F7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600032B")]
			[Address(RVA = "0xA47FE4", Offset = "0xA47FE4", VA = "0xA47FE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0xA47CB8", Offset = "0xA47CB8", VA = "0xA47CB8")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0xA47E7C", Offset = "0xA47E7C", VA = "0xA47E7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0xA47E80", Offset = "0xA47E80", VA = "0xA47E80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0xA47F84", Offset = "0xA47F84", VA = "0xA47F84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728690", Offset = "0x728690")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728690", Offset = "0x728690")]
	public float TransitionDuration;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7286E8", Offset = "0x7286E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7286E8", Offset = "0x7286E8")]
	public float TeleportDelay;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72873C", Offset = "0x72873C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xA47C1C", Offset = "0xA47C1C", VA = "0xA47C1C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xA47C48", Offset = "0xA47C48", VA = "0xA47C48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72E344", Offset = "0x72E344")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xA47CE4", Offset = "0xA47CE4", VA = "0xA47CE4")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000D3")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600032C")]
	[Address(RVA = "0xA47FEC", Offset = "0xA47FEC", VA = "0xA47FEC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xA48008", Offset = "0xA48008", VA = "0xA48008")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000D4")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x724FF4", Offset = "0x724FF4")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000334")]
			[Address(RVA = "0xA48254", Offset = "0xA48254", VA = "0xA48254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000336")]
			[Address(RVA = "0xA482BC", Offset = "0xA482BC", VA = "0xA482BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0xA480AC", Offset = "0xA480AC", VA = "0xA480AC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0xA48120", Offset = "0xA48120", VA = "0xA48120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0xA48124", Offset = "0xA48124", VA = "0xA48124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0xA4825C", Offset = "0xA4825C", VA = "0xA4825C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728774", Offset = "0x728774")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728774", Offset = "0x728774")]
	public float TransitionDuration;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xA48010", Offset = "0xA48010", VA = "0xA48010", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xA4803C", Offset = "0xA4803C", VA = "0xA4803C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72E3F8", Offset = "0x72E3F8")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xA480D8", Offset = "0xA480D8", VA = "0xA480D8")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000D6")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000D7")]
	public enum PlabackState
	{
		[Token(Token = "0x400047E")]
		Idle = 1,
		[Token(Token = "0x400047F")]
		Preparing,
		[Token(Token = "0x4000480")]
		Buffering,
		[Token(Token = "0x4000481")]
		Ready,
		[Token(Token = "0x4000482")]
		Ended
	}

	[Token(Token = "0x20000D8")]
	public enum StereoMode
	{
		[Token(Token = "0x4000484")]
		Unknown = -1,
		[Token(Token = "0x4000485")]
		Mono,
		[Token(Token = "0x4000486")]
		TopBottom,
		[Token(Token = "0x4000487")]
		LeftRight,
		[Token(Token = "0x4000488")]
		Mesh
	}

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700003C")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x98E8F4", Offset = "0x98E8F4", VA = "0x98E8F4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003D")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x98EBB0", Offset = "0x98EBB0", VA = "0x98EBB0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003E")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000339")]
		[Address(RVA = "0x98A448", Offset = "0x98A448", VA = "0x98A448")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003F")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x98BA44", Offset = "0x98BA44", VA = "0x98BA44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000040")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x98EDF4", Offset = "0x98EDF4", VA = "0x98EDF4")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000041")]
	public static long Duration
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0x98BC28", Offset = "0x98BC28", VA = "0x98BC28")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000042")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x98AA30", Offset = "0x98AA30", VA = "0x98AA30")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000043")]
	public static int VideoWidth
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0x98A848", Offset = "0x98A848", VA = "0x98A848")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000044")]
	public static int VideoHeight
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0x98A93C", Offset = "0x98A93C", VA = "0x98A93C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000045")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x98BB34", Offset = "0x98BB34", VA = "0x98BB34")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x98B208", Offset = "0x98B208", VA = "0x98B208")]
		set
		{
		}
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x98C288", Offset = "0x98C288", VA = "0x98C288")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x98BFCC", Offset = "0x98BFCC", VA = "0x98BFCC")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x98AE98", Offset = "0x98AE98", VA = "0x98AE98")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x98B01C", Offset = "0x98B01C", VA = "0x98B01C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x98BDF4", Offset = "0x98BDF4", VA = "0x98BDF4")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x98C47C", Offset = "0x98C47C", VA = "0x98C47C")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x98B888", Offset = "0x98B888", VA = "0x98B888")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000D9")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x96EF68", Offset = "0x96EF68", VA = "0x96EF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E4AC", Offset = "0x72E4AC")]
		add
		{
		}
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x96F00C", Offset = "0x96F00C", VA = "0x96F00C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E4BC", Offset = "0x72E4BC")]
		remove
		{
		}
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x96F0B0", Offset = "0x96F0B0", VA = "0x96F0B0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x96F0C4", Offset = "0x96F0C4", VA = "0x96F0C4")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000DA")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000DB")]
	public enum ButtonType
	{
		[Token(Token = "0x400048C")]
		Play,
		[Token(Token = "0x400048D")]
		Pause,
		[Token(Token = "0x400048E")]
		FastForward,
		[Token(Token = "0x400048F")]
		Rewind,
		[Token(Token = "0x4000490")]
		SkipForward,
		[Token(Token = "0x4000491")]
		SkipBack,
		[Token(Token = "0x4000492")]
		Stop
	}

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000046")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x981018", Offset = "0x981018", VA = "0x981018")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x981020", Offset = "0x981020", VA = "0x981020")]
		set
		{
		}
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x981044", Offset = "0x981044", VA = "0x981044", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x982510", Offset = "0x982510", VA = "0x982510")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000DC")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	public enum VideoShape
	{
		[Token(Token = "0x40004A7")]
		_360,
		[Token(Token = "0x40004A8")]
		_180,
		[Token(Token = "0x40004A9")]
		Quad
	}

	[Token(Token = "0x20000DE")]
	public enum VideoStereo
	{
		[Token(Token = "0x40004AB")]
		Mono,
		[Token(Token = "0x40004AC")]
		TopBottom,
		[Token(Token = "0x40004AD")]
		LeftRight,
		[Token(Token = "0x40004AE")]
		BottomTop
	}

	[Token(Token = "0x20000DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725004", Offset = "0x725004")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000368")]
			[Address(RVA = "0x98C744", Offset = "0x98C744", VA = "0x98C744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600036A")]
			[Address(RVA = "0x98C7AC", Offset = "0x98C7AC", VA = "0x98C7AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x98AB94", Offset = "0x98AB94", VA = "0x98AB94")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x98C5C0", Offset = "0x98C5C0", VA = "0x98C5C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x98C5C4", Offset = "0x98C5C4", VA = "0x98C5C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x98C74C", Offset = "0x98C74C", VA = "0x98C74C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725014", Offset = "0x725014")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x98ADFC", Offset = "0x98ADFC", VA = "0x98ADFC")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x98C1B4", Offset = "0x98C1B4", VA = "0x98C1B4")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7287FC", Offset = "0x7287FC")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72880C", Offset = "0x72880C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72881C", Offset = "0x72881C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000047")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x98A1FC", Offset = "0x98A1FC", VA = "0x98A1FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E4CC", Offset = "0x72E4CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x98A204", Offset = "0x98A204", VA = "0x98A204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E4DC", Offset = "0x72E4DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public long Duration
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x98A210", Offset = "0x98A210", VA = "0x98A210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E4EC", Offset = "0x72E4EC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x98A218", Offset = "0x98A218", VA = "0x98A218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E4FC", Offset = "0x72E4FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x98A220", Offset = "0x98A220", VA = "0x98A220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E50C", Offset = "0x72E50C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x98A228", Offset = "0x98A228", VA = "0x98A228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E51C", Offset = "0x72E51C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x98A230", Offset = "0x98A230", VA = "0x98A230")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x98A4B0", Offset = "0x98A4B0", VA = "0x98A4B0")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x98A518", Offset = "0x98A518", VA = "0x98A518")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x98AB24", Offset = "0x98AB24", VA = "0x98AB24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72E52C", Offset = "0x72E52C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x98ABC0", Offset = "0x98ABC0", VA = "0x98ABC0")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x98AE04", Offset = "0x98AE04", VA = "0x98AE04")]
	public void Play()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x98AF8C", Offset = "0x98AF8C", VA = "0x98AF8C")]
	public void Pause()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x98B110", Offset = "0x98B110", VA = "0x98B110")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x98B348", Offset = "0x98B348", VA = "0x98B348")]
	private void Update()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x98BD1C", Offset = "0x98BD1C", VA = "0x98BD1C")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x98BF3C", Offset = "0x98BF3C", VA = "0x98BF3C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x98C0C0", Offset = "0x98C0C0", VA = "0x98C0C0")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x98C1A4", Offset = "0x98C1A4", VA = "0x98C1A4")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000E1")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000E2")]
	private enum PlaybackState
	{
		[Token(Token = "0x40004CB")]
		Playing,
		[Token(Token = "0x40004CC")]
		Paused,
		[Token(Token = "0x40004CD")]
		Rewinding,
		[Token(Token = "0x40004CE")]
		FastForwarding
	}

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x98C7B4", Offset = "0x98C7B4", VA = "0x98C7B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x98CAB0", Offset = "0x98CAB0", VA = "0x98CAB0")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x98CC8C", Offset = "0x98CC8C", VA = "0x98CC8C")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x98CDC0", Offset = "0x98CDC0", VA = "0x98CDC0")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x98CEC8", Offset = "0x98CEC8", VA = "0x98CEC8")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x98CD94", Offset = "0x98CD94", VA = "0x98CD94")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x98CF90", Offset = "0x98CF90", VA = "0x98CF90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x98C9A4", Offset = "0x98C9A4", VA = "0x98C9A4")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x98D324", Offset = "0x98D324", VA = "0x98D324")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000E3")]
public static class VectorUtil
{
	[Token(Token = "0x6000376")]
	[Address(RVA = "0xAFF708", Offset = "0xAFF708", VA = "0xAFF708")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000E4")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x979E1C", Offset = "0x979E1C", VA = "0x979E1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x97A1EC", Offset = "0x97A1EC", VA = "0x97A1EC")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x97A2A4", Offset = "0x97A2A4", VA = "0x97A2A4")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x97A4A4", Offset = "0x97A4A4", VA = "0x97A4A4")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x97A58C", Offset = "0x97A58C", VA = "0x97A58C")]
	private void Update()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x97A668", Offset = "0x97A668", VA = "0x97A668")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x97A6D4", Offset = "0x97A6D4", VA = "0x97A6D4")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x97A6DC", Offset = "0x97A6DC", VA = "0x97A6DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E5F0", Offset = "0x72E5F0")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x97A738", Offset = "0x97A738", VA = "0x97A738")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E600", Offset = "0x72E600")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x97A794", Offset = "0x97A794", VA = "0x97A794")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E610", Offset = "0x72E610")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x97A7F0", Offset = "0x97A7F0", VA = "0x97A7F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72E620", Offset = "0x72E620")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000E5")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725034", Offset = "0x725034")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000389")]
			[Address(RVA = "0xAB3E7C", Offset = "0xAB3E7C", VA = "0xAB3E7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038B")]
			[Address(RVA = "0xAB3EE4", Offset = "0xAB3EE4", VA = "0xAB3EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0xAB3D2C", Offset = "0xAB3D2C", VA = "0xAB3D2C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0xAB3D60", Offset = "0xAB3D60", VA = "0xAB3D60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0xAB3D64", Offset = "0xAB3D64", VA = "0xAB3D64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xAB3E84", Offset = "0xAB3E84", VA = "0xAB3E84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xAB3A30", Offset = "0xAB3A30", VA = "0xAB3A30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xAB3B30", Offset = "0xAB3B30", VA = "0xAB3B30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xAB3AC0", Offset = "0xAB3AC0", VA = "0xAB3AC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72E630", Offset = "0x72E630")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xAB3D58", Offset = "0xAB3D58", VA = "0xAB3D58")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000E7")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72883C", Offset = "0x72883C")]
	public int SubdivisionsU;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728858", Offset = "0x728858")]
	public int SubdivisionsV;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x970798", Offset = "0x970798", VA = "0x970798")]
	private void Update()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x971250", Offset = "0x971250", VA = "0x971250")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000E8")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700004E")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x949300", Offset = "0x949300", VA = "0x949300")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x949358", Offset = "0x949358", VA = "0x949358")]
	public void Start()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x94969C", Offset = "0x94969C", VA = "0x94969C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x949780", Offset = "0x949780", VA = "0x949780")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x72E6E4", Offset = "0x72E6E4")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000392")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000393")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000394")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000395")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000396")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000397")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000398")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000399")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x9497E8", Offset = "0x9497E8", VA = "0x9497E8")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x949824", Offset = "0x949824", VA = "0x949824")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x949898", Offset = "0x949898", VA = "0x949898")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x9499F4", Offset = "0x9499F4", VA = "0x9499F4")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x949AC8", Offset = "0x949AC8", VA = "0x949AC8")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x9495A8", Offset = "0x9495A8", VA = "0x9495A8")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x949B88", Offset = "0x949B88", VA = "0x949B88")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x949BF0", Offset = "0x949BF0", VA = "0x949BF0")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x949CD4", Offset = "0x949CD4", VA = "0x949CD4")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000E9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x725054", Offset = "0x725054")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000EA")]
	public enum DrawMode
	{
		[Token(Token = "0x40004F9")]
		Opaque,
		[Token(Token = "0x40004FA")]
		OpaqueWithClip,
		[Token(Token = "0x40004FB")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40004FC")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700004F")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xD85420", Offset = "0xD85420", VA = "0xD85420")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xD854B4", Offset = "0xD854B4", VA = "0xD854B4")]
		set
		{
		}
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xD83DB0", Offset = "0xD83DB0", VA = "0xD83DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xD84A20", Offset = "0xD84A20", VA = "0xD84A20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xD84AA4", Offset = "0xD84AA4", VA = "0xD84AA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xD84B98", Offset = "0xD84B98", VA = "0xD84B98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xD84C8C", Offset = "0xD84C8C", VA = "0xD84C8C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xD84E90", Offset = "0xD84E90", VA = "0xD84E90")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xD85584", Offset = "0xD85584", VA = "0xD85584")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000EB")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7250B8", Offset = "0x7250B8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xA376B0", Offset = "0xA376B0", VA = "0xA376B0")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xA377C0", Offset = "0xA377C0", VA = "0xA377C0")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xA374F0", Offset = "0xA374F0", VA = "0xA374F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xA376B8", Offset = "0xA376B8", VA = "0xA376B8")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xA377B8", Offset = "0xA377B8", VA = "0xA377B8")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000ED")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7250C8", Offset = "0x7250C8")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20000EE")]
	public enum RotationAxes
	{
		[Token(Token = "0x400050B")]
		MouseXAndY,
		[Token(Token = "0x400050C")]
		MouseX,
		[Token(Token = "0x400050D")]
		MouseY
	}

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x989EAC", Offset = "0x989EAC", VA = "0x989EAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x98A10C", Offset = "0x98A10C", VA = "0x98A10C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x98A1CC", Offset = "0x98A1CC", VA = "0x98A1CC")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000EF")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20000F0")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000513")]
		Uninitialized = -1,
		[Token(Token = "0x4000514")]
		NotEnabled,
		[Token(Token = "0x4000515")]
		Success,
		[Token(Token = "0x4000516")]
		StreamError,
		[Token(Token = "0x4000517")]
		ProcessError,
		[Token(Token = "0x4000518")]
		MaxStatValue
	}

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x9E830C", Offset = "0x9E830C", VA = "0x9E830C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x9E8540", Offset = "0x9E8540", VA = "0x9E8540")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x9E872C", Offset = "0x9E872C", VA = "0x9E872C")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000F1")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	private enum Parameters
	{
		[Token(Token = "0x4000524")]
		P_GAIN,
		[Token(Token = "0x4000525")]
		P_USEINVSQR,
		[Token(Token = "0x4000526")]
		P_NEAR,
		[Token(Token = "0x4000527")]
		P_FAR,
		[Token(Token = "0x4000528")]
		P_RADIUS,
		[Token(Token = "0x4000529")]
		P_DISABLE_RFL,
		[Token(Token = "0x400052A")]
		P_AMBISTAT,
		[Token(Token = "0x400052B")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x400052C")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x400052D")]
		P_SENDLEVEL,
		[Token(Token = "0x400052E")]
		P_NUM
	}

	[Token(Token = "0x4000519")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000050")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x9E8978", Offset = "0x9E8978", VA = "0x9E8978")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x9E8980", Offset = "0x9E8980", VA = "0x9E8980")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public float Gain
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x9E898C", Offset = "0x9E898C", VA = "0x9E898C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x9E8994", Offset = "0x9E8994", VA = "0x9E8994")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x9E8A18", Offset = "0x9E8A18", VA = "0x9E8A18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x9E8A20", Offset = "0x9E8A20", VA = "0x9E8A20")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public float Near
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x9E8A2C", Offset = "0x9E8A2C", VA = "0x9E8A2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x9E8A34", Offset = "0x9E8A34", VA = "0x9E8A34")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public float Far
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x9E8ABC", Offset = "0x9E8ABC", VA = "0x9E8ABC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x9E8AC4", Offset = "0x9E8AC4", VA = "0x9E8AC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x9E8B4C", Offset = "0x9E8B4C", VA = "0x9E8B4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x9E8B54", Offset = "0x9E8B54", VA = "0x9E8B54")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public float ReverbSend
	{
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x9E8BDC", Offset = "0x9E8BDC", VA = "0x9E8BDC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x9E8BE4", Offset = "0x9E8BE4", VA = "0x9E8BE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x9E8C6C", Offset = "0x9E8C6C", VA = "0x9E8C6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x9E8C74", Offset = "0x9E8C74", VA = "0x9E8C74")]
		set
		{
		}
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x9E87A0", Offset = "0x9E87A0", VA = "0x9E87A0")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x72E71C", Offset = "0x72E71C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x9E8898", Offset = "0x9E8898", VA = "0x9E8898")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x9E8C80", Offset = "0x9E8C80", VA = "0x9E8C80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x9E8DF4", Offset = "0x9E8DF4", VA = "0x9E8DF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x9E8DF8", Offset = "0x9E8DF8", VA = "0x9E8DF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x9E8CEC", Offset = "0x9E8CEC", VA = "0x9E8CEC")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x9E8EC0", Offset = "0x9E8EC0", VA = "0x9E8EC0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x9E9320", Offset = "0x9E9320", VA = "0x9E9320")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x9E8818", Offset = "0x9E8818", VA = "0x9E8818")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x9E93F0", Offset = "0x9E93F0", VA = "0x9E93F0")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000F3")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000530")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000532")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x9E9410", Offset = "0x9E9410", VA = "0x9E9410")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x9E941C", Offset = "0x9E941C", VA = "0x9E941C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x9E94D4", Offset = "0x9E94D4", VA = "0x9E94D4")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x9E9454", Offset = "0x9E9454", VA = "0x9E9454")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x9E9554", Offset = "0x9E9554", VA = "0x9E9554")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000F4")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20000F5")]
	private struct MeshMaterial
	{
		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20000F6")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000539")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000058")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x9EBFD0", Offset = "0x9EBFD0", VA = "0x9EBFD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public string filePath
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x9EC05C", Offset = "0x9EC05C", VA = "0x9EC05C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x9EC0D4", Offset = "0x9EC0D4", VA = "0x9EC0D4")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x9EC21C", Offset = "0x9EC21C", VA = "0x9EC21C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x9EC220", Offset = "0x9EC220", VA = "0x9EC220")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x9EC780", Offset = "0x9EC780", VA = "0x9EC780")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x9ECB18", Offset = "0x9ECB18", VA = "0x9ECB18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x9ECC74", Offset = "0x9ECC74", VA = "0x9ECC74")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x9ED34C", Offset = "0x9ED34C", VA = "0x9ED34C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x9ED388", Offset = "0x9ED388", VA = "0x9ED388")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x9EEB2C", Offset = "0x9EEB2C", VA = "0x9EEB2C")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x9EEA04", Offset = "0x9EEA04", VA = "0x9EEA04")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x9EC5B8", Offset = "0x9EC5B8", VA = "0x9EC5B8")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x9EC3EC", Offset = "0x9EC3EC", VA = "0x9EC3EC")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x9EF140", Offset = "0x9EF140", VA = "0x9EF140")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x9EF57C", Offset = "0x9EF57C", VA = "0x9EF57C")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000F7")]
internal class ONSPPropagation
{
	[Token(Token = "0x20000F8")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000542")]
		Int8,
		[Token(Token = "0x4000543")]
		UInt8,
		[Token(Token = "0x4000544")]
		Int16,
		[Token(Token = "0x4000545")]
		UInt16,
		[Token(Token = "0x4000546")]
		Int32,
		[Token(Token = "0x4000547")]
		UInt32,
		[Token(Token = "0x4000548")]
		Int64,
		[Token(Token = "0x4000549")]
		UInt64,
		[Token(Token = "0x400054A")]
		Float16,
		[Token(Token = "0x400054B")]
		Float32,
		[Token(Token = "0x400054C")]
		Float64
	}

	[Token(Token = "0x20000F9")]
	public class ClientType
	{
		[Token(Token = "0x400054D")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x400054E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x400054F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000550")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000551")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000552")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000553")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000554")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000555")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000556")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000557")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000558")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000559")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x400055A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x400055B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x9E9A08", Offset = "0x9E9A08", VA = "0x9E9A08")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20000FA")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60003EE")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60003EF")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60003F0")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60003F1")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60003F2")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60003F3")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60003F4")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60003F5")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003F6")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003F7")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60003F8")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60003F9")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60003FA")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60003FB")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60003FC")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20000FB")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x400055C")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700005B")]
		private IntPtr context
		{
			[Token(Token = "0x60003FD")]
			[Address(RVA = "0x9EA678", Offset = "0x9EA678", VA = "0x9EA678")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x9EA6DC", Offset = "0x9EA6DC", VA = "0x9EA6DC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x9EA76C", Offset = "0x9EA76C", VA = "0x9EA76C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x9EA7FC", Offset = "0x9EA7FC", VA = "0x9EA7FC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000401")]
		[Address(RVA = "0x9EA820", Offset = "0x9EA820", VA = "0x9EA820")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x9EA8B0", Offset = "0x9EA8B0", VA = "0x9EA8B0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x9EA8D4", Offset = "0x9EA8D4", VA = "0x9EA8D4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x9EA960", Offset = "0x9EA960", VA = "0x9EA960", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000405")]
		[Address(RVA = "0x9EA984", Offset = "0x9EA984", VA = "0x9EA984")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x9EAA04", Offset = "0x9EAA04", VA = "0x9EAA04", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x9EAA0C", Offset = "0x9EAA0C", VA = "0x9EAA0C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x9EAB2C", Offset = "0x9EAB2C", VA = "0x9EAB2C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000409")]
		[Address(RVA = "0x9EAC24", Offset = "0x9EAC24", VA = "0x9EAC24")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x9EACBC", Offset = "0x9EACBC", VA = "0x9EACBC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x9EACC8", Offset = "0x9EACC8", VA = "0x9EACC8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x9EADF4", Offset = "0x9EADF4", VA = "0x9EADF4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x9EAE00", Offset = "0x9EAE00", VA = "0x9EAE00")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x9EAEAC", Offset = "0x9EAEAC", VA = "0x9EAEAC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600040F")]
		[Address(RVA = "0x9EAEB8", Offset = "0x9EAEB8", VA = "0x9EAEB8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x9EAF64", Offset = "0x9EAF64", VA = "0x9EAF64", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x9EAF70", Offset = "0x9EAF70", VA = "0x9EAF70")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x9EB01C", Offset = "0x9EB01C", VA = "0x9EB01C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000413")]
		[Address(RVA = "0x9EB028", Offset = "0x9EB028", VA = "0x9EB028")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x9EB0B4", Offset = "0x9EB0B4", VA = "0x9EB0B4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000415")]
		[Address(RVA = "0x9EB0D8", Offset = "0x9EB0D8", VA = "0x9EB0D8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x9EB158", Offset = "0x9EB158", VA = "0x9EB158", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000417")]
		[Address(RVA = "0x9EB160", Offset = "0x9EB160", VA = "0x9EB160")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x9EB208", Offset = "0x9EB208", VA = "0x9EB208", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000419")]
		[Address(RVA = "0x9EB214", Offset = "0x9EB214", VA = "0x9EB214")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x9EB2BC", Offset = "0x9EB2BC", VA = "0x9EB2BC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600041B")]
		[Address(RVA = "0x9EB2CC", Offset = "0x9EB2CC", VA = "0x9EB2CC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x9EB35C", Offset = "0x9EB35C", VA = "0x9EB35C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x9E99B4", Offset = "0x9E99B4", VA = "0x9E99B4")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20000FC")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x400055E")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700005C")]
		private IntPtr context
		{
			[Token(Token = "0x600041E")]
			[Address(RVA = "0x9EB368", Offset = "0x9EB368", VA = "0x9EB368")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600041F")]
		[Address(RVA = "0x9E97FC", Offset = "0x9E97FC", VA = "0x9E97FC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000420")]
		[Address(RVA = "0x9EB3CC", Offset = "0x9EB3CC", VA = "0x9EB3CC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x9EB45C", Offset = "0x9EB45C", VA = "0x9EB45C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x9EB480", Offset = "0x9EB480", VA = "0x9EB480")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x9EB510", Offset = "0x9EB510", VA = "0x9EB510", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x9EB534", Offset = "0x9EB534", VA = "0x9EB534")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x9EB5C4", Offset = "0x9EB5C4", VA = "0x9EB5C4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x9EB5E8", Offset = "0x9EB5E8", VA = "0x9EB5E8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x9EB668", Offset = "0x9EB668", VA = "0x9EB668", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x9EB670", Offset = "0x9EB670", VA = "0x9EB670")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x9EB790", Offset = "0x9EB790", VA = "0x9EB790", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600042A")]
		[Address(RVA = "0x9EB888", Offset = "0x9EB888", VA = "0x9EB888")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x9EB920", Offset = "0x9EB920", VA = "0x9EB920", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600042C")]
		[Address(RVA = "0x9EB92C", Offset = "0x9EB92C", VA = "0x9EB92C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x9EBA58", Offset = "0x9EBA58", VA = "0x9EBA58", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x9EBA64", Offset = "0x9EBA64", VA = "0x9EBA64")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x9EBB10", Offset = "0x9EBB10", VA = "0x9EBB10", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x9EBB1C", Offset = "0x9EBB1C", VA = "0x9EBB1C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x9EBBC8", Offset = "0x9EBBC8", VA = "0x9EBBC8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x9EBBD4", Offset = "0x9EBBD4", VA = "0x9EBBD4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x9EBC80", Offset = "0x9EBC80", VA = "0x9EBC80", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000434")]
		[Address(RVA = "0x9EBC8C", Offset = "0x9EBC8C", VA = "0x9EBC8C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x9EBD1C", Offset = "0x9EBD1C", VA = "0x9EBD1C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000436")]
		[Address(RVA = "0x9EBD40", Offset = "0x9EBD40", VA = "0x9EBD40")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x9EBDC0", Offset = "0x9EBDC0", VA = "0x9EBDC0", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000438")]
		[Address(RVA = "0x9EBDC8", Offset = "0x9EBDC8", VA = "0x9EBDC8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x9EBE70", Offset = "0x9EBE70", VA = "0x9EBE70", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600043A")]
		[Address(RVA = "0x9EBE7C", Offset = "0x9EBE7C", VA = "0x9EBE7C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x9EBF24", Offset = "0x9EBF24", VA = "0x9EBF24", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600043C")]
		[Address(RVA = "0x9EBF34", Offset = "0x9EBF34", VA = "0x9EBF34")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x9EBFC4", Offset = "0x9EBFC4", VA = "0x9EBFC4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x9E988C", Offset = "0x9E988C", VA = "0x9E988C")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20000FD")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000560")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700005D")]
		private IntPtr context
		{
			[Token(Token = "0x600043F")]
			[Address(RVA = "0x9E9A10", Offset = "0x9E9A10", VA = "0x9E9A10")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000440")]
		[Address(RVA = "0x9E98D8", Offset = "0x9E98D8", VA = "0x9E98D8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000441")]
		[Address(RVA = "0x9E9A74", Offset = "0x9E9A74", VA = "0x9E9A74")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x9E9B04", Offset = "0x9E9B04", VA = "0x9E9B04", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x9E9B28", Offset = "0x9E9B28", VA = "0x9E9B28")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x9E9BB8", Offset = "0x9E9BB8", VA = "0x9E9BB8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x9E9BDC", Offset = "0x9E9BDC", VA = "0x9E9BDC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x9E9C6C", Offset = "0x9E9C6C", VA = "0x9E9C6C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x9E9C90", Offset = "0x9E9C90", VA = "0x9E9C90")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x9E9D10", Offset = "0x9E9D10", VA = "0x9E9D10", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000449")]
		[Address(RVA = "0x9E9D18", Offset = "0x9E9D18", VA = "0x9E9D18")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x9E9E38", Offset = "0x9E9E38", VA = "0x9E9E38", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600044B")]
		[Address(RVA = "0x9E9F30", Offset = "0x9E9F30", VA = "0x9E9F30")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x9E9FC8", Offset = "0x9E9FC8", VA = "0x9E9FC8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x9E9FD4", Offset = "0x9E9FD4", VA = "0x9E9FD4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x9EA100", Offset = "0x9EA100", VA = "0x9EA100", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600044F")]
		[Address(RVA = "0x9EA10C", Offset = "0x9EA10C", VA = "0x9EA10C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x9EA1B8", Offset = "0x9EA1B8", VA = "0x9EA1B8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000451")]
		[Address(RVA = "0x9EA1C4", Offset = "0x9EA1C4", VA = "0x9EA1C4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x9EA270", Offset = "0x9EA270", VA = "0x9EA270", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000453")]
		[Address(RVA = "0x9EA27C", Offset = "0x9EA27C", VA = "0x9EA27C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x9EA328", Offset = "0x9EA328", VA = "0x9EA328", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x9EA334", Offset = "0x9EA334", VA = "0x9EA334")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x9EA3C4", Offset = "0x9EA3C4", VA = "0x9EA3C4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x9EA3E8", Offset = "0x9EA3E8", VA = "0x9EA3E8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x9EA468", Offset = "0x9EA468", VA = "0x9EA468", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000459")]
		[Address(RVA = "0x9EA470", Offset = "0x9EA470", VA = "0x9EA470")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x9EA518", Offset = "0x9EA518", VA = "0x9EA518", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600045B")]
		[Address(RVA = "0x9EA524", Offset = "0x9EA524", VA = "0x9EA524")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x9EA5CC", Offset = "0x9EA5CC", VA = "0x9EA5CC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600045D")]
		[Address(RVA = "0x9EA5DC", Offset = "0x9EA5DC", VA = "0x9EA5DC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x9EA66C", Offset = "0x9EA66C", VA = "0x9EA66C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x9E9968", Offset = "0x9E9968", VA = "0x9E9968")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700005A")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x9E9564", Offset = "0x9E9564", VA = "0x9E9564")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x9E95D4", Offset = "0x9E95D4", VA = "0x9E95D4")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x9E9A00", Offset = "0x9E9A00", VA = "0x9E9A00")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000FE")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20000FF")]
	public enum Preset
	{
		[Token(Token = "0x4000568")]
		Custom,
		[Token(Token = "0x4000569")]
		AcousticTile,
		[Token(Token = "0x400056A")]
		Brick,
		[Token(Token = "0x400056B")]
		BrickPainted,
		[Token(Token = "0x400056C")]
		Carpet,
		[Token(Token = "0x400056D")]
		CarpetHeavy,
		[Token(Token = "0x400056E")]
		CarpetHeavyPadded,
		[Token(Token = "0x400056F")]
		CeramicTile,
		[Token(Token = "0x4000570")]
		Concrete,
		[Token(Token = "0x4000571")]
		ConcreteRough,
		[Token(Token = "0x4000572")]
		ConcreteBlock,
		[Token(Token = "0x4000573")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000574")]
		Curtain,
		[Token(Token = "0x4000575")]
		Foliage,
		[Token(Token = "0x4000576")]
		Glass,
		[Token(Token = "0x4000577")]
		GlassHeavy,
		[Token(Token = "0x4000578")]
		Grass,
		[Token(Token = "0x4000579")]
		Gravel,
		[Token(Token = "0x400057A")]
		GypsumBoard,
		[Token(Token = "0x400057B")]
		PlasterOnBrick,
		[Token(Token = "0x400057C")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x400057D")]
		Soil,
		[Token(Token = "0x400057E")]
		SoundProof,
		[Token(Token = "0x400057F")]
		Snow,
		[Token(Token = "0x4000580")]
		Steel,
		[Token(Token = "0x4000581")]
		Water,
		[Token(Token = "0x4000582")]
		WoodThin,
		[Token(Token = "0x4000583")]
		WoodThick,
		[Token(Token = "0x4000584")]
		WoodFloor,
		[Token(Token = "0x4000585")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000100")]
	public sealed class Point
	{
		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xD750C0", Offset = "0xD750C0", VA = "0xD750C0")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xD750F8", Offset = "0xD750F8", VA = "0xD750F8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xD75168", Offset = "0xD75168", VA = "0xD75168")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x725100", Offset = "0x725100")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000102")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725138", Offset = "0x725138")]
		private sealed class <>c
		{
			[Token(Token = "0x400058A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400058B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x400058C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x600048C")]
			[Address(RVA = "0xD75638", Offset = "0xD75638", VA = "0xD75638")]
			public <>c()
			{
			}

			[Token(Token = "0x600048D")]
			[Address(RVA = "0xD75640", Offset = "0xD75640", VA = "0xD75640")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x600048E")]
			[Address(RVA = "0xD75658", Offset = "0xD75658", VA = "0xD75658")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700005F")]
		public float Item
		{
			[Token(Token = "0x6000489")]
			[Address(RVA = "0xD751A0", Offset = "0xD751A0", VA = "0xD751A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0xD7555C", Offset = "0xD7555C", VA = "0xD7555C")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728964", Offset = "0x728964")]
	public Spectrum absorption;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72899C", Offset = "0x72899C")]
	public Spectrum transmission;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7289D4", Offset = "0x7289D4")]
	public Spectrum scattering;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700005E")]
	public Preset preset
	{
		[Token(Token = "0x6000460")]
		[Address(RVA = "0x9EF654", Offset = "0x9EF654", VA = "0x9EF654")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000461")]
		[Address(RVA = "0x9EF65C", Offset = "0x9EF65C", VA = "0x9EF65C")]
		set
		{
		}
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x9EF684", Offset = "0x9EF684", VA = "0x9EF684")]
	private void Start()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x9EEFD4", Offset = "0x9EEFD4", VA = "0x9EEFD4")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x9EFC34", Offset = "0x9EFC34", VA = "0x9EFC34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x9EFC38", Offset = "0x9EFC38", VA = "0x9EFC38")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x9EF688", Offset = "0x9EF688", VA = "0x9EF688")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x9EE870", Offset = "0x9EE870", VA = "0x9EE870")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x9EFD1C", Offset = "0x9EFD1C", VA = "0x9EFD1C")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x9F01BC", Offset = "0x9F01BC", VA = "0x9F01BC")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x9F0660", Offset = "0x9F0660", VA = "0x9F0660")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x9F0B00", Offset = "0x9F0B00", VA = "0x9F0B00")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x9F0FB4", Offset = "0x9F0FB4", VA = "0x9F0FB4")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x9F1454", Offset = "0x9F1454", VA = "0x9F1454")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x9F18F4", Offset = "0x9F18F4", VA = "0x9F18F4")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x9F1D9C", Offset = "0x9F1D9C", VA = "0x9F1D9C")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x9F2244", Offset = "0x9F2244", VA = "0x9F2244")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x9F26F0", Offset = "0x9F26F0", VA = "0x9F26F0")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x9F2B98", Offset = "0x9F2B98", VA = "0x9F2B98")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x9F3048", Offset = "0x9F3048", VA = "0x9F3048")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x9F34E8", Offset = "0x9F34E8", VA = "0x9F34E8")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x9F3994", Offset = "0x9F3994", VA = "0x9F3994")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x9F3E24", Offset = "0x9F3E24", VA = "0x9F3E24")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x9F42C0", Offset = "0x9F42C0", VA = "0x9F42C0")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x9F4648", Offset = "0x9F4648", VA = "0x9F4648")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x9F49C8", Offset = "0x9F49C8", VA = "0x9F49C8")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x9F4E78", Offset = "0x9F4E78", VA = "0x9F4E78")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x9F5324", Offset = "0x9F5324", VA = "0x9F5324")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x9F57C8", Offset = "0x9F57C8", VA = "0x9F57C8")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x9F5B54", Offset = "0x9F5B54", VA = "0x9F5B54")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x9F5CB8", Offset = "0x9F5CB8", VA = "0x9F5CB8")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x9F6034", Offset = "0x9F6034", VA = "0x9F6034")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x9F64C4", Offset = "0x9F64C4", VA = "0x9F64C4")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x9F6968", Offset = "0x9F6968", VA = "0x9F6968")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x9F6E00", Offset = "0x9F6E00", VA = "0x9F6E00")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x9F72A0", Offset = "0x9F72A0", VA = "0x9F72A0")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x9F7748", Offset = "0x9F7748", VA = "0x9F7748")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x9F7BEC", Offset = "0x9F7BEC", VA = "0x9F7BEC")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000103")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xD75670", Offset = "0xD75670", VA = "0xD75670")]
	private void Update()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xD75744", Offset = "0xD75744", VA = "0xD75744")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000104")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000060")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000491")]
		[Address(RVA = "0xD75D00", Offset = "0xD75D00", VA = "0xD75D00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xD75E14", Offset = "0xD75E14", VA = "0xD75E14")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000105")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000590")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000493")]
	[Address(RVA = "0xD75E24", Offset = "0xD75E24", VA = "0xD75E24")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xD75EBC", Offset = "0xD75EBC", VA = "0xD75EBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xD75FC8", Offset = "0xD75FC8", VA = "0xD75FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xD75FCC", Offset = "0xD75FCC", VA = "0xD75FCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xD75FD0", Offset = "0xD75FD0", VA = "0xD75FD0")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000106")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000107")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x400059F")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40005A5")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x92D478", Offset = "0x92D478", VA = "0x92D478")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x92D2A8", Offset = "0x92D2A8", VA = "0x92D2A8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x72E730", Offset = "0x72E730")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x92D4B0", Offset = "0x92D4B0", VA = "0x92D4B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x92D5E4", Offset = "0x92D5E4", VA = "0x92D5E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x92D6D8", Offset = "0x92D6D8", VA = "0x92D6D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x92E090", Offset = "0x92E090", VA = "0x92E090")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600049E")]
	[Address(RVA = "0x92D550", Offset = "0x92D550", VA = "0x92D550")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600049F")]
	[Address(RVA = "0x92D648", Offset = "0x92D648", VA = "0x92D648")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x92DDF8", Offset = "0x92DDF8", VA = "0x92DDF8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x92DE78", Offset = "0x92DE78", VA = "0x92DE78")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x92DF00", Offset = "0x92DF00", VA = "0x92DF00")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x92DF88", Offset = "0x92DF88", VA = "0x92DF88")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x92E008", Offset = "0x92E008", VA = "0x92E008")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x92EEC8", Offset = "0x92EEC8", VA = "0x92EEC8")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x92EF70", Offset = "0x92EF70", VA = "0x92EF70")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x92F018", Offset = "0x92F018", VA = "0x92F018")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000108")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000109")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xD75754", Offset = "0xD75754", VA = "0xD75754")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xD75758", Offset = "0xD75758", VA = "0xD75758")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xD7575C", Offset = "0xD7575C", VA = "0xD7575C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xD758C4", Offset = "0xD758C4", VA = "0xD758C4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xD757A8", Offset = "0xD757A8", VA = "0xD757A8")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xD75838", Offset = "0xD75838", VA = "0xD75838")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xD75910", Offset = "0xD75910", VA = "0xD75910")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xD759A8", Offset = "0xD759A8", VA = "0xD759A8")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xD75B10", Offset = "0xD75B10", VA = "0xD75B10")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xD75C78", Offset = "0xD75C78", VA = "0xD75C78")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200010A")]
public class Level2_Multi_Switch : MonoBehaviour
{
	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_numOfTriggerReceived;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_numOfTriggerNeeded;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public UnityEvent m_serverActionOnAllTriggerReceived;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x9426F4", Offset = "0x9426F4", VA = "0x9426F4")]
	public void AddTrigger()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x942728", Offset = "0x942728", VA = "0x942728")]
	public void RemoveTrigger()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x9427A0", Offset = "0x9427A0", VA = "0x9427A0")]
	public Level2_Multi_Switch()
	{
	}
}
[Token(Token = "0x200010B")]
public class AbilityMenu : MonoBehaviour
{
	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_player;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_leftRoot;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform m_rightRoot;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] m_controllersState;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] m_abilityRoots;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TutorialHandler m_tutorialHandler;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x9669EC", Offset = "0x9669EC", VA = "0x9669EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x966A60", Offset = "0x966A60", VA = "0x966A60")]
	private void ChangeLeftState(bool setIn)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x9671E4", Offset = "0x9671E4", VA = "0x9671E4")]
	private void ChangeRightState(bool setIn)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x966A98", Offset = "0x966A98", VA = "0x966A98")]
	private void SwitchMenu()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x967220", Offset = "0x967220", VA = "0x967220")]
	public void SwitchMoveMenu(bool activate)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x96788C", Offset = "0x96788C", VA = "0x96788C")]
	private void SwitchOnRightMenu(AbilityCaster.AbilityType abilityType)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x967920", Offset = "0x967920", VA = "0x967920")]
	private void SwitchOffRightMenu(AbilityCaster.AbilityType abilityType)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x967894", Offset = "0x967894", VA = "0x967894")]
	private void SwitchRightMenu(AbilityCaster.AbilityType abilityType, bool setOn)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x967928", Offset = "0x967928", VA = "0x967928")]
	private void ActivateRightMenu(Transform abilityRoot, bool setOn)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x967C4C", Offset = "0x967C4C", VA = "0x967C4C")]
	private void Move(Vector3 dir)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x967E68", Offset = "0x967E68", VA = "0x967E68")]
	public void SetRootPosition(int elementIx, Vector3 newPosition)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x967EE0", Offset = "0x967EE0", VA = "0x967EE0")]
	public AbilityMenu()
	{
	}
}
[Token(Token = "0x200010C")]
public class ArtifactFoundEventHandler : MonoBehaviour
{
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_airFoundEvent;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_earthFoundEvent;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_fireFoundEvent;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool m_waterFoundEvent;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NetCollectiveStat m_netCollectiveStat;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> m_setActiveList;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> m_setDeactiveList;

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x96A984", Offset = "0x96A984", VA = "0x96A984")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x96AD84", Offset = "0x96AD84", VA = "0x96AD84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x96AB7C", Offset = "0x96AB7C", VA = "0x96AB7C")]
	private void RefreshAreaSpellState(NetChestState.ArtifactType artifact)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x96AE20", Offset = "0x96AE20", VA = "0x96AE20")]
	public ArtifactFoundEventHandler()
	{
	}
}
[Token(Token = "0x200010D")]
public class CrystalLightHandler : MonoBehaviour
{
	[Token(Token = "0x200010E")]
	public enum Hand
	{
		[Token(Token = "0x40005C4")]
		Right,
		[Token(Token = "0x40005C5")]
		Left
	}

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_crystalVisual;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Hand m_hand;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light m_light;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728A6C", Offset = "0x728A6C")]
	public float m_lightIntensityMin;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 m_GfxScaleMin;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728A88", Offset = "0x728A88")]
	public float m_lightMaxLuminationDecreasingOffset;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_lightIntensityMax;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x9739A8", Offset = "0x9739A8", VA = "0x9739A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x9739DC", Offset = "0x9739DC", VA = "0x9739DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x973A00", Offset = "0x973A00", VA = "0x973A00")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x973CD4", Offset = "0x973CD4", VA = "0x973CD4")]
	public CrystalLightHandler()
	{
	}
}
[Token(Token = "0x200010F")]
public class NumOfPlayers : MonoBehaviour
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int m_numOfPlayers;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x9E8240", Offset = "0x9E8240", VA = "0x9E8240")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x9E8304", Offset = "0x9E8304", VA = "0x9E8304")]
	public NumOfPlayers()
	{
	}
}
[Token(Token = "0x2000110")]
public class PlayerData : MonoBehaviour
{
	[Token(Token = "0x2000111")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725148", Offset = "0x725148")]
	private sealed class <CachePlayerData>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerData <>4__this;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D7")]
			[Address(RVA = "0xA23CD0", Offset = "0xA23CD0", VA = "0xA23CD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004D9")]
			[Address(RVA = "0xA23D38", Offset = "0xA23D38", VA = "0xA23D38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xA23BA8", Offset = "0xA23BA8", VA = "0xA23BA8")]
		[DebuggerHidden]
		public <CachePlayerData>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xA23BDC", Offset = "0xA23BDC", VA = "0xA23BDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xA23BE0", Offset = "0xA23BE0", VA = "0xA23BE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xA23CD8", Offset = "0xA23CD8", VA = "0xA23CD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerStatistics.PlayerData m_playerData;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xA23B0C", Offset = "0xA23B0C", VA = "0xA23B0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xA23B38", Offset = "0xA23B38", VA = "0xA23B38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72E794", Offset = "0x72E794")]
	private IEnumerator CachePlayerData()
	{
		return null;
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xA23BD4", Offset = "0xA23BD4", VA = "0xA23BD4")]
	public PlayerData()
	{
	}
}
[Token(Token = "0x2000112")]
public class AbilityHandChecker : MonoBehaviour
{
	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<string> m_listenToTags;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_abilityMenu;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_focusPointInCollider;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x966074", Offset = "0x966074", VA = "0x966074")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x966158", Offset = "0x966158", VA = "0x966158")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x96637C", Offset = "0x96637C", VA = "0x96637C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x9662C8", Offset = "0x9662C8", VA = "0x9662C8")]
	public void ToggleFocusIndicator(bool enable)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x966614", Offset = "0x966614", VA = "0x966614")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x96697C", Offset = "0x96697C", VA = "0x96697C")]
	public AbilityHandChecker()
	{
	}
}
[Token(Token = "0x2000113")]
public class GestureChecker : MonoBehaviour
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_spellHolderLeft;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_spellHolderRight;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_activeLeft;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_activeRight;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_nextLeft;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject m_nextRight;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_fullLeft;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_fullRight;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_prohibitorObj;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_indicatorObj;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject m_CasterObj;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xAB0FE0", Offset = "0xAB0FE0", VA = "0xAB0FE0")]
	public void CheckGestureAny(GameObject actToCheck, bool isLeft)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xAB11C0", Offset = "0xAB11C0", VA = "0xAB11C0")]
	private void HandleResult(bool result)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xAB137C", Offset = "0xAB137C", VA = "0xAB137C")]
	private void ResetGesture()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xAB19F0", Offset = "0xAB19F0", VA = "0xAB19F0")]
	public GestureChecker()
	{
	}
}
[Token(Token = "0x2000114")]
public class GestureHandChecker : MonoBehaviour
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<string> m_listenToTags;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xAB19F8", Offset = "0xAB19F8", VA = "0xAB19F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xAB1BD0", Offset = "0xAB1BD0", VA = "0xAB1BD0")]
	public GestureHandChecker()
	{
	}
}
[Token(Token = "0x2000115")]
public class Sentinel : MonoBehaviour
{
	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_curserObject;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_casterObject;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_expandObject;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_constellationObject;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_validateMax;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_randCenter;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_glowOuter;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_glowInner;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 m_randBound;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public List<Vector3> m_polygonList;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int m_validatedNum;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_validatedRound;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 m_originalPos;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xA3210C", Offset = "0xA3210C", VA = "0xA3210C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xA321BC", Offset = "0xA321BC", VA = "0xA321BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xA321C4", Offset = "0xA321C4", VA = "0xA321C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xA329B4", Offset = "0xA329B4", VA = "0xA329B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xA329C8", Offset = "0xA329C8", VA = "0xA329C8")]
	private void SetNewPosition()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xA322B4", Offset = "0xA322B4", VA = "0xA322B4")]
	private void ExpandConstellation()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xA324B4", Offset = "0xA324B4", VA = "0xA324B4")]
	private void ValidatedRound(bool isValid)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xA32BC8", Offset = "0xA32BC8", VA = "0xA32BC8")]
	public Sentinel()
	{
	}
}
[Token(Token = "0x2000116")]
public class TransformChecker : MonoBehaviour
{
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_checkPosition;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_checkSqrDistance;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_listenToObject;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<string> m_listenToTags;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xA4C9F8", Offset = "0xA4C9F8", VA = "0xA4C9F8")]
	public bool CheckTransform(GameObject objectToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xA4CA0C", Offset = "0xA4CA0C", VA = "0xA4CA0C")]
	private bool CheckPosition(GameObject objectToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xA4CB3C", Offset = "0xA4CB3C", VA = "0xA4CB3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xA4CC58", Offset = "0xA4CC58", VA = "0xA4CC58")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xA4CDA0", Offset = "0xA4CDA0", VA = "0xA4CDA0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xA4CEBC", Offset = "0xA4CEBC", VA = "0xA4CEBC")]
	private void HandEnter()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xA4CFD0", Offset = "0xA4CFD0", VA = "0xA4CFD0")]
	private void HandExit()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xA4D078", Offset = "0xA4D078", VA = "0xA4D078")]
	private void CandidateEnter()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xA4D164", Offset = "0xA4D164", VA = "0xA4D164")]
	private void CandidateExit()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xA4D24C", Offset = "0xA4D24C", VA = "0xA4D24C")]
	public TransformChecker()
	{
	}
}
[Token(Token = "0x2000117")]
public class AccelerationHandler : MonoBehaviour
{
	[Token(Token = "0x2000118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725158", Offset = "0x725158")]
	private sealed class <ScaleSpeed>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AccelerationHandler <>4__this;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool scaleUp;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fromMoveMul>5__2;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <toMoveMul>5__3;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <scaleTime>5__4;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <elapsedTime>5__5;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000507")]
			[Address(RVA = "0x969094", Offset = "0x969094", VA = "0x969094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000509")]
			[Address(RVA = "0x9690FC", Offset = "0x9690FC", VA = "0x9690FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x9687A8", Offset = "0x9687A8", VA = "0x9687A8")]
		[DebuggerHidden]
		public <ScaleSpeed>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x968EB8", Offset = "0x968EB8", VA = "0x968EB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x968EBC", Offset = "0x968EBC", VA = "0x968EBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x96909C", Offset = "0x96909C", VA = "0x96909C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725168", Offset = "0x725168")]
	private sealed class <FadeBackwardCD>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AccelerationHandler <>4__this;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050D")]
			[Address(RVA = "0x968E48", Offset = "0x968E48", VA = "0x968E48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600050F")]
			[Address(RVA = "0x968EB0", Offset = "0x968EB0", VA = "0x968EB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x968884", Offset = "0x968884", VA = "0x968884")]
		[DebuggerHidden]
		public <FadeBackwardCD>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x968C9C", Offset = "0x968C9C", VA = "0x968C9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x968CA0", Offset = "0x968CA0", VA = "0x968CA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x968E50", Offset = "0x968E50", VA = "0x968E50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725178", Offset = "0x725178")]
	private sealed class <FadeBackward>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AccelerationHandler <>4__this;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startMove>5__2;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <endMove>5__3;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x17000067")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000513")]
			[Address(RVA = "0x968C2C", Offset = "0x968C2C", VA = "0x968C2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000515")]
			[Address(RVA = "0x968C94", Offset = "0x968C94", VA = "0x968C94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x9688B0", Offset = "0x9688B0", VA = "0x9688B0")]
		[DebuggerHidden]
		public <FadeBackward>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x968968", Offset = "0x968968", VA = "0x968968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x96896C", Offset = "0x96896C", VA = "0x96896C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x968C34", Offset = "0x968C34", VA = "0x968C34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_useFade;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_pipeSightRoot;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_pipeSightMoveMax;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 m_pipeSightScaleMax;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject m_pipeSight;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float m_upScaleTime;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728BD8", Offset = "0x728BD8")]
	private float m_downScaleTime;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_startMoveMul;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_endMoveMul;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_inSpeedScale;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 m_oldPos;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_actSqrMagnitude;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_epsilon;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_fadeBackwardCD;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float m_fadeBackwardTime;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_fadeBackwardTimeMul;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_fadeBackward;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool m_onCooldown;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	private bool m_isMoving;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine m_fadeBackwardCoroutine;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine m_fadeBackwardCDCoroutine;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CharacterController m_characterController;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x967F6C", Offset = "0x967F6C", VA = "0x967F6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x968280", Offset = "0x968280", VA = "0x968280")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x9682D0", Offset = "0x9682D0", VA = "0x9682D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x96861C", Offset = "0x96861C", VA = "0x96861C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x9686A0", Offset = "0x9686A0", VA = "0x9686A0")]
	public void StartScaleSpeed(bool scaleUp)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x968724", Offset = "0x968724", VA = "0x968724")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72E848", Offset = "0x72E848")]
	private IEnumerator ScaleSpeed(bool scaleUp)
	{
		return null;
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x9687D4", Offset = "0x9687D4", VA = "0x9687D4")]
	public void SwitchUseFade()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x9685AC", Offset = "0x9685AC", VA = "0x9685AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72E8AC", Offset = "0x72E8AC")]
	private IEnumerator FadeBackwardCD()
	{
		return null;
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x968210", Offset = "0x968210", VA = "0x968210")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72E910", Offset = "0x72E910")]
	private IEnumerator FadeBackward()
	{
		return null;
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x968190", Offset = "0x968190", VA = "0x968190")]
	public bool GetUseFadeByHood()
	{
		return default(bool);
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x96804C", Offset = "0x96804C", VA = "0x96804C")]
	private void SetSwitcherState()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x9688DC", Offset = "0x9688DC", VA = "0x9688DC")]
	public AccelerationHandler()
	{
	}
}
[Token(Token = "0x200011B")]
public class ControllerInputHandler : MonoBehaviour
{
	[Token(Token = "0x200011C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725188", Offset = "0x725188")]
	private sealed class <Selection>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string strTag;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float vibrationLength;

		[Token(Token = "0x17000069")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000525")]
			[Address(RVA = "0x97332C", Offset = "0x97332C", VA = "0x97332C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000527")]
			[Address(RVA = "0x973394", Offset = "0x973394", VA = "0x973394", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x973120", Offset = "0x973120", VA = "0x973120")]
		[DebuggerHidden]
		public <Selection>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x973154", Offset = "0x973154", VA = "0x973154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x973158", Offset = "0x973158", VA = "0x973158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x973334", Offset = "0x973334", VA = "0x973334", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnLeftXTrigger;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnLeftYTrigger;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnRightATrigger;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnRightBTrigger;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnLeftHandTrigger;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnLeftHandTriggerOff;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_leftHandTriggerOn;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnRightHandTrigger;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnRightHandTriggerOff;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnLeftIndexTrigger;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OnRightIndexTrigger;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_rightIndexTriggerOn;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool m_primaryThumbStickOn;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_localPlayer;

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x972664", Offset = "0x972664", VA = "0x972664")]
	private void Update()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x972698", Offset = "0x972698", VA = "0x972698")]
	private void CheckABXYButtons()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x9727FC", Offset = "0x9727FC", VA = "0x9727FC")]
	private void CheckHandTriggers()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x972C1C", Offset = "0x972C1C", VA = "0x972C1C")]
	private void CheckIndexTriggers()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x972D30", Offset = "0x972D30", VA = "0x972D30")]
	private void CheckThumbSticks()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x972E64", Offset = "0x972E64", VA = "0x972E64")]
	public void OnManaDepleted()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x972E80", Offset = "0x972E80", VA = "0x972E80")]
	public void MenuSelection(GameObject otherObject)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x972F64", Offset = "0x972F64", VA = "0x972F64")]
	public void MenuSelection(string strTag, float vibrationLength)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x9730B4", Offset = "0x9730B4", VA = "0x9730B4")]
	public void VibrationOnFocusHand(float vibrationLength)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x96BDD4", Offset = "0x96BDD4", VA = "0x96BDD4")]
	public void Vibrate(string hand, float vibrationLength)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x973034", Offset = "0x973034", VA = "0x973034")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72EA64", Offset = "0x72EA64")]
	private IEnumerator Selection(string strTag, float vibrationLength)
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x97314C", Offset = "0x97314C", VA = "0x97314C")]
	public ControllerInputHandler()
	{
	}
}
[Token(Token = "0x200011D")]
public class DashController : MonoBehaviour
{
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725198", Offset = "0x725198")]
	private sealed class <DoDash>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DashController <>4__this;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 endPoint;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsed>5__2;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startPoint>5__3;

		[Token(Token = "0x1700006B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600052F")]
			[Address(RVA = "0x977020", Offset = "0x977020", VA = "0x977020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000531")]
			[Address(RVA = "0x977088", Offset = "0x977088", VA = "0x977088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x976E24", Offset = "0x976E24", VA = "0x976E24")]
		[DebuggerHidden]
		public <DoDash>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x976E70", Offset = "0x976E70", VA = "0x976E70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x976E74", Offset = "0x976E74", VA = "0x976E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x977028", Offset = "0x977028", VA = "0x977028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float minDashRange;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxDashRange;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float dashTime;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator maskAnimator;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cameraRigRoot;

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x976C34", Offset = "0x976C34", VA = "0x976C34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x976C6C", Offset = "0x976C6C", VA = "0x976C6C")]
	public void TryDash()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x976D90", Offset = "0x976D90", VA = "0x976D90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72EB18", Offset = "0x72EB18")]
	private IEnumerator DoDash(Vector3 endPoint)
	{
		return null;
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x976E50", Offset = "0x976E50", VA = "0x976E50")]
	public DashController()
	{
	}
}
[Token(Token = "0x200011F")]
public class ResourceRing : MonoBehaviour
{
	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_maxResource;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_actResource;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ringRadius;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_shardPrefab;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xA2CE20", Offset = "0xA2CE20", VA = "0xA2CE20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xA2D2F0", Offset = "0xA2D2F0", VA = "0xA2D2F0")]
	public void UpdateSectors(int resourceAmount)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xA2CECC", Offset = "0xA2CECC", VA = "0xA2CECC")]
	private void InstantiateSectorsTutorial()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xA2D138", Offset = "0xA2D138", VA = "0xA2D138")]
	public void UpdateSectorsTutorial()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xA2D474", Offset = "0xA2D474", VA = "0xA2D474")]
	public ResourceRing()
	{
	}
}
[Token(Token = "0x2000120")]
public class ResourceText : MonoBehaviour
{
	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_maxResource;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_actResource;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_textObject;

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xA2D48C", Offset = "0xA2D48C", VA = "0xA2D48C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xA2D628", Offset = "0xA2D628", VA = "0xA2D628")]
	public void UpdateText(int resourceAmount)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xA2D530", Offset = "0xA2D530", VA = "0xA2D530")]
	public void UpdateTextTutorial()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xA2D6E4", Offset = "0xA2D6E4", VA = "0xA2D6E4")]
	public ResourceText()
	{
	}
}
[Token(Token = "0x2000121")]
public class PortalCorrector : MonoBehaviour
{
	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_correctedPos;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TeleportationController m_teleportationController;

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xA25908", Offset = "0xA25908", VA = "0xA25908")]
	private void Start()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xA25978", Offset = "0xA25978", VA = "0xA25978")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xA25A1C", Offset = "0xA25A1C", VA = "0xA25A1C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xA25AC0", Offset = "0xA25AC0", VA = "0xA25AC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xA25B54", Offset = "0xA25B54", VA = "0xA25B54")]
	public PortalCorrector()
	{
	}
}
[Token(Token = "0x2000122")]
public class PortalCubeStateHandler : MonoBehaviour
{
	[Token(Token = "0x2000123")]
	public enum State
	{
		[Token(Token = "0x400063B")]
		Idle,
		[Token(Token = "0x400063C")]
		MovingInvalidPort,
		[Token(Token = "0x400063D")]
		MovingValidPort,
		[Token(Token = "0x400063E")]
		Absorbing,
		[Token(Token = "0x400063F")]
		Porting,
		[Token(Token = "0x4000640")]
		Unluck
	}

	[Token(Token = "0x2000124")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7251A8", Offset = "0x7251A8")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isUnluckStateEnabled;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PortalCubeStateHandler <>4__this;

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xA25F64", Offset = "0xA25F64", VA = "0xA25F64")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xA26048", Offset = "0xA26048", VA = "0xA26048")]
		internal void <Start>b__1(Transform obj)
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xA26084", Offset = "0xA26084", VA = "0xA26084")]
		internal void <Start>b__2(State state)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000125")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7251B8", Offset = "0x7251B8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__6_0;

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xA25FD8", Offset = "0xA25FD8", VA = "0xA25FD8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xA25FE0", Offset = "0xA25FE0", VA = "0xA25FE0")]
		internal bool <Start>b__6_0(Transform obj)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private State m_state;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_hiearchyOfStates;

	[Token(Token = "0x1700006D")]
	public State GetState
	{
		[Token(Token = "0x6000540")]
		[Address(RVA = "0xA25B5C", Offset = "0xA25B5C", VA = "0xA25B5C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xA25B64", Offset = "0xA25B64", VA = "0xA25B64")]
	public void ChangeStateTo(State state)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xA25CCC", Offset = "0xA25CCC", VA = "0xA25CCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xA25F6C", Offset = "0xA25F6C", VA = "0xA25F6C")]
	public PortalCubeStateHandler()
	{
	}
}
[Token(Token = "0x2000126")]
public class SimplePlayerTeleporter : MonoBehaviour
{
	[Token(Token = "0x2000127")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7251C8", Offset = "0x7251C8")]
	private sealed class <DoTeleportWithBlink>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimplePlayerTeleporter <>4__this;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000551")]
			[Address(RVA = "0xA34988", Offset = "0xA34988", VA = "0xA34988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000553")]
			[Address(RVA = "0xA349F0", Offset = "0xA349F0", VA = "0xA349F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xA346BC", Offset = "0xA346BC", VA = "0xA346BC")]
		[DebuggerHidden]
		public <DoTeleportWithBlink>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xA346F0", Offset = "0xA346F0", VA = "0xA346F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xA346F4", Offset = "0xA346F4", VA = "0xA346F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xA34990", Offset = "0xA34990", VA = "0xA34990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_blinkObject;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_target;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_yRot;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_teleportInEffect;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject m_teleportOutEffect;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NavMeshAgent m_navMeshAgent;

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xA34548", Offset = "0xA34548", VA = "0xA34548")]
	private void Start()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xA34620", Offset = "0xA34620", VA = "0xA34620")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xA3464C", Offset = "0xA3464C", VA = "0xA3464C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72EBCC", Offset = "0x72EBCC")]
	private IEnumerator DoTeleportWithBlink()
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xA346E8", Offset = "0xA346E8", VA = "0xA346E8")]
	public SimplePlayerTeleporter()
	{
	}
}
[Token(Token = "0x2000128")]
public class TeleportationController : MonoBehaviour
{
	[Token(Token = "0x2000129")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7251D8", Offset = "0x7251D8")]
	private sealed class <WaitForAFrameToRegisterBeforeRenderCallBack>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportationController <>4__this;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600056D")]
			[Address(RVA = "0xA49C84", Offset = "0xA49C84", VA = "0xA49C84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600056F")]
			[Address(RVA = "0xA49CEC", Offset = "0xA49CEC", VA = "0xA49CEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0xA486E0", Offset = "0xA486E0", VA = "0xA486E0")]
		[DebuggerHidden]
		public <WaitForAFrameToRegisterBeforeRenderCallBack>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xA49BD8", Offset = "0xA49BD8", VA = "0xA49BD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xA49BDC", Offset = "0xA49BDC", VA = "0xA49BDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0xA49C8C", Offset = "0xA49C8C", VA = "0xA49C8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7251E8", Offset = "0x7251E8")]
	private sealed class <CheckPortAfterTime>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportationController <>4__this;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000573")]
			[Address(RVA = "0xA49B68", Offset = "0xA49B68", VA = "0xA49B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000575")]
			[Address(RVA = "0xA49BD0", Offset = "0xA49BD0", VA = "0xA49BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0xA49030", Offset = "0xA49030", VA = "0xA49030")]
		[DebuggerHidden]
		public <CheckPortAfterTime>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xA49A0C", Offset = "0xA49A0C", VA = "0xA49A0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xA49A10", Offset = "0xA49A10", VA = "0xA49A10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xA49B70", Offset = "0xA49B70", VA = "0xA49B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7251F8", Offset = "0x7251F8")]
	private sealed class <ChangeStateToIdleLater>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportationController <>4__this;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000579")]
			[Address(RVA = "0xA4999C", Offset = "0xA4999C", VA = "0xA4999C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057B")]
			[Address(RVA = "0xA49A04", Offset = "0xA49A04", VA = "0xA49A04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xA49480", Offset = "0xA49480", VA = "0xA49480")]
		[DebuggerHidden]
		public <ChangeStateToIdleLater>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xA498BC", Offset = "0xA498BC", VA = "0xA498BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xA498C0", Offset = "0xA498C0", VA = "0xA498C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xA499A4", Offset = "0xA499A4", VA = "0xA499A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725208", Offset = "0x725208")]
	private sealed class <WaitForBlink>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportationController <>4__this;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 pos;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057F")]
			[Address(RVA = "0xA4A11C", Offset = "0xA4A11C", VA = "0xA4A11C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000581")]
			[Address(RVA = "0xA4A184", Offset = "0xA4A184", VA = "0xA4A184", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0xA49868", Offset = "0xA49868", VA = "0xA49868")]
		[DebuggerHidden]
		public <WaitForBlink>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xA49CF4", Offset = "0xA49CF4", VA = "0xA49CF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xA49CF8", Offset = "0xA49CF8", VA = "0xA49CF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xA4A124", Offset = "0xA4A124", VA = "0xA4A124", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform m_correctedPosition;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_enableMoreLog;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ILogger m_compLogger;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PortalCubeStateHandler m_portalCube;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_blinkObject;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728CC4", Offset = "0x728CC4")]
	public float m_navMeshSearchRange;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728CDC", Offset = "0x728CDC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728CDC", Offset = "0x728CDC")]
	public float m_portalCubeTimeout;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector3 m_offsetFromHand;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728D40", Offset = "0x728D40")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728D40", Offset = "0x728D40")]
	private float m_baseForce;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728DA8", Offset = "0x728DA8")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728DA8", Offset = "0x728DA8")]
	private float m_forceToPress;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject m_cubeDropSound;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject m_teleportInEffect;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject m_teleportOutEffect;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody m_rigidBody;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject m_leftHand;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine m_checkPort;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private NavMeshAgent m_navMeshAgent;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool m_isPortalCubeActiveInIdleState;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool m_isUnluckStateEnabled;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 m_origiPortalCubeScale;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 m_minPortalCubeScale;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_collectedForce;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool m_debugThrow;

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xA482C4", Offset = "0xA482C4", VA = "0xA482C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xA48340", Offset = "0xA48340", VA = "0xA48340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xA485D0", Offset = "0xA485D0", VA = "0xA485D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xA48560", Offset = "0xA48560", VA = "0xA48560")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72EC80", Offset = "0x72EC80")]
	private IEnumerator WaitForAFrameToRegisterBeforeRenderCallBack()
	{
		return null;
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xA4870C", Offset = "0xA4870C", VA = "0xA4870C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xA48780", Offset = "0xA48780", VA = "0xA48780")]
	private void OnBeforeRenderCallback()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xA48FC0", Offset = "0xA48FC0", VA = "0xA48FC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72ECE4", Offset = "0x72ECE4")]
	private IEnumerator CheckPortAfterTime()
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xA4905C", Offset = "0xA4905C", VA = "0xA4905C")]
	private void StopPortalCube()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xA49118", Offset = "0xA49118", VA = "0xA49118")]
	private void CheckPort()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xA4921C", Offset = "0xA4921C", VA = "0xA4921C")]
	private bool IsCubeOnUnluckSide()
	{
		return default(bool);
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xA48644", Offset = "0xA48644", VA = "0xA48644")]
	public void DissolvePortalCube()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xA49474", Offset = "0xA49474", VA = "0xA49474")]
	public void SetActivePortalCubeInIdleState(bool value)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xA49350", Offset = "0xA49350", VA = "0xA49350")]
	private void DoUnluck()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xA49428", Offset = "0xA49428", VA = "0xA49428")]
	private void AbsorbePortalCube()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xA48670", Offset = "0xA48670", VA = "0xA48670")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72ED48", Offset = "0x72ED48")]
	private IEnumerator ChangeStateToIdleLater()
	{
		return null;
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xA494AC", Offset = "0xA494AC", VA = "0xA494AC")]
	public void SetCorrectedPosition(Transform pos)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xA494D8", Offset = "0xA494D8", VA = "0xA494D8")]
	public void UnsetCorrectedPosition(Transform pos)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xA49560", Offset = "0xA49560", VA = "0xA49560")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xA48ED4", Offset = "0xA48ED4", VA = "0xA48ED4")]
	private bool SamplePosition(Vector3 samplePoint, out Vector3 foundPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xA4939C", Offset = "0xA4939C", VA = "0xA4939C")]
	public void PortPlayer(Vector3 pos)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xA497D4", Offset = "0xA497D4", VA = "0xA497D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72EDAC", Offset = "0x72EDAC")]
	private IEnumerator WaitForBlink(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xA49894", Offset = "0xA49894", VA = "0xA49894")]
	public TeleportationController()
	{
	}
}
[Token(Token = "0x200012D")]
public class VibrationHandler : MonoBehaviour
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_eventSystem;

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xAFF79C", Offset = "0xAFF79C", VA = "0xAFF79C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xAFF7F4", Offset = "0xAFF7F4", VA = "0xAFF7F4")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xAFF8E8", Offset = "0xAFF8E8", VA = "0xAFF8E8")]
	public VibrationHandler()
	{
	}
}
[Token(Token = "0x200012E")]
public class CheckpointChooser : MonoBehaviour
{
	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_currentActiveCheckPoint;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x971258", Offset = "0x971258", VA = "0x971258")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x9714E4", Offset = "0x9714E4", VA = "0x9714E4")]
	public Vector3 GetNextCheckpoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x971520", Offset = "0x971520", VA = "0x971520")]
	private void ResetCheckPoint()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x971608", Offset = "0x971608", VA = "0x971608")]
	public CheckpointChooser()
	{
	}
}
[Token(Token = "0x200012F")]
public class CheckpointFollowerNavMeshAgent : MonoBehaviour
{
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725218", Offset = "0x725218")]
	private sealed class <Reroute>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckpointFollowerNavMeshAgent <>4__this;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <checkPeriod>5__2;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <restingPeriod>5__3;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000595")]
			[Address(RVA = "0x971AB4", Offset = "0x971AB4", VA = "0x971AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000597")]
			[Address(RVA = "0x971B1C", Offset = "0x971B1C", VA = "0x971B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x9718EC", Offset = "0x9718EC", VA = "0x9718EC")]
		[DebuggerHidden]
		public <Reroute>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x971930", Offset = "0x971930", VA = "0x971930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x971934", Offset = "0x971934", VA = "0x971934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x971ABC", Offset = "0x971ABC", VA = "0x971ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CheckpointChooser m_checkpointHandler;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728E50", Offset = "0x728E50")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728E50", Offset = "0x728E50")]
	private float m_restingTime;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public UnityEvent m_onTargetReached;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool m_needStart;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine m_rerouter;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NavMeshAgent agent;

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x971610", Offset = "0x971610", VA = "0x971610")]
	private void Awake()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x971668", Offset = "0x971668", VA = "0x971668")]
	private void Start()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x9716CC", Offset = "0x9716CC", VA = "0x9716CC")]
	public void Stop()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x97171C", Offset = "0x97171C", VA = "0x97171C")]
	public bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x971678", Offset = "0x971678", VA = "0x971678")]
	public void Restart()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x97179C", Offset = "0x97179C", VA = "0x97179C")]
	public bool RedirectAgent(Vector3 target)
	{
		return default(bool);
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x9718B0", Offset = "0x9718B0", VA = "0x9718B0")]
	public void WarpAgentToNextPos()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x97172C", Offset = "0x97172C", VA = "0x97172C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72EF50", Offset = "0x72EF50")]
	private IEnumerator Reroute()
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x971918", Offset = "0x971918", VA = "0x971918")]
	public CheckpointFollowerNavMeshAgent()
	{
	}
}
[Token(Token = "0x2000131")]
public class ElementalController : MonoBehaviour
{
	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent m_navMeshAgent;

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xAAA71C", Offset = "0xAAA71C", VA = "0xAAA71C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xAAA774", Offset = "0xAAA774", VA = "0xAAA774")]
	public void ImpactByBattleSpell(GameObject battleSpell)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xAAA810", Offset = "0xAAA810", VA = "0xAAA810")]
	public void DetectPlayer(GameObject player)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xAAA99C", Offset = "0xAAA99C", VA = "0xAAA99C")]
	public ElementalController()
	{
	}
}
[Token(Token = "0x2000132")]
public class FireElementalController : MonoBehaviour
{
	[Token(Token = "0x2000133")]
	private class InnerState
	{
		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected FireElementalController m_owner;

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xAAEA84", Offset = "0xAAEA84", VA = "0xAAEA84", Slot = "4")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xAAEA88", Offset = "0xAAEA88", VA = "0xAAEA88", Slot = "5")]
		public virtual void OnTargetReached()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xAAEA8C", Offset = "0xAAEA8C", VA = "0xAAEA8C", Slot = "6")]
		public virtual void OnSpeedChanged(float speed)
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xAAEA90", Offset = "0xAAEA90", VA = "0xAAEA90", Slot = "7")]
		public virtual void OnPlayerImpact(GameObject other)
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xAAEA94", Offset = "0xAAEA94", VA = "0xAAEA94", Slot = "8")]
		public virtual void OnPlayerDetected(GameObject player)
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xAAEA98", Offset = "0xAAEA98", VA = "0xAAEA98", Slot = "9")]
		public virtual void OnBattleSpellImpact(GameObject battleSpell)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xAAEA9C", Offset = "0xAAEA9C", VA = "0xAAEA9C", Slot = "10")]
		public virtual void Absorb()
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xAAEB08", Offset = "0xAAEB08", VA = "0xAAEB08", Slot = "11")]
		public virtual void Revive()
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xAADA7C", Offset = "0xAADA7C", VA = "0xAADA7C")]
		protected void StartCoroutine(IEnumerator routin)
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xAAD9BC", Offset = "0xAAD9BC", VA = "0xAAD9BC")]
		public InnerState()
		{
		}
	}

	[Token(Token = "0x2000134")]
	private class InactiveInnerState : InnerState
	{
		[Token(Token = "0x2000135")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725228", Offset = "0x725228")]
		private sealed class <ChangeStateToIdleLater>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400068A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InactiveInnerState <>4__this;

			[Token(Token = "0x1700007A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005B8")]
				[Address(RVA = "0xAAEA14", Offset = "0xAAEA14", VA = "0xAAEA14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005BA")]
				[Address(RVA = "0xAAEA7C", Offset = "0xAAEA7C", VA = "0xAAEA7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005B5")]
			[Address(RVA = "0xAAE8F4", Offset = "0xAAE8F4", VA = "0xAAE8F4")]
			[DebuggerHidden]
			public <ChangeStateToIdleLater>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60005B6")]
			[Address(RVA = "0xAAE920", Offset = "0xAAE920", VA = "0xAAE920", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005B7")]
			[Address(RVA = "0xAAE924", Offset = "0xAAE924", VA = "0xAAE924", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005B9")]
			[Address(RVA = "0xAAEA1C", Offset = "0xAAEA1C", VA = "0xAAEA1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xAAD81C", Offset = "0xAAD81C", VA = "0xAAD81C")]
		public InactiveInnerState(FireElementalController owner)
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xAAE884", Offset = "0xAAE884", VA = "0xAAE884")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F004", Offset = "0x72F004")]
		private IEnumerator ChangeStateToIdleLater()
		{
			return null;
		}
	}

	[Token(Token = "0x2000136")]
	private class IdleInnerState : InnerState
	{
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xAADBD4", Offset = "0xAADBD4", VA = "0xAADBD4")]
		public IdleInnerState(FireElementalController owner)
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xAAE2F4", Offset = "0xAAE2F4", VA = "0xAAE2F4", Slot = "6")]
		public override void OnSpeedChanged(float speed)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xAAE380", Offset = "0xAAE380", VA = "0xAAE380", Slot = "7")]
		public override void OnPlayerImpact(GameObject other)
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xAAE3EC", Offset = "0xAAE3EC", VA = "0xAAE3EC", Slot = "9")]
		public override void OnBattleSpellImpact(GameObject battleSpell)
		{
		}
	}

	[Token(Token = "0x2000137")]
	private class MovingInnerState : InnerState
	{
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xAAE20C", Offset = "0xAAE20C", VA = "0xAAE20C")]
		public MovingInnerState(FireElementalController owner)
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xAAEB0C", Offset = "0xAAEB0C", VA = "0xAAEB0C", Slot = "6")]
		public override void OnSpeedChanged(float speed)
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xAAEB98", Offset = "0xAAEB98", VA = "0xAAEB98", Slot = "8")]
		public override void OnPlayerDetected(GameObject player)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xAAEC54", Offset = "0xAAEC54", VA = "0xAAEC54", Slot = "7")]
		public override void OnPlayerImpact(GameObject other)
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xAAECC0", Offset = "0xAAECC0", VA = "0xAAECC0", Slot = "9")]
		public override void OnBattleSpellImpact(GameObject battleSpell)
		{
		}
	}

	[Token(Token = "0x2000138")]
	private class BlindInnerState : InnerState
	{
		[Token(Token = "0x2000139")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725238", Offset = "0x725238")]
		private sealed class <ChangeStateToMovingLater>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400068B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400068C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400068D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BlindInnerState <>4__this;

			[Token(Token = "0x1700007C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005C9")]
				[Address(RVA = "0xAAE284", Offset = "0xAAE284", VA = "0xAAE284", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005CB")]
				[Address(RVA = "0xAAE2EC", Offset = "0xAAE2EC", VA = "0xAAE2EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005C6")]
			[Address(RVA = "0xAAE0EC", Offset = "0xAAE0EC", VA = "0xAAE0EC")]
			[DebuggerHidden]
			public <ChangeStateToMovingLater>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60005C7")]
			[Address(RVA = "0xAAE118", Offset = "0xAAE118", VA = "0xAAE118", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005C8")]
			[Address(RVA = "0xAAE11C", Offset = "0xAAE11C", VA = "0xAAE11C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005CA")]
			[Address(RVA = "0xAAE28C", Offset = "0xAAE28C", VA = "0xAAE28C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xAADE04", Offset = "0xAADE04", VA = "0xAADE04")]
		public BlindInnerState(FireElementalController owner)
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xAAE07C", Offset = "0xAAE07C", VA = "0xAAE07C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F0B8", Offset = "0x72F0B8")]
		private IEnumerator ChangeStateToMovingLater()
		{
			return null;
		}
	}

	[Token(Token = "0x200013A")]
	private class AttackingInnerState : InnerState
	{
		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SyncPlayer m_targetedPlayer;

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xAADCEC", Offset = "0xAADCEC", VA = "0xAADCEC")]
		public AttackingInnerState(FireElementalController owner, SyncPlayer target)
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xAADD68", Offset = "0xAADD68", VA = "0xAADD68", Slot = "4")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xAADEC0", Offset = "0xAADEC0", VA = "0xAADEC0", Slot = "7")]
		public override void OnPlayerImpact(GameObject other)
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xAAE010", Offset = "0xAAE010", VA = "0xAAE010", Slot = "9")]
		public override void OnBattleSpellImpact(GameObject battleSpell)
		{
		}
	}

	[Token(Token = "0x200013B")]
	private class ImpactingInnerState : InnerState
	{
		[Token(Token = "0x200013C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725248", Offset = "0x725248")]
		private sealed class <ChangeStateToInactiveLater>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400068F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImpactingInnerState <>4__this;

			[Token(Token = "0x1700007E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005D7")]
				[Address(RVA = "0xAAE814", Offset = "0xAAE814", VA = "0xAAE814", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700007F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005D9")]
				[Address(RVA = "0xAAE87C", Offset = "0xAAE87C", VA = "0xAAE87C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005D4")]
			[Address(RVA = "0xAAE4C8", Offset = "0xAAE4C8", VA = "0xAAE4C8")]
			[DebuggerHidden]
			public <ChangeStateToInactiveLater>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60005D5")]
			[Address(RVA = "0xAAE740", Offset = "0xAAE740", VA = "0xAAE740", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005D6")]
			[Address(RVA = "0xAAE744", Offset = "0xAAE744", VA = "0xAAE744", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005D8")]
			[Address(RVA = "0xAAE81C", Offset = "0xAAE81C", VA = "0xAAE81C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200013D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725258", Offset = "0x725258")]
		private sealed class <ChangeStateToIdleLater>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImpactingInnerState <>4__this;

			[Token(Token = "0x17000080")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005DD")]
				[Address(RVA = "0xAAE6D0", Offset = "0xAAE6D0", VA = "0xAAE6D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000081")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005DF")]
				[Address(RVA = "0xAAE738", Offset = "0xAAE738", VA = "0xAAE738", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005DA")]
			[Address(RVA = "0xAAE5AC", Offset = "0xAAE5AC", VA = "0xAAE5AC")]
			[DebuggerHidden]
			public <ChangeStateToIdleLater>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60005DB")]
			[Address(RVA = "0xAAE5D8", Offset = "0xAAE5D8", VA = "0xAAE5D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005DC")]
			[Address(RVA = "0xAAE5DC", Offset = "0xAAE5DC", VA = "0xAAE5DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005DE")]
			[Address(RVA = "0xAAE6D8", Offset = "0xAAE6D8", VA = "0xAAE6D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xAADF2C", Offset = "0xAADF2C", VA = "0xAADF2C")]
		public ImpactingInnerState(FireElementalController owner)
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xAAE458", Offset = "0xAAE458", VA = "0xAAE458")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F16C", Offset = "0x72F16C")]
		private IEnumerator ChangeStateToInactiveLater()
		{
			return null;
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xAAE4F4", Offset = "0xAAE4F4", VA = "0xAAE4F4", Slot = "11")]
		public override void Revive()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xAAE53C", Offset = "0xAAE53C", VA = "0xAAE53C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F1D0", Offset = "0x72F1D0")]
		private IEnumerator ChangeStateToIdleLater()
		{
			return null;
		}
	}

	[Token(Token = "0x200013E")]
	private class AbsorbingInnerState : InnerState
	{
		[Token(Token = "0x200013F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725268", Offset = "0x725268")]
		private sealed class <ChangeStateToIdleLater>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000696")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000697")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AbsorbingInnerState <>4__this;

			[Token(Token = "0x17000082")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005E6")]
				[Address(RVA = "0xAADC7C", Offset = "0xAADC7C", VA = "0xAADC7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000083")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005E8")]
				[Address(RVA = "0xAADCE4", Offset = "0xAADCE4", VA = "0xAADCE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005E3")]
			[Address(RVA = "0xAADAB0", Offset = "0xAADAB0", VA = "0xAADAB0")]
			[DebuggerHidden]
			public <ChangeStateToIdleLater>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60005E4")]
			[Address(RVA = "0xAADADC", Offset = "0xAADADC", VA = "0xAADADC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005E5")]
			[Address(RVA = "0xAADAE0", Offset = "0xAADAE0", VA = "0xAADAE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005E7")]
			[Address(RVA = "0xAADC84", Offset = "0xAADC84", VA = "0xAADC84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xAAD904", Offset = "0xAAD904", VA = "0xAAD904")]
		public AbsorbingInnerState(FireElementalController owner)
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xAAD9C4", Offset = "0xAAD9C4", VA = "0xAAD9C4", Slot = "11")]
		public override void Revive()
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xAADA0C", Offset = "0xAADA0C", VA = "0xAADA0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F2D4", Offset = "0x72F2D4")]
		private IEnumerator ChangeStateToIdleLater()
		{
			return null;
		}
	}

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_agressive;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_autoRevive;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InteractionEvent m_onStateAfterImpacting;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CheckpointFollowerNavMeshAgent m_checkpointFollower;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NetFireElementalController m_netSyncher;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InnerState m_innerState;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine m_stateCoroutine;

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xAAD394", Offset = "0xAAD394", VA = "0xAAD394")]
	public void OnSpeedChanged(float speed)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xAAD3B4", Offset = "0xAAD3B4", VA = "0xAAD3B4")]
	public void OnPlayerDetected(GameObject player)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xAAD3D4", Offset = "0xAAD3D4", VA = "0xAAD3D4")]
	public void OnPlayerImpact(GameObject player)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xAAD3F4", Offset = "0xAAD3F4", VA = "0xAAD3F4")]
	public void OnTargetReached()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xAAD414", Offset = "0xAAD414", VA = "0xAAD414")]
	public void OnBattleSpellImpact(GameObject battleSpell)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xAAD434", Offset = "0xAAD434", VA = "0xAAD434")]
	public void Absorb()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xAAD454", Offset = "0xAAD454", VA = "0xAAD454")]
	public void Revive()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xAAD474", Offset = "0xAAD474", VA = "0xAAD474")]
	public void DisplayState(string newState, bool sync = true)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xAAD74C", Offset = "0xAAD74C", VA = "0xAAD74C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xAAD7BC", Offset = "0xAAD7BC", VA = "0xAAD7BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xAAD8C0", Offset = "0xAAD8C0", VA = "0xAAD8C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xAAD8E0", Offset = "0xAAD8E0", VA = "0xAAD8E0")]
	private void StopStateCoroutine()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xAAD8F4", Offset = "0xAAD8F4", VA = "0xAAD8F4")]
	public FireElementalController()
	{
	}
}
[Token(Token = "0x2000140")]
public class NetFireElementalController : NetworkBehaviour
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	private string m_netState;

	[Token(Token = "0x17000084")]
	public string Networkm_netState
	{
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x9956E0", Offset = "0x9956E0", VA = "0x9956E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x9952AC", Offset = "0x9952AC", VA = "0x9952AC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x995138", Offset = "0x995138", VA = "0x995138")]
	private void OnChangeState(string oldValue, string newValue)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x9951AC", Offset = "0x9951AC", VA = "0x9951AC")]
	[Server]
	public void SetStateTo(string netState)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x9953BC", Offset = "0x9953BC", VA = "0x9953BC", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x995650", Offset = "0x995650", VA = "0x995650", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x9956D4", Offset = "0x9956D4", VA = "0x9956D4")]
	public NetFireElementalController()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x9956DC", Offset = "0x9956DC", VA = "0x9956DC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x9956E8", Offset = "0x9956E8", VA = "0x9956E8", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x9957DC", Offset = "0x9957DC", VA = "0x9957DC", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000141")]
public class InitWormholeOutToGulagLocations : MonoBehaviour
{
	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728F40", Offset = "0x728F40")]
	[SerializeField]
	private GameObject m_gulagPosition;

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x93D308", Offset = "0x93D308", VA = "0x93D308")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x93D698", Offset = "0x93D698", VA = "0x93D698")]
	public InitWormholeOutToGulagLocations()
	{
	}
}
[Token(Token = "0x2000142")]
public class KeeperController : MonoBehaviour
{
	[Token(Token = "0x2000143")]
	private enum State
	{
		[Token(Token = "0x40006AB")]
		Idle,
		[Token(Token = "0x40006AC")]
		Attack,
		[Token(Token = "0x40006AD")]
		Freeze,
		[Token(Token = "0x40006AE")]
		MeltUp
	}

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_enableMoreLog;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ILogger m_compLogger;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728F9C", Offset = "0x728F9C")]
	public float m_blindRangeRadius;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728FB4", Offset = "0x728FB4")]
	public float m_attackRangeRadius;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728FCC", Offset = "0x728FCC")]
	public float m_detectionRangeRadius;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> m_enemyTags;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> m_enemies;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_minionBlaster;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private State m_state;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DateTime m_attackStart;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DateTime m_freezeStart;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private DateTime m_meltUpStart;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 m_enemyDir;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x728FE4", Offset = "0x728FE4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x728FE4", Offset = "0x728FE4")]
	[SerializeField]
	private float m_attackLength;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x729048", Offset = "0x729048")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729048", Offset = "0x729048")]
	[SerializeField]
	private float m_attackCooldown;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7290AC", Offset = "0x7290AC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7290AC", Offset = "0x7290AC")]
	[SerializeField]
	private float m_freezeLength;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x940150", Offset = "0x940150", VA = "0x940150")]
	private void ChangeStateTo(State state)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x94022C", Offset = "0x94022C", VA = "0x94022C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x9402A8", Offset = "0x9402A8", VA = "0x9402A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x9402AC", Offset = "0x9402AC", VA = "0x9402AC")]
	public void Freeze()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x940324", Offset = "0x940324", VA = "0x940324")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x941794", Offset = "0x941794", VA = "0x941794")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x941850", Offset = "0x941850", VA = "0x941850")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x94190C", Offset = "0x94190C", VA = "0x94190C")]
	public KeeperController()
	{
	}
}
[Token(Token = "0x2000144")]
public class MinionHerdBlaster : MonoBehaviour
{
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_force;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_destroyerRadius;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_blastingRadius;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NetChildEnabler m_netChildEnabler;

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x982D24", Offset = "0x982D24", VA = "0x982D24")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x982D7C", Offset = "0x982D7C", VA = "0x982D7C")]
	public void Explosion()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x983164", Offset = "0x983164", VA = "0x983164")]
	public MinionHerdBlaster()
	{
	}
}
[Token(Token = "0x2000145")]
public class MinionHerdTargetHandler : MonoBehaviour
{
	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725278", Offset = "0x725278")]
	private sealed class <CrowdChecker>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MinionHerdTargetHandler <>4__this;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000606")]
			[Address(RVA = "0x9835B0", Offset = "0x9835B0", VA = "0x9835B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000608")]
			[Address(RVA = "0x983618", Offset = "0x983618", VA = "0x983618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x98327C", Offset = "0x98327C", VA = "0x98327C")]
		[DebuggerHidden]
		public <CrowdChecker>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x9832B0", Offset = "0x9832B0", VA = "0x9832B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x9832B4", Offset = "0x9832B4", VA = "0x9832B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x9835B8", Offset = "0x9835B8", VA = "0x9835B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_minionContainer;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_sfx;

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x983180", Offset = "0x983180", VA = "0x983180")]
	private void Start()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x98320C", Offset = "0x98320C", VA = "0x98320C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F398", Offset = "0x72F398")]
	private IEnumerator CrowdChecker()
	{
		return null;
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x9832A8", Offset = "0x9832A8", VA = "0x9832A8")]
	public MinionHerdTargetHandler()
	{
	}
}
[Token(Token = "0x2000147")]
public class MinionHerdTargetNavMeshAgent : MonoBehaviour
{
	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725288", Offset = "0x725288")]
	private sealed class <Reroute>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MinionHerdTargetNavMeshAgent <>4__this;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator <>7__wrap1;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NetMinionStateHandler <minionStateHandler>5__3;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000610")]
			[Address(RVA = "0x983E68", Offset = "0x983E68", VA = "0x983E68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000612")]
			[Address(RVA = "0x983ED0", Offset = "0x983ED0", VA = "0x983ED0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x9836FC", Offset = "0x9836FC", VA = "0x9836FC")]
		[DebuggerHidden]
		public <Reroute>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x983730", Offset = "0x983730", VA = "0x983730", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x983818", Offset = "0x983818", VA = "0x983818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x98374C", Offset = "0x98374C", VA = "0x98374C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x983E70", Offset = "0x983E70", VA = "0x983E70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CheckpointChooser m_checkpointHandler;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_minionContainer;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshAgent agent;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x983620", Offset = "0x983620", VA = "0x983620")]
	private void Start()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x98368C", Offset = "0x98368C", VA = "0x98368C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F44C", Offset = "0x72F44C")]
	private IEnumerator Reroute()
	{
		return null;
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x983728", Offset = "0x983728", VA = "0x983728")]
	public MinionHerdTargetNavMeshAgent()
	{
	}
}
[Token(Token = "0x2000149")]
public class NetMinionStateHandler : NetworkBehaviour
{
	[Token(Token = "0x200014A")]
	public enum NetState
	{
		[Token(Token = "0x40006C3")]
		Live,
		[Token(Token = "0x40006C4")]
		Dead
	}

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	private NetState m_state;

	[Token(Token = "0x17000089")]
	public NetState State
	{
		[Token(Token = "0x6000613")]
		[Address(RVA = "0x9DA7E0", Offset = "0x9DA7E0", VA = "0x9DA7E0")]
		get
		{
			return default(NetState);
		}
	}

	[Token(Token = "0x1700008A")]
	public NetState Networkm_state
	{
		[Token(Token = "0x600061D")]
		[Address(RVA = "0x9DAEE8", Offset = "0x9DAEE8", VA = "0x9DAEE8")]
		get
		{
			return default(NetState);
		}
		[Token(Token = "0x600061E")]
		[Address(RVA = "0x9DA8E4", Offset = "0x9DA8E4", VA = "0x9DA8E4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x9DA7E8", Offset = "0x9DA7E8", VA = "0x9DA7E8")]
	[Server]
	public void Die()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x9DA9FC", Offset = "0x9DA9FC", VA = "0x9DA9FC")]
	[Server]
	public void Revive(Vector3 spawnPoint)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x9DAB94", Offset = "0x9DAB94", VA = "0x9DAB94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x9DABEC", Offset = "0x9DABEC", VA = "0x9DABEC", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x9DAC30", Offset = "0x9DAC30", VA = "0x9DAC30", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x9DACD8", Offset = "0x9DACD8", VA = "0x9DACD8")]
	private void OnChangeState(NetState oldValue, NetState newValue)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x9DAE08", Offset = "0x9DAE08", VA = "0x9DAE08")]
	public NetMinionStateHandler()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x9DAE10", Offset = "0x9DAE10", VA = "0x9DAE10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72F520", Offset = "0x72F520")]
	private void <OnStartClient>b__9_0(NetState state)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x9DAEE4", Offset = "0x9DAEE4", VA = "0x9DAEE4")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x9DAEF0", Offset = "0x9DAEF0", VA = "0x9DAEF0", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x9DAFB0", Offset = "0x9DAFB0", VA = "0x9DAFB0", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Serializable]
[Token(Token = "0x200014B")]
public class SpeedChangedEvent : UnityEvent<float>
{
	[Token(Token = "0x6000621")]
	[Address(RVA = "0xA36E50", Offset = "0xA36E50", VA = "0xA36E50")]
	public SpeedChangedEvent()
	{
	}
}
[Token(Token = "0x200014C")]
public class SpeedDetectorToAction : MonoBehaviour
{
	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725298", Offset = "0x725298")]
	private sealed class <DetectSpeed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeedDetectorToAction <>4__this;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <checkingPeriod>5__2;

		[Token(Token = "0x1700008B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000628")]
			[Address(RVA = "0xA3715C", Offset = "0xA3715C", VA = "0xA3715C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062A")]
			[Address(RVA = "0xA371C4", Offset = "0xA371C4", VA = "0xA371C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xA36F3C", Offset = "0xA36F3C", VA = "0xA36F3C")]
		[DebuggerHidden]
		public <DetectSpeed>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xA36F70", Offset = "0xA36F70", VA = "0xA36F70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xA36F74", Offset = "0xA36F74", VA = "0xA36F74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xA37164", Offset = "0xA37164", VA = "0xA37164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_lastPosition;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_lastSpeed;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SpeedChangedEvent m_onSpeedChanged;

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xA36EA0", Offset = "0xA36EA0", VA = "0xA36EA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xA36ECC", Offset = "0xA36ECC", VA = "0xA36ECC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F530", Offset = "0x72F530")]
	private IEnumerator DetectSpeed()
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xA36F68", Offset = "0xA36F68", VA = "0xA36F68")]
	public SpeedDetectorToAction()
	{
	}
}
[Token(Token = "0x200014E")]
public class SpeedDetectorToAnimator : MonoBehaviour
{
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7252A8", Offset = "0x7252A8")]
	private sealed class <AdjustAnimatorSpeedAccordingToSpeed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeedDetectorToAnimator <>4__this;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <checkingPeriod>5__2;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000631")]
			[Address(RVA = "0xA37480", Offset = "0xA37480", VA = "0xA37480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000633")]
			[Address(RVA = "0xA374E8", Offset = "0xA374E8", VA = "0xA374E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xA37268", Offset = "0xA37268", VA = "0xA37268")]
		[DebuggerHidden]
		public <AdjustAnimatorSpeedAccordingToSpeed>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xA3729C", Offset = "0xA3729C", VA = "0xA3729C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xA372A0", Offset = "0xA372A0", VA = "0xA372A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xA37488", Offset = "0xA37488", VA = "0xA37488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_lastPosition;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_lastSpeed;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator m_animator;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xA371CC", Offset = "0xA371CC", VA = "0xA371CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xA371F8", Offset = "0xA371F8", VA = "0xA371F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F5E4", Offset = "0x72F5E4")]
	private IEnumerator AdjustAnimatorSpeedAccordingToSpeed()
	{
		return null;
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xA37294", Offset = "0xA37294", VA = "0xA37294")]
	public SpeedDetectorToAnimator()
	{
	}
}
[Token(Token = "0x2000150")]
public class CurseArcaneMage : MonoBehaviour
{
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7252B8", Offset = "0x7252B8")]
	private sealed class <WaitForAnimation>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CurseArcaneMage <>4__this;

		[Token(Token = "0x1700008F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600063B")]
			[Address(RVA = "0x974874", Offset = "0x974874", VA = "0x974874", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600063D")]
			[Address(RVA = "0x9748DC", Offset = "0x9748DC", VA = "0x9748DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x9747B4", Offset = "0x9747B4", VA = "0x9747B4")]
		[DebuggerHidden]
		public <WaitForAnimation>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x9747E8", Offset = "0x9747E8", VA = "0x9747E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x9747EC", Offset = "0x9747EC", VA = "0x9747EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x97487C", Offset = "0x97487C", VA = "0x97487C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_arcaneMageObject;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animation m_arcaneMageAnimation;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x97467C", Offset = "0x97467C", VA = "0x97467C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x9746DC", Offset = "0x9746DC", VA = "0x9746DC")]
	public void TriggerCurse()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x974744", Offset = "0x974744", VA = "0x974744")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F698", Offset = "0x72F698")]
	private IEnumerator WaitForAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x9747E0", Offset = "0x9747E0", VA = "0x9747E0")]
	public CurseArcaneMage()
	{
	}
}
[Token(Token = "0x2000152")]
public class CurseDream : MonoBehaviour
{
	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7252C8", Offset = "0x7252C8")]
	private sealed class <WaitForAnimation>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CurseDream <>4__this;

		[Token(Token = "0x17000091")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000647")]
			[Address(RVA = "0x974F44", Offset = "0x974F44", VA = "0x974F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000649")]
			[Address(RVA = "0x974FAC", Offset = "0x974FAC", VA = "0x974FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x974BC4", Offset = "0x974BC4", VA = "0x974BC4")]
		[DebuggerHidden]
		public <WaitForAnimation>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x974EB0", Offset = "0x974EB0", VA = "0x974EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x974EB4", Offset = "0x974EB4", VA = "0x974EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x974F4C", Offset = "0x974F4C", VA = "0x974F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7252D8", Offset = "0x7252D8")]
	private sealed class <ScaleSpeed>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool scaleDown;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CurseDream <>4__this;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startMoveMul>5__2;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <endMoveMul>5__3;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600064D")]
			[Address(RVA = "0x974E40", Offset = "0x974E40", VA = "0x974E40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600064F")]
			[Address(RVA = "0x974EA8", Offset = "0x974EA8", VA = "0x974EA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x974BF0", Offset = "0x974BF0", VA = "0x974BF0")]
		[DebuggerHidden]
		public <ScaleSpeed>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x974CC0", Offset = "0x974CC0", VA = "0x974CC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x974CC4", Offset = "0x974CC4", VA = "0x974CC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x974E48", Offset = "0x974E48", VA = "0x974E48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_sightCover;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animation m_animation;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_scaleTime;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_startMoveMul;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_endMoveMul;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x9748E4", Offset = "0x9748E4", VA = "0x9748E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x974998", Offset = "0x974998", VA = "0x974998")]
	public void TriggerCurse()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x974B54", Offset = "0x974B54", VA = "0x974B54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F74C", Offset = "0x72F74C")]
	private IEnumerator WaitForAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x974AD0", Offset = "0x974AD0", VA = "0x974AD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F7B0", Offset = "0x72F7B0")]
	private IEnumerator ScaleSpeed(bool scaleDown)
	{
		return null;
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x974C1C", Offset = "0x974C1C", VA = "0x974C1C")]
	public void RemoveCurse()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x974CA4", Offset = "0x974CA4", VA = "0x974CA4")]
	public CurseDream()
	{
	}
}
[Token(Token = "0x2000155")]
public class CurseDwarf : MonoBehaviour
{
	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7252E8", Offset = "0x7252E8")]
	private sealed class <ScalePlayer>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool scaleDown;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CurseDwarf <>4__this;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool doReverse;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startScale>5__2;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <endScale>5__3;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <startMoveMul>5__4;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <endMoveMul>5__5;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <elapsedTime>5__6;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject <teleportHandler>5__7;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600065B")]
			[Address(RVA = "0x975A84", Offset = "0x975A84", VA = "0x975A84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600065D")]
			[Address(RVA = "0x975AEC", Offset = "0x975AEC", VA = "0x975AEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x97544C", Offset = "0x97544C", VA = "0x97544C")]
		[DebuggerHidden]
		public <ScalePlayer>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x9756DC", Offset = "0x9756DC", VA = "0x9756DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x9756E0", Offset = "0x9756E0", VA = "0x9756E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x975A8C", Offset = "0x975A8C", VA = "0x975A8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7252F8", Offset = "0x7252F8")]
	private sealed class <WaitForEffect>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CurseDwarf <>4__this;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000661")]
			[Address(RVA = "0x975BC8", Offset = "0x975BC8", VA = "0x975BC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000663")]
			[Address(RVA = "0x975C30", Offset = "0x975C30", VA = "0x975C30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x9754E8", Offset = "0x9754E8", VA = "0x9754E8")]
		[DebuggerHidden]
		public <WaitForEffect>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x975AF4", Offset = "0x975AF4", VA = "0x975AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x975AF8", Offset = "0x975AF8", VA = "0x975AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x975BD0", Offset = "0x975BD0", VA = "0x975BD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_curseTime;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_scaleTime;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_startMoveMul;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_endMoveMul;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_startScale;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 m_endScale;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_originalNearClipping;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject m_ovrPlayerController;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x974FB4", Offset = "0x974FB4", VA = "0x974FB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x97508C", Offset = "0x97508C", VA = "0x97508C")]
	public void TriggerCurse()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x97526C", Offset = "0x97526C", VA = "0x97526C")]
	public void ApplyDwarfCurse()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x975418", Offset = "0x975418", VA = "0x975418")]
	public void RemoveDwarfCurse()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x9751DC", Offset = "0x9751DC", VA = "0x9751DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F8B4", Offset = "0x72F8B4")]
	private IEnumerator ScalePlayer(bool scaleDown, bool doReverse = true)
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x975478", Offset = "0x975478", VA = "0x975478")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72F918", Offset = "0x72F918")]
	private IEnumerator WaitForEffect()
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x975514", Offset = "0x975514", VA = "0x975514")]
	public void RemoveCurse()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x975638", Offset = "0x975638", VA = "0x975638")]
	public CurseDwarf()
	{
	}
}
[Token(Token = "0x2000158")]
public class CurseIndicatorController : MonoBehaviour
{
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725308", Offset = "0x725308")]
	private sealed class <HidePlayerForAWhile>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CurseIndicatorController <>4__this;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600066C")]
			[Address(RVA = "0x976828", Offset = "0x976828", VA = "0x976828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600066E")]
			[Address(RVA = "0x976890", Offset = "0x976890", VA = "0x976890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x976590", Offset = "0x976590", VA = "0x976590")]
		[DebuggerHidden]
		public <HidePlayerForAWhile>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x9765CC", Offset = "0x9765CC", VA = "0x9765CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x9765D0", Offset = "0x9765D0", VA = "0x9765D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x976830", Offset = "0x976830", VA = "0x976830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_teleportCurse;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_dreamCurse;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject m_storageTemporary;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TriggerCurse.CurseType m_currentCurse;

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x975C38", Offset = "0x975C38", VA = "0x975C38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x975CD0", Offset = "0x975CD0", VA = "0x975CD0")]
	public void SetRemoteCurse(TriggerCurse.CurseType curse)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x9762F0", Offset = "0x9762F0", VA = "0x9762F0")]
	private void TeleportStartEffect()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x976520", Offset = "0x976520", VA = "0x976520")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72FA1C", Offset = "0x72FA1C")]
	private IEnumerator HidePlayerForAWhile()
	{
		return null;
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x9765BC", Offset = "0x9765BC", VA = "0x9765BC")]
	public CurseIndicatorController()
	{
	}
}
[Token(Token = "0x200015A")]
public class CurseLabyrinth : MonoBehaviour
{
	[Token(Token = "0x600066F")]
	[Address(RVA = "0x976898", Offset = "0x976898", VA = "0x976898")]
	private void Start()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x97689C", Offset = "0x97689C", VA = "0x97689C")]
	public void TriggerCurse()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x976910", Offset = "0x976910", VA = "0x976910")]
	public CurseLabyrinth()
	{
	}
}
[Token(Token = "0x200015B")]
public class CurseMana : MonoBehaviour
{
	[Token(Token = "0x6000672")]
	[Address(RVA = "0x976918", Offset = "0x976918", VA = "0x976918")]
	public void TriggerCurse()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x9769AC", Offset = "0x9769AC", VA = "0x9769AC")]
	public CurseMana()
	{
	}
}
[Token(Token = "0x200015C")]
public class CurseMonolith : MonoBehaviour
{
	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725318", Offset = "0x725318")]
	private sealed class <WaitForAnimation>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CurseMonolith <>4__this;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0x976B44", Offset = "0x976B44", VA = "0x976B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067D")]
			[Address(RVA = "0x976BAC", Offset = "0x976BAC", VA = "0x976BAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x976A84", Offset = "0x976A84", VA = "0x976A84")]
		[DebuggerHidden]
		public <WaitForAnimation>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x976AB8", Offset = "0x976AB8", VA = "0x976AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x976ABC", Offset = "0x976ABC", VA = "0x976ABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x976B4C", Offset = "0x976B4C", VA = "0x976B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_monolithObject;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animation m_monolithAnimation;

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x9769B4", Offset = "0x9769B4", VA = "0x9769B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x9764B8", Offset = "0x9764B8", VA = "0x9764B8")]
	public void TriggerCurse()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x976A14", Offset = "0x976A14", VA = "0x976A14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72FAD0", Offset = "0x72FAD0")]
	private IEnumerator WaitForAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x976AB0", Offset = "0x976AB0", VA = "0x976AB0")]
	public CurseMonolith()
	{
	}
}
[Token(Token = "0x200015E")]
public class CurseTeleport : MonoBehaviour
{
	[Token(Token = "0x600067E")]
	[Address(RVA = "0x976BB4", Offset = "0x976BB4", VA = "0x976BB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x976BB8", Offset = "0x976BB8", VA = "0x976BB8")]
	public void TriggerCurse()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x976C2C", Offset = "0x976C2C", VA = "0x976C2C")]
	public CurseTeleport()
	{
	}
}
[Token(Token = "0x200015F")]
public class DwarfAreaHandler : MonoBehaviour
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CurseDwarf m_curseDwarf;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_toDwarf;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_anotherDwarfArea;

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x97BEC0", Offset = "0x97BEC0", VA = "0x97BEC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x97BF30", Offset = "0x97BF30", VA = "0x97BF30")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x97BFFC", Offset = "0x97BFFC", VA = "0x97BFFC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x97C0E4", Offset = "0x97C0E4", VA = "0x97C0E4")]
	public DwarfAreaHandler()
	{
	}
}
[Token(Token = "0x2000160")]
public class DebugMatrix : MonoBehaviour
{
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7291EC", Offset = "0x7291EC")]
	public float m_duration;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729208", Offset = "0x729208")]
	public float m_halfLengthOfLine;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_drawOnlyBlocked;

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x97712C", Offset = "0x97712C", VA = "0x97712C")]
	public void Draw()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x9777C4", Offset = "0x9777C4", VA = "0x9777C4")]
	public DebugMatrix()
	{
	}
}
[Token(Token = "0x2000161")]
public class DisableVRSupport : MonoBehaviour
{
	[Token(Token = "0x2000162")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725328", Offset = "0x725328")]
	private sealed class <disableVRSupportCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisableVRSupport <>4__this;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600068E")]
			[Address(RVA = "0x97B394", Offset = "0x97B394", VA = "0x97B394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0x97B3FC", Offset = "0x97B3FC", VA = "0x97B3FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x97B250", Offset = "0x97B250", VA = "0x97B250")]
		[DebuggerHidden]
		public <disableVRSupportCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x97B284", Offset = "0x97B284", VA = "0x97B284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x97B288", Offset = "0x97B288", VA = "0x97B288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x97B39C", Offset = "0x97B39C", VA = "0x97B39C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x97B11C", Offset = "0x97B11C", VA = "0x97B11C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x97B158", Offset = "0x97B158", VA = "0x97B158")]
	public void disableVRSupport()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x97B1E0", Offset = "0x97B1E0", VA = "0x97B1E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72FB84", Offset = "0x72FB84")]
	public IEnumerator disableVRSupportCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x97B27C", Offset = "0x97B27C", VA = "0x97B27C")]
	public DisableVRSupport()
	{
	}
}
[Token(Token = "0x2000163")]
public class EditorDebug : MonoBehaviour
{
	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GlobalControl m_globalControl;

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x97C0EC", Offset = "0x97C0EC", VA = "0x97C0EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x97C6F4", Offset = "0x97C6F4", VA = "0x97C6F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x97CE6C", Offset = "0x97CE6C", VA = "0x97CE6C")]
	public void ConnetToTestInternetHost()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x97CFC8", Offset = "0x97CFC8", VA = "0x97CFC8")]
	public void OnServerMetaHandler(NetworkHandler.ServerMetaData metaInfo)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x97D210", Offset = "0x97D210", VA = "0x97D210")]
	public void StartTestLevel()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x97C8EC", Offset = "0x97C8EC", VA = "0x97C8EC")]
	private void HandleSceneControlKeys()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x97C728", Offset = "0x97C728", VA = "0x97C728")]
	private void ActivateControllers()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x97CCC8", Offset = "0x97CCC8", VA = "0x97CCC8")]
	private void ChangeCamera()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x97CD4C", Offset = "0x97CD4C", VA = "0x97CD4C")]
	private void PushInitial()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x97CDD0", Offset = "0x97CDD0", VA = "0x97CDD0")]
	private void CreateScreenshot()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x97D294", Offset = "0x97D294", VA = "0x97D294")]
	public EditorDebug()
	{
	}
}
[Token(Token = "0x2000164")]
public class EditorGameDebug : MonoBehaviour
{
	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GlobalControl m_globalControl;

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xAA93D0", Offset = "0xAA93D0", VA = "0xAA93D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xAA9970", Offset = "0xAA9970", VA = "0xAA9970")]
	private void Update()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xAA9998", Offset = "0xAA9998", VA = "0xAA9998")]
	private void HandleKeys()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xAAA478", Offset = "0xAAA478", VA = "0xAAA478")]
	private void ActivateControllers()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xAAA63C", Offset = "0xAAA63C", VA = "0xAAA63C")]
	private void CreateScreenshot()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xAAA714", Offset = "0xAAA714", VA = "0xAAA714")]
	public EditorGameDebug()
	{
	}
}
[Token(Token = "0x2000165")]
public class LODDebugger : MonoBehaviour
{
	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x941C0C", Offset = "0x941C0C", VA = "0x941C0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x941CB8", Offset = "0x941CB8", VA = "0x941CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x941E58", Offset = "0x941E58", VA = "0x941E58")]
	public LODDebugger()
	{
	}
}
[Token(Token = "0x2000166")]
public class LODBiasDebugger : MonoBehaviour
{
	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x9419B8", Offset = "0x9419B8", VA = "0x9419B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x941A64", Offset = "0x941A64", VA = "0x941A64")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x941C04", Offset = "0x941C04", VA = "0x941C04")]
	public LODBiasDebugger()
	{
	}
}
[Token(Token = "0x2000167")]
public class NetworkSceneSetter : MonoBehaviour
{
	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string m_networkScene;

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x9E697C", Offset = "0x9E697C", VA = "0x9E697C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x9E6A8C", Offset = "0x9E6A8C", VA = "0x9E6A8C")]
	public NetworkSceneSetter()
	{
	}
}
[Token(Token = "0x2000168")]
public class ParticleDebugger : MonoBehaviour
{
	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_numOfParticleFactor;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, int> m_particles;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xACC464", Offset = "0xACC464", VA = "0xACC464")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xACC468", Offset = "0xACC468", VA = "0xACC468")]
	private void ApplyFactorOnParicles()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xACC664", Offset = "0xACC664", VA = "0xACC664")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xACC818", Offset = "0xACC818", VA = "0xACC818")]
	public ParticleDebugger()
	{
	}
}
[Token(Token = "0x2000169")]
public class PathHolder : MonoBehaviour
{
	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725338", Offset = "0x725338")]
	private sealed class <WaitAt>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PathHolder <>4__this;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006B6")]
			[Address(RVA = "0xACF578", Offset = "0xACF578", VA = "0xACF578", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006B8")]
			[Address(RVA = "0xACF5E0", Offset = "0xACF5E0", VA = "0xACF5E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xACF378", Offset = "0xACF378", VA = "0xACF378")]
		[DebuggerHidden]
		public <WaitAt>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xACF490", Offset = "0xACF490", VA = "0xACF490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xACF494", Offset = "0xACF494", VA = "0xACF494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xACF580", Offset = "0xACF580", VA = "0xACF580", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> m_positionList;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> m_waitAtList;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> m_travelTimeList;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_objectToMove;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_actIx;

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xACF0B4", Offset = "0xACF0B4", VA = "0xACF0B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xACF14C", Offset = "0xACF14C", VA = "0xACF14C")]
	private void StartTravel()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xACF308", Offset = "0xACF308", VA = "0xACF308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72FC38", Offset = "0x72FC38")]
	private IEnumerator WaitAt()
	{
		return null;
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xACF3A4", Offset = "0xACF3A4", VA = "0xACF3A4")]
	public void SectionDone()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xACF3D0", Offset = "0xACF3D0", VA = "0xACF3D0")]
	public PathHolder()
	{
	}
}
[Token(Token = "0x200016B")]
public class PlayerRepositioner : MonoBehaviour
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent m_playerAgent;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xA241D8", Offset = "0xA241D8", VA = "0xA241D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xA24248", Offset = "0xA24248", VA = "0xA24248")]
	public void GoToPos(int index)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xA2429C", Offset = "0xA2429C", VA = "0xA2429C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xA244AC", Offset = "0xA244AC", VA = "0xA244AC")]
	public PlayerRepositioner()
	{
	}
}
[Token(Token = "0x200016C")]
public class POC_NavMeshAgentUser : MonoBehaviour
{
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725348", Offset = "0x725348")]
	private sealed class <Reroute>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public POC_NavMeshAgentUser <>4__this;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0xACBFE4", Offset = "0xACBFE4", VA = "0xACBFE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C7")]
			[Address(RVA = "0xACC04C", Offset = "0xACC04C", VA = "0xACC04C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xACBE90", Offset = "0xACBE90", VA = "0xACBE90")]
		[DebuggerHidden]
		public <Reroute>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xACBEC8", Offset = "0xACBEC8", VA = "0xACBEC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xACBECC", Offset = "0xACBECC", VA = "0xACBECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xACBFEC", Offset = "0xACBFEC", VA = "0xACBFEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent agent;

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xACBB6C", Offset = "0xACBB6C", VA = "0xACBB6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xACBC48", Offset = "0xACBC48", VA = "0xACBC48")]
	private bool RandomPoint(Vector3 center, float range, out Vector3 result)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xACBBD8", Offset = "0xACBBD8", VA = "0xACBBD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72FCEC", Offset = "0x72FCEC")]
	private IEnumerator Reroute()
	{
		return null;
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xACBEBC", Offset = "0xACBEBC", VA = "0xACBEBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xACBEC0", Offset = "0xACBEC0", VA = "0xACBEC0")]
	public POC_NavMeshAgentUser()
	{
	}
}
[Token(Token = "0x200016E")]
public class POC_PocokHandler : MonoBehaviour
{
	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_resetPos;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_maxSpeed;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xACC054", Offset = "0xACC054", VA = "0xACC054")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xACC2A4", Offset = "0xACC2A4", VA = "0xACC2A4")]
	public POC_PocokHandler()
	{
	}
}
[Token(Token = "0x200016F")]
public class POC_PocokWallCollisionHandler : MonoBehaviour
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public UnityEvent m_triggerEnterAction;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public UnityEvent m_triggerLeaveAction;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_activeColliderCounter;

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xACC2B4", Offset = "0xACC2B4", VA = "0xACC2B4")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xACC368", Offset = "0xACC368", VA = "0xACC368")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xACC448", Offset = "0xACC448", VA = "0xACC448")]
	public POC_PocokWallCollisionHandler()
	{
	}
}
[Token(Token = "0x2000170")]
public class TransformFetcher : MonoBehaviour
{
	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_positionFromObject;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_rotationFromObject;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_fromObjectDisabled;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_leftHand;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool m_fetchRotation;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool m_fetchPosition;

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xA4D2CC", Offset = "0xA4D2CC", VA = "0xA4D2CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xA4D640", Offset = "0xA4D640", VA = "0xA4D640")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xA4D644", Offset = "0xA4D644", VA = "0xA4D644")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xA4D794", Offset = "0xA4D794", VA = "0xA4D794")]
	public void SetFromObjectInput(bool objectInputState)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xA4D7A0", Offset = "0xA4D7A0", VA = "0xA4D7A0")]
	public TransformFetcher()
	{
	}
}
[Token(Token = "0x2000171")]
public class TransformLimiter : MonoBehaviour
{
	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_positionFix;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_positionMin;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 m_positionMax;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_lookrotationFix;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 m_lookrotationMin;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 m_lookrotationMax;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool m_localscaleFix;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 m_localscaleMin;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 m_localscaleMax;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xA4D7B0", Offset = "0xA4D7B0", VA = "0xA4D7B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xA4D874", Offset = "0xA4D874", VA = "0xA4D874")]
	public TransformLimiter()
	{
	}
}
[Token(Token = "0x2000172")]
public class TransformMirror : MonoBehaviour
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_positionFromObject;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_rotationFromObject;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_mirrorObject;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xA4D9D0", Offset = "0xA4D9D0", VA = "0xA4D9D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xA4D9D4", Offset = "0xA4D9D4", VA = "0xA4D9D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xA4DC14", Offset = "0xA4DC14", VA = "0xA4DC14")]
	public TransformMirror()
	{
	}
}
[Token(Token = "0x2000173")]
public class AbilityEntityPointer : MonoBehaviour
{
	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_abilityEntity;

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x96606C", Offset = "0x96606C", VA = "0x96606C")]
	public AbilityEntityPointer()
	{
	}
}
[Token(Token = "0x2000174")]
public class LocatorGrabber : MonoBehaviour
{
	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x947410", Offset = "0x947410", VA = "0x947410")]
	public bool GrabLocator()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x94771C", Offset = "0x94771C", VA = "0x94771C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x947758", Offset = "0x947758", VA = "0x947758")]
	public LocatorGrabber()
	{
	}
}
[Token(Token = "0x2000175")]
public class LocatorIteratorPositioner : MonoBehaviour
{
	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_locatorMatrix;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_focusPoint;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_focus;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_locator;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x947760", Offset = "0x947760", VA = "0x947760")]
	public GameObject GetLocator()
	{
		return null;
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x947768", Offset = "0x947768", VA = "0x947768")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x9477D0", Offset = "0x9477D0", VA = "0x9477D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x94789C", Offset = "0x94789C", VA = "0x94789C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x947B74", Offset = "0x947B74", VA = "0x947B74")]
	public LocatorIteratorPositioner()
	{
	}
}
[Token(Token = "0x2000176")]
public class LocatorMtxDetector : MonoBehaviour
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_sizeX;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_sizeY;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_sizeZ;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_distanceBetweenElements;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x947B7C", Offset = "0x947B7C", VA = "0x947B7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x947B10", Offset = "0x947B10", VA = "0x947B10")]
	public GameObject GetLocatorChildFromWorldCoordinate(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x947FF4", Offset = "0x947FF4", VA = "0x947FF4")]
	private int GetLocatorChildIndexFromWorldCoordinate(Vector3 pos)
	{
		return default(int);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x948230", Offset = "0x948230", VA = "0x948230")]
	public LocatorMtxDetector()
	{
	}
}
[Token(Token = "0x2000177")]
public class LocatorPuzzlePieceRelationHandler : MonoBehaviour
{
	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_currentLocation;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_validLocation;

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x948238", Offset = "0x948238", VA = "0x948238")]
	public bool EvaluatePuzzlePieceSolution()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x948344", Offset = "0x948344", VA = "0x948344")]
	public LocatorPuzzlePieceRelationHandler()
	{
	}
}
[Token(Token = "0x2000178")]
public class LocatorPuzzlePieceRelationSyncer : NetworkBehaviour
{
	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public int m_locatorMtxIndex;

	[Token(Token = "0x170000A3")]
	public int Networkm_locatorMtxIndex
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x948750", Offset = "0x948750", VA = "0x948750")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x94844C", Offset = "0x94844C", VA = "0x94844C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x94834C", Offset = "0x94834C", VA = "0x94834C")]
	[Server]
	public void SetLocatorIndex(int index)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x94855C", Offset = "0x94855C", VA = "0x94855C", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x94859C", Offset = "0x94859C", VA = "0x94859C")]
	private void OnChangeLocatorMtxIndex(int oldIndex, int newIndex)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x94873C", Offset = "0x94873C", VA = "0x94873C")]
	public LocatorPuzzlePieceRelationSyncer()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x94874C", Offset = "0x94874C", VA = "0x94874C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x948758", Offset = "0x948758", VA = "0x948758", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x94884C", Offset = "0x94884C", VA = "0x94884C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000179")]
public class LocatorSiblingsHandler : MonoBehaviour
{
	[Token(Token = "0x200017A")]
	public enum Direction : ushort
	{
		[Token(Token = "0x400074A")]
		Right,
		[Token(Token = "0x400074B")]
		Left,
		[Token(Token = "0x400074C")]
		Up,
		[Token(Token = "0x400074D")]
		Down,
		[Token(Token = "0x400074E")]
		Forward,
		[Token(Token = "0x400074F")]
		Backward
	}

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocatorMtxDetector m_mtx;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] m_relations;

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x948978", Offset = "0x948978", VA = "0x948978")]
	private GameObject GetSibling(int x, int y, int z)
	{
		return null;
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x948A30", Offset = "0x948A30", VA = "0x948A30")]
	public static Direction TranslateEnumDir(Vector3 dir)
	{
		return default(Direction);
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x948D0C", Offset = "0x948D0C", VA = "0x948D0C")]
	public bool HasFreeRelation(Direction dir)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x948EA0", Offset = "0x948EA0", VA = "0x948EA0")]
	public GameObject GetRelation(Direction dir)
	{
		return null;
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x948EE0", Offset = "0x948EE0", VA = "0x948EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x9491EC", Offset = "0x9491EC", VA = "0x9491EC")]
	public LocatorSiblingsHandler()
	{
	}
}
[Token(Token = "0x200017B")]
public class BlockAbility : MonoBehaviour
{
	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_blocked;

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x96EF50", Offset = "0x96EF50", VA = "0x96EF50")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x96EF54", Offset = "0x96EF54", VA = "0x96EF54")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x96EF58", Offset = "0x96EF58", VA = "0x96EF58")]
	public BlockAbility()
	{
	}
}
[Token(Token = "0x200017C")]
public class MovableAbility : MonoBehaviour
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_isMovable;

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x98A1EC", Offset = "0x98A1EC", VA = "0x98A1EC")]
	public MovableAbility()
	{
	}
}
[Token(Token = "0x200017D")]
public class PuzzleReader : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725358", Offset = "0x725358")]
	private sealed class <>c
	{
		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Converter<LocatorPuzzlePieceRelationHandler, Transform> <>9__6_0;

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xA27E28", Offset = "0xA27E28", VA = "0xA27E28")]
		public <>c()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xA27E30", Offset = "0xA27E30", VA = "0xA27E30")]
		internal Transform <BindPuzzleWithLocatorMatrix>b__6_0(LocatorPuzzlePieceRelationHandler x)
		{
			return null;
		}
	}

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_locatorMatrix;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xA26F0C", Offset = "0xA26F0C", VA = "0xA26F0C")]
	public GameObject GetLocatorMatrix()
	{
		return null;
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xA26F14", Offset = "0xA26F14", VA = "0xA26F14")]
	public void ReadPuzzlesOnServer()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xA27648", Offset = "0xA27648", VA = "0xA27648")]
	public void StartPillarSolutionCheckers()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xA276F8", Offset = "0xA276F8", VA = "0xA276F8")]
	public void ReadPuzzlesOnClient()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xA27000", Offset = "0xA27000", VA = "0xA27000")]
	private void ReadLocatorBasedPuzzles(bool setValidLocator, bool setCurrentLocator, bool setLocatorSyncher)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xA2777C", Offset = "0xA2777C", VA = "0xA2777C")]
	public void BindPuzzleWithLocatorMatrix(Transform puzzleTransform, bool setValidLocator, bool setCurrentLocator, bool setLocatorSyncher)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xA27DBC", Offset = "0xA27DBC", VA = "0xA27DBC")]
	public PuzzleReader()
	{
	}
}
[Token(Token = "0x200017F")]
public class RandomAbility : MonoBehaviour
{
	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_isRandomized;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xA298B0", Offset = "0xA298B0", VA = "0xA298B0")]
	public RandomAbility()
	{
	}
}
[Token(Token = "0x2000180")]
public class CrystalShard : MonoBehaviour
{
	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_amount;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_ResourceText;

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x973D70", Offset = "0x973D70", VA = "0x973D70")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x974130", Offset = "0x974130", VA = "0x974130")]
	private void DoEnding()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x974364", Offset = "0x974364", VA = "0x974364")]
	private void CreateResourceText()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x974514", Offset = "0x974514", VA = "0x974514")]
	private Color GetManaColor(TextFader TextFader, int ManaAmount)
	{
		return default(Color);
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x974674", Offset = "0x974674", VA = "0x974674")]
	public CrystalShard()
	{
	}
}
[Token(Token = "0x2000181")]
public class EmitterOnPlane : MonoBehaviour
{
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725368", Offset = "0x725368")]
	private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmitterOnPlane <>4__this;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0xAABBA0", Offset = "0xAABBA0", VA = "0xAABBA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000713")]
			[Address(RVA = "0xAABC08", Offset = "0xAABC08", VA = "0xAABC08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xAAAE38", Offset = "0xAAAE38", VA = "0xAAAE38")]
		[DebuggerHidden]
		public <Start>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xAAB8A4", Offset = "0xAAB8A4", VA = "0xAAB8A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xAAB8A8", Offset = "0xAAB8A8", VA = "0xAAB8A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xAABBA8", Offset = "0xAABBA8", VA = "0xAABBA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725378", Offset = "0x725378")]
	private sealed class <Spwner>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmitterOnPlane <>4__this;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0xAAB834", Offset = "0xAAB834", VA = "0xAAB834", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000719")]
			[Address(RVA = "0xAAB89C", Offset = "0xAAB89C", VA = "0xAAB89C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xAAAED4", Offset = "0xAAAED4", VA = "0xAAAED4")]
		[DebuggerHidden]
		public <Spwner>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xAAB75C", Offset = "0xAAB75C", VA = "0xAAB75C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xAAB760", Offset = "0xAAB760", VA = "0xAAB760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xAAB83C", Offset = "0xAAB83C", VA = "0xAAB83C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725388", Offset = "0x725388")]
	private sealed class <CreateChild>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmitterOnPlane <>4__this;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rndPointOnPlane;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600071D")]
			[Address(RVA = "0xAAB6EC", Offset = "0xAAB6EC", VA = "0xAAB6EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600071F")]
			[Address(RVA = "0xAAB754", Offset = "0xAAB754", VA = "0xAAB754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xAAB39C", Offset = "0xAAB39C", VA = "0xAAB39C")]
		[DebuggerHidden]
		public <CreateChild>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xAAB444", Offset = "0xAAB444", VA = "0xAAB444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xAAB448", Offset = "0xAAB448", VA = "0xAAB448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xAAB6F4", Offset = "0xAAB6F4", VA = "0xAAB6F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_emitterPlane;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_emitPrefabList;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_emitChild;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_emitInOneSec;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_destroyAtSecond;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_destroyChildAtSecond;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_childAtSecond;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_startDelay;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_leftTop;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_rightTop;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 m_leftBottom;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 m_rightBottom;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 m_xAxis;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 m_zAxis;

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xAAADC8", Offset = "0xAAADC8", VA = "0xAAADC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72FDB0", Offset = "0x72FDB0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xAAAE64", Offset = "0xAAAE64", VA = "0xAAAE64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72FE14", Offset = "0x72FE14")]
	private IEnumerator Spwner()
	{
		return null;
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xAAAF00", Offset = "0xAAAF00", VA = "0xAAAF00")]
	private void SpawnRandomObject()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xAAB308", Offset = "0xAAB308", VA = "0xAAB308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72FE78", Offset = "0x72FE78")]
	private IEnumerator CreateChild(Vector3 rndPointOnPlane)
	{
		return null;
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xAAB3C8", Offset = "0xAAB3C8", VA = "0xAAB3C8")]
	public EmitterOnPlane()
	{
	}
}
[Token(Token = "0x2000185")]
public class BlobShadowRotator : MonoBehaviour
{
	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string m_tag;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_nearestTagDistance;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject m_nearestGameObject;

	[Token(Token = "0x4000773")]
	private const int m_maxLeaveFrame = 5;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_leaveFrameCounter;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_radius;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_originalFarClipPlane;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Projector m_blobShadow;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0x729300", Offset = "0x729300")]
	private float m_hideDist;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_sqrHideDist;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera m_mainCamera;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SphereCollider m_sphereCollider;

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x96EADC", Offset = "0x96EADC", VA = "0x96EADC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x96EB94", Offset = "0x96EB94", VA = "0x96EB94")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x96EBA0", Offset = "0x96EBA0", VA = "0x96EBA0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x96EDE4", Offset = "0x96EDE4", VA = "0x96EDE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x96EF38", Offset = "0x96EF38", VA = "0x96EF38")]
	public BlobShadowRotator()
	{
	}
}
[Token(Token = "0x2000186")]
public class CollectiveStatistics
{
	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_numOfCrystals;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int m_numOfArtifacts;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_playTime;

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x972508", Offset = "0x972508", VA = "0x972508")]
	public CollectiveStatistics()
	{
	}
}
[Token(Token = "0x2000187")]
public class GlobalControl : MonoBehaviour
{
	[Token(Token = "0x2000188")]
	public enum NetworkPeerType
	{
		[Token(Token = "0x4000787")]
		NotSet,
		[Token(Token = "0x4000788")]
		Server,
		[Token(Token = "0x4000789")]
		Client
	}

	[Serializable]
	[Token(Token = "0x2000189")]
	public class ServerInfo
	{
		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72933C", Offset = "0x72933C")]
		private bool <IsMultiplayerEnabled>k__BackingField;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ServerId;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_serverAddress;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_level;

		[Token(Token = "0x170000AA")]
		public bool IsMultiplayerEnabled
		{
			[Token(Token = "0x6000733")]
			[Address(RVA = "0xAB2E80", Offset = "0xAB2E80", VA = "0xAB2E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730040", Offset = "0x730040")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000732")]
			[Address(RVA = "0xAB2E74", Offset = "0xAB2E74", VA = "0xAB2E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730030", Offset = "0x730030")]
			set
			{
			}
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xAB276C", Offset = "0xAB276C", VA = "0xAB276C")]
		public ServerInfo()
		{
		}
	}

	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725398", Offset = "0x725398")]
	private sealed class <StartAnotherScene>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GlobalControl <>4__this;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string scene;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool byNetworkManager;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0xAB2E04", Offset = "0xAB2E04", VA = "0xAB2E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0xAB2E6C", Offset = "0xAB2E6C", VA = "0xAB2E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xAB2694", Offset = "0xAB2694", VA = "0xAB2694")]
		[DebuggerHidden]
		public <StartAnotherScene>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xAB27D4", Offset = "0xAB27D4", VA = "0xAB27D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xAB27D8", Offset = "0xAB27D8", VA = "0xAB27D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xAB2E0C", Offset = "0xAB2E0C", VA = "0xAB2E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400077F")]
	public const int c_maxNumberOfPlayers = 4;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GlobalControl Instance;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NetworkPeerType m_networkPeerType;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_delayBetweenScenes;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ServerInfo m_serverInfo;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerStatistics m_savedPlayerData;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CollectiveStatistics m_savedCollectiveData;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xAB20B0", Offset = "0xAB20B0", VA = "0xAB20B0")]
	public void SetPeerTypeToServer()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xAB20BC", Offset = "0xAB20BC", VA = "0xAB20BC")]
	public void SetPeerTypeToClient()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xAB20C8", Offset = "0xAB20C8", VA = "0xAB20C8")]
	public bool IsServer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xAB20D8", Offset = "0xAB20D8", VA = "0xAB20D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xAB214C", Offset = "0xAB214C", VA = "0xAB214C")]
	private void RefreshLocalizedText(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xAB21EC", Offset = "0xAB21EC", VA = "0xAB21EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xAAA6E4", Offset = "0xAAA6E4", VA = "0xAAA6E4")]
	public void LoadScene(string scene, bool byNetworkManager)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xAB2434", Offset = "0xAB2434", VA = "0xAB2434")]
	public void LoadScene(int sceneId, bool byNetworkManager = false)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xAB2478", Offset = "0xAB2478", VA = "0xAB2478")]
	private static string NameFromIndex(int BuildIndex)
	{
		return null;
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xAB24E4", Offset = "0xAB24E4", VA = "0xAB24E4")]
	public void BlinkBeforeSceneChange()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xAB23AC", Offset = "0xAB23AC", VA = "0xAB23AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72FFCC", Offset = "0x72FFCC")]
	private IEnumerator StartAnotherScene(string scene, bool byNetworkManager)
	{
		return null;
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xAB26C0", Offset = "0xAB26C0", VA = "0xAB26C0")]
	public GlobalControl()
	{
	}
}
[Token(Token = "0x200018B")]
public class PlayerStatistics
{
	[Token(Token = "0x200018C")]
	public struct LinkData
	{
		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_linkName;
	}

	[Token(Token = "0x200018D")]
	public struct PlayerData
	{
		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_score;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_health;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_selectedAvatar;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_selectedHandLeft;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_selectedHandRight;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_selectedAvatarShadow;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_avatarNameId;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_volume;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_languageType;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_useFadeByHood;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_isMusicOn;

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xA24EE8", Offset = "0xA24EE8", VA = "0xA24EE8")]
		public void Init()
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xA24F74", Offset = "0xA24F74", VA = "0xA24F74")]
		public void ToggleMusic()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xA24F84", Offset = "0xA24F84", VA = "0xA24F84")]
		public bool IsMale()
		{
			return default(bool);
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xA24F8C", Offset = "0xA24F8C", VA = "0xA24F8C")]
		public static bool IsMale(string selectedAvatar)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<LinkData> m_availableLinkDataList;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerData m_playerData;

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xA244B4", Offset = "0xA244B4", VA = "0xA244B4")]
	public void SavePlayerData()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xA24600", Offset = "0xA24600", VA = "0xA24600")]
	public void LoadPlayerData()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xA24748", Offset = "0xA24748", VA = "0xA24748")]
	public void PrintData(string calledFrom = "UNSET")
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xA24E78", Offset = "0xA24E78", VA = "0xA24E78")]
	public PlayerStatistics()
	{
	}
}
[Token(Token = "0x200018E")]
public class Settings : MonoBehaviour
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_useAcceleration;

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xA33420", Offset = "0xA33420", VA = "0xA33420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xA33424", Offset = "0xA33424", VA = "0xA33424")]
	private void Update()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xA33428", Offset = "0xA33428", VA = "0xA33428")]
	private void SwitchAcceleration()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xA33438", Offset = "0xA33438", VA = "0xA33438")]
	public Settings()
	{
	}
}
[Token(Token = "0x200018F")]
public class AreaTrailHandler : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7253A8", Offset = "0x7253A8")]
	private sealed class <>c
	{
		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<GameObject> <>9__7_0;

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x96A8E4", Offset = "0x96A8E4", VA = "0x96A8E4")]
		public <>c()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x96A8EC", Offset = "0x96A8EC", VA = "0x96A8EC")]
		internal bool <Update>b__7_0(GameObject x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string m_tag;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem m_particle;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> m_triggerObjects;

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x96A430", Offset = "0x96A430", VA = "0x96A430")]
	private void Start()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x96A488", Offset = "0x96A488", VA = "0x96A488")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x96A56C", Offset = "0x96A56C", VA = "0x96A56C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x96A640", Offset = "0x96A640", VA = "0x96A640")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x96A698", Offset = "0x96A698", VA = "0x96A698")]
	private void Update()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x96A810", Offset = "0x96A810", VA = "0x96A810")]
	public AreaTrailHandler()
	{
	}
}
[Token(Token = "0x2000191")]
public class ChestLockHandler : MonoBehaviour
{
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7253B8", Offset = "0x7253B8")]
	private sealed class <CheckChestLock>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChestLockHandler <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000757")]
			[Address(RVA = "0x972038", Offset = "0x972038", VA = "0x972038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000759")]
			[Address(RVA = "0x9720A0", Offset = "0x9720A0", VA = "0x9720A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x971E08", Offset = "0x971E08", VA = "0x971E08")]
		[DebuggerHidden]
		public <CheckChestLock>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x971E3C", Offset = "0x971E3C", VA = "0x971E3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x971E40", Offset = "0x971E40", VA = "0x971E40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x972040", Offset = "0x972040", VA = "0x972040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NetChestState m_chestInfo;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x971B24", Offset = "0x971B24", VA = "0x971B24")]
	public void OpenChest()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x971BEC", Offset = "0x971BEC", VA = "0x971BEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x971D98", Offset = "0x971D98", VA = "0x971D98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7300A0", Offset = "0x7300A0")]
	private IEnumerator CheckChestLock()
	{
		return null;
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x971E34", Offset = "0x971E34", VA = "0x971E34")]
	public ChestLockHandler()
	{
	}
}
[Token(Token = "0x2000193")]
public class CrystalHandler : MonoBehaviour
{
	[Token(Token = "0x600075A")]
	[Address(RVA = "0x973820", Offset = "0x973820", VA = "0x973820")]
	private void Start()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x9738C0", Offset = "0x9738C0", VA = "0x9738C0")]
	public void GainCrystal(GameObject hand, int gainedAmount)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x97399C", Offset = "0x97399C", VA = "0x97399C")]
	public void SetCrystal(int crystal)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x973828", Offset = "0x973828", VA = "0x973828")]
	public void UpdateCrystalBottle(int crystal)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x9739A0", Offset = "0x9739A0", VA = "0x9739A0")]
	public CrystalHandler()
	{
	}
}
[Token(Token = "0x2000194")]
public class GestureHandler : MonoBehaviour
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_gestureObject;

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xAB1C40", Offset = "0xAB1C40", VA = "0xAB1C40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xAB1C60", Offset = "0xAB1C60", VA = "0xAB1C60")]
	public GestureHandler()
	{
	}
}
[Token(Token = "0x2000195")]
public class LineHandler : MonoBehaviour
{
	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_startObject;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_endObject;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer m_lineRenderer;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_fromSelf;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_lineWidth;

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x942A30", Offset = "0x942A30", VA = "0x942A30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x942BE4", Offset = "0x942BE4", VA = "0x942BE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x942BE8", Offset = "0x942BE8", VA = "0x942BE8")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x942D5C", Offset = "0x942D5C", VA = "0x942D5C")]
	public void SetConnected(GameObject startObject, GameObject endObject)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x942E14", Offset = "0x942E14", VA = "0x942E14")]
	public LineHandler()
	{
	}
}
[Token(Token = "0x2000196")]
public class ManaHandler : MonoBehaviour
{
	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SoundManager soundManager;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ControllerInputHandler controllerInputHandler;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x97FED8", Offset = "0x97FED8", VA = "0x97FED8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x980050", Offset = "0x980050", VA = "0x980050")]
	public void GainMana(int gainedAmount)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x9800EC", Offset = "0x9800EC", VA = "0x9800EC")]
	public void SetMana(int mana)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x97FFB8", Offset = "0x97FFB8", VA = "0x97FFB8")]
	public void UpdateManaBottle(int mana)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x980148", Offset = "0x980148", VA = "0x980148")]
	public ManaHandler()
	{
	}
}
[Token(Token = "0x2000197")]
public class NetToggleStateHandler : NetworkBehaviour
{
	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public bool m_toggle;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent m_onActions;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent m_offActions;

	[Token(Token = "0x170000AF")]
	public bool Networkm_toggle
	{
		[Token(Token = "0x6000770")]
		[Address(RVA = "0x9E2998", Offset = "0x9E2998", VA = "0x9E2998")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000771")]
		[Address(RVA = "0x9E2714", Offset = "0x9E2714", VA = "0x9E2714")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x9E2610", Offset = "0x9E2610", VA = "0x9E2610")]
	[Server]
	public void Toggle()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x9E2844", Offset = "0x9E2844", VA = "0x9E2844")]
	private void OnChangeToggleState(bool oldValue, bool newValue)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x9E295C", Offset = "0x9E295C", VA = "0x9E295C", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x9E298C", Offset = "0x9E298C", VA = "0x9E298C")]
	public NetToggleStateHandler()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x9E2994", Offset = "0x9E2994", VA = "0x9E2994")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x9E29A0", Offset = "0x9E29A0", VA = "0x9E29A0", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x9E2A98", Offset = "0x9E2A98", VA = "0x9E2A98", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000198")]
public class SkinHandler : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000199")]
	public struct AvatarSkin
	{
		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SkinDescriptor m_head;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private SkinDescriptor m_hat;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private SkinDescriptor m_gloves;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinDescriptor m_glasses;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SkinDescriptor m_mustache;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SkinDescriptor m_pipe;
	}

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7293A8", Offset = "0x7293A8")]
	private List<AvatarSkin> m_avatarSkinList;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xA34A14", Offset = "0xA34A14", VA = "0xA34A14")]
	public SkinHandler()
	{
	}
}
[Token(Token = "0x200019A")]
public class SolutionHandler : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200019B")]
	public struct Validator
	{
		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject m_checkerRoot;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject m_checkedRoot;
	}

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x729454", Offset = "0x729454")]
	public List<Validator> m_solutionList;

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xA3690C", Offset = "0xA3690C", VA = "0xA3690C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xA36CF0", Offset = "0xA36CF0", VA = "0xA36CF0")]
	public void CheckByShard(GameObject shardObj)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xA36948", Offset = "0xA36948", VA = "0xA36948")]
	private void CheckSolutionList()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xA36D90", Offset = "0xA36D90", VA = "0xA36D90")]
	public SolutionHandler()
	{
	}
}
[Token(Token = "0x200019C")]
public class NetPushSwitchStateHandler : NetworkBehaviour
{
	[Token(Token = "0x200019D")]
	private enum NetState
	{
		[Token(Token = "0x40007CA")]
		Idle,
		[Token(Token = "0x40007CB")]
		Activated,
		[Token(Token = "0x40007CC")]
		Release,
		[Token(Token = "0x40007CD")]
		Final
	}

	[Token(Token = "0x200019E")]
	private enum LocalState
	{
		[Token(Token = "0x40007CF")]
		Active,
		[Token(Token = "0x40007D0")]
		Inactive,
		[Token(Token = "0x40007D1")]
		Activated,
		[Token(Token = "0x40007D2")]
		Release,
		[Token(Token = "0x40007D3")]
		Final
	}

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public UnityEvent m_serverActionOnActivation;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public UnityEvent m_serverActionOnReleasing;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_animTerminatedOnServer;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool m_finalFlagOnServer;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool m_triggerExit;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7294AC", Offset = "0x7294AC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7294AC", Offset = "0x7294AC")]
	private int m_crystalPrice;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SyncVar]
	private NetState m_netState;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private LocalState m_localState;

	[Token(Token = "0x170000B0")]
	public int CrystalPrice
	{
		[Token(Token = "0x600077F")]
		[Address(RVA = "0x9DDC80", Offset = "0x9DDC80", VA = "0x9DDC80")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B1")]
	public NetState Networkm_netState
	{
		[Token(Token = "0x600078C")]
		[Address(RVA = "0x9DE34C", Offset = "0x9DE34C", VA = "0x9DE34C")]
		get
		{
			return default(NetState);
		}
		[Token(Token = "0x600078D")]
		[Address(RVA = "0x9DDA40", Offset = "0x9DDA40", VA = "0x9DDA40")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x9DD680", Offset = "0x9DD680", VA = "0x9DD680")]
	[ServerCallback]
	public void AnimationTerminatedOnServer()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x9DD73C", Offset = "0x9DD73C", VA = "0x9DD73C")]
	[ServerCallback]
	public void SetFinalFlagOnServer()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x9DD7F8", Offset = "0x9DD7F8", VA = "0x9DD7F8")]
	[Server]
	public bool TriggerEnterOnServer()
	{
		return default(bool);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x9DD928", Offset = "0x9DD928", VA = "0x9DD928")]
	[Server]
	public bool TriggerExitOnServer()
	{
		return default(bool);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x9DD91C", Offset = "0x9DD91C", VA = "0x9DD91C")]
	private void ChangeNetStateTo(NetState newState)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x9DDB58", Offset = "0x9DDB58", VA = "0x9DDB58")]
	[ServerCallback]
	private void UpdateOnServer()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x9DDC88", Offset = "0x9DDC88", VA = "0x9DDC88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x9DDD84", Offset = "0x9DDD84", VA = "0x9DDD84")]
	private LocalState GetLocalStateOfIdle()
	{
		return default(LocalState);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x9DDE28", Offset = "0x9DDE28", VA = "0x9DDE28", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x9DDFA4", Offset = "0x9DDFA4", VA = "0x9DDFA4")]
	public void TriggerEnterByLocalPlayer()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x9DE054", Offset = "0x9DE054", VA = "0x9DE054")]
	public void TriggerExitByLocalPlayer()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x9DDCAC", Offset = "0x9DDCAC", VA = "0x9DDCAC")]
	private void UpdateOnLocal()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x9DE104", Offset = "0x9DE104", VA = "0x9DE104")]
	private void OnChangeState(NetState oldValue, NetState newValue)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x9DDEFC", Offset = "0x9DDEFC", VA = "0x9DDEFC")]
	private void ShowLocalState()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x9DE240", Offset = "0x9DE240", VA = "0x9DE240")]
	public NetPushSwitchStateHandler()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x9DE250", Offset = "0x9DE250", VA = "0x9DE250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7301B4", Offset = "0x7301B4")]
	private void <OnStartClient>b__20_0(NumToMesh numToMesh)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x9DE274", Offset = "0x9DE274", VA = "0x9DE274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7301C4", Offset = "0x7301C4")]
	private void <ShowLocalState>b__25_0(LocalState state)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x9DE348", Offset = "0x9DE348", VA = "0x9DE348")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x9DE354", Offset = "0x9DE354", VA = "0x9DE354", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x9DE414", Offset = "0x9DE414", VA = "0x9DE414", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200019F")]
public class NetSwitchStateHandler : NetworkBehaviour
{
	[Token(Token = "0x20001A0")]
	private enum NetState
	{
		[Token(Token = "0x40007DB")]
		Available,
		[Token(Token = "0x40007DC")]
		Activated
	}

	[Token(Token = "0x20001A1")]
	private enum LocalState
	{
		[Token(Token = "0x40007DE")]
		Active,
		[Token(Token = "0x40007DF")]
		Inactive,
		[Token(Token = "0x40007E0")]
		Activated
	}

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[SyncVar]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729550", Offset = "0x729550")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x729550", Offset = "0x729550")]
	private int m_crystalPrice;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private bool m_oneTimeSwitch;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[SyncVar]
	private bool m_hasBeenSwitched;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	private NetState m_netState;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private LocalState m_localState;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public UnityEvent m_openAction;

	[Token(Token = "0x170000B2")]
	public int Networkm_crystalPrice
	{
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x9E1BE8", Offset = "0x9E1BE8", VA = "0x9E1BE8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600079D")]
		[Address(RVA = "0x9E1344", Offset = "0x9E1344", VA = "0x9E1344")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public bool Networkm_hasBeenSwitched
	{
		[Token(Token = "0x600079E")]
		[Address(RVA = "0x9E1BF0", Offset = "0x9E1BF0", VA = "0x9E1BF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600079F")]
		[Address(RVA = "0x9E12A4", Offset = "0x9E12A4", VA = "0x9E12A4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public NetState Networkm_netState
	{
		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x9E1BF8", Offset = "0x9E1BF8", VA = "0x9E1BF8")]
		get
		{
			return default(NetState);
		}
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x9E13E0", Offset = "0x9E13E0", VA = "0x9E13E0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x9E1054", Offset = "0x9E1054", VA = "0x9E1054")]
	public int GetCrystalPrice()
	{
		return default(int);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x9E105C", Offset = "0x9E105C", VA = "0x9E105C")]
	[Server]
	public bool IsActivated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x9E1158", Offset = "0x9E1158", VA = "0x9E1158")]
	[Server]
	public void Switch()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x9E14F8", Offset = "0x9E14F8", VA = "0x9E14F8", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x9E176C", Offset = "0x9E176C", VA = "0x9E176C")]
	private void OnChangeState(NetState oldValue, NetState newValue)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x9E18F8", Offset = "0x9E18F8", VA = "0x9E18F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x9E15CC", Offset = "0x9E15CC", VA = "0x9E15CC")]
	private void ShowLocalState()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x9E1A44", Offset = "0x9E1A44", VA = "0x9E1A44")]
	[ServerCallback]
	public void ResetSwitcherState()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x9E1B10", Offset = "0x9E1B10", VA = "0x9E1B10")]
	public void OpenSwitchByLocalPlayer(GameObject playerHand)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x9E1BB0", Offset = "0x9E1BB0", VA = "0x9E1BB0")]
	public NetSwitchStateHandler()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x9E1BC0", Offset = "0x9E1BC0", VA = "0x9E1BC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730204", Offset = "0x730204")]
	private void <OnStartClient>b__11_0(NumToMesh numToMesh)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x9E1BE4", Offset = "0x9E1BE4", VA = "0x9E1BE4")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x9E1C00", Offset = "0x9E1C00", VA = "0x9E1C00", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x9E1D90", Offset = "0x9E1D90", VA = "0x9E1D90", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001A2")]
public class TimerHandler : MonoBehaviour
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x729634", Offset = "0x729634")]
	[SerializeField]
	private List<TimedAction> m_timedActionList;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_looped;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Timer m_timer;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_timerIx;

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xA4C2FC", Offset = "0xA4C2FC", VA = "0xA4C2FC")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xA4C45C", Offset = "0xA4C45C", VA = "0xA4C45C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xA4C5D4", Offset = "0xA4C5D4", VA = "0xA4C5D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xA4C4AC", Offset = "0xA4C4AC", VA = "0xA4C4AC")]
	private void ProcessActions()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xA4C5D8", Offset = "0xA4C5D8", VA = "0xA4C5D8")]
	private void ExecuteAction()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xA4C740", Offset = "0xA4C740", VA = "0xA4C740")]
	public TimerHandler()
	{
	}
}
[Token(Token = "0x20001A3")]
public class ManaPathFollower : MonoBehaviour
{
	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CachedPath m_pathCache;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EndOfPathInstruction m_endOfPathInstruction;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distanceTravelled;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> m_follwerObjects;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public UnityEvent m_pathEndAction;

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x980150", Offset = "0x980150", VA = "0x980150")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x9803FC", Offset = "0x9803FC", VA = "0x9803FC")]
	public ManaPathFollower()
	{
	}
}
[Token(Token = "0x20001A4")]
public class ManaShard : MonoBehaviour
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_amount;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_ResourceText;

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x980474", Offset = "0x980474", VA = "0x980474")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x980820", Offset = "0x980820", VA = "0x980820")]
	private void DoEnding()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x980A18", Offset = "0x980A18", VA = "0x980A18")]
	private void CreateResourceText()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x980BC8", Offset = "0x980BC8", VA = "0x980BC8")]
	public ManaShard()
	{
	}
}
[Token(Token = "0x20001A5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7253C8", Offset = "0x7253C8")]
public class ManaEmitterOnPlane : ObjectEmitterOnPlane
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CachedPath m_localPathCreator;

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x97FD64", Offset = "0x97FD64", VA = "0x97FD64")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x97FDBC", Offset = "0x97FDBC", VA = "0x97FDBC", Slot = "4")]
	public override GameObject InstantiateObject(GameObject prefab, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x97FEB4", Offset = "0x97FEB4", VA = "0x97FEB4")]
	public ManaEmitterOnPlane()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x97FEBC", Offset = "0x97FEBC", VA = "0x97FEBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730214", Offset = "0x730214")]
	private void <InstantiateObject>b__2_0(ManaPathFollower manaPathFollower)
	{
	}
}
[Token(Token = "0x20001A6")]
public class NetMagicCandleStateHandler : NetworkBehaviour
{
	[Token(Token = "0x20001A7")]
	private enum State
	{
		[Token(Token = "0x40007F1")]
		Start,
		[Token(Token = "0x40007F2")]
		Active,
		[Token(Token = "0x40007F3")]
		Stop,
		[Token(Token = "0x40007F4")]
		Inactive
	}

	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72542C", Offset = "0x72542C")]
	private sealed class <ChangeStateLaterTo>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int seconds;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NetMagicCandleStateHandler <>4__this;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public State newState;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007C4")]
			[Address(RVA = "0x996504", Offset = "0x996504", VA = "0x996504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C6")]
			[Address(RVA = "0x99656C", Offset = "0x99656C", VA = "0x99656C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x995FB8", Offset = "0x995FB8", VA = "0x995FB8")]
		[DebuggerHidden]
		public <ChangeStateLaterTo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x99644C", Offset = "0x99644C", VA = "0x99644C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x996450", Offset = "0x996450", VA = "0x996450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x99650C", Offset = "0x99650C", VA = "0x99650C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[SyncVar]
	private State m_state;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine m_stateChanger;

	[Token(Token = "0x170000B5")]
	public State Networkm_state
	{
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x996298", Offset = "0x996298", VA = "0x996298")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x995E18", Offset = "0x995E18", VA = "0x995E18")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x9914E8", Offset = "0x9914E8", VA = "0x9914E8")]
	[Server]
	public void LitOffByPlayer()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x97F504", Offset = "0x97F504", VA = "0x97F504")]
	[Server]
	public void LitOn()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x97F3C0", Offset = "0x97F3C0", VA = "0x97F3C0")]
	[Server]
	public void LitOff()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x995F30", Offset = "0x995F30", VA = "0x995F30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x730254", Offset = "0x730254")]
	private IEnumerator ChangeStateLaterTo(State newState, int seconds)
	{
		return null;
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x995FE4", Offset = "0x995FE4", VA = "0x995FE4", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x99608C", Offset = "0x99608C", VA = "0x99608C")]
	private void OnChangeState(State oldValue, State newValue)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x9961B4", Offset = "0x9961B4", VA = "0x9961B4")]
	public NetMagicCandleStateHandler()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x9961C4", Offset = "0x9961C4", VA = "0x9961C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7302B8", Offset = "0x7302B8")]
	private void <OnStartClient>b__7_0(State state)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x996294", Offset = "0x996294", VA = "0x996294")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x9962A0", Offset = "0x9962A0", VA = "0x9962A0", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x99635C", Offset = "0x99635C", VA = "0x99635C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001A9")]
public class ObjectEmitterOnPlane : MonoBehaviour
{
	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72543C", Offset = "0x72543C")]
	private sealed class <Spawner>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectEmitterOnPlane <>4__this;

		[Token(Token = "0x170000B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0xD871B4", Offset = "0xD871B4", VA = "0xD871B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0xD8721C", Offset = "0xD8721C", VA = "0xD8721C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xD86DB4", Offset = "0xD86DB4", VA = "0xD86DB4")]
		[DebuggerHidden]
		public <Spawner>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xD870C0", Offset = "0xD870C0", VA = "0xD870C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xD870C4", Offset = "0xD870C4", VA = "0xD870C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xD871BC", Offset = "0xD871BC", VA = "0xD871BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729700", Offset = "0x729700")]
	public float m_emitInOneSec;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72971C", Offset = "0x72971C")]
	public float m_lifeTimeInSec;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_emitPrefabList;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729754", Offset = "0x729754")]
	public float m_delayAtStart;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_spawnByNetwork;

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xD86D18", Offset = "0xD86D18", VA = "0xD86D18")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xD86D44", Offset = "0xD86D44", VA = "0xD86D44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x730318", Offset = "0x730318")]
	private IEnumerator Spawner()
	{
		return null;
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xD86DE0", Offset = "0xD86DE0", VA = "0xD86DE0")]
	private void SpawnRandomObject()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xD86F10", Offset = "0xD86F10", VA = "0xD86F10", Slot = "4")]
	public virtual GameObject InstantiateObject(GameObject prefab, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xD87048", Offset = "0xD87048", VA = "0xD87048")]
	public ObjectEmitterOnPlane()
	{
	}
}
[Token(Token = "0x20001AB")]
public class NetRuneStateHandler : NetworkBehaviour
{
	[Token(Token = "0x20001AC")]
	private enum State
	{
		[Token(Token = "0x400080B")]
		On,
		[Token(Token = "0x400080C")]
		Off,
		[Token(Token = "0x400080D")]
		PickUp
	}

	[Token(Token = "0x20001AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72544C", Offset = "0x72544C")]
	private sealed class <SwitchPeriodically>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetRuneStateHandler <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x9E03F0", Offset = "0x9E03F0", VA = "0x9E03F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x9E0458", Offset = "0x9E0458", VA = "0x9E0458", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x9DFAD8", Offset = "0x9DFAD8", VA = "0x9DFAD8")]
		[DebuggerHidden]
		public <SwitchPeriodically>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x9E02AC", Offset = "0x9E02AC", VA = "0x9E02AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x9E02B0", Offset = "0x9E02B0", VA = "0x9E02B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x9E03F8", Offset = "0x9E03F8", VA = "0x9E03F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	private State m_state;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SyncVar]
	private int m_collected;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private NumToMesh m_collectedNumVisualHandler;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private NumToMesh m_requiredNumVisualHandler;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729808", Offset = "0x729808")]
	public float m_onPeriodInSec;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729820", Offset = "0x729820")]
	public float m_offPeriodInSec;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729838", Offset = "0x729838")]
	public float m_delayAtStart;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine m_periodicalSwitcher;

	[Token(Token = "0x170000BA")]
	public State Networkm_state
	{
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x9DFF9C", Offset = "0x9DFF9C", VA = "0x9DFF9C")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x9DFD94", Offset = "0x9DFD94", VA = "0x9DFD94")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public int Networkm_collected
	{
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x9DFFA4", Offset = "0x9DFFA4", VA = "0x9DFFA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x9DF8FC", Offset = "0x9DF8FC", VA = "0x9DF8FC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x9DF6AC", Offset = "0x9DF6AC", VA = "0x9DF6AC")]
	private void OnChangeState(State oldValue, State newValue)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x9DF7DC", Offset = "0x9DF7DC", VA = "0x9DF7DC")]
	private void OnChangeCollected(int oldValue, int newValue)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x9DF7FC", Offset = "0x9DF7FC", VA = "0x9DF7FC")]
	[Server]
	public void SetCollected(int value)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x9DFA18", Offset = "0x9DFA18", VA = "0x9DFA18")]
	public void SetRequired(int value)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x9DFA34", Offset = "0x9DFA34", VA = "0x9DFA34", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x9DFA68", Offset = "0x9DFA68", VA = "0x9DFA68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7303DC", Offset = "0x7303DC")]
	private IEnumerator SwitchPeriodically()
	{
		return null;
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x9DFB04", Offset = "0x9DFB04", VA = "0x9DFB04", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x9DFBAC", Offset = "0x9DFBAC", VA = "0x9DFBAC")]
	public void PickUpByLocalPlayer(GameObject control)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x9DFC4C", Offset = "0x9DFC4C", VA = "0x9DFC4C")]
	[Server]
	public void PickUp()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x9DFEAC", Offset = "0x9DFEAC", VA = "0x9DFEAC")]
	public NetRuneStateHandler()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x9DFEC4", Offset = "0x9DFEC4", VA = "0x9DFEC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730450", Offset = "0x730450")]
	private void <OnStartClient>b__15_0(State state)
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x9DFF98", Offset = "0x9DFF98", VA = "0x9DFF98")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x9DFFAC", Offset = "0x9DFFAC", VA = "0x9DFFAC", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x9E00CC", Offset = "0x9E00CC", VA = "0x9E00CC", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Serializable]
[Token(Token = "0x20001AE")]
public class IntEvent : UnityEvent<int>
{
	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x93DF70", Offset = "0x93DF70", VA = "0x93DF70")]
	public IntEvent()
	{
	}
}
[Token(Token = "0x20001AF")]
public class RuneCollectionHandler : MonoBehaviour
{
	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_collectedRunes;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public UnityEvent m_successAction;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public IntEvent m_numOfCollectableRunesChangedAction;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NetRuneStateHandler[] m_runeStateHandlers;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xA2FB3C", Offset = "0xA2FB3C", VA = "0xA2FB3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xA2FC14", Offset = "0xA2FC14", VA = "0xA2FC14")]
	public void PickUpOneRune()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xA2FD0C", Offset = "0xA2FD0C", VA = "0xA2FD0C")]
	public RuneCollectionHandler()
	{
	}
}
[Token(Token = "0x20001B0")]
public class NetTorchStateHandler : NetworkBehaviour
{
	[Token(Token = "0x20001B1")]
	private enum State
	{
		[Token(Token = "0x4000817")]
		Start,
		[Token(Token = "0x4000818")]
		Active,
		[Token(Token = "0x4000819")]
		Stop,
		[Token(Token = "0x400081A")]
		Inactive
	}

	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72545C", Offset = "0x72545C")]
	private sealed class <ChangeStateLaterTo>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetTorchStateHandler <>4__this;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public State newState;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0x9E3528", Offset = "0x9E3528", VA = "0x9E3528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007FF")]
			[Address(RVA = "0x9E3590", Offset = "0x9E3590", VA = "0x9E3590", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x9E2FD4", Offset = "0x9E2FD4", VA = "0x9E2FD4")]
		[DebuggerHidden]
		public <ChangeStateLaterTo>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x9E347C", Offset = "0x9E347C", VA = "0x9E347C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x9E3480", Offset = "0x9E3480", VA = "0x9E3480", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x9E3530", Offset = "0x9E3530", VA = "0x9E3530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[SyncVar]
	private State m_state;

	[Token(Token = "0x170000BE")]
	public State Networkm_state
	{
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x9E32C0", Offset = "0x9E32C0", VA = "0x9E32C0")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x9E2D08", Offset = "0x9E2D08", VA = "0x9E2D08")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x9E2BD4", Offset = "0x9E2BD4", VA = "0x9E2BD4")]
	[Server]
	public void LitOn()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x9E2EA0", Offset = "0x9E2EA0", VA = "0x9E2EA0")]
	[Server]
	public void LitOff()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x9E2E20", Offset = "0x9E2E20", VA = "0x9E2E20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7304D0", Offset = "0x7304D0")]
	private IEnumerator ChangeStateLaterTo(State newState)
	{
		return null;
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x9E3000", Offset = "0x9E3000", VA = "0x9E3000", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x9E30A8", Offset = "0x9E30A8", VA = "0x9E30A8")]
	private void OnChangeState(State oldValue, State newValue)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x9E31D8", Offset = "0x9E31D8", VA = "0x9E31D8")]
	public NetTorchStateHandler()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x9E31E8", Offset = "0x9E31E8", VA = "0x9E31E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730534", Offset = "0x730534")]
	private void <OnStartClient>b__5_0(State state)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x9E32BC", Offset = "0x9E32BC", VA = "0x9E32BC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x9E32C8", Offset = "0x9E32C8", VA = "0x9E32C8", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x9E3388", Offset = "0x9E3388", VA = "0x9E3388", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001B3")]
public class InitiatorToGameScene : MonoBehaviour
{
	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72546C", Offset = "0x72546C")]
	private sealed class <StartGameSceneLater>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0x93DD20", Offset = "0x93DD20", VA = "0x93DD20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600080D")]
			[Address(RVA = "0x93DD88", Offset = "0x93DD88", VA = "0x93DD88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x93D91C", Offset = "0x93D91C", VA = "0x93D91C")]
		[DebuggerHidden]
		public <StartGameSceneLater>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x93DAF0", Offset = "0x93DAF0", VA = "0x93DAF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x93DAF4", Offset = "0x93DAF4", VA = "0x93DAF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x93DD28", Offset = "0x93DD28", VA = "0x93DD28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7298C4", Offset = "0x7298C4")]
	public int m_numberOfActivation;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7298DC", Offset = "0x7298DC")]
	public float[] m_speeds;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_percentToInitiating;

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x93D6A0", Offset = "0x93D6A0", VA = "0x93D6A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x93D834", Offset = "0x93D834", VA = "0x93D834")]
	public void StartGameScene()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x93D8BC", Offset = "0x93D8BC", VA = "0x93D8BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x730594", Offset = "0x730594")]
	private IEnumerator StartGameSceneLater()
	{
		return null;
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x93D948", Offset = "0x93D948", VA = "0x93D948")]
	public float GetInitiatingPercent()
	{
		return default(float);
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x93D950", Offset = "0x93D950", VA = "0x93D950")]
	public int GetSpeed()
	{
		return default(int);
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x93DA58", Offset = "0x93DA58", VA = "0x93DA58")]
	public void ActivateGateByOnePlayer()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x93DA68", Offset = "0x93DA68", VA = "0x93DA68")]
	public void DeactivateGateByOnePlayer()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x93DA78", Offset = "0x93DA78", VA = "0x93DA78")]
	public InitiatorToGameScene()
	{
	}
}
[Token(Token = "0x20001B5")]
public class LobbyIndicatorStoneMover : MonoBehaviour
{
	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_startPos;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_targetPos;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InitiatorToGameScene m_initiator;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x943970", Offset = "0x943970", VA = "0x943970")]
	private void Start()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x943A98", Offset = "0x943A98", VA = "0x943A98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x943B7C", Offset = "0x943B7C", VA = "0x943B7C")]
	public LobbyIndicatorStoneMover()
	{
	}
}
[Token(Token = "0x20001B6")]
public class NetLobbyIndicatorChainSoundHandler : NetworkBehaviour
{
	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	private int m_chainSpeed;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource m_chainAudio;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InitiatorToGameScene m_initiator;

	[Token(Token = "0x170000C3")]
	public int Networkm_chainSpeed
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x995BEC", Offset = "0x995BEC", VA = "0x995BEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x995958", Offset = "0x995958", VA = "0x995958")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x995908", Offset = "0x995908", VA = "0x995908")]
	private void Update()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x995A70", Offset = "0x995A70", VA = "0x995A70")]
	private void OnChangeSpeed(int oldSpeed, int newSpeed)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x995B60", Offset = "0x995B60", VA = "0x995B60", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x995BD4", Offset = "0x995BD4", VA = "0x995BD4", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x995BE0", Offset = "0x995BE0", VA = "0x995BE0")]
	public NetLobbyIndicatorChainSoundHandler()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x995BE8", Offset = "0x995BE8", VA = "0x995BE8")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x995BF4", Offset = "0x995BF4", VA = "0x995BF4", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x995CE8", Offset = "0x995CE8", VA = "0x995CE8", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001B7")]
public class AnswerSelector : MonoBehaviour
{
	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color m_selectedAnswer;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color m_unselectedAnswer;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_questionId;

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x9698D8", Offset = "0x9698D8", VA = "0x9698D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x969998", Offset = "0x969998", VA = "0x969998")]
	public void RefreshAnswer()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x969C88", Offset = "0x969C88", VA = "0x969C88")]
	public void SelectAnswer()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x969D98", Offset = "0x969D98", VA = "0x969D98")]
	public AnswerSelector()
	{
	}
}
[Token(Token = "0x20001B8")]
public class ButtonEffect : MonoBehaviour
{
	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_effectObject;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_offset;

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x96F0CC", Offset = "0x96F0CC", VA = "0x96F0CC")]
	public void PlayEffect()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x96F1D4", Offset = "0x96F1D4", VA = "0x96F1D4")]
	public ButtonEffect()
	{
	}
}
[Token(Token = "0x20001B9")]
public class FocusHandler : MonoBehaviour
{
	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_focusObject;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_HandPrefab;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GameObject> m_HandPrefabList;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_focusRoot;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject m_focusedObj;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xAAF8BC", Offset = "0xAAF8BC", VA = "0xAAF8BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xAAFBE4", Offset = "0xAAFBE4", VA = "0xAAFBE4")]
	public void SetFocusedObj(GameObject focused)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xAAFBEC", Offset = "0xAAFBEC", VA = "0xAAFBEC")]
	public bool HasFocusedObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xAAFC5C", Offset = "0xAAFC5C", VA = "0xAAFC5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xAAFD3C", Offset = "0xAAFD3C", VA = "0xAAFD3C")]
	public bool IsInSelectedCell()
	{
		return default(bool);
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xAAFEA8", Offset = "0xAAFEA8", VA = "0xAAFEA8")]
	public Vector3 GetFocusObjectPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xAAFF48", Offset = "0xAAFF48", VA = "0xAAFF48")]
	public FocusHandler()
	{
	}
}
[Token(Token = "0x20001BA")]
public class FocusPointHandler : MonoBehaviour
{
	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_minDist;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_maxDist;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_growthPerSecond;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_actDist;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform m_actHand;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_focusedPos;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 m_modRotation;

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xAAFF50", Offset = "0xAAFF50", VA = "0xAAFF50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xAB013C", Offset = "0xAB013C", VA = "0xAB013C")]
	private void Update()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xAB02D4", Offset = "0xAB02D4", VA = "0xAB02D4")]
	public void FocusCloser()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xAB0338", Offset = "0xAB0338", VA = "0xAB0338")]
	public void FocusFurther()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xAB0140", Offset = "0xAB0140", VA = "0xAB0140")]
	private void UpdateFocusObject()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xAB039C", Offset = "0xAB039C", VA = "0xAB039C")]
	public FocusPointHandler()
	{
	}
}
[Token(Token = "0x20001BB")]
public class IdSymbolConverter : MonoBehaviour
{
	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_symbolPrefab1;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_symbolPrefab2;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_symbolPrefab3;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_symbolPrefab4;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> m_placesList;

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xAB5530", Offset = "0xAB5530", VA = "0xAB5530")]
	public void ConvertIdToSymbol(int id, float scale = 1f)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xAB6610", Offset = "0xAB6610", VA = "0xAB6610")]
	public void RemoveSymbols()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xAB6738", Offset = "0xAB6738", VA = "0xAB6738")]
	public void ShowServerSymbol(float scale)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xAB6840", Offset = "0xAB6840", VA = "0xAB6840")]
	public IdSymbolConverter()
	{
	}
}
[Token(Token = "0x20001BC")]
public class InGameMenuHandler : MonoBehaviour
{
	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_toggleHood;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_toggleMusic;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Button m_menuButton;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioVolumeHandler m_audioVolumeHandler;

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x93BADC", Offset = "0x93BADC", VA = "0x93BADC")]
	private void InitMenuButton()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x93BB58", Offset = "0x93BB58", VA = "0x93BB58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x93BE3C", Offset = "0x93BE3C", VA = "0x93BE3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x93BEC4", Offset = "0x93BEC4", VA = "0x93BEC4")]
	public void ToggleMenu()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x93C020", Offset = "0x93C020", VA = "0x93C020")]
	public void OpenMenu()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x93C0E4", Offset = "0x93C0E4", VA = "0x93C0E4")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x93C170", Offset = "0x93C170", VA = "0x93C170")]
	public void QuitToMenu()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x93C268", Offset = "0x93C268", VA = "0x93C268")]
	public void ToggleHood()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x93C320", Offset = "0x93C320", VA = "0x93C320")]
	public void ToggleMusic()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x93BF5C", Offset = "0x93BF5C", VA = "0x93BF5C")]
	public void BackToGame()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x93BC38", Offset = "0x93BC38", VA = "0x93BC38")]
	private void SetHoodToggle()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x93BD2C", Offset = "0x93BD2C", VA = "0x93BD2C")]
	private void SetMusicToggle()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x93C3D8", Offset = "0x93C3D8", VA = "0x93C3D8")]
	public InGameMenuHandler()
	{
	}
}
[Token(Token = "0x20001BD")]
public class InGameMenuHandsController : MonoBehaviour
{
	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_leftControllerAnchor;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_rightControllerAnchor;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ControllerInputHandler m_controllerInputHandler;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRPlayerController m_ovrPlayerController;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject m_teleportHandler;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x93C3E0", Offset = "0x93C3E0", VA = "0x93C3E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x93C524", Offset = "0x93C524", VA = "0x93C524")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x93C640", Offset = "0x93C640", VA = "0x93C640")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x93C75C", Offset = "0x93C75C", VA = "0x93C75C")]
	public InGameMenuHandsController()
	{
	}
}
[Token(Token = "0x20001BE")]
public class InGameMenuRotator : MonoBehaviour
{
	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_radius;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_rotationSpeed;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_currentMenuIndex;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion[] m_angles;

	[Token(Token = "0x170000C4")]
	private float Segment
	{
		[Token(Token = "0x6000843")]
		[Address(RVA = "0x93C764", Offset = "0x93C764", VA = "0x93C764")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x93C798", Offset = "0x93C798", VA = "0x93C798")]
	private void Start()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x93CB44", Offset = "0x93CB44", VA = "0x93CB44")]
	public void RotateRight()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x93CC5C", Offset = "0x93CC5C", VA = "0x93CC5C")]
	public void RotateLeft()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x93CD74", Offset = "0x93CD74", VA = "0x93CD74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x93CDE0", Offset = "0x93CDE0", VA = "0x93CDE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x93CF18", Offset = "0x93CF18", VA = "0x93CF18")]
	public InGameMenuRotator()
	{
	}
}
[Token(Token = "0x20001BF")]
public class InGameMenuScreenFadeHandler : MonoBehaviour
{
	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_trackedGameObject;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x93CF2C", Offset = "0x93CF2C", VA = "0x93CF2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x93CF68", Offset = "0x93CF68", VA = "0x93CF68")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x93D000", Offset = "0x93D000", VA = "0x93D000")]
	public InGameMenuScreenFadeHandler()
	{
	}
}
[Token(Token = "0x20001C0")]
public class InGameMenuSystemCamTracker : MonoBehaviour
{
	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform m_trackedTransform;

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x93D008", Offset = "0x93D008", VA = "0x93D008")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x93D050", Offset = "0x93D050", VA = "0x93D050")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x93D1E4", Offset = "0x93D1E4", VA = "0x93D1E4")]
	public InGameMenuSystemCamTracker()
	{
	}
}
[Token(Token = "0x20001C1")]
public class ItemSelector : MonoBehaviour
{
	[Token(Token = "0x20001C2")]
	public enum ItemType
	{
		[Token(Token = "0x4000852")]
		HEAD,
		[Token(Token = "0x4000853")]
		HAT,
		[Token(Token = "0x4000854")]
		HANDSLEFT,
		[Token(Token = "0x4000855")]
		HANDSRIGHT,
		[Token(Token = "0x4000856")]
		HANDSLEFT_MIRROR,
		[Token(Token = "0x4000857")]
		HANDSRIGHT_MIRROR,
		[Token(Token = "0x4000858")]
		GLASSES,
		[Token(Token = "0x4000859")]
		MUSTACHE,
		[Token(Token = "0x400085A")]
		PIPE,
		[Token(Token = "0x400085B")]
		SHADOW
	}

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_itemsHolderList;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 m_originalPlace;

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x93E060", Offset = "0x93E060", VA = "0x93E060")]
	private void Start()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x93E900", Offset = "0x93E900", VA = "0x93E900")]
	public void SelectItem()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x93F8C4", Offset = "0x93F8C4", VA = "0x93F8C4")]
	private void RefreshChosenIndex(out int chosenIx, int siblingIx, int childCount)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x9400EC", Offset = "0x9400EC", VA = "0x9400EC")]
	public ItemSelector()
	{
	}
}
[Token(Token = "0x20001C3")]
public class MainMenu : MonoBehaviour
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_vibrationLength;

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x97FA3C", Offset = "0x97FA3C", VA = "0x97FA3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x97FAAC", Offset = "0x97FAAC", VA = "0x97FAAC")]
	public void SinglePlayerGame(string level = "Level1")
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x97FB58", Offset = "0x97FB58", VA = "0x97FB58")]
	public void HostGame(string level = "Level1")
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x97FC08", Offset = "0x97FC08", VA = "0x97FC08")]
	public void Avatar()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x97FC74", Offset = "0x97FC74", VA = "0x97FC74")]
	public void BackToMain()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x97FCE0", Offset = "0x97FCE0", VA = "0x97FCE0")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x97FD54", Offset = "0x97FD54", VA = "0x97FD54")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x20001C4")]
public class QuestionnaireMenu : MonoBehaviour
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string m_persistentPath;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_combinedPath;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_fileName;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_activeQuestionIx;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject StonePrevious;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject StoneNext;

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xA288F8", Offset = "0xA288F8", VA = "0xA288F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xA288FC", Offset = "0xA288FC", VA = "0xA288FC")]
	private void CreateFile()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xA28FAC", Offset = "0xA28FAC", VA = "0xA28FAC")]
	public void SetActiveQuestion(bool nextQuestion)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xA292AC", Offset = "0xA292AC", VA = "0xA292AC")]
	private void SaveAnswer(string fullAnswer)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xA293B8", Offset = "0xA293B8", VA = "0xA293B8")]
	public void QuestionAnswer(int questionId, string answerId)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xA29530", Offset = "0xA29530", VA = "0xA29530")]
	private void SendCollectedData()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xA29774", Offset = "0xA29774", VA = "0xA29774")]
	public void BackToMain()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xA297E0", Offset = "0xA297E0", VA = "0xA297E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xA29858", Offset = "0xA29858", VA = "0xA29858")]
	public QuestionnaireMenu()
	{
	}
}
[Token(Token = "0x20001C5")]
public class ServerSelector : MonoBehaviour
{
	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> m_serverList;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_actServerIx;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_actServerId;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_init;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HostListingController m_hostListingController;

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xA32D74", Offset = "0xA32D74", VA = "0xA32D74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xA33018", Offset = "0xA33018", VA = "0xA33018")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xA32E54", Offset = "0xA32E54", VA = "0xA32E54")]
	private void OnAvailableServerListChanged(List<int> newServerList)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xA32F18", Offset = "0xA32F18", VA = "0xA32F18")]
	public void ServerIdsRefreshed()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xA33214", Offset = "0xA33214", VA = "0xA33214")]
	public void SetPreviousServer()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xA3330C", Offset = "0xA3330C", VA = "0xA3330C")]
	public void SetNextServer()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xA330CC", Offset = "0xA330CC", VA = "0xA330CC")]
	private void ShowServerSymbol()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xA3321C", Offset = "0xA3321C", VA = "0xA3321C")]
	private void SlideServer(bool forward)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xA33348", Offset = "0xA33348", VA = "0xA33348")]
	public void JoinServer()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xA33314", Offset = "0xA33314", VA = "0xA33314")]
	private void RefreshChosenIndex(out int chosenIx, bool forward, int childCount)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xA33408", Offset = "0xA33408", VA = "0xA33408")]
	public ServerSelector()
	{
	}
}
[Token(Token = "0x20001C6")]
public class SkipLogoScene : MonoBehaviour
{
	[Token(Token = "0x600086F")]
	[Address(RVA = "0xA34A1C", Offset = "0xA34A1C", VA = "0xA34A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xA34C28", Offset = "0xA34C28", VA = "0xA34C28")]
	public SkipLogoScene()
	{
	}
}
[Token(Token = "0x20001C7")]
public class ChallengeSpawner : NetworkBehaviour
{
	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_challengePrefab;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_spawnArea;

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x96F898", Offset = "0x96F898", VA = "0x96F898", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x96F89C", Offset = "0x96F89C", VA = "0x96F89C")]
	private void SpawnChallenges()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x96F8A0", Offset = "0x96F8A0", VA = "0x96F8A0")]
	public ChallengeSpawner()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x96F8A8", Offset = "0x96F8A8", VA = "0x96F8A8")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20001C8")]
public class ServerHandler
{
	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DiscoveryResponseMessage m_discoveryResponse;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DateTime m_lastRefreshTime;

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xA32CCC", Offset = "0xA32CCC", VA = "0xA32CCC")]
	public bool IsTimedOut(int timeOutInSec)
	{
		return default(bool);
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xA32D6C", Offset = "0xA32D6C", VA = "0xA32D6C")]
	public ServerHandler()
	{
	}
}
[Token(Token = "0x20001C9")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x72547C", Offset = "0x72547C")]
public class HostListingController : MonoBehaviour
{
	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7254C8", Offset = "0x7254C8")]
	private sealed class <CheckServerTimeouts>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HostListingController <>4__this;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000883")]
			[Address(RVA = "0xAB54C0", Offset = "0xAB54C0", VA = "0xAB54C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0xAB5528", Offset = "0xAB5528", VA = "0xAB5528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xAB4E8C", Offset = "0xAB4E8C", VA = "0xAB4E8C")]
		[DebuggerHidden]
		public <CheckServerTimeouts>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xAB50DC", Offset = "0xAB50DC", VA = "0xAB50DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xAB50E0", Offset = "0xAB50E0", VA = "0xAB50E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xAB54C8", Offset = "0xAB54C8", VA = "0xAB54C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly SortedDictionary<int, ServerHandler> m_discoveredOpenServers;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly SortedDictionary<int, ServerHandler> m_discoveredClosedServers;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 m_openServersScrollViewPos;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 m_closedServersScrollViewPos;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NetworkDiscoveryHandler m_networkDiscovery;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int m_discovedServerTimeout;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> m_propagatedServerIdList;

	[Token(Token = "0x14000010")]
	public event Action<List<int>> AvailableSeverListChanged
	{
		[Token(Token = "0x6000877")]
		[Address(RVA = "0xAB4874", Offset = "0xAB4874", VA = "0xAB4874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730648", Offset = "0x730648")]
		add
		{
		}
		[Token(Token = "0x6000878")]
		[Address(RVA = "0xAB4918", Offset = "0xAB4918", VA = "0xAB4918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730658", Offset = "0x730658")]
		remove
		{
		}
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xAB49BC", Offset = "0xAB49BC", VA = "0xAB49BC")]
	public List<int> GetAvailableServerIds()
	{
		return null;
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xAB4A2C", Offset = "0xAB4A2C", VA = "0xAB4A2C")]
	public void JoinToServer(int serverId)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xAB4BCC", Offset = "0xAB4BCC", VA = "0xAB4BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xAB4DB0", Offset = "0xAB4DB0", VA = "0xAB4DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xAB4D40", Offset = "0xAB4D40", VA = "0xAB4D40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x730668", Offset = "0x730668")]
	private IEnumerator CheckServerTimeouts()
	{
		return null;
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xAB4EB8", Offset = "0xAB4EB8", VA = "0xAB4EB8")]
	public void OnDiscoveredServer(DiscoveryResponseMessage info)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xAB4FC4", Offset = "0xAB4FC4", VA = "0xAB4FC4")]
	public HostListingController()
	{
	}
}
[Token(Token = "0x20001CB")]
public class LocalAvatarShadowSetter : MonoBehaviour
{
	[Token(Token = "0x6000886")]
	[Address(RVA = "0x943B84", Offset = "0x943B84", VA = "0x943B84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x943C54", Offset = "0x943C54", VA = "0x943C54")]
	public void SetLocalAvatarShadow(string selectedAvatarShadow)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x94405C", Offset = "0x94405C", VA = "0x94405C")]
	public LocalAvatarShadowSetter()
	{
	}
}
[Token(Token = "0x20001CC")]
public class LocalLeftHandSetter : MonoBehaviour
{
	[Token(Token = "0x6000889")]
	[Address(RVA = "0x944064", Offset = "0x944064", VA = "0x944064")]
	private void Start()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x93F9AC", Offset = "0x93F9AC", VA = "0x93F9AC")]
	public void SetLocalLeftHand(string selectedLeftHand)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x9440DC", Offset = "0x9440DC", VA = "0x9440DC")]
	public LocalLeftHandSetter()
	{
	}
}
[Token(Token = "0x20001CD")]
public class LocalRightHandSetter : MonoBehaviour
{
	[Token(Token = "0x600088C")]
	[Address(RVA = "0x9440E4", Offset = "0x9440E4", VA = "0x9440E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x93FD4C", Offset = "0x93FD4C", VA = "0x93FD4C")]
	public void SetLocalRightHand(string selectedRightHand)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x94415C", Offset = "0x94415C", VA = "0x94415C")]
	public LocalRightHandSetter()
	{
	}
}
[Token(Token = "0x20001CE")]
public class MultiPlayerObjectEnabler : NetworkBehaviour
{
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7254D8", Offset = "0x7254D8")]
	private sealed class <UpdateSlowly>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiPlayerObjectEnabler <>4__this;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600089C")]
			[Address(RVA = "0x98E310", Offset = "0x98E310", VA = "0x98E310", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600089E")]
			[Address(RVA = "0x98E378", Offset = "0x98E378", VA = "0x98E378", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x98DE88", Offset = "0x98DE88", VA = "0x98DE88")]
		[DebuggerHidden]
		public <UpdateSlowly>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x98E238", Offset = "0x98E238", VA = "0x98E238", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x98E23C", Offset = "0x98E23C", VA = "0x98E23C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x98E318", Offset = "0x98E318", VA = "0x98E318", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NetworkManager m_nm;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7299D0", Offset = "0x7299D0")]
	public int m_numOfPlayer;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SyncVar]
	public bool m_state;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool m_setToEnable;

	[Token(Token = "0x170000C7")]
	public bool Networkm_state
	{
		[Token(Token = "0x6000895")]
		[Address(RVA = "0x98DED0", Offset = "0x98DED0", VA = "0x98DED0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000896")]
		[Address(RVA = "0x98DED8", Offset = "0x98DED8", VA = "0x98DED8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x98DCF0", Offset = "0x98DCF0", VA = "0x98DCF0")]
	private void OnChangeState(bool oldState, bool newState)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x98DD54", Offset = "0x98DD54", VA = "0x98DD54", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x98DE58", Offset = "0x98DE58", VA = "0x98DE58", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x98DDE8", Offset = "0x98DDE8", VA = "0x98DDE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x73071C", Offset = "0x73071C")]
	private IEnumerator UpdateSlowly()
	{
		return null;
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x98DEB4", Offset = "0x98DEB4", VA = "0x98DEB4")]
	public MultiPlayerObjectEnabler()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x98DECC", Offset = "0x98DECC", VA = "0x98DECC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x98DFF0", Offset = "0x98DFF0", VA = "0x98DFF0", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x98E0E8", Offset = "0x98E0E8", VA = "0x98E0E8", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001D0")]
public class MultiPlayerObjectPositionerOnServer : NetworkBehaviour
{
	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729A24", Offset = "0x729A24")]
	public int m_numOfPlayerLimit;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector3 m_posOffsetOnAboveOrEqualLimit;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 m_posOffsetOnBelowLimit;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x98E380", Offset = "0x98E380", VA = "0x98E380", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x98E5D4", Offset = "0x98E5D4", VA = "0x98E5D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x98E470", Offset = "0x98E470", VA = "0x98E470")]
	private void HandleNumberOfPlayerChanged()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x98E698", Offset = "0x98E698", VA = "0x98E698")]
	public MultiPlayerObjectPositionerOnServer()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x98E6A8", Offset = "0x98E6A8", VA = "0x98E6A8")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20001D1")]
public class NetAnimEnabler : NetworkBehaviour
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public bool m_state;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_animatorRoot;

	[Token(Token = "0x170000CA")]
	public bool Networkm_state
	{
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x98F0D8", Offset = "0x98F0D8", VA = "0x98F0D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x98F0E0", Offset = "0x98F0E0", VA = "0x98F0E0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x98EF4C", Offset = "0x98EF4C", VA = "0x98EF4C", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x98EFE8", Offset = "0x98EFE8", VA = "0x98EFE8")]
	private void OnChangeState(bool oldState, bool newState)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x98F0CC", Offset = "0x98F0CC", VA = "0x98F0CC")]
	public NetAnimEnabler()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x98F0D4", Offset = "0x98F0D4", VA = "0x98F0D4")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x98F1F8", Offset = "0x98F1F8", VA = "0x98F1F8", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x98F2F0", Offset = "0x98F2F0", VA = "0x98F2F0", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001D2")]
public class NetBlackishHandler : NetworkBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7254E8", Offset = "0x7254E8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GameObject> <>9__5_0;

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x9925B4", Offset = "0x9925B4", VA = "0x9925B4")]
		public <>c()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x9925BC", Offset = "0x9925BC", VA = "0x9925BC")]
		internal void <OnStartClient>b__5_0(GameObject obj)
		{
		}
	}

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> m_objectsToDisableOnClient;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent m_onBattleSpellImpact;

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x990DFC", Offset = "0x990DFC", VA = "0x990DFC")]
	[ClientRpc]
	public void RpcBattleSpellImpactOnClient()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x991DA8", Offset = "0x991DA8", VA = "0x991DA8")]
	[Server]
	public void TeleportAway()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x991EC8", Offset = "0x991EC8", VA = "0x991EC8")]
	[ClientRpc]
	private void RpcTeleportAway()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x991FA8", Offset = "0x991FA8", VA = "0x991FA8", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x9920DC", Offset = "0x9920DC", VA = "0x9920DC")]
	public NetBlackishHandler()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x99214C", Offset = "0x99214C", VA = "0x99214C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x992150", Offset = "0x992150", VA = "0x992150")]
	public void UserCode_RpcBattleSpellImpactOnClient()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x99216C", Offset = "0x99216C", VA = "0x99216C")]
	protected static void InvokeUserCode_RpcBattleSpellImpactOnClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x992264", Offset = "0x992264", VA = "0x992264")]
	private void UserCode_RpcTeleportAway()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x992324", Offset = "0x992324", VA = "0x992324")]
	protected static void InvokeUserCode_RpcTeleportAway(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x992414", Offset = "0x992414", VA = "0x992414")]
	static NetBlackishHandler()
	{
	}
}
[Token(Token = "0x20001D4")]
public class NetChestState : NetworkBehaviour
{
	[Token(Token = "0x20001D5")]
	public enum ArtifactType
	{
		[Token(Token = "0x400088D")]
		Air,
		[Token(Token = "0x400088E")]
		Earth,
		[Token(Token = "0x400088F")]
		Fire,
		[Token(Token = "0x4000890")]
		Water,
		[Token(Token = "0x4000891")]
		Crystal
	}

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729A98", Offset = "0x729A98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x729A98", Offset = "0x729A98")]
	private int m_crystalPrice;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private ArtifactType m_artifactType;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	private bool m_open;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UnityEvent m_onOpenChest;

	[Token(Token = "0x170000CB")]
	public bool Networkm_open
	{
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x992F28", Offset = "0x992F28", VA = "0x992F28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x992850", Offset = "0x992850", VA = "0x992850")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x9925DC", Offset = "0x9925DC", VA = "0x9925DC")]
	public int GetCrystalPrice()
	{
		return default(int);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x9925E4", Offset = "0x9925E4", VA = "0x9925E4")]
	[Server]
	public bool IsChestOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x9926E0", Offset = "0x9926E0", VA = "0x9926E0")]
	[Server]
	public void OpenChest()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x992B48", Offset = "0x992B48", VA = "0x992B48")]
	private void OnChangeOpenState(bool oldValue, bool newValue)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x992F1C", Offset = "0x992F1C", VA = "0x992F1C")]
	public NetChestState()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x992F24", Offset = "0x992F24", VA = "0x992F24")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x992F30", Offset = "0x992F30", VA = "0x992F30", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x993028", Offset = "0x993028", VA = "0x993028", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001D6")]
public class NetChildEnabler : NetworkBehaviour
{
	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x729B5C", Offset = "0x729B5C")]
	public GameObject m_affected;

	[Token(Token = "0x170000CC")]
	private GameObject AffectedGameObject
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x993164", Offset = "0x993164", VA = "0x993164")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x9931F4", Offset = "0x9931F4", VA = "0x9931F4")]
	[Server]
	public void EnableRandomChild()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x99339C", Offset = "0x99339C", VA = "0x99339C")]
	[ClientRpc]
	public void RpcEnableChildOnClientWithId(int childIdx)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x98303C", Offset = "0x98303C", VA = "0x98303C")]
	[ClientRpc]
	public void RpcSetActiveChildOnClientWithName(string childName, bool active)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x9934B0", Offset = "0x9934B0", VA = "0x9934B0")]
	public NetChildEnabler()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x9934B8", Offset = "0x9934B8", VA = "0x9934B8")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x9934BC", Offset = "0x9934BC", VA = "0x9934BC")]
	public void UserCode_RpcEnableChildOnClientWithId(int childIdx)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x993514", Offset = "0x993514", VA = "0x993514")]
	protected static void InvokeUserCode_RpcEnableChildOnClientWithId(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x993648", Offset = "0x993648", VA = "0x993648")]
	public void UserCode_RpcSetActiveChildOnClientWithName(string childName, bool active)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x9936A4", Offset = "0x9936A4", VA = "0x9936A4")]
	protected static void InvokeUserCode_RpcSetActiveChildOnClientWithName(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x9937E8", Offset = "0x9937E8", VA = "0x9937E8")]
	static NetChildEnabler()
	{
	}
}
[Token(Token = "0x20001D7")]
public class NetCollectiveStat : NetworkBehaviour
{
	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	private int m_numOfCrystals;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public readonly SyncDictionary<NetChestState.ArtifactType, bool> m_foundArtifacts;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SyncVar]
	private int m_numOfArtifacts;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int m_playTime;

	[Token(Token = "0x170000CD")]
	public int Networkm_numOfCrystals
	{
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x99472C", Offset = "0x99472C", VA = "0x99472C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x993A28", Offset = "0x993A28", VA = "0x993A28")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public int Networkm_numOfArtifacts
	{
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x994734", Offset = "0x994734", VA = "0x994734")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x993F08", Offset = "0x993F08", VA = "0x993F08")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event Action<NetChestState.ArtifactType> s_artifactFound
	{
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x993C30", Offset = "0x993C30", VA = "0x993C30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730860", Offset = "0x730860")]
		add
		{
		}
		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x993D1C", Offset = "0x993D1C", VA = "0x993D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730870", Offset = "0x730870")]
		remove
		{
		}
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x993924", Offset = "0x993924", VA = "0x993924")]
	[Server]
	public void IncreaseCollectedCrystals(int crystal)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x993B3C", Offset = "0x993B3C", VA = "0x993B3C")]
	private void OnChangeNumOfCrystals(int oldValue, int newValue)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x993E08", Offset = "0x993E08", VA = "0x993E08")]
	[Server]
	public void IncrementNumOfArtifacts()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x99401C", Offset = "0x99401C", VA = "0x99401C", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x9941AC", Offset = "0x9941AC", VA = "0x9941AC")]
	private void OnChangeArtifacts(SyncIDictionary<NetChestState.ArtifactType, bool>.Operation op, NetChestState.ArtifactType itemType, bool found)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x992980", Offset = "0x992980", VA = "0x992980")]
	[Server]
	public void CollectArtifact(NetChestState.ArtifactType artifact)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x9942A8", Offset = "0x9942A8", VA = "0x9942A8")]
	private void OnChangeNumOfArtifacts(int oldValue, int newValue)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x99439C", Offset = "0x99439C", VA = "0x99439C")]
	[Server]
	public void SetPlayTime(int playTime)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x994498", Offset = "0x994498", VA = "0x994498")]
	[Server]
	public void SyncPlayTime()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x994594", Offset = "0x994594", VA = "0x994594")]
	[ClientRpc]
	public void RpcSyncPlayTime(int playTime)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x9946A8", Offset = "0x9946A8", VA = "0x9946A8")]
	public NetCollectiveStat()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x994728", Offset = "0x994728", VA = "0x994728")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x99473C", Offset = "0x99473C", VA = "0x99473C")]
	public void UserCode_RpcSyncPlayTime(int playTime)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x994814", Offset = "0x994814", VA = "0x994814")]
	protected static void InvokeUserCode_RpcSyncPlayTime(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x994940", Offset = "0x994940", VA = "0x994940")]
	static NetCollectiveStat()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x994A20", Offset = "0x994A20", VA = "0x994A20", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x994B7C", Offset = "0x994B7C", VA = "0x994B7C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001D8")]
[DisallowMultipleComponent]
public class NetEventToAction : NetworkBehaviour
{
	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725508", Offset = "0x725508")]
	private sealed class <StartServerAction>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetEventToAction <>4__this;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x9950C8", Offset = "0x9950C8", VA = "0x9950C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0x995130", Offset = "0x995130", VA = "0x995130", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x994E44", Offset = "0x994E44", VA = "0x994E44")]
		[DebuggerHidden]
		public <StartServerAction>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x995068", Offset = "0x995068", VA = "0x995068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x99506C", Offset = "0x99506C", VA = "0x99506C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x9950D0", Offset = "0x9950D0", VA = "0x9950D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725518", Offset = "0x725518")]
	private sealed class <StartLocalClientAction>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetEventToAction <>4__this;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008FA")]
			[Address(RVA = "0x994FF8", Offset = "0x994FF8", VA = "0x994FF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0x995060", Offset = "0x995060", VA = "0x995060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x994F58", Offset = "0x994F58", VA = "0x994F58")]
		[DebuggerHidden]
		public <StartLocalClientAction>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x994F98", Offset = "0x994F98", VA = "0x994F98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x994F9C", Offset = "0x994F9C", VA = "0x994F9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x995000", Offset = "0x995000", VA = "0x995000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x729C1C", Offset = "0x729C1C")]
	[SerializeField]
	private UnityEvent m_onStartServer;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x729C68", Offset = "0x729C68")]
	[SerializeField]
	private UnityEvent m_onStartLocalClient;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x729CB4", Offset = "0x729CB4")]
	[SerializeField]
	private UnityEvent m_onStartClientOnly;

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x994DA8", Offset = "0x994DA8", VA = "0x994DA8", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x994DD4", Offset = "0x994DD4", VA = "0x994DD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7308D0", Offset = "0x7308D0")]
	private IEnumerator StartServerAction()
	{
		return null;
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x994E70", Offset = "0x994E70", VA = "0x994E70", Slot = "9")]
	public override void OnStopServer()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x994E74", Offset = "0x994E74", VA = "0x994E74", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x994EB8", Offset = "0x994EB8", VA = "0x994EB8", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x994EBC", Offset = "0x994EBC", VA = "0x994EBC", Slot = "12")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x994EE8", Offset = "0x994EE8", VA = "0x994EE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x730934", Offset = "0x730934")]
	private IEnumerator StartLocalClientAction()
	{
		return null;
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x994F84", Offset = "0x994F84", VA = "0x994F84", Slot = "13")]
	public override void OnStartAuthority()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x994F88", Offset = "0x994F88", VA = "0x994F88", Slot = "14")]
	public override void OnStopAuthority()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x994F8C", Offset = "0x994F8C", VA = "0x994F8C")]
	public NetEventToAction()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x994F94", Offset = "0x994F94", VA = "0x994F94")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20001DB")]
public class NetManaStateHandler : NetworkBehaviour
{
	[Token(Token = "0x20001DC")]
	private enum State
	{
		[Token(Token = "0x40008A5")]
		Normal,
		[Token(Token = "0x40008A6")]
		PickUp,
		[Token(Token = "0x40008A7")]
		End
	}

	[Serializable]
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725528", Offset = "0x725528")]
	private sealed class <>c
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<ManaPathFollower> <>9__7_0;

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x9DA7B8", Offset = "0x9DA7B8", VA = "0x9DA7B8")]
		public <>c()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x9DA7C0", Offset = "0x9DA7C0", VA = "0x9DA7C0")]
		internal void <OnStartClient>b__7_0(ManaPathFollower pathFollower)
		{
		}
	}

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729D00", Offset = "0x729D00")]
	private int m_value;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SyncVar]
	private State m_state;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x729D80", Offset = "0x729D80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729D80", Offset = "0x729D80")]
	private float m_lifeTimeInFinalStates;

	[Token(Token = "0x170000D3")]
	public State Networkm_state
	{
		[Token(Token = "0x6000905")]
		[Address(RVA = "0x996D4C", Offset = "0x996D4C", VA = "0x996D4C")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000906")]
		[Address(RVA = "0x9966D4", Offset = "0x9966D4", VA = "0x9966D4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x996574", Offset = "0x996574", VA = "0x996574")]
	public int GetValue()
	{
		return default(int);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x99657C", Offset = "0x99657C", VA = "0x99657C")]
	[Server]
	public bool PickUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x9967EC", Offset = "0x9967EC", VA = "0x9967EC")]
	[Server]
	public void DoSelfAbsorption()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x996958", Offset = "0x996958", VA = "0x996958", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x996AE4", Offset = "0x996AE4", VA = "0x996AE4")]
	private void OnChangeState(State oldValue, State newValue)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x996C60", Offset = "0x996C60", VA = "0x996C60")]
	public void GatherManaByPlayerHand(GameObject hand)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x996D38", Offset = "0x996D38", VA = "0x996D38")]
	public NetManaStateHandler()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x996D48", Offset = "0x996D48", VA = "0x996D48")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x996D54", Offset = "0x996D54", VA = "0x996D54", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x996E10", Offset = "0x996E10", VA = "0x996E10", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001DE")]
public class NetNotifierHandler : NetworkBehaviour
{
	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private uint m_localPlayerId;

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x9DB0A4", Offset = "0x9DB0A4", VA = "0x9DB0A4")]
	[Client]
	public void SetLocalPlayerId(uint id)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x9DB160", Offset = "0x9DB160", VA = "0x9DB160")]
	[ClientRpc]
	public void RpcNotify(uint[] ids)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x9DB24C", Offset = "0x9DB24C", VA = "0x9DB24C")]
	public NetNotifierHandler()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x9DB25C", Offset = "0x9DB25C", VA = "0x9DB25C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x9DB260", Offset = "0x9DB260", VA = "0x9DB260")]
	public void UserCode_RpcNotify(uint[] ids)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x9DB464", Offset = "0x9DB464", VA = "0x9DB464")]
	protected static void InvokeUserCode_RpcNotify(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x9DB578", Offset = "0x9DB578", VA = "0x9DB578")]
	static NetNotifierHandler()
	{
	}
}
[Token(Token = "0x20001DF")]
public class NetObjectEnabler : NetworkBehaviour
{
	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public bool m_state;

	[Token(Token = "0x170000D4")]
	public bool Networkm_state
	{
		[Token(Token = "0x6000919")]
		[Address(RVA = "0x9DB9F4", Offset = "0x9DB9F4", VA = "0x9DB9F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600091A")]
		[Address(RVA = "0x9DB754", Offset = "0x9DB754", VA = "0x9DB754")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x9DB658", Offset = "0x9DB658", VA = "0x9DB658")]
	[Server]
	public void SetToEnable()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x9DB86C", Offset = "0x9DB86C", VA = "0x9DB86C")]
	[Server]
	public void SetToDisable()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x9DB968", Offset = "0x9DB968", VA = "0x9DB968", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x9DB998", Offset = "0x9DB998", VA = "0x9DB998")]
	private void OnChangeState(bool oldState, bool newState)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x9DB9E8", Offset = "0x9DB9E8", VA = "0x9DB9E8")]
	public NetObjectEnabler()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x9DB9F0", Offset = "0x9DB9F0", VA = "0x9DB9F0")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x9DB9FC", Offset = "0x9DB9FC", VA = "0x9DB9FC", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x9DBAF4", Offset = "0x9DBAF4", VA = "0x9DBAF4", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001E0")]
public class NetObjectEnablerProxy : NetObjectEnabler
{
	[Token(Token = "0x600091D")]
	[Address(RVA = "0x9DBC44", Offset = "0x9DBC44", VA = "0x9DBC44")]
	public void ProxyEnable()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x9DBCF4", Offset = "0x9DBCF4", VA = "0x9DBCF4")]
	public NetObjectEnablerProxy()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x9DBCFC", Offset = "0x9DBCFC", VA = "0x9DBCFC")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20001E1")]
public class NetObservablePlayerNumber : NetworkBehaviour
{
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725538", Offset = "0x725538")]
	private sealed class <UpdateSlowlyOnServer>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetObservablePlayerNumber <>4__this;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x9DC648", Offset = "0x9DC648", VA = "0x9DC648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000932")]
			[Address(RVA = "0x9DC6B0", Offset = "0x9DC6B0", VA = "0x9DC6B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x9DC124", Offset = "0x9DC124", VA = "0x9DC124")]
		[DebuggerHidden]
		public <UpdateSlowlyOnServer>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x9DC48C", Offset = "0x9DC48C", VA = "0x9DC48C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x9DC490", Offset = "0x9DC490", VA = "0x9DC490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x9DC650", Offset = "0x9DC650", VA = "0x9DC650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action s_numberOfPlayerChangedForServerEvent;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	private int m_numOfActivePlayer;

	[Token(Token = "0x170000D5")]
	public int PlayerNumberInServer
	{
		[Token(Token = "0x6000922")]
		[Address(RVA = "0x9DBE68", Offset = "0x9DBE68", VA = "0x9DBE68")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D6")]
	public int Networkm_numOfActivePlayer
	{
		[Token(Token = "0x6000929")]
		[Address(RVA = "0x9DC15C", Offset = "0x9DC15C", VA = "0x9DC15C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600092A")]
		[Address(RVA = "0x9DC164", Offset = "0x9DC164", VA = "0x9DC164")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event EventHandler s_numberOfPlayerChangedForClientEvent
	{
		[Token(Token = "0x6000920")]
		[Address(RVA = "0x9DBD00", Offset = "0x9DBD00", VA = "0x9DBD00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730A98", Offset = "0x730A98")]
		add
		{
		}
		[Token(Token = "0x6000921")]
		[Address(RVA = "0x9DBDB4", Offset = "0x9DBDB4", VA = "0x9DBDB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730AA8", Offset = "0x730AA8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x9DBE70", Offset = "0x9DBE70", VA = "0x9DBE70")]
	private void OnChangePlayerNumber(int oldValue, int newValue)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x9DBF18", Offset = "0x9DBF18", VA = "0x9DBF18", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x9DBFCC", Offset = "0x9DBFCC", VA = "0x9DBFCC", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x9DC004", Offset = "0x9DC004", VA = "0x9DC004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x730AB8", Offset = "0x730AB8")]
	[Server]
	private IEnumerator UpdateSlowlyOnServer()
	{
		return null;
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x9DC150", Offset = "0x9DC150", VA = "0x9DC150")]
	public NetObservablePlayerNumber()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x9DC158", Offset = "0x9DC158", VA = "0x9DC158")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x9DC270", Offset = "0x9DC270", VA = "0x9DC270", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x9DC364", Offset = "0x9DC364", VA = "0x9DC364", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001E3")]
public class NetPlayer : NetworkBehaviour
{
	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_local;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_remote;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject s_localPlayer;

	[Token(Token = "0x170000D9")]
	public static GameObject LocalPlayer
	{
		[Token(Token = "0x6000933")]
		[Address(RVA = "0x9DC6B8", Offset = "0x9DC6B8", VA = "0x9DC6B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x9DC708", Offset = "0x9DC708", VA = "0x9DC708")]
	private void Start()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x9DD2F4", Offset = "0x9DD2F4", VA = "0x9DD2F4", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x9DD38C", Offset = "0x9DD38C", VA = "0x9DD38C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x9DD3F0", Offset = "0x9DD3F0", VA = "0x9DD3F0")]
	public NetPlayer()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x9DD3F8", Offset = "0x9DD3F8", VA = "0x9DD3F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730B7C", Offset = "0x730B7C")]
	private void <Start>b__5_0(NetNotifierHandler notifyHandler)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x9DD42C", Offset = "0x9DD42C", VA = "0x9DD42C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730B8C", Offset = "0x730B8C")]
	private void <Start>b__5_1()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x9DD490", Offset = "0x9DD490", VA = "0x9DD490")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730B9C", Offset = "0x730B9C")]
	private void <Start>b__5_2()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x9DD4F4", Offset = "0x9DD4F4", VA = "0x9DD4F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730BAC", Offset = "0x730BAC")]
	private void <Start>b__5_3()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x9DD558", Offset = "0x9DD558", VA = "0x9DD558")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730BBC", Offset = "0x730BBC")]
	private void <Start>b__5_4()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x9DD5BC", Offset = "0x9DD5BC", VA = "0x9DD5BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730BCC", Offset = "0x730BCC")]
	private void <Start>b__5_5()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x9DD61C", Offset = "0x9DD61C", VA = "0x9DD61C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730BDC", Offset = "0x730BDC")]
	private void <Start>b__5_6()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x9DD67C", Offset = "0x9DD67C", VA = "0x9DD67C")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20001E4")]
public class NetPuzzlePieceSelectionControl : NetworkBehaviour
{
	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint m_localPlayerId;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SyncVar]
	public uint m_selectedBy;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject m_localSelect;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject m_remoteSelect;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject m_deselect;

	[Token(Token = "0x170000DA")]
	public uint Networkm_selectedBy
	{
		[Token(Token = "0x600094B")]
		[Address(RVA = "0x9DED98", Offset = "0x9DED98", VA = "0x9DED98")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600094C")]
		[Address(RVA = "0x9DE610", Offset = "0x9DE610", VA = "0x9DE610")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x9DE508", Offset = "0x9DE508", VA = "0x9DE508")]
	public void SetLocalPlayerId(uint id)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x9DE510", Offset = "0x9DE510", VA = "0x9DE510")]
	[Server]
	public void Select(uint netIdOfClient)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x9DE720", Offset = "0x9DE720", VA = "0x9DE720")]
	[Server]
	public void Deselect()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x9DE884", Offset = "0x9DE884", VA = "0x9DE884")]
	[Server]
	public bool IsSelected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x9DE980", Offset = "0x9DE980", VA = "0x9DE980", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x9DEAB0", Offset = "0x9DEAB0", VA = "0x9DEAB0")]
	private void OnChangeSelected(uint oldSelectedBy, uint newSelectedBy)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x9DEC6C", Offset = "0x9DEC6C", VA = "0x9DEC6C")]
	private void ShowAsLocalSelected()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x9DED2C", Offset = "0x9DED2C", VA = "0x9DED2C")]
	private void ShowAsRemoteSelected()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x9DEC14", Offset = "0x9DEC14", VA = "0x9DEC14")]
	private void ShowAsDeselected()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x9DED84", Offset = "0x9DED84", VA = "0x9DED84")]
	public NetPuzzlePieceSelectionControl()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x9DED94", Offset = "0x9DED94", VA = "0x9DED94")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x9DEDA0", Offset = "0x9DEDA0", VA = "0x9DEDA0", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x9DEE94", Offset = "0x9DEE94", VA = "0x9DEE94", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001E5")]
public class NetPuzzleSolutionStateControl : NetworkBehaviour
{
	[Token(Token = "0x20001E6")]
	public enum State
	{
		[Token(Token = "0x40008BE")]
		NotSolved,
		[Token(Token = "0x40008BF")]
		Solved,
		[Token(Token = "0x40008C0")]
		AllSolved
	}

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color m_solvedColor;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color m_allSolvedColor;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SyncVar]
	public State m_state;

	[Token(Token = "0x170000DB")]
	public State Networkm_state
	{
		[Token(Token = "0x6000956")]
		[Address(RVA = "0x9DF460", Offset = "0x9DF460", VA = "0x9DF460")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000957")]
		[Address(RVA = "0x9DF208", Offset = "0x9DF208", VA = "0x9DF208")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x9DEFC0", Offset = "0x9DEFC0", VA = "0x9DEFC0", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x9DF0A4", Offset = "0x9DF0A4", VA = "0x9DF0A4")]
	[Server]
	public void SetToSolved()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x9DF318", Offset = "0x9DF318", VA = "0x9DF318")]
	[Server]
	public void SetToAllSolved()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x9DEFEC", Offset = "0x9DEFEC", VA = "0x9DEFEC")]
	private void OnChangeState(State oldState, State newState)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x9DF414", Offset = "0x9DF414", VA = "0x9DF414")]
	private void SetBaseColor(Color color)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x9DF418", Offset = "0x9DF418", VA = "0x9DF418")]
	public NetPuzzleSolutionStateControl()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x9DF45C", Offset = "0x9DF45C", VA = "0x9DF45C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x9DF468", Offset = "0x9DF468", VA = "0x9DF468", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x9DF528", Offset = "0x9DF528", VA = "0x9DF528", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001E7")]
public class NetReparentSpawnedObject : NetworkBehaviour
{
	[Token(Token = "0x600095A")]
	[Address(RVA = "0x9DF618", Offset = "0x9DF618", VA = "0x9DF618", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x9DF6A0", Offset = "0x9DF6A0", VA = "0x9DF6A0")]
	public NetReparentSpawnedObject()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x9DF6A8", Offset = "0x9DF6A8", VA = "0x9DF6A8")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20001E8")]
public class NetSceneChanger : NetworkBehaviour
{
	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UnityEvent m_actionBeforeChangeScene;

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x9E0460", Offset = "0x9E0460", VA = "0x9E0460")]
	[ClientRpc]
	public void RpcChangeClientSceneTo(string scene)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x9E0574", Offset = "0x9E0574", VA = "0x9E0574")]
	[ClientRpc]
	public void RpcChangeServerSceneTo(string scene)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x9E0688", Offset = "0x9E0688", VA = "0x9E0688")]
	public NetSceneChanger()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x9E0690", Offset = "0x9E0690", VA = "0x9E0690")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x9E0694", Offset = "0x9E0694", VA = "0x9E0694")]
	public void UserCode_RpcChangeClientSceneTo(string scene)
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x9E0738", Offset = "0x9E0738", VA = "0x9E0738")]
	protected static void InvokeUserCode_RpcChangeClientSceneTo(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x9E086C", Offset = "0x9E086C", VA = "0x9E086C")]
	public void UserCode_RpcChangeServerSceneTo(string scene)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x9E0910", Offset = "0x9E0910", VA = "0x9E0910")]
	protected static void InvokeUserCode_RpcChangeServerSceneTo(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x9E0A44", Offset = "0x9E0A44", VA = "0x9E0A44")]
	static NetSceneChanger()
	{
	}
}
[Token(Token = "0x20001E9")]
public class NetServerObjectEnablerProxy : NetworkBehaviour
{
	[Token(Token = "0x6000966")]
	[Address(RVA = "0x9E0B80", Offset = "0x9E0B80", VA = "0x9E0B80")]
	public void ProxyEnable()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x9E0C30", Offset = "0x9E0C30", VA = "0x9E0C30")]
	public void EnableOnServer()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x9E0C74", Offset = "0x9E0C74", VA = "0x9E0C74")]
	public NetServerObjectEnablerProxy()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x9E0C7C", Offset = "0x9E0C7C", VA = "0x9E0C7C")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20001EA")]
public class NetTextSyncer : NetworkBehaviour
{
	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	private string m_text;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Text m_textComponent;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TextMeshPro m_textMeshComponent;

	[Token(Token = "0x170000DC")]
	public string Networkm_text
	{
		[Token(Token = "0x600096F")]
		[Address(RVA = "0x9E237C", Offset = "0x9E237C", VA = "0x9E237C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000970")]
		[Address(RVA = "0x9E2164", Offset = "0x9E2164", VA = "0x9E2164")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x9E1F40", Offset = "0x9E1F40", VA = "0x9E1F40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x9E1FB0", Offset = "0x9E1FB0", VA = "0x9E1FB0")]
	[Server]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x9E2274", Offset = "0x9E2274", VA = "0x9E2274")]
	public void OnChangeText(string oldText, string newText)
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x9E2370", Offset = "0x9E2370", VA = "0x9E2370")]
	public NetTextSyncer()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x9E2378", Offset = "0x9E2378", VA = "0x9E2378")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x9E2384", Offset = "0x9E2384", VA = "0x9E2384", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x9E2478", Offset = "0x9E2478", VA = "0x9E2478", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001EB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x725548", Offset = "0x725548")]
public class NetTimerElapsedStarter : NetworkBehaviour
{
	[Token(Token = "0x6000973")]
	[Address(RVA = "0x9E25A4", Offset = "0x9E25A4", VA = "0x9E25A4", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x9E2604", Offset = "0x9E2604", VA = "0x9E2604")]
	public NetTimerElapsedStarter()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x9E260C", Offset = "0x9E260C", VA = "0x9E260C")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x20001EC")]
public class NetTriggerEventTransmitter : NetworkBehaviour
{
	[Token(Token = "0x6000976")]
	[Address(RVA = "0x9E3598", Offset = "0x9E3598", VA = "0x9E3598")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x9E3644", Offset = "0x9E3644", VA = "0x9E3644")]
	[Command]
	public void CmdAdjustTrigger(string collectorObjectName, string platformName, bool add)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x9E3788", Offset = "0x9E3788", VA = "0x9E3788")]
	public NetTriggerEventTransmitter()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x9E3790", Offset = "0x9E3790", VA = "0x9E3790")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730C7C", Offset = "0x730C7C")]
	private void <OnDestroy>b__0_0(GameObject tc)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x9E3818", Offset = "0x9E3818", VA = "0x9E3818")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x9E381C", Offset = "0x9E381C", VA = "0x9E381C")]
	public void UserCode_CmdAdjustTrigger(string collectorObjectName, string platformName, bool add)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x9E3968", Offset = "0x9E3968", VA = "0x9E3968")]
	protected static void InvokeUserCode_CmdAdjustTrigger(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x9E3B00", Offset = "0x9E3B00", VA = "0x9E3B00")]
	static NetTriggerEventTransmitter()
	{
	}
}
[Token(Token = "0x20001ED")]
public class NetTriggerRenderSwitcher : NetworkBehaviour
{
	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7255AC", Offset = "0x7255AC")]
	private sealed class <AdjustTriggerPeriodically>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetTriggerRenderSwitcher <>4__this;

		[Token(Token = "0x170000DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0x9E45D0", Offset = "0x9E45D0", VA = "0x9E45D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0x9E4638", Offset = "0x9E4638", VA = "0x9E4638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x9E3FCC", Offset = "0x9E3FCC", VA = "0x9E3FCC")]
		[DebuggerHidden]
		public <AdjustTriggerPeriodically>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x9E448C", Offset = "0x9E448C", VA = "0x9E448C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x9E4490", Offset = "0x9E4490", VA = "0x9E4490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x9E45D8", Offset = "0x9E45D8", VA = "0x9E45D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_isRunning;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729F40", Offset = "0x729F40")]
	public int m_secondsOfAppearingInterval;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729F5C", Offset = "0x729F5C")]
	public int m_secondsOfDisappearingInterval;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x729F78", Offset = "0x729F78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x729F78", Offset = "0x729F78")]
	public int m_minNumOfPlayers;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NetworkManager m_nm;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SyncVar]
	private bool m_state;

	[Token(Token = "0x170000DD")]
	public bool Networkm_state
	{
		[Token(Token = "0x6000987")]
		[Address(RVA = "0x9E423C", Offset = "0x9E423C", VA = "0x9E423C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x9E3FF8", Offset = "0x9E3FF8", VA = "0x9E3FF8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x9E3BE4", Offset = "0x9E3BE4", VA = "0x9E3BE4", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x9E3DC4", Offset = "0x9E3DC4", VA = "0x9E3DC4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x9E3ED0", Offset = "0x9E3ED0", VA = "0x9E3ED0")]
	[Server]
	public bool GetState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x9E3CA4", Offset = "0x9E3CA4", VA = "0x9E3CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x730C9C", Offset = "0x730C9C")]
	[Server]
	private IEnumerator AdjustTriggerPeriodically()
	{
		return null;
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x9E3DD0", Offset = "0x9E3DD0", VA = "0x9E3DD0")]
	[Server]
	public void ChangeStateTo(bool state)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x9E4110", Offset = "0x9E4110", VA = "0x9E4110", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x9E4140", Offset = "0x9E4140", VA = "0x9E4140")]
	private void OnChangeState(bool oldState, bool newState)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x9E421C", Offset = "0x9E421C", VA = "0x9E421C")]
	public NetTriggerRenderSwitcher()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x9E4238", Offset = "0x9E4238", VA = "0x9E4238")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x9E4244", Offset = "0x9E4244", VA = "0x9E4244", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x9E433C", Offset = "0x9E433C", VA = "0x9E433C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001EF")]
public class NetTriggeredEventHandler : NetworkBehaviour
{
	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	private int m_triggerCounter;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_clientTriggerCounter;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int m_numberOfMaximumTrigger;

	[Token(Token = "0x170000E0")]
	public int Networkm_triggerCounter
	{
		[Token(Token = "0x6000998")]
		[Address(RVA = "0x9E4E54", Offset = "0x9E4E54", VA = "0x9E4E54")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000999")]
		[Address(RVA = "0x9E473C", Offset = "0x9E473C", VA = "0x9E473C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x9E4640", Offset = "0x9E4640", VA = "0x9E4640", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x9E484C", Offset = "0x9E484C", VA = "0x9E484C", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x9E48E8", Offset = "0x9E48E8", VA = "0x9E48E8")]
	public bool IsMaximumTriggerCounterReached()
	{
		return default(bool);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x9E48FC", Offset = "0x9E48FC", VA = "0x9E48FC")]
	[Server]
	public bool Trigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x9E4A90", Offset = "0x9E4A90", VA = "0x9E4A90")]
	private void OnChangeTriggerCounter(int oldTriggerCounter, int newTriggerCounter)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x9E4E40", Offset = "0x9E4E40", VA = "0x9E4E40")]
	public NetTriggeredEventHandler()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x9E4E50", Offset = "0x9E4E50", VA = "0x9E4E50")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x9E4E5C", Offset = "0x9E4E5C", VA = "0x9E4E5C", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x9E4F50", Offset = "0x9E4F50", VA = "0x9E4F50", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20001F0")]
public class DiscoveryRequestMessage : NetworkMessage
{
	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_productName;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_version;

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x97B404", Offset = "0x97B404", VA = "0x97B404")]
	public DiscoveryRequestMessage()
	{
	}
}
[Token(Token = "0x20001F1")]
public class DiscoveryResponseMessage : NetworkMessage
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72A044", Offset = "0x72A044")]
	private IPEndPoint <EndPoint>k__BackingField;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Uri m_uri;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_serverId;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_closed;

	[Token(Token = "0x170000E1")]
	public IPEndPoint EndPoint
	{
		[Token(Token = "0x600099D")]
		[Address(RVA = "0x97B40C", Offset = "0x97B40C", VA = "0x97B40C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730D80", Offset = "0x730D80")]
		get
		{
			return null;
		}
		[Token(Token = "0x600099E")]
		[Address(RVA = "0x97B414", Offset = "0x97B414", VA = "0x97B414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730D90", Offset = "0x730D90")]
		set
		{
		}
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x97B41C", Offset = "0x97B41C", VA = "0x97B41C")]
	public DiscoveryResponseMessage()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F2")]
public class ServerFoundUnityEvent : UnityEvent<DiscoveryResponseMessage>
{
	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xA32C7C", Offset = "0xA32C7C", VA = "0xA32C7C")]
	public ServerFoundUnityEvent()
	{
	}
}
[Token(Token = "0x20001F3")]
public class NetworkDiscoveryHandler : NetworkDiscoveryBase<DiscoveryRequestMessage, DiscoveryResponseMessage>
{
	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A054", Offset = "0x72A054")]
	public Transport m_transport;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A08C", Offset = "0x72A08C")]
	public ServerFoundUnityEvent m_onServerFound;

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x9E507C", Offset = "0x9E507C", VA = "0x9E507C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x9E511C", Offset = "0x9E511C", VA = "0x9E511C", Slot = "6")]
	protected override DiscoveryResponseMessage ProcessRequest(DiscoveryRequestMessage request, IPEndPoint endpoint)
	{
		return null;
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x9E5798", Offset = "0x9E5798", VA = "0x9E5798", Slot = "7")]
	protected override DiscoveryRequestMessage GetRequest()
	{
		return null;
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x9E5814", Offset = "0x9E5814", VA = "0x9E5814", Slot = "8")]
	protected override void ProcessResponse(DiscoveryResponseMessage response, IPEndPoint endpoint)
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x9E58EC", Offset = "0x9E58EC", VA = "0x9E58EC")]
	public NetworkDiscoveryHandler()
	{
	}
}
[Token(Token = "0x20001F4")]
public class NetworkHandler : NetworkManager
{
	[Token(Token = "0x20001F5")]
	public struct ServerMetaData : NetworkMessage
	{
		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int serverId;
	}

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string testHostAddress;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool m_isStopForced;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72A0C4", Offset = "0x72A0C4")]
	private bool <Closed>k__BackingField;

	[Token(Token = "0x40008DC")]
	public const int MIN_SERVER_ID = 0;

	[Token(Token = "0x40008DD")]
	public const int MAX_SERVER_ID = 63;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72A0D4", Offset = "0x72A0D4")]
	private int <ServerId>k__BackingField;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private DateTime m_clientConnectedTime;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int m_fixNumberOfPlayers;

	[Token(Token = "0x170000E2")]
	public bool Closed
	{
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x9E593C", Offset = "0x9E593C", VA = "0x9E593C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730DA0", Offset = "0x730DA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x9E5944", Offset = "0x9E5944", VA = "0x9E5944")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730DB0", Offset = "0x730DB0")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public int ServerId
	{
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x9E5950", Offset = "0x9E5950", VA = "0x9E5950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730DC0", Offset = "0x730DC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x9E5958", Offset = "0x9E5958", VA = "0x9E5958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730DD0", Offset = "0x730DD0")]
		set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public DateTime ClientConnectedTime
	{
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x9E5960", Offset = "0x9E5960", VA = "0x9E5960")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x9E5968", Offset = "0x9E5968", VA = "0x9E5968")]
	public void GenerateServerId()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x9E5998", Offset = "0x9E5998", VA = "0x9E5998")]
	public void LockPlayerNumber()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x9E5A5C", Offset = "0x9E5A5C", VA = "0x9E5A5C", Slot = "25")]
	public override void OnStartHost()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x9E5A88", Offset = "0x9E5A88", VA = "0x9E5A88")]
	public new void StopClient()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x9E5A98", Offset = "0x9E5A98", VA = "0x9E5A98")]
	public new void StartClient()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x9E5AA4", Offset = "0x9E5AA4", VA = "0x9E5AA4", Slot = "20")]
	public override void OnClientDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x9E5B9C", Offset = "0x9E5B9C", VA = "0x9E5B9C", Slot = "15")]
	public override void OnServerAddPlayer(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x9E5E3C", Offset = "0x9E5E3C", VA = "0x9E5E3C", Slot = "12")]
	public override void OnServerConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x9E5F04", Offset = "0x9E5F04", VA = "0x9E5F04", Slot = "13")]
	public override void OnServerDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x9E5FDC", Offset = "0x9E5FDC", VA = "0x9E5FDC", Slot = "19")]
	public override void OnClientConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x9E6064", Offset = "0x9E6064", VA = "0x9E6064", Slot = "23")]
	public override void OnClientChangeScene(string newSceneName, SceneOperation sceneOperation, bool customHandling)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x9E61F8", Offset = "0x9E61F8", VA = "0x9E61F8")]
	public static void SetNetworkScene(string sceneName)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x9E62A8", Offset = "0x9E62A8", VA = "0x9E62A8")]
	public int GetNetworkWideRandom(GameObject obj, int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x9E6408", Offset = "0x9E6408", VA = "0x9E6408")]
	public NetworkHandler()
	{
	}
}
[Token(Token = "0x20001F6")]
public class NetworkSceneRandomChildActivator : MonoBehaviour
{
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7255BC", Offset = "0x7255BC")]
	private sealed class <StartLater>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkSceneRandomChildActivator <>4__this;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x9E690C", Offset = "0x9E690C", VA = "0x9E690C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x9E6974", Offset = "0x9E6974", VA = "0x9E6974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x9E6520", Offset = "0x9E6520", VA = "0x9E6520")]
		[DebuggerHidden]
		public <StartLater>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x9E6554", Offset = "0x9E6554", VA = "0x9E6554", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x9E6558", Offset = "0x9E6558", VA = "0x9E6558", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x9E6914", Offset = "0x9E6914", VA = "0x9E6914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x9E6484", Offset = "0x9E6484", VA = "0x9E6484")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x9E64B0", Offset = "0x9E64B0", VA = "0x9E64B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x730DE0", Offset = "0x730DE0")]
	private IEnumerator StartLater()
	{
		return null;
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x9E654C", Offset = "0x9E654C", VA = "0x9E654C")]
	public NetworkSceneRandomChildActivator()
	{
	}
}
[Token(Token = "0x20001F8")]
public class NetworkStarter : NetworkStarterBase
{
	[Serializable]
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7255CC", Offset = "0x7255CC")]
	private sealed class <>c
	{
		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Animation> <>9__1_0;

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x9E6E10", Offset = "0x9E6E10", VA = "0x9E6E10")]
		public <>c()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x9E6E18", Offset = "0x9E6E18", VA = "0x9E6E18")]
		internal void <InitOnServer>b__1_0(Animation ba)
		{
		}
	}

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_serverGameManager;

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x9E6A94", Offset = "0x9E6A94", VA = "0x9E6A94", Slot = "4")]
	public override void InitOnServer()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x9E6CE8", Offset = "0x9E6CE8", VA = "0x9E6CE8", Slot = "5")]
	public override void InitOnClient()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x9E6D8C", Offset = "0x9E6D8C", VA = "0x9E6D8C")]
	public NetworkStarter()
	{
	}
}
[Token(Token = "0x20001FA")]
public class NetworkStarterBase : MonoBehaviour
{
	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7255DC", Offset = "0x7255DC")]
	private sealed class <InitServerInNextFrame>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkStarterBase <>4__this;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0x9E7B90", Offset = "0x9E7B90", VA = "0x9E7B90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x9E7BF8", Offset = "0x9E7BF8", VA = "0x9E7BF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x9E7544", Offset = "0x9E7544", VA = "0x9E7544")]
		[DebuggerHidden]
		public <InitServerInNextFrame>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x9E7AA8", Offset = "0x9E7AA8", VA = "0x9E7AA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x9E7AAC", Offset = "0x9E7AAC", VA = "0x9E7AAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x9E7B98", Offset = "0x9E7B98", VA = "0x9E7B98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7255EC", Offset = "0x7255EC")]
	private sealed class <StopDiscoveryInNextFrame>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkStarterBase <>4__this;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x9E7F44", Offset = "0x9E7F44", VA = "0x9E7F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0x9E7FAC", Offset = "0x9E7FAC", VA = "0x9E7FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x9E77B8", Offset = "0x9E77B8", VA = "0x9E77B8")]
		[DebuggerHidden]
		public <StopDiscoveryInNextFrame>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x9E7E54", Offset = "0x9E7E54", VA = "0x9E7E54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x9E7E58", Offset = "0x9E7E58", VA = "0x9E7E58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x9E7F4C", Offset = "0x9E7F4C", VA = "0x9E7F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7255FC", Offset = "0x7255FC")]
	private sealed class <StartConnectingTimer>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkStarterBase <>4__this;

		[Token(Token = "0x170000EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x9E7DE4", Offset = "0x9E7DE4", VA = "0x9E7DE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x9E7E4C", Offset = "0x9E7E4C", VA = "0x9E7E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x9E77E4", Offset = "0x9E77E4", VA = "0x9E77E4")]
		[DebuggerHidden]
		public <StartConnectingTimer>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x9E7C00", Offset = "0x9E7C00", VA = "0x9E7C00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x9E7C04", Offset = "0x9E7C04", VA = "0x9E7C04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x9E7DEC", Offset = "0x9E7DEC", VA = "0x9E7DEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected NetworkHandler manager;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NetworkDiscoveryHandler m_serverDiscoveryHandler;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GlobalControl global;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_timeout;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine m_clientConnectTimeout;

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x9E6E34", Offset = "0x9E6E34", VA = "0x9E6E34")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x9E6F18", Offset = "0x9E6F18", VA = "0x9E6F18")]
	private void StartOnServer()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x9E74D4", Offset = "0x9E74D4", VA = "0x9E74D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x730E94", Offset = "0x730E94")]
	private IEnumerator InitServerInNextFrame()
	{
		return null;
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x9E7224", Offset = "0x9E7224", VA = "0x9E7224")]
	private void StartOnClient()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x9E75E0", Offset = "0x9E75E0", VA = "0x9E75E0")]
	public void OnServerMetaHandler(NetworkHandler.ServerMetaData metaInfo)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x9E7670", Offset = "0x9E7670", VA = "0x9E7670", Slot = "4")]
	public virtual void InitOnServer()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x9E76DC", Offset = "0x9E76DC", VA = "0x9E76DC", Slot = "5")]
	public virtual void InitOnClient()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x9E7748", Offset = "0x9E7748", VA = "0x9E7748")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x730EF8", Offset = "0x730EF8")]
	private IEnumerator StopDiscoveryInNextFrame()
	{
		return null;
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x9E7570", Offset = "0x9E7570", VA = "0x9E7570")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x730F5C", Offset = "0x730F5C")]
	private IEnumerator StartConnectingTimer()
	{
		return null;
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x9E7810", Offset = "0x9E7810", VA = "0x9E7810")]
	public void Stop()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x9E6D9C", Offset = "0x9E6D9C", VA = "0x9E6D9C")]
	public NetworkStarterBase()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x9E7978", Offset = "0x9E7978", VA = "0x9E7978")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x730FC0", Offset = "0x730FC0")]
	private void <StartOnClient>b__8_0(DiscoveryResponseMessage info)
	{
	}
}
[Token(Token = "0x20001FE")]
public class NetworkStarterLevel : NetworkStarterBase
{
	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_serverGameManager;

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x9E7FB4", Offset = "0x9E7FB4", VA = "0x9E7FB4", Slot = "4")]
	public override void InitOnServer()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x9E8084", Offset = "0x9E8084", VA = "0x9E8084", Slot = "5")]
	public override void InitOnClient()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x9E8138", Offset = "0x9E8138", VA = "0x9E8138")]
	public NetworkStarterLevel()
	{
	}
}
[Token(Token = "0x20001FF")]
public class NetworkStarterLobby : NetworkStarterBase
{
	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x9E8148", Offset = "0x9E8148", VA = "0x9E8148", Slot = "4")]
	public override void InitOnServer()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x9E8230", Offset = "0x9E8230", VA = "0x9E8230")]
	public NetworkStarterLobby()
	{
	}
}
[Token(Token = "0x2000200")]
public class PieceEventTransmitter : NetworkBehaviour
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject m_selectedObject;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	private bool m_hasSelectedObj;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SyncVar]
	private Vector3 m_selectedObjectPos;

	[Token(Token = "0x170000ED")]
	public bool Networkm_hasSelectedObj
	{
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xAD0C54", Offset = "0xAD0C54", VA = "0xAD0C54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xAD0768", Offset = "0xAD0768", VA = "0xAD0768")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public Vector3 Networkm_selectedObjectPos
	{
		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xAD0C5C", Offset = "0xAD0C5C", VA = "0xAD0C5C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xAD04AC", Offset = "0xAD04AC", VA = "0xAD04AC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xAD0294", Offset = "0xAD0294", VA = "0xAD0294", Slot = "9")]
	public override void OnStopServer()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xAD03C4", Offset = "0xAD03C4", VA = "0xAD03C4", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xAD03F8", Offset = "0xAD03F8", VA = "0xAD03F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xAD056C", Offset = "0xAD056C", VA = "0xAD056C")]
	public bool HasSelectedObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xAD0574", Offset = "0xAD0574", VA = "0xAD0574")]
	[Command]
	public void CmdSelectObject(string gameObjectName)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xAD0688", Offset = "0xAD0688", VA = "0xAD0688")]
	[Command]
	public void CmdReleaseSelectedPuzzlePiece()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xAD0298", Offset = "0xAD0298", VA = "0xAD0298")]
	[ServerCallback]
	private void ReleaseSelectedPuzzlePiece()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xAD087C", Offset = "0xAD087C", VA = "0xAD087C")]
	[Command]
	public void CmdMoveActiveObjectToDirection(Vector3 dir)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xAD09B0", Offset = "0xAD09B0", VA = "0xAD09B0")]
	[TargetRpc]
	private void TargetPieceMoved(uint id)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xAD0AC4", Offset = "0xAD0AC4", VA = "0xAD0AC4")]
	private void EvaluatePuzzleSolution()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xAD03F0", Offset = "0xAD03F0", VA = "0xAD03F0")]
	private void OnChangeHasSelectedObj(bool oldHasSelectedObj, bool newHasSelectedObj)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xAD0BF0", Offset = "0xAD0BF0", VA = "0xAD0BF0")]
	public PieceEventTransmitter()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xAD0C50", Offset = "0xAD0C50", VA = "0xAD0C50")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xAD0C68", Offset = "0xAD0C68", VA = "0xAD0C68")]
	public void UserCode_CmdSelectObject(string gameObjectName)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xAD0E60", Offset = "0xAD0E60", VA = "0xAD0E60")]
	protected static void InvokeUserCode_CmdSelectObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xAD0FD4", Offset = "0xAD0FD4", VA = "0xAD0FD4")]
	public void UserCode_CmdReleaseSelectedPuzzlePiece()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xAD0FD8", Offset = "0xAD0FD8", VA = "0xAD0FD8")]
	protected static void InvokeUserCode_CmdReleaseSelectedPuzzlePiece(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xAD1114", Offset = "0xAD1114", VA = "0xAD1114")]
	public void UserCode_CmdMoveActiveObjectToDirection(Vector3 dir)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xAD165C", Offset = "0xAD165C", VA = "0xAD165C")]
	protected static void InvokeUserCode_CmdMoveActiveObjectToDirection(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xAD17C8", Offset = "0xAD17C8", VA = "0xAD17C8")]
	private void UserCode_TargetPieceMoved(uint id)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xAD1934", Offset = "0xAD1934", VA = "0xAD1934")]
	protected static void InvokeUserCode_TargetPieceMoved(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xAD1A60", Offset = "0xAD1A60", VA = "0xAD1A60")]
	static PieceEventTransmitter()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xAD1C50", Offset = "0xAD1C50", VA = "0xAD1C50", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xAD1DD4", Offset = "0xAD1DD4", VA = "0xAD1DD4", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000201")]
public class RemoteAvatarSetter : MonoBehaviour
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string defaultAvatarName;

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xA2AF2C", Offset = "0xA2AF2C", VA = "0xA2AF2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xA2B3AC", Offset = "0xA2B3AC", VA = "0xA2B3AC")]
	public string GetRemoteAvatar()
	{
		return null;
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xA2AFF8", Offset = "0xA2AFF8", VA = "0xA2AFF8")]
	public void SetRemoteAvatar(string selectedAvatar)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xA2B44C", Offset = "0xA2B44C", VA = "0xA2B44C")]
	public RemoteAvatarSetter()
	{
	}
}
[Token(Token = "0x2000202")]
public class RemoteLeftHandSetter : MonoBehaviour
{
	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xA2B454", Offset = "0xA2B454", VA = "0xA2B454")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xA2B4D0", Offset = "0xA2B4D0", VA = "0xA2B4D0")]
	public void SetRemoteLeftHand(string selectedLeftHand)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xA2B8AC", Offset = "0xA2B8AC", VA = "0xA2B8AC")]
	public RemoteLeftHandSetter()
	{
	}
}
[Token(Token = "0x2000203")]
public class RemoteRightHandSetter : MonoBehaviour
{
	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xA2C444", Offset = "0xA2C444", VA = "0xA2C444")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xA2C4C0", Offset = "0xA2C4C0", VA = "0xA2C4C0")]
	public void SetRemoteRightHand(string selectedRightHand)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xA2C89C", Offset = "0xA2C89C", VA = "0xA2C89C")]
	public RemoteRightHandSetter()
	{
	}
}
[Token(Token = "0x2000204")]
public class RemoteTeleportedEventController : MonoBehaviour
{
	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_teleportedAnim;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_storageTemporary;

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xA2C8A4", Offset = "0xA2C8A4", VA = "0xA2C8A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xA2C8FC", Offset = "0xA2C8FC", VA = "0xA2C8FC")]
	public void HandleTeleportedEvent(Vector3 pos)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xA2CA50", Offset = "0xA2CA50", VA = "0xA2CA50")]
	public RemoteTeleportedEventController()
	{
	}
}
[Token(Token = "0x2000205")]
public class SyncPlayer : NetworkBehaviour
{
	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	private Vector3 m_headSyncPosition;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_firstHeadPosReceived;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SyncVar]
	private Quaternion m_headSyncRotation;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform m_headTransform;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SyncVar]
	private Vector3 m_rightHandSyncPosition;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool m_firstRightHandPosReceived;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SyncVar]
	private Quaternion m_rightHandSyncRotation;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform m_rightHandTransform;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SyncVar]
	private Vector3 m_leftHandSyncPosition;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool m_firstLeftHandPosReceived;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SyncVar]
	private Quaternion m_leftHandSyncRotation;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform m_leftHandTransform;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float lerpRate;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool m_firstPositionSynced;

	[Token(Token = "0x170000EF")]
	public Vector3 GetHeadPos
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xA37940", Offset = "0xA37940", VA = "0xA37940")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000F0")]
	public Vector3 Networkm_headSyncPosition
	{
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xA38664", Offset = "0xA38664", VA = "0xA38664")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xA38670", Offset = "0xA38670", VA = "0xA38670")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public Quaternion Networkm_headSyncRotation
	{
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xA387A0", Offset = "0xA387A0", VA = "0xA387A0")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xA387AC", Offset = "0xA387AC", VA = "0xA387AC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public Vector3 Networkm_rightHandSyncPosition
	{
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xA38878", Offset = "0xA38878", VA = "0xA38878")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xA38884", Offset = "0xA38884", VA = "0xA38884")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public Quaternion Networkm_rightHandSyncRotation
	{
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xA389B4", Offset = "0xA389B4", VA = "0xA389B4")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xA389C0", Offset = "0xA389C0", VA = "0xA389C0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public Vector3 Networkm_leftHandSyncPosition
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xA38A8C", Offset = "0xA38A8C", VA = "0xA38A8C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xA38A98", Offset = "0xA38A98", VA = "0xA38A98")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public Quaternion Networkm_leftHandSyncRotation
	{
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xA38BC8", Offset = "0xA38BC8", VA = "0xA38BC8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xA38BD4", Offset = "0xA38BD4", VA = "0xA38BD4")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xA37934", Offset = "0xA37934", VA = "0xA37934")]
	private void OnHeadPosChanged(Vector3 oldValue, Vector3 newValue)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xA379F4", Offset = "0xA379F4", VA = "0xA379F4")]
	private void OnRightHandPosChanged(Vector3 oldValue, Vector3 newValue)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xA37A00", Offset = "0xA37A00", VA = "0xA37A00")]
	private void OnLeftHandPosChanged(Vector3 oldValue, Vector3 newValue)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xA37A0C", Offset = "0xA37A0C", VA = "0xA37A0C")]
	public bool IsFirstPositionSynced()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xA37A14", Offset = "0xA37A14", VA = "0xA37A14")]
	private bool AllFirstPosDataReceived()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xA37A3C", Offset = "0xA37A3C", VA = "0xA37A3C")]
	public void SetTransforms(Transform head, Transform rightHand, Transform leftHand)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xA37A4C", Offset = "0xA37A4C", VA = "0xA37A4C")]
	private void SetSyncedPositionsImmediately()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xA37AE0", Offset = "0xA37AE0", VA = "0xA37AE0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xA37D88", Offset = "0xA37D88", VA = "0xA37D88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xA37E78", Offset = "0xA37E78", VA = "0xA37E78")]
	private void LerpPosition()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xA38104", Offset = "0xA38104", VA = "0xA38104")]
	private void LerpRotation()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xA38314", Offset = "0xA38314", VA = "0xA38314")]
	[Command]
	private void CmdProvidePositionToServer(Vector3 pos, Vector3 rightHandPos, Vector3 leftHandPos)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xA384A0", Offset = "0xA384A0", VA = "0xA384A0")]
	[Command]
	private void CmdProvideRotToServer(Quaternion headRot, Quaternion rightHandRot, Quaternion leftHandRot)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xA37BC8", Offset = "0xA37BC8", VA = "0xA37BC8")]
	[ClientCallback]
	private void TransmitPosition()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xA38650", Offset = "0xA38650", VA = "0xA38650")]
	public SyncPlayer()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xA38660", Offset = "0xA38660", VA = "0xA38660")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xA38CA0", Offset = "0xA38CA0", VA = "0xA38CA0")]
	private void UserCode_CmdProvidePositionToServer(Vector3 pos, Vector3 rightHandPos, Vector3 leftHandPos)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xA38D10", Offset = "0xA38D10", VA = "0xA38D10")]
	protected static void InvokeUserCode_CmdProvidePositionToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xA38F00", Offset = "0xA38F00", VA = "0xA38F00")]
	private void UserCode_CmdProvideRotToServer(Quaternion headRot, Quaternion rightHandRot, Quaternion leftHandRot)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xA38F84", Offset = "0xA38F84", VA = "0xA38F84")]
	protected static void InvokeUserCode_CmdProvideRotToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xA39190", Offset = "0xA39190", VA = "0xA39190")]
	static SyncPlayer()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xA392D4", Offset = "0xA392D4", VA = "0xA392D4", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xA395EC", Offset = "0xA395EC", VA = "0xA395EC", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000206")]
public class SyncPlayerData : NetworkBehaviour
{
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72560C", Offset = "0x72560C")]
	private sealed class <ClearCurseState>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeout;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SyncPlayerData <>4__this;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0xA3EEFC", Offset = "0xA3EEFC", VA = "0xA3EEFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0xA3EF64", Offset = "0xA3EF64", VA = "0xA3EF64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xA3B134", Offset = "0xA3B134", VA = "0xA3B134")]
		[DebuggerHidden]
		public <ClearCurseState>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xA3EDC8", Offset = "0xA3EDC8", VA = "0xA3EDC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xA3EDCC", Offset = "0xA3EDCC", VA = "0xA3EDCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xA3EF04", Offset = "0xA3EF04", VA = "0xA3EF04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72561C", Offset = "0x72561C")]
	private sealed class <HandleRemoteAvatarSoundInNextFrame>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string newSelectedAvatar;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SyncPlayerData <>4__this;

		[Token(Token = "0x170000FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0xA3F098", Offset = "0xA3F098", VA = "0xA3F098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0xA3F100", Offset = "0xA3F100", VA = "0xA3F100", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xA3C39C", Offset = "0xA3C39C", VA = "0xA3C39C")]
		[DebuggerHidden]
		public <HandleRemoteAvatarSoundInNextFrame>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xA3EF6C", Offset = "0xA3EF6C", VA = "0xA3EF6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xA3EF70", Offset = "0xA3EF70", VA = "0xA3EF70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xA3F0A0", Offset = "0xA3F0A0", VA = "0xA3F0A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	public string m_selectedAvatar;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SyncVar]
	public string m_selectedHandLeft;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SyncVar]
	public string m_selectedHandRight;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SyncVar]
	public TriggerCurse.CurseType m_curse;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine m_curseStateResetter;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SyncVar]
	private int m_mana;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SyncVar]
	private int m_crystal;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_isPlayerInFinalArea;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private NetCollectiveStat m_collaborativeStat;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject m_manaHandler;

	[Token(Token = "0x170000F6")]
	public string Networkm_selectedAvatar
	{
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xA3C8B0", Offset = "0xA3C8B0", VA = "0xA3C8B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xA3C8B8", Offset = "0xA3C8B8", VA = "0xA3C8B8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public string Networkm_selectedHandLeft
	{
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xA3C9C8", Offset = "0xA3C9C8", VA = "0xA3C9C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xA3C9D0", Offset = "0xA3C9D0", VA = "0xA3C9D0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public string Networkm_selectedHandRight
	{
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xA3CAE0", Offset = "0xA3CAE0", VA = "0xA3CAE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xA3CAE8", Offset = "0xA3CAE8", VA = "0xA3CAE8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public TriggerCurse.CurseType Networkm_curse
	{
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xA3CBF8", Offset = "0xA3CBF8", VA = "0xA3CBF8")]
		get
		{
			return default(TriggerCurse.CurseType);
		}
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xA3CC00", Offset = "0xA3CC00", VA = "0xA3CC00")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public int Networkm_mana
	{
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xA3CD10", Offset = "0xA3CD10", VA = "0xA3CD10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xA3B748", Offset = "0xA3B748", VA = "0xA3B748")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public int Networkm_crystal
	{
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xA3CD18", Offset = "0xA3CD18", VA = "0xA3CD18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xA3BA48", Offset = "0xA3BA48", VA = "0xA3BA48")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xA3A9CC", Offset = "0xA3A9CC", VA = "0xA3A9CC")]
	[Server]
	public bool IsPlayerInFinalArea()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xA3AAC8", Offset = "0xA3AAC8", VA = "0xA3AAC8")]
	[Command]
	public void CmdSendPlayerIsInFinalAreaToServer(bool isPlayerInFinalArea)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xA3ABDC", Offset = "0xA3ABDC", VA = "0xA3ABDC")]
	[Command]
	public void CmdSendSelectedAvatarToServer(string selectedAvatar)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xA3ACF0", Offset = "0xA3ACF0", VA = "0xA3ACF0")]
	[Command]
	public void CmdSendSelectedHandLeftToServer(string selectedHandLeft)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xA3AE04", Offset = "0xA3AE04", VA = "0xA3AE04")]
	[Command]
	public void CmdSendSelectedHandRightToServer(string selectedHandRight)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xA3AF18", Offset = "0xA3AF18", VA = "0xA3AF18")]
	[Command]
	public void CmdSendCurseStatusToServer(TriggerCurse.CurseType curse)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xA3B004", Offset = "0xA3B004", VA = "0xA3B004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7311A0", Offset = "0x7311A0")]
	[Server]
	private IEnumerator ClearCurseState(float timeout)
	{
		return null;
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xA3B160", Offset = "0xA3B160", VA = "0xA3B160")]
	[Command]
	public void CmdSendManaAdjustmentToServer(int manaAdjustment)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xA3B274", Offset = "0xA3B274", VA = "0xA3B274")]
	[Command]
	public void CmdGatherManaInServer(uint netId)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xA3B388", Offset = "0xA3B388", VA = "0xA3B388")]
	[Command]
	public void CmdSendCrystalAdjustmentToServer(int crystalAdjustment)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xA3B49C", Offset = "0xA3B49C", VA = "0xA3B49C")]
	[Command]
	public void CmdSendManaAbsorptionToServer()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xA3B57C", Offset = "0xA3B57C", VA = "0xA3B57C")]
	[Server]
	public void AdjustMana(int manaAdjustment)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xA3B860", Offset = "0xA3B860", VA = "0xA3B860")]
	[Server]
	public void AdjustCrystal(int crystalAdjustment)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xA3BB60", Offset = "0xA3BB60", VA = "0xA3BB60")]
	public int GetMana()
	{
		return default(int);
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xA3BB68", Offset = "0xA3BB68", VA = "0xA3BB68")]
	public int GetCrystal()
	{
		return default(int);
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xA3BB70", Offset = "0xA3BB70", VA = "0xA3BB70", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xA3C1D4", Offset = "0xA3C1D4", VA = "0xA3C1D4", Slot = "12")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xA3BBE8", Offset = "0xA3BBE8", VA = "0xA3BBE8")]
	private void OnChangeSelectedAvatar(string oldSelectedAvatar, string newSelectedAvatar)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xA3C320", Offset = "0xA3C320", VA = "0xA3C320")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731274", Offset = "0x731274")]
	public IEnumerator HandleRemoteAvatarSoundInNextFrame(string newSelectedAvatar)
	{
		return null;
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xA3BD84", Offset = "0xA3BD84", VA = "0xA3BD84")]
	private void OnChangeSelectedLeftHand(string oldSelectedLeftHand, string newSelectedLeftHand)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xA3BF14", Offset = "0xA3BF14", VA = "0xA3BF14")]
	private void OnChangeSelectedRightHand(string oldSelectedRightHand, string newSelectedRightHand)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xA3C0A4", Offset = "0xA3C0A4", VA = "0xA3C0A4")]
	private void OnChangeCurse(TriggerCurse.CurseType oldCurse, TriggerCurse.CurseType newCurse)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xA3C3C8", Offset = "0xA3C3C8", VA = "0xA3C3C8")]
	private void OnChangeMana(int oldValue, int newValue)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xA3C62C", Offset = "0xA3C62C", VA = "0xA3C62C")]
	private void OnChangeCrystal(int oldValue, int newValue)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xA3C828", Offset = "0xA3C828", VA = "0xA3C828", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xA3C89C", Offset = "0xA3C89C", VA = "0xA3C89C")]
	public SyncPlayerData()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xA3C8AC", Offset = "0xA3C8AC", VA = "0xA3C8AC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xA3CD20", Offset = "0xA3CD20", VA = "0xA3CD20")]
	public void UserCode_CmdSendPlayerIsInFinalAreaToServer(bool isPlayerInFinalArea)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xA3CDD4", Offset = "0xA3CDD4", VA = "0xA3CDD4")]
	protected static void InvokeUserCode_CmdSendPlayerIsInFinalAreaToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xA3CF44", Offset = "0xA3CF44", VA = "0xA3CF44")]
	public void UserCode_CmdSendSelectedAvatarToServer(string selectedAvatar)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xA3CFE4", Offset = "0xA3CFE4", VA = "0xA3CFE4")]
	protected static void InvokeUserCode_CmdSendSelectedAvatarToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xA3D158", Offset = "0xA3D158", VA = "0xA3D158")]
	public void UserCode_CmdSendSelectedHandLeftToServer(string selectedHandLeft)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xA3D1F8", Offset = "0xA3D1F8", VA = "0xA3D1F8")]
	protected static void InvokeUserCode_CmdSendSelectedHandLeftToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xA3D36C", Offset = "0xA3D36C", VA = "0xA3D36C")]
	public void UserCode_CmdSendSelectedHandRightToServer(string selectedHandRight)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xA3D40C", Offset = "0xA3D40C", VA = "0xA3D40C")]
	protected static void InvokeUserCode_CmdSendSelectedHandRightToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xA3D580", Offset = "0xA3D580", VA = "0xA3D580")]
	public void UserCode_CmdSendCurseStatusToServer(TriggerCurse.CurseType curse)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xA3D878", Offset = "0xA3D878", VA = "0xA3D878")]
	protected static void InvokeUserCode_CmdSendCurseStatusToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xA3D9CC", Offset = "0xA3D9CC", VA = "0xA3D9CC")]
	public void UserCode_CmdSendManaAdjustmentToServer(int manaAdjustment)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xA3DA8C", Offset = "0xA3DA8C", VA = "0xA3DA8C")]
	protected static void InvokeUserCode_CmdSendManaAdjustmentToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xA3DC00", Offset = "0xA3DC00", VA = "0xA3DC00")]
	public void UserCode_CmdGatherManaInServer(uint netId)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xA3DD1C", Offset = "0xA3DD1C", VA = "0xA3DD1C")]
	protected static void InvokeUserCode_CmdGatherManaInServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xA3DE90", Offset = "0xA3DE90", VA = "0xA3DE90")]
	public void UserCode_CmdSendCrystalAdjustmentToServer(int crystalAdjustment)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xA3DF50", Offset = "0xA3DF50", VA = "0xA3DF50")]
	protected static void InvokeUserCode_CmdSendCrystalAdjustmentToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xA3E0C4", Offset = "0xA3E0C4", VA = "0xA3E0C4")]
	public void UserCode_CmdSendManaAbsorptionToServer()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xA3E140", Offset = "0xA3E140", VA = "0xA3E140")]
	protected static void InvokeUserCode_CmdSendManaAbsorptionToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xA3E27C", Offset = "0xA3E27C", VA = "0xA3E27C")]
	static SyncPlayerData()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xA3E628", Offset = "0xA3E628", VA = "0xA3E628", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xA3E8A0", Offset = "0xA3E8A0", VA = "0xA3E8A0", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000209")]
public class SyncPlayerEffect : NetworkBehaviour
{
	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_teleportInEffect;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_teleportOutEffect;

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xA3F108", Offset = "0xA3F108", VA = "0xA3F108")]
	[Command]
	public void CmdCreateTeleportInEffect(Vector3 pos, Vector3 scale)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xA3F268", Offset = "0xA3F268", VA = "0xA3F268")]
	[Command]
	public void CmdCreateTeleportOutEffect(Vector3 pos, Vector3 scale)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xA3F3C8", Offset = "0xA3F3C8", VA = "0xA3F3C8")]
	public SyncPlayerEffect()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xA3F3D0", Offset = "0xA3F3D0", VA = "0xA3F3D0")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xA3F3D4", Offset = "0xA3F3D4", VA = "0xA3F3D4")]
	public void UserCode_CmdCreateTeleportInEffect(Vector3 pos, Vector3 scale)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xA3F524", Offset = "0xA3F524", VA = "0xA3F524")]
	protected static void InvokeUserCode_CmdCreateTeleportInEffect(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xA3F6D8", Offset = "0xA3F6D8", VA = "0xA3F6D8")]
	public void UserCode_CmdCreateTeleportOutEffect(Vector3 pos, Vector3 scale)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xA3F828", Offset = "0xA3F828", VA = "0xA3F828")]
	protected static void InvokeUserCode_CmdCreateTeleportOutEffect(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xA3F9DC", Offset = "0xA3F9DC", VA = "0xA3F9DC")]
	static SyncPlayerEffect()
	{
	}
}
[Token(Token = "0x200020A")]
public class SyncPlayerEvent : NetworkBehaviour
{
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72562C", Offset = "0x72562C")]
	private sealed class <HandleTeleportEventInNextFrame>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SyncPlayerEvent <>4__this;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 pos;

		[Token(Token = "0x17000100")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0xA426A8", Offset = "0xA426A8", VA = "0xA426A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0xA42710", Offset = "0xA42710", VA = "0xA42710", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xA3FE1C", Offset = "0xA3FE1C", VA = "0xA3FE1C")]
		[DebuggerHidden]
		public <HandleTeleportEventInNextFrame>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xA425F8", Offset = "0xA425F8", VA = "0xA425F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xA425FC", Offset = "0xA425FC", VA = "0xA425FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xA426B0", Offset = "0xA426B0", VA = "0xA426B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xA3FB20", Offset = "0xA3FB20", VA = "0xA3FB20")]
	[Command]
	public void CmdSendTeleportedToServer(Vector3 pos)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xA3FC54", Offset = "0xA3FC54", VA = "0xA3FC54")]
	[ClientRpc]
	public void RpcDoTeleportedOnClient(Vector3 pos)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xA3FD88", Offset = "0xA3FD88", VA = "0xA3FD88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7313B8", Offset = "0x7313B8")]
	public IEnumerator HandleTeleportEventInNextFrame(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xA3FE48", Offset = "0xA3FE48", VA = "0xA3FE48")]
	private void InvokeTeleportEventHandling(Vector3 pos)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xA3FEF4", Offset = "0xA3FEF4", VA = "0xA3FEF4")]
	[Command]
	public void CmdOpenChest(string chestName)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xA40008", Offset = "0xA40008", VA = "0xA40008")]
	[Command]
	public void CmdEnableObjectByServer(uint netId)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xA4011C", Offset = "0xA4011C", VA = "0xA4011C")]
	[Command]
	public void CmdEnableObjectOnServer(uint netId)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xA40230", Offset = "0xA40230", VA = "0xA40230")]
	[Command]
	public void CmdToggleSwitch(uint netId)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xA40344", Offset = "0xA40344", VA = "0xA40344")]
	[Command]
	public void CmdPickupRune(uint netId)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xA40458", Offset = "0xA40458", VA = "0xA40458")]
	[Command]
	public void CmdTriggerPushSwitch2(uint netId)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xA4056C", Offset = "0xA4056C", VA = "0xA4056C")]
	[Command]
	public void CmdReleasePushSwitch2(uint netId)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xA40680", Offset = "0xA40680", VA = "0xA40680")]
	public SyncPlayerEvent()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xA40688", Offset = "0xA40688", VA = "0xA40688")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xA4068C", Offset = "0xA4068C", VA = "0xA4068C")]
	public void UserCode_CmdSendTeleportedToServer(Vector3 pos)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xA4072C", Offset = "0xA4072C", VA = "0xA4072C")]
	protected static void InvokeUserCode_CmdSendTeleportedToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xA40898", Offset = "0xA40898", VA = "0xA40898")]
	public void UserCode_RpcDoTeleportedOnClient(Vector3 pos)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xA40994", Offset = "0xA40994", VA = "0xA40994")]
	protected static void InvokeUserCode_RpcDoTeleportedOnClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xA40AC0", Offset = "0xA40AC0", VA = "0xA40AC0")]
	public void UserCode_CmdOpenChest(string chestName)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xA40D94", Offset = "0xA40D94", VA = "0xA40D94")]
	protected static void InvokeUserCode_CmdOpenChest(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xA40F08", Offset = "0xA40F08", VA = "0xA40F08")]
	public void UserCode_CmdEnableObjectByServer(uint netId)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xA4100C", Offset = "0xA4100C", VA = "0xA4100C")]
	protected static void InvokeUserCode_CmdEnableObjectByServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xA41178", Offset = "0xA41178", VA = "0xA41178")]
	public void UserCode_CmdEnableObjectOnServer(uint netId)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xA4127C", Offset = "0xA4127C", VA = "0xA4127C")]
	protected static void InvokeUserCode_CmdEnableObjectOnServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xA413E8", Offset = "0xA413E8", VA = "0xA413E8")]
	public void UserCode_CmdToggleSwitch(uint netId)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xA416E8", Offset = "0xA416E8", VA = "0xA416E8")]
	protected static void InvokeUserCode_CmdToggleSwitch(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xA4185C", Offset = "0xA4185C", VA = "0xA4185C")]
	public void UserCode_CmdPickupRune(uint netId)
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xA41960", Offset = "0xA41960", VA = "0xA41960")]
	protected static void InvokeUserCode_CmdPickupRune(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xA41ACC", Offset = "0xA41ACC", VA = "0xA41ACC")]
	public void UserCode_CmdTriggerPushSwitch2(uint netId)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xA41DC0", Offset = "0xA41DC0", VA = "0xA41DC0")]
	protected static void InvokeUserCode_CmdTriggerPushSwitch2(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xA41F34", Offset = "0xA41F34", VA = "0xA41F34")]
	public void UserCode_CmdReleasePushSwitch2(uint netId)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xA420E4", Offset = "0xA420E4", VA = "0xA420E4")]
	protected static void InvokeUserCode_CmdReleasePushSwitch2(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xA42250", Offset = "0xA42250", VA = "0xA42250")]
	static SyncPlayerEvent()
	{
	}
}
[Token(Token = "0x200020C")]
public class SyncPlayerLobbyEvent : NetworkBehaviour
{
	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InitiatorToGameScene m_initiator;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_lobbyActivated;

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xA42718", Offset = "0xA42718", VA = "0xA42718", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xA42788", Offset = "0xA42788", VA = "0xA42788", Slot = "9")]
	public override void OnStopServer()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xA427B0", Offset = "0xA427B0", VA = "0xA427B0")]
	[Command]
	public void CmdSendLobbyActivationToServer()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xA42890", Offset = "0xA42890", VA = "0xA42890")]
	[Command]
	public void CmdSendLobbyDeactivationToServer()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xA42970", Offset = "0xA42970", VA = "0xA42970")]
	public SyncPlayerLobbyEvent()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xA42978", Offset = "0xA42978", VA = "0xA42978")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xA4297C", Offset = "0xA4297C", VA = "0xA4297C")]
	public void UserCode_CmdSendLobbyActivationToServer()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xA42A1C", Offset = "0xA42A1C", VA = "0xA42A1C")]
	protected static void InvokeUserCode_CmdSendLobbyActivationToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xA42B58", Offset = "0xA42B58", VA = "0xA42B58")]
	public void UserCode_CmdSendLobbyDeactivationToServer()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xA42BF4", Offset = "0xA42BF4", VA = "0xA42BF4")]
	protected static void InvokeUserCode_CmdSendLobbyDeactivationToServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xA42D30", Offset = "0xA42D30", VA = "0xA42D30")]
	static SyncPlayerLobbyEvent()
	{
	}
}
[Token(Token = "0x200020D")]
public class SyncPlayerServerData : NetworkBehaviour
{
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72563C", Offset = "0x72563C")]
	private sealed class <MovePlayerToSpawnPlace>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SyncPlayerServerData <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0xA43B7C", Offset = "0xA43B7C", VA = "0xA43B7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0xA43BE4", Offset = "0xA43BE4", VA = "0xA43BE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xA434A0", Offset = "0xA434A0", VA = "0xA434A0")]
		[DebuggerHidden]
		public <MovePlayerToSpawnPlace>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xA437B8", Offset = "0xA437B8", VA = "0xA437B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xA437BC", Offset = "0xA437BC", VA = "0xA437BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xA43B84", Offset = "0xA43B84", VA = "0xA43B84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static uint[] s_spawnPointToPlayerId;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SyncVar]
	private int m_spawnPoint;

	[Token(Token = "0x17000102")]
	public int Networkm_spawnPoint
	{
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xA435E0", Offset = "0xA435E0", VA = "0xA435E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xA43264", Offset = "0xA43264", VA = "0xA43264")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xA42E74", Offset = "0xA42E74", VA = "0xA42E74", Slot = "9")]
	public override void OnStopServer()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xA43064", Offset = "0xA43064", VA = "0xA43064", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xA43300", Offset = "0xA43300", VA = "0xA43300", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xA43430", Offset = "0xA43430", VA = "0xA43430")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7314FC", Offset = "0x7314FC")]
	public IEnumerator MovePlayerToSpawnPlace()
	{
		return null;
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xA434CC", Offset = "0xA434CC", VA = "0xA434CC")]
	public int getSpawnPoint()
	{
		return default(int);
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xA43554", Offset = "0xA43554", VA = "0xA43554")]
	public SyncPlayerServerData()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xA435DC", Offset = "0xA435DC", VA = "0xA435DC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xA435E8", Offset = "0xA435E8", VA = "0xA435E8", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xA436DC", Offset = "0xA436DC", VA = "0xA436DC", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200020F")]
public class TeleportDetectorInServer : NetworkBehaviour
{
	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private NetworkTransform m_relatedNetworkTransform;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_lastPos;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72A3AC", Offset = "0x72A3AC")]
	private float m_posThreshold;

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xA44F1C", Offset = "0xA44F1C", VA = "0xA44F1C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xA45024", Offset = "0xA45024", VA = "0xA45024", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xA45068", Offset = "0xA45068", VA = "0xA45068")]
	public TeleportDetectorInServer()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xA45078", Offset = "0xA45078", VA = "0xA45078")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000210")]
public class FinishLobbyHandler : MonoBehaviour
{
	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_forceToFinishGame;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool m_clientsNotified;

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xAAA6D8", Offset = "0xAAA6D8", VA = "0xAAA6D8")]
	public void ForceToFinishGame()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xAAD010", Offset = "0xAAD010", VA = "0xAAD010")]
	private bool DoAllPlayersReachFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xAAD1DC", Offset = "0xAAD1DC", VA = "0xAAD1DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xAAD38C", Offset = "0xAAD38C", VA = "0xAAD38C")]
	public FinishLobbyHandler()
	{
	}
}
[Token(Token = "0x2000211")]
public class FollowNetPlayer : MonoBehaviour
{
	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SyncPlayer m_netPlayer;

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xAB0404", Offset = "0xAB0404", VA = "0xAB0404")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xAB045C", Offset = "0xAB045C", VA = "0xAB045C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xAB04A8", Offset = "0xAB04A8", VA = "0xAB04A8")]
	public FollowNetPlayer()
	{
	}
}
[Token(Token = "0x2000212")]
public class PlayerNavMeshAgentObstacleAvoidanceToggler : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72564C", Offset = "0x72564C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<GameObject> <>9__6_0;

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xA24138", Offset = "0xA24138", VA = "0xA24138")]
		public <>c()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xA24140", Offset = "0xA24140", VA = "0xA24140")]
		internal bool <Update>b__6_0(GameObject x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NavMeshAgent m_navMeshAgent;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> m_triggerObjects;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ObstacleAvoidanceType m_original;

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xA23D40", Offset = "0xA23D40", VA = "0xA23D40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xA23DAC", Offset = "0xA23DAC", VA = "0xA23DAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xA23E64", Offset = "0xA23E64", VA = "0xA23E64")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xA23F0C", Offset = "0xA23F0C", VA = "0xA23F0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xA24064", Offset = "0xA24064", VA = "0xA24064")]
	public PlayerNavMeshAgentObstacleAvoidanceToggler()
	{
	}
}
[Token(Token = "0x2000214")]
public class RestrictedAreaDetector : MonoBehaviour
{
	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> m_tags;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent m_enterRestrictedArea;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent m_exitRestrictedArea;

	[Token(Token = "0x4000938")]
	private const int m_maxLeaveFrame = 10;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_leaveFrameCounter;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool m_isHeroOutHeroPlayingArea;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xA2D6F4", Offset = "0xA2D6F4", VA = "0xA2D6F4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xA2D7A4", Offset = "0xA2D7A4", VA = "0xA2D7A4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xA2D858", Offset = "0xA2D858", VA = "0xA2D858")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xA2D9A8", Offset = "0xA2D9A8", VA = "0xA2D9A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xA2DA0C", Offset = "0xA2DA0C", VA = "0xA2DA0C")]
	public RestrictedAreaDetector()
	{
	}
}
[Token(Token = "0x2000215")]
public class Test_PlayerEffect : MonoBehaviour
{
	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xA4AC20", Offset = "0xA4AC20", VA = "0xA4AC20")]
	public void DoTeleportEffectOnPlayer(GameObject collider)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xA4AD80", Offset = "0xA4AD80", VA = "0xA4AD80")]
	public Test_PlayerEffect()
	{
	}
}
[Token(Token = "0x2000216")]
public class CollidingQuadrant : MonoBehaviour
{
	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent m_collideActionA;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent m_collideActionB;

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x972510", Offset = "0x972510", VA = "0x972510")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x97265C", Offset = "0x97265C", VA = "0x97265C")]
	public CollidingQuadrant()
	{
	}
}
[Token(Token = "0x2000217")]
public class EntirePillarFinalAnimHelper : MonoBehaviour
{
	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_objectsToDisable;

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xAACC64", Offset = "0xAACC64", VA = "0xAACC64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xAACD60", Offset = "0xAACD60", VA = "0xAACD60")]
	public EntirePillarFinalAnimHelper()
	{
	}
}
[Token(Token = "0x2000218")]
public class FireElementalPuzzleController : MonoBehaviour
{
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72565C", Offset = "0x72565C")]
	private sealed class <StartLater>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireElementalPuzzleController <>4__this;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0xAAF84C", Offset = "0xAAF84C", VA = "0xAAF84C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0xAAF8B4", Offset = "0xAAF8B4", VA = "0xAAF8B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xAAEE1C", Offset = "0xAAEE1C", VA = "0xAAEE1C")]
		[DebuggerHidden]
		public <StartLater>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xAAF70C", Offset = "0xAAF70C", VA = "0xAAF70C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xAAF710", Offset = "0xAAF710", VA = "0xAAF710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xAAF854", Offset = "0xAAF854", VA = "0xAAF854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72566C", Offset = "0x72566C")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject player;

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xAAF2BC", Offset = "0xAAF2BC", VA = "0xAAF2BC")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xAAF660", Offset = "0xAAF660", VA = "0xAAF660")]
		internal bool <OnPlayerLeave>b__0(GameObject x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72567C", Offset = "0x72567C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<GameObject> <>9__9_0;

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xAAF5C0", Offset = "0xAAF5C0", VA = "0xAAF5C0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xAAF5C8", Offset = "0xAAF5C8", VA = "0xAAF5C8")]
		internal bool <Update>b__9_0(GameObject x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_generateChallange;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_exitTeleport;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> m_playersNearByPuzzle;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<FireElementalController> m_fireElementals;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_distroyableFireElementals;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xAAED2C", Offset = "0xAAED2C", VA = "0xAAED2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xAAEDAC", Offset = "0xAAEDAC", VA = "0xAAEDAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7315B0", Offset = "0x7315B0")]
	private IEnumerator StartLater()
	{
		return null;
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xAAEE48", Offset = "0xAAEE48", VA = "0xAAEE48")]
	public void OnPlayerEnter(GameObject player)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xAAF1D0", Offset = "0xAAF1D0", VA = "0xAAF1D0")]
	public void OnPlayerLeave(GameObject player)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xAAF2C4", Offset = "0xAAF2C4", VA = "0xAAF2C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xAAF3BC", Offset = "0xAAF3BC", VA = "0xAAF3BC")]
	public void OnFireElemetalDestroyed(GameObject fireElemental)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xAAEF24", Offset = "0xAAEF24", VA = "0xAAEF24")]
	private void StartChallange()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xAAF4C4", Offset = "0xAAF4C4", VA = "0xAAF4C4")]
	public FireElementalPuzzleController()
	{
	}
}
[Token(Token = "0x200021C")]
public class GameSceneSolutionChecker : MonoBehaviour
{
	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_pathToNextLevel;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_middlePuzzle;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RotationSolutionHandler[] m_rotationSolutionHandlers;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NetworkHandler m_networkManager;

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xAB06D8", Offset = "0xAB06D8", VA = "0xAB06D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xAB07B0", Offset = "0xAB07B0", VA = "0xAB07B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xAB08FC", Offset = "0xAB08FC", VA = "0xAB08FC")]
	public GameSceneSolutionChecker()
	{
	}
}
[Token(Token = "0x200021D")]
public class GodsCubeFinalAnimHelper : MonoBehaviour
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_godsCube;

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xAB2E88", Offset = "0xAB2E88", VA = "0xAB2E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xAB2EA8", Offset = "0xAB2EA8", VA = "0xAB2EA8")]
	public GodsCubeFinalAnimHelper()
	{
	}
}
[Token(Token = "0x200021E")]
public class MagicCandlePuzzleSolutionHandler : MonoBehaviour
{
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72568C", Offset = "0x72568C")]
	private sealed class <InitLately>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MagicCandlePuzzleSolutionHandler <>4__this;

		[Token(Token = "0x17000108")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0x97F9CC", Offset = "0x97F9CC", VA = "0x97F9CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0x97FA34", Offset = "0x97FA34", VA = "0x97FA34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x97EE28", Offset = "0x97EE28", VA = "0x97EE28")]
		[DebuggerHidden]
		public <InitLately>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x97F738", Offset = "0x97F738", VA = "0x97F738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x97F73C", Offset = "0x97F73C", VA = "0x97F73C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x97F9D4", Offset = "0x97F9D4", VA = "0x97F9D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool[,] m_logic;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NetMagicCandleStateHandler[,] m_candleHandlers;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent m_onSolved;

	[Token(Token = "0x17000107")]
	private bool IsSolved
	{
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x97ED1C", Offset = "0x97ED1C", VA = "0x97ED1C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x97ED8C", Offset = "0x97ED8C", VA = "0x97ED8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x97EDB8", Offset = "0x97EDB8", VA = "0x97EDB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731664", Offset = "0x731664")]
	private IEnumerator InitLately()
	{
		return null;
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x97EE54", Offset = "0x97EE54", VA = "0x97EE54")]
	public void Deactivate(int child, string parent)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x97EED4", Offset = "0x97EED4", VA = "0x97EED4")]
	private void Deactivate(int i, int j)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x97F64C", Offset = "0x97F64C", VA = "0x97F64C")]
	public MagicCandlePuzzleSolutionHandler()
	{
	}
}
[Token(Token = "0x2000220")]
public class MultiPillarFinalAnimHelper : MonoBehaviour
{
	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x98DCE4", Offset = "0x98DCE4", VA = "0x98DCE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x98DCE8", Offset = "0x98DCE8", VA = "0x98DCE8")]
	public MultiPillarFinalAnimHelper()
	{
	}
}
[Token(Token = "0x2000221")]
public class NetSlidingPuzzleSolutionChecker : NetworkBehaviour
{
	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72569C", Offset = "0x72569C")]
	private sealed class <CheckSlidingPuzzlePeriodically>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetSlidingPuzzleSolutionChecker <>4__this;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NetPuzzleSolutionStateControl <stateControl>5__2;

		[Token(Token = "0x1700010A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x9E0FE4", Offset = "0x9E0FE4", VA = "0x9E0FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0x9E104C", Offset = "0x9E104C", VA = "0x9E104C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x9E0D1C", Offset = "0x9E0D1C", VA = "0x9E0D1C")]
		[DebuggerHidden]
		public <CheckSlidingPuzzlePeriodically>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x9E0D54", Offset = "0x9E0D54", VA = "0x9E0D54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x9E0D58", Offset = "0x9E0D58", VA = "0x9E0D58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x9E0FEC", Offset = "0x9E0FEC", VA = "0x9E0FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_slidingPuzzle;

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x9E0C80", Offset = "0x9E0C80", VA = "0x9E0C80", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x9E0CAC", Offset = "0x9E0CAC", VA = "0x9E0CAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731718", Offset = "0x731718")]
	private IEnumerator CheckSlidingPuzzlePeriodically()
	{
		return null;
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x9E0D48", Offset = "0x9E0D48", VA = "0x9E0D48")]
	public NetSlidingPuzzleSolutionChecker()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x9E0D50", Offset = "0x9E0D50", VA = "0x9E0D50")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000223")]
public class PuzzlePieceDeselector : MonoBehaviour
{
	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xA26E70", Offset = "0xA26E70", VA = "0xA26E70")]
	public void ReleaseSelectedPuzzlePiece()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xA26F04", Offset = "0xA26F04", VA = "0xA26F04")]
	public PuzzlePieceDeselector()
	{
	}
}
[Token(Token = "0x2000224")]
public class PuzzleSolutionAnimationFinalizer : MonoBehaviour
{
	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7256AC", Offset = "0x7256AC")]
	private sealed class <StartMiddlePuzzleFinalAnim>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuzzleSolutionAnimationFinalizer <>4__this;

		[Token(Token = "0x1700010C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0xA28620", Offset = "0xA28620", VA = "0xA28620", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0xA28688", Offset = "0xA28688", VA = "0xA28688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xA28324", Offset = "0xA28324", VA = "0xA28324")]
		[DebuggerHidden]
		public <StartMiddlePuzzleFinalAnim>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xA284F0", Offset = "0xA284F0", VA = "0xA284F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xA284F4", Offset = "0xA284F4", VA = "0xA284F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xA28628", Offset = "0xA28628", VA = "0xA28628", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000226")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7256BC", Offset = "0x7256BC")]
	private sealed class <StartEntirePillarPuzzleFinalAnim>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuzzleSolutionAnimationFinalizer <>4__this;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0xA28480", Offset = "0xA28480", VA = "0xA28480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0xA284E8", Offset = "0xA284E8", VA = "0xA284E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xA28350", Offset = "0xA28350", VA = "0xA28350")]
		[DebuggerHidden]
		public <StartEntirePillarPuzzleFinalAnim>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xA28384", Offset = "0xA28384", VA = "0xA28384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xA28388", Offset = "0xA28388", VA = "0xA28388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xA28488", Offset = "0xA28488", VA = "0xA28488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_middlePuzzle;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_middlePuzzleFinalizer;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_middlePuzzleSolved;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RotationSolutionHandler[] m_rotationSolutionHandlers;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject m_singlePillarFinalizer;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_singlePillarSolved;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject m_multiPillarFinalizer;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_multiPillarSolved;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject m_entirePillarFinalizer;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_entirePillarSolved;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private NetworkHandler m_networkManager;

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xA27E4C", Offset = "0xA27E4C", VA = "0xA27E4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xA27F6C", Offset = "0xA27F6C", VA = "0xA27F6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xA28114", Offset = "0xA28114", VA = "0xA28114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7317CC", Offset = "0x7317CC")]
	private IEnumerator StartMiddlePuzzleFinalAnim()
	{
		return null;
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xA28184", Offset = "0xA28184", VA = "0xA28184")]
	private void StartSinglePillarPuzzleFinalAnim()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xA2821C", Offset = "0xA2821C", VA = "0xA2821C")]
	private void StartMultiPillarPuzzleFinalAnim()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xA282B4", Offset = "0xA282B4", VA = "0xA282B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731830", Offset = "0x731830")]
	private IEnumerator StartEntirePillarPuzzleFinalAnim()
	{
		return null;
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xA2837C", Offset = "0xA2837C", VA = "0xA2837C")]
	public PuzzleSolutionAnimationFinalizer()
	{
	}
}
[Token(Token = "0x2000227")]
public class RandomizePuzzle : MonoBehaviour
{
	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<int> m_tileList;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static System.Random m_sysRandom;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int m_width;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int m_height;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int m_emptyRow;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int m_emptyLocX;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int m_emptyLocY;

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xA2A3C0", Offset = "0xA2A3C0", VA = "0xA2A3C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xA2A9DC", Offset = "0xA2A9DC", VA = "0xA2A9DC")]
	private void RandomizeTiles()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xA2AAEC", Offset = "0xA2AAEC", VA = "0xA2AAEC")]
	private void SwapTiles(int index, int indexSwapWith)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xA2ABD8", Offset = "0xA2ABD8", VA = "0xA2ABD8")]
	private void SwapTiles(int i, int j, int k, int l)
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xA2A40C", Offset = "0xA2A40C", VA = "0xA2A40C")]
	private int CountInversions(int checkIx)
	{
		return default(int);
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xA2A658", Offset = "0xA2A658", VA = "0xA2A658")]
	private int SumInversions()
	{
		return default(int);
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xA2AD1C", Offset = "0xA2AD1C", VA = "0xA2AD1C")]
	private bool IsSolvable(int emptyRow)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xA2A8C4", Offset = "0xA2A8C4", VA = "0xA2A8C4")]
	private void MakeSolvable()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xA2A730", Offset = "0xA2A730", VA = "0xA2A730")]
	private void DebugTiles()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xA2AE04", Offset = "0xA2AE04", VA = "0xA2AE04")]
	public RandomizePuzzle()
	{
	}
}
[Token(Token = "0x2000228")]
public class RandomizePuzzleSimple : MonoBehaviour
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x72A450", Offset = "0x72A450")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x72A450", Offset = "0x72A450")]
	public BoundsInt m_locatorBound;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_randomizePieceNum;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_useSeed;

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xA271B8", Offset = "0xA271B8", VA = "0xA271B8")]
	public void Randomize()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xA2AF14", Offset = "0xA2AF14", VA = "0xA2AF14")]
	public RandomizePuzzleSimple()
	{
	}
}
[Token(Token = "0x2000229")]
public class RotationSolutionHandler : MonoBehaviour
{
	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_started;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool m_singleSolved;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool m_multiSolved;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xA2F83C", Offset = "0xA2F83C", VA = "0xA2F83C")]
	public bool IsSingleSolved()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xA2F844", Offset = "0xA2F844", VA = "0xA2F844")]
	public bool IsMultiSolved()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xA276EC", Offset = "0xA276EC", VA = "0xA276EC")]
	public void StartSolutionChecking()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xA2F84C", Offset = "0xA2F84C", VA = "0xA2F84C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xA2F8A0", Offset = "0xA2F8A0", VA = "0xA2F8A0")]
	private bool CheckSinglePlayerSolutions()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xA2F974", Offset = "0xA2F974", VA = "0xA2F974")]
	private bool CheckMultiPlayerSolutions()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xA2FA78", Offset = "0xA2FA78", VA = "0xA2FA78")]
	private bool CheckSectionMoverChildSolutions(Transform childObj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xA2FB34", Offset = "0xA2FB34", VA = "0xA2FB34")]
	public RotationSolutionHandler()
	{
	}
}
[Token(Token = "0x200022A")]
public class SinglePillarFinalAnimHelper : MonoBehaviour
{
	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xA349F8", Offset = "0xA349F8", VA = "0xA349F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xA349FC", Offset = "0xA349FC", VA = "0xA349FC")]
	public SinglePillarFinalAnimHelper()
	{
	}
}
[Token(Token = "0x200022B")]
public class TransformTrigger : MonoBehaviour
{
	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_player;

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xA4DC1C", Offset = "0xA4DC1C", VA = "0xA4DC1C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xA4DD84", Offset = "0xA4DD84", VA = "0xA4DD84")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xA4DEEC", Offset = "0xA4DEEC", VA = "0xA4DEEC")]
	public void ClearTrigger()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xA4E000", Offset = "0xA4E000", VA = "0xA4E000")]
	public TransformTrigger()
	{
	}
}
[Token(Token = "0x200022C")]
public class TransformTriggerCollector : MonoBehaviour
{
	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_triggeredObject;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NetNotifierHandler m_triggerNotifier;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int m_numOfObservedPlatforms;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<uint, string> m_playerIdToActivatedPlatformMap;

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xA4E008", Offset = "0xA4E008", VA = "0xA4E008")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xA4E2C8", Offset = "0xA4E2C8", VA = "0xA4E2C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xA4E640", Offset = "0xA4E640", VA = "0xA4E640")]
	private void CheckActivate()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xA4EA1C", Offset = "0xA4EA1C", VA = "0xA4EA1C")]
	public void ClearPlayerTrigger(uint id)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xA4EA84", Offset = "0xA4EA84", VA = "0xA4EA84")]
	public void AddTrigger(uint id, string platformName)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xA4EB44", Offset = "0xA4EB44", VA = "0xA4EB44")]
	public void RemoveTrigger(uint id, string platformName)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xA4EBF8", Offset = "0xA4EBF8", VA = "0xA4EBF8")]
	public TransformTriggerCollector()
	{
	}
}
[Token(Token = "0x200022D")]
public class DisplayCollectiveScoreField : MonoBehaviour
{
	[Token(Token = "0x200022E")]
	public enum FieldName
	{
		[Token(Token = "0x400097F")]
		CrystalCounter,
		[Token(Token = "0x4000980")]
		PlayTime,
		[Token(Token = "0x4000981")]
		ArtifactCounter
	}

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FieldName m_fieldName;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string s_timeFormat;

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x97B424", Offset = "0x97B424", VA = "0x97B424")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x97B940", Offset = "0x97B940", VA = "0x97B940")]
	public DisplayCollectiveScoreField()
	{
	}
}
[Token(Token = "0x200022F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7256CC", Offset = "0x7256CC")]
public class AmbientHandler : MonoBehaviour
{
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725730", Offset = "0x725730")]
	private sealed class <PlayAudio>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AmbientHandler <>4__this;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0x9693AC", Offset = "0x9693AC", VA = "0x9693AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0x969414", Offset = "0x969414", VA = "0x969414", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x969218", Offset = "0x969218", VA = "0x969218")]
		[DebuggerHidden]
		public <PlayAudio>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x969254", Offset = "0x969254", VA = "0x969254", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x969258", Offset = "0x969258", VA = "0x969258", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x9693B4", Offset = "0x9693B4", VA = "0x9693B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_changeAudio;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource m_puzzleAudio;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource m_actionAudio;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource[] m_audioSources;

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x969104", Offset = "0x969104", VA = "0x969104")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x9691A8", Offset = "0x9691A8", VA = "0x9691A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731934", Offset = "0x731934")]
	private IEnumerator PlayAudio()
	{
		return null;
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x969244", Offset = "0x969244", VA = "0x969244")]
	public AmbientHandler()
	{
	}
}
[Token(Token = "0x2000231")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x725740", Offset = "0x725740")]
public class AudioSourceVelocityUpdateModeSetter : MonoBehaviour
{
	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioVelocityUpdateMode m_updateMode;

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x96AEB0", Offset = "0x96AEB0", VA = "0x96AEB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x96AF14", Offset = "0x96AF14", VA = "0x96AF14")]
	public AudioSourceVelocityUpdateModeSetter()
	{
	}
}
[Token(Token = "0x2000232")]
public class AudioVolumeHandler : MonoBehaviour
{
	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7257A4", Offset = "0x7257A4")]
	private sealed class <TurnUpSlowly>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioVolumeHandler <>4__this;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x96B550", Offset = "0x96B550", VA = "0x96B550", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x96B5B8", Offset = "0x96B5B8", VA = "0x96B5B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x96B0E0", Offset = "0x96B0E0", VA = "0x96B0E0")]
		[DebuggerHidden]
		public <TurnUpSlowly>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x96B420", Offset = "0x96B420", VA = "0x96B420", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x96B424", Offset = "0x96B424", VA = "0x96B424", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x96B558", Offset = "0x96B558", VA = "0x96B558", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7257B4", Offset = "0x7257B4")]
	private sealed class <TurnDownSlowlyPrivate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x96B3B0", Offset = "0x96B3B0", VA = "0x96B3B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x96B418", Offset = "0x96B418", VA = "0x96B418", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x96B1A4", Offset = "0x96B1A4", VA = "0x96B1A4")]
		[DebuggerHidden]
		public <TurnDownSlowlyPrivate>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x96B33C", Offset = "0x96B33C", VA = "0x96B33C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x96B340", Offset = "0x96B340", VA = "0x96B340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x96B3B8", Offset = "0x96B3B8", VA = "0x96B3B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_waitForStart;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float m_maxMaterVolume;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine m_startVolumeSetter;

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x96AF1C", Offset = "0x96AF1C", VA = "0x96AF1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x96B070", Offset = "0x96B070", VA = "0x96B070")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7319E8", Offset = "0x7319E8")]
	private IEnumerator TurnUpSlowly()
	{
		return null;
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x96B10C", Offset = "0x96B10C", VA = "0x96B10C")]
	public void TurnDownSlowly()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x96B144", Offset = "0x96B144", VA = "0x96B144")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731A4C", Offset = "0x731A4C")]
	private IEnumerator TurnDownSlowlyPrivate()
	{
		return null;
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x96B1D0", Offset = "0x96B1D0", VA = "0x96B1D0")]
	public void TurnDownToHalfImmediatly()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x96B258", Offset = "0x96B258", VA = "0x96B258")]
	public void TurnUpImmediately()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x96B2D8", Offset = "0x96B2D8", VA = "0x96B2D8")]
	public AudioVolumeHandler()
	{
	}
}
[Token(Token = "0x2000235")]
public class ChangePitchOfAudio : MonoBehaviour
{
	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_changeOnEnable;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource m_audioSource;

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x96F8AC", Offset = "0x96F8AC", VA = "0x96F8AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x96F904", Offset = "0x96F904", VA = "0x96F904")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x96F948", Offset = "0x96F948", VA = "0x96F948")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x96F9A0", Offset = "0x96F9A0", VA = "0x96F9A0")]
	public ChangePitchOfAudio()
	{
	}
}
[Token(Token = "0x2000236")]
public class InitAudioListener : MonoBehaviour
{
	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x93D1EC", Offset = "0x93D1EC", VA = "0x93D1EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x93D300", Offset = "0x93D300", VA = "0x93D300")]
	public InitAudioListener()
	{
	}
}
[Token(Token = "0x2000237")]
public class MusicManager : MonoBehaviour
{
	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] m_musics;

	[Token(Token = "0x17000116")]
	public bool IsOn
	{
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x98E6AC", Offset = "0x98E6AC", VA = "0x98E6AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x98E710", Offset = "0x98E710", VA = "0x98E710")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x98E800", Offset = "0x98E800", VA = "0x98E800")]
	public void ToggleMusic()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x98E76C", Offset = "0x98E76C", VA = "0x98E76C")]
	private void SetMusic()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x98E874", Offset = "0x98E874", VA = "0x98E874")]
	public MusicManager()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x98E87C", Offset = "0x98E87C", VA = "0x98E87C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x731B50", Offset = "0x731B50")]
	private void <SetMusic>b__5_0(GameObject musicGameObject)
	{
	}
}
[Token(Token = "0x2000238")]
public class PlaySound : MonoBehaviour
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_soundObject;

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xA23018", Offset = "0xA23018", VA = "0xA23018")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xA230AC", Offset = "0xA230AC", VA = "0xA230AC")]
	public PlaySound()
	{
	}
}
[Token(Token = "0x2000239")]
public class SoundManager : MonoBehaviour
{
	[Token(Token = "0x200023A")]
	public enum SoundObjectType
	{
		[Token(Token = "0x4000999")]
		NONE,
		[Token(Token = "0x400099A")]
		PILLAR,
		[Token(Token = "0x400099B")]
		DWARF
	}

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_pillarSFXObject;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_dwarfSFXObject;

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xA36D98", Offset = "0xA36D98", VA = "0xA36D98")]
	public void PlaySound(int soundRoot, int soundId)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xA31BEC", Offset = "0xA31BEC", VA = "0xA31BEC")]
	public void PlaySoundObject(SoundObjectType soundObjectType, Transform spawnTransform)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xA36E48", Offset = "0xA36E48", VA = "0xA36E48")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x200023B")]
public class CameraController : MonoBehaviour
{
	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera[] m_cameras;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_currentCameraIndex;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool m_enableChange;

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x96F584", Offset = "0x96F584", VA = "0x96F584")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x96F6F4", Offset = "0x96F6F4", VA = "0x96F6F4")]
	public void SetEnableChange(bool enableChange)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x96F700", Offset = "0x96F700", VA = "0x96F700")]
	public void ChangeCamera()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x96F890", Offset = "0x96F890", VA = "0x96F890")]
	public CameraController()
	{
	}
}
[Token(Token = "0x200023C")]
public class BattleSpellActivator : MonoBehaviour
{
	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_level1ActiveBattleSpell;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_level2ActiveBattleSpell;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_level3ActiveBattleSpell;

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x96B724", Offset = "0x96B724", VA = "0x96B724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x96B900", Offset = "0x96B900", VA = "0x96B900")]
	public BattleSpellActivator()
	{
	}
}
[Token(Token = "0x200023D")]
public class BattleSpellHandler : MonoBehaviour
{
	[Token(Token = "0x200023E")]
	public enum BattleSpellType
	{
		[Token(Token = "0x40009AD")]
		FireBall,
		[Token(Token = "0x40009AE")]
		IceBall
	}

	[Token(Token = "0x200023F")]
	private class InnerState
	{
		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BattleSpellHandler m_owner;

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x96D4E8", Offset = "0x96D4E8", VA = "0x96D4E8", Slot = "4")]
		public virtual void Impact(GameObject other)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x96D4EC", Offset = "0x96D4EC", VA = "0x96D4EC", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x96D4F0", Offset = "0x96D4F0", VA = "0x96D4F0", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x96D4F4", Offset = "0x96D4F4", VA = "0x96D4F4", Slot = "7")]
		public virtual void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x96D4F8", Offset = "0x96D4F8", VA = "0x96D4F8", Slot = "8")]
		public virtual void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x96CACC", Offset = "0x96CACC", VA = "0x96CACC")]
		protected void StopStateCoroutine()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x96CAC4", Offset = "0x96CAC4", VA = "0x96CAC4")]
		public InnerState()
		{
		}
	}

	[Token(Token = "0x2000240")]
	private class InactiveInnerState : InnerState
	{
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x96BA78", Offset = "0x96BA78", VA = "0x96BA78")]
		public InactiveInnerState(BattleSpellHandler owner, bool needWait = false)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x96D3F4", Offset = "0x96D3F4", VA = "0x96D3F4", Slot = "5")]
		public override void Update()
		{
		}
	}

	[Token(Token = "0x2000241")]
	private class IdleInnerState : InnerState
	{
		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject m_focusPoint;

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x96CD48", Offset = "0x96CD48", VA = "0x96CD48")]
		private void ChangeStateToInactive()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x96CE28", Offset = "0x96CE28", VA = "0x96CE28")]
		private void ChangeStateToImpacting()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x96CE9C", Offset = "0x96CE9C", VA = "0x96CE9C")]
		private void ChangeStateToMoving()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x96CDC0", Offset = "0x96CDC0", VA = "0x96CDC0")]
		private void DoBeforeStateChange()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x96CFE0", Offset = "0x96CFE0", VA = "0x96CFE0")]
		public IdleInnerState(BattleSpellHandler owner)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x96D180", Offset = "0x96D180", VA = "0x96D180", Slot = "6")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x96D198", Offset = "0x96D198", VA = "0x96D198", Slot = "7")]
		public override void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x96D2D4", Offset = "0x96D2D4", VA = "0x96D2D4", Slot = "5")]
		public override void Update()
		{
		}
	}

	[Token(Token = "0x2000242")]
	private class MovingInnerState : InnerState
	{
		[Token(Token = "0x2000243")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7257C4", Offset = "0x7257C4")]
		private sealed class <AbsorbeLater>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MovingInnerState <>4__this;

			[Token(Token = "0x17000117")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BB9")]
				[Address(RVA = "0x96DF0C", Offset = "0x96DF0C", VA = "0x96DF0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000118")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BBB")]
				[Address(RVA = "0x96DF74", Offset = "0x96DF74", VA = "0x96DF74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x96D70C", Offset = "0x96D70C", VA = "0x96D70C")]
			[DebuggerHidden]
			public <AbsorbeLater>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x96DE38", Offset = "0x96DE38", VA = "0x96DE38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x96DE3C", Offset = "0x96DE3C", VA = "0x96DE3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x96DF14", Offset = "0x96DF14", VA = "0x96DF14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x96CF10", Offset = "0x96CF10", VA = "0x96CF10")]
		public MovingInnerState(BattleSpellHandler owner)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x96D56C", Offset = "0x96D56C", VA = "0x96D56C", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x96D4FC", Offset = "0x96D4FC", VA = "0x96D4FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731BC4", Offset = "0x731BC4")]
		private IEnumerator AbsorbeLater()
		{
			return null;
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x96D738", Offset = "0x96D738", VA = "0x96D738", Slot = "7")]
		public override void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x96DC50", Offset = "0x96DC50", VA = "0x96DC50", Slot = "8")]
		public override void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x96D6A0", Offset = "0x96D6A0", VA = "0x96D6A0")]
		private void ImpactWall()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x96DAE0", Offset = "0x96DAE0", VA = "0x96DAE0")]
		private void ImpactFireElemental(GameObject fireElemental)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x96DB94", Offset = "0x96DB94", VA = "0x96DB94")]
		private void ImpactTutorialTorch(GameObject torch)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x96DA68", Offset = "0x96DA68", VA = "0x96DA68")]
		private void Dissolve()
		{
		}
	}

	[Token(Token = "0x2000244")]
	private class AbsorbingInnerState : InnerState
	{
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x96C9EC", Offset = "0x96C9EC", VA = "0x96C9EC")]
		public AbsorbingInnerState(BattleSpellHandler owner)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x96CAF4", Offset = "0x96CAF4", VA = "0x96CAF4", Slot = "7")]
		public override void OnTriggerEnter(Collider other)
		{
		}
	}

	[Token(Token = "0x2000245")]
	private class ImpactingInnerState : InnerState
	{
		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x96C228", Offset = "0x96C228", VA = "0x96C228")]
		public ImpactingInnerState(BattleSpellHandler owner)
		{
		}
	}

	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7257D4", Offset = "0x7257D4")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BattleSpellHandler <>4__this;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string currentState;

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x96BD60", Offset = "0x96BD60", VA = "0x96BD60")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x96C778", Offset = "0x96C778", VA = "0x96C778")]
		internal void <DisplayState>b__0(NetBattleSpellHandler.NetState state)
		{
		}
	}

	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7257E4", Offset = "0x7257E4")]
	private sealed class <RespawnLater>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BattleSpellHandler <>4__this;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x96C97C", Offset = "0x96C97C", VA = "0x96C97C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x96C9E4", Offset = "0x96C9E4", VA = "0x96C9E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x96C6A4", Offset = "0x96C6A4", VA = "0x96C6A4")]
		[DebuggerHidden]
		public <RespawnLater>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x96C898", Offset = "0x96C898", VA = "0x96C898", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x96C89C", Offset = "0x96C89C", VA = "0x96C89C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x96C984", Offset = "0x96C984", VA = "0x96C984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BattleSpellType m_type;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 m_offsetFromRightHand;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool m_debug;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_originalPos;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_rightHand;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine m_stateCoroutine;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NetBattleSpellHandler m_netSyncher;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ControllerInputHandler m_controllerInputHandler;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SphereCollider m_sphereCollider;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InnerState m_innerState;

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x96B908", Offset = "0x96B908", VA = "0x96B908")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x96B9F0", Offset = "0x96B9F0", VA = "0x96B9F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x96BA10", Offset = "0x96BA10", VA = "0x96BA10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x96BC8C", Offset = "0x96BC8C", VA = "0x96BC8C")]
	private void DisplayState(string currentState)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x96BD68", Offset = "0x96BD68", VA = "0x96BD68")]
	private void VibrateController()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x96BE00", Offset = "0x96BE00", VA = "0x96BE00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x96BE20", Offset = "0x96BE20", VA = "0x96BE20")]
	private void FollowHand()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x96BFD4", Offset = "0x96BFD4", VA = "0x96BFD4")]
	private void Fire()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x96C184", Offset = "0x96C184", VA = "0x96C184")]
	private void ImpactKeeper(GameObject keeperCollider)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x96C2FC", Offset = "0x96C2FC", VA = "0x96C2FC")]
	private void ImpactElemental(GameObject elementalCollider)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x96C38C", Offset = "0x96C38C", VA = "0x96C38C")]
	private void ImpactBlackish(GameObject blackish)
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x96C430", Offset = "0x96C430", VA = "0x96C430")]
	private void ImpactMagicCandle(GameObject candle)
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x96C4D4", Offset = "0x96C4D4", VA = "0x96C4D4")]
	private void ImpactTorchByFireBall(GameObject torch)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x96C57C", Offset = "0x96C57C", VA = "0x96C57C")]
	private void ImpactTorchByIceBall(GameObject torch)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x96BBB4", Offset = "0x96BBB4", VA = "0x96BBB4")]
	private void StopBullet()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x96C624", Offset = "0x96C624", VA = "0x96C624")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731B60", Offset = "0x731B60")]
	private IEnumerator RespawnLater(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x96C6D0", Offset = "0x96C6D0", VA = "0x96C6D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x96C720", Offset = "0x96C720", VA = "0x96C720")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x96C770", Offset = "0x96C770", VA = "0x96C770")]
	public BattleSpellHandler()
	{
	}
}
[Token(Token = "0x2000248")]
public class NetBattleSpellHandler : NetworkBehaviour
{
	[Token(Token = "0x2000249")]
	public enum NetState
	{
		[Token(Token = "0x40009BF")]
		Inactive,
		[Token(Token = "0x40009C0")]
		Idle,
		[Token(Token = "0x40009C1")]
		Moving,
		[Token(Token = "0x40009C2")]
		Impacting,
		[Token(Token = "0x40009C3")]
		Absorbing
	}

	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7257F4", Offset = "0x7257F4")]
	private sealed class <SyncStateLater>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetBattleSpellHandler <>4__this;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NetState state;

		[Token(Token = "0x1700011C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x991D38", Offset = "0x991D38", VA = "0x991D38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x991DA0", Offset = "0x991DA0", VA = "0x991DA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x98F628", Offset = "0x98F628", VA = "0x98F628")]
		[DebuggerHidden]
		public <SyncStateLater>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x991C8C", Offset = "0x991C8C", VA = "0x991C8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x991C90", Offset = "0x991C90", VA = "0x991C90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x991D40", Offset = "0x991D40", VA = "0x991D40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_relatedObject;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine m_moving;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SyncVar]
	private NetState m_state;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine m_stateSync;

	[Token(Token = "0x1700011B")]
	public NetState Networkm_state
	{
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x990100", Offset = "0x990100", VA = "0x990100")]
		get
		{
			return default(NetState);
		}
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x990108", Offset = "0x990108", VA = "0x990108")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x98F440", Offset = "0x98F440", VA = "0x98F440")]
	public void SyncState(NetState state, bool syncLater = false)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x98F4C0", Offset = "0x98F4C0", VA = "0x98F4C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731CC8", Offset = "0x731CC8")]
	private IEnumerator SyncStateLater(NetState state)
	{
		return null;
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x98F540", Offset = "0x98F540", VA = "0x98F540")]
	[Command]
	private void CmdSetState(NetState state)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x98F654", Offset = "0x98F654", VA = "0x98F654")]
	[Command]
	public void CmdImpactKeeper(uint keeperNetId)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x98F768", Offset = "0x98F768", VA = "0x98F768")]
	[Command]
	public void CmdImpactElemental(uint elementalId)
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x98F87C", Offset = "0x98F87C", VA = "0x98F87C")]
	[Command]
	public void CmdImpactFireElemental(uint elementalId)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x98F990", Offset = "0x98F990", VA = "0x98F990")]
	[Command]
	public void CmdImpactBlackish(uint blackishNetId)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x98FAA4", Offset = "0x98FAA4", VA = "0x98FAA4")]
	[Command]
	public void CmdImpactTorch(uint torchNetId, BattleSpellHandler.BattleSpellType spellType)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x98FBC8", Offset = "0x98FBC8", VA = "0x98FBC8")]
	[Command]
	public void CmdImpactMagicCandle(uint candleNetId)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x98FCDC", Offset = "0x98FCDC", VA = "0x98FCDC", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x98FDC8", Offset = "0x98FDC8", VA = "0x98FDC8")]
	private void OnChangeState(NetState oldValue, NetState newValue)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x98FF7C", Offset = "0x98FF7C", VA = "0x98FF7C", Slot = "12")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x990034", Offset = "0x990034", VA = "0x990034")]
	public NetBattleSpellHandler()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x99003C", Offset = "0x99003C", VA = "0x99003C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x731D9C", Offset = "0x731D9C")]
	private void <OnStartClient>b__14_0(NetState state)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x9900FC", Offset = "0x9900FC", VA = "0x9900FC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x990220", Offset = "0x990220", VA = "0x990220")]
	private void UserCode_CmdSetState(NetState state)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x990224", Offset = "0x990224", VA = "0x990224")]
	protected static void InvokeUserCode_CmdSetState(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x990374", Offset = "0x990374", VA = "0x990374")]
	public void UserCode_CmdImpactKeeper(uint keeperNetId)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x9904FC", Offset = "0x9904FC", VA = "0x9904FC")]
	protected static void InvokeUserCode_CmdImpactKeeper(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x990670", Offset = "0x990670", VA = "0x990670")]
	public void UserCode_CmdImpactElemental(uint elementalId)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x990800", Offset = "0x990800", VA = "0x990800")]
	protected static void InvokeUserCode_CmdImpactElemental(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x990974", Offset = "0x990974", VA = "0x990974")]
	public void UserCode_CmdImpactFireElemental(uint elementalId)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x990B04", Offset = "0x990B04", VA = "0x990B04")]
	protected static void InvokeUserCode_CmdImpactFireElemental(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x990C78", Offset = "0x990C78", VA = "0x990C78")]
	public void UserCode_CmdImpactBlackish(uint blackishNetId)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x990EDC", Offset = "0x990EDC", VA = "0x990EDC")]
	protected static void InvokeUserCode_CmdImpactBlackish(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x991050", Offset = "0x991050", VA = "0x991050")]
	public void UserCode_CmdImpactTorch(uint torchNetId, BattleSpellHandler.BattleSpellType spellType)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x9911E4", Offset = "0x9911E4", VA = "0x9911E4")]
	protected static void InvokeUserCode_CmdImpactTorch(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x991364", Offset = "0x991364", VA = "0x991364")]
	public void UserCode_CmdImpactMagicCandle(uint candleNetId)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x991670", Offset = "0x991670", VA = "0x991670")]
	protected static void InvokeUserCode_CmdImpactMagicCandle(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x9917E4", Offset = "0x9917E4", VA = "0x9917E4")]
	static NetBattleSpellHandler()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x991AE0", Offset = "0x991AE0", VA = "0x991AE0", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x991B9C", Offset = "0x991B9C", VA = "0x991B9C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200024B")]
public class TutorialHandler : MonoBehaviour
{
	[Token(Token = "0x200024C")]
	public enum TutorialState
	{
		[Token(Token = "0x40009D6")]
		NONE = -1,
		[Token(Token = "0x40009D7")]
		START,
		[Token(Token = "0x40009D8")]
		TELEPORT_CUBE,
		[Token(Token = "0x40009D9")]
		CONTROL,
		[Token(Token = "0x40009DA")]
		MOVE,
		[Token(Token = "0x40009DB")]
		ENEMY,
		[Token(Token = "0x40009DC")]
		MANA,
		[Token(Token = "0x40009DD")]
		PIECE_SELECT,
		[Token(Token = "0x40009DE")]
		PIECE_MOVE,
		[Token(Token = "0x40009DF")]
		SPELL,
		[Token(Token = "0x40009E0")]
		BATTLESPELL,
		[Token(Token = "0x40009E1")]
		END
	}

	[Token(Token = "0x200024D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725804", Offset = "0x725804")]
	private sealed class <WaitForTurotial>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialHandler <>4__this;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0xA518E4", Offset = "0xA518E4", VA = "0xA518E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0xA5194C", Offset = "0xA5194C", VA = "0xA5194C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xA50490", Offset = "0xA50490", VA = "0xA50490")]
		[DebuggerHidden]
		public <WaitForTurotial>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xA517A8", Offset = "0xA517A8", VA = "0xA517A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xA517AC", Offset = "0xA517AC", VA = "0xA517AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xA518EC", Offset = "0xA518EC", VA = "0xA518EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725814", Offset = "0x725814")]
	private sealed class <DisableCanvasPair>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float disableAtSec;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialHandler <>4__this;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0xA514D8", Offset = "0xA514D8", VA = "0xA514D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0xA51540", Offset = "0xA51540", VA = "0xA51540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xA50C28", Offset = "0xA50C28", VA = "0xA50C28")]
		[DebuggerHidden]
		public <DisableCanvasPair>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xA51348", Offset = "0xA51348", VA = "0xA51348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xA5134C", Offset = "0xA5134C", VA = "0xA5134C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xA514E0", Offset = "0xA514E0", VA = "0xA514E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725824", Offset = "0x725824")]
	private sealed class <WaitForSec>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitSec;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialHandler <>4__this;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0xA51738", Offset = "0xA51738", VA = "0xA51738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0xA517A0", Offset = "0xA517A0", VA = "0xA517A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xA50CD4", Offset = "0xA50CD4", VA = "0xA50CD4")]
		[DebuggerHidden]
		public <WaitForSec>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xA51684", Offset = "0xA51684", VA = "0xA51684", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xA51688", Offset = "0xA51688", VA = "0xA51688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xA51740", Offset = "0xA51740", VA = "0xA51740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725834", Offset = "0x725834")]
	private sealed class <WaitForMove>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitSec;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialHandler <>4__this;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0xA51614", Offset = "0xA51614", VA = "0xA51614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0xA5167C", Offset = "0xA5167C", VA = "0xA5167C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xA50D80", Offset = "0xA50D80", VA = "0xA50D80")]
		[DebuggerHidden]
		public <WaitForMove>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xA51548", Offset = "0xA51548", VA = "0xA51548", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xA5154C", Offset = "0xA5154C", VA = "0xA5154C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xA5161C", Offset = "0xA5161C", VA = "0xA5161C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_waitForTutorialSec;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_controllerRootLeft;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_controllerRootRight;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_focus;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_pointerLine;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TutorialState m_state;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_startTutorial;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject m_TargetSelector;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_isMoving;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject m_selectedObject;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int m_moveTimes;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject m_abilityRoot;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ResourceText m_resourceText;

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xA50104", Offset = "0xA50104", VA = "0xA50104")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xA501C0", Offset = "0xA501C0", VA = "0xA501C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xA50420", Offset = "0xA50420", VA = "0xA50420")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731DFC", Offset = "0x731DFC")]
	private IEnumerator WaitForTurotial()
	{
		return null;
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xA504BC", Offset = "0xA504BC", VA = "0xA504BC")]
	public void SetStart()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xA504C8", Offset = "0xA504C8", VA = "0xA504C8")]
	public void ChangeState()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xA50B1C", Offset = "0xA50B1C", VA = "0xA50B1C")]
	private void InitializeState()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xA50BA8", Offset = "0xA50BA8", VA = "0xA50BA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731E60", Offset = "0x731E60")]
	private IEnumerator DisableCanvasPair(float disableAtSec)
	{
		return null;
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xA50C54", Offset = "0xA50C54", VA = "0xA50C54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731EC4", Offset = "0x731EC4")]
	private IEnumerator WaitForSec(float waitSec)
	{
		return null;
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xA50D00", Offset = "0xA50D00", VA = "0xA50D00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x731F28", Offset = "0x731F28")]
	private IEnumerator WaitForMove(float waitSec)
	{
		return null;
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xA50DAC", Offset = "0xA50DAC", VA = "0xA50DAC")]
	public void SetInsidePiece(GameObject TargetSelector)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xA50E98", Offset = "0xA50E98", VA = "0xA50E98")]
	public bool IsInsidePiece()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xA50F08", Offset = "0xA50F08", VA = "0xA50F08")]
	public void SetSelectPiece()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xA51014", Offset = "0xA51014", VA = "0xA51014")]
	public void FinishLookDownTutorialStep()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xA51024", Offset = "0xA51024", VA = "0xA51024")]
	public void FinishTeleportCubeTutorialStep()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xA51038", Offset = "0xA51038", VA = "0xA51038")]
	public void FakeSpellTutorial()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xA5104C", Offset = "0xA5104C", VA = "0xA5104C")]
	public void FakeBattleSpellTutorial()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xA51060", Offset = "0xA51060", VA = "0xA51060")]
	public void FakeMoveTutorial(Vector3 moveDirection)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xA51330", Offset = "0xA51330", VA = "0xA51330")]
	public TutorialHandler()
	{
	}
}
[Token(Token = "0x2000251")]
public class TutorialHeroCircle : MonoBehaviour
{
	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent m_onPlayerLookDetected;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera m_camera;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider m_collider;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_heroCircle;

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xA51954", Offset = "0xA51954", VA = "0xA51954")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xA51A04", Offset = "0xA51A04", VA = "0xA51A04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xA51B40", Offset = "0xA51B40", VA = "0xA51B40")]
	public TutorialHeroCircle()
	{
	}
}
[Token(Token = "0x2000252")]
public class TutorialPosCheck : MonoBehaviour
{
	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_TargetSelector;

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xA51B48", Offset = "0xA51B48", VA = "0xA51B48")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xA51D04", Offset = "0xA51D04", VA = "0xA51D04")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xA51DF8", Offset = "0xA51DF8", VA = "0xA51DF8")]
	public TutorialPosCheck()
	{
	}
}
[Token(Token = "0x2000253")]
public class AnimationHelper : MonoBehaviour
{
	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animation m_anim;

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x96941C", Offset = "0x96941C", VA = "0x96941C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x969474", Offset = "0x969474", VA = "0x969474")]
	public void Play()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x969490", Offset = "0x969490", VA = "0x969490")]
	public AnimationHelper()
	{
	}
}
[Token(Token = "0x2000254")]
public class AnimationStartTimer : MonoBehaviour
{
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725844", Offset = "0x725844")]
	private sealed class <StartAnimationTimer>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationStartTimer <>4__this;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x969868", Offset = "0x969868", VA = "0x969868", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x9698D0", Offset = "0x9698D0", VA = "0x9698D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x969534", Offset = "0x969534", VA = "0x969534")]
		[DebuggerHidden]
		public <StartAnimationTimer>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x969568", Offset = "0x969568", VA = "0x969568", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x96956C", Offset = "0x96956C", VA = "0x96956C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x969870", Offset = "0x969870", VA = "0x969870", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72A5CC", Offset = "0x72A5CC")]
	public int m_timeout;

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x969498", Offset = "0x969498", VA = "0x969498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x9694C4", Offset = "0x9694C4", VA = "0x9694C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7320CC", Offset = "0x7320CC")]
	private IEnumerator StartAnimationTimer()
	{
		return null;
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x969560", Offset = "0x969560", VA = "0x969560")]
	public AnimationStartTimer()
	{
	}
}
[Token(Token = "0x2000256")]
public class ApplicationVersion : MonoBehaviour
{
	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x969E28", Offset = "0x969E28", VA = "0x969E28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x96A00C", Offset = "0x96A00C", VA = "0x96A00C")]
	public ApplicationVersion()
	{
	}
}
[Token(Token = "0x2000257")]
public class AreaSwitcher : MonoBehaviour
{
	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_disableAtStart;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Bounds m_bounds;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> m_rootObjects;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> m_areaParts;

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x96A014", Offset = "0x96A014", VA = "0x96A014")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x96A050", Offset = "0x96A050", VA = "0x96A050")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x96A218", Offset = "0x96A218", VA = "0x96A218")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x96A058", Offset = "0x96A058", VA = "0x96A058")]
	private void ToggleAreas(bool enable)
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x96A220", Offset = "0x96A220", VA = "0x96A220")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x96A3A0", Offset = "0x96A3A0", VA = "0x96A3A0")]
	public AreaSwitcher()
	{
	}
}
[Token(Token = "0x2000258")]
public class AutoRotation : MonoBehaviour
{
	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A5E8", Offset = "0x72A5E8")]
	[SerializeField]
	private Vector3 m_speedByDirections;

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x96B5C0", Offset = "0x96B5C0", VA = "0x96B5C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x96B64C", Offset = "0x96B64C", VA = "0x96B64C")]
	public AutoRotation()
	{
	}
}
[Token(Token = "0x2000259")]
public class BaseTrigger : MonoBehaviour
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_callOnObject;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DebugLogFilter m_debugLogFilter;

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x96B6B4", Offset = "0x96B6B4", VA = "0x96B6B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x96B71C", Offset = "0x96B71C", VA = "0x96B71C")]
	public BaseTrigger()
	{
	}
}
[Token(Token = "0x200025A")]
[DisallowMultipleComponent]
public class BehaviourAction : MonoBehaviour
{
	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725864", Offset = "0x725864")]
	private sealed class <ExpireAction>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitSec;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BehaviourAction <>4__this;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x96E210", Offset = "0x96E210", VA = "0x96E210", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x96E278", Offset = "0x96E278", VA = "0x96E278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x96E084", Offset = "0x96E084", VA = "0x96E084")]
		[DebuggerHidden]
		public <ExpireAction>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x96E150", Offset = "0x96E150", VA = "0x96E150", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x96E154", Offset = "0x96E154", VA = "0x96E154", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x96E218", Offset = "0x96E218", VA = "0x96E218", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A634", Offset = "0x72A634")]
	[SerializeField]
	private UnityEvent m_enableAction;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A680", Offset = "0x72A680")]
	[SerializeField]
	private UnityEvent m_expireAction;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A6CC", Offset = "0x72A6CC")]
	[SerializeField]
	private UnityEvent m_disableAction;

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x96DF7C", Offset = "0x96DF7C", VA = "0x96DF7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x96DF98", Offset = "0x96DF98", VA = "0x96DF98")]
	public void YieldWait(float waitSec)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x96E004", Offset = "0x96E004", VA = "0x96E004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732180", Offset = "0x732180")]
	private IEnumerator ExpireAction(float waitSec)
	{
		return null;
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x96E0B0", Offset = "0x96E0B0", VA = "0x96E0B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x96E0CC", Offset = "0x96E0CC", VA = "0x96E0CC")]
	public void DoDestory()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x96E148", Offset = "0x96E148", VA = "0x96E148")]
	public BehaviourAction()
	{
	}
}
[Serializable]
[Token(Token = "0x200025C")]
public class BezierPathData : ScriptableObject
{
	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] m_positions;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Quaternion[] m_rotations;

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x96E280", Offset = "0x96E280", VA = "0x96E280")]
	public BezierPathData()
	{
	}
}
[Token(Token = "0x200025D")]
public class Blink : MonoBehaviour
{
	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_topLid;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_bottomLid;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_blink;

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x96E99C", Offset = "0x96E99C", VA = "0x96E99C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x96EA0C", Offset = "0x96EA0C", VA = "0x96EA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x96EA44", Offset = "0x96EA44", VA = "0x96EA44")]
	public void DoBlink()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x96EAD4", Offset = "0x96EAD4", VA = "0x96EAD4")]
	public Blink()
	{
	}
}
[Token(Token = "0x200025E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x725874", Offset = "0x725874")]
[ExecuteInEditMode]
public class CachedPath : MonoBehaviour
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PathCreator m_localPathCreator;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_step;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BezierPathData m_cachedData;

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x96F1DC", Offset = "0x96F1DC", VA = "0x96F1DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x96F234", Offset = "0x96F234", VA = "0x96F234")]
	private float GetDistanceOnPath(float distanceTravelled, EndOfPathInstruction endOfPathInstruction)
	{
		return default(float);
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x96F398", Offset = "0x96F398", VA = "0x96F398")]
	public Vector3 GetPointAtDistance(float distanceTravelled, EndOfPathInstruction endOfPathInstruction = EndOfPathInstruction.Loop)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x96F48C", Offset = "0x96F48C", VA = "0x96F48C")]
	public Quaternion GetRotationAtDistance(float distanceTravelled, EndOfPathInstruction endOfPathInstruction = EndOfPathInstruction.Loop)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x96F57C", Offset = "0x96F57C", VA = "0x96F57C")]
	public CachedPath()
	{
	}
}
[Token(Token = "0x200025F")]
public class ChildEnabler : MonoBehaviour
{
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7258E8", Offset = "0x7258E8")]
	private sealed class <EnableChildTimer>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChildEnabler <>4__this;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x972498", Offset = "0x972498", VA = "0x972498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x972500", Offset = "0x972500", VA = "0x972500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x972144", Offset = "0x972144", VA = "0x972144")]
		[DebuggerHidden]
		public <EnableChildTimer>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x972178", Offset = "0x972178", VA = "0x972178", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x97217C", Offset = "0x97217C", VA = "0x97217C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x9724A0", Offset = "0x9724A0", VA = "0x9724A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72A728", Offset = "0x72A728")]
	public int m_timeout;

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x9720A8", Offset = "0x9720A8", VA = "0x9720A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x9720D4", Offset = "0x9720D4", VA = "0x9720D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732234", Offset = "0x732234")]
	private IEnumerator EnableChildTimer()
	{
		return null;
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x972170", Offset = "0x972170", VA = "0x972170")]
	public ChildEnabler()
	{
	}
}
[Serializable]
[Token(Token = "0x2000261")]
public class InteractionEvent : UnityEvent<GameObject>
{
	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x93DFC0", Offset = "0x93DFC0", VA = "0x93DFC0")]
	public InteractionEvent()
	{
	}
}
[Token(Token = "0x2000262")]
public class Cooldown : MonoBehaviour
{
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7258F8", Offset = "0x7258F8")]
	private sealed class <StartCooldown>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cooldown <>4__this;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0x9737B0", Offset = "0x9737B0", VA = "0x9737B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0x973818", Offset = "0x973818", VA = "0x973818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x9735B4", Offset = "0x9735B4", VA = "0x9735B4")]
		[DebuggerHidden]
		public <StartCooldown>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x9735F0", Offset = "0x9735F0", VA = "0x9735F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x9735F4", Offset = "0x9735F4", VA = "0x9735F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x9737B8", Offset = "0x9737B8", VA = "0x9737B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_applyOnStart;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_secCooldown;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_onCooldown;

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x97339C", Offset = "0x97339C", VA = "0x97339C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x973444", Offset = "0x973444", VA = "0x973444")]
	public bool ApplyCooldown(bool reapplyCooldown = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x9733D4", Offset = "0x9733D4", VA = "0x9733D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7322E8", Offset = "0x7322E8")]
	private IEnumerator StartCooldown()
	{
		return null;
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x9735E0", Offset = "0x9735E0", VA = "0x9735E0")]
	public bool IsOnCooldown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x9735E8", Offset = "0x9735E8", VA = "0x9735E8")]
	public Cooldown()
	{
	}
}
[Token(Token = "0x2000264")]
[ExecuteInEditMode]
public class DebugRay : MonoBehaviour
{
	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 m_dir;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Color m_color;

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x9777E0", Offset = "0x9777E0", VA = "0x9777E0")]
	public DebugRay()
	{
	}
}
[Token(Token = "0x2000265")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x725918", Offset = "0x725918")]
public class DepthTextureEnabler : MonoBehaviour
{
	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_activationDistance;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer m_localMeshRenderer;

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x97A8BC", Offset = "0x97A8BC", VA = "0x97A8BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x97A914", Offset = "0x97A914", VA = "0x97A914")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x97A93C", Offset = "0x97A93C", VA = "0x97A93C")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x97AAD4", Offset = "0x97AAD4", VA = "0x97AAD4")]
	public DepthTextureEnabler()
	{
	}
}
[Token(Token = "0x2000266")]
public class DisableObjectAtEndOfAudioClip : MonoBehaviour
{
	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72598C", Offset = "0x72598C")]
	private sealed class <DisableObject>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisableObjectAtEndOfAudioClip <>4__this;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x97B0AC", Offset = "0x97B0AC", VA = "0x97B0AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x97B114", Offset = "0x97B114", VA = "0x97B114", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x97AF40", Offset = "0x97AF40", VA = "0x97AF40")]
		[DebuggerHidden]
		public <DisableObject>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x97AF74", Offset = "0x97AF74", VA = "0x97AF74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x97AF78", Offset = "0x97AF78", VA = "0x97AF78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x97B0B4", Offset = "0x97B0B4", VA = "0x97B0B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A784", Offset = "0x72A784")]
	public GameObject m_object;

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x97AEA4", Offset = "0x97AEA4", VA = "0x97AEA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x97AED0", Offset = "0x97AED0", VA = "0x97AED0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x73239C", Offset = "0x73239C")]
	private IEnumerator DisableObject()
	{
		return null;
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x97AF6C", Offset = "0x97AF6C", VA = "0x97AF6C")]
	public DisableObjectAtEndOfAudioClip()
	{
	}
}
[Token(Token = "0x2000268")]
public class EmailSender : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72599C", Offset = "0x72599C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static RemoteCertificateValidationCallback <>9__7_0;

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xAAADB8", Offset = "0xAAADB8", VA = "0xAAADB8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xAAADC0", Offset = "0xAAADC0", VA = "0xAAADC0")]
		internal bool <SendEmail>b__7_0(object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_fromEmail;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_toEmail;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_subject;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_body;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_password;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int strange;

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xAAA9A4", Offset = "0xAAA9A4", VA = "0xAAA9A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xAAA9A8", Offset = "0xAAA9A8", VA = "0xAAA9A8")]
	public void SendEmail()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xAAACB4", Offset = "0xAAACB4", VA = "0xAAACB4")]
	public EmailSender()
	{
	}
}
[Token(Token = "0x200026A")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7259AC", Offset = "0x7259AC")]
public class EnableActionOld : MonoBehaviour
{
	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7259E8", Offset = "0x7259E8")]
	private sealed class <ExpireAction>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitSec;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnableActionOld <>4__this;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0xAABE0C", Offset = "0xAABE0C", VA = "0xAABE0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0xAABE74", Offset = "0xAABE74", VA = "0xAABE74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xAABD18", Offset = "0xAABD18", VA = "0xAABD18")]
		[DebuggerHidden]
		public <ExpireAction>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xAABD4C", Offset = "0xAABD4C", VA = "0xAABD4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xAABD50", Offset = "0xAABD50", VA = "0xAABD50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xAABE14", Offset = "0xAABE14", VA = "0xAABE14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A7BC", Offset = "0x72A7BC")]
	[SerializeField]
	private UnityEvent m_enableAction;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A808", Offset = "0x72A808")]
	[SerializeField]
	private UnityEvent m_expireAction;

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xAABC10", Offset = "0xAABC10", VA = "0xAABC10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xAABC2C", Offset = "0xAABC2C", VA = "0xAABC2C")]
	public void YieldWait(float waitSec)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xAABC98", Offset = "0xAABC98", VA = "0xAABC98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732450", Offset = "0x732450")]
	private IEnumerator ExpireAction(float waitSec)
	{
		return null;
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xAABD44", Offset = "0xAABD44", VA = "0xAABD44")]
	public EnableActionOld()
	{
	}
}
[Token(Token = "0x200026C")]
public class EnableOnQualityLevel : MonoBehaviour
{
	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_onNormalQuality;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_onQuest2Quality;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_onQuest1Quality;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool m_onNoloQuality;

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xAABE7C", Offset = "0xAABE7C", VA = "0xAABE7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xAABFFC", Offset = "0xAABFFC", VA = "0xAABFFC")]
	public EnableOnQualityLevel()
	{
	}
}
[Token(Token = "0x200026D")]
public class EndEnabler : MonoBehaviour
{
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7259F8", Offset = "0x7259F8")]
	private sealed class <WaitForEnd>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndEnabler <>4__this;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0xAAC41C", Offset = "0xAAC41C", VA = "0xAAC41C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xAAC484", Offset = "0xAAC484", VA = "0xAAC484", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xAAC0B0", Offset = "0xAAC0B0", VA = "0xAAC0B0")]
		[DebuggerHidden]
		public <WaitForEnd>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xAAC364", Offset = "0xAAC364", VA = "0xAAC364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xAAC368", Offset = "0xAAC368", VA = "0xAAC368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xAAC424", Offset = "0xAAC424", VA = "0xAAC424", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725A08", Offset = "0x725A08")]
	private sealed class <WaitForEndAnim>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndEnabler <>4__this;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0xAAC5AC", Offset = "0xAAC5AC", VA = "0xAAC5AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0xAAC614", Offset = "0xAAC614", VA = "0xAAC614", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xAAC280", Offset = "0xAAC280", VA = "0xAAC280")]
		[DebuggerHidden]
		public <WaitForEndAnim>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xAAC48C", Offset = "0xAAC48C", VA = "0xAAC48C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xAAC490", Offset = "0xAAC490", VA = "0xAAC490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xAAC5B4", Offset = "0xAAC5B4", VA = "0xAAC5B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_endObjectLink;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_endSec;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_endAnimSec;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_endPosObject;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_destroyGameObject;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool m_disableGameObject;

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xAAC014", Offset = "0xAAC014", VA = "0xAAC014")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xAAC040", Offset = "0xAAC040", VA = "0xAAC040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732504", Offset = "0x732504")]
	private IEnumerator WaitForEnd()
	{
		return null;
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xAAC0DC", Offset = "0xAAC0DC", VA = "0xAAC0DC")]
	public void EnableEnd()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xAAC210", Offset = "0xAAC210", VA = "0xAAC210")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732568", Offset = "0x732568")]
	private IEnumerator WaitForEndAnim()
	{
		return null;
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xAAC2AC", Offset = "0xAAC2AC", VA = "0xAAC2AC")]
	public Vector3 GetEndObjectPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xAAC34C", Offset = "0xAAC34C", VA = "0xAAC34C")]
	public EndEnabler()
	{
	}
}
[Token(Token = "0x2000270")]
public class EndOfAnimAction : MonoBehaviour
{
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725A18", Offset = "0x725A18")]
	private sealed class <OnCompleteAttackAnimation>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndOfAnimAction <>4__this;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation <animation>5__2;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0xAAC8E0", Offset = "0xAAC8E0", VA = "0xAAC8E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0xAAC948", Offset = "0xAAC948", VA = "0xAAC948", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xAAC6CC", Offset = "0xAAC6CC", VA = "0xAAC6CC")]
		[DebuggerHidden]
		public <OnCompleteAttackAnimation>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xAAC700", Offset = "0xAAC700", VA = "0xAAC700", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xAAC704", Offset = "0xAAC704", VA = "0xAAC704", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xAAC8E8", Offset = "0xAAC8E8", VA = "0xAAC8E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A874", Offset = "0x72A874")]
	[SerializeField]
	private UnityEvent m_endOfAnimAction;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_destroyAtEndOfAnim;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_gameObjectOfAnimation;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine m_animationObserver;

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xAAC61C", Offset = "0xAAC61C", VA = "0xAAC61C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xAAC6C0", Offset = "0xAAC6C0", VA = "0xAAC6C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xAAC650", Offset = "0xAAC650", VA = "0xAAC650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x73266C", Offset = "0x73266C")]
	private IEnumerator OnCompleteAttackAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xAAC6F8", Offset = "0xAAC6F8", VA = "0xAAC6F8")]
	public EndOfAnimAction()
	{
	}
}
[Token(Token = "0x2000272")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x725A28", Offset = "0x725A28")]
public class EndOfAnimAction_old : MonoBehaviour
{
	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725A64", Offset = "0x725A64")]
	private sealed class <OnCompleteAttackAnimation>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndOfAnimAction_old <>4__this;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0xAACBF4", Offset = "0xAACBF4", VA = "0xAACBF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0xAACC5C", Offset = "0xAACC5C", VA = "0xAACC5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xAACA00", Offset = "0xAACA00", VA = "0xAACA00")]
		[DebuggerHidden]
		public <OnCompleteAttackAnimation>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xAACA34", Offset = "0xAACA34", VA = "0xAACA34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xAACA38", Offset = "0xAACA38", VA = "0xAACA38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xAACBFC", Offset = "0xAACBFC", VA = "0xAACBFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A8C0", Offset = "0x72A8C0")]
	[SerializeField]
	private UnityEvent m_endOfAnimAction;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_destroyAtEndOfAnim;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation m_animation;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine m_animationObserver;

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xAAC950", Offset = "0xAAC950", VA = "0xAAC950")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xAAC9F4", Offset = "0xAAC9F4", VA = "0xAAC9F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xAAC984", Offset = "0xAAC984", VA = "0xAAC984")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732720", Offset = "0x732720")]
	private IEnumerator OnCompleteAttackAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xAACA2C", Offset = "0xAACA2C", VA = "0xAACA2C")]
	public EndOfAnimAction_old()
	{
	}
}
[Token(Token = "0x2000274")]
public class ForceBoundingSphereOverride : MonoBehaviour
{
	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light m_light;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera m_mainCamera;

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xAB04B0", Offset = "0xAB04B0", VA = "0xAB04B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xAB0528", Offset = "0xAB0528", VA = "0xAB0528")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xAB0670", Offset = "0xAB0670", VA = "0xAB0670")]
	public ForceBoundingSphereOverride()
	{
	}
}
[Token(Token = "0x2000275")]
public class GameObjectToggler : MonoBehaviour
{
	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xAB0678", Offset = "0xAB0678", VA = "0xAB0678")]
	public void ToggleSelfEnableState()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xAB06D0", Offset = "0xAB06D0", VA = "0xAB06D0")]
	public GameObjectToggler()
	{
	}
}
[Token(Token = "0x2000276")]
public class Glitter : MonoBehaviour
{
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725A74", Offset = "0x725A74")]
	private sealed class <MoveStripe>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Glitter <>4__this;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0xAB2040", Offset = "0xAB2040", VA = "0xAB2040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0xAB20A8", Offset = "0xAB20A8", VA = "0xAB20A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xAB1D40", Offset = "0xAB1D40", VA = "0xAB1D40")]
		[DebuggerHidden]
		public <MoveStripe>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xAB1E00", Offset = "0xAB1E00", VA = "0xAB1E00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xAB1E04", Offset = "0xAB1E04", VA = "0xAB1E04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xAB2048", Offset = "0xAB2048", VA = "0xAB2048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 m_endPosition;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_moveTime;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_startPosition;

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xAB1C68", Offset = "0xAB1C68", VA = "0xAB1C68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xAB1CA4", Offset = "0xAB1CA4", VA = "0xAB1CA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xAB1CD0", Offset = "0xAB1CD0", VA = "0xAB1CD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7327D4", Offset = "0x7327D4")]
	private IEnumerator MoveStripe()
	{
		return null;
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xAB1D6C", Offset = "0xAB1D6C", VA = "0xAB1D6C")]
	public Glitter()
	{
	}
}
[Token(Token = "0x2000278")]
public class GravityModifier : MonoBehaviour
{
	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ConstantForce m_actGravity;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72A92C", Offset = "0x72A92C")]
	public Vector3 m_desiredGravity;

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xAB2EB0", Offset = "0xAB2EB0", VA = "0xAB2EB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xAB2FE0", Offset = "0xAB2FE0", VA = "0xAB2FE0")]
	public void SetGravity(Vector3 actGravity)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xAB30B8", Offset = "0xAB30B8", VA = "0xAB30B8")]
	public GravityModifier()
	{
	}
}
[Token(Token = "0x2000279")]
public class GroupDisableHandler : MonoBehaviour
{
	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_objectToDisableList;

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xAB30C0", Offset = "0xAB30C0", VA = "0xAB30C0")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xAB3290", Offset = "0xAB3290", VA = "0xAB3290")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xAB3460", Offset = "0xAB3460", VA = "0xAB3460")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xAB3574", Offset = "0xAB3574", VA = "0xAB3574")]
	public GroupDisableHandler()
	{
	}
}
[Token(Token = "0x200027A")]
public class HideBlobShadowByDistance : MonoBehaviour
{
	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_fadeDist;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_hideDist;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera m_mainCamera;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Projector m_projector;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_sqrHideDist;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_sqrFadeDist;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_originalFarClipPlane;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_sqrFadeRangeLenght;

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xAB3EEC", Offset = "0xAB3EEC", VA = "0xAB3EEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xAB3F78", Offset = "0xAB3F78", VA = "0xAB3F78")]
	public void Init()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xAB3F94", Offset = "0xAB3F94", VA = "0xAB3F94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xAB4130", Offset = "0xAB4130", VA = "0xAB4130")]
	public HideBlobShadowByDistance()
	{
	}
}
[Token(Token = "0x200027B")]
public class HideByDistance : MonoBehaviour
{
	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_objectToHide;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_doReveal;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_hideDist;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_sqrHideDist;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_mainCamera;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer m_meshRenderer;

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xAB4144", Offset = "0xAB4144", VA = "0xAB4144")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xAB41D0", Offset = "0xAB41D0", VA = "0xAB41D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xAB452C", Offset = "0xAB452C", VA = "0xAB452C")]
	public HideByDistance()
	{
	}
}
[Token(Token = "0x200027C")]
public class HierarchyLightsSwitch : MonoBehaviour
{
	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725A84", Offset = "0x725A84")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enable;

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xAB462C", Offset = "0xAB462C", VA = "0xAB462C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xAB463C", Offset = "0xAB463C", VA = "0xAB463C")]
		internal void <ToggileLigths>b__0(Light light)
		{
		}
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xAB453C", Offset = "0xAB453C", VA = "0xAB453C")]
	public void LightsUp()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xAB4624", Offset = "0xAB4624", VA = "0xAB4624")]
	public void LightsDown()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xAB4544", Offset = "0xAB4544", VA = "0xAB4544")]
	private void ToggileLigths(bool enable)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xAB4634", Offset = "0xAB4634", VA = "0xAB4634")]
	public HierarchyLightsSwitch()
	{
	}
}
[Token(Token = "0x200027E")]
public class HierarchyParticlesSwitch : MonoBehaviour
{
	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ParticleSystem> m_particles;

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xAB4660", Offset = "0xAB4660", VA = "0xAB4660")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xAB46CC", Offset = "0xAB46CC", VA = "0xAB46CC")]
	public void StartParticles()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xAB47FC", Offset = "0xAB47FC", VA = "0xAB47FC")]
	public void StopParticles()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xAB46D4", Offset = "0xAB46D4", VA = "0xAB46D4")]
	private void ToggileParticles(bool start)
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xAB4804", Offset = "0xAB4804", VA = "0xAB4804")]
	public HierarchyParticlesSwitch()
	{
	}
}
[Token(Token = "0x200027F")]
public class InstantiatePrefab : MonoBehaviour
{
	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_toInstantiate;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_lifeTime;

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x93DDF4", Offset = "0x93DDF4", VA = "0x93DDF4")]
	public void InstantiateObject()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x93DF68", Offset = "0x93DF68", VA = "0x93DF68")]
	public InstantiatePrefab()
	{
	}
}
[Token(Token = "0x2000280")]
public class LevelOptions : MonoBehaviour
{
	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72A974", Offset = "0x72A974")]
	private int m_manaMax;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72A9B8", Offset = "0x72A9B8")]
	private int m_crystalMax;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelOptions _instance;

	[Token(Token = "0x1700013C")]
	public int MaxMana
	{
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x9427B0", Offset = "0x9427B0", VA = "0x9427B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700013D")]
	public int MaxCrystal
	{
		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x9427B8", Offset = "0x9427B8", VA = "0x9427B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700013E")]
	public static LevelOptions Instance
	{
		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x9427C0", Offset = "0x9427C0", VA = "0x9427C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x942810", Offset = "0x942810", VA = "0x942810")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x942864", Offset = "0x942864", VA = "0x942864")]
	public LevelOptions()
	{
	}
}
[Token(Token = "0x2000281")]
public class LightColumnAnimator : MonoBehaviour
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_stepSize;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_mat0OffsetLerp;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_mat1OffsetLerp;

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x942874", Offset = "0x942874", VA = "0x942874")]
	private void LerpTextureXOffset(Material p_mat, ref float p_xOffset)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x942994", Offset = "0x942994", VA = "0x942994")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x942A1C", Offset = "0x942A1C", VA = "0x942A1C")]
	public LightColumnAnimator()
	{
	}
}
[Token(Token = "0x2000282")]
[ExecuteInEditMode]
public class LinePointFollowObj : MonoBehaviour
{
	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> m_pointsToFollow;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LineRenderer m_lineRenderer;

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x942E28", Offset = "0x942E28", VA = "0x942E28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x942E80", Offset = "0x942E80", VA = "0x942E80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x942E84", Offset = "0x942E84", VA = "0x942E84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x942F5C", Offset = "0x942F5C", VA = "0x942F5C")]
	public LinePointFollowObj()
	{
	}
}
[Token(Token = "0x2000283")]
[ExecuteInEditMode]
[ImageEffectAllowedInSceneView]
public class MSAAWhiteDotCorrector : MonoBehaviour
{
	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Shader MSAADotCorrectorShader;

	[NonSerialized]
	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material MSAADotCorrectorMaterial;

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x97EC10", Offset = "0x97EC10", VA = "0x97EC10")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x97ED14", Offset = "0x97ED14", VA = "0x97ED14")]
	public MSAAWhiteDotCorrector()
	{
	}
}
[Token(Token = "0x2000284")]
public class MeshAnimRunner : MonoBehaviour
{
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725ADC", Offset = "0x725ADC")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshAnimRunner <>4__this;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int waitNumOfFrames;

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x982A4C", Offset = "0x982A4C", VA = "0x982A4C")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x982A54", Offset = "0x982A54", VA = "0x982A54")]
		internal bool <ChangeMeshPeriodically>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725AEC", Offset = "0x725AEC")]
	private sealed class <ChangeMeshPeriodically>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimRunner <>4__this;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass6_0 <>8__1;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitUntil <waitForNumOfFramesElapsed>5__2;

		[Token(Token = "0x1700013F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x982CB4", Offset = "0x982CB4", VA = "0x982CB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x982D1C", Offset = "0x982D1C", VA = "0x982D1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x9829A0", Offset = "0x9829A0", VA = "0x9829A0")]
		[DebuggerHidden]
		public <ChangeMeshPeriodically>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x982A7C", Offset = "0x982A7C", VA = "0x982A7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x982A80", Offset = "0x982A80", VA = "0x982A80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x982CBC", Offset = "0x982CBC", VA = "0x982CBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_randomNext;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_activeChildIndex;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_frameCounter;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> m_numOfFramesToWaitsPerMesh;

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x982578", Offset = "0x982578", VA = "0x982578")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x982904", Offset = "0x982904", VA = "0x982904")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x982930", Offset = "0x982930", VA = "0x982930")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732888", Offset = "0x732888")]
	private IEnumerator ChangeMeshPeriodically()
	{
		return null;
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x9829CC", Offset = "0x9829CC", VA = "0x9829CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x9829DC", Offset = "0x9829DC", VA = "0x9829DC")]
	public MeshAnimRunner()
	{
	}
}
[Token(Token = "0x2000287")]
public static class Misc
{
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725B0C", Offset = "0x725B0C")]
	private sealed class <RecursiveSelect>d__8<TSource> : IEnumerable<TSource>, IEnumerable, IEnumerator<TSource>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TSource <>2__current;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerable<TSource> source;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerable<TSource> <>3__source;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<TSource, IEnumerable<TSource>> childSelector;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<TSource, IEnumerable<TSource>> <>3__childSelector;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Stack<IEnumerator<TSource>> <stack>5__2;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<TSource> <enumerator>5__3;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TSource <element>5__4;

		[Token(Token = "0x17000141")]
		private TSource System.Collections.Generic.IEnumerator<TSource>.Current
		{
			[Token(Token = "0x6000CFF")]
			[DebuggerHidden]
			get
			{
				return (TSource)null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D01")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CFB")]
		[DebuggerHidden]
		public <RecursiveSelect>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000CFC")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CFD")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFE")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D00")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000D02")]
		[DebuggerHidden]
		private IEnumerator<TSource> System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000D03")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725B1C", Offset = "0x725B1C")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string namePart;

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x989588", Offset = "0x989588", VA = "0x989588")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x989E64", Offset = "0x989E64", VA = "0x989E64")]
		internal bool <GetAllGrandChildByNamePart>b__1(Transform c)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725B2C", Offset = "0x725B2C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, IEnumerable<Transform>> <>9__9_0;

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x989DFC", Offset = "0x989DFC", VA = "0x989DFC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x989E04", Offset = "0x989E04", VA = "0x989E04")]
		internal IEnumerable<Transform> <GetAllGrandChildByNamePart>b__9_0(Transform c)
		{
			return null;
		}
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x98804C", Offset = "0x98804C", VA = "0x98804C")]
	public static bool CompareTagWithTagList(List<string> tags, Component comp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x988164", Offset = "0x988164", VA = "0x988164")]
	public static string GetGameObjectPath(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x6000CEF")]
	public static bool AreEqualElementByElementInOrder<T>(IList<T> A, IList<T> B)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x9882A0", Offset = "0x9882A0", VA = "0x9882A0")]
	public static GameObject GetChildByNamePart(Transform transf, string namePart)
	{
		return null;
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x988594", Offset = "0x988594", VA = "0x988594")]
	public static GameObject GetGrandChildByNamePart(Transform transf, string namePart)
	{
		return null;
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x988B28", Offset = "0x988B28", VA = "0x988B28")]
	public static GameObject GetSelfActiveGrandChildByNamePart(this Transform transf, string namePart)
	{
		return null;
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x9890E8", Offset = "0x9890E8", VA = "0x9890E8")]
	public static void ToggleAllGrandChildByNamePart(this Transform transf, string namePart, bool enable)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x9893D0", Offset = "0x9893D0", VA = "0x9893D0")]
	public static bool RandomBool()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x73295C", Offset = "0x73295C")]
	public static IEnumerable<TSource> RecursiveSelect<TSource>(this IEnumerable<TSource> source, Func<TSource, IEnumerable<TSource>> childSelector)
	{
		return null;
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x9893F4", Offset = "0x9893F4", VA = "0x9893F4")]
	public static IEnumerable<Transform> GetAllGrandChildByNamePart(this Transform transf, string namePart)
	{
		return null;
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x989590", Offset = "0x989590", VA = "0x989590")]
	public static void BlendSourceLocatorRootToTarget(Transform source, Transform target)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x989678", Offset = "0x989678", VA = "0x989678")]
	public static void DrawBounds(BoundsInt b, float delay = 1f)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x989778", Offset = "0x989778", VA = "0x989778")]
	public static void DrawBounds(Bounds b, float delay = 1f)
	{
	}

	[Token(Token = "0x6000CFA")]
	public static T[] GetEnumValues<T>()
	{
		return null;
	}
}
[Token(Token = "0x200028B")]
public class MovingSpeedToAudioVolumeConverter : MonoBehaviour
{
	[Token(Token = "0x200028C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725B3C", Offset = "0x725B3C")]
	private sealed class <AdjustVolumeAccordingToSpeed>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovingSpeedToAudioVolumeConverter <>4__this;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <checkingPeriod>5__2;

		[Token(Token = "0x17000143")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x98D614", Offset = "0x98D614", VA = "0x98D614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x98D67C", Offset = "0x98D67C", VA = "0x98D67C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x98D3EC", Offset = "0x98D3EC", VA = "0x98D3EC")]
		[DebuggerHidden]
		public <AdjustVolumeAccordingToSpeed>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x98D42C", Offset = "0x98D42C", VA = "0x98D42C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x98D430", Offset = "0x98D430", VA = "0x98D430", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x98D61C", Offset = "0x98D61C", VA = "0x98D61C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource m_audio;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72AA1C", Offset = "0x72AA1C")]
	public float m_minSpeed;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_lastPosition;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_maxVolume;

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x98D334", Offset = "0x98D334", VA = "0x98D334")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x98D37C", Offset = "0x98D37C", VA = "0x98D37C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732A50", Offset = "0x732A50")]
	private IEnumerator AdjustVolumeAccordingToSpeed()
	{
		return null;
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x98D418", Offset = "0x98D418", VA = "0x98D418")]
	public MovingSpeedToAudioVolumeConverter()
	{
	}
}
[Serializable]
[Token(Token = "0x200028D")]
public class MultiAreaInteractionEvent : UnityEvent<GameObject>
{
	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x98D684", Offset = "0x98D684", VA = "0x98D684")]
	public MultiAreaInteractionEvent()
	{
	}
}
[Token(Token = "0x200028E")]
public class MultiAreaTriggerAction : MonoBehaviour
{
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725B4C", Offset = "0x725B4C")]
	private sealed class <ExpireAction>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitSec;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MultiAreaTriggerAction <>4__this;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x98DC74", Offset = "0x98DC74", VA = "0x98DC74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x98DCDC", Offset = "0x98DCDC", VA = "0x98DCDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x98D8F0", Offset = "0x98D8F0", VA = "0x98D8F0")]
		[DebuggerHidden]
		public <ExpireAction>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x98DBB4", Offset = "0x98DBB4", VA = "0x98DBB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x98DBB8", Offset = "0x98DBB8", VA = "0x98DBB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x98DC7C", Offset = "0x98DC7C", VA = "0x98DC7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72AA54", Offset = "0x72AA54")]
	private TagsLists.TagsType m_tagsType;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> m_tags;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public MultiAreaInteractionEvent m_triggerAction;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent m_expireAction;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public MultiAreaInteractionEvent m_exitTriggerAction;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_enterCounter;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool m_exitActionOnDisable;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	[SerializeField]
	private bool m_exitActionOnEnable;

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x98D6D4", Offset = "0x98D6D4", VA = "0x98D6D4")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x98D804", Offset = "0x98D804", VA = "0x98D804")]
	public void YieldWait(float waitSec)
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x98D870", Offset = "0x98D870", VA = "0x98D870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732B04", Offset = "0x732B04")]
	private IEnumerator ExpireAction(float waitSec)
	{
		return null;
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x98D91C", Offset = "0x98D91C", VA = "0x98D91C")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x98DA4C", Offset = "0x98DA4C", VA = "0x98DA4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x98DABC", Offset = "0x98DABC", VA = "0x98DABC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x98DB3C", Offset = "0x98DB3C", VA = "0x98DB3C")]
	public MultiAreaTriggerAction()
	{
	}
}
[Token(Token = "0x2000290")]
public class ObjectsDisabler : MonoBehaviour
{
	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_objectsToDisable;

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xD87224", Offset = "0xD87224", VA = "0xD87224")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xD87320", Offset = "0xD87320", VA = "0xD87320")]
	public ObjectsDisabler()
	{
	}
}
[Serializable]
[Token(Token = "0x2000291")]
public class ParticleList
{
	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<ParticleSystem> list;

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xACCB04", Offset = "0xACCB04", VA = "0xACCB04")]
	public ParticleList()
	{
	}
}
[Token(Token = "0x2000292")]
public class ParticleLODBasedOnLODGroup : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725B5C", Offset = "0x725B5C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<ParticleSystem> <>9__5_3;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<ParticleSystem> <>9__5_0;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<ParticleSystem> <>9__5_1;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<ParticleSystem> <>9__5_2;

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xACD4FC", Offset = "0xACD4FC", VA = "0xACD4FC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xACD504", Offset = "0xACD504", VA = "0xACD504")]
		internal void <Update>b__5_3(ParticleSystem particle)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xACD524", Offset = "0xACD524", VA = "0xACD524")]
		internal void <Update>b__5_0(ParticleSystem particle)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xACD540", Offset = "0xACD540", VA = "0xACD540")]
		internal void <Update>b__5_1(ParticleSystem particle)
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xACD560", Offset = "0xACD560", VA = "0xACD560")]
		internal void <Update>b__5_2(ParticleSystem particle)
		{
		}
	}

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LODGroup m_lodGroup;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_currentLevel;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ParticleList> m_levelToParticles;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_stopped;

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xACC890", Offset = "0xACC890", VA = "0xACC890")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xACCB74", Offset = "0xACCB74", VA = "0xACCB74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xACD044", Offset = "0xACD044", VA = "0xACD044")]
	public static int GetVisibleLOD(LODGroup lodGroup)
	{
		return default(int);
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xACD0FC", Offset = "0xACD0FC", VA = "0xACD0FC")]
	private static float GetRelativeHeight(LODGroup lodGroup, Camera camera)
	{
		return default(float);
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xACD2A0", Offset = "0xACD2A0", VA = "0xACD2A0")]
	private static float DistanceToRelativeHeight(Camera camera, float distance, float size)
	{
		return default(float);
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xACD254", Offset = "0xACD254", VA = "0xACD254")]
	public static float GetWorldSpaceSize(LODGroup lodGroup)
	{
		return default(float);
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xACD378", Offset = "0xACD378", VA = "0xACD378")]
	private static float GetWorldSpaceScale(Transform t)
	{
		return default(float);
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xACD420", Offset = "0xACD420", VA = "0xACD420")]
	public ParticleLODBasedOnLODGroup()
	{
	}
}
[Token(Token = "0x2000294")]
public class PathMultiFollower : MonoBehaviour
{
	[Token(Token = "0x2000295")]
	private delegate Vector3 GetPointAtDistanceFn(float dst, EndOfPathInstruction endOfPathInstruction);

	[Token(Token = "0x2000296")]
	private delegate Quaternion GetRotationAtDistanceFn(float dst, EndOfPathInstruction endOfPathInstruction);

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PathCreator pathCreator;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EndOfPathInstruction endOfPathInstruction;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distanceTravelled;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> m_follwerObjects;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> m_onlyPositionFollowers;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public UnityEvent m_pathEndAction;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GetPointAtDistanceFn m_getPointAtDistanceFn;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GetRotationAtDistanceFn m_getRotationAtDistanceFn;

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xACF5E8", Offset = "0xACF5E8", VA = "0xACF5E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xACF838", Offset = "0xACF838", VA = "0xACF838")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xAD0044", Offset = "0xAD0044", VA = "0xAD0044")]
	public PathMultiFollower()
	{
	}
}
[Token(Token = "0x2000297")]
public class PlatformOptionSetter : MonoBehaviour
{
	[Token(Token = "0x4000AB9")]
	public const string AUTO_QUALITY_NAME = "Auto";

	[Token(Token = "0x4000ABA")]
	public const string NORMAL_QUALITY_NAME = "Normal";

	[Token(Token = "0x4000ABB")]
	public const string QUEST1_QUALITY_NAME = "Oculus Quest 1";

	[Token(Token = "0x4000ABC")]
	public const string QUEST2_QUALITY_NAME = "Oculus Quest 2";

	[Token(Token = "0x4000ABD")]
	public const string NOLO_QUALITY_NAME = "Nolo";

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string m_detectedQualityName;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xA221DC", Offset = "0xA221DC", VA = "0xA221DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xA227A8", Offset = "0xA227A8", VA = "0xA227A8")]
	private void SetQualityLevelTo(string level)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xA22DC0", Offset = "0xA22DC0", VA = "0xA22DC0")]
	private void CorrectNonOculusHeightIssue()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xA22F08", Offset = "0xA22F08", VA = "0xA22F08")]
	private void CorrectNonOculusSpeedIssue()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xA22FAC", Offset = "0xA22FAC", VA = "0xA22FAC")]
	public PlatformOptionSetter()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xA22FB4", Offset = "0xA22FB4", VA = "0xA22FB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x732BB8", Offset = "0x732BB8")]
	private void <Awake>b__6_0(QualityOverrider overrider)
	{
	}
}
[Token(Token = "0x2000298")]
public class PopupHandler : MonoBehaviour
{
	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725B6C", Offset = "0x725B6C")]
	private sealed class <ShowPopup>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopupHandler <>4__this;

		[Token(Token = "0x17000147")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xA25898", Offset = "0xA25898", VA = "0xA25898", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0xA25900", Offset = "0xA25900", VA = "0xA25900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xA252A4", Offset = "0xA252A4", VA = "0xA252A4")]
		[DebuggerHidden]
		public <ShowPopup>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xA25778", Offset = "0xA25778", VA = "0xA25778", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xA2577C", Offset = "0xA2577C", VA = "0xA2577C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xA258A0", Offset = "0xA258A0", VA = "0xA258A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725B7C", Offset = "0x725B7C")]
	private sealed class <PlayTutorialMove>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopupHandler <>4__this;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <endId>5__2;

		[Token(Token = "0x17000149")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0xA25708", Offset = "0xA25708", VA = "0xA25708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xA25770", Offset = "0xA25770", VA = "0xA25770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xA255B4", Offset = "0xA255B4", VA = "0xA255B4")]
		[DebuggerHidden]
		public <PlayTutorialMove>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xA25604", Offset = "0xA25604", VA = "0xA25604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xA25608", Offset = "0xA25608", VA = "0xA25608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xA25710", Offset = "0xA25710", VA = "0xA25710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_textId;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_useTimer;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_openTransform;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform m_lineTransform;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int m_startId;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private int m_endId;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject m_textObject;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_showTime;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_elapsedTime;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TimerCountdown m_showTimer;

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xA25088", Offset = "0xA25088", VA = "0xA25088")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xA25234", Offset = "0xA25234", VA = "0xA25234")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732BC8", Offset = "0x732BC8")]
	private IEnumerator ShowPopup()
	{
		return null;
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xA252D0", Offset = "0xA252D0", VA = "0xA252D0")]
	public void SetPopupActive(bool setActive)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xA25358", Offset = "0xA25358", VA = "0xA25358")]
	public bool IsOpened()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xA25384", Offset = "0xA25384", VA = "0xA25384")]
	public void SetNextText()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xA2543C", Offset = "0xA2543C", VA = "0xA2543C")]
	private void SetTimer_ForSomething()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xA25518", Offset = "0xA25518", VA = "0xA25518")]
	private void StartTutorialMove()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xA25544", Offset = "0xA25544", VA = "0xA25544")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732C2C", Offset = "0x732C2C")]
	private IEnumerator PlayTutorialMove()
	{
		return null;
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xA255E0", Offset = "0xA255E0", VA = "0xA255E0")]
	public PopupHandler()
	{
	}
}
[Token(Token = "0x200029B")]
public class PreventEarlyEnabling : MonoBehaviour
{
	[Token(Token = "0x200029C")]
	public enum BindTo
	{
		[Token(Token = "0x4000AD2")]
		SceneStart,
		[Token(Token = "0x4000AD3")]
		NetworkStart
	}

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BindTo m_bindTo;

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xA26508", Offset = "0xA26508", VA = "0xA26508")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xA26694", Offset = "0xA26694", VA = "0xA26694")]
	public PreventEarlyEnabling()
	{
	}
}
[Token(Token = "0x200029D")]
public class ProxyRandomEventCollector : MonoBehaviour
{
	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent m_onEventProxied;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_maxAccumlatedEvent;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_numOfRemainingCummlatedEvents;

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xA2669C", Offset = "0xA2669C", VA = "0xA2669C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xA266D0", Offset = "0xA266D0", VA = "0xA266D0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xA26704", Offset = "0xA26704", VA = "0xA26704")]
	public void ReceiveEvent()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xA26768", Offset = "0xA26768", VA = "0xA26768")]
	public ProxyRandomEventCollector()
	{
	}
}
[Token(Token = "0x200029E")]
public class Pulsation : MonoBehaviour
{
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725B8C", Offset = "0x725B8C")]
	private sealed class <Pulsating>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pulsation <>4__this;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startModifier>5__2;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <endModifier>5__3;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x1700014D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0xA26D88", Offset = "0xA26D88", VA = "0xA26D88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0xA26DF0", Offset = "0xA26DF0", VA = "0xA26DF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xA26948", Offset = "0xA26948", VA = "0xA26948")]
		[DebuggerHidden]
		public <Pulsating>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xA26A98", Offset = "0xA26A98", VA = "0xA26A98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xA26A9C", Offset = "0xA26A9C", VA = "0xA26A9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xA26D90", Offset = "0xA26D90", VA = "0xA26D90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_startModifier;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_endModifier;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_inTime;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_holdTime;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_outTime;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_numRepeat;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_oneShot;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_actTime;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 m_originalScale;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_isScaling;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool m_startScale;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool m_scaleIn;

	[Token(Token = "0x1700014B")]
	public bool StartScale
	{
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xA26778", Offset = "0xA26778", VA = "0xA26778")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xA26780", Offset = "0xA26780", VA = "0xA26780")]
		set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public bool ScaleIn
	{
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xA2678C", Offset = "0xA2678C", VA = "0xA2678C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xA26794", Offset = "0xA26794", VA = "0xA26794")]
		set
		{
		}
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xA267A0", Offset = "0xA267A0", VA = "0xA267A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xA26884", Offset = "0xA26884", VA = "0xA26884")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xA268D8", Offset = "0xA268D8", VA = "0xA268D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732D30", Offset = "0x732D30")]
	private IEnumerator Pulsating()
	{
		return null;
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xA26974", Offset = "0xA26974", VA = "0xA26974")]
	private void HandleRepeat()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xA269F8", Offset = "0xA269F8", VA = "0xA269F8")]
	public Pulsation()
	{
	}
}
[Token(Token = "0x20002A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x725B9C", Offset = "0x725B9C")]
public class QualityOverrider : MonoBehaviour
{
	[Token(Token = "0x20002A1")]
	private enum ShadowCascade
	{
		[Token(Token = "0x4000AF7")]
		NoCascade = 0,
		[Token(Token = "0x4000AF8")]
		Two = 2,
		[Token(Token = "0x4000AF9")]
		Four = 4
	}

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string m_qualityName;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_forceShadowQuality;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private ShadowQuality m_shadowQuality;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ShadowQuality m_origiShadowQuality;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool m_forceShadowResolution;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ShadowResolution m_shadowResolution;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private ShadowResolution m_origiShadowResolution;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool m_forceShadowDistance;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_shadowDistance;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_origiShadowDistance;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool m_forceCascades;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ShadowCascade m_shadowCascades;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private ShadowCascade m_origiShadowCascades;

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xA22FD4", Offset = "0xA22FD4", VA = "0xA22FD4")]
	public void ForceOverrideQualityValues(string qualityName)
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xA28690", Offset = "0xA28690", VA = "0xA28690")]
	private void OverrideValues()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xA287B4", Offset = "0xA287B4", VA = "0xA287B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xA288F0", Offset = "0xA288F0", VA = "0xA288F0")]
	public QualityOverrider()
	{
	}
}
[Token(Token = "0x20002A2")]
public class RandomChildEnabler : MonoBehaviour
{
	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72ABF0", Offset = "0x72ABF0")]
	public GameObject m_affected;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_randomOnStart;

	[Token(Token = "0x1700014F")]
	private GameObject Affected
	{
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xA298C0", Offset = "0xA298C0", VA = "0xA298C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xA2994C", Offset = "0xA2994C", VA = "0xA2994C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xA2995C", Offset = "0xA2995C", VA = "0xA2995C")]
	public void EnableRandomChild()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xA29A2C", Offset = "0xA29A2C", VA = "0xA29A2C")]
	public RandomChildEnabler()
	{
	}
}
[Token(Token = "0x20002A3")]
public class RandomIn
{
	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xA29A34", Offset = "0xA29A34", VA = "0xA29A34")]
	public static Vector3 RandomPointInBounds(Bounds bounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xA29B14", Offset = "0xA29B14", VA = "0xA29B14")]
	public static Vector3Int RandomPointInBoundsIncludeMax(BoundsInt bounds)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xA29C68", Offset = "0xA29C68", VA = "0xA29C68")]
	public RandomIn()
	{
	}
}
[Token(Token = "0x20002A4")]
public class RandomSeed : MonoBehaviour
{
	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UnityEngine.Random.State m_seedGeneratorState;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool m_seedGeneratorInitialized;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int m_seedGeneratorSeed;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<int> m_generatedList;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<Vector3Int> m_generatedVectorList;

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xA29C70", Offset = "0xA29C70", VA = "0xA29C70")]
	public static int GenerateSeedNext(bool checkEqual, int rangeMin = int.MinValue, int rangeMax = int.MaxValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xA29E5C", Offset = "0xA29E5C", VA = "0xA29E5C")]
	public static Vector3Int GenerateSeedNextVector(bool useSeed, bool checkEqual, BoundsInt bound)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xA2A0B0", Offset = "0xA2A0B0", VA = "0xA2A0B0")]
	public RandomSeed()
	{
	}
}
[Token(Token = "0x20002A5")]
public class RandomSoundHandler : MonoBehaviour
{
	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_isMale;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_initFromGlobal;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource[] m_audioSources;

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xA2A174", Offset = "0xA2A174", VA = "0xA2A174")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xA2A270", Offset = "0xA2A270", VA = "0xA2A270")]
	public void PlayRandomSound()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xA2A228", Offset = "0xA2A228", VA = "0xA2A228")]
	public void SetMale(bool isMale)
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xA2A3B0", Offset = "0xA2A3B0", VA = "0xA2A3B0")]
	public RandomSoundHandler()
	{
	}
}
[Token(Token = "0x20002A6")]
public class RotateToward : MonoBehaviour
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_mainCamera;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_targetObj;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_turnBack;

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xA2F6B8", Offset = "0xA2F6B8", VA = "0xA2F6B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xA2F6F8", Offset = "0xA2F6F8", VA = "0xA2F6F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xA2F82C", Offset = "0xA2F82C", VA = "0xA2F82C")]
	public RotateToward()
	{
	}
}
[Token(Token = "0x20002A7")]
[ExecuteInEditMode]
public class ScaleToTargetPos : MonoBehaviour
{
	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_refObject;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_originalScale;

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xA2FD14", Offset = "0xA2FD14", VA = "0xA2FD14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xA2FD18", Offset = "0xA2FD18", VA = "0xA2FD18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xA2FF28", Offset = "0xA2FF28", VA = "0xA2FF28")]
	public ScaleToTargetPos()
	{
	}
}
[Token(Token = "0x20002A8")]
public class SceneChanger : MonoBehaviour
{
	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xA2FF3C", Offset = "0xA2FF3C", VA = "0xA2FF3C")]
	public void LoadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xA2FFA4", Offset = "0xA2FFA4", VA = "0xA2FFA4")]
	public SceneChanger()
	{
	}
}
[Token(Token = "0x20002A9")]
public class ScreenFade : MonoBehaviour
{
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725C10", Offset = "0x725C10")]
	private sealed class <FadeToTransparent>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool toTransparent;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScreenFade <>4__this;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startAlpha>5__2;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <endAlpha>5__3;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x17000151")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0xA305E8", Offset = "0xA305E8", VA = "0xA305E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0xA30650", Offset = "0xA30650", VA = "0xA30650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xA30344", Offset = "0xA30344", VA = "0xA30344")]
		[DebuggerHidden]
		public <FadeToTransparent>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xA303E8", Offset = "0xA303E8", VA = "0xA303E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xA303EC", Offset = "0xA303EC", VA = "0xA303EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xA305F0", Offset = "0xA305F0", VA = "0xA305F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_toOpaqueTime;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_inBlankTime;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_toTransparentTime;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_actTime;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_fadeColor;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_renderQueue;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_uiFadeAlpha;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer m_meshRenderer;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshFilter m_meshFilter;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material m_meshMaterial;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isFading;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72AC38", Offset = "0x72AC38")]
	private float <m_currentAlpha>k__BackingField;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_initDone;

	[Token(Token = "0x17000150")]
	public float m_currentAlpha
	{
		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xA2FFAC", Offset = "0xA2FFAC", VA = "0xA2FFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x732DE4", Offset = "0x732DE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xA2FFB4", Offset = "0xA2FFB4", VA = "0xA2FFB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x732DF4", Offset = "0x732DF4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xA2FFBC", Offset = "0xA2FFBC", VA = "0xA2FFBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xA300AC", Offset = "0xA300AC", VA = "0xA300AC")]
	public void Fade()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xA300C4", Offset = "0xA300C4", VA = "0xA300C4")]
	private void StartFading()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xA30184", Offset = "0xA30184", VA = "0xA30184")]
	public void SetUIFade(float level)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xA300A4", Offset = "0xA300A4", VA = "0xA300A4")]
	public void SetFadeLevel(float level)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xA30100", Offset = "0xA30100", VA = "0xA30100")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732E04", Offset = "0x732E04")]
	private IEnumerator FadeToTransparent(bool toTransparent)
	{
		return null;
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xA30204", Offset = "0xA30204", VA = "0xA30204")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xA30370", Offset = "0xA30370", VA = "0xA30370")]
	public ScreenFade()
	{
	}
}
[Token(Token = "0x20002AB")]
public class ScreenFader : MonoBehaviour
{
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725C20", Offset = "0x725C20")]
	private sealed class <Fade>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFader <>4__this;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xA31254", Offset = "0xA31254", VA = "0xA31254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0xA312BC", Offset = "0xA312BC", VA = "0xA312BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xA31070", Offset = "0xA31070", VA = "0xA31070")]
		[DebuggerHidden]
		public <Fade>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xA31110", Offset = "0xA31110", VA = "0xA31110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xA31114", Offset = "0xA31114", VA = "0xA31114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xA3125C", Offset = "0xA3125C", VA = "0xA3125C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72AC48", Offset = "0x72AC48")]
	public float fadeTime;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72AC80", Offset = "0x72AC80")]
	public Color fadeColor;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool fadeOnStart;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int renderQueue;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float explicitFadeAlpha;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float animatedFadeAlpha;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float uiFadeAlpha;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer fadeRenderer;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshFilter fadeMesh;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material fadeMaterial;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isFading;

	[Token(Token = "0x17000153")]
	public float currentAlpha
	{
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xA30658", Offset = "0xA30658", VA = "0xA30658")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xA3071C", Offset = "0xA3071C", VA = "0xA3071C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xA30C34", Offset = "0xA30C34", VA = "0xA30C34")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xA30CEC", Offset = "0xA30CEC", VA = "0xA30CEC")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xA30D20", Offset = "0xA30D20", VA = "0xA30D20")]
	private void OnLevelFinishedLoading(int level)
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xA30D54", Offset = "0xA30D54", VA = "0xA30D54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xA30D6C", Offset = "0xA30D6C", VA = "0xA30D6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xA30ED0", Offset = "0xA30ED0", VA = "0xA30ED0")]
	public void SetUIFade(float level)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xA31068", Offset = "0xA31068", VA = "0xA31068")]
	public void SetExplicitFade(float level)
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xA30C68", Offset = "0xA30C68", VA = "0xA30C68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732EB8", Offset = "0x732EB8")]
	private IEnumerator Fade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xA30F50", Offset = "0xA30F50", VA = "0xA30F50")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xA3109C", Offset = "0xA3109C", VA = "0xA3109C")]
	public ScreenFader()
	{
	}
}
[Token(Token = "0x20002AD")]
public class SectionMover : MonoBehaviour
{
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725C30", Offset = "0x725C30")]
	private sealed class <MoveToPosition>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SectionMover <>4__this;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 startPosition;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 endPosition;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float moveTime;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0xA317CC", Offset = "0xA317CC", VA = "0xA317CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0xA31834", Offset = "0xA31834", VA = "0xA31834", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xA31588", Offset = "0xA31588", VA = "0xA31588")]
		[DebuggerHidden]
		public <MoveToPosition>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xA315C4", Offset = "0xA315C4", VA = "0xA315C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xA315C8", Offset = "0xA315C8", VA = "0xA315C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xA317D4", Offset = "0xA317D4", VA = "0xA317D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_controlledObject;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_moveModifier;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool m_isMoving;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator m_coroutineToMove;

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xA312C4", Offset = "0xA312C4", VA = "0xA312C4")]
	public bool IsMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xA312CC", Offset = "0xA312CC", VA = "0xA312CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xA3135C", Offset = "0xA3135C", VA = "0xA3135C")]
	public void ExecuteMoving(float travelTime = 1f)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xA314CC", Offset = "0xA314CC", VA = "0xA314CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x732F6C", Offset = "0x732F6C")]
	private IEnumerator MoveToPosition(Vector3 startPosition, Vector3 endPosition, float moveTime)
	{
		return null;
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xA31490", Offset = "0xA31490", VA = "0xA31490")]
	private Vector3 GetPositionModifier()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xA315B4", Offset = "0xA315B4", VA = "0xA315B4")]
	public void SetControlledObject(GameObject controlledObject)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xA315BC", Offset = "0xA315BC", VA = "0xA315BC")]
	public SectionMover()
	{
	}
}
[Token(Token = "0x20002AF")]
public class SectionRotator : MonoBehaviour
{
	[Token(Token = "0x20002B0")]
	public enum RotateAxis
	{
		[Token(Token = "0x4000B43")]
		ROT_X,
		[Token(Token = "0x4000B44")]
		ROT_Y,
		[Token(Token = "0x4000B45")]
		ROT_Z
	}

	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725C40", Offset = "0x725C40")]
	private sealed class <RotateAroundAxis>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SectionRotator <>4__this;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0xA3209C", Offset = "0xA3209C", VA = "0xA3209C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xA32104", Offset = "0xA32104", VA = "0xA32104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xA31E98", Offset = "0xA31E98", VA = "0xA31E98")]
		[DebuggerHidden]
		public <RotateAroundAxis>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xA31EDC", Offset = "0xA31EDC", VA = "0xA31EDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xA31EE0", Offset = "0xA31EE0", VA = "0xA31EE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xA320A4", Offset = "0xA320A4", VA = "0xA320A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_rotatedObject;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_centerObject;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RotateAxis m_rotAxis;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_rotateDeg;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_rotFrom;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion m_rotTo;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_rotateTime;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_isRotating;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine m_currentRotation;

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xA3183C", Offset = "0xA3183C", VA = "0xA3183C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xA31A9C", Offset = "0xA31A9C", VA = "0xA31A9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xA31AA0", Offset = "0xA31AA0", VA = "0xA31AA0")]
	public bool IsRotating()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xA31AA8", Offset = "0xA31AA8", VA = "0xA31AA8")]
	public bool DoRotation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xA31D84", Offset = "0xA31D84", VA = "0xA31D84")]
	public bool IsInBaseState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xA31E34", Offset = "0xA31E34", VA = "0xA31E34")]
	public void DoRotationInstantly()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xA31B7C", Offset = "0xA31B7C", VA = "0xA31B7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x733020", Offset = "0x733020")]
	private IEnumerator RotateAroundAxis()
	{
		return null;
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xA318C4", Offset = "0xA318C4", VA = "0xA318C4")]
	private void SetRotationByAxis()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xA31EC4", Offset = "0xA31EC4", VA = "0xA31EC4")]
	public SectionRotator()
	{
	}
}
[Token(Token = "0x20002B2")]
public class SubTriggerEventToUpward : MonoBehaviour
{
	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xA3782C", Offset = "0xA3782C", VA = "0xA3782C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xA378AC", Offset = "0xA378AC", VA = "0xA378AC")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xA3792C", Offset = "0xA3792C", VA = "0xA3792C")]
	public SubTriggerEventToUpward()
	{
	}
}
[Token(Token = "0x20002B3")]
public class TagsLists
{
	[Token(Token = "0x20002B4")]
	public enum TagsType
	{
		[Token(Token = "0x4000B53")]
		NONE = -1,
		[Token(Token = "0x4000B54")]
		HAND,
		[Token(Token = "0x4000B55")]
		CONTROL,
		[Token(Token = "0x4000B56")]
		BODY,
		[Token(Token = "0x4000B57")]
		FOCUS,
		[Token(Token = "0x4000B58")]
		PLAYERCONTROLLER,
		[Token(Token = "0x4000B59")]
		HEAD
	}

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<string> m_handTags;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<string> m_handRemoteTags;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<string> m_controlTags;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static List<string> m_bodyTags;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static List<string> m_focusTags;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static List<string> m_playercontrollerTags;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static List<string> m_headTags;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static List<string> m_portalCubeTags;

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xA43BEC", Offset = "0xA43BEC", VA = "0xA43BEC")]
	public static bool CheckObject(TagsType tagsType, string otherTag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xA43DB0", Offset = "0xA43DB0", VA = "0xA43DB0")]
	public TagsLists()
	{
	}
}
[Token(Token = "0x20002B5")]
public class Teleporter : MonoBehaviour
{
	[Token(Token = "0x20002B6")]
	public enum TargetType
	{
		[Token(Token = "0x4000B62")]
		CURSING_AREA,
		[Token(Token = "0x4000B63")]
		STARTING_AREA
	}

	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725C50", Offset = "0x725C50")]
	private sealed class <WaitForBlink>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Teleporter <>4__this;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TargetType targetType;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0xA4A960", Offset = "0xA4A960", VA = "0xA4A960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0xA4A9C8", Offset = "0xA4A9C8", VA = "0xA4A9C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xA4A238", Offset = "0xA4A238", VA = "0xA4A238")]
		[DebuggerHidden]
		public <WaitForBlink>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xA4A808", Offset = "0xA4A808", VA = "0xA4A808", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xA4A80C", Offset = "0xA4A80C", VA = "0xA4A80C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xA4A968", Offset = "0xA4A968", VA = "0xA4A968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725C60", Offset = "0x725C60")]
	private sealed class <ReenableNavMeshAgent>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Teleporter <>4__this;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0xA4A798", Offset = "0xA4A798", VA = "0xA4A798", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0xA4A800", Offset = "0xA4A800", VA = "0xA4A800", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xA4A2D4", Offset = "0xA4A2D4", VA = "0xA4A2D4")]
		[DebuggerHidden]
		public <ReenableNavMeshAgent>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xA4A6FC", Offset = "0xA4A6FC", VA = "0xA4A6FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xA4A700", Offset = "0xA4A700", VA = "0xA4A700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xA4A7A0", Offset = "0xA4A7A0", VA = "0xA4A7A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725C70", Offset = "0x725C70")]
	private sealed class <WaitForBlinkOut>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Teleporter <>4__this;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0xA4AA88", Offset = "0xA4AA88", VA = "0xA4AA88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0xA4AAF0", Offset = "0xA4AAF0", VA = "0xA4AAF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xA4A370", Offset = "0xA4A370", VA = "0xA4A370")]
		[DebuggerHidden]
		public <WaitForBlinkOut>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xA4A9D0", Offset = "0xA4A9D0", VA = "0xA4A9D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xA4A9D4", Offset = "0xA4A9D4", VA = "0xA4A9D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xA4AA90", Offset = "0xA4AA90", VA = "0xA4AA90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725C80", Offset = "0x725C80")]
	private sealed class <WaitForEffect>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Teleporter <>4__this;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 createTo;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0xA4ABB0", Offset = "0xA4ABB0", VA = "0xA4ABB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0xA4AC18", Offset = "0xA4AC18", VA = "0xA4AC18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xA4A430", Offset = "0xA4A430", VA = "0xA4A430")]
		[DebuggerHidden]
		public <WaitForEffect>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xA4AAF8", Offset = "0xA4AAF8", VA = "0xA4AAF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xA4AAFC", Offset = "0xA4AAFC", VA = "0xA4AAFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xA4ABB8", Offset = "0xA4ABB8", VA = "0xA4ABB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B5A")]
	private const int m_roundRobinLenght = 3;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_startingAreaTargets;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_cursedAreaTargets;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_startObject;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_fallObject;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_blinkObject;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_storageTemporary;

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xA4A18C", Offset = "0xA4A18C", VA = "0xA4A18C")]
	public void StartTeleport(TargetType targetType)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xA4A1B8", Offset = "0xA4A1B8", VA = "0xA4A1B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7330D4", Offset = "0x7330D4")]
	private IEnumerator WaitForBlink(TargetType targetType)
	{
		return null;
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xA43898", Offset = "0xA43898", VA = "0xA43898")]
	public void TeleportToPos(TargetType targetType)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xA4A264", Offset = "0xA4A264", VA = "0xA4A264")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x733138", Offset = "0x733138")]
	private IEnumerator ReenableNavMeshAgent()
	{
		return null;
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xA4A300", Offset = "0xA4A300", VA = "0xA4A300")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x73319C", Offset = "0x73319C")]
	private IEnumerator WaitForBlinkOut()
	{
		return null;
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xA4A39C", Offset = "0xA4A39C", VA = "0xA4A39C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x733200", Offset = "0x733200")]
	private IEnumerator WaitForEffect(Vector3 createTo)
	{
		return null;
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xA4A45C", Offset = "0xA4A45C", VA = "0xA4A45C")]
	private void InstantiateEffect(bool createStart, Vector3 createTo)
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xA4A66C", Offset = "0xA4A66C", VA = "0xA4A66C")]
	public Teleporter()
	{
	}
}
[Token(Token = "0x20002BB")]
public class TextFader : MonoBehaviour
{
	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_fadeLength;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_unfadeLength;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_mainCamera;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color m_originalColor;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Color> m_textColorList;

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xA4AD88", Offset = "0xA4AD88", VA = "0xA4AD88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xA4AF04", Offset = "0xA4AF04", VA = "0xA4AF04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xA4AF88", Offset = "0xA4AF88", VA = "0xA4AF88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xA4B22C", Offset = "0xA4B22C", VA = "0xA4B22C")]
	public void ChangeOriginalColor(Color newColor)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xA4B238", Offset = "0xA4B238", VA = "0xA4B238")]
	public void SetManaText(int textValue)
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xA4B394", Offset = "0xA4B394", VA = "0xA4B394")]
	public Color GetManaColor(int ManaAmount)
	{
		return default(Color);
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xA4B4E8", Offset = "0xA4B4E8", VA = "0xA4B4E8")]
	public TextFader()
	{
	}
}
[Token(Token = "0x20002BC")]
public class TextFeedback : MonoBehaviour
{
	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_FeedbackObject;

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xA4B564", Offset = "0xA4B564", VA = "0xA4B564")]
	public void CreateFeedbackText(Vector3 FeedbackPos, int FeedbackId)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xA4B6B8", Offset = "0xA4B6B8", VA = "0xA4B6B8")]
	private Color GetFeedbackColor(int FeedbackId)
	{
		return default(Color);
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xA4B8E8", Offset = "0xA4B8E8", VA = "0xA4B8E8")]
	public TextFeedback()
	{
	}
}
[Token(Token = "0x20002BD")]
public class TimerCountdown : MonoBehaviour
{
	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Timer m_timer;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_timerSec;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_useText;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_actSec;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_secText;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnActionsAtEnd;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xA4B8F0", Offset = "0xA4B8F0", VA = "0xA4B8F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xA4B98C", Offset = "0xA4B98C", VA = "0xA4B98C")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xA4BAA0", Offset = "0xA4BAA0", VA = "0xA4BAA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xA4BCD4", Offset = "0xA4BCD4", VA = "0xA4BCD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xA4BB18", Offset = "0xA4BB18", VA = "0xA4BB18")]
	public void ProcessSec(int actSec)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xA4BB54", Offset = "0xA4BB54", VA = "0xA4BB54")]
	public void ActionsAtSec(int actSec)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xA4BCD8", Offset = "0xA4BCD8", VA = "0xA4BCD8")]
	public void ActionsAtEnd()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xA4BE64", Offset = "0xA4BE64", VA = "0xA4BE64")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xA4BF04", Offset = "0xA4BF04", VA = "0xA4BF04")]
	public TimerCountdown()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BE")]
public class StringEvent : UnityEvent<string>
{
	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xA377DC", Offset = "0xA377DC", VA = "0xA377DC")]
	public StringEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BF")]
public class TimerElapsedIntEvent : UnityEvent<int>
{
	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xA4C2AC", Offset = "0xA4C2AC", VA = "0xA4C2AC")]
	public TimerElapsedIntEvent()
	{
	}
}
[Token(Token = "0x20002C0")]
public class TimerElapsed : MonoBehaviour
{
	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimerUp m_timerUp;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_timerStart;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x72ACF8", Offset = "0x72ACF8")]
	public string m_format;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StringEvent m_actionWithFormattedTimeStamp;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TimerElapsedIntEvent m_actionWithTimeStamp;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_startTimerOnEnable;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_actSec;

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xA4BF20", Offset = "0xA4BF20", VA = "0xA4BF20")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xA4C034", Offset = "0xA4C034", VA = "0xA4C034")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xA4C0D4", Offset = "0xA4C0D4", VA = "0xA4C0D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xA4C098", Offset = "0xA4C098", VA = "0xA4C098")]
	public void ProcessSec(int actSec)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xA4C0E4", Offset = "0xA4C0E4", VA = "0xA4C0E4")]
	public void ActionsAtSec(int actSec)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xA4C254", Offset = "0xA4C254", VA = "0xA4C254")]
	public TimerElapsed()
	{
	}
}
[Token(Token = "0x20002C1")]
public class TrackInFixUpdate : MonoBehaviour
{
	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_trackRotation;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_trackedGameObject;

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xA4C748", Offset = "0xA4C748", VA = "0xA4C748")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xA4C74C", Offset = "0xA4C74C", VA = "0xA4C74C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xA4C7F0", Offset = "0xA4C7F0", VA = "0xA4C7F0")]
	public TrackInFixUpdate()
	{
	}
}
[Token(Token = "0x20002C2")]
public class TrackInUpdate : MonoBehaviour
{
	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_trackRotation;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_trackedGameObject;

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xA4C800", Offset = "0xA4C800", VA = "0xA4C800")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xA4C804", Offset = "0xA4C804", VA = "0xA4C804")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xA4C90C", Offset = "0xA4C90C", VA = "0xA4C90C")]
	public TrackInUpdate()
	{
	}
}
[Token(Token = "0x20002C3")]
public class TrackMainCamInUpdate : MonoBehaviour
{
	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_camera;

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xA4C91C", Offset = "0xA4C91C", VA = "0xA4C91C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xA4C954", Offset = "0xA4C954", VA = "0xA4C954")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xA4C958", Offset = "0xA4C958", VA = "0xA4C958")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xA4C9F0", Offset = "0xA4C9F0", VA = "0xA4C9F0")]
	public TrackMainCamInUpdate()
	{
	}
}
[Token(Token = "0x20002C4")]
[DisallowMultipleComponent]
public class TriggerAction : MonoBehaviour
{
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725CA0", Offset = "0x725CA0")]
	private sealed class <ExpireAction>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitSec;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriggerAction <>4__this;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xA4F19C", Offset = "0xA4F19C", VA = "0xA4F19C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0xA4F204", Offset = "0xA4F204", VA = "0xA4F204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xA4EF10", Offset = "0xA4EF10", VA = "0xA4EF10")]
		[DebuggerHidden]
		public <ExpireAction>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xA4F0DC", Offset = "0xA4F0DC", VA = "0xA4F0DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xA4F0E0", Offset = "0xA4F0E0", VA = "0xA4F0E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xA4F1A4", Offset = "0xA4F1A4", VA = "0xA4F1A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72AD08", Offset = "0x72AD08")]
	private TagsLists.TagsType m_tagsType;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> m_tags;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public UnityEvent m_triggerAction;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent m_expireAction;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public UnityEvent m_exitTriggerAction;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_applyCooldown;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public InteractionEvent m_triggerActionSender;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public UnityEvent m_ondisableAction;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool m_invokeOnDisable;

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xA4EC68", Offset = "0xA4EC68", VA = "0xA4EC68")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xA4EE24", Offset = "0xA4EE24", VA = "0xA4EE24")]
	public void YieldWait(float waitSec)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xA4EE90", Offset = "0xA4EE90", VA = "0xA4EE90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7333A4", Offset = "0x7333A4")]
	private IEnumerator ExpireAction(float waitSec)
	{
		return null;
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xA4EF3C", Offset = "0xA4EF3C", VA = "0xA4EF3C")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xA4F03C", Offset = "0xA4F03C", VA = "0xA4F03C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xA4F064", Offset = "0xA4F064", VA = "0xA4F064")]
	public TriggerAction()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C6")]
public class InteractionEventOld : UnityEvent<GameObject>
{
	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x93E010", Offset = "0x93E010", VA = "0x93E010")]
	public InteractionEventOld()
	{
	}
}
[Token(Token = "0x20002C7")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x725CB0", Offset = "0x725CB0")]
public class TriggerActionOld : MonoBehaviour
{
	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725CEC", Offset = "0x725CEC")]
	private sealed class <ExpireAction>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitSec;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriggerActionOld <>4__this;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xA4F718", Offset = "0xA4F718", VA = "0xA4F718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0xA4F780", Offset = "0xA4F780", VA = "0xA4F780", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xA4F4B4", Offset = "0xA4F4B4", VA = "0xA4F4B4")]
		[DebuggerHidden]
		public <ExpireAction>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xA4F658", Offset = "0xA4F658", VA = "0xA4F658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xA4F65C", Offset = "0xA4F65C", VA = "0xA4F65C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xA4F720", Offset = "0xA4F720", VA = "0xA4F720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72ADC4", Offset = "0x72ADC4")]
	private TagsLists.TagsType m_tagsType;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> m_tags;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public UnityEvent m_triggerAction;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent m_expireAction;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public UnityEvent m_exitTriggerAction;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_applyCooldown;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public InteractionEventOld m_triggerActionSender;

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xA4F20C", Offset = "0xA4F20C", VA = "0xA4F20C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xA4F3C8", Offset = "0xA4F3C8", VA = "0xA4F3C8")]
	public void YieldWait(float waitSec)
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xA4F434", Offset = "0xA4F434", VA = "0xA4F434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x733458", Offset = "0x733458")]
	private IEnumerator ExpireAction(float waitSec)
	{
		return null;
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xA4F4E0", Offset = "0xA4F4E0", VA = "0xA4F4E0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xA4F5E0", Offset = "0xA4F5E0", VA = "0xA4F5E0")]
	public TriggerActionOld()
	{
	}
}
[Token(Token = "0x20002C9")]
public class TriggerActionSimple : MonoBehaviour
{
	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> m_tags;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent m_triggerAction;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent m_exitTriggerAction;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InteractionEvent m_triggerActionSender;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InteractionEvent m_exitTriggerActionSender;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent m_ondisableAction;

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xA4F788", Offset = "0xA4F788", VA = "0xA4F788")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xA4F838", Offset = "0xA4F838", VA = "0xA4F838")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xA4F8E8", Offset = "0xA4F8E8", VA = "0xA4F8E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xA4F904", Offset = "0xA4F904", VA = "0xA4F904")]
	public TriggerActionSimple()
	{
	}
}
[Token(Token = "0x20002CA")]
public class TriggerCurse : MonoBehaviour
{
	[Token(Token = "0x20002CB")]
	public enum CurseType
	{
		[Token(Token = "0x4000BAE")]
		NONE = -1,
		[Token(Token = "0x4000BAF")]
		EYESIGHT,
		[Token(Token = "0x4000BB0")]
		MANA,
		[Token(Token = "0x4000BB1")]
		DREAM,
		[Token(Token = "0x4000BB2")]
		TELEPORT,
		[Token(Token = "0x4000BB3")]
		DWARF,
		[Token(Token = "0x4000BB4")]
		LABYRINTH,
		[Token(Token = "0x4000BB5")]
		MONOLITH,
		[Token(Token = "0x4000BB6")]
		ARCANEMAGE,
		[Token(Token = "0x4000BB7")]
		LIGHTNING,
		[Token(Token = "0x4000BB8")]
		DRAGONICUS,
		[Token(Token = "0x4000BB9")]
		LAUGHINGS
	}

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72AEB0", Offset = "0x72AEB0")]
	public CurseType m_CurseType;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_useOnlyHeadTag;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<CurseType> m_cursePool;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_useRandomFromPool;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> m_tags;

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xA4F974", Offset = "0xA4F974", VA = "0xA4F974")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xA4FB28", Offset = "0xA4FB28", VA = "0xA4FB28")]
	public void ForceTriggerCurse([Optional] GameObject collidedObject)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xA4FFCC", Offset = "0xA4FFCC", VA = "0xA4FFCC")]
	public TriggerCurse()
	{
	}
}
[Token(Token = "0x20002CC")]
public class XRConfiguration : MonoBehaviour
{
	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float eyeTextureResolutionScale;

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xB00780", Offset = "0xB00780", VA = "0xB00780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xB0078C", Offset = "0xB0078C", VA = "0xB0078C")]
	public XRConfiguration()
	{
	}
}
[Token(Token = "0x20002CD")]
public class Wormhole : MonoBehaviour
{
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725CFC", Offset = "0x725CFC")]
	private sealed class <WaitForBlink>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wormhole <>4__this;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject collider;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0xB005E8", Offset = "0xB005E8", VA = "0xB005E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0xB00650", Offset = "0xB00650", VA = "0xB00650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xB00134", Offset = "0xB00134", VA = "0xB00134")]
		[DebuggerHidden]
		public <WaitForBlink>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xB0026C", Offset = "0xB0026C", VA = "0xB0026C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xB00270", Offset = "0xB00270", VA = "0xB00270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xB005F0", Offset = "0xB005F0", VA = "0xB005F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725D0C", Offset = "0x725D0C")]
	private sealed class <WaitForBlinkOut>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wormhole <>4__this;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0xB00710", Offset = "0xB00710", VA = "0xB00710", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0xB00778", Offset = "0xB00778", VA = "0xB00778", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xB001D0", Offset = "0xB001D0", VA = "0xB001D0")]
		[DebuggerHidden]
		public <WaitForBlinkOut>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xB00658", Offset = "0xB00658", VA = "0xB00658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xB0065C", Offset = "0xB0065C", VA = "0xB0065C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xB00718", Offset = "0xB00718", VA = "0xB00718", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DateTime m_lastWormholeActivation;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_wormholeIn;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> m_wormholeOuts;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_blinkObject;

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xAFFF24", Offset = "0xAFFF24", VA = "0xAFFF24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xAFFFD8", Offset = "0xAFFFD8", VA = "0xAFFFD8")]
	public void StartWormhole(GameObject collider)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xB000B8", Offset = "0xB000B8", VA = "0xB000B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x73350C", Offset = "0x73350C")]
	private IEnumerator WaitForBlink(GameObject collider)
	{
		return null;
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xB00160", Offset = "0xB00160", VA = "0xB00160")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x733570", Offset = "0x733570")]
	private IEnumerator WaitForBlinkOut()
	{
		return null;
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xB001FC", Offset = "0xB001FC", VA = "0xB001FC")]
	public Wormhole()
	{
	}
}
[Token(Token = "0x20002D0")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x725D1C", Offset = "0x725D1C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x725D1C", Offset = "0x725D1C")]
public class FXAA : MonoBehaviour
{
	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Shader shader;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mat;

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xAACD68", Offset = "0xAACD68", VA = "0xAACD68")]
	private void CreateMaterialIfNeeded()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xAACEB0", Offset = "0xAACEB0", VA = "0xAACEB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xAACEB4", Offset = "0xAACEB4", VA = "0xAACEB4")]
	public void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xAAD008", Offset = "0xAAD008", VA = "0xAAD008")]
	public FXAA()
	{
	}
}
[Token(Token = "0x20002D1")]
public class DragRigidbody : MonoBehaviour
{
	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float forceAmount;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float targetDistance;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 targetPosition;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 localHitPosition;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Rigidbody target;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera camera;

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x97B998", Offset = "0x97B998", VA = "0x97B998")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x97B9C0", Offset = "0x97B9C0", VA = "0x97B9C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x97BD1C", Offset = "0x97BD1C", VA = "0x97BD1C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x97BEB8", Offset = "0x97BEB8", VA = "0x97BEB8")]
	public DragRigidbody()
	{
	}
}
[Token(Token = "0x20002D2")]
[ExecuteInEditMode]
public class PostprocessingBlur : MonoBehaviour
{
	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material postprocessMaterial;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float blurSize;

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xA26358", Offset = "0xA26358", VA = "0xA26358")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xA263E0", Offset = "0xA263E0", VA = "0xA263E0")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xA26500", Offset = "0xA26500", VA = "0xA26500")]
	public PostprocessingBlur()
	{
	}
}
[Token(Token = "0x20002D3")]
[ExecuteInEditMode]
public class RenderDepth : MonoBehaviour
{
	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72AF58", Offset = "0x72AF58")]
	public float depthLevel;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Shader _shader;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _material;

	[Token(Token = "0x1700016A")]
	private Shader shader
	{
		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xA2CA58", Offset = "0xA2CA58", VA = "0xA2CA58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016B")]
	private Material material
	{
		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xA2CAF0", Offset = "0xA2CAF0", VA = "0xA2CAF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xA2CBC0", Offset = "0xA2CBC0", VA = "0xA2CBC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xA2CC24", Offset = "0xA2CC24", VA = "0xA2CC24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xA2CCD8", Offset = "0xA2CCD8", VA = "0xA2CCD8")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xA2CE10", Offset = "0xA2CE10", VA = "0xA2CE10")]
	public RenderDepth()
	{
	}
}
[Token(Token = "0x20002D4")]
public class ShadowBaker : MonoBehaviour
{
	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xA33440", Offset = "0xA33440", VA = "0xA33440")]
	public static void BakeShadow(int ObjectLayer, Transform Target, int textureSize, float OrthographicSize, float Blur, bool bakeChildren)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xA3399C", Offset = "0xA3399C", VA = "0xA3399C")]
	public static void SaveTexture(RenderTexture rt, Transform Target, int textureSize)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xA33A14", Offset = "0xA33A14", VA = "0xA33A14")]
	public static Texture2D toTexture2D(RenderTexture rTex, int textureSize)
	{
		return null;
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xA33B2C", Offset = "0xA33B2C", VA = "0xA33B2C")]
	public ShadowBaker()
	{
	}
}
[Token(Token = "0x20002D5")]
[ExecuteInEditMode]
public class DepthTexture : MonoBehaviour
{
	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x97A84C", Offset = "0x97A84C", VA = "0x97A84C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x97A8B4", Offset = "0x97A8B4", VA = "0x97A8B4")]
	public DepthTexture()
	{
	}
}
[Token(Token = "0x20002D6")]
public static class MaterialModifier
{
	[Token(Token = "0x20002D7")]
	public interface Interface
	{
		[Token(Token = "0x6000E59")]
		void SetMaterialProp(int nameID, float value);

		[Token(Token = "0x6000E5A")]
		void SetMaterialProp(int nameID, Vector4 value);

		[Token(Token = "0x6000E5B")]
		void SetMaterialProp(int nameID, Color value);

		[Token(Token = "0x6000E5C")]
		void SetMaterialProp(int nameID, Matrix4x4 value);

		[Token(Token = "0x6000E5D")]
		void SetMaterialProp(int nameID, Texture value);
	}

	[Token(Token = "0x20002D8")]
	public delegate void Callback(Interface owner);
}
namespace VLB
{
	[Token(Token = "0x20002D9")]
	public static class BatchingHelper
	{
		[Token(Token = "0x4000BD4")]
		public const bool isGpuInstancingSupported = true;

		[Token(Token = "0x1700016C")]
		public static bool forceEnableDepthBlend
		{
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0xA51E00", Offset = "0xA51E00", VA = "0xA51E00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xA51EB8", Offset = "0xA51EB8", VA = "0xA51EB8")]
		public static bool IsGpuInstancingEnabled(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xA51ED0", Offset = "0xA51ED0", VA = "0xA51ED0")]
		public static void SetMaterialProperties(Material material, bool enableGpuInstancing)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xA51EEC", Offset = "0xA51EEC", VA = "0xA51EEC")]
		public static bool CanBeBatched(VolumetricLightBeam beamA, VolumetricLightBeam beamB, ref string reasons)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xA523B4", Offset = "0xA523B4", VA = "0xA523B4")]
		public static bool CanBeBatched(VolumetricLightBeam beam, ref string reasons)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xA52518", Offset = "0xA52518", VA = "0xA52518")]
		private static void AppendErrorMessage(ref string message, string toAppend)
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x725DE4", Offset = "0x725DE4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x725DE4", Offset = "0x725DE4")]
	public class BeamGeometry : MonoBehaviour, MaterialModifier.Interface
	{
		[Token(Token = "0x20002DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x725E54", Offset = "0x725E54")]
		private sealed class <CoUpdateFadeOut>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BeamGeometry <>4__this;

			[Token(Token = "0x17000178")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E98")]
				[Address(RVA = "0xAF4A88", Offset = "0xAF4A88", VA = "0xAF4A88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000179")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E9A")]
				[Address(RVA = "0xAF4AF0", Offset = "0xAF4AF0", VA = "0xAF4AF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E95")]
			[Address(RVA = "0xAEFC54", Offset = "0xAEFC54", VA = "0xAEFC54")]
			[DebuggerHidden]
			public <CoUpdateFadeOut>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000E96")]
			[Address(RVA = "0xAF49F4", Offset = "0xAF49F4", VA = "0xAF49F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E97")]
			[Address(RVA = "0xAF49F8", Offset = "0xAF49F8", VA = "0xAF49F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xAF4A90", Offset = "0xAF4A90", VA = "0xAF4A90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Matrix4x4 m_ColorGradientMatrix;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshType m_CurrentMeshType;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_CustomMaterial;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialModifier.Callback m_MaterialModifierCallback;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine m_CoFadeOut;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72AF70", Offset = "0x72AF70")]
		private MeshRenderer <meshRenderer>k__BackingField;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72AF80", Offset = "0x72AF80")]
		private MeshFilter <meshFilter>k__BackingField;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72AF90", Offset = "0x72AF90")]
		private Mesh <coneMesh>k__BackingField;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Camera m_CurrentCameraRenderingSRP;

		[Token(Token = "0x1700016D")]
		public MeshRenderer meshRenderer
		{
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0xAEF954", Offset = "0xAEF954", VA = "0xAEF954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733674", Offset = "0x733674")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0xAEF95C", Offset = "0xAEF95C", VA = "0xAEF95C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733684", Offset = "0x733684")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public MeshFilter meshFilter
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0xAEF964", Offset = "0xAEF964", VA = "0xAEF964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733694", Offset = "0x733694")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0xAEF96C", Offset = "0xAEF96C", VA = "0xAEF96C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7336A4", Offset = "0x7336A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public Mesh coneMesh
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0xAEF974", Offset = "0xAEF974", VA = "0xAEF974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7336B4", Offset = "0x7336B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xAEF97C", Offset = "0xAEF97C", VA = "0xAEF97C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7336C4", Offset = "0x7336C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public bool visible
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xAEF984", Offset = "0xAEF984", VA = "0xAEF984")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0xAEF9A0", Offset = "0xAEF9A0", VA = "0xAEF9A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public int sortingLayerID
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0xAEF9C0", Offset = "0xAEF9C0", VA = "0xAEF9C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0xAEF9DC", Offset = "0xAEF9DC", VA = "0xAEF9DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public int sortingOrder
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0xAEF9F8", Offset = "0xAEF9F8", VA = "0xAEF9F8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0xAEFA14", Offset = "0xAEFA14", VA = "0xAEFA14")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public bool _INTERNAL_IsFadeOutCoroutineRunning
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0xAEFA30", Offset = "0xAEFA30", VA = "0xAEFA30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000174")]
		public static bool isCustomRenderPipelineSupported
		{
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0xAF04D8", Offset = "0xAF04D8", VA = "0xAF04D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000175")]
		private bool shouldUseGPUInstancedMaterial
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0xAF04E0", Offset = "0xAF04E0", VA = "0xAF04E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000176")]
		private bool isNoiseEnabled
		{
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0xAF2A24", Offset = "0xAF2A24", VA = "0xAF2A24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000177")]
		private bool isDepthBlendEnabled
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0xAF2C14", Offset = "0xAF2C14", VA = "0xAF2C14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xAEFA40", Offset = "0xAEFA40", VA = "0xAEFA40")]
		private float ComputeFadeOutFactor(Transform camTransform)
		{
			return default(float);
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xAEFBE4", Offset = "0xAEFBE4", VA = "0xAEFBE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7336D4", Offset = "0x7336D4")]
		private IEnumerator CoUpdateFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xAEFC80", Offset = "0xAEFC80", VA = "0xAEFC80")]
		private void ComputeFadeOutFactor()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xAEFE24", Offset = "0xAEFE24", VA = "0xAEFE24")]
		private void SetFadeOutFactorProp(float value)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xAF0168", Offset = "0xAF0168", VA = "0xAF0168")]
		public void RestartFadeOutCoroutine()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xAF0234", Offset = "0xAF0234", VA = "0xAF0234")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xAF02F4", Offset = "0xAF02F4", VA = "0xAF02F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xAF039C", Offset = "0xAF039C", VA = "0xAF039C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xAF05C0", Offset = "0xAF05C0", VA = "0xAF05C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xAF0708", Offset = "0xAF0708", VA = "0xAF0708")]
		public void Initialize(VolumetricLightBeam master)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xAF0F10", Offset = "0xAF0F10", VA = "0xAF0F10")]
		public void RegenerateMesh()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xAF26C0", Offset = "0xAF26C0", VA = "0xAF26C0")]
		private Vector3 ComputeLocalMatrix()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xAF0BEC", Offset = "0xAF0BEC", VA = "0xAF0BEC")]
		private bool ApplyMaterial()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xAEFFB0", Offset = "0xAEFFB0", VA = "0xAEFFB0", Slot = "4")]
		public void SetMaterialProp(int nameID, float value)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xAF336C", Offset = "0xAF336C", VA = "0xAF336C", Slot = "5")]
		public void SetMaterialProp(int nameID, Vector4 value)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xAF3490", Offset = "0xAF3490", VA = "0xAF3490", Slot = "6")]
		public void SetMaterialProp(int nameID, Color value)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xAF35B4", Offset = "0xAF35B4", VA = "0xAF35B4", Slot = "7")]
		public void SetMaterialProp(int nameID, Matrix4x4 value)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xAF36E0", Offset = "0xAF36E0", VA = "0xAF36E0", Slot = "8")]
		public void SetMaterialProp(int nameID, Texture value)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xAEFEEC", Offset = "0xAEFEEC", VA = "0xAEFEEC")]
		private void MaterialChangeStart()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xAF00A4", Offset = "0xAF00A4", VA = "0xAF00A4")]
		private void MaterialChangeStop()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xAF37BC", Offset = "0xAF37BC", VA = "0xAF37BC")]
		public void SetDynamicOcclusionCallback(string shaderKeyword, MaterialModifier.Callback cb)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xAF1D60", Offset = "0xAF1D60", VA = "0xAF1D60")]
		public void UpdateMaterialAndBounds()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xAF4110", Offset = "0xAF4110", VA = "0xAF4110")]
		private void UpdateMatricesPropertiesForGPUInstancingSRP()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xAF4364", Offset = "0xAF4364", VA = "0xAF4364")]
		private void OnBeginCameraRenderingSRP(ScriptableRenderContext context, Camera cam)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xAF436C", Offset = "0xAF436C", VA = "0xAF436C")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xAF43EC", Offset = "0xAF43EC", VA = "0xAF43EC")]
		private void OnWillCameraRenderThisBeam(Camera cam)
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xAF44DC", Offset = "0xAF44DC", VA = "0xAF44DC")]
		private void UpdateCameraRelatedProperties(Camera cam)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xAF49EC", Offset = "0xAF49EC", VA = "0xAF49EC")]
		public BeamGeometry()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x725E64", Offset = "0x725E64")]
	public class Config : ScriptableObject
	{
		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool geometryOverrideLayer;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int geometryLayerID;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string geometryTag;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int geometryRenderQueue;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72AFA0", Offset = "0x72AFA0")]
		[SerializeField]
		private RenderPipeline _RenderPipeline;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72AFEC", Offset = "0x72AFEC")]
		[SerializeField]
		private RenderingMode _RenderingMode;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ditheringFactor;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sharedMeshSides;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int sharedMeshSegments;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B038", Offset = "0x72B038")]
		public float globalNoiseScale;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 globalNoiseVelocity;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string fadeOutCameraTag;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HighlightNull]
		public TextAsset noise3DData;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int noise3DSize;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HighlightNull]
		public ParticleSystem dustParticlesPrefab;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture2D ditheringNoiseTexture;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Material _DummyMaterial;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Shader _BeamShader;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform m_CachedFadeOutCamera;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Config m_Instance;

		[Token(Token = "0x1700017A")]
		public RenderPipeline renderPipeline
		{
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0xAF4AF8", Offset = "0xAF4AF8", VA = "0xAF4AF8")]
			get
			{
				return default(RenderPipeline);
			}
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xAF4B00", Offset = "0xAF4B00", VA = "0xAF4B00")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public RenderingMode renderingMode
		{
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0xAF4B6C", Offset = "0xAF4B6C", VA = "0xAF4B6C")]
			get
			{
				return default(RenderingMode);
			}
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0xAF4B74", Offset = "0xAF4B74", VA = "0xAF4B74")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public RenderingMode actualRenderingMode
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0xAF0574", Offset = "0xAF0574", VA = "0xAF0574")]
			get
			{
				return default(RenderingMode);
			}
		}

		[Token(Token = "0x1700017D")]
		public bool useSinglePassShader
		{
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0xAF4D20", Offset = "0xAF4D20", VA = "0xAF4D20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017E")]
		public bool requiresDoubleSidedMesh
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0xAF11F4", Offset = "0xAF11F4", VA = "0xAF11F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017F")]
		public Shader beamShader
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0xAF4D3C", Offset = "0xAF4D3C", VA = "0xAF4D3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public Transform fadeOutCameraTransform
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0xAEFDA0", Offset = "0xAEFDA0", VA = "0xAEFDA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		public bool hasRenderPipelineMismatch
		{
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0xAF4DE0", Offset = "0xAF4DE0", VA = "0xAF4DE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000182")]
		public static Config Instance
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0xAEFD40", Offset = "0xAEFD40", VA = "0xAEFD40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xAF4BE0", Offset = "0xAF4BE0", VA = "0xAF4BE0")]
		public void SetRenderingModeAndRefreshShader(RenderingMode mode)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xAF4BE4", Offset = "0xAF4BE4", VA = "0xAF4BE4")]
		public bool IsSRPBatcherSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xAF4D44", Offset = "0xAF4D44", VA = "0xAF4D44")]
		public void ForceUpdateFadeOutCamera()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xAF4E5C", Offset = "0xAF4E5C", VA = "0xAF4E5C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x733788", Offset = "0x733788")]
		private static void OnStartup()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xAF4FD4", Offset = "0xAF4FD4", VA = "0xAF4FD4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xAF4F48", Offset = "0xAF4F48", VA = "0xAF4F48")]
		private void RefreshGlobalShaderProperties()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xAF5094", Offset = "0xAF5094", VA = "0xAF5094")]
		public void ResetInternalData()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xAF5208", Offset = "0xAF5208", VA = "0xAF5208")]
		public ParticleSystem NewVolumetricDustParticles()
		{
			return null;
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xAF539C", Offset = "0xAF539C", VA = "0xAF539C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xAF53A8", Offset = "0xAF53A8", VA = "0xAF53A8")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xAF53AC", Offset = "0xAF53AC", VA = "0xAF53AC")]
		private static Config GetInstance(bool assertIfNotFound)
		{
			return null;
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xAF54E8", Offset = "0xAF54E8", VA = "0xAF54E8")]
		public Config()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x725E9C", Offset = "0x725E9C")]
	public class ConfigOverride : Config
	{
		[Token(Token = "0x4000BF7")]
		public const string kAssetName = "VLBConfigOverride";

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xAF55C8", Offset = "0xAF55C8", VA = "0xAF55C8")]
		public ConfigOverride()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public static class Consts
	{
		[Token(Token = "0x4000BF8")]
		private const string HelpUrlBase = "http://saladgamer.com/vlb-doc/";

		[Token(Token = "0x4000BF9")]
		public const string HelpUrlBeam = "http://saladgamer.com/vlb-doc/comp-lightbeam/";

		[Token(Token = "0x4000BFA")]
		public const string HelpUrlDustParticles = "http://saladgamer.com/vlb-doc/comp-dustparticles/";

		[Token(Token = "0x4000BFB")]
		public const string HelpUrlDynamicOcclusionRaycasting = "http://saladgamer.com/vlb-doc/comp-dynocclusion-raycasting/";

		[Token(Token = "0x4000BFC")]
		public const string HelpUrlDynamicOcclusionDepthBuffer = "http://saladgamer.com/vlb-doc/comp-dynocclusion-depthbuffer/";

		[Token(Token = "0x4000BFD")]
		public const string HelpUrlTriggerZone = "http://saladgamer.com/vlb-doc/comp-triggerzone/";

		[Token(Token = "0x4000BFE")]
		public const string HelpUrlSkewingHandle = "http://saladgamer.com/vlb-doc/comp-skewinghandle/";

		[Token(Token = "0x4000BFF")]
		public const string HelpUrlConfig = "http://saladgamer.com/vlb-doc/config/";

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly bool ProceduralObjectsVisibleInEditor;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Color FlatColor;

		[Token(Token = "0x4000C02")]
		public const ColorMode ColorModeDefault = ColorMode.Flat;

		[Token(Token = "0x4000C03")]
		public const float IntensityDefault = 1f;

		[Token(Token = "0x4000C04")]
		public const float IntensityMin = 0f;

		[Token(Token = "0x4000C05")]
		public const float IntensityMax = 8f;

		[Token(Token = "0x4000C06")]
		public const float SpotAngleDefault = 35f;

		[Token(Token = "0x4000C07")]
		public const float SpotAngleMin = 0.1f;

		[Token(Token = "0x4000C08")]
		public const float SpotAngleMax = 179.9f;

		[Token(Token = "0x4000C09")]
		public const float ConeRadiusStart = 0.1f;

		[Token(Token = "0x4000C0A")]
		public const MeshType GeomMeshType = MeshType.Shared;

		[Token(Token = "0x4000C0B")]
		public const int GeomSidesDefault = 18;

		[Token(Token = "0x4000C0C")]
		public const int GeomSidesMin = 3;

		[Token(Token = "0x4000C0D")]
		public const int GeomSidesMax = 256;

		[Token(Token = "0x4000C0E")]
		public const int GeomSegmentsDefault = 5;

		[Token(Token = "0x4000C0F")]
		public const int GeomSegmentsMin = 0;

		[Token(Token = "0x4000C10")]
		public const int GeomSegmentsMax = 64;

		[Token(Token = "0x4000C11")]
		public const bool GeomCap = false;

		[Token(Token = "0x4000C12")]
		public const AttenuationEquation AttenuationEquationDefault = AttenuationEquation.Quadratic;

		[Token(Token = "0x4000C13")]
		public const float AttenuationCustomBlending = 0.5f;

		[Token(Token = "0x4000C14")]
		public const float FallOffStart = 0f;

		[Token(Token = "0x4000C15")]
		public const float FallOffEnd = 3f;

		[Token(Token = "0x4000C16")]
		public const float FallOffDistancesMinThreshold = 0.01f;

		[Token(Token = "0x4000C17")]
		public const float DepthBlendDistance = 2f;

		[Token(Token = "0x4000C18")]
		public const float CameraClippingDistance = 0.5f;

		[Token(Token = "0x4000C19")]
		public const float FresnelPowMaxValue = 10f;

		[Token(Token = "0x4000C1A")]
		public const float FresnelPow = 8f;

		[Token(Token = "0x4000C1B")]
		public const float GlareFrontal = 0.5f;

		[Token(Token = "0x4000C1C")]
		public const float GlareBehind = 0.5f;

		[Token(Token = "0x4000C1D")]
		public const NoiseMode NoiseModeDefault = NoiseMode.Disabled;

		[Token(Token = "0x4000C1E")]
		public const float NoiseIntensityMin = 0f;

		[Token(Token = "0x4000C1F")]
		public const float NoiseIntensityMax = 1f;

		[Token(Token = "0x4000C20")]
		public const float NoiseIntensityDefault = 0.5f;

		[Token(Token = "0x4000C21")]
		public const float NoiseScaleMin = 0.01f;

		[Token(Token = "0x4000C22")]
		public const float NoiseScaleMax = 2f;

		[Token(Token = "0x4000C23")]
		public const float NoiseScaleDefault = 0.5f;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly Vector3 NoiseVelocityDefault;

		[Token(Token = "0x4000C25")]
		public const BlendingMode BlendingModeDefault = BlendingMode.Additive;

		[Token(Token = "0x4000C26")]
		public const ShaderAccuracy ShaderAccuracyDefault = ShaderAccuracy.Fast;

		[Token(Token = "0x4000C27")]
		public const float FadeOutBeginDefault = -150f;

		[Token(Token = "0x4000C28")]
		public const float FadeOutEndDefault = -200f;

		[Token(Token = "0x4000C29")]
		public const Dimensions DimensionsDefault = Dimensions.Dim3D;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Vector2 TiltDefault;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly LayerMask DynOcclusionLayerMaskDefault;

		[Token(Token = "0x4000C2C")]
		public const float DynOcclusionFadeDistanceToSurfaceDefault = 0.25f;

		[Token(Token = "0x4000C2D")]
		public const DynamicOcclusionUpdateRate DynamicOcclusionUpdateRateDefault = DynamicOcclusionUpdateRate.EveryXFrames;

		[Token(Token = "0x4000C2E")]
		public const int DynOcclusionWaitFramesCountDefault = 3;

		[Token(Token = "0x4000C2F")]
		public const Dimensions DynOcclusionRaycastingDimensionsDefault = Dimensions.Dim3D;

		[Token(Token = "0x4000C30")]
		public const bool DynOcclusionRaycastingConsiderTriggersDefault = false;

		[Token(Token = "0x4000C31")]
		public const float DynOcclusionRaycastingMinOccluderAreaDefault = 0f;

		[Token(Token = "0x4000C32")]
		public const float DynOcclusionRaycastingMinSurfaceRatioDefault = 0.5f;

		[Token(Token = "0x4000C33")]
		public const float DynOcclusionRaycastingMinSurfaceRatioMin = 50f;

		[Token(Token = "0x4000C34")]
		public const float DynOcclusionRaycastingMinSurfaceRatioMax = 100f;

		[Token(Token = "0x4000C35")]
		public const float DynOcclusionRaycastingMaxSurfaceDotDefault = 0.25f;

		[Token(Token = "0x4000C36")]
		public const float DynOcclusionRaycastingMaxSurfaceAngleMin = 45f;

		[Token(Token = "0x4000C37")]
		public const float DynOcclusionRaycastingMaxSurfaceAngleMax = 90f;

		[Token(Token = "0x4000C38")]
		public const PlaneAlignment DynOcclusionRaycastingPlaneAlignmentDefault = PlaneAlignment.Surface;

		[Token(Token = "0x4000C39")]
		public const float DynOcclusionRaycastingPlaneOffsetDefault = 0.1f;

		[Token(Token = "0x4000C3A")]
		public const int DynOcclusionDepthBufferDepthMapResolutionDefault = 32;

		[Token(Token = "0x4000C3B")]
		public const bool DynOcclusionDepthBufferOcclusionCullingDefault = true;

		[Token(Token = "0x4000C3C")]
		public const bool ConfigGeometryOverrideLayerDefault = true;

		[Token(Token = "0x4000C3D")]
		public const int ConfigGeometryLayerIDDefault = 1;

		[Token(Token = "0x4000C3E")]
		public const string ConfigGeometryTagDefault = "Untagged";

		[Token(Token = "0x4000C3F")]
		public const string ConfigFadeOutCameraTagDefault = "MainCamera";

		[Token(Token = "0x4000C40")]
		public const RenderQueue ConfigGeometryRenderQueueDefault = RenderQueue.Transparent;

		[Token(Token = "0x4000C41")]
		public const RenderPipeline ConfigGeometryRenderPipelineDefault = RenderPipeline.BuiltIn;

		[Token(Token = "0x4000C42")]
		public const RenderingMode ConfigGeometryRenderingModeDefault = RenderingMode.SinglePass;

		[Token(Token = "0x4000C43")]
		public const int ConfigNoise3DSizeDefault = 64;

		[Token(Token = "0x4000C44")]
		public const int ConfigSharedMeshSides = 24;

		[Token(Token = "0x4000C45")]
		public const int ConfigSharedMeshSegments = 5;

		[Token(Token = "0x4000C46")]
		public const float ConfigDitheringFactor = 0f;

		[Token(Token = "0x17000183")]
		public static HideFlags ProceduralObjectsHideFlags
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0xAF0A2C", Offset = "0xAF0A2C", VA = "0xAF0A2C")]
			get
			{
				return default(HideFlags);
			}
		}
	}
	[Token(Token = "0x20002DF")]
	public static class DummyMaterial
	{
	}
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x725ED4", Offset = "0x725ED4")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x725ED4", Offset = "0x725ED4")]
	public abstract class DynamicOcclusionAbstractBase : MonoBehaviour
	{
		[Token(Token = "0x20002E1")]
		protected enum ProcessOcclusionSource
		{
			[Token(Token = "0x4000C4F")]
			RenderLoop,
			[Token(Token = "0x4000C50")]
			OnEnable,
			[Token(Token = "0x4000C51")]
			EditorUpdate,
			[Token(Token = "0x4000C52")]
			User
		}

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DynamicOcclusionUpdateRate updateRate;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B0A4", Offset = "0x72B0A4")]
		public int waitXFrames;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _INTERNAL_ApplyRandomFrameOffset;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TransformUtils.Packed m_TransformPacked;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_LastFrameRendered;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VolumetricLightBeam m_Master;

		[Token(Token = "0x17000184")]
		public int _INTERNAL_LastFrameRendered
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0xAF5BB8", Offset = "0xAF5BB8", VA = "0xAF5BB8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000013")]
		public event Action onOcclusionProcessed
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0xAF5914", Offset = "0xAF5914", VA = "0xAF5914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733798", Offset = "0x733798")]
			add
			{
			}
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0xAF59B8", Offset = "0xAF59B8", VA = "0xAF59B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7337A8", Offset = "0x7337A8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xAF5730", Offset = "0xAF5730", VA = "0xAF5730")]
		public void ProcessOcclusionManually()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xAF5738", Offset = "0xAF5738", VA = "0xAF5738")]
		protected void ProcessOcclusion(ProcessOcclusionSource source)
		{
		}

		[Token(Token = "0x6000EBB")]
		protected abstract string GetShaderKeyword();

		[Token(Token = "0x6000EBC")]
		protected abstract MaterialManager.DynamicOcclusion GetDynamicOcclusionMode();

		[Token(Token = "0x6000EBD")]
		protected abstract bool OnProcessOcclusion(ProcessOcclusionSource source);

		[Token(Token = "0x6000EBE")]
		protected abstract void OnModifyMaterialCallback(MaterialModifier.Interface owner);

		[Token(Token = "0x6000EBF")]
		protected abstract void OnEnablePostValidate();

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xAF5BC0", Offset = "0xAF5BC0", VA = "0xAF5BC0", Slot = "9")]
		protected virtual void OnValidateProperties()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xAF5C3C", Offset = "0xAF5C3C", VA = "0xAF5C3C", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xAF5CB4", Offset = "0xAF5CB4", VA = "0xAF5CB4", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xAF5D0C", Offset = "0xAF5D0C", VA = "0xAF5D0C", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xAF5FC4", Offset = "0xAF5FC4", VA = "0xAF5FC4", Slot = "13")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xAF60EC", Offset = "0xAF60EC", VA = "0xAF60EC")]
		private void OnWillCameraRender(Camera cam)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xAF5CD0", Offset = "0xAF5CD0", VA = "0xAF5CD0")]
		private void DisableOcclusion()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xAF642C", Offset = "0xAF642C", VA = "0xAF642C")]
		protected DynamicOcclusionAbstractBase()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xAF649C", Offset = "0xAF649C", VA = "0xAF649C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7337B8", Offset = "0x7337B8")]
		private void <OnEnable>b__22_0()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x725F6C", Offset = "0x725F6C")]
	public class DynamicOcclusionDepthBuffer : DynamicOcclusionAbstractBase
	{
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask layerMask;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool useOcclusionCulling;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int depthMapResolution;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float fadeDistanceToSurface;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera m_DepthCamera;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_NeedToUpdateOcclusionNextFrame;

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xAF64A4", Offset = "0xAF64A4", VA = "0xAF64A4", Slot = "4")]
		protected override string GetShaderKeyword()
		{
			return null;
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xAF64EC", Offset = "0xAF64EC", VA = "0xAF64EC", Slot = "5")]
		protected override MaterialManager.DynamicOcclusion GetDynamicOcclusionMode()
		{
			return default(MaterialManager.DynamicOcclusion);
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xAF64F4", Offset = "0xAF64F4", VA = "0xAF64F4")]
		private void ProcessOcclusionInternal()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xAF6738", Offset = "0xAF6738", VA = "0xAF6738", Slot = "6")]
		protected override bool OnProcessOcclusion(ProcessOcclusionSource source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xAF67C8", Offset = "0xAF67C8", VA = "0xAF67C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xAF6524", Offset = "0xAF6524", VA = "0xAF6524")]
		private void UpdateDepthCameraPropertiesAccordingToBeam()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xAF69CC", Offset = "0xAF69CC", VA = "0xAF69CC")]
		public bool HasLayerMaskIssues()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xAF6A88", Offset = "0xAF6A88", VA = "0xAF6A88", Slot = "9")]
		protected override void OnValidateProperties()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xAF6B28", Offset = "0xAF6B28", VA = "0xAF6B28")]
		private void InstantiateOrActivateDepthCamera()
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xAF6DDC", Offset = "0xAF6DDC", VA = "0xAF6DDC", Slot = "8")]
		protected override void OnEnablePostValidate()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xAF6DE0", Offset = "0xAF6DE0", VA = "0xAF6DE0", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xAF6E88", Offset = "0xAF6E88", VA = "0xAF6E88", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xAF6E8C", Offset = "0xAF6E8C", VA = "0xAF6E8C", Slot = "11")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xAF6EB0", Offset = "0xAF6EB0", VA = "0xAF6EB0")]
		private void DestroyDepthCamera()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xAF701C", Offset = "0xAF701C", VA = "0xAF701C", Slot = "7")]
		protected override void OnModifyMaterialCallback(MaterialModifier.Interface owner)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xAF71AC", Offset = "0xAF71AC", VA = "0xAF71AC")]
		public DynamicOcclusionDepthBuffer()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x725FB8", Offset = "0x725FB8")]
	public class DynamicOcclusionRaycasting : DynamicOcclusionAbstractBase
	{
		[Token(Token = "0x20002E4")]
		public class HitResult
		{
			[Token(Token = "0x4000C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x4000C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 normal;

			[Token(Token = "0x4000C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float distance;

			[Token(Token = "0x4000C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Collider2D collider2D;

			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Collider collider3D;

			[Token(Token = "0x1700018A")]
			public bool hasCollider
			{
				[Token(Token = "0x6000EFA")]
				[Address(RVA = "0xAF8618", Offset = "0xAF8618", VA = "0xAF8618")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700018B")]
			public string name
			{
				[Token(Token = "0x6000EFB")]
				[Address(RVA = "0xAF9170", Offset = "0xAF9170", VA = "0xAF9170")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			public Bounds bounds
			{
				[Token(Token = "0x6000EFC")]
				[Address(RVA = "0xAF924C", Offset = "0xAF924C", VA = "0xAF924C")]
				get
				{
					return default(Bounds);
				}
			}

			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0xAF803C", Offset = "0xAF803C", VA = "0xAF803C")]
			public HitResult(RaycastHit hit3D)
			{
			}

			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0xAF8140", Offset = "0xAF8140", VA = "0xAF8140")]
			public HitResult(RaycastHit2D hit2D)
			{
			}

			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0xAF80AC", Offset = "0xAF80AC", VA = "0xAF80AC")]
			public HitResult()
			{
			}
		}

		[Token(Token = "0x20002E5")]
		private enum Direction
		{
			[Token(Token = "0x4000C6C")]
			Up = 0,
			[Token(Token = "0x4000C6D")]
			Down = 1,
			[Token(Token = "0x4000C6E")]
			Left = 2,
			[Token(Token = "0x4000C6F")]
			Right = 3,
			[Token(Token = "0x4000C70")]
			Max2D = 1,
			[Token(Token = "0x4000C71")]
			Max3D = 3
		}

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dimensions dimensions;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask layerMask;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool considerTriggers;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float minOccluderArea;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float minSurfaceRatio;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float maxSurfaceDot;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PlaneAlignment planeAlignment;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float planeOffset;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B0EC", Offset = "0x72B0EC")]
		public float fadeDistanceToSurface;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B124", Offset = "0x72B124")]
		private HitResult <currentHit>k__BackingField;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_RangeMultiplier;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B134", Offset = "0x72B134")]
		private Plane <planeEquationWS>k__BackingField;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private uint m_PrevNonSubHitDirectionId;

		[Token(Token = "0x17000185")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x736270", Offset = "0x736270")]
		public float fadeDistanceToPlane
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xAF726C", Offset = "0xAF726C", VA = "0xAF726C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xAF7274", Offset = "0xAF7274", VA = "0xAF7274")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public HitResult currentHit
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0xAF73EC", Offset = "0xAF73EC", VA = "0xAF73EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7337C8", Offset = "0x7337C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0xAF73F4", Offset = "0xAF73F4", VA = "0xAF73F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7337D8", Offset = "0x7337D8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public Plane planeEquationWS
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0xAF744C", Offset = "0xAF744C", VA = "0xAF744C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7337E8", Offset = "0x7337E8")]
			get
			{
				return default(Plane);
			}
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0xAF7458", Offset = "0xAF7458", VA = "0xAF7458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7337F8", Offset = "0x7337F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000188")]
		private QueryTriggerInteraction queryTriggerInteraction
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0xAF781C", Offset = "0xAF781C", VA = "0xAF781C")]
			get
			{
				return default(QueryTriggerInteraction);
			}
		}

		[Token(Token = "0x17000189")]
		private float raycastMaxDistance
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0xAF7830", Offset = "0xAF7830", VA = "0xAF7830")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xAF727C", Offset = "0xAF727C", VA = "0xAF727C")]
		public bool IsColliderHiddenByDynamicOccluder(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xAF73FC", Offset = "0xAF73FC", VA = "0xAF73FC", Slot = "4")]
		protected override string GetShaderKeyword()
		{
			return null;
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xAF7444", Offset = "0xAF7444", VA = "0xAF7444", Slot = "5")]
		protected override MaterialManager.DynamicOcclusion GetDynamicOcclusionMode()
		{
			return default(MaterialManager.DynamicOcclusion);
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xAF7464", Offset = "0xAF7464", VA = "0xAF7464", Slot = "9")]
		protected override void OnValidateProperties()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xAF7504", Offset = "0xAF7504", VA = "0xAF7504", Slot = "8")]
		protected override void OnEnablePostValidate()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xAF750C", Offset = "0xAF750C", VA = "0xAF750C", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xAF7640", Offset = "0xAF7640", VA = "0xAF7640")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xAF7720", Offset = "0xAF7720", VA = "0xAF7720")]
		private Vector3 GetRandomVectorAround(Vector3 direction, float angleDiff)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xAF7938", Offset = "0xAF7938", VA = "0xAF7938")]
		private HitResult GetBestHit(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xAF794C", Offset = "0xAF794C", VA = "0xAF794C")]
		private HitResult GetBestHit3D(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xAF7C24", Offset = "0xAF7C24", VA = "0xAF7C24")]
		private HitResult GetBestHit2D(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xAF8228", Offset = "0xAF8228", VA = "0xAF8228")]
		private uint GetDirectionCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xAF8240", Offset = "0xAF8240", VA = "0xAF8240")]
		private Vector3 GetDirection(uint dirInt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xAF8524", Offset = "0xAF8524", VA = "0xAF8524")]
		private bool IsHitValid(HitResult hit, Vector3 forwardVec)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xAF86CC", Offset = "0xAF86CC", VA = "0xAF86CC", Slot = "6")]
		protected override bool OnProcessOcclusion(ProcessOcclusionSource source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xAF7534", Offset = "0xAF7534", VA = "0xAF7534")]
		private void SetHit(HitResult hit)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xAF8D74", Offset = "0xAF8D74", VA = "0xAF8D74", Slot = "7")]
		protected override void OnModifyMaterialCallback(MaterialModifier.Interface owner)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xAF8BE0", Offset = "0xAF8BE0", VA = "0xAF8BE0")]
		private void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xAF8B9C", Offset = "0xAF8B9C", VA = "0xAF8B9C")]
		private void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xAF9098", Offset = "0xAF9098", VA = "0xAF9098")]
		private void SetPlaneWS(Plane planeWS)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xAF90A4", Offset = "0xAF90A4", VA = "0xAF90A4")]
		public DynamicOcclusionRaycasting()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public enum ColorMode
	{
		[Token(Token = "0x4000C73")]
		Flat,
		[Token(Token = "0x4000C74")]
		Gradient
	}
	[Token(Token = "0x20002E7")]
	public enum AttenuationEquation
	{
		[Token(Token = "0x4000C76")]
		Linear,
		[Token(Token = "0x4000C77")]
		Quadratic,
		[Token(Token = "0x4000C78")]
		Blend
	}
	[Token(Token = "0x20002E8")]
	public enum BlendingMode
	{
		[Token(Token = "0x4000C7A")]
		Additive,
		[Token(Token = "0x4000C7B")]
		SoftAdditive,
		[Token(Token = "0x4000C7C")]
		TraditionalTransparency
	}
	[Token(Token = "0x20002E9")]
	public enum ShaderAccuracy
	{
		[Token(Token = "0x4000C7E")]
		Fast,
		[Token(Token = "0x4000C7F")]
		High
	}
	[Token(Token = "0x20002EA")]
	public enum NoiseMode
	{
		[Token(Token = "0x4000C81")]
		Disabled,
		[Token(Token = "0x4000C82")]
		WorldSpace,
		[Token(Token = "0x4000C83")]
		LocalSpace
	}
	[Token(Token = "0x20002EB")]
	public enum MeshType
	{
		[Token(Token = "0x4000C85")]
		Shared,
		[Token(Token = "0x4000C86")]
		Custom
	}
	[Token(Token = "0x20002EC")]
	public enum RenderPipeline
	{
		[Token(Token = "0x4000C88")]
		BuiltIn,
		[Token(Token = "0x4000C89")]
		URP,
		[Token(Token = "0x4000C8A")]
		HDRP
	}
	[Token(Token = "0x20002ED")]
	public enum RenderingMode
	{
		[Token(Token = "0x4000C8C")]
		MultiPass,
		[Token(Token = "0x4000C8D")]
		SinglePass,
		[Token(Token = "0x4000C8E")]
		GPUInstancing,
		[Token(Token = "0x4000C8F")]
		SRPBatcher
	}
	[Token(Token = "0x20002EE")]
	public enum RenderQueue
	{
		[Token(Token = "0x4000C91")]
		Custom = 0,
		[Token(Token = "0x4000C92")]
		Background = 1000,
		[Token(Token = "0x4000C93")]
		Geometry = 2000,
		[Token(Token = "0x4000C94")]
		AlphaTest = 2450,
		[Token(Token = "0x4000C95")]
		GeometryLast = 2500,
		[Token(Token = "0x4000C96")]
		Transparent = 3000,
		[Token(Token = "0x4000C97")]
		Overlay = 4000
	}
	[Token(Token = "0x20002EF")]
	public enum Dimensions
	{
		[Token(Token = "0x4000C99")]
		Dim3D,
		[Token(Token = "0x4000C9A")]
		Dim2D
	}
	[Token(Token = "0x20002F0")]
	public enum PlaneAlignment
	{
		[Token(Token = "0x4000C9C")]
		Surface,
		[Token(Token = "0x4000C9D")]
		Beam
	}
	[Token(Token = "0x20002F1")]
	[Flags]
	public enum DynamicOcclusionUpdateRate
	{
		[Token(Token = "0x4000C9F")]
		Never = 1,
		[Token(Token = "0x4000CA0")]
		OnEnable = 2,
		[Token(Token = "0x4000CA1")]
		OnBeamMove = 4,
		[Token(Token = "0x4000CA2")]
		EveryXFrames = 8,
		[Token(Token = "0x4000CA3")]
		OnBeamMoveAndEveryXFrames = 0xC
	}
	[Token(Token = "0x20002F2")]
	public enum ParticlesDirection
	{
		[Token(Token = "0x4000CA5")]
		Random,
		[Token(Token = "0x4000CA6")]
		LocalSpace,
		[Token(Token = "0x4000CA7")]
		WorldSpace
	}
	[Token(Token = "0x20002F3")]
	public static class GlobalMesh
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh ms_Mesh;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool ms_DoubleSided;

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xAF1B50", Offset = "0xAF1B50", VA = "0xAF1B50")]
		public static Mesh Get()
		{
			return null;
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xAF9344", Offset = "0xAF9344", VA = "0xAF9344")]
		public static void Destroy()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public sealed class HighlightNullAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xAF9448", Offset = "0xAF9448", VA = "0xAF9448")]
		public HighlightNullAttribute()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public static class MaterialManager
	{
		[Token(Token = "0x20002F6")]
		public enum BlendingMode
		{
			[Token(Token = "0x4000CB1")]
			Additive,
			[Token(Token = "0x4000CB2")]
			SoftAdditive,
			[Token(Token = "0x4000CB3")]
			TraditionalTransparency,
			[Token(Token = "0x4000CB4")]
			Count
		}

		[Token(Token = "0x20002F7")]
		public enum Noise3D
		{
			[Token(Token = "0x4000CB6")]
			Off,
			[Token(Token = "0x4000CB7")]
			On,
			[Token(Token = "0x4000CB8")]
			Count
		}

		[Token(Token = "0x20002F8")]
		public enum DepthBlend
		{
			[Token(Token = "0x4000CBA")]
			Off,
			[Token(Token = "0x4000CBB")]
			On,
			[Token(Token = "0x4000CBC")]
			Count
		}

		[Token(Token = "0x20002F9")]
		public enum ColorGradient
		{
			[Token(Token = "0x4000CBE")]
			Off,
			[Token(Token = "0x4000CBF")]
			MatrixLow,
			[Token(Token = "0x4000CC0")]
			MatrixHigh,
			[Token(Token = "0x4000CC1")]
			Count
		}

		[Token(Token = "0x20002FA")]
		public enum DynamicOcclusion
		{
			[Token(Token = "0x4000CC3")]
			Off,
			[Token(Token = "0x4000CC4")]
			ClippingPlane,
			[Token(Token = "0x4000CC5")]
			DepthTexture,
			[Token(Token = "0x4000CC6")]
			Count
		}

		[Token(Token = "0x20002FB")]
		public enum MeshSkewing
		{
			[Token(Token = "0x4000CC8")]
			Off,
			[Token(Token = "0x4000CC9")]
			On,
			[Token(Token = "0x4000CCA")]
			Count
		}

		[Token(Token = "0x20002FC")]
		public enum ShaderAccuracy
		{
			[Token(Token = "0x4000CCC")]
			Fast,
			[Token(Token = "0x4000CCD")]
			High,
			[Token(Token = "0x4000CCE")]
			Count
		}

		[Token(Token = "0x20002FD")]
		public class StaticProperties
		{
			[Token(Token = "0x4000CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BlendingMode blendingMode;

			[Token(Token = "0x4000CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Noise3D noise3D;

			[Token(Token = "0x4000CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DepthBlend depthBlend;

			[Token(Token = "0x4000CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ColorGradient colorGradient;

			[Token(Token = "0x4000CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DynamicOcclusion dynamicOcclusion;

			[Token(Token = "0x4000CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public MeshSkewing meshSkewing;

			[Token(Token = "0x4000CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ShaderAccuracy shaderAccuracy;

			[Token(Token = "0x1700018D")]
			public int materialID
			{
				[Token(Token = "0x6000F05")]
				[Address(RVA = "0xAF95C4", Offset = "0xAF95C4", VA = "0xAF95C4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6000F06")]
			[Address(RVA = "0xAF2E48", Offset = "0xAF2E48", VA = "0xAF2E48")]
			public void ApplyToMaterial(Material mat)
			{
			}

			[Token(Token = "0x6000F07")]
			[Address(RVA = "0xAF2D2C", Offset = "0xAF2D2C", VA = "0xAF2D2C")]
			public StaticProperties()
			{
			}
		}

		[Token(Token = "0x20002FE")]
		private class MaterialsGroup
		{
			[Token(Token = "0x4000CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material[] materials;

			[Token(Token = "0x6000F08")]
			[Address(RVA = "0xAF953C", Offset = "0xAF953C", VA = "0xAF953C")]
			public MaterialsGroup()
			{
			}
		}

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly BlendMode[] BlendingMode_SrcFactor;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly BlendMode[] BlendingMode_DstFactor;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly bool[] BlendingMode_AlphaAsBlack;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int kStaticPropertiesCount;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Hashtable ms_MaterialsGroup;

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xAF0AA0", Offset = "0xAF0AA0", VA = "0xAF0AA0")]
		public static Material NewMaterialTransient(bool gpuInstanced)
		{
			return null;
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xAF9450", Offset = "0xAF9450", VA = "0xAF9450")]
		public static Material NewMaterialPersistent(Shader shader, bool gpuInstanced)
		{
			return null;
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xAF30C8", Offset = "0xAF30C8", VA = "0xAF30C8")]
		public static Material GetInstancedMaterial(uint groupID, StaticProperties staticProps)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FF")]
	public static class MeshGenerator
	{
		[Token(Token = "0x4000CD7")]
		private const float kMinTruncatedRadius = 0.001f;

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xAF975C", Offset = "0xAF975C", VA = "0xAF975C")]
		private static float GetAngleOffset(int numSides)
		{
			return default(float);
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xAF9774", Offset = "0xAF9774", VA = "0xAF9774")]
		public static Mesh GenerateConeZ_RadiusAndAngle(float lengthZ, float radiusStart, float coneAngle, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xAF9840", Offset = "0xAF9840", VA = "0xAF9840")]
		public static Mesh GenerateConeZ_Angle(float lengthZ, float coneAngle, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xAF1210", Offset = "0xAF1210", VA = "0xAF1210")]
		public static Mesh GenerateConeZ_Radius(float lengthZ, float radiusStart, float radiusEnd, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xAF4010", Offset = "0xAF4010", VA = "0xAF4010")]
		public static Bounds ComputeBounds(float lengthZ, float radiusStart, float radiusEnd)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xAF9854", Offset = "0xAF9854", VA = "0xAF9854")]
		public static int GetVertexCount(int numSides, int numSegments, bool geomCap, bool doubleSided)
		{
			return default(int);
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xAF9870", Offset = "0xAF9870", VA = "0xAF9870")]
		public static int GetIndicesCount(int numSides, int numSegments, bool geomCap, bool doubleSided)
		{
			return default(int);
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xAF9898", Offset = "0xAF9898", VA = "0xAF9898")]
		public static int GetSharedMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xAF9934", Offset = "0xAF9934", VA = "0xAF9934")]
		public static int GetSharedMeshIndicesCount()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000300")]
	public static class Noise3D
	{
		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool ms_IsSupportedChecked;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_IsSupported;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture3D ms_NoiseTexture;

		[Token(Token = "0x4000CDB")]
		private const HideFlags kHideFlags = HideFlags.HideAndDontSave;

		[Token(Token = "0x4000CDC")]
		private const int kMinShaderLevel = 35;

		[Token(Token = "0x1700018E")]
		public static bool isSupported
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0xAF2AC4", Offset = "0xAF2AC4", VA = "0xAF2AC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018F")]
		public static bool isProperlyLoaded
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0xAF9A74", Offset = "0xAF9A74", VA = "0xAF9A74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000190")]
		public static string isNotSupportedString
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0xAF99D4", Offset = "0xAF99D4", VA = "0xAF99D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xAF9B0C", Offset = "0xAF9B0C", VA = "0xAF9B0C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x733808", Offset = "0x733808")]
		private static void OnStartUp()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xAF3C90", Offset = "0xAF3C90", VA = "0xAF3C90")]
		public static void LoadIfNeeded()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xAF9B68", Offset = "0xAF9B68", VA = "0xAF9B68")]
		private static Texture3D LoadTexture3D(TextAsset textData, int size)
		{
			return null;
		}
	}
	[Token(Token = "0x2000301")]
	public class PolygonHelper : MonoBehaviour
	{
		[Token(Token = "0x2000302")]
		public struct Plane2D
		{
			[Token(Token = "0x4000CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 normal;

			[Token(Token = "0x4000CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float distance;

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0xAF9E38", Offset = "0xAF9E38", VA = "0xAF9E38")]
			public float Distance(Vector2 point)
			{
				return default(float);
			}

			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0xAF9ED4", Offset = "0xAF9ED4", VA = "0xAF9ED4")]
			public Vector2 ClosestPoint(Vector2 pt)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0xAF9F94", Offset = "0xAF9F94", VA = "0xAF9F94")]
			public Vector2 Intersect(Vector2 p1, Vector2 p2)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0xAFA1C8", Offset = "0xAFA1C8", VA = "0xAFA1C8")]
			public bool GetSide(Vector2 point)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0xAFA1E4", Offset = "0xAFA1E4", VA = "0xAFA1E4")]
			public static Plane2D FromPoints(Vector3 p1, Vector3 p2)
			{
				return default(Plane2D);
			}

			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0xAFA2E4", Offset = "0xAFA2E4", VA = "0xAFA2E4")]
			public static Plane2D FromNormalAndPoint(Vector3 normalizedNormal, Vector3 p1)
			{
				return default(Plane2D);
			}

			[Token(Token = "0x6000F20")]
			[Address(RVA = "0xAFA38C", Offset = "0xAFA38C", VA = "0xAFA38C")]
			public void Flip()
			{
			}

			[Token(Token = "0x6000F21")]
			[Address(RVA = "0xAFA418", Offset = "0xAFA418", VA = "0xAFA418")]
			public Vector2[] CutConvex(Vector2[] poly)
			{
				return null;
			}

			[Token(Token = "0x6000F22")]
			[Address(RVA = "0xAFA600", Offset = "0xAFA600", VA = "0xAFA600", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xAF9E30", Offset = "0xAF9E30", VA = "0xAF9E30")]
		public PolygonHelper()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public static class SRPHelper
	{
		[Token(Token = "0x2000304")]
		public enum RenderPipeline
		{
			[Token(Token = "0x4000CE1")]
			Undefined,
			[Token(Token = "0x4000CE2")]
			BuiltIn,
			[Token(Token = "0x4000CE3")]
			URP,
			[Token(Token = "0x4000CE4")]
			LWRP,
			[Token(Token = "0x4000CE5")]
			HDRP
		}

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RenderPipeline m_RenderPipelineCached;

		[Token(Token = "0x17000191")]
		public static RenderPipeline renderPipelineType
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0xAF4C6C", Offset = "0xAF4C6C", VA = "0xAF4C6C")]
			get
			{
				return default(RenderPipeline);
			}
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xAFA6C0", Offset = "0xAFA6C0", VA = "0xAFA6C0")]
		private static RenderPipeline ComputeRenderPipeline()
		{
			return default(RenderPipeline);
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xAF4270", Offset = "0xAF4270", VA = "0xAF4270")]
		public static bool IsUsingCustomRenderPipeline()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xAF0660", Offset = "0xAF0660", VA = "0xAF0660")]
		public static void RegisterOnBeginCameraRendering(Action<ScriptableRenderContext, Camera> cb)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xAF043C", Offset = "0xAF043C", VA = "0xAF043C")]
		public static void UnregisterOnBeginCameraRendering(Action<ScriptableRenderContext, Camera> cb)
		{
		}
	}
	[Token(Token = "0x2000305")]
	public static class ShaderProperties
	{
		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int FadeOutFactor;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int ConeSlopeCosSin;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int ConeRadius;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int ConeApexOffsetZ;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int ColorFlat;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int AlphaInside;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int AlphaOutside;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int AttenuationLerpLinearQuad;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int DistanceFallOff;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int DistanceCamClipping;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int FresnelPow;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly int GlareBehind;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly int GlareFrontal;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static readonly int DrawCap;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly int DepthBlendDistance;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static readonly int NoiseVelocityAndScale;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly int NoiseParam;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static readonly int CameraParams;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly int ColorGradientMatrix;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static readonly int LocalToWorldMatrix;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly int WorldToLocalMatrix;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static readonly int BlendSrcFactor;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly int BlendDstFactor;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static readonly int DynamicOcclusionClippingPlaneWS;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly int DynamicOcclusionClippingPlaneProps;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static readonly int DynamicOcclusionDepthTexture;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly int DynamicOcclusionDepthProps;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static readonly int LocalForwardDirection;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly int TiltVector;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public static readonly int AdditionalClippingPlaneWS;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly int GlobalNoiseTex3D;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public static readonly int GlobalNoiseCustomTime;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly int GlobalDitheringFactor;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public static readonly int GlobalDitheringNoiseTex;

		[Token(Token = "0x4000D08")]
		public const string KeywordSRP = "VLB_SRP_API";
	}
	[Token(Token = "0x2000306")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x726014", Offset = "0x726014")]
	public class SkewingHandle : MonoBehaviour
	{
		[Token(Token = "0x2000307")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726060", Offset = "0x726060")]
		private sealed class <CoUpdate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewingHandle <>4__this;

			[Token(Token = "0x17000192")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F36")]
				[Address(RVA = "0xAFB050", Offset = "0xAFB050", VA = "0xAFB050", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000193")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F38")]
				[Address(RVA = "0xAFB0B8", Offset = "0xAFB0B8", VA = "0xAFB0B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F33")]
			[Address(RVA = "0xAFAFAC", Offset = "0xAFAFAC", VA = "0xAFAFAC")]
			[DebuggerHidden]
			public <CoUpdate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000F34")]
			[Address(RVA = "0xAFAFE0", Offset = "0xAFAFE0", VA = "0xAFAFE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F35")]
			[Address(RVA = "0xAFAFE4", Offset = "0xAFAFE4", VA = "0xAFAFE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F37")]
			[Address(RVA = "0xAFB058", Offset = "0xAFB058", VA = "0xAFB058", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VolumetricLightBeam volumetricLightBeam;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool shouldUpdateEachFrame;

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xAFAC5C", Offset = "0xAFAC5C", VA = "0xAFAC5C")]
		public bool IsAttachedToSelf()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xAFAD40", Offset = "0xAFAD40", VA = "0xAFAD40")]
		public bool CanSetSkewingVector()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xAFADE8", Offset = "0xAFADE8", VA = "0xAFADE8")]
		public bool CanUpdateEachFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xAFAE2C", Offset = "0xAFAE2C", VA = "0xAFAE2C")]
		private bool ShouldUpdateEachFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xAFAE40", Offset = "0xAFAE40", VA = "0xAFAE40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xAFAEE0", Offset = "0xAFAEE0", VA = "0xAFAEE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xAFAF3C", Offset = "0xAFAF3C", VA = "0xAFAF3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x733818", Offset = "0x733818")]
		private IEnumerator CoUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xAFAE74", Offset = "0xAFAE74", VA = "0xAFAE74")]
		private void SetSkewingVector()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xAFAFD8", Offset = "0xAFAFD8", VA = "0xAFAFD8")]
		public SkewingHandle()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public static class TransformUtils
	{
		[Token(Token = "0x2000309")]
		public class Packed
		{
			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion rotation;

			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 lossyScale;

			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0xAFB0C0", Offset = "0xAFB0C0", VA = "0xAFB0C0")]
			public Packed()
			{
			}
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xAF5B10", Offset = "0xAF5B10", VA = "0xAF5B10")]
		public static Packed GetWorldPacked(this Transform self)
		{
			return null;
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xAF6268", Offset = "0xAF6268", VA = "0xAF6268")]
		public static bool IsSame(this Transform self, Packed packed)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200030A")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x726080", Offset = "0x726080")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x726080", Offset = "0x726080")]
	public class TriggerZone : MonoBehaviour
	{
		[Token(Token = "0x200030B")]
		private enum TriggerZoneUpdateRate
		{
			[Token(Token = "0x4000D18")]
			OnEnable,
			[Token(Token = "0x4000D19")]
			OnOcclusionChange
		}

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool setIsTrigger;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rangeMultiplier;

		[Token(Token = "0x4000D13")]
		private const int kMeshColliderNumSides = 8;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VolumetricLightBeam m_Beam;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DynamicOcclusionRaycasting m_DynamicOcclusionRaycasting;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PolygonCollider2D m_PolygonCollider2D;

		[Token(Token = "0x17000194")]
		private TriggerZoneUpdateRate updateRate
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0xAFB0C8", Offset = "0xAFB0C8", VA = "0xAFB0C8")]
			get
			{
				return default(TriggerZoneUpdateRate);
			}
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xAFB15C", Offset = "0xAFB15C", VA = "0xAFB15C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xAFB8E8", Offset = "0xAFB8E8", VA = "0xAFB8E8")]
		private void OnOcclusionProcessed()
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xAFB290", Offset = "0xAFB290", VA = "0xAFB290")]
		private void ComputeZone()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xAFB9F0", Offset = "0xAFB9F0", VA = "0xAFB9F0")]
		public TriggerZone()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public static class Utils
	{
		[Token(Token = "0x200030D")]
		public enum FloatPackingPrecision
		{
			[Token(Token = "0x4000D1D")]
			High = 64,
			[Token(Token = "0x4000D1E")]
			Low = 8,
			[Token(Token = "0x4000D1F")]
			Undef = 0
		}

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FloatPackingPrecision ms_FloatPackingPrecision;

		[Token(Token = "0x4000D1B")]
		private const int kFloatPackingHighMinShaderLevel = 35;

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xAFBA08", Offset = "0xAFBA08", VA = "0xAFBA08")]
		public static float ComputeConeRadiusEnd(float fallOffEnd, float spotAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6000F42")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xAF0DEC", Offset = "0xAF0DEC", VA = "0xAF0DEC")]
		public static string GetPath(Transform current)
		{
			return null;
		}

		[Token(Token = "0x6000F44")]
		public static T NewWithComponent<T>(string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000F45")]
		public static T GetOrAddComponent<T>(this GameObject self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000F46")]
		public static T GetOrAddComponent<T>(this MonoBehaviour self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xAFBA90", Offset = "0xAFBA90", VA = "0xAFBA90")]
		public static bool HasFlag(this Enum mask, Enum flags)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xAFBB74", Offset = "0xAFBB74", VA = "0xAFBB74")]
		public static Vector2 xy(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xAFBBA0", Offset = "0xAFBBA0", VA = "0xAFBBA0")]
		public static Vector2 xz(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xAFBBD0", Offset = "0xAFBBD0", VA = "0xAFBBD0")]
		public static Vector2 yz(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xAFBC04", Offset = "0xAFBC04", VA = "0xAFBC04")]
		public static Vector2 yx(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xAFBC3C", Offset = "0xAFBC3C", VA = "0xAFBC3C")]
		public static Vector2 zx(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xAFBC70", Offset = "0xAFBC70", VA = "0xAFBC70")]
		public static Vector2 zy(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xAFBCA0", Offset = "0xAFBCA0", VA = "0xAFBCA0")]
		public static bool Approximately(this Vector2 a, Vector2 b, float epsilon = 1E-05f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xAFBD50", Offset = "0xAFBD50", VA = "0xAFBD50")]
		public static bool Approximately(this Vector3 a, Vector3 b, float epsilon = 1E-05f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xAFBE18", Offset = "0xAFBE18", VA = "0xAFBE18")]
		public static bool Approximately(this Vector4 a, Vector4 b, float epsilon = 1E-05f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xAFBEF8", Offset = "0xAFBEF8", VA = "0xAFBEF8")]
		public static Vector4 AsVector4(this Vector3 vec3, float w)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xAFBF28", Offset = "0xAFBF28", VA = "0xAFBF28")]
		public static Vector4 PlaneEquation(Vector3 normalizedNormal, Vector3 pt)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xAFC008", Offset = "0xAFC008", VA = "0xAFC008")]
		public static float GetVolumeCubic(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xAF7F50", Offset = "0xAF7F50", VA = "0xAF7F50")]
		public static float GetMaxArea2D(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xAFC05C", Offset = "0xAFC05C", VA = "0xAFC05C")]
		public static Color Opaque(this Color self)
		{
			return default(Color);
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xAF8F78", Offset = "0xAF8F78", VA = "0xAF8F78")]
		public static Plane TranslateCustom(this Plane plane, Vector3 translation)
		{
			return default(Plane);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xAFB8EC", Offset = "0xAFB8EC", VA = "0xAFB8EC")]
		public static Vector3 ClosestPointOnPlaneCustom(this Plane plane, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xAFA14C", Offset = "0xAFA14C", VA = "0xAFA14C")]
		public static bool IsAlmostZero(float f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xAF73A0", Offset = "0xAF73A0", VA = "0xAF73A0")]
		public static bool IsValid(this Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xAF38B0", Offset = "0xAF38B0", VA = "0xAF38B0")]
		public static void SetKeywordEnabled(this Material mat, string name, bool enabled)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xAFC090", Offset = "0xAFC090", VA = "0xAFC090")]
		public static void SetShaderKeywordEnabled(string name, bool enabled)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xAF39D8", Offset = "0xAF39D8", VA = "0xAF39D8")]
		public static Matrix4x4 SampleInMatrix(this Gradient self, int floatPackingPrecision)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xAFC1A0", Offset = "0xAFC1A0", VA = "0xAFC1A0")]
		public static Color[] SampleInArray(this Gradient self, int samplesCount)
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xAFC2A8", Offset = "0xAFC2A8", VA = "0xAFC2A8")]
		private static Vector4 Vector4_Floor(Vector4 vec)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xAFC0A4", Offset = "0xAFC0A4", VA = "0xAFC0A4")]
		public static float PackToFloat(this Color color, int floatPackingPrecision)
		{
			return default(float);
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xAF2C5C", Offset = "0xAF2C5C", VA = "0xAF2C5C")]
		public static FloatPackingPrecision GetFloatPackingPrecision()
		{
			return default(FloatPackingPrecision);
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xAFC354", Offset = "0xAFC354", VA = "0xAFC354")]
		public static void MarkCurrentSceneDirty()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xAFC358", Offset = "0xAFC358", VA = "0xAFC358")]
		public static void MarkObjectDirty(UnityEngine.Object obj)
		{
		}
	}
	[Token(Token = "0x200030E")]
	public static class Version
	{
		[Token(Token = "0x4000D20")]
		public const int Current = 1890;
	}
	[Token(Token = "0x200030F")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x726128", Offset = "0x726128")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x726128", Offset = "0x726128")]
	public class VolumetricDustParticles : MonoBehaviour
	{
		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B144", Offset = "0x72B144")]
		public float alpha;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B15C", Offset = "0x72B15C")]
		public float size;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticlesDirection direction;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 velocity;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x72B17C", Offset = "0x72B17C")]
		public float speed;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float density;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B1B4", Offset = "0x72B1B4")]
		public float spawnMinDistance;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B1CC", Offset = "0x72B1CC")]
		public float spawnMaxDistance;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool cullingEnabled;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float cullingMaxDistance;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B1E4", Offset = "0x72B1E4")]
		private bool <isCulled>k__BackingField;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isFeatureSupported;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem m_Particles;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystemRenderer m_Renderer;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_NoMainCameraLogged;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera ms_MainCamera;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x17000195")]
		public bool isCulled
		{
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0xAFC360", Offset = "0xAFC360", VA = "0xAFC360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733A5C", Offset = "0x733A5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0xAFC368", Offset = "0xAFC368", VA = "0xAFC368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733A6C", Offset = "0x733A6C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public bool particlesAreInstantiated
		{
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0xAFC374", Offset = "0xAFC374", VA = "0xAFC374")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000197")]
		public int particlesCurrentCount
		{
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0xAFC3E0", Offset = "0xAFC3E0", VA = "0xAFC3E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000198")]
		public int particlesMaxCount
		{
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0xAFC474", Offset = "0xAFC474", VA = "0xAFC474")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000199")]
		public Camera mainCamera
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0xAFC520", Offset = "0xAFC520", VA = "0xAFC520")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xAFC778", Offset = "0xAFC778", VA = "0xAFC778")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xAFC8C8", Offset = "0xAFC8C8", VA = "0xAFC8C8")]
		private void InstantiateParticleSystem()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xAFCB68", Offset = "0xAFCB68", VA = "0xAFCB68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xAFCAAC", Offset = "0xAFCAAC", VA = "0xAFCAAC")]
		private void SetActiveAndPlay()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xAFD2B8", Offset = "0xAFD2B8", VA = "0xAFD2B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xAFD358", Offset = "0xAFD358", VA = "0xAFD358")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xAFD418", Offset = "0xAFD418", VA = "0xAFD418")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xAFCB6C", Offset = "0xAFCB6C", VA = "0xAFCB6C")]
		private void SetParticleProperties()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xAFC7F8", Offset = "0xAFC7F8", VA = "0xAFC7F8")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xAFD44C", Offset = "0xAFD44C", VA = "0xAFD44C")]
		private void UpdateCulling()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xAFD824", Offset = "0xAFD824", VA = "0xAFD824")]
		public VolumetricDustParticles()
		{
		}
	}
	[Token(Token = "0x2000310")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[SelectionBase]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7261D0", Offset = "0x7261D0")]
	public class VolumetricLightBeam : MonoBehaviour
	{
		[Token(Token = "0x2000311")]
		public delegate void OnWillCameraRenderCB(Camera cam);

		[Token(Token = "0x2000312")]
		public delegate void OnBeamGeometryInitialized();

		[Token(Token = "0x2000313")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72623C", Offset = "0x72623C")]
		private sealed class <CoPlaytimeUpdate>d__181 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VolumetricLightBeam <>4__this;

			[Token(Token = "0x170001C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FDA")]
				[Address(RVA = "0xAFF630", Offset = "0xAFF630", VA = "0xAFF630", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FDC")]
				[Address(RVA = "0xAFF698", Offset = "0xAFF698", VA = "0xAFF698", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0xAFF074", Offset = "0xAFF074", VA = "0xAFF074")]
			[DebuggerHidden]
			public <CoPlaytimeUpdate>d__181(int <>1__state)
			{
			}

			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0xAFF5A8", Offset = "0xAFF5A8", VA = "0xAFF5A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0xAFF5AC", Offset = "0xAFF5AC", VA = "0xAFF5AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0xAFF638", Offset = "0xAFF638", VA = "0xAFF638", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool colorFromLight;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ColorMode colorMode;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x72B1F4", Offset = "0x72B1F4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B1F4", Offset = "0x72B1F4")]
		public Color color;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient colorGradient;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool intensityFromLight;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool intensityModeAdvanced;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B248", Offset = "0x72B248")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B248", Offset = "0x72B248")]
		public float intensityInside;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B29C", Offset = "0x72B29C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B29C", Offset = "0x72B29C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B29C", Offset = "0x72B29C")]
		public float intensityOutside;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public BlendingMode blendingMode;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B314", Offset = "0x72B314")]
		public bool spotAngleFromLight;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B34C", Offset = "0x72B34C")]
		public float spotAngle;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B36C", Offset = "0x72B36C")]
		public float coneRadiusStart;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public ShaderAccuracy shaderAccuracy;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MeshType geomMeshType;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B3A4", Offset = "0x72B3A4")]
		public int geomCustomSides;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int geomCustomSegments;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 skewingLocalForwardDirection;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform clippingPlaneTransform;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool geomCap;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B3DC", Offset = "0x72B3DC")]
		public bool fallOffEndFromLight;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public AttenuationEquation attenuationEquation;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B414", Offset = "0x72B414")]
		public float attenuationCustomBlending;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B42C", Offset = "0x72B42C")]
		public float fallOffStart;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B464", Offset = "0x72B464")]
		public float fallOffEnd;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float depthBlendDistance;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float cameraClippingDistance;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B49C", Offset = "0x72B49C")]
		public float glareFrontal;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B4B4", Offset = "0x72B4B4")]
		public float glareBehind;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B4CC", Offset = "0x72B4CC")]
		public float fresnelPow;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public NoiseMode noiseMode;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B504", Offset = "0x72B504")]
		public float noiseIntensity;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool noiseScaleUseGlobal;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B51C", Offset = "0x72B51C")]
		public float noiseScaleLocal;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool noiseVelocityUseGlobal;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector3 noiseVelocityLocal;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Dimensions dimensions;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector2 tiltFactor;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B538", Offset = "0x72B538")]
		private MaterialManager.DynamicOcclusion <_INTERNAL_DynamicOcclusionMode>k__BackingField;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_IsDynamicOcclusionEnabled;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private OnBeamGeometryInitialized m_OnBeamGeometryInitialized;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B568", Offset = "0x72B568")]
		[SerializeField]
		private bool _TrackChangesDuringPlaytime;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int _SortingLayerID;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int _SortingOrder;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B5D4", Offset = "0x72B5D4")]
		[SerializeField]
		private float _FadeOutBegin;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x72B620", Offset = "0x72B620")]
		[SerializeField]
		private float _FadeOutEnd;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B66C", Offset = "0x72B66C")]
		private uint <_INTERNAL_InstancedMaterialGroupID>k__BackingField;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private BeamGeometry m_BeamGeom;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Coroutine m_CoPlaytimeUpdate;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Light _CachedLight;

		[Token(Token = "0x1700019A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7362A8", Offset = "0x7362A8")]
		public float alphaInside
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xAFD928", Offset = "0xAFD928", VA = "0xAFD928")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0xAFD930", Offset = "0xAFD930", VA = "0xAFD930")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7362E0", Offset = "0x7362E0")]
		public float alphaOutside
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0xAFD938", Offset = "0xAFD938", VA = "0xAFD938")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0xAFD940", Offset = "0xAFD940", VA = "0xAFD940")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public float intensityGlobal
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0xAFD948", Offset = "0xAFD948", VA = "0xAFD948")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0xAFD950", Offset = "0xAFD950", VA = "0xAFD950")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public float coneAngle
		{
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0xAF38D4", Offset = "0xAF38D4", VA = "0xAF38D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019E")]
		public float coneRadiusEnd
		{
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0xAF27FC", Offset = "0xAF27FC", VA = "0xAF27FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019F")]
		public float coneVolume
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0xAFD958", Offset = "0xAFD958", VA = "0xAFD958")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A0")]
		public float coneApexOffsetZ
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0xAF397C", Offset = "0xAF397C", VA = "0xAF397C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A1")]
		public int geomSides
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0xAFD9AC", Offset = "0xAFD9AC", VA = "0xAFD9AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0xAFDA34", Offset = "0xAFDA34", VA = "0xAFDA34")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public int geomSegments
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0xAFDAB4", Offset = "0xAFDAB4", VA = "0xAFDAB4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0xAFDB3C", Offset = "0xAFDB3C", VA = "0xAFDB3C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public Vector3 skewingLocalForwardDirectionNormalized
		{
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0xAF3EB0", Offset = "0xAF3EB0", VA = "0xAF3EB0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001A4")]
		public Vector4 additionalClippingPlane
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0xAF3B50", Offset = "0xAF3B50", VA = "0xAF3B50")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x170001A5")]
		public bool canHaveMeshSkewing
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0xAFADD8", Offset = "0xAFADD8", VA = "0xAFADD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A6")]
		public bool hasMeshSkewing
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0xAF2D4C", Offset = "0xAF2D4C", VA = "0xAF2D4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x736318", Offset = "0x736318")]
		public bool fadeEndFromLight
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0xAFDBBC", Offset = "0xAFDBBC", VA = "0xAFDBBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0xAFDBC4", Offset = "0xAFDBC4", VA = "0xAFDBC4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public float attenuationLerpLinearQuad
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0xAF3B28", Offset = "0xAF3B28", VA = "0xAF3B28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x736350", Offset = "0x736350")]
		public float fadeStart
		{
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0xAFDBD0", Offset = "0xAFDBD0", VA = "0xAFDBD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0xAFDBD8", Offset = "0xAFDBD8", VA = "0xAFDBD8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x736388", Offset = "0x736388")]
		public float fadeEnd
		{
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0xAFDBE0", Offset = "0xAFDBE0", VA = "0xAFDBE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0xAFDBE8", Offset = "0xAFDBE8", VA = "0xAFDBE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public float maxGeometryDistance
		{
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0xAF287C", Offset = "0xAF287C", VA = "0xAF287C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AC")]
		public bool isNoiseEnabled
		{
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0xAF2AB4", Offset = "0xAF2AB4", VA = "0xAF2AB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AD")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7363C0", Offset = "0x7363C0")]
		public bool noiseEnabled
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xAFDBF0", Offset = "0xAFDBF0", VA = "0xAFDBF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xAFDC00", Offset = "0xAFDC00", VA = "0xAFDC00")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public float fadeOutBegin
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xAFDC1C", Offset = "0xAFDC1C", VA = "0xAFDC1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xAFDC24", Offset = "0xAFDC24", VA = "0xAFDC24")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public float fadeOutEnd
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0xAFDC80", Offset = "0xAFDC80", VA = "0xAFDC80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0xAFDC88", Offset = "0xAFDC88", VA = "0xAFDC88")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public bool isFadeOutEnabled
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0xAEFBC0", Offset = "0xAEFBC0", VA = "0xAEFBC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B1")]
		public bool isTilted
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0xAFDC90", Offset = "0xAFDC90", VA = "0xAFDC90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B2")]
		public int sortingLayerID
		{
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0xAFDD58", Offset = "0xAFDD58", VA = "0xAFDD58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0xAFDD60", Offset = "0xAFDD60", VA = "0xAFDD60")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public string sortingLayerName
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0xAFDE10", Offset = "0xAFDE10", VA = "0xAFDE10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0xAFDE1C", Offset = "0xAFDE1C", VA = "0xAFDE1C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public int sortingOrder
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xAFDE4C", Offset = "0xAFDE4C", VA = "0xAFDE4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0xAFDE54", Offset = "0xAFDE54", VA = "0xAFDE54")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public bool trackChangesDuringPlaytime
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0xAFDF04", Offset = "0xAFDF04", VA = "0xAFDF04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0xAFDF0C", Offset = "0xAFDF0C", VA = "0xAFDF0C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public bool isCurrentlyTrackingChanges
		{
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0xAFDF6C", Offset = "0xAFDF6C", VA = "0xAFDF6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B7")]
		public bool hasGeometry
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0xAFD688", Offset = "0xAFD688", VA = "0xAFD688")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B8")]
		public Bounds bounds
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xAFD6F8", Offset = "0xAFD6F8", VA = "0xAFD6F8")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x170001B9")]
		public int blendingModeAsInt
		{
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0xAFDF7C", Offset = "0xAFDF7C", VA = "0xAFDF7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BA")]
		public Quaternion beamInternalLocalRotation
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xAF2904", Offset = "0xAF2904", VA = "0xAF2904")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001BB")]
		public Vector3 beamLocalForward
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0xAF6884", Offset = "0xAF6884", VA = "0xAF6884")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001BC")]
		public Vector3 lossyScale
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0xAF6910", Offset = "0xAF6910", VA = "0xAF6910")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001BD")]
		public float raycastDistance
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0xAF7880", Offset = "0xAF7880", VA = "0xAF7880")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BE")]
		public Vector3 raycastGlobalForward
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0xAF8A7C", Offset = "0xAF8A7C", VA = "0xAF8A7C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001BF")]
		public Vector3 raycastGlobalUp
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0xAF8364", Offset = "0xAF8364", VA = "0xAF8364")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001C0")]
		public Vector3 raycastGlobalRight
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0xAF8444", Offset = "0xAF8444", VA = "0xAF8444")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001C1")]
		public MaterialManager.DynamicOcclusion _INTERNAL_DynamicOcclusionMode
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0xAFE074", Offset = "0xAFE074", VA = "0xAFE074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733A7C", Offset = "0x733A7C")]
			get
			{
				return default(MaterialManager.DynamicOcclusion);
			}
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0xAFE07C", Offset = "0xAFE07C", VA = "0xAFE07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733A8C", Offset = "0x733A8C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public MaterialManager.DynamicOcclusion _INTERNAL_EnabledDynamicOcclusionMode
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xAF2D34", Offset = "0xAF2D34", VA = "0xAF2D34")]
			get
			{
				return default(MaterialManager.DynamicOcclusion);
			}
		}

		[Token(Token = "0x170001C3")]
		public int _INTERNAL_pluginVersion
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0xAFE650", Offset = "0xAFE650", VA = "0xAFE650")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C4")]
		public uint _INTERNAL_InstancedMaterialGroupID
		{
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0xAFE6FC", Offset = "0xAFE6FC", VA = "0xAFE6FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733ABC", Offset = "0x733ABC")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0xAFE704", Offset = "0xAFE704", VA = "0xAFE704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733ACC", Offset = "0x733ACC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public string meshStats
		{
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0xAFE70C", Offset = "0xAFE70C", VA = "0xAFE70C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public int meshVerticesCount
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0xAFE894", Offset = "0xAFE894", VA = "0xAFE894")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C7")]
		public int meshTrianglesCount
		{
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0xAFE970", Offset = "0xAFE970", VA = "0xAFE970")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C8")]
		private Light lightSpotAttached
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0xAFEA64", Offset = "0xAFEA64", VA = "0xAFEA64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000014")]
		public event OnWillCameraRenderCB onWillCameraRenderThisBeam
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0xAF5E4C", Offset = "0xAF5E4C", VA = "0xAF5E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733A9C", Offset = "0x733A9C")]
			add
			{
			}
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0xAF6048", Offset = "0xAF6048", VA = "0xAF6048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733AAC", Offset = "0x733AAC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xAF5A5C", Offset = "0xAF5A5C", VA = "0xAF5A5C")]
		public void _INTERNAL_SetDynamicOcclusionCallback(string shaderKeyword, MaterialModifier.Callback cb)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xAF4784", Offset = "0xAF4784", VA = "0xAF4784")]
		public void _INTERNAL_OnWillCameraRenderThisBeam(Camera cam)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xAF5F00", Offset = "0xAF5F00", VA = "0xAF5F00")]
		public void RegisterOnBeamGeometryInitializedCallback(OnBeamGeometryInitialized cb)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xAFE418", Offset = "0xAFE418", VA = "0xAFE418")]
		private void CallOnBeamGeometryInitializedCallback()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xAFDC2C", Offset = "0xAFDC2C", VA = "0xAFDC2C")]
		private void SetFadeOutValue(ref float propToChange, float value)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xAFE658", Offset = "0xAFE658", VA = "0xAFE658")]
		private void OnFadeOutStateChanged()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xAFEB5C", Offset = "0xAFEB5C", VA = "0xAFEB5C")]
		public float GetInsideBeamFactor(Vector3 posWS)
		{
			return default(float);
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xAF4794", Offset = "0xAF4794", VA = "0xAF4794")]
		public float GetInsideBeamFactorFromObjectSpacePos(Vector3 posOS)
		{
			return default(float);
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xAFEBBC", Offset = "0xAFEBBC", VA = "0xAFEBBC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x733ADC", Offset = "0x733ADC")]
		public void Generate()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xAFEBC8", Offset = "0xAFEBC8", VA = "0xAFEBC8", Slot = "4")]
		public virtual void GenerateGeometry()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xAFEE34", Offset = "0xAFEE34", VA = "0xAFEE34", Slot = "5")]
		public virtual void UpdateAfterManualPropertyChange()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xAFEEC8", Offset = "0xAFEEC8", VA = "0xAFEEC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xAFEED4", Offset = "0xAFEED4", VA = "0xAFEED4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xAFEF6C", Offset = "0xAFEF6C", VA = "0xAFEF6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xAFDF18", Offset = "0xAFDF18", VA = "0xAFDF18")]
		private void StartPlaytimeUpdateIfNeeded()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xAFF004", Offset = "0xAFF004", VA = "0xAFF004")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x733B14", Offset = "0x733B14")]
		private IEnumerator CoPlaytimeUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xAFF0A0", Offset = "0xAFF0A0", VA = "0xAFF0A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xAFF0A4", Offset = "0xAFF0A4", VA = "0xAFF0A4")]
		private void DestroyBeam()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xAFF164", Offset = "0xAFF164", VA = "0xAFF164")]
		private void AssignPropertiesFromSpotLight(Light lightSpot)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xAFF264", Offset = "0xAFF264", VA = "0xAFF264")]
		private void ClampProperties()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xAFEE04", Offset = "0xAFEE04", VA = "0xAFEE04")]
		private void ValidateProperties()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xAFECF4", Offset = "0xAFECF4", VA = "0xAFECF4")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xAFF450", Offset = "0xAFF450", VA = "0xAFF450")]
		public VolumetricLightBeam()
		{
		}
	}
}
namespace PathCreation.Examples
{
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x72624C", Offset = "0x72624C")]
	public class GeneratePathExample : MonoBehaviour
	{
		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool closedLoop;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] waypoints;

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xACD57C", Offset = "0xACD57C", VA = "0xACD57C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xACD634", Offset = "0xACD634", VA = "0xACD634")]
		public GeneratePathExample()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class PathFollower : MonoBehaviour
	{
		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathCreator pathCreator;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndOfPathInstruction endOfPathInstruction;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float distanceTravelled;

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xACD644", Offset = "0xACD644", VA = "0xACD644")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xACD718", Offset = "0xACD718", VA = "0xACD718")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xACD850", Offset = "0xACD850", VA = "0xACD850")]
		private void OnPathChanged()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xACD8B0", Offset = "0xACD8B0", VA = "0xACD8B0")]
		public PathFollower()
		{
		}
	}
	[Token(Token = "0x2000316")]
	[ExecuteInEditMode]
	public class PathPlacer : PathSceneTool
	{
		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject prefab;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject holder;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float spacing;

		[Token(Token = "0x4000D71")]
		private const float minSpacing = 0.1f;

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xACD8C0", Offset = "0xACD8C0", VA = "0xACD8C0")]
		private void Generate()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xACDAFC", Offset = "0xACDAFC", VA = "0xACDAFC")]
		private void DestroyObjects()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xACDBD8", Offset = "0xACDBD8", VA = "0xACDBD8", Slot = "5")]
		protected override void PathUpdated()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xACDC60", Offset = "0xACDC60", VA = "0xACDC60")]
		public PathPlacer()
		{
		}
	}
	[Token(Token = "0x2000317")]
	[ExecuteInEditMode]
	public abstract class PathSceneTool : MonoBehaviour
	{
		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PathCreator pathCreator;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoUpdate;

		[Token(Token = "0x170001CB")]
		protected VertexPath path
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0xACDDD0", Offset = "0xACDDD0", VA = "0xACDDD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000015")]
		public event Action onDestroyed
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xACDC88", Offset = "0xACDC88", VA = "0xACDC88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733BC8", Offset = "0x733BC8")]
			add
			{
			}
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xACDD2C", Offset = "0xACDD2C", VA = "0xACDD2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733BD8", Offset = "0x733BD8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xACDDEC", Offset = "0xACDDEC", VA = "0xACDDEC")]
		public void TriggerUpdate()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xACDDF8", Offset = "0xACDDF8", VA = "0xACDDF8", Slot = "4")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000FEC")]
		protected abstract void PathUpdated();

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xACDC78", Offset = "0xACDC78", VA = "0xACDC78")]
		protected PathSceneTool()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class PathSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathCreator pathPrefab;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PathFollower followerPrefab;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] spawnPoints;

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xACDE0C", Offset = "0xACDE0C", VA = "0xACDE0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xACDF9C", Offset = "0xACDF9C", VA = "0xACDF9C")]
		public PathSpawner()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class RoadMeshCreator : PathSceneTool
	{
		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x72B68C", Offset = "0x72B68C")]
		public float roadWidth;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72B6C4", Offset = "0x72B6C4")]
		public float thickness;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool flattenSurface;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x72B6DC", Offset = "0x72B6DC")]
		public Material roadMaterial;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material undersideMaterial;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float textureTiling;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private GameObject meshHolder;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh mesh;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xACDFA4", Offset = "0xACDFA4", VA = "0xACDFA4", Slot = "5")]
		protected override void PathUpdated()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xACE540", Offset = "0xACE540", VA = "0xACE540")]
		private void CreateRoadMesh()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xACE03C", Offset = "0xACE03C", VA = "0xACE03C")]
		private void AssignMeshComponents()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xACE33C", Offset = "0xACE33C", VA = "0xACE33C")]
		private void AssignMaterials()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xACF090", Offset = "0xACF090", VA = "0xACF090")]
		public RoadMeshCreator()
		{
		}
	}
}
namespace Impact
{
	[Token(Token = "0x200031A")]
	public struct ImpactCollisionWrapper : IImpactCollisionWrapper<ImpactContactPoint>
	{
		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B74C", Offset = "0x72B74C")]
		private int <ContactCount>k__BackingField;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B75C", Offset = "0x72B75C")]
		private PhysicsType <PhysicsType>k__BackingField;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Collision source3D;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Collision2D source2D;

		[Token(Token = "0x170001CC")]
		public int ContactCount
		{
			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0xAB6D64", Offset = "0xAB6D64", VA = "0xAB6D64", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733BE8", Offset = "0x733BE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0xAB6D6C", Offset = "0xAB6D6C", VA = "0xAB6D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733BF8", Offset = "0x733BF8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0xAB6D74", Offset = "0xAB6D74", VA = "0xAB6D74", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733C08", Offset = "0x733C08")]
			get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0xAB6D7C", Offset = "0xAB6D7C", VA = "0xAB6D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733C18", Offset = "0x733C18")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xAB6D84", Offset = "0xAB6D84", VA = "0xAB6D84")]
		public ImpactCollisionWrapper(Collision collision3D)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xAB6DBC", Offset = "0xAB6DBC", VA = "0xAB6DBC")]
		public ImpactCollisionWrapper(Collision2D collision2D)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xAB6DF8", Offset = "0xAB6DF8", VA = "0xAB6DF8", Slot = "6")]
		public ImpactContactPoint GetContact(int index)
		{
			return default(ImpactContactPoint);
		}
	}
	[Token(Token = "0x200031B")]
	public struct ImpactContactPoint : IImpactContactPoint
	{
		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B76C", Offset = "0x72B76C")]
		private Vector3 <Point>k__BackingField;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B77C", Offset = "0x72B77C")]
		private Vector3 <Normal>k__BackingField;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B78C", Offset = "0x72B78C")]
		private GameObject <ThisObject>k__BackingField;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B79C", Offset = "0x72B79C")]
		private GameObject <OtherObject>k__BackingField;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B7AC", Offset = "0x72B7AC")]
		private PhysicsType <PhysicsType>k__BackingField;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B7BC", Offset = "0x72B7BC")]
		private int <ThisPhysicsMaterialID>k__BackingField;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B7CC", Offset = "0x72B7CC")]
		private int <OtherPhysicsMaterialID>k__BackingField;

		[Token(Token = "0x170001CE")]
		public Vector3 Point
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xAB7258", Offset = "0xAB7258", VA = "0xAB7258", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733C28", Offset = "0x733C28")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0xAB7264", Offset = "0xAB7264", VA = "0xAB7264", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733C38", Offset = "0x733C38")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public Vector3 Normal
		{
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0xAB7270", Offset = "0xAB7270", VA = "0xAB7270", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733C48", Offset = "0x733C48")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0xAB727C", Offset = "0xAB727C", VA = "0xAB727C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733C58", Offset = "0x733C58")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public GameObject ThisObject
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0xAB7288", Offset = "0xAB7288", VA = "0xAB7288", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733C68", Offset = "0x733C68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001001")]
			[Address(RVA = "0xAB7290", Offset = "0xAB7290", VA = "0xAB7290", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733C78", Offset = "0x733C78")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public GameObject OtherObject
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0xAB7298", Offset = "0xAB7298", VA = "0xAB7298", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733C88", Offset = "0x733C88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001003")]
			[Address(RVA = "0xAB72A0", Offset = "0xAB72A0", VA = "0xAB72A0", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733C98", Offset = "0x733C98")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0xAB72A8", Offset = "0xAB72A8", VA = "0xAB72A8", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733CA8", Offset = "0x733CA8")]
			get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x6001005")]
			[Address(RVA = "0xAB72B0", Offset = "0xAB72B0", VA = "0xAB72B0", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733CB8", Offset = "0x733CB8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public int ThisPhysicsMaterialID
		{
			[Token(Token = "0x6001006")]
			[Address(RVA = "0xAB72B8", Offset = "0xAB72B8", VA = "0xAB72B8", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733CC8", Offset = "0x733CC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001007")]
			[Address(RVA = "0xAB72C0", Offset = "0xAB72C0", VA = "0xAB72C0", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733CD8", Offset = "0x733CD8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public int OtherPhysicsMaterialID
		{
			[Token(Token = "0x6001008")]
			[Address(RVA = "0xAB72C8", Offset = "0xAB72C8", VA = "0xAB72C8", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733CE8", Offset = "0x733CE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001009")]
			[Address(RVA = "0xAB72D0", Offset = "0xAB72D0", VA = "0xAB72D0", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733CF8", Offset = "0x733CF8")]
			set
			{
			}
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xAB72D8", Offset = "0xAB72D8", VA = "0xAB72D8")]
		public ImpactContactPoint(IImpactContactPoint original)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xAB6EBC", Offset = "0xAB6EBC", VA = "0xAB6EBC")]
		public ImpactContactPoint(ContactPoint contact3D)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xAB7060", Offset = "0xAB7060", VA = "0xAB7060")]
		public ImpactContactPoint(ContactPoint2D contact2D)
		{
		}
	}
	[Token(Token = "0x200031C")]
	public struct ImpactMaterialComposition
	{
		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IImpactMaterial Material;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float CompositionValue;

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xAB8B78", Offset = "0xAB8B78", VA = "0xAB8B78")]
		public ImpactMaterialComposition(IImpactMaterial material, float compositionValue)
		{
		}
	}
	[Token(Token = "0x200031D")]
	public struct ImpactCollisionSingleContactWrapper : IImpactCollisionWrapper<ImpactContactPoint>
	{
		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B7DC", Offset = "0x72B7DC")]
		private PhysicsType <PhysicsType>k__BackingField;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ImpactContactPoint contactPoint;

		[Token(Token = "0x170001D5")]
		public int ContactCount
		{
			[Token(Token = "0x600100E")]
			[Address(RVA = "0xAB6D08", Offset = "0xAB6D08", VA = "0xAB6D08", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D6")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0xAB6D10", Offset = "0xAB6D10", VA = "0xAB6D10", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733D08", Offset = "0x733D08")]
			get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x6001010")]
			[Address(RVA = "0xAB6D18", Offset = "0xAB6D18", VA = "0xAB6D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733D18", Offset = "0x733D18")]
			private set
			{
			}
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xAB6D20", Offset = "0xAB6D20", VA = "0xAB6D20")]
		public ImpactCollisionSingleContactWrapper(ImpactContactPoint contactPoint, PhysicsType physicsType)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xAB6D44", Offset = "0xAB6D44", VA = "0xAB6D44", Slot = "6")]
		public ImpactContactPoint GetContact(int index)
		{
			return default(ImpactContactPoint);
		}
	}
	[Token(Token = "0x200031E")]
	public class ImpactRigidbodyWrapper
	{
		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B7EC", Offset = "0x72B7EC")]
		private PhysicsType <PhysicsType>k__BackingField;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B7FC", Offset = "0x72B7FC")]
		private Rigidbody <Rigidbody3D>k__BackingField;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B80C", Offset = "0x72B80C")]
		private Rigidbody2D <Rigidbody2D>k__BackingField;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B81C", Offset = "0x72B81C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B82C", Offset = "0x72B82C")]
		private Vector3 <AngularVelocity>k__BackingField;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B83C", Offset = "0x72B83C")]
		private Vector3 <WorldCenterOfMass>k__BackingField;

		[Token(Token = "0x170001D7")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0xAB8B94", Offset = "0xAB8B94", VA = "0xAB8B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733D28", Offset = "0x733D28")]
			get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x6001014")]
			[Address(RVA = "0xAB8B9C", Offset = "0xAB8B9C", VA = "0xAB8B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733D38", Offset = "0x733D38")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public Rigidbody Rigidbody3D
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0xAB8BA4", Offset = "0xAB8BA4", VA = "0xAB8BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733D48", Offset = "0x733D48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001016")]
			[Address(RVA = "0xAB8BAC", Offset = "0xAB8BAC", VA = "0xAB8BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733D58", Offset = "0x733D58")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public Rigidbody2D Rigidbody2D
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0xAB8BB4", Offset = "0xAB8BB4", VA = "0xAB8BB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733D68", Offset = "0x733D68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001018")]
			[Address(RVA = "0xAB8BBC", Offset = "0xAB8BBC", VA = "0xAB8BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733D78", Offset = "0x733D78")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xAB8BC4", Offset = "0xAB8BC4", VA = "0xAB8BC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733D88", Offset = "0x733D88")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600101A")]
			[Address(RVA = "0xAB8BD0", Offset = "0xAB8BD0", VA = "0xAB8BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733D98", Offset = "0x733D98")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public Vector3 AngularVelocity
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0xAB8BDC", Offset = "0xAB8BDC", VA = "0xAB8BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733DA8", Offset = "0x733DA8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600101C")]
			[Address(RVA = "0xAB8BE8", Offset = "0xAB8BE8", VA = "0xAB8BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733DB8", Offset = "0x733DB8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public Vector3 WorldCenterOfMass
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0xAB8BF4", Offset = "0xAB8BF4", VA = "0xAB8BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733DC8", Offset = "0x733DC8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600101E")]
			[Address(RVA = "0xAB8C00", Offset = "0xAB8C00", VA = "0xAB8C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733DD8", Offset = "0x733DD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public Vector3 CurrentVelocity
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0xAB8C0C", Offset = "0xAB8C0C", VA = "0xAB8C0C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001DE")]
		public Vector3 CurrentAngularVelocity
		{
			[Token(Token = "0x6001020")]
			[Address(RVA = "0xAB8D30", Offset = "0xAB8D30", VA = "0xAB8D30")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001DF")]
		public Vector3 CurrentWorldCenterOfMass
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0xAB8E40", Offset = "0xAB8E40", VA = "0xAB8E40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xAB8F64", Offset = "0xAB8F64", VA = "0xAB8F64")]
		public ImpactRigidbodyWrapper(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xAB90E8", Offset = "0xAB90E8", VA = "0xAB90E8")]
		public ImpactRigidbodyWrapper(Rigidbody rigidbody3D)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xAB9118", Offset = "0xAB9118", VA = "0xAB9118")]
		public ImpactRigidbodyWrapper(Rigidbody2D rigidbody2D)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xAB914C", Offset = "0xAB914C", VA = "0xAB914C")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xAB92AC", Offset = "0xAB92AC", VA = "0xAB92AC")]
		public VelocityData GetVelocityData(Vector3 point)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xAB932C", Offset = "0xAB932C", VA = "0xAB932C")]
		public VelocityData GetCurrentVelocityData(Vector3 point)
		{
			return default(VelocityData);
		}
	}
	[Serializable]
	[Token(Token = "0x200031F")]
	public struct ImpactTag
	{
		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _value;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private ImpactTagLibraryBase _tagLibrary;

		[Token(Token = "0x170001E0")]
		public int Value
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0xAB93FC", Offset = "0xAB93FC", VA = "0xAB93FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001029")]
			[Address(RVA = "0xAB9404", Offset = "0xAB9404", VA = "0xAB9404")]
			set
			{
			}
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xAB940C", Offset = "0xAB940C", VA = "0xAB940C")]
		public ImpactTag(int tagValue, ImpactTagLibraryBase tagLibrary)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xAB9418", Offset = "0xAB9418", VA = "0xAB9418")]
		public ImpactTagMask GetTagMask()
		{
			return default(ImpactTagMask);
		}
	}
	[Serializable]
	[Token(Token = "0x2000320")]
	public struct ImpactTagMask
	{
		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _value;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private ImpactTagLibraryBase _tagLibrary;

		[Token(Token = "0x170001E1")]
		public int Value
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0xAB9438", Offset = "0xAB9438", VA = "0xAB9438")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600102D")]
			[Address(RVA = "0xAB9440", Offset = "0xAB9440", VA = "0xAB9440")]
			set
			{
			}
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xAB942C", Offset = "0xAB942C", VA = "0xAB942C")]
		public ImpactTagMask(int maskValue, ImpactTagLibraryBase tagLibrary)
		{
		}
	}
	[Token(Token = "0x2000321")]
	public struct InteractionData : IInteractionData
	{
		[Token(Token = "0x4000D9B")]
		public const int InteractionTypeCollision = 0;

		[Token(Token = "0x4000D9C")]
		public const int InteractionTypeSlide = 1;

		[Token(Token = "0x4000D9D")]
		public const int InteractionTypeRoll = 2;

		[Token(Token = "0x4000D9E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x72B88C", Offset = "0x72B88C")]
		public const int InteractionTypeSimple = 3;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B8C4", Offset = "0x72B8C4")]
		private int <InteractionType>k__BackingField;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B8D4", Offset = "0x72B8D4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B8E4", Offset = "0x72B8E4")]
		private Vector3 <Point>k__BackingField;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B8F4", Offset = "0x72B8F4")]
		private Vector3 <Normal>k__BackingField;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B904", Offset = "0x72B904")]
		private ImpactTagMask? <TagMask>k__BackingField;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B914", Offset = "0x72B914")]
		private float <CompositionValue>k__BackingField;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B924", Offset = "0x72B924")]
		private int? <PriorityOverride>k__BackingField;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B934", Offset = "0x72B934")]
		private GameObject <ThisObject>k__BackingField;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B944", Offset = "0x72B944")]
		private GameObject <OtherObject>k__BackingField;

		[Token(Token = "0x170001E2")]
		public int InteractionType
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0xAB9448", Offset = "0xAB9448", VA = "0xAB9448", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733DE8", Offset = "0x733DE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001030")]
			[Address(RVA = "0xAB9450", Offset = "0xAB9450", VA = "0xAB9450", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733DF8", Offset = "0x733DF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001031")]
			[Address(RVA = "0xAB9458", Offset = "0xAB9458", VA = "0xAB9458", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733E08", Offset = "0x733E08")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001032")]
			[Address(RVA = "0xAB9464", Offset = "0xAB9464", VA = "0xAB9464", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733E18", Offset = "0x733E18")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public Vector3 Point
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0xAB9470", Offset = "0xAB9470", VA = "0xAB9470", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733E28", Offset = "0x733E28")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001034")]
			[Address(RVA = "0xAB947C", Offset = "0xAB947C", VA = "0xAB947C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733E38", Offset = "0x733E38")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public Vector3 Normal
		{
			[Token(Token = "0x6001035")]
			[Address(RVA = "0xAB9488", Offset = "0xAB9488", VA = "0xAB9488", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733E48", Offset = "0x733E48")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001036")]
			[Address(RVA = "0xAB9494", Offset = "0xAB9494", VA = "0xAB9494", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733E58", Offset = "0x733E58")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public ImpactTagMask? TagMask
		{
			[Token(Token = "0x6001037")]
			[Address(RVA = "0xAB94A0", Offset = "0xAB94A0", VA = "0xAB94A0", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733E68", Offset = "0x733E68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001038")]
			[Address(RVA = "0xAB94B4", Offset = "0xAB94B4", VA = "0xAB94B4", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733E78", Offset = "0x733E78")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public float CompositionValue
		{
			[Token(Token = "0x6001039")]
			[Address(RVA = "0xAB94C8", Offset = "0xAB94C8", VA = "0xAB94C8", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733E88", Offset = "0x733E88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600103A")]
			[Address(RVA = "0xAB94D0", Offset = "0xAB94D0", VA = "0xAB94D0", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733E98", Offset = "0x733E98")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public int? PriorityOverride
		{
			[Token(Token = "0x600103B")]
			[Address(RVA = "0xAB94D8", Offset = "0xAB94D8", VA = "0xAB94D8", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733EA8", Offset = "0x733EA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600103C")]
			[Address(RVA = "0xAB94E0", Offset = "0xAB94E0", VA = "0xAB94E0", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733EB8", Offset = "0x733EB8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public GameObject ThisObject
		{
			[Token(Token = "0x600103D")]
			[Address(RVA = "0xAB94E8", Offset = "0xAB94E8", VA = "0xAB94E8", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733EC8", Offset = "0x733EC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600103E")]
			[Address(RVA = "0xAB94F0", Offset = "0xAB94F0", VA = "0xAB94F0", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733ED8", Offset = "0x733ED8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public GameObject OtherObject
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0xAB94F8", Offset = "0xAB94F8", VA = "0xAB94F8", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733EE8", Offset = "0x733EE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001040")]
			[Address(RVA = "0xAB9500", Offset = "0xAB9500", VA = "0xAB9500", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733EF8", Offset = "0x733EF8")]
			set
			{
			}
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xAB9508", Offset = "0xAB9508", VA = "0xAB9508", Slot = "22")]
		public IInteractionData Clone()
		{
			return null;
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xAB95A0", Offset = "0xAB95A0", VA = "0xAB95A0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000322")]
	public static class InteractionDataUtilities
	{
		[Token(Token = "0x6001043")]
		public static InteractionData ToInteractionData<T>(T original) where T : IInteractionData
		{
			return default(InteractionData);
		}
	}
	[Token(Token = "0x2000323")]
	public interface IImpactCollisionWrapper<T> where T : IImpactContactPoint
	{
		[Token(Token = "0x170001EB")]
		int ContactCount
		{
			[Token(Token = "0x6001044")]
			get;
		}

		[Token(Token = "0x170001EC")]
		PhysicsType PhysicsType
		{
			[Token(Token = "0x6001045")]
			get;
		}

		[Token(Token = "0x6001046")]
		T GetContact(int index);
	}
	[Token(Token = "0x2000324")]
	public interface IImpactContactPoint
	{
		[Token(Token = "0x170001ED")]
		Vector3 Point
		{
			[Token(Token = "0x6001047")]
			get;
			[Token(Token = "0x6001048")]
			set;
		}

		[Token(Token = "0x170001EE")]
		Vector3 Normal
		{
			[Token(Token = "0x6001049")]
			get;
			[Token(Token = "0x600104A")]
			set;
		}

		[Token(Token = "0x170001EF")]
		GameObject ThisObject
		{
			[Token(Token = "0x600104B")]
			get;
			[Token(Token = "0x600104C")]
			set;
		}

		[Token(Token = "0x170001F0")]
		GameObject OtherObject
		{
			[Token(Token = "0x600104D")]
			get;
			[Token(Token = "0x600104E")]
			set;
		}

		[Token(Token = "0x170001F1")]
		PhysicsType PhysicsType
		{
			[Token(Token = "0x600104F")]
			get;
			[Token(Token = "0x6001050")]
			set;
		}

		[Token(Token = "0x170001F2")]
		int ThisPhysicsMaterialID
		{
			[Token(Token = "0x6001051")]
			get;
			[Token(Token = "0x6001052")]
			set;
		}

		[Token(Token = "0x170001F3")]
		int OtherPhysicsMaterialID
		{
			[Token(Token = "0x6001053")]
			get;
			[Token(Token = "0x6001054")]
			set;
		}
	}
	[Token(Token = "0x2000325")]
	public interface IInteractionData
	{
		[Token(Token = "0x170001F4")]
		int InteractionType
		{
			[Token(Token = "0x6001055")]
			get;
			[Token(Token = "0x6001056")]
			set;
		}

		[Token(Token = "0x170001F5")]
		Vector3 Velocity
		{
			[Token(Token = "0x6001057")]
			get;
			[Token(Token = "0x6001058")]
			set;
		}

		[Token(Token = "0x170001F6")]
		Vector3 Point
		{
			[Token(Token = "0x6001059")]
			get;
			[Token(Token = "0x600105A")]
			set;
		}

		[Token(Token = "0x170001F7")]
		Vector3 Normal
		{
			[Token(Token = "0x600105B")]
			get;
			[Token(Token = "0x600105C")]
			set;
		}

		[Token(Token = "0x170001F8")]
		ImpactTagMask? TagMask
		{
			[Token(Token = "0x600105D")]
			get;
			[Token(Token = "0x600105E")]
			set;
		}

		[Token(Token = "0x170001F9")]
		float CompositionValue
		{
			[Token(Token = "0x600105F")]
			get;
			[Token(Token = "0x6001060")]
			set;
		}

		[Token(Token = "0x170001FA")]
		int? PriorityOverride
		{
			[Token(Token = "0x6001061")]
			get;
			[Token(Token = "0x6001062")]
			set;
		}

		[Token(Token = "0x170001FB")]
		GameObject ThisObject
		{
			[Token(Token = "0x6001063")]
			get;
			[Token(Token = "0x6001064")]
			set;
		}

		[Token(Token = "0x170001FC")]
		GameObject OtherObject
		{
			[Token(Token = "0x6001065")]
			get;
			[Token(Token = "0x6001066")]
			set;
		}

		[Token(Token = "0x6001067")]
		IInteractionData Clone();
	}
	[Token(Token = "0x2000326")]
	public enum PhysicsType
	{
		[Token(Token = "0x4000DA9")]
		Physics3D,
		[Token(Token = "0x4000DAA")]
		Physics2D,
		[Token(Token = "0x4000DAB")]
		Unknown
	}
	[Token(Token = "0x2000327")]
	public struct VelocityData
	{
		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 LinearVelocity;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 TangentialVelocity;

		[Token(Token = "0x170001FD")]
		public Vector3 TotalPointVelocity
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x939E5C", Offset = "0x939E5C", VA = "0x939E5C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x939E4C", Offset = "0x939E4C", VA = "0x939E4C")]
		public VelocityData(Vector3 linearVelocity, Vector3 tangentialVelocity)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x93B89C", Offset = "0x93B89C", VA = "0x93B89C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000328")]
	public static class ImpactDebugger
	{
		[Token(Token = "0x600106B")]
		public static void LogInteraction<T>(T obj) where T : IInteractionData
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xAB75AC", Offset = "0xAB75AC", VA = "0xAB75AC")]
		public static string InteractionTypeToString(int interactionType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7262D0", Offset = "0x7262D0")]
	public class ImpactManager : MonoBehaviour
	{
		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _physicsInteractionsLimit;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _interactionResultBufferSize;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _activeContinuousInteractions;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _materialCompositionBufferSize;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _usePhysicMaterialMapping;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _setAsActiveInstance;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<ImpactPhysicMaterialMapping> _physicMaterialMap;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<ImpactPhysicsMaterial2DMapping> _physicsMaterial2DMap;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, IImpactMaterial> materialMapDictionary;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, ClassPool> interactionResultPools;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int physicsInteractionsCounter;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IContinuousInteractionResult[] activeContinuousInteractionResults;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HashSet<long> activeContinuousInteractionKeys;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int currentActiveContinuousInteractionCount;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B9E4", Offset = "0x72B9E4")]
		private IInteractionResult[] <InteractionResultBuffer>k__BackingField;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72B9F4", Offset = "0x72B9F4")]
		private ImpactMaterialComposition[] <MaterialCompositionBuffer>k__BackingField;

		[Token(Token = "0x170001FE")]
		public IInteractionResult[] InteractionResultBuffer
		{
			[Token(Token = "0x600106D")]
			[Address(RVA = "0xAB761C", Offset = "0xAB761C", VA = "0xAB761C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733F08", Offset = "0x733F08")]
			get
			{
				return null;
			}
			[Token(Token = "0x600106E")]
			[Address(RVA = "0xAB7624", Offset = "0xAB7624", VA = "0xAB7624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733F18", Offset = "0x733F18")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public ImpactMaterialComposition[] MaterialCompositionBuffer
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0xAB762C", Offset = "0xAB762C", VA = "0xAB762C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733F28", Offset = "0x733F28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001070")]
			[Address(RVA = "0xAB7634", Offset = "0xAB7634", VA = "0xAB7634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733F38", Offset = "0x733F38")]
			private set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public bool UseMaterialMapping
		{
			[Token(Token = "0x6001071")]
			[Address(RVA = "0xAB763C", Offset = "0xAB763C", VA = "0xAB763C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001072")]
			[Address(RVA = "0xAB7644", Offset = "0xAB7644", VA = "0xAB7644")]
			set
			{
			}
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xAB7650", Offset = "0xAB7650", VA = "0xAB7650")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xAB7AC8", Offset = "0xAB7AC8", VA = "0xAB7AC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xAB7C6C", Offset = "0xAB7C6C", VA = "0xAB7C6C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xAB7720", Offset = "0xAB7720", VA = "0xAB7720")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xAB7F2C", Offset = "0xAB7F2C", VA = "0xAB7F2C")]
		public bool HasReachedPhysicsInteractionsLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xAB7F50", Offset = "0xAB7F50", VA = "0xAB7F50")]
		public void IncrementPhysicsInteractionsLimit()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xAB7F60", Offset = "0xAB7F60", VA = "0xAB7F60")]
		public bool HasReachedContinuousInteractionLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xAB7F74", Offset = "0xAB7F74", VA = "0xAB7F74")]
		public bool TryGetImpactMaterialFromMapping(Collider collider, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xAB806C", Offset = "0xAB806C", VA = "0xAB806C")]
		public bool TryGetImpactMaterialFromMapping(Collider2D collider2d, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xAB8164", Offset = "0xAB8164", VA = "0xAB8164")]
		public bool TryGetImpactMaterialFromMapping(int physicsMaterialInstanceId, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x600107D")]
		public void ProcessInteraction<T>(T interactionData, IImpactMaterial impactMaterial, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x600107E")]
		public void ProcessContinuousInteraction<T>(T interactionData, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x600107F")]
		public void ProcessContinuousInteraction<T>(T interactionData, IImpactMaterial material, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xAB81F4", Offset = "0xAB81F4", VA = "0xAB81F4")]
		public void AddOrUpdateContinuousInteractionResult(IImpactObject impactObject, IContinuousInteractionResult result)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xAB8750", Offset = "0xAB8750", VA = "0xAB8750")]
		public bool HasActiveContinuousInteractionWithKey(long key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xAB83BC", Offset = "0xAB83BC", VA = "0xAB83BC")]
		private IContinuousInteractionResult findContinuousInteractionResult(long key)
		{
			return null;
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xAB84FC", Offset = "0xAB84FC", VA = "0xAB84FC")]
		private void addContinuousInteractionResult(IImpactObject impactObject, IContinuousInteractionResult continuousInteractionResult)
		{
		}

		[Token(Token = "0x6001084")]
		public ClassPool CreateInteractionResultPool<T>(string key) where T : class, IPoolable, new()
		{
			return null;
		}

		[Token(Token = "0x6001085")]
		public bool TryGetInteractionResultFromPool<T>(string key, out T obj) where T : class, IPoolable, new()
		{
			return default(bool);
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xAB87B8", Offset = "0xAB87B8", VA = "0xAB87B8")]
		public ImpactManager()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public static class ImpactManagerInstance
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ImpactManager instance;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool hasInstance;

		[Token(Token = "0x17000201")]
		public static IInteractionResult[] InteractionResultBuffer
		{
			[Token(Token = "0x6001087")]
			[Address(RVA = "0xAB886C", Offset = "0xAB886C", VA = "0xAB886C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		public static ImpactMaterialComposition[] MaterialCompositionBuffer
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0xAB8950", Offset = "0xAB8950", VA = "0xAB8950")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		public static bool UseMaterialMapping
		{
			[Token(Token = "0x600108C")]
			[Address(RVA = "0xAB8974", Offset = "0xAB8974", VA = "0xAB8974")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600108D")]
			[Address(RVA = "0xAB8998", Offset = "0xAB8998", VA = "0xAB8998")]
			set
			{
			}
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xAB7680", Offset = "0xAB7680", VA = "0xAB7680")]
		public static void SetInstance(ImpactManager inst)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xAB8890", Offset = "0xAB8890", VA = "0xAB8890")]
		public static ImpactManager GetInstance(bool createIfNull = true)
		{
			return null;
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xAB7BC4", Offset = "0xAB7BC4", VA = "0xAB7BC4")]
		public static void ClearInstance(ImpactManager inst)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xAB89CC", Offset = "0xAB89CC", VA = "0xAB89CC")]
		public static bool HasReachedPhysicsInteractionsLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xAB8A0C", Offset = "0xAB8A0C", VA = "0xAB8A0C")]
		public static void IncrementPhysicsInteractionsLimit()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xAB8A38", Offset = "0xAB8A38", VA = "0xAB8A38")]
		public static bool HasReachedContinuousInteractionLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xAB8A68", Offset = "0xAB8A68", VA = "0xAB8A68")]
		public static bool HasActiveContinuousInteractionWithKey(long key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xAB8A98", Offset = "0xAB8A98", VA = "0xAB8A98")]
		public static bool TryGetImpactMaterialFromMapping(Collider collider, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xAB8AD0", Offset = "0xAB8AD0", VA = "0xAB8AD0")]
		public static bool TryGetImpactMaterialFromMapping(Collider2D collider2d, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xAB8B08", Offset = "0xAB8B08", VA = "0xAB8B08")]
		public static bool TryGetImpactMaterialFromMapping(int physicsMaterialInstanceId, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6001095")]
		public static void ProcessInteraction<T>(T interactionData, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001096")]
		public static void ProcessInteraction<T>(T interactionData, IImpactMaterial impactMaterial, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001097")]
		public static void ProcessContinuousInteraction<T>(T interactionData, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001098")]
		public static void ProcessContinuousInteraction<T>(T interactionData, IImpactMaterial material, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xAB8B40", Offset = "0xAB8B40", VA = "0xAB8B40")]
		public static void AddOrUpdateContinuousInteractionResult(IImpactObject impactObject, IContinuousInteractionResult result)
		{
		}

		[Token(Token = "0x600109A")]
		public static void CreateInteractionResultPool<T>(string key) where T : class, IPoolable, new()
		{
		}

		[Token(Token = "0x600109B")]
		public static bool TryGetInteractionResultFromPool<T>(string key, out T obj) where T : class, IPoolable, new()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200032B")]
	public class ImpactPhysicMaterialMapping
	{
		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicMaterial PhysicMaterial;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImpactMaterialBase ImpactMaterial;

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xAB8B84", Offset = "0xAB8B84", VA = "0xAB8B84")]
		public ImpactPhysicMaterialMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032C")]
	public class ImpactPhysicsMaterial2DMapping
	{
		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicsMaterial2D PhysicsMaterial2D;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImpactMaterialBase ImpactMaterial;

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xAB8B8C", Offset = "0xAB8B8C", VA = "0xAB8B8C")]
		public ImpactPhysicsMaterial2DMapping()
		{
		}
	}
}
namespace Impact.Utility
{
	[Token(Token = "0x200032D")]
	public static class Extensions
	{
		[Token(Token = "0x600109E")]
		[Address(RVA = "0x93B4C0", Offset = "0x93B4C0", VA = "0x93B4C0")]
		public static int SetBit(this int bitmask, int pos)
		{
			return default(int);
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x93B4D0", Offset = "0x93B4D0", VA = "0x93B4D0")]
		public static int UnsetBit(this int bitmask, int pos)
		{
			return default(int);
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x93B4E0", Offset = "0x93B4E0", VA = "0x93B4E0")]
		public static bool IsBitSet(this int bitmask, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A1")]
		public static T GetOrAddComponent<T>(this GameObject gameObject, bool checkParents) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60010A2")]
		public static int IndexOf<T>(this T[] array, Predicate<T> predicate)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200032E")]
	public static class PhysicsUtilities
	{
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x93B668", Offset = "0x93B668", VA = "0x93B668")]
		public static Vector3 CalculateTangentialVelocity(Vector3 point, Vector3 angularVelocity, Vector3 centerOfRotation)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200032F")]
	public struct Range
	{
		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Min;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Max;

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x93B740", Offset = "0x93B740", VA = "0x93B740")]
		public Range(float min, float max)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x93B748", Offset = "0x93B748", VA = "0x93B748")]
		public bool IsInRange(float f)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x93B76C", Offset = "0x93B76C", VA = "0x93B76C")]
		public float Clamp(float f)
		{
			return default(float);
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x9359BC", Offset = "0x9359BC", VA = "0x9359BC")]
		public float RandomInRange()
		{
			return default(float);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x93B7F4", Offset = "0x93B7F4", VA = "0x93B7F4")]
		public int RandomInRangeInteger()
		{
			return default(int);
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x93B81C", Offset = "0x93B81C", VA = "0x93B81C")]
		public float Lerp(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x93B830", Offset = "0x93B830", VA = "0x93B830")]
		public float Normalize(float val)
		{
			return default(float);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x93B87C", Offset = "0x93B87C", VA = "0x93B87C")]
		public float NormalizeUnclamped(float val)
		{
			return default(float);
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x93B890", Offset = "0x93B890", VA = "0x93B890")]
		public float Distance()
		{
			return default(float);
		}
	}
}
namespace Impact.Utility.ObjectPool
{
	[Token(Token = "0x2000330")]
	public class ClassPool
	{
		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<IPoolable> pooledObjects;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int lastAvailable;

		[Token(Token = "0x60010AD")]
		public T GetObject<T>() where T : class, IPoolable, new()
		{
			return null;
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x93B4F4", Offset = "0x93B4F4", VA = "0x93B4F4")]
		public ClassPool()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public interface IPoolable
	{
		[Token(Token = "0x60010AF")]
		void Retrieve();

		[Token(Token = "0x60010B0")]
		void MakeAvailable();

		[Token(Token = "0x60010B1")]
		bool IsAvailable();
	}
	[Token(Token = "0x2000332")]
	public class ObjectPool<T> : MonoBehaviour where T : PooledObject
	{
		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected int _poolSize;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected ObjectPoolFallbackMode _fallbackMode;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] pooledObjects;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int lastAvailable;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BA24", Offset = "0x72BA24")]
		private T <Template>k__BackingField;

		[Token(Token = "0x17000204")]
		public T Template
		{
			[Token(Token = "0x60010B2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733F98", Offset = "0x733F98")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733FA8", Offset = "0x733FA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public int PoolSize
		{
			[Token(Token = "0x60010B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010B5")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public ObjectPoolFallbackMode FallbackMode
		{
			[Token(Token = "0x60010B6")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x60010B7")]
			set
			{
			}
		}

		[Token(Token = "0x60010B8")]
		public virtual void Initialize(int poolSize, ObjectPoolFallbackMode fallbackMode)
		{
		}

		[Token(Token = "0x60010B9")]
		protected virtual T createPooledObjectInstance(int index)
		{
			return null;
		}

		[Token(Token = "0x60010BA")]
		public virtual bool GetObject(int priority, out T result)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BB")]
		public void ReturnAllObjectsToPool()
		{
		}

		[Token(Token = "0x60010BC")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60010BD")]
		public ObjectPool()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public enum ObjectPoolFallbackMode
	{
		[Token(Token = "0x4000DCF")]
		None,
		[Token(Token = "0x4000DD0")]
		LowerPriority,
		[Token(Token = "0x4000DD1")]
		Oldest
	}
	[Token(Token = "0x2000334")]
	public class ObjectPoolGroup<TPool, TTemplate> where TPool : ObjectPool<TTemplate> where TTemplate : PooledObject
	{
		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<TPool> pools;

		[Token(Token = "0x60010BE")]
		public bool GetOrCreatePool(TTemplate template, int poolSize, ObjectPoolFallbackMode objectPoolFallbackMode, out TPool result)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BF")]
		public bool GetPool(TTemplate template, out TPool result)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C0")]
		public bool CreatePool(TTemplate template, int poolSize, ObjectPoolFallbackMode objectPoolFallbackMode, out TPool result)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C1")]
		public void Add(TPool pool)
		{
		}

		[Token(Token = "0x60010C2")]
		public void Remove(TPool pool)
		{
		}

		[Token(Token = "0x60010C3")]
		public void ReturnAllObjectsToPools()
		{
		}

		[Token(Token = "0x60010C4")]
		public ObjectPoolGroup()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class PooledObject : MonoBehaviour
	{
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BA34", Offset = "0x72BA34")]
		private Transform <OriginalParent>k__BackingField;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BA44", Offset = "0x72BA44")]
		private int <LastRetrievedFrame>k__BackingField;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BA54", Offset = "0x72BA54")]
		private int <Priority>k__BackingField;

		[Token(Token = "0x17000207")]
		public Transform OriginalParent
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x93B564", Offset = "0x93B564", VA = "0x93B564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733FB8", Offset = "0x733FB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x93B56C", Offset = "0x93B56C", VA = "0x93B56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733FC8", Offset = "0x733FC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public int LastRetrievedFrame
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x93B574", Offset = "0x93B574", VA = "0x93B574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733FD8", Offset = "0x733FD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x93B57C", Offset = "0x93B57C", VA = "0x93B57C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733FE8", Offset = "0x733FE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public int Priority
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x93B584", Offset = "0x93B584", VA = "0x93B584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x733FF8", Offset = "0x733FF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x93B58C", Offset = "0x93B58C", VA = "0x93B58C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734008", Offset = "0x734008")]
			private set
			{
			}
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x93B594", Offset = "0x93B594", VA = "0x93B594", Slot = "4")]
		public virtual void Retrieve(int priority)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x93B5DC", Offset = "0x93B5DC", VA = "0x93B5DC", Slot = "5")]
		public virtual void MakeAvailable()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x93B638", Offset = "0x93B638", VA = "0x93B638", Slot = "6")]
		public virtual bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x935638", Offset = "0x935638", VA = "0x935638")]
		public PooledObject()
		{
		}
	}
}
namespace Impact.Triggers
{
	[Token(Token = "0x2000336")]
	public static class ImpactRaycastTrigger
	{
		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x93A164", Offset = "0x93A164", VA = "0x93A164")]
		public static void Trigger(ImpactTagMask tagMask, RaycastHit hit, Vector3 velocity, GameObject fromObject, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x60010D0")]
		public static void Trigger<T>(T interactionData, RaycastHit hit, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x93A294", Offset = "0x93A294", VA = "0x93A294")]
		public static void Trigger2D(ImpactTagMask tagMask, RaycastHit2D hit, Vector3 velocity, GameObject fromObject, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x60010D2")]
		public static void Trigger2D<T>(T interactionData, RaycastHit2D hit, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x60010D3")]
		public static void Trigger<T>(T interactionData, IImpactObject otherObject, int otherObjectPhysicsMaterialID, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x93A3C4", Offset = "0x93A3C4", VA = "0x93A3C4")]
		public static void Trigger(IImpactObject impactObject, RaycastHit hit, Vector3 velocity, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x60010D5")]
		public static void Trigger<T>(T interactionData, RaycastHit hit, IImpactObject impactObject, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x93A524", Offset = "0x93A524", VA = "0x93A524")]
		public static void Trigger2D(IImpactObject impactObject, RaycastHit2D hit, Vector3 velocity, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x60010D7")]
		public static void Trigger2D<T>(T interactionData, RaycastHit2D hit, IImpactObject impactObject, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x60010D8")]
		public static void Trigger<T>(T interactionData, IImpactObject sourceObject, IImpactObject otherObject, int otherObjectPhysicsMaterialID, bool useMaterialComposition) where T : IInteractionData
		{
		}
	}
	[Token(Token = "0x2000337")]
	public abstract class ImpactTriggerBase<TCollision, TContact> : MonoBehaviour where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _enabled;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ImpactObjectBase _target;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _useMaterialComposition;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ImpactTriggerContactMode _contactMode;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _highPriority;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hasMainTarget;

		[Token(Token = "0x1700020A")]
		public bool Enabled
		{
			[Token(Token = "0x60010DB")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public ImpactObjectBase MainTarget
		{
			[Token(Token = "0x60010DD")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010DE")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public bool UseMaterialComposition
		{
			[Token(Token = "0x60010DF")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public ImpactTriggerContactMode ContactMode
		{
			[Token(Token = "0x60010E1")]
			get
			{
				return default(ImpactTriggerContactMode);
			}
			[Token(Token = "0x60010E2")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public bool HighPriority
		{
			[Token(Token = "0x60010E3")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010E4")]
			set
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<InteractionData, IImpactObject> OnTriggered
		{
			[Token(Token = "0x60010D9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734018", Offset = "0x734018")]
			add
			{
			}
			[Token(Token = "0x60010DA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734028", Offset = "0x734028")]
			remove
			{
			}
		}

		[Token(Token = "0x60010E5")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E6")]
		private void Reset()
		{
		}

		[Token(Token = "0x60010E7")]
		protected IImpactObject getImpactObject(GameObject collider)
		{
			return null;
		}

		[Token(Token = "0x60010E8")]
		protected void processCollision(TCollision collision)
		{
		}

		[Token(Token = "0x60010E9")]
		protected void processCollisionSingleContact(TCollision collision)
		{
		}

		[Token(Token = "0x60010EA")]
		protected void processCollisionSingleAveragedContact(TCollision collision)
		{
		}

		[Token(Token = "0x60010EB")]
		protected void processCollisionMultipleContacts(TCollision collision)
		{
		}

		[Token(Token = "0x60010EC")]
		protected void processCollisionContact(TCollision collision, TContact contactPoint)
		{
		}

		[Token(Token = "0x60010ED")]
		protected ImpactTagMask? getOtherObjectTagMask(IImpactObject impactObject, Vector3 point, int otherPhysicsMaterialID, bool hasOtherObject)
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		protected virtual void buildInteractionData(IImpactObject target, TCollision collision, TContact contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float compositionValue)
		{
		}

		[Token(Token = "0x60010EF")]
		protected void invokeTriggeredEvent(InteractionData interactionData, IImpactObject impactObject)
		{
		}

		[Token(Token = "0x60010F0")]
		protected ImpactTriggerBase()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public enum ImpactTriggerContactMode
	{
		[Token(Token = "0x4000DDE")]
		Single,
		[Token(Token = "0x4000DDF")]
		SingleAverage,
		[Token(Token = "0x4000DE0")]
		Multiple
	}
	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726318", Offset = "0x726318")]
	public class ImpactCollisionTrigger2D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x938340", Offset = "0x938340", VA = "0x938340")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x9383F8", Offset = "0x9383F8", VA = "0x9383F8")]
		public ImpactCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726354", Offset = "0x726354")]
	public class ImpactCollisionTriggerWithCooldown2D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float cooldown;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastCollisionTime;

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x938550", Offset = "0x938550", VA = "0x938550")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x938630", Offset = "0x938630", VA = "0x938630")]
		public ImpactCollisionTriggerWithCooldown2D()
		{
		}
	}
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726390", Offset = "0x726390")]
	public class ImpactOnTriggerEnter2D : ImpactCollisionTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x9387B0", Offset = "0x9387B0", VA = "0x9387B0")]
		private void OnTriggerEnter2D(Collider2D collider)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x938998", Offset = "0x938998", VA = "0x938998")]
		public ImpactOnTriggerEnter2D()
		{
		}
	}
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7263CC", Offset = "0x7263CC")]
	public class ImpactOnTriggerStay2D : ImpactSlideAndRollTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x938C20", Offset = "0x938C20", VA = "0x938C20")]
		private void OnTriggerStay2D(Collider2D collider)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x938E14", Offset = "0x938E14", VA = "0x938E14")]
		public ImpactOnTriggerStay2D()
		{
		}
	}
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726408", Offset = "0x726408")]
	public class ImpactSimpleCollisionTrigger2D : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x93A684", Offset = "0x93A684", VA = "0x93A684")]
		private void OnCollisionEnter2D()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x93A814", Offset = "0x93A814", VA = "0x93A814")]
		public ImpactSimpleCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726444", Offset = "0x726444")]
	public class ImpactSlideAndRollTrigger2D : ImpactSlideAndRollTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x93AA44", Offset = "0x93AA44", VA = "0x93AA44")]
		private void OnCollisionStay2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x93AAFC", Offset = "0x93AAFC", VA = "0x93AAFC")]
		public ImpactSlideAndRollTrigger2D()
		{
		}
	}
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726480", Offset = "0x726480")]
	public class ImpactSpeculativeCollisionTrigger2D : ImpactSpeculativeCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x93AC54", Offset = "0x93AC54", VA = "0x93AC54")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x93AD0C", Offset = "0x93AD0C", VA = "0x93AD0C")]
		private void OnCollisionStay2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x93ADC4", Offset = "0x93ADC4", VA = "0x93ADC4")]
		public ImpactSpeculativeCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7264BC", Offset = "0x7264BC")]
	public class ImpactVelocityCollisionTrigger2D : ImpactVelocityCollisionTriggerBase
	{
		[Token(Token = "0x6001100")]
		[Address(RVA = "0x93AFD4", Offset = "0x93AFD4", VA = "0x93AFD4")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x93B08C", Offset = "0x93B08C", VA = "0x93B08C")]
		public ImpactVelocityCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7264F8", Offset = "0x7264F8")]
	public class ImpactCollisionTrigger3D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6001102")]
		[Address(RVA = "0x938448", Offset = "0x938448", VA = "0x938448")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x938500", Offset = "0x938500", VA = "0x938500")]
		public ImpactCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726534", Offset = "0x726534")]
	public class ImpactCollisionTriggerWithCooldown3D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float cooldown;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastCollisionTime;

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x938680", Offset = "0x938680", VA = "0x938680")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x938760", Offset = "0x938760", VA = "0x938760")]
		public ImpactCollisionTriggerWithCooldown3D()
		{
		}
	}
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726570", Offset = "0x726570")]
	public class ImpactOnTriggerEnter3D : ImpactCollisionTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6001106")]
		[Address(RVA = "0x9389E8", Offset = "0x9389E8", VA = "0x9389E8")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x938BD0", Offset = "0x938BD0", VA = "0x938BD0")]
		public ImpactOnTriggerEnter3D()
		{
		}
	}
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7265AC", Offset = "0x7265AC")]
	public class ImpactOnTriggerStay3D : ImpactSlideAndRollTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6001108")]
		[Address(RVA = "0x938E64", Offset = "0x938E64", VA = "0x938E64")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x939058", Offset = "0x939058", VA = "0x939058")]
		public ImpactOnTriggerStay3D()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7265E8", Offset = "0x7265E8")]
	public class ImpactSimpleCollisionTrigger3D : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x600110A")]
		[Address(RVA = "0x93A864", Offset = "0x93A864", VA = "0x93A864")]
		private void OnCollisionEnter()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x93A9F4", Offset = "0x93A9F4", VA = "0x93A9F4")]
		public ImpactSimpleCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726624", Offset = "0x726624")]
	public class ImpactSlideAndRollTrigger3D : ImpactSlideAndRollTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x600110C")]
		[Address(RVA = "0x93AB4C", Offset = "0x93AB4C", VA = "0x93AB4C")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x93AC04", Offset = "0x93AC04", VA = "0x93AC04")]
		public ImpactSlideAndRollTrigger3D()
		{
		}
	}
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726660", Offset = "0x726660")]
	public class ImpactSpeculativeCollisionTrigger3D : ImpactSpeculativeCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x600110E")]
		[Address(RVA = "0x93AE14", Offset = "0x93AE14", VA = "0x93AE14")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x93AECC", Offset = "0x93AECC", VA = "0x93AECC")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x93AF84", Offset = "0x93AF84", VA = "0x93AF84")]
		public ImpactSpeculativeCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x72669C", Offset = "0x72669C")]
	public class ImpactVelocityCollisionTrigger3D : ImpactVelocityCollisionTriggerBase
	{
		[Token(Token = "0x6001111")]
		[Address(RVA = "0x93B0E8", Offset = "0x93B0E8", VA = "0x93B0E8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x93B1A0", Offset = "0x93B1A0", VA = "0x93B1A0")]
		public ImpactVelocityCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public abstract class ImpactCollisionTriggerBase<TCollision, TContact> : ImpactTriggerBase<TCollision, TContact> where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Token(Token = "0x6001113")]
		protected override void buildInteractionData(IImpactObject target, TCollision collision, TContact contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float CompositionValue)
		{
		}

		[Token(Token = "0x6001114")]
		protected ImpactCollisionTriggerBase()
		{
		}
	}
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7266D8", Offset = "0x7266D8")]
	public class ImpactParticleCollisionTrigger : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem _particles;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x9390A8", Offset = "0x9390A8", VA = "0x9390A8")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x939228", Offset = "0x939228", VA = "0x939228")]
		private void processParticleCollision(ParticleCollisionEvent particleCollisionEvent, GameObject onParticleCollisionObject, bool isParticleSystem)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x939EFC", Offset = "0x939EFC", VA = "0x939EFC")]
		private int getPhysicsMaterialID(Component colliderComponent)
		{
			return default(int);
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x93A0EC", Offset = "0x93A0EC", VA = "0x93A0EC")]
		public ImpactParticleCollisionTrigger()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public enum SlideMode
	{
		[Token(Token = "0x4000DE8")]
		Normal,
		[Token(Token = "0x4000DE9")]
		None
	}
	[Token(Token = "0x200034C")]
	public enum RollMode
	{
		[Token(Token = "0x4000DEB")]
		Normal,
		[Token(Token = "0x4000DEC")]
		None
	}
	[Token(Token = "0x200034D")]
	public abstract class ImpactSlideAndRollTriggerBase<TCollision, TContact> : ImpactTriggerBase<TCollision, TContact> where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SlideMode _slideMode;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RollMode _rollMode;

		[Token(Token = "0x1700020F")]
		public SlideMode SlideMode
		{
			[Token(Token = "0x6001119")]
			get
			{
				return default(SlideMode);
			}
			[Token(Token = "0x600111A")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public RollMode RollMode
		{
			[Token(Token = "0x600111B")]
			get
			{
				return default(RollMode);
			}
			[Token(Token = "0x600111C")]
			set
			{
			}
		}

		[Token(Token = "0x600111D")]
		protected override void buildInteractionData(IImpactObject target, TCollision collision, TContact contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float compositionValue)
		{
		}

		[Token(Token = "0x600111E")]
		protected ImpactSlideAndRollTriggerBase()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public abstract class ImpactSpeculativeCollisionTriggerBase<TCollision, TContact> : ImpactCollisionTriggerBase<TCollision, TContact> where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Serializable]
		[Token(Token = "0x200034F")]
		private struct SpeculativeCollisionContact : IEquatable<SpeculativeCollisionContact>
		{
			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Lifetime;

			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 RelativeContactPoint;

			[Token(Token = "0x17000214")]
			public bool IsAlive
			{
				[Token(Token = "0x6001128")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001129")]
			public bool Equals(SpeculativeCollisionContact other)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726710", Offset = "0x726710")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SpeculativeCollisionContact c;

			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImpactSpeculativeCollisionTriggerBase<TCollision, TContact> <>4__this;

			[Token(Token = "0x600112A")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600112B")]
			internal bool <processSpeculativeCollision>b__0(SpeculativeCollisionContact e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _maxCollisionsPerFrame;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _contactPointComparisonThreshold;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _contactPointLifetime;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<SpeculativeCollisionContact> continousCollisionContacts;

		[Token(Token = "0x17000211")]
		public int MaxCollisionsPerFrame
		{
			[Token(Token = "0x600111F")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001120")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public float ContactPointComparisonThreshold
		{
			[Token(Token = "0x6001121")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001122")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public int ContactPointLifetime
		{
			[Token(Token = "0x6001123")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001124")]
			set
			{
			}
		}

		[Token(Token = "0x6001125")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001126")]
		protected void processSpeculativeCollision(TCollision collision)
		{
		}

		[Token(Token = "0x6001127")]
		protected ImpactSpeculativeCollisionTriggerBase()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public abstract class ImpactVelocityCollisionTriggerBase : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _velocityChangeInfluence;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ImpactRigidbodyWrapper rigidbodyWrapper;

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x93B1A4", Offset = "0x93B1A4", VA = "0x93B1A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x93B224", Offset = "0x93B224", VA = "0x93B224", Slot = "4")]
		protected override void buildInteractionData(IImpactObject target, ImpactCollisionWrapper collision, ImpactContactPoint contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float CompositionValue)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x93B090", Offset = "0x93B090", VA = "0x93B090")]
		protected ImpactVelocityCollisionTriggerBase()
		{
		}
	}
}
namespace Impact.TagLibrary
{
	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x726720", Offset = "0x726720")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x726720", Offset = "0x726720")]
	public class ImpactTagLibrary : ImpactTagLibraryBase
	{
		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] _tagNames;

		[Token(Token = "0x17000215")]
		public override string Item
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x938138", Offset = "0x938138", VA = "0x938138", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x938174", Offset = "0x938174", VA = "0x938174", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x9381EC", Offset = "0x9381EC", VA = "0x9381EC")]
		public ImpactTagLibrary()
		{
		}
	}
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x726798", Offset = "0x726798")]
	public abstract class ImpactTagLibraryBase : ScriptableObject, IImpactTagLibrary
	{
		[Token(Token = "0x17000216")]
		public abstract string Item
		{
			[Token(Token = "0x6001132")]
			get;
			[Token(Token = "0x6001133")]
			set;
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x93824C", Offset = "0x93824C", VA = "0x93824C")]
		protected ImpactTagLibraryBase()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public static class ImpactTagLibraryConstants
	{
		[Token(Token = "0x4000DFA")]
		public const int TagCount = 32;

		[Token(Token = "0x4000DFB")]
		public const string TagLibraryNotFoundErrorMessage = "Assign an Impact Tag Library to see tag names.";
	}
	[Token(Token = "0x2000355")]
	public static class ImpactTagLibraryExtensions
	{
		[Token(Token = "0x6001135")]
		[Address(RVA = "0x938254", Offset = "0x938254", VA = "0x938254")]
		public static int IndexOf(this IImpactTagLibrary tagLibrary, string tagName)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7267E0", Offset = "0x7267E0")]
	public interface IImpactTagLibrary
	{
		[Token(Token = "0x17000217")]
		string Item
		{
			[Token(Token = "0x6001136")]
			get;
			[Token(Token = "0x6001137")]
			set;
		}
	}
}
namespace Impact.Objects
{
	[Token(Token = "0x2000357")]
	public abstract class ImpactObjectBase : MonoBehaviour, IImpactObject
	{
		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected int _priority;

		[Token(Token = "0x17000218")]
		public int Priority
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x936644", Offset = "0x936644", VA = "0x936644", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x93664C", Offset = "0x93664C", VA = "0x93664C")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public GameObject GameObject
		{
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x936654", Offset = "0x936654", VA = "0x936654", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x93665C", Offset = "0x93665C", VA = "0x93665C", Slot = "11")]
		public virtual VelocityData GetVelocityDataAtPoint(Vector3 point)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x936668", Offset = "0x936668", VA = "0x936668", Slot = "12")]
		public virtual Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600113D")]
		public abstract int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results);

		[Token(Token = "0x600113E")]
		public abstract IImpactMaterial GetPrimaryMaterial(Vector3 point);

		[Token(Token = "0x600113F")]
		public abstract IImpactMaterial GetPrimaryMaterial();

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x9366B4", Offset = "0x9366B4", VA = "0x9366B4")]
		protected ImpactObjectBase()
		{
		}
	}
	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726818", Offset = "0x726818")]
	public class ImpactObjectRigidbody : ImpactObjectSingleMaterial
	{
		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BB74", Offset = "0x72BB74")]
		private ImpactRigidbodyWrapper <Rigidbody>k__BackingField;

		[Token(Token = "0x1700021A")]
		public ImpactRigidbodyWrapper Rigidbody
		{
			[Token(Token = "0x6001141")]
			[Address(RVA = "0x9366BC", Offset = "0x9366BC", VA = "0x9366BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734048", Offset = "0x734048")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x9366C4", Offset = "0x9366C4", VA = "0x9366C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734058", Offset = "0x734058")]
			set
			{
			}
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x9366CC", Offset = "0x9366CC", VA = "0x9366CC", Slot = "16")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x9367E8", Offset = "0x9367E8", VA = "0x9367E8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x936804", Offset = "0x936804", VA = "0x936804", Slot = "11")]
		public override VelocityData GetVelocityDataAtPoint(Vector3 contactPoint)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x936820", Offset = "0x936820", VA = "0x936820", Slot = "12")]
		public override Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x93697C", Offset = "0x93697C", VA = "0x93697C")]
		public ImpactObjectRigidbody()
		{
		}
	}
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726854", Offset = "0x726854")]
	public class ImpactObjectRigidbodyCheap : ImpactObjectSingleMaterial
	{
		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BB84", Offset = "0x72BB84")]
		private ImpactRigidbodyWrapper <Rigidbody>k__BackingField;

		[Token(Token = "0x1700021B")]
		public ImpactRigidbodyWrapper Rigidbody
		{
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x93698C", Offset = "0x93698C", VA = "0x93698C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734068", Offset = "0x734068")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x936994", Offset = "0x936994", VA = "0x936994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734078", Offset = "0x734078")]
			set
			{
			}
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x93699C", Offset = "0x93699C", VA = "0x93699C", Slot = "16")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x936A24", Offset = "0x936A24", VA = "0x936A24", Slot = "11")]
		public override VelocityData GetVelocityDataAtPoint(Vector3 contactPoint)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x936A40", Offset = "0x936A40", VA = "0x936A40", Slot = "12")]
		public override Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x936BA4", Offset = "0x936BA4", VA = "0x936BA4")]
		public ImpactObjectRigidbodyCheap()
		{
		}
	}
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726890", Offset = "0x726890")]
	public class ImpactObjectRigidbodyChild : ImpactObjectSingleMaterial
	{
		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ImpactObjectRigidbody parent;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hasParent;

		[Token(Token = "0x1700021C")]
		public ImpactObjectRigidbody Parent
		{
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x936BAC", Offset = "0x936BAC", VA = "0x936BAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x936BB4", Offset = "0x936BB4", VA = "0x936BB4")]
			set
			{
			}
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x936C3C", Offset = "0x936C3C", VA = "0x936C3C", Slot = "16")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x936C60", Offset = "0x936C60", VA = "0x936C60")]
		public void RefreshParent()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x936CBC", Offset = "0x936CBC", VA = "0x936CBC", Slot = "11")]
		public override VelocityData GetVelocityDataAtPoint(Vector3 contactPoint)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x936DE4", Offset = "0x936DE4", VA = "0x936DE4", Slot = "12")]
		public override Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x936EFC", Offset = "0x936EFC", VA = "0x936EFC")]
		public ImpactObjectRigidbodyChild()
		{
		}
	}
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7268CC", Offset = "0x7268CC")]
	public class ImpactObjectSingleMaterial : ImpactObjectBase
	{
		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactMaterialBase _material;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ImpactMaterialComposition[] cachedMaterialTypeComposition;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasMaterial;

		[Token(Token = "0x1700021D")]
		public ImpactMaterialBase Material
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x936F04", Offset = "0x936F04", VA = "0x936F04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x936F0C", Offset = "0x936F0C", VA = "0x936F0C")]
			set
			{
			}
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x936754", Offset = "0x936754", VA = "0x936754", Slot = "16")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x936FAC", Offset = "0x936FAC", VA = "0x936FAC", Slot = "13")]
		public override int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results)
		{
			return default(int);
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x93710C", Offset = "0x93710C", VA = "0x93710C", Slot = "14")]
		public override IImpactMaterial GetPrimaryMaterial(Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x93711C", Offset = "0x93711C", VA = "0x93711C", Slot = "15")]
		public override IImpactMaterial GetPrimaryMaterial()
		{
			return null;
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x936984", Offset = "0x936984", VA = "0x936984")]
		public ImpactObjectSingleMaterial()
		{
		}
	}
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726908", Offset = "0x726908")]
	public class ImpactTerrain : ImpactObjectBase
	{
		[Token(Token = "0x200035D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726944", Offset = "0x726944")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IImpactMaterial m;

			[Token(Token = "0x6001169")]
			[Address(RVA = "0x937D54", Offset = "0x937D54", VA = "0x937D54")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0x938128", Offset = "0x938128", VA = "0x938128")]
			internal bool <GetMaterialCompositionNonAlloc>b__1(ImpactMaterialComposition p)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200035E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726954", Offset = "0x726954")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<ImpactMaterialComposition> <>9__16_0;

			[Token(Token = "0x600116C")]
			[Address(RVA = "0x9380F0", Offset = "0x9380F0", VA = "0x9380F0")]
			public <>c()
			{
			}

			[Token(Token = "0x600116D")]
			[Address(RVA = "0x9380F8", Offset = "0x9380F8", VA = "0x9380F8")]
			internal int <GetMaterialCompositionNonAlloc>b__16_0(ImpactMaterialComposition a, ImpactMaterialComposition b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Terrain _terrain;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<ImpactMaterialBase> _terrainMaterials;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[,,] cachedAlphamaps;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ImpactMaterialComposition[] compositionBuffer;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hasTerrain;

		[Token(Token = "0x1700021E")]
		public Terrain Terrain
		{
			[Token(Token = "0x600115C")]
			[Address(RVA = "0x9371E0", Offset = "0x9371E0", VA = "0x9371E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600115D")]
			[Address(RVA = "0x9371E8", Offset = "0x9371E8", VA = "0x9371E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public TerrainData TerrainData
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x937270", Offset = "0x937270", VA = "0x937270")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public List<ImpactMaterialBase> TerrainMaterials
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0x937308", Offset = "0x937308", VA = "0x937308")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x937310", Offset = "0x937310", VA = "0x937310")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x9374F4", Offset = "0x9374F4", VA = "0x9374F4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x937390", Offset = "0x937390", VA = "0x937390")]
		public void RefreshCachedAlphamaps()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x937550", Offset = "0x937550", VA = "0x937550")]
		public void SyncTerrainLayersAndMaterialsList()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x9376E8", Offset = "0x9376E8", VA = "0x9376E8", Slot = "13")]
		public override int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results)
		{
			return default(int);
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x937D5C", Offset = "0x937D5C", VA = "0x937D5C", Slot = "14")]
		public override IImpactMaterial GetPrimaryMaterial(Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x937FB4", Offset = "0x937FB4", VA = "0x937FB4", Slot = "15")]
		public override IImpactMaterial GetPrimaryMaterial()
		{
			return null;
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x937BBC", Offset = "0x937BBC", VA = "0x937BBC")]
		private Vector2Int getAlphamapIndicesAtPoint(Vector3 point)
		{
			return default(Vector2Int);
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x93801C", Offset = "0x93801C", VA = "0x93801C")]
		public ImpactTerrain()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public interface IImpactObject
	{
		[Token(Token = "0x17000221")]
		int Priority
		{
			[Token(Token = "0x600116E")]
			get;
		}

		[Token(Token = "0x17000222")]
		GameObject GameObject
		{
			[Token(Token = "0x600116F")]
			get;
		}

		[Token(Token = "0x6001170")]
		int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results);

		[Token(Token = "0x6001171")]
		IImpactMaterial GetPrimaryMaterial(Vector3 point);

		[Token(Token = "0x6001172")]
		IImpactMaterial GetPrimaryMaterial();

		[Token(Token = "0x6001173")]
		VelocityData GetVelocityDataAtPoint(Vector3 contactPoint);

		[Token(Token = "0x6001174")]
		Vector3 GetContactPointRelativePosition(Vector3 point);
	}
}
namespace Impact.Materials
{
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x726964", Offset = "0x726964")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x726964", Offset = "0x726964")]
	public class ImpactMaterial : ImpactMaterialBase
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<ImpactMaterialInteractionSet> _interactionSets;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ImpactTagMask _fallbackTagMask;

		[Token(Token = "0x17000223")]
		public ImpactTagMask FallbackTagMask
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0x935D50", Offset = "0x935D50", VA = "0x935D50")]
			get
			{
				return default(ImpactTagMask);
			}
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x935D5C", Offset = "0x935D5C", VA = "0x935D5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public int InteractionSetCount
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0x935F54", Offset = "0x935F54", VA = "0x935F54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000225")]
		public ImpactMaterialInteractionSet Item
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x935FA4", Offset = "0x935FA4", VA = "0x935FA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x93601C", Offset = "0x93601C", VA = "0x93601C")]
			set
			{
			}
		}

		[Token(Token = "0x6001177")]
		public override int GetInteractionResultsNonAlloc<T>(T interactionData, IInteractionResult[] results)
		{
			return default(int);
		}

		[Token(Token = "0x6001178")]
		private void populateCollisionResultsForInteractionSet<T>(T interactionData, ImpactMaterialInteractionSet interactionSet, ImpactTagMask tagMask, IInteractionResult[] results, ref int count) where T : IInteractionData
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x935D64", Offset = "0x935D64", VA = "0x935D64", Slot = "8")]
		public override void Preload()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x93608C", Offset = "0x93608C", VA = "0x93608C")]
		public void AddInteractionSet(ImpactMaterialInteractionSet item)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x9360F4", Offset = "0x9360F4", VA = "0x9360F4")]
		public void RemoveInteractionSet(int index)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x93615C", Offset = "0x93615C", VA = "0x93615C")]
		public void ClearInteractionSets()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x9361B4", Offset = "0x9361B4", VA = "0x9361B4")]
		public ImpactMaterial()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public abstract class ImpactMaterialBase : ScriptableObject, IImpactMaterial
	{
		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ImpactTagLibraryBase _tagLibrary;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactTagMask _materialTagsMask;

		[Token(Token = "0x17000226")]
		public ImpactTagLibraryBase TagLibrary
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0x93622C", Offset = "0x93622C", VA = "0x93622C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001182")]
			[Address(RVA = "0x936234", Offset = "0x936234", VA = "0x936234")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public ImpactTagMask MaterialTagsMask
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0x93623C", Offset = "0x93623C", VA = "0x93623C", Slot = "4")]
			get
			{
				return default(ImpactTagMask);
			}
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x936248", Offset = "0x936248", VA = "0x936248")]
			set
			{
			}
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x936250", Offset = "0x936250", VA = "0x936250")]
		public ImpactMaterialComposition[] GetSingleMaterialComposition()
		{
			return null;
		}

		[Token(Token = "0x6001186")]
		public abstract int GetInteractionResultsNonAlloc<T>(T interactionData, IInteractionResult[] results) where T : IInteractionData;

		[Token(Token = "0x6001187")]
		public abstract void Preload();

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x936224", Offset = "0x936224", VA = "0x936224")]
		protected ImpactMaterialBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7269E0", Offset = "0x7269E0")]
	public class ImpactMaterialInteractionSet
	{
		[Serializable]
		[Token(Token = "0x2000363")]
		public struct TagMaskFilter
		{
			[Token(Token = "0x4000E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImpactTagMask TagMask;

			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool ExactMatch;

			[Token(Token = "0x6001197")]
			[Address(RVA = "0x9364E0", Offset = "0x9364E0", VA = "0x9364E0")]
			public bool CompareTagMask(ImpactTagMask tagMask)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TagMaskFilter _includeTagsFilter;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TagMaskFilter _excludeTagsFilter;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<ImpactInteractionBase> _interactions;

		[Token(Token = "0x17000228")]
		public string Name
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0x9362F0", Offset = "0x9362F0", VA = "0x9362F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118A")]
			[Address(RVA = "0x9362F8", Offset = "0x9362F8", VA = "0x9362F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public TagMaskFilter IncludeTagsFilter
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0x936300", Offset = "0x936300", VA = "0x936300")]
			get
			{
				return default(TagMaskFilter);
			}
			[Token(Token = "0x600118C")]
			[Address(RVA = "0x936314", Offset = "0x936314", VA = "0x936314")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public TagMaskFilter ExcludeTagsFilter
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0x936328", Offset = "0x936328", VA = "0x936328")]
			get
			{
				return default(TagMaskFilter);
			}
			[Token(Token = "0x600118E")]
			[Address(RVA = "0x93633C", Offset = "0x93633C", VA = "0x93633C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public int InteractionCount
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0x936350", Offset = "0x936350", VA = "0x936350")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022C")]
		public ImpactInteractionBase Item
		{
			[Token(Token = "0x6001190")]
			[Address(RVA = "0x9363A0", Offset = "0x9363A0", VA = "0x9363A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001191")]
			[Address(RVA = "0x936418", Offset = "0x936418", VA = "0x936418")]
			set
			{
			}
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x936488", Offset = "0x936488", VA = "0x936488")]
		public bool CompareTagMaskFilters(ImpactTagMask tagMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x935E58", Offset = "0x935E58", VA = "0x935E58")]
		public void Preload()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x936504", Offset = "0x936504", VA = "0x936504")]
		public void AddInteraction(ImpactInteractionBase impactInteraction)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x93656C", Offset = "0x93656C", VA = "0x93656C")]
		public void RemoveInteraction(int index)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x9365D4", Offset = "0x9365D4", VA = "0x9365D4")]
		public ImpactMaterialInteractionSet()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public interface IImpactMaterial
	{
		[Token(Token = "0x1700022D")]
		ImpactTagMask MaterialTagsMask
		{
			[Token(Token = "0x6001198")]
			get;
		}

		[Token(Token = "0x6001199")]
		int GetInteractionResultsNonAlloc<T>(T data, IInteractionResult[] results) where T : IInteractionData;

		[Token(Token = "0x600119A")]
		void Preload();
	}
}
namespace Impact.Interactions
{
	[Token(Token = "0x2000365")]
	public enum InteractionIntervalType
	{
		[Token(Token = "0x4000E17")]
		Time,
		[Token(Token = "0x4000E18")]
		Distance
	}
	[Token(Token = "0x2000366")]
	public abstract class ImpactInteractionBase : ScriptableObject, IImpactInteraction
	{
		[Token(Token = "0x600119B")]
		public abstract IInteractionResult GetInteractionResult<T>(T interactionData) where T : IInteractionData;

		[Token(Token = "0x600119C")]
		public abstract void Preload();

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xABA870", Offset = "0xABA870", VA = "0xABA870")]
		protected ImpactInteractionBase()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public static class ImpactInteractionUtilities
	{
		[Token(Token = "0x600119E")]
		public static float GetCollisionIntensity<T>(T interactionData, float collisionNormalInfluence) where T : IInteractionData
		{
			return default(float);
		}

		[Token(Token = "0x600119F")]
		public static bool GetKeyAndValidate<T>(T interactionData, ImpactInteractionBase interaction, out long key) where T : IInteractionData
		{
			return default(bool);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xABC13C", Offset = "0xABC13C", VA = "0xABC13C")]
		private static long cantorPairing(long k1, long k2)
		{
			return default(long);
		}
	}
	[Token(Token = "0x2000368")]
	public interface IImpactInteraction
	{
		[Token(Token = "0x60011A1")]
		IInteractionResult GetInteractionResult<T>(T interactionData) where T : IInteractionData;

		[Token(Token = "0x60011A2")]
		void Preload();
	}
	[Token(Token = "0x2000369")]
	public interface IInteractionResult : IDisposable
	{
		[Token(Token = "0x1700022E")]
		bool IsValid
		{
			[Token(Token = "0x60011A3")]
			get;
		}

		[Token(Token = "0x60011A4")]
		void Process(IImpactObject parent);
	}
	[Token(Token = "0x200036A")]
	public interface IContinuousInteractionResult : IInteractionResult, IDisposable
	{
		[Token(Token = "0x1700022F")]
		long Key
		{
			[Token(Token = "0x60011A5")]
			get;
			[Token(Token = "0x60011A6")]
			set;
		}

		[Token(Token = "0x17000230")]
		bool IsAlive
		{
			[Token(Token = "0x60011A7")]
			get;
		}

		[Token(Token = "0x60011A8")]
		void FixedUpdate();

		[Token(Token = "0x60011A9")]
		void KeepAlive(IInteractionResult newResult);
	}
	[Token(Token = "0x200036B")]
	public static class InteractionResultExtensions
	{
		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xAB9D18", Offset = "0xAB9D18", VA = "0xAB9D18")]
		public static int GetPriority(int? priorityOverride, IImpactObject obj)
		{
			return default(int);
		}
	}
}
namespace Impact.Interactions.Particles
{
	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x726A18", Offset = "0x726A18")]
	public class ImpactParticleInteraction : ImpactInteractionBase
	{
		[Token(Token = "0x4000E19")]
		private const string interactionResultPoolKey = "ParticleInteractionResult";

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _minimumVelocity;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _collisionNormalInfluence;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactParticlesBase _particlePrefab;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _isParticleLooped;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Range _emissionInterval;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private InteractionIntervalType _emissionIntervalType;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _emitOnCollision;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool _emitOnSlide;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		private bool _emitOnRoll;

		[Token(Token = "0x17000231")]
		public float MinimumVelocity
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0xABC158", Offset = "0xABC158", VA = "0xABC158")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0xABC160", Offset = "0xABC160", VA = "0xABC160")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public float CollisionNormalInfluence
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0xABC168", Offset = "0xABC168", VA = "0xABC168")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0xABC170", Offset = "0xABC170", VA = "0xABC170")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public ImpactParticlesBase ParticlePrefab
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0xABC178", Offset = "0xABC178", VA = "0xABC178")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0xABC180", Offset = "0xABC180", VA = "0xABC180")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public bool IsParticleLooped
		{
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0xABC188", Offset = "0xABC188", VA = "0xABC188")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0xABC190", Offset = "0xABC190", VA = "0xABC190")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public Range EmissionInterval
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0xABC19C", Offset = "0xABC19C", VA = "0xABC19C")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0xABC1A4", Offset = "0xABC1A4", VA = "0xABC1A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public InteractionIntervalType EmissionIntervalType
		{
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0xABC1AC", Offset = "0xABC1AC", VA = "0xABC1AC")]
			get
			{
				return default(InteractionIntervalType);
			}
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0xABC1B4", Offset = "0xABC1B4", VA = "0xABC1B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public bool EmitOnCollision
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0xABC1BC", Offset = "0xABC1BC", VA = "0xABC1BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0xABC1C4", Offset = "0xABC1C4", VA = "0xABC1C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public bool EmitOnSlide
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0xABC1D0", Offset = "0xABC1D0", VA = "0xABC1D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0xABC1D8", Offset = "0xABC1D8", VA = "0xABC1D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public bool EmitOnRoll
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0xABC1E4", Offset = "0xABC1E4", VA = "0xABC1E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0xABC1EC", Offset = "0xABC1EC", VA = "0xABC1EC")]
			set
			{
			}
		}

		[Token(Token = "0x60011BD")]
		public override IInteractionResult GetInteractionResult<T>(T interactionData)
		{
			return null;
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xABC1F8", Offset = "0xABC1F8", VA = "0xABC1F8")]
		private bool shouldEmit(int collisionParameterType)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xABC234", Offset = "0xABC234", VA = "0xABC234", Slot = "7")]
		public override void Preload()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xABC384", Offset = "0xABC384", VA = "0xABC384")]
		public ImpactParticleInteraction()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class ImpactParticlePool : ObjectPool<ImpactParticlesBase>
	{
		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectPoolGroup<ImpactParticlePool, ImpactParticlesBase> poolGroup;

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xABC2B8", Offset = "0xABC2B8", VA = "0xABC2B8")]
		public static void PreloadPoolForParticle(ImpactParticlesBase template)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xABC3E8", Offset = "0xABC3E8", VA = "0xABC3E8")]
		public static ImpactParticlesBase EmitParticles(ParticleInteractionResult interactionResult, Vector3 point, Vector3 normal, int priority)
		{
			return null;
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xABC5AC", Offset = "0xABC5AC", VA = "0xABC5AC", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xABC644", Offset = "0xABC644", VA = "0xABC644")]
		public ImpactParticlePool()
		{
		}
	}
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726A6C", Offset = "0x726A6C")]
	public class ImpactParticles : ImpactParticlesBase
	{
		[Token(Token = "0x200036F")]
		public enum ParticleRotationMode
		{
			[Token(Token = "0x4000E2A")]
			AlignToNormal,
			[Token(Token = "0x4000E2B")]
			AlignToVelocity,
			[Token(Token = "0x4000E2C")]
			AlignToNormalAndVelocity,
			[Token(Token = "0x4000E2D")]
			NoRotation
		}

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleRotationMode _rotationMode;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private AlignmentAxis _axis;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ObjectPoolFallbackMode _poolFallbackMode;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem[] particles;

		[Token(Token = "0x1700023A")]
		public ParticleRotationMode RotationMode
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xABC708", Offset = "0xABC708", VA = "0xABC708")]
			get
			{
				return default(ParticleRotationMode);
			}
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0xABC710", Offset = "0xABC710", VA = "0xABC710")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public AlignmentAxis Axis
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xABC718", Offset = "0xABC718", VA = "0xABC718")]
			get
			{
				return default(AlignmentAxis);
			}
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0xABC720", Offset = "0xABC720", VA = "0xABC720")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public override int PoolSize
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0xABC728", Offset = "0xABC728", VA = "0xABC728", Slot = "7")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0xABC730", Offset = "0xABC730", VA = "0xABC730", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public override ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0xABC738", Offset = "0xABC738", VA = "0xABC738", Slot = "9")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0xABC740", Offset = "0xABC740", VA = "0xABC740", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xABC748", Offset = "0xABC748", VA = "0xABC748")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xABC7A0", Offset = "0xABC7A0", VA = "0xABC7A0", Slot = "11")]
		public override void EmitParticles(ParticleInteractionResult interactionResult, Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xABC868", Offset = "0xABC868", VA = "0xABC868", Slot = "12")]
		public override void UpdateTransform(Vector3 point, Vector3 normal, Vector3 velocity)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xABC9B0", Offset = "0xABC9B0", VA = "0xABC9B0", Slot = "13")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xABCA1C", Offset = "0xABCA1C", VA = "0xABCA1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xABCAC8", Offset = "0xABCAC8", VA = "0xABCAC8")]
		public ImpactParticles()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public abstract class ImpactParticlesBase : PooledObject
	{
		[Token(Token = "0x1700023E")]
		public abstract int PoolSize
		{
			[Token(Token = "0x60011D4")]
			get;
			[Token(Token = "0x60011D5")]
			set;
		}

		[Token(Token = "0x1700023F")]
		public abstract ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x60011D6")]
			get;
			[Token(Token = "0x60011D7")]
			set;
		}

		[Token(Token = "0x60011D8")]
		public abstract void EmitParticles(ParticleInteractionResult interactionResult, Vector3 point, Vector3 normal);

		[Token(Token = "0x60011D9")]
		public abstract void UpdateTransform(Vector3 point, Vector3 normal, Vector3 velocity);

		[Token(Token = "0x60011DA")]
		public abstract void Stop();

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x935630", Offset = "0x935630", VA = "0x935630")]
		protected ImpactParticlesBase()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class ParticleInteractionResult : IContinuousInteractionResult, IInteractionResult, IDisposable, IPoolable
	{
		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BD24", Offset = "0x72BD24")]
		private InteractionData <OriginalData>k__BackingField;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ImpactParticlesBase ParticlesTemplate;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool IsParticleLooped;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Range EmissionInterval;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public InteractionIntervalType EmissionIntervalType;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BD34", Offset = "0x72BD34")]
		private long <Key>k__BackingField;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BD44", Offset = "0x72BD44")]
		private bool <IsAlive>k__BackingField;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BD54", Offset = "0x72BD54")]
		private ImpactParticlesBase <Particles>k__BackingField;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float intervalCounter;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float currentEmissionIntervalTarget;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 previousEmissionPosition;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IImpactObject parent;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isAvailable;

		[Token(Token = "0x17000240")]
		public InteractionData OriginalData
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x9357A8", Offset = "0x9357A8", VA = "0x9357A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7340A8", Offset = "0x7340A8")]
			get
			{
				return default(InteractionData);
			}
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x9357B8", Offset = "0x9357B8", VA = "0x9357B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7340B8", Offset = "0x7340B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public long Key
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x9357D4", Offset = "0x9357D4", VA = "0x9357D4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7340C8", Offset = "0x7340C8")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x9357DC", Offset = "0x9357DC", VA = "0x9357DC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7340D8", Offset = "0x7340D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public bool IsValid
		{
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x9357E4", Offset = "0x9357E4", VA = "0x9357E4", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000243")]
		public bool IsAlive
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x935854", Offset = "0x935854", VA = "0x935854", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7340E8", Offset = "0x7340E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x93585C", Offset = "0x93585C", VA = "0x93585C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7340F8", Offset = "0x7340F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public ImpactParticlesBase Particles
		{
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x935868", Offset = "0x935868", VA = "0x935868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734108", Offset = "0x734108")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x935870", Offset = "0x935870", VA = "0x935870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734118", Offset = "0x734118")]
			private set
			{
			}
		}

		[Token(Token = "0x14000017")]
		public static event Action<ParticleInteractionResult> OnInteractionProcessed
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x935640", Offset = "0x935640", VA = "0x935640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734088", Offset = "0x734088")]
			add
			{
			}
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x9356F4", Offset = "0x9356F4", VA = "0x9356F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734098", Offset = "0x734098")]
			remove
			{
			}
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x935878", Offset = "0x935878", VA = "0x935878", Slot = "10")]
		public void Process(IImpactObject parent)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x935A74", Offset = "0x935A74", VA = "0x935A74", Slot = "7")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x935A7C", Offset = "0x935A7C", VA = "0x935A7C", Slot = "8")]
		public void KeepAlive(IInteractionResult newResult)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x9359C8", Offset = "0x9359C8", VA = "0x9359C8", Slot = "11")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x935D30", Offset = "0x935D30", VA = "0x935D30", Slot = "12")]
		public void Retrieve()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x935D24", Offset = "0x935D24", VA = "0x935D24", Slot = "13")]
		public void MakeAvailable()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x935D38", Offset = "0x935D38", VA = "0x935D38", Slot = "14")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x935D40", Offset = "0x935D40", VA = "0x935D40")]
		public ParticleInteractionResult()
		{
		}
	}
}
namespace Impact.Interactions.Decals
{
	[Token(Token = "0x2000372")]
	public class DecalInteractionResult : IContinuousInteractionResult, IInteractionResult, IDisposable, IPoolable
	{
		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BD74", Offset = "0x72BD74")]
		private InteractionData <OriginalData>k__BackingField;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ImpactDecalBase DecalTemplate;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Range CreationInterval;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionIntervalType CreationIntervalType;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BD84", Offset = "0x72BD84")]
		private long <Key>k__BackingField;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BD94", Offset = "0x72BD94")]
		private bool <IsAlive>k__BackingField;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BDA4", Offset = "0x72BDA4")]
		private ImpactDecalBase <Decal>k__BackingField;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float intervalCounter;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float currentCreationIntervalTarget;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 previousCreationPosition;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IImpactObject parent;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isAvailable;

		[Token(Token = "0x17000245")]
		public InteractionData OriginalData
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xABADB8", Offset = "0xABADB8", VA = "0xABADB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734148", Offset = "0x734148")]
			get
			{
				return default(InteractionData);
			}
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xABADC8", Offset = "0xABADC8", VA = "0xABADC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734158", Offset = "0x734158")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public long Key
		{
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0xABADE4", Offset = "0xABADE4", VA = "0xABADE4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734168", Offset = "0x734168")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0xABADEC", Offset = "0xABADEC", VA = "0xABADEC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734178", Offset = "0x734178")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public bool IsValid
		{
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0xABADF4", Offset = "0xABADF4", VA = "0xABADF4", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		public bool IsAlive
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xABAE64", Offset = "0xABAE64", VA = "0xABAE64", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734188", Offset = "0x734188")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0xABAE6C", Offset = "0xABAE6C", VA = "0xABAE6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734198", Offset = "0x734198")]
			private set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public ImpactDecalBase Decal
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0xABAE78", Offset = "0xABAE78", VA = "0xABAE78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7341A8", Offset = "0x7341A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0xABAE80", Offset = "0xABAE80", VA = "0xABAE80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7341B8", Offset = "0x7341B8")]
			private set
			{
			}
		}

		[Token(Token = "0x14000018")]
		public static event Action<DecalInteractionResult> OnInteractionProcessed
		{
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0xABAC50", Offset = "0xABAC50", VA = "0xABAC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734128", Offset = "0x734128")]
			add
			{
			}
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0xABAD04", Offset = "0xABAD04", VA = "0xABAD04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734138", Offset = "0x734138")]
			remove
			{
			}
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xABAE88", Offset = "0xABAE88", VA = "0xABAE88", Slot = "10")]
		public void Process(IImpactObject parent)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xABB174", Offset = "0xABB174", VA = "0xABB174", Slot = "7")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xABB17C", Offset = "0xABB17C", VA = "0xABB17C", Slot = "8")]
		public void KeepAlive(IInteractionResult newResult)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xABB160", Offset = "0xABB160", VA = "0xABB160", Slot = "11")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xABB3D0", Offset = "0xABB3D0", VA = "0xABB3D0", Slot = "12")]
		public void Retrieve()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xABB3C4", Offset = "0xABB3C4", VA = "0xABB3C4", Slot = "13")]
		public void MakeAvailable()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xABB3D8", Offset = "0xABB3D8", VA = "0xABB3D8", Slot = "14")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xABB3E0", Offset = "0xABB3E0", VA = "0xABB3E0")]
		public DecalInteractionResult()
		{
		}
	}
	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726AA4", Offset = "0x726AA4")]
	public class ImpactDecal : ImpactDecalBase
	{
		[Token(Token = "0x2000374")]
		public enum DecalRotationMode
		{
			[Token(Token = "0x4000E51")]
			AlignToNormalRandom,
			[Token(Token = "0x4000E52")]
			AlignToNormalAndVelocity,
			[Token(Token = "0x4000E53")]
			AlignToNormalOnly
		}

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _decalDistance;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private DecalRotationMode _rotationMode;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AlignmentAxis _axis;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _parentToObject;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private ObjectPoolFallbackMode _poolFallbackMode;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ImpactDecalManager parentObject;

		[Token(Token = "0x1700024A")]
		public override int PoolSize
		{
			[Token(Token = "0x6001202")]
			[Address(RVA = "0xABB3F0", Offset = "0xABB3F0", VA = "0xABB3F0", Slot = "7")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001203")]
			[Address(RVA = "0xABB3F8", Offset = "0xABB3F8", VA = "0xABB3F8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public override ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0xABB400", Offset = "0xABB400", VA = "0xABB400", Slot = "9")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x6001205")]
			[Address(RVA = "0xABB408", Offset = "0xABB408", VA = "0xABB408", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public float DecalDistance
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0xABB410", Offset = "0xABB410", VA = "0xABB410")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001207")]
			[Address(RVA = "0xABB418", Offset = "0xABB418", VA = "0xABB418")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public DecalRotationMode RotationMode
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0xABB420", Offset = "0xABB420", VA = "0xABB420")]
			get
			{
				return default(DecalRotationMode);
			}
			[Token(Token = "0x6001209")]
			[Address(RVA = "0xABB428", Offset = "0xABB428", VA = "0xABB428")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public AlignmentAxis Axis
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0xABB430", Offset = "0xABB430", VA = "0xABB430")]
			get
			{
				return default(AlignmentAxis);
			}
			[Token(Token = "0x600120B")]
			[Address(RVA = "0xABB438", Offset = "0xABB438", VA = "0xABB438")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public bool ParentToObject
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0xABB440", Offset = "0xABB440", VA = "0xABB440")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600120D")]
			[Address(RVA = "0xABB448", Offset = "0xABB448", VA = "0xABB448")]
			set
			{
			}
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xABB454", Offset = "0xABB454", VA = "0xABB454", Slot = "11")]
		public override void SetupDecal(DecalInteractionResult interactionResult, Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xABB6E8", Offset = "0xABB6E8", VA = "0xABB6E8")]
		private void rotateRandom()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xABB7F4", Offset = "0xABB7F4", VA = "0xABB7F4", Slot = "4")]
		public override void Retrieve(int priority)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xABB900", Offset = "0xABB900", VA = "0xABB900", Slot = "5")]
		public override void MakeAvailable()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xABB994", Offset = "0xABB994", VA = "0xABB994")]
		public ImpactDecal()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public abstract class ImpactDecalBase : PooledObject
	{
		[Token(Token = "0x17000250")]
		public abstract int PoolSize
		{
			[Token(Token = "0x6001213")]
			get;
			[Token(Token = "0x6001214")]
			set;
		}

		[Token(Token = "0x17000251")]
		public abstract ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x6001215")]
			get;
			[Token(Token = "0x6001216")]
			set;
		}

		[Token(Token = "0x6001217")]
		public abstract void SetupDecal(DecalInteractionResult interactionResult, Vector3 point, Vector3 normal);

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xABB9BC", Offset = "0xABB9BC", VA = "0xABB9BC")]
		protected ImpactDecalBase()
		{
		}
	}
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x726ADC", Offset = "0x726ADC")]
	public class ImpactDecalInteraction : ImpactInteractionBase
	{
		[Token(Token = "0x4000E54")]
		private const string interactionResultPoolKey = "DecalInteractionResult";

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _minimumVelocity;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _collisionNormalInfluence;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactDecalBase _decalPrefab;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Range _creationInterval;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InteractionIntervalType _creationIntervalType;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _createOnCollision;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool _createOnSlide;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		private bool _createOnRoll;

		[Token(Token = "0x17000252")]
		public float MinimumVelocity
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0xABB9C4", Offset = "0xABB9C4", VA = "0xABB9C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600121A")]
			[Address(RVA = "0xABB9CC", Offset = "0xABB9CC", VA = "0xABB9CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public float CollisionNormalInfluence
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0xABB9D4", Offset = "0xABB9D4", VA = "0xABB9D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600121C")]
			[Address(RVA = "0xABB9DC", Offset = "0xABB9DC", VA = "0xABB9DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public ImpactDecalBase DecalPrefab
		{
			[Token(Token = "0x600121D")]
			[Address(RVA = "0xABB9E4", Offset = "0xABB9E4", VA = "0xABB9E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600121E")]
			[Address(RVA = "0xABB9EC", Offset = "0xABB9EC", VA = "0xABB9EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public Range CreationInterval
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0xABB9F4", Offset = "0xABB9F4", VA = "0xABB9F4")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6001220")]
			[Address(RVA = "0xABB9FC", Offset = "0xABB9FC", VA = "0xABB9FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public InteractionIntervalType CreationIntervalType
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0xABBA04", Offset = "0xABBA04", VA = "0xABBA04")]
			get
			{
				return default(InteractionIntervalType);
			}
			[Token(Token = "0x6001222")]
			[Address(RVA = "0xABBA0C", Offset = "0xABBA0C", VA = "0xABBA0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public bool CreateOnCollision
		{
			[Token(Token = "0x6001223")]
			[Address(RVA = "0xABBA14", Offset = "0xABBA14", VA = "0xABBA14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001224")]
			[Address(RVA = "0xABBA1C", Offset = "0xABBA1C", VA = "0xABBA1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public bool CreateOnSlide
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0xABBA28", Offset = "0xABBA28", VA = "0xABBA28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001226")]
			[Address(RVA = "0xABBA30", Offset = "0xABBA30", VA = "0xABBA30")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public bool CreateOnRoll
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0xABBA3C", Offset = "0xABBA3C", VA = "0xABBA3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xABBA44", Offset = "0xABBA44", VA = "0xABBA44")]
			set
			{
			}
		}

		[Token(Token = "0x6001229")]
		public override IInteractionResult GetInteractionResult<T>(T interactionData)
		{
			return null;
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xABBA50", Offset = "0xABBA50", VA = "0xABBA50")]
		private bool shouldEmit(int collisionParameterType)
		{
			return default(bool);
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xABBA8C", Offset = "0xABBA8C", VA = "0xABBA8C", Slot = "7")]
		public override void Preload()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xABBBDC", Offset = "0xABBBDC", VA = "0xABBBDC")]
		public ImpactDecalInteraction()
		{
		}
	}
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726B30", Offset = "0x726B30")]
	public class ImpactDecalManager : MonoBehaviour
	{
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool suppressDestroyEvent;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ImpactDecalBase> attachedDecals;

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xABB78C", Offset = "0xABB78C", VA = "0xABB78C")]
		public void AddDecal(ImpactDecalBase impactDecal)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xABB898", Offset = "0xABB898", VA = "0xABB898")]
		public void RemoveDecal(ImpactDecalBase impactDecal)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xABBC3C", Offset = "0xABBC3C", VA = "0xABBC3C")]
		public void ReleaseAllDecals()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xABBCBC", Offset = "0xABBCBC", VA = "0xABBCBC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xABBCC8", Offset = "0xABBCC8", VA = "0xABBCC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xABBCD8", Offset = "0xABBCD8", VA = "0xABBCD8")]
		public ImpactDecalManager()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class ImpactDecalPool : ObjectPool<ImpactDecalBase>
	{
		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectPoolGroup<ImpactDecalPool, ImpactDecalBase> poolGroup;

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xABBB10", Offset = "0xABBB10", VA = "0xABBB10")]
		public static void PreloadPoolForDecal(ImpactDecalBase template)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xABAFAC", Offset = "0xABAFAC", VA = "0xABAFAC")]
		public static ImpactDecalBase CreateDecal(DecalInteractionResult collisionResult, Vector3 point, Vector3 normal)
		{
			return null;
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xABBD48", Offset = "0xABBD48", VA = "0xABBD48")]
		public static void ReturnAllDecalsToPools()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xABBDC4", Offset = "0xABBDC4", VA = "0xABBDC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xABBE60", Offset = "0xABBE60", VA = "0xABBE60", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xABBF58", Offset = "0xABBF58", VA = "0xABBF58")]
		private void sceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xABC078", Offset = "0xABC078", VA = "0xABC078")]
		public ImpactDecalPool()
		{
		}
	}
}
namespace Impact.Interactions.Audio
{
	[Token(Token = "0x2000379")]
	public class AudioInteractionResult : IContinuousInteractionResult, IInteractionResult, IDisposable, IPoolable
	{
		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BEA4", Offset = "0x72BEA4")]
		private InteractionData <OriginalData>k__BackingField;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BEB4", Offset = "0x72BEB4")]
		private long <Key>k__BackingField;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ImpactAudioSourceBase AudioSourceTemplate;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip AudioClip;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool LoopAudio;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float Volume;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float Pitch;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ImpactAudioInteraction Interaction;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72BEC4", Offset = "0x72BEC4")]
		private ImpactAudioSourceBase <AudioSource>k__BackingField;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float targetVolume;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float currentVolume;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float targetPitch;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float currentPitch;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IImpactObject parent;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isAvailable;

		[Token(Token = "0x1700025A")]
		public InteractionData OriginalData
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xAB9A14", Offset = "0xAB9A14", VA = "0xAB9A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7341E8", Offset = "0x7341E8")]
			get
			{
				return default(InteractionData);
			}
			[Token(Token = "0x600123E")]
			[Address(RVA = "0xAB9A24", Offset = "0xAB9A24", VA = "0xAB9A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7341F8", Offset = "0x7341F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public long Key
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0xAB9A40", Offset = "0xAB9A40", VA = "0xAB9A40", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734208", Offset = "0x734208")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001240")]
			[Address(RVA = "0xAB9A48", Offset = "0xAB9A48", VA = "0xAB9A48", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734218", Offset = "0x734218")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public bool IsValid
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xAB9A50", Offset = "0xAB9A50", VA = "0xAB9A50", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025D")]
		public bool IsAlive
		{
			[Token(Token = "0x6001242")]
			[Address(RVA = "0xAB9B20", Offset = "0xAB9B20", VA = "0xAB9B20", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025E")]
		public ImpactAudioSourceBase AudioSource
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xAB9BB8", Offset = "0xAB9BB8", VA = "0xAB9BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734228", Offset = "0x734228")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xAB9BC0", Offset = "0xAB9BC0", VA = "0xAB9BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734238", Offset = "0x734238")]
			private set
			{
			}
		}

		[Token(Token = "0x14000019")]
		public static event Action<AudioInteractionResult> OnInteractionProcessed
		{
			[Token(Token = "0x600123B")]
			[Address(RVA = "0xAB98AC", Offset = "0xAB98AC", VA = "0xAB98AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7341C8", Offset = "0x7341C8")]
			add
			{
			}
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xAB9960", Offset = "0xAB9960", VA = "0xAB9960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7341D8", Offset = "0x7341D8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xAB9BC8", Offset = "0xAB9BC8", VA = "0xAB9BC8", Slot = "10")]
		public void Process(IImpactObject parent)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xABA058", Offset = "0xABA058", VA = "0xABA058", Slot = "7")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xABA160", Offset = "0xABA160", VA = "0xABA160", Slot = "8")]
		public void KeepAlive(IInteractionResult newResult)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xAB9FA4", Offset = "0xAB9FA4", VA = "0xAB9FA4", Slot = "11")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xABA2F0", Offset = "0xABA2F0", VA = "0xABA2F0", Slot = "12")]
		public void Retrieve()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xABA2E4", Offset = "0xABA2E4", VA = "0xABA2E4", Slot = "13")]
		public void MakeAvailable()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xABA2F8", Offset = "0xABA2F8", VA = "0xABA2F8", Slot = "14")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xABA300", Offset = "0xABA300", VA = "0xABA300")]
		public AudioInteractionResult()
		{
		}
	}
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x726B68", Offset = "0x726B68")]
	public class ImpactAudioInteraction : ImpactInteractionBase
	{
		[Token(Token = "0x200037B")]
		public enum CollisionAudioClipSelectionMode
		{
			[Token(Token = "0x4000E7E")]
			Velocity,
			[Token(Token = "0x4000E7F")]
			Random
		}

		[Token(Token = "0x4000E70")]
		private const string interactionResultPoolKey = "AudioInteractionResult";

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Range _velocityRange;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Range _randomPitchRange;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Range _randomVolumeRange;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _scaleVolumeWithVelocity;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve _velocityVolumeScaleCurve;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _collisionNormalInfluence;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _slideVelocityPitchMultiplier;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ImpactAudioSourceBase _audioSourceTemplate;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CollisionAudioClipSelectionMode _collisionAudioSelectionMode;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<AudioClip> _collisionAudioClips;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip _slideAudioClip;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip _rollAudioClip;

		[Token(Token = "0x1700025F")]
		public Range VelocityRange
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0xABA310", Offset = "0xABA310", VA = "0xABA310")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x600124E")]
			[Address(RVA = "0xABA318", Offset = "0xABA318", VA = "0xABA318")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public Range RandomPitchRange
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0xABA320", Offset = "0xABA320", VA = "0xABA320")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6001250")]
			[Address(RVA = "0xABA328", Offset = "0xABA328", VA = "0xABA328")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public Range RandomVolumeRange
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xABA330", Offset = "0xABA330", VA = "0xABA330")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xABA338", Offset = "0xABA338", VA = "0xABA338")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public bool ScaleVolumeWithVelocity
		{
			[Token(Token = "0x6001253")]
			[Address(RVA = "0xABA340", Offset = "0xABA340", VA = "0xABA340")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001254")]
			[Address(RVA = "0xABA348", Offset = "0xABA348", VA = "0xABA348")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public AnimationCurve VelocityVolumeScaleCurve
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xABA354", Offset = "0xABA354", VA = "0xABA354")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xABA35C", Offset = "0xABA35C", VA = "0xABA35C")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public float CollisionNormalInfluence
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xABA364", Offset = "0xABA364", VA = "0xABA364")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xABA36C", Offset = "0xABA36C", VA = "0xABA36C")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public float SlideVelocityPitchMultiplier
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0xABA374", Offset = "0xABA374", VA = "0xABA374")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600125A")]
			[Address(RVA = "0xABA37C", Offset = "0xABA37C", VA = "0xABA37C")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public CollisionAudioClipSelectionMode CollisionAudioSelectionMode
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xABA384", Offset = "0xABA384", VA = "0xABA384")]
			get
			{
				return default(CollisionAudioClipSelectionMode);
			}
			[Token(Token = "0x600125C")]
			[Address(RVA = "0xABA38C", Offset = "0xABA38C", VA = "0xABA38C")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public ImpactAudioSourceBase AudioSourceTemplate
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0xABA394", Offset = "0xABA394", VA = "0xABA394")]
			get
			{
				return null;
			}
			[Token(Token = "0x600125E")]
			[Address(RVA = "0xABA39C", Offset = "0xABA39C", VA = "0xABA39C")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public List<AudioClip> CollisionAudioClips
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xABA3A4", Offset = "0xABA3A4", VA = "0xABA3A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		public AudioClip SlideAudioClip
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0xABA3AC", Offset = "0xABA3AC", VA = "0xABA3AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001261")]
			[Address(RVA = "0xABA3B4", Offset = "0xABA3B4", VA = "0xABA3B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public AudioClip RollAudioClip
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xABA3BC", Offset = "0xABA3BC", VA = "0xABA3BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xABA3C4", Offset = "0xABA3C4", VA = "0xABA3C4")]
			set
			{
			}
		}

		[Token(Token = "0x6001264")]
		public override IInteractionResult GetInteractionResult<T>(T interactionData)
		{
			return null;
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xABA294", Offset = "0xABA294", VA = "0xABA294")]
		public float UpdatePitch(float originalPitch, Vector3 velocity)
		{
			return default(float);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xABA3CC", Offset = "0xABA3CC", VA = "0xABA3CC")]
		private float getVolume(float normalizedIntensity)
		{
			return default(float);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xABA44C", Offset = "0xABA44C", VA = "0xABA44C")]
		private AudioClip getAudioClip(int interactionType, float normalizedIntensity)
		{
			return null;
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xABA47C", Offset = "0xABA47C", VA = "0xABA47C")]
		private AudioClip getCollisionAudioClip(float normalizedIntensity)
		{
			return null;
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xABA568", Offset = "0xABA568", VA = "0xABA568")]
		private AudioClip getRandomCollisionAudioClip()
		{
			return null;
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xABA5FC", Offset = "0xABA5FC", VA = "0xABA5FC", Slot = "7")]
		public override void Preload()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xABA74C", Offset = "0xABA74C", VA = "0xABA74C")]
		public ImpactAudioInteraction()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class ImpactAudioPool : ObjectPool<ImpactAudioSourceBase>
	{
		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectPoolGroup<ImpactAudioPool, ImpactAudioSourceBase> poolGroup;

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xABA680", Offset = "0xABA680", VA = "0xABA680")]
		public static void PreloadPoolForAudioSource(ImpactAudioSourceBase template)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xAB9E04", Offset = "0xAB9E04", VA = "0xAB9E04")]
		public static ImpactAudioSourceBase PlayAudio(AudioInteractionResult interactionResult, Vector3 point, int priority)
		{
			return null;
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xABA878", Offset = "0xABA878", VA = "0xABA878", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xABA910", Offset = "0xABA910", VA = "0xABA910")]
		public ImpactAudioPool()
		{
		}
	}
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x726BBC", Offset = "0x726BBC")]
	public class ImpactAudioSource : ImpactAudioSourceBase
	{
		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ObjectPoolFallbackMode _poolFallbackMode;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float baseVolume;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float basePitch;

		[Token(Token = "0x1700026B")]
		public override int PoolSize
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0xABA9D4", Offset = "0xABA9D4", VA = "0xABA9D4", Slot = "7")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001272")]
			[Address(RVA = "0xABA9DC", Offset = "0xABA9DC", VA = "0xABA9DC", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public override ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0xABA9E4", Offset = "0xABA9E4", VA = "0xABA9E4", Slot = "9")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x6001274")]
			[Address(RVA = "0xABA9EC", Offset = "0xABA9EC", VA = "0xABA9EC", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xABA9F4", Offset = "0xABA9F4", VA = "0xABA9F4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xABAA4C", Offset = "0xABAA4C", VA = "0xABAA4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xABAA94", Offset = "0xABAA94", VA = "0xABAA94", Slot = "11")]
		public override void PlayAudio(AudioInteractionResult interactionResult, Vector3 point)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xABAB64", Offset = "0xABAB64", VA = "0xABAB64", Slot = "12")]
		public override void UpdateAudio(float volume, float pitch)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xABABBC", Offset = "0xABABBC", VA = "0xABABBC", Slot = "13")]
		public override void StopAudio()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xABABD8", Offset = "0xABABD8", VA = "0xABABD8")]
		private void Update()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xABAC34", Offset = "0xABAC34", VA = "0xABAC34")]
		public ImpactAudioSource()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public abstract class ImpactAudioSourceBase : PooledObject
	{
		[Token(Token = "0x1700026D")]
		public abstract int PoolSize
		{
			[Token(Token = "0x600127C")]
			get;
			[Token(Token = "0x600127D")]
			set;
		}

		[Token(Token = "0x1700026E")]
		public abstract ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x600127E")]
			get;
			[Token(Token = "0x600127F")]
			set;
		}

		[Token(Token = "0x6001280")]
		public abstract void PlayAudio(AudioInteractionResult interactionResult, Vector3 point);

		[Token(Token = "0x6001281")]
		public abstract void UpdateAudio(float volume, float pitch);

		[Token(Token = "0x6001282")]
		public abstract void StopAudio();

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xABAC48", Offset = "0xABAC48", VA = "0xABAC48")]
		protected ImpactAudioSourceBase()
		{
		}
	}
}
namespace Impact.Data
{
	[Token(Token = "0x200037F")]
	public enum AlignmentAxis
	{
		[Token(Token = "0x4000E87")]
		ZDown,
		[Token(Token = "0x4000E88")]
		ZUp,
		[Token(Token = "0x4000E89")]
		YDown,
		[Token(Token = "0x4000E8A")]
		YUp
	}
	[Token(Token = "0x2000380")]
	public static class AlignmentAxisUtilities
	{
		[Token(Token = "0x6001284")]
		[Address(RVA = "0xAB6848", Offset = "0xAB6848", VA = "0xAB6848")]
		public static Quaternion GetRotationForAlignment(AlignmentAxis alignment, Vector3 normal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xAB6A6C", Offset = "0xAB6A6C", VA = "0xAB6A6C")]
		public static Quaternion GetVelocityRotation(AlignmentAxis alignment, Vector3 normal, Vector3 velocity)
		{
			return default(Quaternion);
		}
	}
}
namespace Descriptors
{
	[Serializable]
	[Token(Token = "0x2000381")]
	public class SolutionShard : MonoBehaviour
	{
		[Token(Token = "0x2000382")]
		public enum ShardType
		{
			[Token(Token = "0x4000E8E")]
			NONE = -1,
			[Token(Token = "0x4000E8F")]
			GESTURE,
			[Token(Token = "0x4000E90")]
			PUZZLE
		}

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72BFC4", Offset = "0x72BFC4")]
		public ShardType m_type;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_validity;

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x97AAE4", Offset = "0x97AAE4", VA = "0x97AAE4")]
		public bool GetValidity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x97AAEC", Offset = "0x97AAEC", VA = "0x97AAEC")]
		private void ApplyValidity(bool validity)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x97ABC8", Offset = "0x97ABC8", VA = "0x97ABC8")]
		public void ActivateShard()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x97AC84", Offset = "0x97AC84", VA = "0x97AC84")]
		public void DeactivateShard()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x97AD70", Offset = "0x97AD70", VA = "0x97AD70")]
		public void ResetShard()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x97AE84", Offset = "0x97AE84", VA = "0x97AE84")]
		public SolutionShard()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000383")]
	public class TimedAction
	{
		[Token(Token = "0x2000384")]
		public enum ActionType
		{
			[Token(Token = "0x4000E94")]
			NONE = -1,
			[Token(Token = "0x4000E95")]
			COLORBASE,
			[Token(Token = "0x4000E96")]
			COLORWARN,
			[Token(Token = "0x4000E97")]
			OBJECTENABLE,
			[Token(Token = "0x4000E98")]
			OBJECTDISABLE
		}

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72BFFC", Offset = "0x72BFFC")]
		public ActionType m_actionType;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72C034", Offset = "0x72C034")]
		public float m_time;

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x97AE94", Offset = "0x97AE94", VA = "0x97AE94")]
		public TimedAction()
		{
		}
	}
}
namespace main
{
	[Token(Token = "0x2000385")]
	public class Blaster : MonoBehaviour
	{
		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72C06C", Offset = "0x72C06C")]
		public float m_blastForce;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72C084", Offset = "0x72C084")]
		public float m_blastRadius;

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xB00E74", Offset = "0xB00E74", VA = "0xB00E74")]
		private void Start()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xB00E78", Offset = "0xB00E78", VA = "0xB00E78")]
		public void Blast()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xB00FE0", Offset = "0xB00FE0", VA = "0xB00FE0")]
		public Blaster()
		{
		}
	}
}
namespace HUD
{
	[Token(Token = "0x2000386")]
	public class BeginCanvasHider : MonoBehaviour
	{
		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_numOfWaitedFrames;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_numOfTransparencyFrames;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_transparencyFrameCounter;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_color;

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xAB35E4", Offset = "0xAB35E4", VA = "0xAB35E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xAB3664", Offset = "0xAB3664", VA = "0xAB3664")]
		private void Update()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xAB3748", Offset = "0xAB3748", VA = "0xAB3748")]
		public BeginCanvasHider()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class LeaveCanvasLoader : MonoBehaviour
	{
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_numOfTransparencyFrames;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_frameCounter;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color m_color;

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xAB375C", Offset = "0xAB375C", VA = "0xAB375C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xAB37E0", Offset = "0xAB37E0", VA = "0xAB37E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xAB388C", Offset = "0xAB388C", VA = "0xAB388C")]
		public LeaveCanvasLoader()
		{
		}
	}
}
namespace Skin
{
	[Serializable]
	[Token(Token = "0x2000388")]
	public class SkinDescriptor
	{
		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject m_model;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_picture;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_color;

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xA34A04", Offset = "0xA34A04", VA = "0xA34A04")]
		public SkinDescriptor()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class SkinSelector : MonoBehaviour
	{
		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SkinDescriptor> m_selectableHeadList;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SkinDescriptor> m_selectableHatList;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SkinDescriptor> m_selectableGlovesList;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SkinDescriptor> m_selectableGlassesList;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<SkinDescriptor> m_selectableMustacheList;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<SkinDescriptor> m_selectablePipeList;

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xA34A0C", Offset = "0xA34A0C", VA = "0xA34A0C")]
		public SkinSelector()
		{
		}
	}
}
namespace Localization
{
	[Token(Token = "0x200038A")]
	public class LocalizationSelector : MonoBehaviour
	{
		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_selectedMarker;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizationXmlReader.LanguageType m_languageType;

		[Token(Token = "0x1400001A")]
		public static event EventHandler s_changeLanguageEvent
		{
			[Token(Token = "0x6001298")]
			[Address(RVA = "0x944164", Offset = "0x944164", VA = "0x944164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734248", Offset = "0x734248")]
			add
			{
			}
			[Token(Token = "0x6001299")]
			[Address(RVA = "0x944218", Offset = "0x944218", VA = "0x944218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734258", Offset = "0x734258")]
			remove
			{
			}
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x9442CC", Offset = "0x9442CC", VA = "0x9442CC")]
		private void Start()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x9443C4", Offset = "0x9443C4", VA = "0x9443C4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x9445DC", Offset = "0x9445DC", VA = "0x9445DC")]
		public LocalizationSelector()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class LocalizationSelectorAvatar : MonoBehaviour
	{
		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726BF4", Offset = "0x726BF4")]
		private sealed class <PosponeEventCooldown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizationSelectorAvatar <>4__this;

			[Token(Token = "0x4000EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject cooldownObject;

			[Token(Token = "0x1700026F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012A8")]
				[Address(RVA = "0x944BE0", Offset = "0x944BE0", VA = "0x944BE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012AA")]
				[Address(RVA = "0x944C48", Offset = "0x944C48", VA = "0x944C48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x944A30", Offset = "0x944A30", VA = "0x944A30")]
			[DebuggerHidden]
			public <PosponeEventCooldown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x944A64", Offset = "0x944A64", VA = "0x944A64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x944A68", Offset = "0x944A68", VA = "0x944A68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012A9")]
			[Address(RVA = "0x944BE8", Offset = "0x944BE8", VA = "0x944BE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_avatarNameId;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_onPospone;

		[Token(Token = "0x1400001B")]
		public static event EventHandler s_changeAvatarNameUpEvent
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x9445E4", Offset = "0x9445E4", VA = "0x9445E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734268", Offset = "0x734268")]
			add
			{
			}
			[Token(Token = "0x600129E")]
			[Address(RVA = "0x944698", Offset = "0x944698", VA = "0x944698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734278", Offset = "0x734278")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public static event EventHandler s_changeAvatarNameDownEvent
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0x94474C", Offset = "0x94474C", VA = "0x94474C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734288", Offset = "0x734288")]
			add
			{
			}
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x944804", Offset = "0x944804", VA = "0x944804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734298", Offset = "0x734298")]
			remove
			{
			}
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x9448BC", Offset = "0x9448BC", VA = "0x9448BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x9448C0", Offset = "0x9448C0", VA = "0x9448C0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x9449B4", Offset = "0x9449B4", VA = "0x9449B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7342A8", Offset = "0x7342A8")]
		private IEnumerator PosponeEventCooldown(GameObject cooldownObject)
		{
			return null;
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x944A5C", Offset = "0x944A5C", VA = "0x944A5C")]
		public LocalizationSelectorAvatar()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class LocalizationXmlReader : MonoBehaviour
	{
		[Token(Token = "0x200038E")]
		public enum LanguageType
		{
			[Token(Token = "0x4000EC6")]
			ENGLISH = 1,
			[Token(Token = "0x4000EC7")]
			HUNGARIAN,
			[Token(Token = "0x4000EC8")]
			SPANISH,
			[Token(Token = "0x4000EC9")]
			GERMAN,
			[Token(Token = "0x4000ECA")]
			RUSSIAN,
			[Token(Token = "0x4000ECB")]
			FRENCH,
			[Token(Token = "0x4000ECC")]
			BRASIL,
			[Token(Token = "0x4000ECD")]
			ITALIAN,
			[Token(Token = "0x4000ECE")]
			POLISH,
			[Token(Token = "0x4000ECF")]
			CHINESE,
			[Token(Token = "0x4000ED0")]
			SWEDISH,
			[Token(Token = "0x4000ED1")]
			JAPANESE
		}

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> m_inEnglish;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> m_inHungarian;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> m_inSpanish;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> m_inGerman;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<string> m_inRussian;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> m_inFrench;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> m_inBrasil;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<string> m_inItalian;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<string> m_inPolish;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<string> m_inChinese;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<string> m_inSwedish;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<string> m_inJapanese;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextAsset xmlLanguageFile;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text uiText;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LanguageType m_languageType;

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x944C50", Offset = "0x944C50", VA = "0x944C50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x944DC8", Offset = "0x944DC8", VA = "0x944DC8")]
		private void parseXmlFile(string xmlData)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x946278", Offset = "0x946278", VA = "0x946278")]
		private void Start()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x9462F8", Offset = "0x9462F8", VA = "0x9462F8")]
		public void SetLanguageType(LanguageType languageType)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x946300", Offset = "0x946300", VA = "0x946300")]
		public LanguageType GetLanguageType()
		{
			return default(LanguageType);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x946308", Offset = "0x946308", VA = "0x946308")]
		public string GetLocalizedByActiveDictionary(int textId)
		{
			return null;
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x9464B8", Offset = "0x9464B8", VA = "0x9464B8")]
		public LocalizationXmlReader()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class LocalizePicture : MonoBehaviour
	{
		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<Sprite> m_localizedPictures;

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x946640", Offset = "0x946640", VA = "0x946640")]
		private void Start()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x94672C", Offset = "0x94672C", VA = "0x94672C")]
		public LocalizePicture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000390")]
	public class Localized : MonoBehaviour
	{
		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726C04", Offset = "0x726C04")]
		private sealed class <RefreshAllTMPLanguage>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Localized <>4__this;

			[Token(Token = "0x17000271")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012BE")]
				[Address(RVA = "0x946F1C", Offset = "0x946F1C", VA = "0x946F1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000272")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012C0")]
				[Address(RVA = "0x946F84", Offset = "0x946F84", VA = "0x946F84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x946E08", Offset = "0x946E08", VA = "0x946E08")]
			[DebuggerHidden]
			public <RefreshAllTMPLanguage>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x946E44", Offset = "0x946E44", VA = "0x946E44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x946E48", Offset = "0x946E48", VA = "0x946E48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x946F24", Offset = "0x946F24", VA = "0x946F24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72C10C", Offset = "0x72C10C")]
		private int m_textId;

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x94679C", Offset = "0x94679C", VA = "0x94679C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x94680C", Offset = "0x94680C", VA = "0x94680C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x9469C0", Offset = "0x9469C0", VA = "0x9469C0")]
		public void SetLocalizedText(int textId)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x946B74", Offset = "0x946B74", VA = "0x946B74")]
		private void RefreshLocalizedText(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x946D28", Offset = "0x946D28", VA = "0x946D28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x946D98", Offset = "0x946D98", VA = "0x946D98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x73435C", Offset = "0x73435C")]
		private IEnumerator RefreshAllTMPLanguage()
		{
			return null;
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x946E34", Offset = "0x946E34", VA = "0x946E34")]
		public Localized()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000392")]
	public class LocalizedAvatar : MonoBehaviour
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72C158", Offset = "0x72C158")]
		private int m_textId;

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x946F8C", Offset = "0x946F8C", VA = "0x946F8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x947070", Offset = "0x947070", VA = "0x947070")]
		private void Start()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x947140", Offset = "0x947140", VA = "0x947140")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x9471E4", Offset = "0x9471E4", VA = "0x9471E4")]
		private void RefreshAvatarNameUp(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x9472F0", Offset = "0x9472F0", VA = "0x9472F0")]
		private void RefreshAvatarNameDown(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x947400", Offset = "0x947400", VA = "0x947400")]
		public LocalizedAvatar()
		{
		}
	}
}
namespace resources
{
	[Token(Token = "0x2000393")]
	public class Resource : MonoBehaviour
	{
		[Token(Token = "0x2000394")]
		public enum ResourceType
		{
			[Token(Token = "0x4000ED9")]
			Mana,
			[Token(Token = "0x4000EDA")]
			Crystal
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xB02E0C", Offset = "0xB02E0C", VA = "0xB02E0C")]
		public Resource()
		{
		}
	}
}
namespace Puzzle
{
	[Serializable]
	[Token(Token = "0x2000395")]
	public class PuzzleDescriptor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000396")]
		public class Slice
		{
			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_sliceObject;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject m_locatorObject;

			[Token(Token = "0x60012C9")]
			[Address(RVA = "0xA26E68", Offset = "0xA26E68", VA = "0xA26E68")]
			public Slice()
			{
			}
		}

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Slice> m_puzzleSlices;

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xA26DF8", Offset = "0xA26DF8", VA = "0xA26DF8")]
		public PuzzleDescriptor()
		{
		}
	}
}
namespace messanger
{
	[Token(Token = "0x2000397")]
	public class Messenger : MonoBehaviour
	{
		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Text m_debugText;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool m_clearDebug;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int m_RowNum;

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xB00FE8", Offset = "0xB00FE8", VA = "0xB00FE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xB01144", Offset = "0xB01144", VA = "0xB01144")]
		public static void SendToCanvas(string strMessage)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xB013A0", Offset = "0xB013A0", VA = "0xB013A0")]
		public Messenger()
		{
		}
	}
}
namespace util
{
	[Token(Token = "0x2000398")]
	public class FpsMeasurer : MonoBehaviour
	{
		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000EE2")]
		private const int m_optimalFPS = 60;

		[Token(Token = "0x4000EE3")]
		private const float m_updateInterval = 0.5f;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_frameCounter;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_framesTime;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_isShown;

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xB036FC", Offset = "0xB036FC", VA = "0xB036FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xB03754", Offset = "0xB03754", VA = "0xB03754")]
		private void Update()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xB038BC", Offset = "0xB038BC", VA = "0xB038BC")]
		public FpsMeasurer()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class FpsMeasurer2 : MonoBehaviour
	{
		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_display;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72C1B4", Offset = "0x72C1B4")]
		private float m_sampleDuration;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_frames;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_duration;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_bestFPS;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_worstFPS;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder sb;

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xB038CC", Offset = "0xB038CC", VA = "0xB038CC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xB0393C", Offset = "0xB0393C", VA = "0xB0393C")]
		private string GetColor(float fps)
		{
			return null;
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xB039C0", Offset = "0xB039C0", VA = "0xB039C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xB03C54", Offset = "0xB03C54", VA = "0xB03C54")]
		public FpsMeasurer2()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class ChildrenActivation : MonoBehaviour
	{
		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_childrenRoot;

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xB03118", Offset = "0xB03118", VA = "0xB03118")]
		public void SetChildenActive(bool active)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xB033D8", Offset = "0xB033D8", VA = "0xB033D8")]
		public void SwitchChildenActive()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xB036F4", Offset = "0xB036F4", VA = "0xB036F4")]
		public ChildrenActivation()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class MaterialSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_matOne;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_matOther;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> m_meshContainer;

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x159C55C", Offset = "0x159C55C", VA = "0x159C55C")]
		public void SwitchToOne()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x159C760", Offset = "0x159C760", VA = "0x159C760")]
		public void SwitchToOther()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x159C564", Offset = "0x159C564", VA = "0x159C564")]
		private void Switch(Material from, Material to)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x159C768", Offset = "0x159C768", VA = "0x159C768")]
		public MaterialSwitcher()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class NumToMesh : MonoBehaviour
	{
		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_placesList;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_origPosOnes;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_origPosTens;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_origPosHundreds;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_originPosInitialized;

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x159C7D8", Offset = "0x159C7D8", VA = "0x159C7D8")]
		private void IntOriginalPos()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x159C8F4", Offset = "0x159C8F4", VA = "0x159C8F4")]
		public void ConvertToMeshes(int numbertoConvert)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x159CD8C", Offset = "0x159CD8C", VA = "0x159CD8C")]
		private void UpdateMeshPositions(int numbertoConvert)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x159CFC0", Offset = "0x159CFC0", VA = "0x159CFC0")]
		public NumToMesh()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class ScreenshotCreator
	{
		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726C14", Offset = "0x726C14")]
		private sealed class <CreatorScreenshot>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int superSize;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int numTimes;

			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float secDelay;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <persistentPath>5__2;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <shotIx>5__3;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012E6")]
				[Address(RVA = "0x159D7A8", Offset = "0x159D7A8", VA = "0x159D7A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E8")]
				[Address(RVA = "0x159D810", Offset = "0x159D810", VA = "0x159D810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x159D0C0", Offset = "0x159D0C0", VA = "0x159D0C0")]
			[DebuggerHidden]
			public <CreatorScreenshot>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x159D148", Offset = "0x159D148", VA = "0x159D148", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x159D14C", Offset = "0x159D14C", VA = "0x159D14C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x159D7B0", Offset = "0x159D7B0", VA = "0x159D7B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int m_resolution;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static RenderTexture m_renderTexture;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Texture2D m_screenShot;

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x159D034", Offset = "0x159D034", VA = "0x159D034")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x734410", Offset = "0x734410")]
		public static IEnumerator CreatorScreenshot(float secDelay = 1f, int numTimes = 3, int superSize = 4)
		{
			return null;
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x159D0EC", Offset = "0x159D0EC", VA = "0x159D0EC")]
		public ScreenshotCreator()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class Timer
	{
		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_isTicking;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_remainingTime;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeout;

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x159D818", Offset = "0x159D818", VA = "0x159D818")]
		public Timer(float p_timeout)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x159D850", Offset = "0x159D850", VA = "0x159D850")]
		public void Start()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x159D85C", Offset = "0x159D85C", VA = "0x159D85C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x159D870", Offset = "0x159D870", VA = "0x159D870")]
		public void Set(float p_timeout)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x159D880", Offset = "0x159D880", VA = "0x159D880")]
		public void Elapse()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x159D8CC", Offset = "0x159D8CC", VA = "0x159D8CC")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x159D8D4", Offset = "0x159D8D4", VA = "0x159D8D4")]
		public bool IsTicking()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x159D8DC", Offset = "0x159D8DC", VA = "0x159D8DC")]
		private void CallTerminateAction()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class TimerUp
	{
		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_isTicking;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_startTime;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_elapsedTime;

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x159D8E0", Offset = "0x159D8E0", VA = "0x159D8E0")]
		public TimerUp(float p_startTime)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x159D91C", Offset = "0x159D91C", VA = "0x159D91C")]
		public void Start()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x159D928", Offset = "0x159D928", VA = "0x159D928")]
		public void Reset()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x159D938", Offset = "0x159D938", VA = "0x159D938")]
		public void Set(float p_startTime)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x159D94C", Offset = "0x159D94C", VA = "0x159D94C")]
		public void Elapse()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x159D98C", Offset = "0x159D98C", VA = "0x159D98C")]
		public float GetElapsedTime()
		{
			return default(float);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x159D994", Offset = "0x159D994", VA = "0x159D994")]
		public bool IsTicking()
		{
			return default(bool);
		}
	}
}
namespace AbilityUtils
{
	[Token(Token = "0x20003A1")]
	public class AbilityCaster : MonoBehaviour
	{
		[Token(Token = "0x20003A2")]
		public enum AbilityType
		{
			[Token(Token = "0x4000F0A")]
			NONE = -1,
			[Token(Token = "0x4000F0B")]
			MOVE,
			[Token(Token = "0x4000F0C")]
			SCALE,
			[Token(Token = "0x4000F0D")]
			SPELL_A,
			[Token(Token = "0x4000F0E")]
			SPELL_B,
			[Token(Token = "0x4000F0F")]
			SPELL_C
		}

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72C228", Offset = "0x72C228")]
		public AbilityType m_abilityType;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_abilityTarget;

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x967F58", Offset = "0x967F58", VA = "0x967F58")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x967F5C", Offset = "0x967F5C", VA = "0x967F5C")]
		public AbilityCaster()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20003A3")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000275")]
		public bool Highlight
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x91CF30", Offset = "0x91CF30", VA = "0x91CF30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x91CF38", Offset = "0x91CF38", VA = "0x91CF38")]
			set
			{
			}
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x91CF44", Offset = "0x91CF44", VA = "0x91CF44")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x91D110", Offset = "0x91D110", VA = "0x91D110", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x91D138", Offset = "0x91D138", VA = "0x91D138", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x91D160", Offset = "0x91D160", VA = "0x91D160")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x91D010", Offset = "0x91D010", VA = "0x91D010")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x91D3B4", Offset = "0x91D3B4", VA = "0x91D3B4")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000276")]
		public bool InRange
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x91DB1C", Offset = "0x91DB1C", VA = "0x91DB1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x91DB24", Offset = "0x91DB24", VA = "0x91DB24")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public bool Targeted
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x91DCA0", Offset = "0x91DCA0", VA = "0x91DCA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x91DCA8", Offset = "0x91DCA8", VA = "0x91DCA8")]
			set
			{
			}
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x91DCB4", Offset = "0x91DCB4", VA = "0x91DCB4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x91DB30", Offset = "0x91DB30", VA = "0x91DB30")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x91DE54", Offset = "0x91DE54", VA = "0x91DE54")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x726C24", Offset = "0x726C24")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000278")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0x91DE5C", Offset = "0x91DE5C", VA = "0x91DE5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600130B")]
			[Address(RVA = "0x91DE64", Offset = "0x91DE64", VA = "0x91DE64")]
			set
			{
			}
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x91DE80", Offset = "0x91DE80", VA = "0x91DE80", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x91E088", Offset = "0x91E088", VA = "0x91E088", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x91E9A4", Offset = "0x91E9A4", VA = "0x91E9A4", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x91EF60", Offset = "0x91EF60", VA = "0x91EF60", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x91F340", Offset = "0x91F340", VA = "0x91F340")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x91E2D4", Offset = "0x91E2D4", VA = "0x91E2D4")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x91F41C", Offset = "0x91F41C", VA = "0x91F41C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x91F858", Offset = "0x91F858", VA = "0x91F858", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x91F870", Offset = "0x91F870", VA = "0x91F870", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x91F878", Offset = "0x91F878", VA = "0x91F878")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x9213C8", Offset = "0x9213C8", VA = "0x9213C8")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x921478", Offset = "0x921478", VA = "0x921478")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x921524", Offset = "0x921524", VA = "0x921524")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20003A8")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000F32")]
			Disabled,
			[Token(Token = "0x4000F33")]
			Enabled,
			[Token(Token = "0x4000F34")]
			Targeted
		}

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x92152C", Offset = "0x92152C", VA = "0x92152C")]
		private void Start()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x91DDB8", Offset = "0x91DDB8", VA = "0x91DDB8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x921594", Offset = "0x921594", VA = "0x921594")]
		private void Update()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x9215DC", Offset = "0x9215DC", VA = "0x9215DC")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600131D")]
		[Address(RVA = "0x9263B8", Offset = "0x9263B8", VA = "0x9263B8")]
		private void Start()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x926484", Offset = "0x926484", VA = "0x926484")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x926490", Offset = "0x926490", VA = "0x926490")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x92649C", Offset = "0x92649C", VA = "0x92649C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x91BBBC", Offset = "0x91BBBC", VA = "0x91BBBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x91BC14", Offset = "0x91BC14", VA = "0x91BC14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x91BEB8", Offset = "0x91BEB8", VA = "0x91BEB8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x91BFA8", Offset = "0x91BFA8", VA = "0x91BFA8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x91BC18", Offset = "0x91BC18", VA = "0x91BC18")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x91C098", Offset = "0x91C098", VA = "0x91C098")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20003AC")]
		public enum ContactTest
		{
			[Token(Token = "0x4000F46")]
			PerpenTest,
			[Token(Token = "0x4000F47")]
			BackwardsPress
		}

		[Token(Token = "0x4000F38")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000F39")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000279")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0x91C130", Offset = "0x91C130", VA = "0x91C130", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700027A")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001328")]
			[Address(RVA = "0x91C138", Offset = "0x91C138", VA = "0x91C138")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x91C144", Offset = "0x91C144", VA = "0x91C144", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x91C294", Offset = "0x91C294", VA = "0x91C294")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x91C49C", Offset = "0x91C49C", VA = "0x91C49C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x91C9E0", Offset = "0x91C9E0", VA = "0x91C9E0")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x91C8F8", Offset = "0x91C8F8", VA = "0x91C8F8")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x91CB30", Offset = "0x91CB30", VA = "0x91CB30")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x91CC24", Offset = "0x91CC24", VA = "0x91CC24")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x91CD50", Offset = "0x91CD50", VA = "0x91CD50")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C390", Offset = "0x72C390")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C3A0", Offset = "0x72C3A0")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700027B")]
		public Collider Collider
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0x91CE3C", Offset = "0x91CE3C", VA = "0x91CE3C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7344C4", Offset = "0x7344C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x91CE44", Offset = "0x91CE44", VA = "0x91CE44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7344D4", Offset = "0x7344D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0x91CE4C", Offset = "0x91CE4C", VA = "0x91CE4C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7344E4", Offset = "0x7344E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x91CE54", Offset = "0x91CE54", VA = "0x91CE54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7344F4", Offset = "0x7344F4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0x91CE5C", Offset = "0x91CE5C", VA = "0x91CE5C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x91CEAC", Offset = "0x91CEAC", VA = "0x91CEAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x91CF28", Offset = "0x91CF28", VA = "0x91CF28")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700027E")]
		Collider Collider
		{
			[Token(Token = "0x6001338")]
			get;
		}

		[Token(Token = "0x1700027F")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001339")]
			get;
		}

		[Token(Token = "0x17000280")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600133A")]
			get;
		}
	}
	[Token(Token = "0x20003AF")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x91C3F8", Offset = "0x91C3F8", VA = "0x91C3F8")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public enum InteractionType
	{
		[Token(Token = "0x4000F50")]
		Enter,
		[Token(Token = "0x4000F51")]
		Stay,
		[Token(Token = "0x4000F52")]
		Exit
	}
	[Token(Token = "0x20003B1")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20003B2")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000F64")]
			Mesh,
			[Token(Token = "0x4000F65")]
			Skeleton,
			[Token(Token = "0x4000F66")]
			Both
		}

		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726C88", Offset = "0x726C88")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700028C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600135D")]
				[Address(RVA = "0x9224D0", Offset = "0x9224D0", VA = "0x9224D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600135F")]
				[Address(RVA = "0x922538", Offset = "0x922538", VA = "0x922538", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600135A")]
			[Address(RVA = "0x921FC4", Offset = "0x921FC4", VA = "0x921FC4")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600135B")]
			[Address(RVA = "0x9222B0", Offset = "0x9222B0", VA = "0x9222B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600135C")]
			[Address(RVA = "0x9222B4", Offset = "0x9222B4", VA = "0x9222B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600135E")]
			[Address(RVA = "0x9224D8", Offset = "0x9224D8", VA = "0x9224D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F53")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C3D0", Offset = "0x72C3D0")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000281")]
		public OVRHand RightHand
		{
			[Token(Token = "0x600133C")]
			[Address(RVA = "0x9204CC", Offset = "0x9204CC", VA = "0x9204CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600133D")]
			[Address(RVA = "0x9215E4", Offset = "0x9215E4", VA = "0x9215E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600133E")]
			[Address(RVA = "0x92104C", Offset = "0x92104C", VA = "0x92104C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600133F")]
			[Address(RVA = "0x92164C", Offset = "0x92164C", VA = "0x92164C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001340")]
			[Address(RVA = "0x9216B4", Offset = "0x9216B4", VA = "0x9216B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001341")]
			[Address(RVA = "0x9216EC", Offset = "0x9216EC", VA = "0x9216EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001342")]
			[Address(RVA = "0x921754", Offset = "0x921754", VA = "0x921754")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001343")]
			[Address(RVA = "0x92178C", Offset = "0x92178C", VA = "0x92178C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001344")]
			[Address(RVA = "0x9217F4", Offset = "0x9217F4", VA = "0x9217F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001345")]
			[Address(RVA = "0x92182C", Offset = "0x92182C", VA = "0x92182C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0x920498", Offset = "0x920498", VA = "0x920498")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001347")]
			[Address(RVA = "0x921894", Offset = "0x921894", VA = "0x921894")]
			private set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0x921018", Offset = "0x921018", VA = "0x921018")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001349")]
			[Address(RVA = "0x9218F8", Offset = "0x9218F8", VA = "0x9218F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0x92195C", Offset = "0x92195C", VA = "0x92195C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600134B")]
			[Address(RVA = "0x921990", Offset = "0x921990", VA = "0x921990")]
			private set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0x9219F4", Offset = "0x9219F4", VA = "0x9219F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600134D")]
			[Address(RVA = "0x921A28", Offset = "0x921A28", VA = "0x921A28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0x921A8C", Offset = "0x921A8C", VA = "0x921A8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600134F")]
			[Address(RVA = "0x921AC0", Offset = "0x921AC0", VA = "0x921AC0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0x921B24", Offset = "0x921B24", VA = "0x921B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734504", Offset = "0x734504")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001351")]
			[Address(RVA = "0x921B74", Offset = "0x921B74", VA = "0x921B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734514", Offset = "0x734514")]
			private set
			{
			}
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x921BC8", Offset = "0x921BC8", VA = "0x921BC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x921F3C", Offset = "0x921F3C", VA = "0x921F3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x921ECC", Offset = "0x921ECC", VA = "0x921ECC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x734524", Offset = "0x734524")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x91D970", Offset = "0x91D970", VA = "0x91D970")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x921FF0", Offset = "0x921FF0", VA = "0x921FF0")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x921084", Offset = "0x921084", VA = "0x921084")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x920308", Offset = "0x920308", VA = "0x920308")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x9221D0", Offset = "0x9221D0", VA = "0x9221D0")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003B5")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001371")]
			[Address(RVA = "0x922C88", Offset = "0x922C88", VA = "0x922C88")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700028E")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001360")]
			[Address(RVA = "0x922540", Offset = "0x922540", VA = "0x922540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0x922548", Offset = "0x922548", VA = "0x922548")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001362")]
			[Address(RVA = "0x922550", Offset = "0x922550", VA = "0x922550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0x922558", Offset = "0x922558", VA = "0x922558", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0x922560", Offset = "0x922560", VA = "0x922560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7345D8", Offset = "0x7345D8")]
			add
			{
			}
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x922604", Offset = "0x922604", VA = "0x922604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7345E8", Offset = "0x7345E8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0x92271C", Offset = "0x92271C", VA = "0x92271C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7345F8", Offset = "0x7345F8")]
			add
			{
			}
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x9227C0", Offset = "0x9227C0", VA = "0x9227C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734608", Offset = "0x734608")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0x9228D8", Offset = "0x9228D8", VA = "0x9228D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734618", Offset = "0x734618")]
			add
			{
			}
			[Token(Token = "0x600136B")]
			[Address(RVA = "0x92297C", Offset = "0x92297C", VA = "0x92297C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734628", Offset = "0x734628")]
			remove
			{
			}
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x9226A8", Offset = "0x9226A8", VA = "0x9226A8", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x922864", Offset = "0x922864", VA = "0x922864", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x922A20", Offset = "0x922A20", VA = "0x922A20", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600136D")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x91C230", Offset = "0x91C230", VA = "0x91C230", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x922B5C", Offset = "0x922B5C", VA = "0x922B5C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x91CE34", Offset = "0x91CE34", VA = "0x91CE34")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000F72")]
		None,
		[Token(Token = "0x4000F73")]
		Proximity,
		[Token(Token = "0x4000F74")]
		Contact,
		[Token(Token = "0x4000F75")]
		Action
	}
	[Token(Token = "0x20003B7")]
	public enum InteractableState
	{
		[Token(Token = "0x4000F77")]
		Default,
		[Token(Token = "0x4000F78")]
		ProximityState,
		[Token(Token = "0x4000F79")]
		ContactState,
		[Token(Token = "0x4000F7A")]
		ActionState
	}
	[Token(Token = "0x20003B8")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x91CA8C", Offset = "0x91CA8C", VA = "0x91CA8C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000292")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0x922CD8", Offset = "0x922CD8", VA = "0x922CD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x922A94", Offset = "0x922A94", VA = "0x922A94")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x922BC0", Offset = "0x922BC0", VA = "0x922BC0")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x922D40", Offset = "0x922D40", VA = "0x922D40")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726C98", Offset = "0x726C98")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000293")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001380")]
				[Address(RVA = "0x923D80", Offset = "0x923D80", VA = "0x923D80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000294")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001382")]
				[Address(RVA = "0x923DE8", Offset = "0x923DE8", VA = "0x923DE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600137C")]
			[Address(RVA = "0x923844", Offset = "0x923844", VA = "0x923844")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600137D")]
			[Address(RVA = "0x923970", Offset = "0x923970", VA = "0x923970", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600137E")]
			[Address(RVA = "0x9239E4", Offset = "0x9239E4", VA = "0x9239E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600137F")]
			[Address(RVA = "0x92398C", Offset = "0x92398C", VA = "0x92398C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001381")]
			[Address(RVA = "0x923D88", Offset = "0x923D88", VA = "0x923D88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x92373C", Offset = "0x92373C", VA = "0x92373C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x9237B8", Offset = "0x9237B8", VA = "0x9237B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x734638", Offset = "0x734638")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x923870", Offset = "0x923870", VA = "0x923870")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x923968", Offset = "0x923968", VA = "0x923968")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000295")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0x91FD44", Offset = "0x91FD44", VA = "0x91FD44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x91FEAC", Offset = "0x91FEAC", VA = "0x91FEAC")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x923DF0", Offset = "0x923DF0", VA = "0x923DF0")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x923E9C", Offset = "0x923E9C", VA = "0x923E9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x924164", Offset = "0x924164", VA = "0x924164")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x9241AC", Offset = "0x9241AC", VA = "0x9241AC")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x9243FC", Offset = "0x9243FC", VA = "0x9243FC")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x924528", Offset = "0x924528", VA = "0x924528")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726CA8", Offset = "0x726CA8")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700029A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600139C")]
				[Address(RVA = "0x921294", Offset = "0x921294", VA = "0x921294", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600139E")]
				[Address(RVA = "0x9212FC", Offset = "0x9212FC", VA = "0x9212FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001399")]
			[Address(RVA = "0x91FFC8", Offset = "0x91FFC8", VA = "0x91FFC8")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600139A")]
			[Address(RVA = "0x920CB0", Offset = "0x920CB0", VA = "0x920CB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600139B")]
			[Address(RVA = "0x920CB4", Offset = "0x920CB4", VA = "0x920CB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600139D")]
			[Address(RVA = "0x92129C", Offset = "0x92129C", VA = "0x92129C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F93")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000296")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0x91FC28", Offset = "0x91FC28", VA = "0x91FC28", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000297")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x91FC30", Offset = "0x91FC30", VA = "0x91FC30", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000298")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0x91FC38", Offset = "0x91FC38", VA = "0x91FC38", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000299")]
		public override bool EnableState
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x91FC40", Offset = "0x91FC40", VA = "0x91FC40", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x91FC6C", Offset = "0x91FC6C", VA = "0x91FC6C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x91FCA8", Offset = "0x91FCA8", VA = "0x91FCA8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x91FF58", Offset = "0x91FF58", VA = "0x91FF58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7346EC", Offset = "0x7346EC")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x91FFF4", Offset = "0x91FFF4", VA = "0x91FFF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x920504", Offset = "0x920504", VA = "0x920504")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x92077C", Offset = "0x92077C", VA = "0x92077C")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x9208BC", Offset = "0x9208BC", VA = "0x9208BC", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x920B84", Offset = "0x920B84", VA = "0x920B84", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x920B88", Offset = "0x920B88", VA = "0x920B88", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x920B8C", Offset = "0x920B8C", VA = "0x920B8C")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C460", Offset = "0x72C460")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C470", Offset = "0x72C470")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C480", Offset = "0x72C480")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700029C")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0x921304", Offset = "0x921304", VA = "0x921304", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7347A0", Offset = "0x7347A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x92130C", Offset = "0x92130C", VA = "0x92130C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7347B0", Offset = "0x7347B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public bool EnableState
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x921314", Offset = "0x921314", VA = "0x921314", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x921330", Offset = "0x921330", VA = "0x921330", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x921350", Offset = "0x921350", VA = "0x921350", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7347C0", Offset = "0x7347C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x921358", Offset = "0x921358", VA = "0x921358", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7347D0", Offset = "0x7347D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public float SphereRadius
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x921364", Offset = "0x921364", VA = "0x921364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7347E0", Offset = "0x7347E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x92136C", Offset = "0x92136C", VA = "0x92136C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7347F0", Offset = "0x7347F0")]
			private set
			{
			}
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x921374", Offset = "0x921374", VA = "0x921374")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x9213BC", Offset = "0x9213BC", VA = "0x9213BC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x9213C0", Offset = "0x9213C0", VA = "0x9213C0")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000FA6")]
		None = 0,
		[Token(Token = "0x4000FA7")]
		Ray = 1,
		[Token(Token = "0x4000FA8")]
		Poke = 4,
		[Token(Token = "0x4000FA9")]
		All = -1
	}
	[Token(Token = "0x20003C1")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000FAB")]
		Inactive,
		[Token(Token = "0x4000FAC")]
		PrimaryInputDown,
		[Token(Token = "0x4000FAD")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000FAE")]
		PrimaryInputUp
	}
	[Token(Token = "0x20003C2")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x920B40", Offset = "0x920B40", VA = "0x920B40")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C490", Offset = "0x72C490")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C4A0", Offset = "0x72C4A0")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C4B0", Offset = "0x72C4B0")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170002A0")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x91CD48", Offset = "0x91CD48", VA = "0x91CD48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x922DBC", Offset = "0x922DBC", VA = "0x922DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734800", Offset = "0x734800")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x922DC4", Offset = "0x922DC4", VA = "0x922DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734810", Offset = "0x734810")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60013AE")]
			get;
		}

		[Token(Token = "0x170002A3")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60013AF")]
			get;
		}

		[Token(Token = "0x170002A4")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60013B0")]
			get;
		}

		[Token(Token = "0x170002A5")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x922DD0", Offset = "0x922DD0", VA = "0x922DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734820", Offset = "0x734820")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x922DDC", Offset = "0x922DDC", VA = "0x922DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734830", Offset = "0x734830")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x922DE8", Offset = "0x922DE8", VA = "0x922DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734840", Offset = "0x734840")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x922DF4", Offset = "0x922DF4", VA = "0x922DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734850", Offset = "0x734850")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60013B9")]
			get;
			[Token(Token = "0x60013BA")]
			set;
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x922E00", Offset = "0x922E00", VA = "0x922E00")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60013B6")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60013B7")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60013B8")]
		public abstract void DeFocus();

		[Token(Token = "0x60013BB")]
		public abstract void Initialize();

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x922E08", Offset = "0x922E08", VA = "0x922E08")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x922E58", Offset = "0x922E58", VA = "0x922E58")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x922EB0", Offset = "0x922EB0", VA = "0x922EB0", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x9230F4", Offset = "0x9230F4", VA = "0x9230F4", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x920BA0", Offset = "0x920BA0", VA = "0x920BA0")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170002A8")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60013C1")]
			get;
		}

		[Token(Token = "0x170002A9")]
		bool EnableState
		{
			[Token(Token = "0x60013C3")]
			get;
			[Token(Token = "0x60013C4")]
			set;
		}

		[Token(Token = "0x170002AA")]
		bool ToolActivateState
		{
			[Token(Token = "0x60013C5")]
			get;
			[Token(Token = "0x60013C6")]
			set;
		}

		[Token(Token = "0x60013C2")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20003C5")]
	public class PinchStateModule
	{
		[Token(Token = "0x20003C6")]
		private enum PinchState
		{
			[Token(Token = "0x4000FBF")]
			None,
			[Token(Token = "0x4000FC0")]
			PinchDown,
			[Token(Token = "0x4000FC1")]
			PinchStay,
			[Token(Token = "0x4000FC2")]
			PinchUp
		}

		[Token(Token = "0x4000FBB")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170002AB")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0x9264A4", Offset = "0x9264A4", VA = "0x9264A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AC")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0x926530", Offset = "0x926530", VA = "0x926530")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AD")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0x9265BC", Offset = "0x9265BC", VA = "0x9265BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x926648", Offset = "0x926648", VA = "0x926648")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x926674", Offset = "0x926674", VA = "0x926674")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000FC3")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000FC4")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000FC5")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000FC6")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000FC7")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72C4D0", Offset = "0x72C4D0")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170002AE")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x926914", Offset = "0x926914", VA = "0x926914", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002AF")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x92691C", Offset = "0x92691C", VA = "0x92691C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002B0")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x926984", Offset = "0x926984", VA = "0x926984", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B1")]
		public override bool EnableState
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0x92698C", Offset = "0x92698C", VA = "0x92698C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0x9269D0", Offset = "0x9269D0", VA = "0x9269D0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x926A44", Offset = "0x926A44", VA = "0x926A44", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x926A9C", Offset = "0x926A9C", VA = "0x926A9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x926B38", Offset = "0x926B38", VA = "0x926B38")]
		private void Update()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x926E38", Offset = "0x926E38", VA = "0x926E38")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x926F34", Offset = "0x926F34", VA = "0x926F34", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x927298", Offset = "0x927298", VA = "0x927298")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x92743C", Offset = "0x92743C", VA = "0x92743C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x927564", Offset = "0x927564", VA = "0x927564")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x92789C", Offset = "0x92789C", VA = "0x92789C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x927CAC", Offset = "0x927CAC", VA = "0x927CAC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x927D80", Offset = "0x927D80", VA = "0x927D80", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x927DB4", Offset = "0x927DB4", VA = "0x927DB4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000FD3")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000FD4")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C544", Offset = "0x72C544")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170002B2")]
		public bool EnableState
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x9269B4", Offset = "0x9269B4", VA = "0x9269B4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x9269EC", Offset = "0x9269EC", VA = "0x9269EC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x927E6C", Offset = "0x927E6C", VA = "0x927E6C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x926DFC", Offset = "0x926DFC", VA = "0x926DFC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x92809C", Offset = "0x92809C", VA = "0x92809C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734860", Offset = "0x734860")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x9280A4", Offset = "0x9280A4", VA = "0x9280A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734870", Offset = "0x734870")]
			set
			{
			}
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x927E74", Offset = "0x927E74", VA = "0x927E74")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x927CE0", Offset = "0x927CE0", VA = "0x927CE0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x9280AC", Offset = "0x9280AC", VA = "0x9280AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x9283D8", Offset = "0x9283D8", VA = "0x9283D8")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x9285C8", Offset = "0x9285C8", VA = "0x9285C8")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170002B5")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x91F898", Offset = "0x91F898", VA = "0x91F898")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x91F8A0", Offset = "0x91F8A0", VA = "0x91F8A0")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x91F928", Offset = "0x91F928", VA = "0x91F928")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x91F930", Offset = "0x91F930", VA = "0x91F930")]
			set
			{
			}
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x91F99C", Offset = "0x91F99C", VA = "0x91F99C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x91FC00", Offset = "0x91FC00", VA = "0x91FC00")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x91FC10", Offset = "0x91FC10", VA = "0x91FC10")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x91FC20", Offset = "0x91FC20", VA = "0x91FC20")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x91D4A0", Offset = "0x91D4A0", VA = "0x91D4A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x91D4A4", Offset = "0x91D4A4", VA = "0x91D4A4")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x91D524", Offset = "0x91D524", VA = "0x91D524")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x91D614", Offset = "0x91D614", VA = "0x91D614")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x91D704", Offset = "0x91D704", VA = "0x91D704")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x91D7C4", Offset = "0x91D7C4", VA = "0x91D7C4")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x91D8B4", Offset = "0x91D8B4", VA = "0x91D8B4")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x91D8FC", Offset = "0x91D8FC", VA = "0x91D8FC")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x91DA58", Offset = "0x91DA58", VA = "0x91DA58")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x91DAC8", Offset = "0x91DAC8", VA = "0x91DAC8")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x91DAD0", Offset = "0x91DAD0", VA = "0x91DAD0")]
		private void Start()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x91DAD4", Offset = "0x91DAD4", VA = "0x91DAD4")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x91DA8C", Offset = "0x91DA8C", VA = "0x91DA8C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x91DB14", Offset = "0x91DB14", VA = "0x91DB14")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726CC8", Offset = "0x726CC8")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170002B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001406")]
				[Address(RVA = "0x926348", Offset = "0x926348", VA = "0x926348", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001408")]
				[Address(RVA = "0x9263B0", Offset = "0x9263B0", VA = "0x9263B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001403")]
			[Address(RVA = "0x92607C", Offset = "0x92607C", VA = "0x92607C")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001404")]
			[Address(RVA = "0x926158", Offset = "0x926158", VA = "0x926158", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001405")]
			[Address(RVA = "0x92615C", Offset = "0x92615C", VA = "0x92615C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001407")]
			[Address(RVA = "0x926350", Offset = "0x926350", VA = "0x926350", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FE4")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000FE5")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x925C94", Offset = "0x925C94", VA = "0x925C94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x925D2C", Offset = "0x925D2C", VA = "0x925D2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x925FB8", Offset = "0x925FB8", VA = "0x925FB8")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x925F48", Offset = "0x925F48", VA = "0x925F48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x734880", Offset = "0x734880")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x9260A8", Offset = "0x9260A8", VA = "0x9260A8")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20003CF")]
		public enum SelectionState
		{
			[Token(Token = "0x4000FFB")]
			Off,
			[Token(Token = "0x4000FFC")]
			Selected,
			[Token(Token = "0x4000FFD")]
			Highlighted
		}

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170002B9")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0x928628", Offset = "0x928628", VA = "0x928628")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600140A")]
			[Address(RVA = "0x928630", Offset = "0x928630", VA = "0x928630")]
			set
			{
			}
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x9287B8", Offset = "0x9287B8", VA = "0x9287B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x928978", Offset = "0x928978", VA = "0x928978")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x9286B8", Offset = "0x9286B8", VA = "0x9286B8")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x928A68", Offset = "0x928A68", VA = "0x928A68")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20003D1")]
		public enum SegmentType
		{
			[Token(Token = "0x400100C")]
			Straight,
			[Token(Token = "0x400100D")]
			LeftTurn,
			[Token(Token = "0x400100E")]
			RightTurn,
			[Token(Token = "0x400100F")]
			Switch
		}

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001004")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001005")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C624", Offset = "0x72C624")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170002BA")]
		public float StartDistance
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x928AD4", Offset = "0x928AD4", VA = "0x928AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734934", Offset = "0x734934")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001411")]
			[Address(RVA = "0x928ADC", Offset = "0x928ADC", VA = "0x928ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734944", Offset = "0x734944")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public float GridSize
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0x928AE4", Offset = "0x928AE4", VA = "0x928AE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001413")]
			[Address(RVA = "0x928AEC", Offset = "0x928AEC", VA = "0x928AEC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public int SubDivCount
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x928AF4", Offset = "0x928AF4", VA = "0x928AF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001415")]
			[Address(RVA = "0x928AFC", Offset = "0x928AFC", VA = "0x928AFC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public SegmentType Type
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x928B04", Offset = "0x928B04", VA = "0x928B04")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170002BE")]
		public Pose EndPose
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0x928B0C", Offset = "0x928B0C", VA = "0x928B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BF")]
		public float Radius
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x928FA0", Offset = "0x928FA0", VA = "0x928FA0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C0")]
		public float SegmentLength
		{
			[Token(Token = "0x600141A")]
			[Address(RVA = "0x928B74", Offset = "0x928B74", VA = "0x928B74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x928FB0", Offset = "0x928FB0", VA = "0x928FB0")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x928FC8", Offset = "0x928FC8", VA = "0x928FC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x928BB4", Offset = "0x928BB4", VA = "0x928BB4")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x928FCC", Offset = "0x928FCC", VA = "0x928FCC")]
		private void Update()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x928FD0", Offset = "0x928FD0", VA = "0x928FD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x92903C", Offset = "0x92903C", VA = "0x92903C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x929BC4", Offset = "0x929BC4", VA = "0x929BC4")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x929ED0", Offset = "0x929ED0", VA = "0x929ED0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726CD8", Offset = "0x726CD8")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170002C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001430")]
				[Address(RVA = "0x92AAD8", Offset = "0x92AAD8", VA = "0x92AAD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001432")]
				[Address(RVA = "0x92AB40", Offset = "0x92AB40", VA = "0x92AB40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600142D")]
			[Address(RVA = "0x92A850", Offset = "0x92A850", VA = "0x92A850")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0x92A92C", Offset = "0x92A92C", VA = "0x92A92C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600142F")]
			[Address(RVA = "0x92A930", Offset = "0x92A930", VA = "0x92A930", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001431")]
			[Address(RVA = "0x92AAE0", Offset = "0x92AAE0", VA = "0x92AAE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001010")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001011")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x929F74", Offset = "0x929F74", VA = "0x929F74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x92A020", Offset = "0x92A020", VA = "0x92A020")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x92A0D4", Offset = "0x92A0D4", VA = "0x92A0D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x92A200", Offset = "0x92A200", VA = "0x92A200")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x92A370", Offset = "0x92A370", VA = "0x92A370")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x92A50C", Offset = "0x92A50C", VA = "0x92A50C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x92A788", Offset = "0x92A788", VA = "0x92A788")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x92A620", Offset = "0x92A620", VA = "0x92A620")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x92A634", Offset = "0x92A634", VA = "0x92A634")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x92A7E0", Offset = "0x92A7E0", VA = "0x92A7E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x734954", Offset = "0x734954")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x92A87C", Offset = "0x92A87C", VA = "0x92A87C")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170002C3")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0x92AB48", Offset = "0x92AB48", VA = "0x92AB48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x92AB58", Offset = "0x92AB58", VA = "0x92AB58", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x92AB60", Offset = "0x92AB60", VA = "0x92AB60", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x92AFCC", Offset = "0x92AFCC", VA = "0x92AFCC")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001029")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400102A")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C724", Offset = "0x72C724")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170002C4")]
		public float Distance
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x92B0C4", Offset = "0x92B0C4", VA = "0x92B0C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734A08", Offset = "0x734A08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001438")]
			[Address(RVA = "0x92B0CC", Offset = "0x92B0CC", VA = "0x92B0CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734A18", Offset = "0x734A18")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public float Scale
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0x92B0D4", Offset = "0x92B0D4", VA = "0x92B0D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600143A")]
			[Address(RVA = "0x92B0DC", Offset = "0x92B0DC", VA = "0x92B0DC")]
			set
			{
			}
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x92AB5C", Offset = "0x92AB5C", VA = "0x92AB5C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x92B0E4", Offset = "0x92B0E4", VA = "0x92B0E4")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x92ABA8", Offset = "0x92ABA8", VA = "0x92ABA8")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x92AE80", Offset = "0x92AE80", VA = "0x92AE80")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600143F")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x92B03C", Offset = "0x92B03C", VA = "0x92B03C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726CE8", Offset = "0x726CE8")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170002C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600144E")]
				[Address(RVA = "0x92BA6C", Offset = "0x92BA6C", VA = "0x92BA6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001450")]
				[Address(RVA = "0x92BAD4", Offset = "0x92BAD4", VA = "0x92BAD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600144B")]
			[Address(RVA = "0x92B6B0", Offset = "0x92B6B0", VA = "0x92B6B0")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600144C")]
			[Address(RVA = "0x92B848", Offset = "0x92B848", VA = "0x92B848", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600144D")]
			[Address(RVA = "0x92B84C", Offset = "0x92B84C", VA = "0x92B84C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600144F")]
			[Address(RVA = "0x92BA74", Offset = "0x92BA74", VA = "0x92BA74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x92B2B4", Offset = "0x92B2B4", VA = "0x92B2B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x92B300", Offset = "0x92B300", VA = "0x92B300")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x92B40C", Offset = "0x92B40C", VA = "0x92B40C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x92B554", Offset = "0x92B554", VA = "0x92B554")]
		private void Update()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x92B468", Offset = "0x92B468", VA = "0x92B468")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x92B630", Offset = "0x92B630", VA = "0x92B630")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x734A28", Offset = "0x734A28")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x92B6DC", Offset = "0x92B6DC", VA = "0x92B6DC")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x92B788", Offset = "0x92B788", VA = "0x92B788")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x92B7E8", Offset = "0x92B7E8", VA = "0x92B7E8")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20003D9")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001067")]
			Start,
			[Token(Token = "0x4001068")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001069")]
			Stop
		}

		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726CF8", Offset = "0x726CF8")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400106B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400106C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400106D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170002C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001463")]
				[Address(RVA = "0x92C3F8", Offset = "0x92C3F8", VA = "0x92C3F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001465")]
				[Address(RVA = "0x92C460", Offset = "0x92C460", VA = "0x92C460", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001460")]
			[Address(RVA = "0x92BD94", Offset = "0x92BD94", VA = "0x92BD94")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001461")]
			[Address(RVA = "0x92C1D8", Offset = "0x92C1D8", VA = "0x92C1D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001462")]
			[Address(RVA = "0x92C1DC", Offset = "0x92C1DC", VA = "0x92C1DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001464")]
			[Address(RVA = "0x92C400", Offset = "0x92C400", VA = "0x92C400", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001049")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x400104A")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400104B")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400104C")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72C784", Offset = "0x72C784")]
		protected float _initialSpeed;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x92BADC", Offset = "0x92BADC", VA = "0x92BADC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x92BC34", Offset = "0x92BC34", VA = "0x92BC34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x92BC40", Offset = "0x92BC40", VA = "0x92BC40", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x91D4D8", Offset = "0x91D4D8", VA = "0x91D4D8")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x92BBB0", Offset = "0x92BBB0", VA = "0x92BBB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x734ADC", Offset = "0x734ADC")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x92BDC0", Offset = "0x92BDC0", VA = "0x92BDC0")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x92BD30", Offset = "0x92BD30", VA = "0x92BD30")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x91D558", Offset = "0x91D558", VA = "0x91D558")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x91D648", Offset = "0x91D648", VA = "0x91D648")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x92BFF4", Offset = "0x92BFF4", VA = "0x92BFF4")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x92C0E4", Offset = "0x92C0E4", VA = "0x92C0E4")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x91D738", Offset = "0x91D738", VA = "0x91D738")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x91D7F8", Offset = "0x91D7F8", VA = "0x91D7F8")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x91D8EC", Offset = "0x91D8EC", VA = "0x91D8EC")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x92C16C", Offset = "0x92C16C", VA = "0x92C16C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170002CA")]
		public float TrackLength
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x92C468", Offset = "0x92C468", VA = "0x92C468")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x92C470", Offset = "0x92C470", VA = "0x92C470")]
			private set
			{
			}
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x92C478", Offset = "0x92C478", VA = "0x92C478")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x92B164", Offset = "0x92B164", VA = "0x92B164")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x92C47C", Offset = "0x92C47C", VA = "0x92C47C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x92C674", Offset = "0x92C674", VA = "0x92C674")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x92C790", Offset = "0x92C790", VA = "0x92C790")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class Pose
	{
		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x9267F8", Offset = "0x9267F8", VA = "0x9267F8")]
		public Pose()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x9268A4", Offset = "0x9268A4", VA = "0x9268A4")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20003DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726D08", Offset = "0x726D08")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170002CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600147B")]
				[Address(RVA = "0x92CD74", Offset = "0x92CD74", VA = "0x92CD74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600147D")]
				[Address(RVA = "0x92CDDC", Offset = "0x92CDDC", VA = "0x92CDDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001478")]
			[Address(RVA = "0x92CA38", Offset = "0x92CA38", VA = "0x92CA38")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001479")]
			[Address(RVA = "0x92CB98", Offset = "0x92CB98", VA = "0x92CB98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600147A")]
			[Address(RVA = "0x92CB9C", Offset = "0x92CB9C", VA = "0x92CB9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600147C")]
			[Address(RVA = "0x92CD7C", Offset = "0x92CD7C", VA = "0x92CD7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726D18", Offset = "0x726D18")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400108E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400108F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170002CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001481")]
				[Address(RVA = "0x92CEB0", Offset = "0x92CEB0", VA = "0x92CEB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001483")]
				[Address(RVA = "0x92CF18", Offset = "0x92CF18", VA = "0x92CF18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600147E")]
			[Address(RVA = "0x92CAF8", Offset = "0x92CAF8", VA = "0x92CAF8")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600147F")]
			[Address(RVA = "0x92CDE4", Offset = "0x92CDE4", VA = "0x92CDE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001480")]
			[Address(RVA = "0x92CDE8", Offset = "0x92CDE8", VA = "0x92CDE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001482")]
			[Address(RVA = "0x92CEB8", Offset = "0x92CEB8", VA = "0x92CEB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400107C")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72C96C", Offset = "0x72C96C")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170002CB")]
		public bool IsMoving
		{
			[Token(Token = "0x600146F")]
			[Address(RVA = "0x92C7AC", Offset = "0x92C7AC", VA = "0x92C7AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734B90", Offset = "0x734B90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001470")]
			[Address(RVA = "0x92C7B4", Offset = "0x92C7B4", VA = "0x92C7B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734BA0", Offset = "0x734BA0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x92C7C0", Offset = "0x92C7C0", VA = "0x92C7C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x92C7FC", Offset = "0x92C7FC", VA = "0x92C7FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x92C950", Offset = "0x92C950", VA = "0x92C950")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x92C9B8", Offset = "0x92C9B8", VA = "0x92C9B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x734BB0", Offset = "0x734BB0")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x92CA64", Offset = "0x92CA64", VA = "0x92CA64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x734C14", Offset = "0x734C14")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x92CB24", Offset = "0x92CB24", VA = "0x92CB24")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x92CB90", Offset = "0x92CB90", VA = "0x92CB90")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x92CF20", Offset = "0x92CF20", VA = "0x92CF20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x92CF88", Offset = "0x92CF88", VA = "0x92CF88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x92D040", Offset = "0x92D040", VA = "0x92D040")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x92D140", Offset = "0x92D140", VA = "0x92D140")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x92D1BC", Offset = "0x92D1BC", VA = "0x92D1BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x92D298", Offset = "0x92D298", VA = "0x92D298")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001099")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x400109A")]
		EUDT_OverlayQuad,
		[Token(Token = "0x400109B")]
		EUDT_None,
		[Token(Token = "0x400109C")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20003E2")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20003E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726D28", Offset = "0x726D28")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170002D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600149D")]
				[Address(RVA = "0x925C24", Offset = "0x925C24", VA = "0x925C24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600149F")]
				[Address(RVA = "0x925C8C", Offset = "0x925C8C", VA = "0x925C8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600149A")]
			[Address(RVA = "0x9252A0", Offset = "0x9252A0", VA = "0x9252A0")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600149B")]
			[Address(RVA = "0x9259D8", Offset = "0x9259D8", VA = "0x9259D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600149C")]
			[Address(RVA = "0x9259DC", Offset = "0x9259DC", VA = "0x9259DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600149E")]
			[Address(RVA = "0x925C2C", Offset = "0x925C2C", VA = "0x925C2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400109E")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400109F")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40010A0")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x72C9AC", Offset = "0x72C9AC")]
		public GameObject mainCamera;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x72C9E4", Offset = "0x72C9E4")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x9245E8", Offset = "0x9245E8", VA = "0x9245E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x924DC8", Offset = "0x924DC8", VA = "0x924DC8")]
		private void Update()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x924F08", Offset = "0x924F08", VA = "0x924F08")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x925030", Offset = "0x925030", VA = "0x925030")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x925158", Offset = "0x925158", VA = "0x925158")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x924EDC", Offset = "0x924EDC", VA = "0x924EDC")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x925230", Offset = "0x925230", VA = "0x925230")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x734D18", Offset = "0x734D18")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x9252CC", Offset = "0x9252CC", VA = "0x9252CC")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x924954", Offset = "0x924954", VA = "0x924954")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x9253F4", Offset = "0x9253F4", VA = "0x9253F4")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x925300", Offset = "0x925300", VA = "0x925300")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x925790", Offset = "0x925790", VA = "0x925790")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x92586C", Offset = "0x92586C", VA = "0x92586C")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x9258E8", Offset = "0x9258E8", VA = "0x9258E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734D7C", Offset = "0x734D7C")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x925938", Offset = "0x925938", VA = "0x925938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734D8C", Offset = "0x734D8C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x925988", Offset = "0x925988", VA = "0x925988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x734D9C", Offset = "0x734D9C")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x726D38", Offset = "0x726D38")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726D9C", Offset = "0x726D9C")]
		private sealed class <>c
		{
			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60014AD")]
			[Address(RVA = "0xD863F8", Offset = "0xD863F8", VA = "0xD863F8")]
			public <>c()
			{
			}

			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xD86400", Offset = "0xD86400", VA = "0xD86400")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010B8")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40010B9")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40010BA")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40010BB")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40010BC")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40010BD")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40010BE")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40010BF")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40010C0")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40010C1")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40010C2")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xD8563C", Offset = "0xD8563C", VA = "0xD8563C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xD85694", Offset = "0xD85694", VA = "0xD85694")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xD85A9C", Offset = "0xD85A9C", VA = "0xD85A9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xD85B68", Offset = "0xD85B68", VA = "0xD85B68")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xD85C74", Offset = "0xD85C74", VA = "0xD85C74")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xD85FAC", Offset = "0xD85FAC", VA = "0xD85FAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xD86114", Offset = "0xD86114", VA = "0xD86114")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xD86260", Offset = "0xD86260", VA = "0xD86260")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xD85D10", Offset = "0xD85D10", VA = "0xD85D10")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xD85DB0", Offset = "0xD85DB0", VA = "0xD85DB0")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xD858F0", Offset = "0xD858F0", VA = "0xD858F0")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xD8637C", Offset = "0xD8637C", VA = "0xD8637C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public enum HandPoseId
	{
		[Token(Token = "0x40010D7")]
		Default,
		[Token(Token = "0x40010D8")]
		Generic,
		[Token(Token = "0x40010D9")]
		PingPongBall,
		[Token(Token = "0x40010DA")]
		Controller
	}
	[Token(Token = "0x20003E7")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170002D2")]
		public bool AllowPointing
		{
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0xD8642C", Offset = "0xD8642C", VA = "0xD8642C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D3")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0xD86434", Offset = "0xD86434", VA = "0xD86434")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D4")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0xD8643C", Offset = "0xD8643C", VA = "0xD8643C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xD86444", Offset = "0xD86444", VA = "0xD86444")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xD8644C", Offset = "0xD8644C", VA = "0xD8644C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xD866C0", Offset = "0xD866C0", VA = "0xD866C0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xD8671C", Offset = "0xD8671C", VA = "0xD8671C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xD86760", Offset = "0xD86760", VA = "0xD86760")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20003E9")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40010E2")]
		TRIANGLES,
		[Token(Token = "0x40010E3")]
		QUADS
	}
	[Token(Token = "0x20003EA")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40010E5")]
		ABSORPTION,
		[Token(Token = "0x40010E6")]
		TRANSMISSION,
		[Token(Token = "0x40010E7")]
		SCATTERING
	}
	[Token(Token = "0x20003EB")]
	public struct MeshGroup
	{
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20003EC")]
	public static class AvatarLogger
	{
		[Token(Token = "0x40010EC")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x40010ED")]
		public const string Tab = "    ";

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xD87328", Offset = "0xD87328", VA = "0xD87328")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x734DFC", Offset = "0x734DFC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x734DFC", Offset = "0x734DFC")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xD873B0", Offset = "0xD873B0", VA = "0xD873B0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x734E5C", Offset = "0x734E5C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x734E5C", Offset = "0x734E5C")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xD87448", Offset = "0xD87448", VA = "0xD87448")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x734EBC", Offset = "0x734EBC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x734EBC", Offset = "0x734EBC")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xD874D0", Offset = "0xD874D0", VA = "0xD874D0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x734F1C", Offset = "0x734F1C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x734F1C", Offset = "0x734F1C")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xD87558", Offset = "0xD87558", VA = "0xD87558")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x734F7C", Offset = "0x734F7C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x734F7C", Offset = "0x734F7C")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class CAPI
	{
		[Token(Token = "0x20003EE")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20003EF")]
		public enum Result
		{
			[Token(Token = "0x40010F9")]
			Success = 0,
			[Token(Token = "0x40010FA")]
			Failure = -1000,
			[Token(Token = "0x40010FB")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40010FC")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40010FD")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40010FE")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40010FF")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001100")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001101")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20003F0")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly System.Version version;

			[PreserveSig]
			[Token(Token = "0x6001550")]
			[Address(RVA = "0x91BA68", Offset = "0x91BA68", VA = "0x91BA68")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x40010EE")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x40010F6")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static System.Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xD87658", Offset = "0xD87658", VA = "0xD87658")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xD876E8", Offset = "0xD876E8", VA = "0xD876E8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xD878A4", Offset = "0xD878A4", VA = "0xD878A4")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xD87984", Offset = "0xD87984", VA = "0xD87984")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xD879F4", Offset = "0xD879F4", VA = "0xD879F4")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xD87A68", Offset = "0xD87A68", VA = "0xD87A68")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xD87AE8", Offset = "0xD87AE8", VA = "0xD87AE8")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xD87C00", Offset = "0xD87C00", VA = "0xD87C00")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xD87C80", Offset = "0xD87C80", VA = "0xD87C80")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xD87D98", Offset = "0xD87D98", VA = "0xD87D98")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xD87E18", Offset = "0xD87E18", VA = "0xD87E18")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xD87E98", Offset = "0xD87E98", VA = "0xD87E98")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xD87F18", Offset = "0xD87F18", VA = "0xD87F18")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xD87F98", Offset = "0xD87F98", VA = "0xD87F98")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xD88028", Offset = "0xD88028", VA = "0xD88028")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xD880B8", Offset = "0xD880B8", VA = "0xD880B8")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xD88148", Offset = "0xD88148", VA = "0xD88148")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xD881C8", Offset = "0xD881C8", VA = "0xD881C8")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xD88248", Offset = "0xD88248", VA = "0xD88248")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xD882D8", Offset = "0xD882D8", VA = "0xD882D8")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xD88368", Offset = "0xD88368", VA = "0xD88368")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xD883F8", Offset = "0xD883F8", VA = "0xD883F8")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xD88478", Offset = "0xD88478", VA = "0xD88478")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xD88518", Offset = "0xD88518", VA = "0xD88518")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xD88598", Offset = "0xD88598", VA = "0xD88598")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xD88638", Offset = "0xD88638", VA = "0xD88638")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xD886F8", Offset = "0xD886F8", VA = "0xD886F8")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xD887C8", Offset = "0xD887C8", VA = "0xD887C8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xD88858", Offset = "0xD88858", VA = "0xD88858")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xD888E8", Offset = "0xD888E8", VA = "0xD888E8")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xD88978", Offset = "0xD88978", VA = "0xD88978")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xD88A08", Offset = "0xD88A08", VA = "0xD88A08")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xD88A98", Offset = "0xD88A98", VA = "0xD88A98")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xD88B18", Offset = "0xD88B18", VA = "0xD88B18")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xD88C38", Offset = "0xD88C38", VA = "0xD88C38")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xD88BA8", Offset = "0xD88BA8", VA = "0xD88BA8")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xD88E2C", Offset = "0xD88E2C", VA = "0xD88E2C")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xD88F64", Offset = "0xD88F64", VA = "0xD88F64")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x60014E2")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xD88FE4", Offset = "0xD88FE4", VA = "0xD88FE4")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xD89254", Offset = "0xD89254", VA = "0xD89254")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xD892D4", Offset = "0xD892D4", VA = "0xD892D4")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xD8940C", Offset = "0xD8940C", VA = "0xD8940C")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xD8948C", Offset = "0xD8948C", VA = "0xD8948C")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xD895C4", Offset = "0xD895C4", VA = "0xD895C4")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xD89644", Offset = "0xD89644", VA = "0xD89644")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xD8977C", Offset = "0xD8977C", VA = "0xD8977C")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xD897FC", Offset = "0xD897FC", VA = "0xD897FC")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xD89934", Offset = "0xD89934", VA = "0xD89934")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xD899B4", Offset = "0xD899B4", VA = "0xD899B4")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xD89A34", Offset = "0xD89A34", VA = "0xD89A34")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xD89ACC", Offset = "0xD89ACC", VA = "0xD89ACC")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xD89B4C", Offset = "0xD89B4C", VA = "0xD89B4C")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xD89CF8", Offset = "0xD89CF8", VA = "0xD89CF8")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xD89E24", Offset = "0xD89E24", VA = "0xD89E24")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xD89C78", Offset = "0xD89C78", VA = "0xD89C78")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xD89EA4", Offset = "0xD89EA4", VA = "0xD89EA4")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xD89F24", Offset = "0xD89F24", VA = "0xD89F24")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xD89FB4", Offset = "0xD89FB4", VA = "0xD89FB4")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xD8A034", Offset = "0xD8A034", VA = "0xD8A034")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xD8A0C4", Offset = "0xD8A0C4", VA = "0xD8A0C4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xD8A144", Offset = "0xD8A144", VA = "0xD8A144")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xD8A1C4", Offset = "0xD8A1C4", VA = "0xD8A1C4")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xD8A400", Offset = "0xD8A400", VA = "0xD8A400")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xD8A490", Offset = "0xD8A490", VA = "0xD8A490")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xD8A67C", Offset = "0xD8A67C", VA = "0xD8A67C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xD8A714", Offset = "0xD8A714", VA = "0xD8A714")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xD8A838", Offset = "0xD8A838", VA = "0xD8A838")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001500")]
		[Address(RVA = "0xD8A8B8", Offset = "0xD8A8B8", VA = "0xD8A8B8")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xD8A938", Offset = "0xD8A938", VA = "0xD8A938")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001502")]
		[Address(RVA = "0xD8AA60", Offset = "0xD8AA60", VA = "0xD8AA60")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xD8AAE0", Offset = "0xD8AAE0", VA = "0xD8AAE0")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001504")]
		[Address(RVA = "0xD8AC08", Offset = "0xD8AC08", VA = "0xD8AC08")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001505")]
		[Address(RVA = "0xD8AC88", Offset = "0xD8AC88", VA = "0xD8AC88")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001506")]
		[Address(RVA = "0xD8AD18", Offset = "0xD8AD18", VA = "0xD8AD18")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001507")]
		[Address(RVA = "0xD8ADA8", Offset = "0xD8ADA8", VA = "0xD8ADA8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001508")]
		[Address(RVA = "0xD8AE38", Offset = "0xD8AE38", VA = "0xD8AE38")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001509")]
		[Address(RVA = "0xD8AEB8", Offset = "0xD8AEB8", VA = "0xD8AEB8")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600150A")]
		[Address(RVA = "0xD8AF40", Offset = "0xD8AF40", VA = "0xD8AF40")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600150B")]
		[Address(RVA = "0xD8AFC8", Offset = "0xD8AFC8", VA = "0xD8AFC8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600150C")]
		[Address(RVA = "0xD8B048", Offset = "0xD8B048", VA = "0xD8B048")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600150D")]
		[Address(RVA = "0xD8B0C8", Offset = "0xD8B0C8", VA = "0xD8B0C8")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600150E")]
		[Address(RVA = "0xD8B17C", Offset = "0xD8B17C", VA = "0xD8B17C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600150F")]
		[Address(RVA = "0xD8B20C", Offset = "0xD8B20C", VA = "0xD8B20C")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001510")]
		[Address(RVA = "0xD8B29C", Offset = "0xD8B29C", VA = "0xD8B29C")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001511")]
		[Address(RVA = "0xD8B31C", Offset = "0xD8B31C", VA = "0xD8B31C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001512")]
		[Address(RVA = "0xD8B39C", Offset = "0xD8B39C", VA = "0xD8B39C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001513")]
		[Address(RVA = "0xD8B41C", Offset = "0xD8B41C", VA = "0xD8B41C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001514")]
		[Address(RVA = "0xD8B4B4", Offset = "0xD8B4B4", VA = "0xD8B4B4")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001515")]
		[Address(RVA = "0xD8B544", Offset = "0xD8B544", VA = "0xD8B544")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001516")]
		[Address(RVA = "0xD8B5D4", Offset = "0xD8B5D4", VA = "0xD8B5D4")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001517")]
		[Address(RVA = "0xD8B664", Offset = "0xD8B664", VA = "0xD8B664")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001518")]
		[Address(RVA = "0xD8B6FC", Offset = "0xD8B6FC", VA = "0xD8B6FC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001519")]
		[Address(RVA = "0xD8B794", Offset = "0xD8B794", VA = "0xD8B794")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600151A")]
		[Address(RVA = "0xD8B814", Offset = "0xD8B814", VA = "0xD8B814")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xD8B894", Offset = "0xD8B894", VA = "0xD8B894")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600151C")]
		[Address(RVA = "0xD8B9BC", Offset = "0xD8B9BC", VA = "0xD8B9BC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xD8BA3C", Offset = "0xD8BA3C", VA = "0xD8BA3C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x600151E")]
		[Address(RVA = "0xD8BB64", Offset = "0xD8BB64", VA = "0xD8BB64")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xD8BBE4", Offset = "0xD8BBE4", VA = "0xD8BBE4")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001520")]
		[Address(RVA = "0xD8BD0C", Offset = "0xD8BD0C", VA = "0xD8BD0C")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xD8BD8C", Offset = "0xD8BD8C", VA = "0xD8BD8C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xD8BF34", Offset = "0xD8BF34", VA = "0xD8BF34")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001523")]
		[Address(RVA = "0xD8C1D0", Offset = "0xD8C1D0", VA = "0xD8C1D0")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001524")]
		[Address(RVA = "0xD8BEB4", Offset = "0xD8BEB4", VA = "0xD8BEB4")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001525")]
		[Address(RVA = "0xD8C260", Offset = "0xD8C260", VA = "0xD8C260")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001526")]
		[Address(RVA = "0xD8C2E0", Offset = "0xD8C2E0", VA = "0xD8C2E0")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001527")]
		[Address(RVA = "0xD8C370", Offset = "0xD8C370", VA = "0xD8C370")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001528")]
		[Address(RVA = "0xD8C400", Offset = "0xD8C400", VA = "0xD8C400")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001529")]
		[Address(RVA = "0xD8C490", Offset = "0xD8C490", VA = "0xD8C490")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600152A")]
		[Address(RVA = "0xD8C530", Offset = "0xD8C530", VA = "0xD8C530")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600152B")]
		[Address(RVA = "0xD8C5D0", Offset = "0xD8C5D0", VA = "0xD8C5D0")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x600152C")]
		[Address(RVA = "0xD8C670", Offset = "0xD8C670", VA = "0xD8C670")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600152D")]
		[Address(RVA = "0xD8C6F0", Offset = "0xD8C6F0", VA = "0xD8C6F0")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600152E")]
		[Address(RVA = "0xD8C770", Offset = "0xD8C770", VA = "0xD8C770")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600152F")]
		[Address(RVA = "0xD8C7F0", Offset = "0xD8C7F0", VA = "0xD8C7F0")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001530")]
		[Address(RVA = "0xD8C870", Offset = "0xD8C870", VA = "0xD8C870")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001531")]
		[Address(RVA = "0xD8C8F0", Offset = "0xD8C8F0", VA = "0xD8C8F0")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001532")]
		[Address(RVA = "0xD8CA18", Offset = "0xD8CA18", VA = "0xD8CA18")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001533")]
		[Address(RVA = "0xD8CAB0", Offset = "0xD8CAB0", VA = "0xD8CAB0")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xD8CB30", Offset = "0xD8CB30", VA = "0xD8CB30")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xD8CB94", Offset = "0xD8CB94", VA = "0xD8CB94")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001536")]
		[Address(RVA = "0xD8CCB0", Offset = "0xD8CCB0", VA = "0xD8CCB0")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xD8CD40", Offset = "0xD8CD40", VA = "0xD8CD40")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001538")]
		[Address(RVA = "0xD8CE84", Offset = "0xD8CE84", VA = "0xD8CE84")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001539")]
		[Address(RVA = "0xD8CF14", Offset = "0xD8CF14", VA = "0xD8CF14")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xD8CFB4", Offset = "0xD8CFB4", VA = "0xD8CFB4")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600153B")]
		[Address(RVA = "0xD8D34C", Offset = "0xD8D34C", VA = "0xD8D34C")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x600153C")]
		[Address(RVA = "0xD8D3CC", Offset = "0xD8D3CC", VA = "0xD8D3CC")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xD8D464", Offset = "0xD8D464", VA = "0xD8D464")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600153E")]
		[Address(RVA = "0xD8DC2C", Offset = "0xD8DC2C", VA = "0xD8DC2C")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x600153F")]
		[Address(RVA = "0xD8DCAC", Offset = "0xD8DCAC", VA = "0xD8DCAC")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xD875F0", Offset = "0xD875F0", VA = "0xD875F0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x734FDC", Offset = "0x734FDC")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001541")]
		[Address(RVA = "0xD8DD44", Offset = "0xD8DD44", VA = "0xD8DD44")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001542")]
		[Address(RVA = "0xD8DDC8", Offset = "0xD8DDC8", VA = "0xD8DDC8")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001543")]
		[Address(RVA = "0xD8DE48", Offset = "0xD8DE48", VA = "0xD8DE48")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001544")]
		[Address(RVA = "0xD8DEC8", Offset = "0xD8DEC8", VA = "0xD8DEC8")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xD8DF48", Offset = "0xD8DF48", VA = "0xD8DF48")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001546")]
		[Address(RVA = "0xD8E928", Offset = "0xD8E928", VA = "0xD8E928")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xD8E9A8", Offset = "0xD8E9A8", VA = "0xD8E9A8")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001548")]
		[Address(RVA = "0xD8ED94", Offset = "0xD8ED94", VA = "0xD8ED94")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xD8ED04", Offset = "0xD8ED04", VA = "0xD8ED04")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xD8EE08", Offset = "0xD8EE08", VA = "0xD8EE08")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20003F1")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x72CA9C", Offset = "0x72CA9C")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xD7ED84", Offset = "0xD7ED84", VA = "0xD7ED84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xD7ED88", Offset = "0xD7ED88", VA = "0xD7ED88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xD7EE48", Offset = "0xD7EE48", VA = "0xD7EE48")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CAE8", Offset = "0x72CAE8")]
		public bool autoRetrigger;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x72CB20", Offset = "0x72CB20")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CB44", Offset = "0x72CB44")]
		public Transform[] playPositions;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xD75FD8", Offset = "0xD75FD8", VA = "0xD75FD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xD7615C", Offset = "0xD7615C", VA = "0xD7615C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xD76338", Offset = "0xD76338", VA = "0xD76338")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xD761BC", Offset = "0xD761BC", VA = "0xD761BC")]
		public void Play()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xD76478", Offset = "0xD76478", VA = "0xD76478")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xD765EC", Offset = "0xD765EC", VA = "0xD765EC")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001110")]
		Default,
		[Token(Token = "0x4001111")]
		Preload,
		[Token(Token = "0x4001112")]
		ManualPreload
	}
	[Token(Token = "0x20003F4")]
	public enum Fade
	{
		[Token(Token = "0x4001114")]
		In,
		[Token(Token = "0x4001115")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20003F5")]
	public class SoundGroup
	{
		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72CB7C", Offset = "0x72CB7C")]
		public int maxPlayingSounds;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xD7EC64", Offset = "0xD7EC64", VA = "0xD7EC64")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xD7ECF8", Offset = "0xD7ECF8", VA = "0xD7ECF8")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xD7D6D0", Offset = "0xD7D6D0", VA = "0xD7D6D0")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xD7D810", Offset = "0xD7D810", VA = "0xD7D810")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xD7E2C8", Offset = "0xD7E2C8", VA = "0xD7E2C8")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F6")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20003F7")]
		public enum Fade
		{
			[Token(Token = "0x400113D")]
			In,
			[Token(Token = "0x400113E")]
			Out
		}

		[Token(Token = "0x20003F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726DAC", Offset = "0x726DAC")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x400113F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001595")]
			[Address(RVA = "0xD7A810", Offset = "0xD7A810", VA = "0xD7A810")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001596")]
			[Address(RVA = "0xD7D18C", Offset = "0xD7D18C", VA = "0xD7D18C")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726DBC", Offset = "0x726DBC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6001598")]
			[Address(RVA = "0xD7D0F4", Offset = "0xD7D0F4", VA = "0xD7D0F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001599")]
			[Address(RVA = "0xD7D0FC", Offset = "0xD7D0FC", VA = "0xD7D0FC")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CBA8", Offset = "0x72CBA8")]
		public bool makePersistent;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CBE0", Offset = "0x72CBE0")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CC18", Offset = "0x72CC18")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CC50", Offset = "0x72CC50")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CC88", Offset = "0x72CC88")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CCC0", Offset = "0x72CCC0")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CCF8", Offset = "0x72CCF8")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CD30", Offset = "0x72CD30")]
		public bool verboseLogging;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CD68", Offset = "0x72CD68")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CDA0", Offset = "0x72CDA0")]
		public float volumeSoundFX;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CDD8", Offset = "0x72CDD8")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170002D5")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0xD766AC", Offset = "0xD766AC", VA = "0xD766AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D6")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0xD7678C", Offset = "0xD7678C", VA = "0xD7678C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0xD767F4", Offset = "0xD767F4", VA = "0xD767F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D8")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0xD76868", Offset = "0xD76868", VA = "0xD76868")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D9")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0xD768DC", Offset = "0xD768DC", VA = "0xD768DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DA")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0xD76950", Offset = "0xD76950", VA = "0xD76950")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001566")]
			[Address(RVA = "0xD769C4", Offset = "0xD769C4", VA = "0xD769C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0xD78734", Offset = "0xD78734", VA = "0xD78734")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xD76A38", Offset = "0xD76A38", VA = "0xD76A38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xD76C60", Offset = "0xD76C60", VA = "0xD76C60")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xD76A3C", Offset = "0xD76A3C", VA = "0xD76A3C")]
		private void Init()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xD778AC", Offset = "0xD778AC", VA = "0xD778AC")]
		private void Update()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xD76DB8", Offset = "0xD76DB8", VA = "0xD76DB8")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xD77ED0", Offset = "0xD77ED0", VA = "0xD77ED0")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xD78050", Offset = "0xD78050", VA = "0xD78050")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xD781EC", Offset = "0xD781EC", VA = "0xD781EC")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xD782EC", Offset = "0xD782EC", VA = "0xD782EC")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xD7837C", Offset = "0xD7837C", VA = "0xD7837C")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xD7879C", Offset = "0xD7879C", VA = "0xD7879C")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xD78814", Offset = "0xD78814", VA = "0xD78814")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xD77204", Offset = "0xD77204", VA = "0xD77204")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xD778B0", Offset = "0xD778B0", VA = "0xD778B0")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xD78AA4", Offset = "0xD78AA4", VA = "0xD78AA4")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xD78BA8", Offset = "0xD78BA8", VA = "0xD78BA8")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xD78CB0", Offset = "0xD78CB0", VA = "0xD78CB0")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xD7896C", Offset = "0xD7896C", VA = "0xD7896C")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xD78E1C", Offset = "0xD78E1C", VA = "0xD78E1C")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xD78F70", Offset = "0xD78F70", VA = "0xD78F70")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xD79120", Offset = "0xD79120", VA = "0xD79120")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xD763C8", Offset = "0xD763C8", VA = "0xD763C8")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xD7653C", Offset = "0xD7653C", VA = "0xD7653C")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xD792CC", Offset = "0xD792CC", VA = "0xD792CC")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xD79398", Offset = "0xD79398", VA = "0xD79398")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xD7942C", Offset = "0xD7942C", VA = "0xD7942C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xD794F0", Offset = "0xD794F0", VA = "0xD794F0")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xD79594", Offset = "0xD79594", VA = "0xD79594")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xD79674", Offset = "0xD79674", VA = "0xD79674")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xD7A158", Offset = "0xD7A158", VA = "0xD7A158")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xD7A818", Offset = "0xD7A818", VA = "0xD7A818")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xD7A9F8", Offset = "0xD7A9F8", VA = "0xD7A9F8")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xD7B73C", Offset = "0xD7B73C", VA = "0xD7B73C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xD7987C", Offset = "0xD7987C", VA = "0xD7987C")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xD7B85C", Offset = "0xD7B85C", VA = "0xD7B85C")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xD7B930", Offset = "0xD7B930", VA = "0xD7B930")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xD7BA10", Offset = "0xD7BA10", VA = "0xD7BA10")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xD7BDC8", Offset = "0xD7BDC8", VA = "0xD7BDC8")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xD7BFC4", Offset = "0xD7BFC4", VA = "0xD7BFC4")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xD7C0E0", Offset = "0xD7C0E0", VA = "0xD7C0E0")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xD7C2A8", Offset = "0xD7C2A8", VA = "0xD7C2A8")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xD7C380", Offset = "0xD7C380", VA = "0xD7C380")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xD7C4B4", Offset = "0xD7C4B4", VA = "0xD7C4B4")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xD7C8A0", Offset = "0xD7C8A0", VA = "0xD7C8A0")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001143")]
		None = -1,
		[Token(Token = "0x4001144")]
		Reserved,
		[Token(Token = "0x4001145")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20003FB")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xD7D288", Offset = "0xD7D288", VA = "0xD7D288")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xD7D22C", Offset = "0xD7D22C", VA = "0xD7D22C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20003FE")]
		public enum FadeState
		{
			[Token(Token = "0x400115C")]
			Null,
			[Token(Token = "0x400115D")]
			FadingIn,
			[Token(Token = "0x400115E")]
			FadingOut,
			[Token(Token = "0x400115F")]
			Ducking
		}

		[Token(Token = "0x20003FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726DCC", Offset = "0x726DCC")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170002E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015C8")]
				[Address(RVA = "0xD7DCD4", Offset = "0xD7DCD4", VA = "0xD7DCD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015CA")]
				[Address(RVA = "0xD7DD3C", Offset = "0xD7DD3C", VA = "0xD7DD3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015C5")]
			[Address(RVA = "0xD7D9B4", Offset = "0xD7D9B4", VA = "0xD7D9B4")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60015C6")]
			[Address(RVA = "0xD7DBE4", Offset = "0xD7DBE4", VA = "0xD7DBE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xD7DBE8", Offset = "0xD7DBE8", VA = "0xD7DBE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015C9")]
			[Address(RVA = "0xD7DCDC", Offset = "0xD7DCDC", VA = "0xD7DCDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726DDC", Offset = "0x726DDC")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x400116A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x400116B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x400116C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x400116D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400116E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170002E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015CE")]
				[Address(RVA = "0xD7E188", Offset = "0xD7E188", VA = "0xD7E188", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015D0")]
				[Address(RVA = "0xD7E1F0", Offset = "0xD7E1F0", VA = "0xD7E1F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015CB")]
			[Address(RVA = "0xD7DB74", Offset = "0xD7DB74", VA = "0xD7DB74")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60015CC")]
			[Address(RVA = "0xD7E01C", Offset = "0xD7E01C", VA = "0xD7E01C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015CD")]
			[Address(RVA = "0xD7E020", Offset = "0xD7E020", VA = "0xD7E020", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015CF")]
			[Address(RVA = "0xD7E190", Offset = "0xD7E190", VA = "0xD7E190", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x726DEC", Offset = "0x726DEC")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400116F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170002EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015D4")]
				[Address(RVA = "0xD7DFAC", Offset = "0xD7DFAC", VA = "0xD7DFAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015D6")]
				[Address(RVA = "0xD7E014", Offset = "0xD7E014", VA = "0xD7E014", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015D1")]
			[Address(RVA = "0xD7DBA0", Offset = "0xD7DBA0", VA = "0xD7DBA0")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xD7DD44", Offset = "0xD7DD44", VA = "0xD7DD44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015D3")]
			[Address(RVA = "0xD7DD48", Offset = "0xD7DD48", VA = "0xD7DD48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015D5")]
			[Address(RVA = "0xD7DFB4", Offset = "0xD7DFB4", VA = "0xD7DFB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170002DD")]
		public float volume
		{
			[Token(Token = "0x600159C")]
			[Address(RVA = "0xD7B720", Offset = "0xD7B720", VA = "0xD7B720")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600159D")]
			[Address(RVA = "0xD7D328", Offset = "0xD7D328", VA = "0xD7D328")]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public float pitch
		{
			[Token(Token = "0x600159E")]
			[Address(RVA = "0xD7D344", Offset = "0xD7D344", VA = "0xD7D344")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600159F")]
			[Address(RVA = "0xD7D360", Offset = "0xD7D360", VA = "0xD7D360")]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public AudioClip clip
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0xD7D37C", Offset = "0xD7D37C", VA = "0xD7D37C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0xD7D398", Offset = "0xD7D398", VA = "0xD7D398")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public float time
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0xD7D3B4", Offset = "0xD7D3B4", VA = "0xD7D3B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0xD79658", Offset = "0xD79658", VA = "0xD79658")]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public float length
		{
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0xD7D3D0", Offset = "0xD7D3D0", VA = "0xD7D3D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E2")]
		public bool loop
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0xD7D488", Offset = "0xD7D488", VA = "0xD7D488")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0xD7D4A4", Offset = "0xD7D4A4", VA = "0xD7D4A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public bool mute
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0xD7D4C4", Offset = "0xD7D4C4", VA = "0xD7D4C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0xD7D4E0", Offset = "0xD7D4E0", VA = "0xD7D4E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0xD7D500", Offset = "0xD7D500", VA = "0xD7D500")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0xD7D51C", Offset = "0xD7D51C", VA = "0xD7D51C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public bool isPlaying
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0xD7D538", Offset = "0xD7D538", VA = "0xD7D538")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xD7D554", Offset = "0xD7D554", VA = "0xD7D554")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xD7B70C", Offset = "0xD7B70C", VA = "0xD7B70C")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xD7D760", Offset = "0xD7D760", VA = "0xD7D760")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xD7BA08", Offset = "0xD7BA08", VA = "0xD7BA08")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xD7D768", Offset = "0xD7D768", VA = "0xD7D768")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xD7D770", Offset = "0xD7D770", VA = "0xD7D770")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xD7C200", Offset = "0xD7C200", VA = "0xD7C200")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xD78A38", Offset = "0xD78A38", VA = "0xD78A38")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xD7D778", Offset = "0xD7D778", VA = "0xD7D778")]
		public void Play()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xD7D7D8", Offset = "0xD7D7D8", VA = "0xD7D7D8")]
		public void Pause()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xD7888C", Offset = "0xD7888C", VA = "0xD7888C")]
		public void Stop()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xD7D8A0", Offset = "0xD7D8A0", VA = "0xD7D8A0")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xD7BCCC", Offset = "0xD7BCCC", VA = "0xD7BCCC")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xD7BF0C", Offset = "0xD7BF0C", VA = "0xD7BF0C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xD78DDC", Offset = "0xD78DDC", VA = "0xD78DDC")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xD7D8F8", Offset = "0xD7D8F8", VA = "0xD7D8F8")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xD7D924", Offset = "0xD7D924", VA = "0xD7D924")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x736040", Offset = "0x736040")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xD7D9E0", Offset = "0xD7D9E0", VA = "0xD7D9E0")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xD791D8", Offset = "0xD791D8", VA = "0xD791D8")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xD79254", Offset = "0xD79254", VA = "0xD79254")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xD79088", Offset = "0xD79088", VA = "0xD79088")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xD78ED4", Offset = "0xD78ED4", VA = "0xD78ED4")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xD7DA48", Offset = "0xD7DA48", VA = "0xD7DA48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7360A4", Offset = "0x7360A4")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xD7DACC", Offset = "0xD7DACC", VA = "0xD7DACC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x736108", Offset = "0x736108")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xD7DBCC", Offset = "0xD7DBCC", VA = "0xD7DBCC")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public enum SoundFXNext
	{
		[Token(Token = "0x400117C")]
		Random,
		[Token(Token = "0x400117D")]
		Sequential
	}
	[Token(Token = "0x2000403")]
	public enum FreqHint
	{
		[Token(Token = "0x400117F")]
		None,
		[Token(Token = "0x4001180")]
		Wide,
		[Token(Token = "0x4001181")]
		Narrow
	}
	[Token(Token = "0x2000404")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001183")]
		VeryLow = -2,
		[Token(Token = "0x4001184")]
		Low,
		[Token(Token = "0x4001185")]
		Default,
		[Token(Token = "0x4001186")]
		High,
		[Token(Token = "0x4001187")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000405")]
	public class OSPProps
	{
		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CEC0", Offset = "0x72CEC0")]
		public bool enableSpatialization;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CEF8", Offset = "0x72CEF8")]
		public bool useFastOverride;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CF30", Offset = "0x72CF30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72CF30", Offset = "0x72CF30")]
		public float gain;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CF84", Offset = "0x72CF84")]
		public bool enableInvSquare;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72CFBC", Offset = "0x72CFBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72CFBC", Offset = "0x72CFBC")]
		public float volumetric;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D014", Offset = "0x72D014")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x72D014", Offset = "0x72D014")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xD7D298", Offset = "0xD7D298", VA = "0xD7D298")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000406")]
	public class SoundFX
	{
		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D074", Offset = "0x72D074")]
		public string name;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D0AC", Offset = "0x72D0AC")]
		public SoundFXNext playback;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D0E4", Offset = "0x72D0E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72D0E4", Offset = "0x72D0E4")]
		public float volume;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D138", Offset = "0x72D138")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x72D138", Offset = "0x72D138")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D194", Offset = "0x72D194")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x72D194", Offset = "0x72D194")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D1F4", Offset = "0x72D1F4")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D22C", Offset = "0x72D22C")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D264", Offset = "0x72D264")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D29C", Offset = "0x72D29C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72D29C", Offset = "0x72D29C")]
		public float spread;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D2F4", Offset = "0x72D2F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x72D2F4", Offset = "0x72D2F4")]
		public float pctChanceToPlay;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D348", Offset = "0x72D348")]
		public SoundPriority priority;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D380", Offset = "0x72D380")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x72D380", Offset = "0x72D380")]
		public Vector2 delay;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D3DC", Offset = "0x72D3DC")]
		public bool looping;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x72D414", Offset = "0x72D414")]
		public AudioClip[] soundClips;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170002EC")]
		public int Length
		{
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0xD7E1F8", Offset = "0xD7E1F8", VA = "0xD7E1F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002ED")]
		public bool IsValid
		{
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0xD7E214", Offset = "0xD7E214", VA = "0xD7E214")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EE")]
		public SoundGroup Group
		{
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0xD7E2B8", Offset = "0xD7E2B8", VA = "0xD7E2B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0xD7E2C0", Offset = "0xD7E2C0", VA = "0xD7E2C0")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0xD7B614", Offset = "0xD7B614", VA = "0xD7B614")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F0")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0xD7B648", Offset = "0xD7B648", VA = "0xD7B648")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xD7CBA8", Offset = "0xD7CBA8", VA = "0xD7CBA8")]
		public SoundFX()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xD7B544", Offset = "0xD7B544", VA = "0xD7B544")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xD7B66C", Offset = "0xD7B66C", VA = "0xD7B66C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xD7B620", Offset = "0xD7B620", VA = "0xD7B620")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xD7E2E8", Offset = "0xD7E2E8", VA = "0xD7E2E8")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xD7B660", Offset = "0xD7B660", VA = "0xD7B660")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xD7E3E4", Offset = "0xD7E3E4", VA = "0xD7E3E4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xD7E4C0", Offset = "0xD7E4C0", VA = "0xD7E4C0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xD7E5D4", Offset = "0xD7E5D4", VA = "0xD7E5D4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xD7E660", Offset = "0xD7E660", VA = "0xD7E660")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xD7E6F4", Offset = "0xD7E6F4", VA = "0xD7E6F4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xD7E780", Offset = "0xD7E780", VA = "0xD7E780")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xD7E80C", Offset = "0xD7E80C", VA = "0xD7E80C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000407")]
	public class SoundFXRef
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170002F1")]
		public SoundFX soundFX
		{
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0xD7E884", Offset = "0xD7E884", VA = "0xD7E884")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		public string name
		{
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xD7E978", Offset = "0xD7E978", VA = "0xD7E978")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xD7E980", Offset = "0xD7E980", VA = "0xD7E980")]
			set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		public int Length
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0xD7E988", Offset = "0xD7E988", VA = "0xD7E988")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F4")]
		public bool IsValid
		{
			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xD7E9CC", Offset = "0xD7E9CC", VA = "0xD7E9CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xD7E8B4", Offset = "0xD7E8B4", VA = "0xD7E8B4")]
		private void Init()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xD7EA04", Offset = "0xD7EA04", VA = "0xD7EA04")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xD7EA3C", Offset = "0xD7EA3C", VA = "0xD7EA3C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xD7EA7C", Offset = "0xD7EA7C", VA = "0xD7EA7C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xD76348", Offset = "0xD76348", VA = "0xD76348")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xD7EAC4", Offset = "0xD7EAC4", VA = "0xD7EAC4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xD7EB04", Offset = "0xD7EB04", VA = "0xD7EB04")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xD7EB54", Offset = "0xD7EB54", VA = "0xD7EB54")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xD7EB8C", Offset = "0xD7EB8C", VA = "0xD7EB8C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xD7EBCC", Offset = "0xD7EBCC", VA = "0xD7EBCC")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xD7EC04", Offset = "0xD7EC04", VA = "0xD7EC04")]
		public SoundFXRef()
		{
		}
	}
}
namespace Mirror
{
	[StructLayout(3, CharSet = CharSet.Auto)]
	[Token(Token = "0x200040F")]
	public static class GeneratedNetworkCode
	{
		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x983ED8", Offset = "0x983ED8", VA = "0x983ED8")]
		public static ReadyMessage _Read_Mirror.ReadyMessage(NetworkReader reader)
		{
			return default(ReadyMessage);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x983EE0", Offset = "0x983EE0", VA = "0x983EE0")]
		public static void _Write_Mirror.ReadyMessage(NetworkWriter writer, ReadyMessage value)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x983EE4", Offset = "0x983EE4", VA = "0x983EE4")]
		public static NotReadyMessage _Read_Mirror.NotReadyMessage(NetworkReader reader)
		{
			return default(NotReadyMessage);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x983EEC", Offset = "0x983EEC", VA = "0x983EEC")]
		public static void _Write_Mirror.NotReadyMessage(NetworkWriter writer, NotReadyMessage value)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x983EF0", Offset = "0x983EF0", VA = "0x983EF0")]
		public static AddPlayerMessage _Read_Mirror.AddPlayerMessage(NetworkReader reader)
		{
			return default(AddPlayerMessage);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x983EF8", Offset = "0x983EF8", VA = "0x983EF8")]
		public static void _Write_Mirror.AddPlayerMessage(NetworkWriter writer, AddPlayerMessage value)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x983EFC", Offset = "0x983EFC", VA = "0x983EFC")]
		public static SceneMessage _Read_Mirror.SceneMessage(NetworkReader reader)
		{
			return default(SceneMessage);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x983F9C", Offset = "0x983F9C", VA = "0x983F9C")]
		public static SceneOperation _Read_Mirror.SceneOperation(NetworkReader reader)
		{
			return default(SceneOperation);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x984004", Offset = "0x984004", VA = "0x984004")]
		public static void _Write_Mirror.SceneMessage(NetworkWriter writer, SceneMessage value)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x9840A0", Offset = "0x9840A0", VA = "0x9840A0")]
		public static void _Write_Mirror.SceneOperation(NetworkWriter writer, SceneOperation value)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x984118", Offset = "0x984118", VA = "0x984118")]
		public static CommandMessage _Read_Mirror.CommandMessage(NetworkReader reader)
		{
			return default(CommandMessage);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x9841D4", Offset = "0x9841D4", VA = "0x9841D4")]
		public static void _Write_Mirror.CommandMessage(NetworkWriter writer, CommandMessage value)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x984280", Offset = "0x984280", VA = "0x984280")]
		public static RpcMessage _Read_Mirror.RpcMessage(NetworkReader reader)
		{
			return default(RpcMessage);
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x98433C", Offset = "0x98433C", VA = "0x98433C")]
		public static void _Write_Mirror.RpcMessage(NetworkWriter writer, RpcMessage value)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x9843E8", Offset = "0x9843E8", VA = "0x9843E8")]
		public static SpawnMessage _Read_Mirror.SpawnMessage(NetworkReader reader)
		{
			return default(SpawnMessage);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x984570", Offset = "0x984570", VA = "0x984570")]
		public static void _Write_Mirror.SpawnMessage(NetworkWriter writer, SpawnMessage value)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x984688", Offset = "0x984688", VA = "0x984688")]
		public static ObjectSpawnStartedMessage _Read_Mirror.ObjectSpawnStartedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnStartedMessage);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x984690", Offset = "0x984690", VA = "0x984690")]
		public static void _Write_Mirror.ObjectSpawnStartedMessage(NetworkWriter writer, ObjectSpawnStartedMessage value)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x984694", Offset = "0x984694", VA = "0x984694")]
		public static ObjectSpawnFinishedMessage _Read_Mirror.ObjectSpawnFinishedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnFinishedMessage);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x98469C", Offset = "0x98469C", VA = "0x98469C")]
		public static void _Write_Mirror.ObjectSpawnFinishedMessage(NetworkWriter writer, ObjectSpawnFinishedMessage value)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x9846A0", Offset = "0x9846A0", VA = "0x9846A0")]
		public static ObjectDestroyMessage _Read_Mirror.ObjectDestroyMessage(NetworkReader reader)
		{
			return default(ObjectDestroyMessage);
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x984710", Offset = "0x984710", VA = "0x984710")]
		public static void _Write_Mirror.ObjectDestroyMessage(NetworkWriter writer, ObjectDestroyMessage value)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x984788", Offset = "0x984788", VA = "0x984788")]
		public static ObjectHideMessage _Read_Mirror.ObjectHideMessage(NetworkReader reader)
		{
			return default(ObjectHideMessage);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x9847F8", Offset = "0x9847F8", VA = "0x9847F8")]
		public static void _Write_Mirror.ObjectHideMessage(NetworkWriter writer, ObjectHideMessage value)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x984870", Offset = "0x984870", VA = "0x984870")]
		public static UpdateVarsMessage _Read_Mirror.UpdateVarsMessage(NetworkReader reader)
		{
			return default(UpdateVarsMessage);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x984900", Offset = "0x984900", VA = "0x984900")]
		public static void _Write_Mirror.UpdateVarsMessage(NetworkWriter writer, UpdateVarsMessage value)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x98498C", Offset = "0x98498C", VA = "0x98498C")]
		public static NetworkPingMessage _Read_Mirror.NetworkPingMessage(NetworkReader reader)
		{
			return default(NetworkPingMessage);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x9849F4", Offset = "0x9849F4", VA = "0x9849F4")]
		public static void _Write_Mirror.NetworkPingMessage(NetworkWriter writer, NetworkPingMessage value)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x984A6C", Offset = "0x984A6C", VA = "0x984A6C")]
		public static NetworkPongMessage _Read_Mirror.NetworkPongMessage(NetworkReader reader)
		{
			return default(NetworkPongMessage);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x984AF8", Offset = "0x984AF8", VA = "0x984AF8")]
		public static void _Write_Mirror.NetworkPongMessage(NetworkWriter writer, NetworkPongMessage value)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x984B84", Offset = "0x984B84", VA = "0x984B84")]
		public static DiscoveryRequestMessage _Read_DiscoveryRequestMessage(NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x984C60", Offset = "0x984C60", VA = "0x984C60")]
		public static void _Write_DiscoveryRequestMessage(NetworkWriter writer, DiscoveryRequestMessage value)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x984D28", Offset = "0x984D28", VA = "0x984D28")]
		public static DiscoveryResponseMessage _Read_DiscoveryResponseMessage(NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x984E18", Offset = "0x984E18", VA = "0x984E18")]
		public static void _Write_DiscoveryResponseMessage(NetworkWriter writer, DiscoveryResponseMessage value)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x984EE0", Offset = "0x984EE0", VA = "0x984EE0")]
		public static NetworkHandler.ServerMetaData _Read_NetworkHandler/ServerMetaData(NetworkReader reader)
		{
			return default(NetworkHandler.ServerMetaData);
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x984F50", Offset = "0x984F50", VA = "0x984F50")]
		public static void _Write_NetworkHandler/ServerMetaData(NetworkWriter writer, NetworkHandler.ServerMetaData value)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x984FC8", Offset = "0x984FC8", VA = "0x984FC8")]
		public static void _Write_NetMinionStateHandler/NetState(NetworkWriter writer, NetMinionStateHandler.NetState value)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x985040", Offset = "0x985040", VA = "0x985040")]
		public static NetMinionStateHandler.NetState _Read_NetMinionStateHandler/NetState(NetworkReader reader)
		{
			return default(NetMinionStateHandler.NetState);
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x9850A8", Offset = "0x9850A8", VA = "0x9850A8")]
		public static void _Write_NetPushSwitchStateHandler/NetState(NetworkWriter writer, NetPushSwitchStateHandler.NetState value)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x985120", Offset = "0x985120", VA = "0x985120")]
		public static NetPushSwitchStateHandler.NetState _Read_NetPushSwitchStateHandler/NetState(NetworkReader reader)
		{
			return default(NetPushSwitchStateHandler.NetState);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x985188", Offset = "0x985188", VA = "0x985188")]
		public static void _Write_NetSwitchStateHandler/NetState(NetworkWriter writer, NetSwitchStateHandler.NetState value)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x985200", Offset = "0x985200", VA = "0x985200")]
		public static NetSwitchStateHandler.NetState _Read_NetSwitchStateHandler/NetState(NetworkReader reader)
		{
			return default(NetSwitchStateHandler.NetState);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x985268", Offset = "0x985268", VA = "0x985268")]
		public static void _Write_NetMagicCandleStateHandler/State(NetworkWriter writer, NetMagicCandleStateHandler.State value)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x9852E0", Offset = "0x9852E0", VA = "0x9852E0")]
		public static NetMagicCandleStateHandler.State _Read_NetMagicCandleStateHandler/State(NetworkReader reader)
		{
			return default(NetMagicCandleStateHandler.State);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x985348", Offset = "0x985348", VA = "0x985348")]
		public static void _Write_NetRuneStateHandler/State(NetworkWriter writer, NetRuneStateHandler.State value)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x9853C0", Offset = "0x9853C0", VA = "0x9853C0")]
		public static NetRuneStateHandler.State _Read_NetRuneStateHandler/State(NetworkReader reader)
		{
			return default(NetRuneStateHandler.State);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x985428", Offset = "0x985428", VA = "0x985428")]
		public static void _Write_NetTorchStateHandler/State(NetworkWriter writer, NetTorchStateHandler.State value)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x9854A0", Offset = "0x9854A0", VA = "0x9854A0")]
		public static NetTorchStateHandler.State _Read_NetTorchStateHandler/State(NetworkReader reader)
		{
			return default(NetTorchStateHandler.State);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x985508", Offset = "0x985508", VA = "0x985508")]
		public static NetChestState.ArtifactType _Read_NetChestState/ArtifactType(NetworkReader reader)
		{
			return default(NetChestState.ArtifactType);
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x985570", Offset = "0x985570", VA = "0x985570")]
		public static void _Write_NetChestState/ArtifactType(NetworkWriter writer, NetChestState.ArtifactType value)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x9855E8", Offset = "0x9855E8", VA = "0x9855E8")]
		public static void _Write_NetManaStateHandler/State(NetworkWriter writer, NetManaStateHandler.State value)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x985660", Offset = "0x985660", VA = "0x985660")]
		public static NetManaStateHandler.State _Read_NetManaStateHandler/State(NetworkReader reader)
		{
			return default(NetManaStateHandler.State);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x9856C8", Offset = "0x9856C8", VA = "0x9856C8")]
		public static void _Write_System.UInt32[](NetworkWriter writer, uint[] value)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x985748", Offset = "0x985748", VA = "0x985748")]
		public static uint[] _Read_System.UInt32[](NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x9857B8", Offset = "0x9857B8", VA = "0x9857B8")]
		public static void _Write_NetPuzzleSolutionStateControl/State(NetworkWriter writer, NetPuzzleSolutionStateControl.State value)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x985830", Offset = "0x985830", VA = "0x985830")]
		public static NetPuzzleSolutionStateControl.State _Read_NetPuzzleSolutionStateControl/State(NetworkReader reader)
		{
			return default(NetPuzzleSolutionStateControl.State);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x985898", Offset = "0x985898", VA = "0x985898")]
		public static void _Write_TriggerCurse/CurseType(NetworkWriter writer, TriggerCurse.CurseType value)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x985910", Offset = "0x985910", VA = "0x985910")]
		public static TriggerCurse.CurseType _Read_TriggerCurse/CurseType(NetworkReader reader)
		{
			return default(TriggerCurse.CurseType);
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x985978", Offset = "0x985978", VA = "0x985978")]
		public static void _Write_NetBattleSpellHandler/NetState(NetworkWriter writer, NetBattleSpellHandler.NetState value)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x9859F0", Offset = "0x9859F0", VA = "0x9859F0")]
		public static NetBattleSpellHandler.NetState _Read_NetBattleSpellHandler/NetState(NetworkReader reader)
		{
			return default(NetBattleSpellHandler.NetState);
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x985A58", Offset = "0x985A58", VA = "0x985A58")]
		public static void _Write_BattleSpellHandler/BattleSpellType(NetworkWriter writer, BattleSpellHandler.BattleSpellType value)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x985AD0", Offset = "0x985AD0", VA = "0x985AD0")]
		public static BattleSpellHandler.BattleSpellType _Read_BattleSpellHandler/BattleSpellType(NetworkReader reader)
		{
			return default(BattleSpellHandler.BattleSpellType);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x985B38", Offset = "0x985B38", VA = "0x985B38")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x73625C", Offset = "0x73625C")]
		public static void InitReadWriters()
		{
		}
	}
}
