using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Xml;
using Facebook.WitAi;
using Facebook.WitAi.Lib;
using Il2CppDummyDll;
using Mirror;
using Oculus.Platform;
using Oculus.Platform.Models;
using Pimax.Platform;
using Poly2Tri;
using TMPro;
using UltimateFracturing;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class VisualizationRect : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float rotSpeed;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int bandIndex;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scaleMultiplier;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x7F71BC", Offset = "0x7F71BC", VA = "0x7F71BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x7F71F8", Offset = "0x7F71F8", VA = "0x7F71F8")]
	public VisualizationRect()
	{
	}
}
[Token(Token = "0x2000003")]
public class EnergyGridManager : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnergyGridManager instance;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnergyGridsPack[] energyGridPacks;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x8D1618", Offset = "0x8D1618", VA = "0x8D1618")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x8D1668", Offset = "0x8D1668", VA = "0x8D1668")]
	public EnergyGridsPack GetEnergyGridsPack(EnergyGridTextureStyle gridStyle)
	{
		return null;
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x8D16D0", Offset = "0x8D16D0", VA = "0x8D16D0")]
	public void SetEnergyColor(Color color)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x8D1844", Offset = "0x8D1844", VA = "0x8D1844")]
	public EnergyGridManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000004")]
public class EnergyGridsPack
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnergyGridTextureStyle textureStyle;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnergyGrid[] grids;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x8D184C", Offset = "0x8D184C", VA = "0x8D184C")]
	public Material GetMaterial(EnergyGridPosition positionType)
	{
		return null;
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x8D1768", Offset = "0x8D1768", VA = "0x8D1768")]
	public void SetEnergyColor(Color color)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x8D18BC", Offset = "0x8D18BC", VA = "0x8D18BC")]
	public EnergyGridsPack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000005")]
public class EnergyGrid
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnergyGridPosition gridPosition;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 defaultTailing;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x8D1610", Offset = "0x8D1610", VA = "0x8D1610")]
	public EnergyGrid()
	{
	}
}
[Token(Token = "0x2000006")]
public enum EnergyGridPosition : byte
{
	[Token(Token = "0x400000C")]
	LeftRight,
	[Token(Token = "0x400000D")]
	Ahead,
	[Token(Token = "0x400000E")]
	BottomTopFar
}
[Token(Token = "0x2000007")]
public enum EnergyGridTextureStyle : byte
{
	[Token(Token = "0x4000010")]
	Square,
	[Token(Token = "0x4000011")]
	Diagonal,
	[Token(Token = "0x4000012")]
	Hex,
	[Token(Token = "0x4000013")]
	Triangles
}
[Token(Token = "0x2000008")]
public class brokenGlassVR : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material _glassMat;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _cracked;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _distortion;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _repairSpeed;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x7FAE8C", Offset = "0x7FAE8C", VA = "0x7FAE8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x7FAEF0", Offset = "0x7FAEF0", VA = "0x7FAEF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x7FAF90", Offset = "0x7FAF90", VA = "0x7FAF90")]
	public void GlassShatter()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x7FAFA4", Offset = "0x7FAFA4", VA = "0x7FAFA4")]
	public brokenGlassVR()
	{
	}
}
[Token(Token = "0x2000009")]
public class hitDetect : MonoBehaviour
{
	[Token(Token = "0x600000F")]
	[Address(RVA = "0x7FB2CC", Offset = "0x7FB2CC", VA = "0x7FB2CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x7FB2D0", Offset = "0x7FB2D0", VA = "0x7FB2D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x7FB2D4", Offset = "0x7FB2D4", VA = "0x7FB2D4")]
	private void OnCollisionEnter(Collision c)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x7FB33C", Offset = "0x7FB33C", VA = "0x7FB33C")]
	public hitDetect()
	{
	}
}
[Token(Token = "0x200000A")]
public class laserMove : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _shoot;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _originalPosition;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _enemy;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _player;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x7FB344", Offset = "0x7FB344", VA = "0x7FB344")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x7FB380", Offset = "0x7FB380", VA = "0x7FB380")]
	private void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x7FB490", Offset = "0x7FB490", VA = "0x7FB490")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x7FB49C", Offset = "0x7FB49C", VA = "0x7FB49C")]
	private void OnCollisionEnter(Collision p)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x7FB4A4", Offset = "0x7FB4A4", VA = "0x7FB4A4")]
	public laserMove()
	{
	}
}
[Token(Token = "0x200000B")]
public class ColorSelector : MonoBehaviour
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera refCamera;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject selectorImage;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject outerCursor;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject innerCursor;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer finalColorSprite;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color finalColor;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color selectedColor;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float selectorAngle;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector2 innerDelta;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ColorSelector myslf;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x93D0B8", Offset = "0x93D0B8", VA = "0x93D0B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x93D108", Offset = "0x93D108", VA = "0x93D108")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x93D31C", Offset = "0x93D31C", VA = "0x93D31C")]
	private void Update()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x93D358", Offset = "0x93D358", VA = "0x93D358")]
	private void UserInputUpdate()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x93D1C0", Offset = "0x93D1C0", VA = "0x93D1C0")]
	private void SelectInnerColor(Vector2 delta)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x93D668", Offset = "0x93D668", VA = "0x93D668")]
	private Vector3 ClampPosToCircle(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x93D5E8", Offset = "0x93D5E8", VA = "0x93D5E8")]
	private void Barycentric(Vector2 point, ref float u, ref float v, ref float w)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x93D4C4", Offset = "0x93D4C4", VA = "0x93D4C4")]
	private void SelectOuterColor(Vector2 delta)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x93D6D0", Offset = "0x93D6D0", VA = "0x93D6D0")]
	public static Color HSVToRGB(float H, float S, float V)
	{
		return default(Color);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x93D888", Offset = "0x93D888", VA = "0x93D888")]
	public static Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x93D8E4", Offset = "0x93D8E4", VA = "0x93D8E4")]
	public ColorSelector()
	{
	}
}
[Token(Token = "0x200000C")]
public class MobileBloom : MonoBehaviour
{
	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53E74C", Offset = "0x53E74C")]
	public float BloomAmount;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53E764", Offset = "0x53E764")]
	public float BlurAmount;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53E77C", Offset = "0x53E77C")]
	public float FadeAmount;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int scrWidth;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int scrHeight;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int blAmountString;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int blurAmountString;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int fadeAmountString;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int bloomTexString;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x88AB24", Offset = "0x88AB24", VA = "0x88AB24")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x88AD94", Offset = "0x88AD94", VA = "0x88AD94")]
	public void Blor(Slider a)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x88ADD4", Offset = "0x88ADD4", VA = "0x88ADD4")]
	public void Blum(Slider a)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x88AE14", Offset = "0x88AE14", VA = "0x88AE14")]
	public MobileBloom()
	{
	}
}
[Token(Token = "0x200000D")]
public class Move : MonoBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] points;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] orients;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float accuracy;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 currentPosiition;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 targetPos;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 targetOr;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int indexp;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int indexo;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x88AF6C", Offset = "0x88AF6C", VA = "0x88AF6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x88AFD0", Offset = "0x88AFD0", VA = "0x88AFD0")]
	private void Update()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x88B204", Offset = "0x88B204", VA = "0x88B204")]
	public bool V3Equal(Vector3 a, Vector3 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x88B234", Offset = "0x88B234", VA = "0x88B234")]
	public Move()
	{
	}
}
[Token(Token = "0x200000E")]
public static class StringExtensions
{
	[Token(Token = "0x600002C")]
	[Address(RVA = "0x86856C", Offset = "0x86856C", VA = "0x86856C")]
	public static string Localize(this string key)
	{
		return null;
	}
}
[Token(Token = "0x200000F")]
public class ContentPage : MonoBehaviour
{
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte id;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelButton[] buttons;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x8C24BC", Offset = "0x8C24BC", VA = "0x8C24BC")]
	public ContentPage()
	{
	}
}
[Token(Token = "0x2000010")]
public class LevelButton : MonoBehaviour
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53E794", Offset = "0x53E794")]
	public Level level;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53E7CC", Offset = "0x53E7CC")]
	[SerializeField]
	private TMP_Text numberLabel;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image lockImage;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image[] stars;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_Text starsNeededLabel;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image redStar;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x87B218", Offset = "0x87B218", VA = "0x87B218")]
	public void RefreshButton()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x87B4D4", Offset = "0x87B4D4", VA = "0x87B4D4")]
	public void IsPressed()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x87B240", Offset = "0x87B240", VA = "0x87B240")]
	private void DrawAvailable()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x87B3A8", Offset = "0x87B3A8", VA = "0x87B3A8")]
	private void DrawLocked()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x87B604", Offset = "0x87B604", VA = "0x87B604")]
	public void RefreshLevelNumber()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x87B664", Offset = "0x87B664", VA = "0x87B664")]
	public LevelButton()
	{
	}
}
[Token(Token = "0x2000011")]
public class LevelsScreen : MonoBehaviour
{
	[Token(Token = "0x2000012")]
	private enum State
	{
		[Token(Token = "0x400004E")]
		None,
		[Token(Token = "0x400004F")]
		Stable,
		[Token(Token = "0x4000050")]
		ChangingPage
	}

	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DC48", Offset = "0x53DC48")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelsScreen <>4__this;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform oldRT;

		[Token(Token = "0x6000040")]
		[Address(RVA = "0x806B38", Offset = "0x806B38", VA = "0x806B38")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0x806B40", Offset = "0x806B40", VA = "0x806B40")]
		internal void <NextPage>b__0()
		{
		}
	}

	[Token(Token = "0x2000014")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DC58", Offset = "0x53DC58")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelsScreen <>4__this;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform oldRT;

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x806BA0", Offset = "0x806BA0", VA = "0x806BA0")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6000043")]
		[Address(RVA = "0x806BA8", Offset = "0x806BA8", VA = "0x806BA8")]
		internal void <PreviousPage>b__0()
		{
		}
	}

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ShowOnly]
	[SerializeField]
	private State state;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53E890", Offset = "0x53E890")]
	public byte buttonsPerPage;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pagingTime;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53E8C8", Offset = "0x53E8C8")]
	public ContentPage[] pages;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ShowOnly]
	[SerializeField]
	private ContentPage currentPage;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53E938", Offset = "0x53E938")]
	public LevelButton[] buttons;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53E970", Offset = "0x53E970")]
	[SerializeField]
	private GameObject pagePrefab;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject buttonPrefab;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform container;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TMP_Text pageNumber;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject leftArrow;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject rightArrow;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TMP_Text totalStarsLabel;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x87CB84", Offset = "0x87CB84", VA = "0x87CB84")]
	public void Initialization()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x87CC48", Offset = "0x87CC48", VA = "0x87CC48")]
	private void ShowPage(ContentPage page)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x87D050", Offset = "0x87D050", VA = "0x87D050")]
	public void NextPage()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x87D290", Offset = "0x87D290", VA = "0x87D290")]
	public void PreviousPage()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x87CC44", Offset = "0x87CC44", VA = "0x87CC44")]
	private void RefreshScreen()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x87D4BC", Offset = "0x87D4BC", VA = "0x87D4BC")]
	public void RefreshButtons()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x87CF70", Offset = "0x87CF70", VA = "0x87CF70")]
	private void RefreshArrowsAndPageNumber()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x87CDA0", Offset = "0x87CDA0", VA = "0x87CDA0")]
	private void HideAllPages()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x87D594", Offset = "0x87D594", VA = "0x87D594")]
	private ContentPage GetPage(Level tower)
	{
		return null;
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x87D6EC", Offset = "0x87D6EC", VA = "0x87D6EC")]
	private ContentPage GetPage(int towerIndex)
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x87D794", Offset = "0x87D794", VA = "0x87D794")]
	private ContentPage GetPage(LevelButton btn)
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x87D8B8", Offset = "0x87D8B8", VA = "0x87D8B8")]
	public LevelsScreen()
	{
	}
}
[Token(Token = "0x2000015")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x992B8C", Offset = "0x992B8C", VA = "0x992B8C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x992CF0", Offset = "0x992CF0", VA = "0x992CF0")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x99308C", Offset = "0x99308C", VA = "0x99308C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x993230", Offset = "0x993230", VA = "0x993230", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x993260", Offset = "0x993260", VA = "0x993260")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000016")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x8FFE04", Offset = "0x8FFE04", VA = "0x8FFE04")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x8FFE8C", Offset = "0x8FFE8C", VA = "0x8FFE8C")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x900000", Offset = "0x900000", VA = "0x900000")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000017")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000001")]
	public bool IsVisible
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x6BFB24", Offset = "0x6BFB24", VA = "0x6BFB24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x6BFB2C", Offset = "0x6BFB2C", VA = "0x6BFB2C")]
		set
		{
		}
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x6BFC68", Offset = "0x6BFC68", VA = "0x6BFC68")]
	private void Start()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x6BFE30", Offset = "0x6BFE30", VA = "0x6BFE30")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x6BFE38", Offset = "0x6BFE38", VA = "0x6BFE38")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000018")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000019")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000057")]
		[Address(RVA = "0x1272C7C", Offset = "0x1272C7C", VA = "0x1272C7C")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200001A")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53EA2C", Offset = "0x53EA2C")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53EA44", Offset = "0x53EA44")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53EA5C", Offset = "0x53EA5C")]
		public float LatencyWeight;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53EA74", Offset = "0x53EA74")]
		public int MaxSamples;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000058")]
		[Address(RVA = "0x1272C84", Offset = "0x1272C84", VA = "0x1272C84")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0x1272DBC", Offset = "0x1272DBC", VA = "0x1272DBC")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x9054A4", Offset = "0x9054A4", VA = "0x9054A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x9055E8", Offset = "0x9055E8", VA = "0x9055E8")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x9059C0", Offset = "0x9059C0", VA = "0x9059C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x905918", Offset = "0x905918", VA = "0x905918")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x905CF0", Offset = "0x905CF0", VA = "0x905CF0")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x905FD8", Offset = "0x905FD8", VA = "0x905FD8")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200001B")]
public class P2PManager
{
	[Token(Token = "0x200001C")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400006C")]
		Update = 1
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x9940CC", Offset = "0x9940CC", VA = "0x9940CC")]
	public P2PManager()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x9941AC", Offset = "0x9941AC", VA = "0x9941AC")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x994290", Offset = "0x994290", VA = "0x994290")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x994310", Offset = "0x994310", VA = "0x994310")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x994480", Offset = "0x994480", VA = "0x994480")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x9946C0", Offset = "0x9946C0", VA = "0x9946C0")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x994AB0", Offset = "0x994AB0", VA = "0x994AB0")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x994D6C", Offset = "0x994D6C", VA = "0x994D6C")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x99488C", Offset = "0x99488C", VA = "0x99488C")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x994CA0", Offset = "0x994CA0", VA = "0x994CA0")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x994970", Offset = "0x994970", VA = "0x994970")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x994FA4", Offset = "0x994FA4", VA = "0x994FA4")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x9948D4", Offset = "0x9948D4", VA = "0x9948D4")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x994CE4", Offset = "0x994CE4", VA = "0x994CE4")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x994A14", Offset = "0x994A14", VA = "0x994A14")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x99502C", Offset = "0x99502C", VA = "0x99502C")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200001D")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x999890", Offset = "0x999890", VA = "0x999890", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x9998CC", Offset = "0x9998CC", VA = "0x9998CC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x999904", Offset = "0x999904", VA = "0x999904", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x99992C", Offset = "0x99992C", VA = "0x99992C")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x999AC8", Offset = "0x999AC8", VA = "0x999AC8")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x999B48", Offset = "0x999B48", VA = "0x999B48")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x999B9C", Offset = "0x999B9C", VA = "0x999B9C")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200001E")]
public class RemotePlayer
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x90607C", Offset = "0x90607C", VA = "0x90607C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200001F")]
public class RoomManager
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x906DB0", Offset = "0x906DB0", VA = "0x906DB0")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x906EB4", Offset = "0x906EB4", VA = "0x906EB4")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x907034", Offset = "0x907034", VA = "0x907034")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x907170", Offset = "0x907170", VA = "0x907170")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x907244", Offset = "0x907244", VA = "0x907244")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x907380", Offset = "0x907380", VA = "0x907380")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x907064", Offset = "0x907064", VA = "0x907064")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x907408", Offset = "0x907408", VA = "0x907408")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x907B60", Offset = "0x907B60", VA = "0x907B60")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x907E60", Offset = "0x907E60", VA = "0x907E60")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x9076E8", Offset = "0x9076E8", VA = "0x9076E8")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000020")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000021")]
	public enum State
	{
		[Token(Token = "0x40000A4")]
		INITIALIZING,
		[Token(Token = "0x40000A5")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40000A6")]
		CREATING_A_ROOM,
		[Token(Token = "0x40000A7")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40000A8")]
		JOINING_A_ROOM,
		[Token(Token = "0x40000A9")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40000AA")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40000AB")]
		SHUTDOWN
	}

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000002")]
	public static State CurrentState
	{
		[Token(Token = "0x6000089")]
		[Address(RVA = "0x865668", Offset = "0x865668", VA = "0x865668")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000003")]
	public static ulong MyID
	{
		[Token(Token = "0x600008A")]
		[Address(RVA = "0x8656D8", Offset = "0x8656D8", VA = "0x8656D8")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000004")]
	public static string MyOculusID
	{
		[Token(Token = "0x600008B")]
		[Address(RVA = "0x8657B8", Offset = "0x8657B8", VA = "0x8657B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x863888", Offset = "0x863888", VA = "0x863888", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x863C18", Offset = "0x863C18", VA = "0x863C18", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x864324", Offset = "0x864324", VA = "0x864324")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x864644", Offset = "0x864644", VA = "0x864644", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x864648", Offset = "0x864648", VA = "0x864648")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x864768", Offset = "0x864768", VA = "0x864768")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x864E70", Offset = "0x864E70", VA = "0x864E70")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x865264", Offset = "0x865264", VA = "0x865264")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x865474", Offset = "0x865474", VA = "0x865474")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x8655FC", Offset = "0x8655FC", VA = "0x8655FC")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x863FB0", Offset = "0x863FB0", VA = "0x863FB0")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x8644CC", Offset = "0x8644CC", VA = "0x8644CC")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x864064", Offset = "0x864064", VA = "0x864064")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x8658E0", Offset = "0x8658E0", VA = "0x8658E0")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x865A5C", Offset = "0x865A5C", VA = "0x865A5C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x865B40", Offset = "0x865B40", VA = "0x865B40")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x865C9C", Offset = "0x865C9C", VA = "0x865C9C")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x865D80", Offset = "0x865D80", VA = "0x865D80")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x864584", Offset = "0x864584", VA = "0x864584")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x8662C8", Offset = "0x8662C8", VA = "0x8662C8")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x86635C", Offset = "0x86635C", VA = "0x86635C")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x8660B4", Offset = "0x8660B4", VA = "0x8660B4")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x86654C", Offset = "0x86654C", VA = "0x86654C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x863804", Offset = "0x863804", VA = "0x863804")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5434B4", Offset = "0x5434B4")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x866690", Offset = "0x866690", VA = "0x866690")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x86676C", Offset = "0x86676C", VA = "0x86676C")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000022")]
public class VoipManager
{
	[Token(Token = "0x600009B")]
	[Address(RVA = "0x7F7200", Offset = "0x7F7200", VA = "0x7F7200")]
	public VoipManager()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x7F72E0", Offset = "0x7F72E0", VA = "0x7F72E0")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x7F73C4", Offset = "0x7F73C4", VA = "0x7F73C4")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x7F7444", Offset = "0x7F7444", VA = "0x7F7444")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x7F75B4", Offset = "0x7F75B4", VA = "0x7F75B4")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000023")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x6BF7F0", Offset = "0x6BF7F0", VA = "0x6BF7F0")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x6BF868", Offset = "0x6BF868", VA = "0x6BF868")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x6BF9DC", Offset = "0x6BF9DC", VA = "0x6BF9DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x6BFA40", Offset = "0x6BFA40", VA = "0x6BFA40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x6BF8A4", Offset = "0x6BF8A4", VA = "0x6BF8A4")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x6BFB04", Offset = "0x6BFB04", VA = "0x6BFB04")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x6BFB1C", Offset = "0x6BFB1C", VA = "0x6BFB1C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000024")]
public class AvatarLayer
{
	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x92B9D4", Offset = "0x92B9D4", VA = "0x92B9D4")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000025")]
public class PacketRecordSettings
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x995650", Offset = "0x995650", VA = "0x995650")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000026")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000027")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x808C60", Offset = "0x808C60", VA = "0x808C60")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000028")]
	public enum HandType
	{
		[Token(Token = "0x400010D")]
		Right,
		[Token(Token = "0x400010E")]
		Left,
		[Token(Token = "0x400010F")]
		Max
	}

	[Token(Token = "0x2000029")]
	public enum HandJoint
	{
		[Token(Token = "0x4000111")]
		HandBase,
		[Token(Token = "0x4000112")]
		IndexBase,
		[Token(Token = "0x4000113")]
		IndexTip,
		[Token(Token = "0x4000114")]
		ThumbBase,
		[Token(Token = "0x4000115")]
		ThumbTip,
		[Token(Token = "0x4000116")]
		Max
	}

	[Token(Token = "0x200002A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DC68", Offset = "0x53DC68")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0x808C10", Offset = "0x808C10", VA = "0x808C10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E3")]
			[Address(RVA = "0x808C58", Offset = "0x808C58", VA = "0x808C58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x808A40", Offset = "0x808A40", VA = "0x808A40")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x808A6C", Offset = "0x808A6C", VA = "0x808A6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x808A70", Offset = "0x808A70", VA = "0x808A70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x808C18", Offset = "0x808C18", VA = "0x808C18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53EA8C", Offset = "0x53EA8C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53EAC4", Offset = "0x53EAC4")]
	public bool EnableBody;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53EAFC", Offset = "0x53EAFC")]
	public bool RecordPackets;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53EB34", Offset = "0x53EB34")]
	public bool StartWithControllers;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EB6C", Offset = "0x53EB6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53EB6C", Offset = "0x53EB6C")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EBDC", Offset = "0x53EBDC")]
	private bool CombineMeshes;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EC14", Offset = "0x53EC14")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53EC4C", Offset = "0x53EC4C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53EC84", Offset = "0x53EC84")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53ECBC", Offset = "0x53ECBC")]
	public bool EnableLaughter;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000ED")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000EF")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000F0")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000F1")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000F2")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000F3")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB81744", Offset = "0xB81744", VA = "0xB81744")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB81B30", Offset = "0xB81B30", VA = "0xB81B30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB81BC4", Offset = "0xB81BC4", VA = "0xB81BC4")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB81C2C", Offset = "0xB81C2C", VA = "0xB81C2C")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB81D5C", Offset = "0xB81D5C", VA = "0xB81D5C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB81E3C", Offset = "0xB81E3C", VA = "0xB81E3C")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xB81F18", Offset = "0xB81F18", VA = "0xB81F18")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xB820FC", Offset = "0xB820FC", VA = "0xB820FC")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB821D8", Offset = "0xB821D8", VA = "0xB821D8")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xB82250", Offset = "0xB82250", VA = "0xB82250")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xB82338", Offset = "0xB82338", VA = "0xB82338")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xB823C4", Offset = "0xB823C4", VA = "0xB823C4")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xB8244C", Offset = "0xB8244C", VA = "0xB8244C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xB82464", Offset = "0xB82464", VA = "0xB82464")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000B7")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xB82914", Offset = "0xB82914", VA = "0xB82914")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xB82C94", Offset = "0xB82C94", VA = "0xB82C94")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xB82E3C", Offset = "0xB82E3C", VA = "0xB82E3C")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB83088", Offset = "0xB83088", VA = "0xB83088")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB8317C", Offset = "0xB8317C", VA = "0xB8317C")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xB837E8", Offset = "0xB837E8", VA = "0xB837E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xB83B14", Offset = "0xB83B14", VA = "0xB83B14")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xB84538", Offset = "0xB84538", VA = "0xB84538")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xB8458C", Offset = "0xB8458C", VA = "0xB8458C")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xB83438", Offset = "0xB83438", VA = "0xB83438")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xB834DC", Offset = "0xB834DC", VA = "0xB834DC")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xB845BC", Offset = "0xB845BC", VA = "0xB845BC")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xB83EEC", Offset = "0xB83EEC", VA = "0xB83EEC")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xB84830", Offset = "0xB84830", VA = "0xB84830")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xB84620", Offset = "0xB84620", VA = "0xB84620")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xB84AE0", Offset = "0xB84AE0", VA = "0xB84AE0")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xB84F5C", Offset = "0xB84F5C", VA = "0xB84F5C")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xB85360", Offset = "0xB85360", VA = "0xB85360")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xB854B4", Offset = "0xB854B4", VA = "0xB854B4")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xB85698", Offset = "0xB85698", VA = "0xB85698")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xB840B8", Offset = "0xB840B8", VA = "0xB840B8")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xB8576C", Offset = "0xB8576C", VA = "0xB8576C")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xB83EFC", Offset = "0xB83EFC", VA = "0xB83EFC")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xB8585C", Offset = "0xB8585C", VA = "0xB8585C")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xB85EB4", Offset = "0xB85EB4", VA = "0xB85EB4")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xB86398", Offset = "0xB86398", VA = "0xB86398")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xB863C0", Offset = "0xB863C0", VA = "0xB863C0")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xB863E8", Offset = "0xB863E8", VA = "0xB863E8")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xB843C4", Offset = "0xB843C4", VA = "0xB843C4")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xB85920", Offset = "0xB85920", VA = "0xB85920")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xB86808", Offset = "0xB86808", VA = "0xB86808")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x543514", Offset = "0x543514")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xB86874", Offset = "0xB86874", VA = "0xB86874")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xB866C8", Offset = "0xB866C8", VA = "0xB866C8")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xB86938", Offset = "0xB86938", VA = "0xB86938")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xB86A20", Offset = "0xB86A20", VA = "0xB86A20")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xB86424", Offset = "0xB86424", VA = "0xB86424")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xB86B08", Offset = "0xB86B08", VA = "0xB86B08")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200002B")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB86CC8", Offset = "0xB86CC8", VA = "0xB86CC8")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200002C")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB86D8C", Offset = "0xB86D8C", VA = "0xB86D8C")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB88010", Offset = "0xB88010", VA = "0xB88010")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB87BE4", Offset = "0xB87BE4", VA = "0xB87BE4")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB87974", Offset = "0xB87974", VA = "0xB87974")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB87A50", Offset = "0xB87A50", VA = "0xB87A50")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xB882A0", Offset = "0xB882A0", VA = "0xB882A0")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200002D")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400011F")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xB88828", Offset = "0xB88828", VA = "0xB88828")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200002E")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB88A94", Offset = "0xB88A94", VA = "0xB88A94")]
	private void Update()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xB88EE8", Offset = "0xB88EE8", VA = "0xB88EE8")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xB851F0", Offset = "0xB851F0", VA = "0xB851F0")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xB89000", Offset = "0xB89000", VA = "0xB89000")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xB89124", Offset = "0xB89124", VA = "0xB89124")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000030")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xB89184", Offset = "0xB89184", VA = "0xB89184")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xB88BB8", Offset = "0xB88BB8", VA = "0xB88BB8")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xB8918C", Offset = "0xB8918C", VA = "0xB8918C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xB891EC", Offset = "0xB891EC", VA = "0xB891EC")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xB899A0", Offset = "0xB899A0", VA = "0xB899A0")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB88F48", Offset = "0xB88F48", VA = "0xB88F48")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000031")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000032")]
	public enum PacketMode
	{
		[Token(Token = "0x4000133")]
		SDK,
		[Token(Token = "0x4000134")]
		Unity
	}

	[Token(Token = "0x2000033")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x808CD8", Offset = "0x808CD8", VA = "0x808CD8")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000034")]
	public struct PoseFrame
	{
		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x808DB4", Offset = "0x808DB4", VA = "0x808DB4")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB8AE04", Offset = "0xB8AE04", VA = "0xB8AE04")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000F9")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB8AE14", Offset = "0xB8AE14", VA = "0xB8AE14")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB83580", Offset = "0xB83580", VA = "0xB83580")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB8AE9C", Offset = "0xB8AE9C", VA = "0xB8AE9C")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB8AEA4", Offset = "0xB8AEA4", VA = "0xB8AEA4")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000035")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xB8AEB4", Offset = "0xB8AEB4", VA = "0xB8AEB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xB8B018", Offset = "0xB8B018", VA = "0xB8B018")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000036")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB8B080", Offset = "0xB8B080", VA = "0xB8B080")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB8B1E4", Offset = "0xB8B1E4", VA = "0xB8B1E4")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB8B580", Offset = "0xB8B580", VA = "0xB8B580")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xB8B7A4", Offset = "0xB8B7A4", VA = "0xB8B7A4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xB8B7D0", Offset = "0xB8B7D0", VA = "0xB8B7D0")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000037")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000038")]
	public enum TextureType
	{
		[Token(Token = "0x400016A")]
		DiffuseTextures,
		[Token(Token = "0x400016B")]
		NormalMaps,
		[Token(Token = "0x400016C")]
		RoughnessMaps,
		[Token(Token = "0x400016D")]
		Count
	}

	[Token(Token = "0x2000039")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200003A")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200003B")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200003C")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x8097B0", Offset = "0x8097B0", VA = "0x8097B0")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200003D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DC78", Offset = "0x53DC78")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600011A")]
			[Address(RVA = "0x809760", Offset = "0x809760", VA = "0x809760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011C")]
			[Address(RVA = "0x8097A8", Offset = "0x8097A8", VA = "0x8097A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0x8090B8", Offset = "0x8090B8", VA = "0x8090B8")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x8090E4", Offset = "0x8090E4", VA = "0x8090E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0x8090E8", Offset = "0x8090E8", VA = "0x8090E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0x809768", Offset = "0x809768", VA = "0x809768", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000165")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000166")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000167")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000168")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB8B81C", Offset = "0xB8B81C", VA = "0xB8B81C")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB8B9A8", Offset = "0xB8B9A8", VA = "0xB8B9A8")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xB8B9D0", Offset = "0xB8B9D0", VA = "0xB8B9D0")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xB8C12C", Offset = "0xB8C12C", VA = "0xB8C12C")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xB8C198", Offset = "0xB8C198", VA = "0xB8C198")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB8BA6C", Offset = "0xB8BA6C", VA = "0xB8BA6C")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB8C1EC", Offset = "0xB8C1EC", VA = "0xB8C1EC")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB8BEA4", Offset = "0xB8BEA4", VA = "0xB8BEA4")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB8C2DC", Offset = "0xB8C2DC", VA = "0xB8C2DC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB8C580", Offset = "0xB8C580", VA = "0xB8C580")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB8C6A8", Offset = "0xB8C6A8", VA = "0xB8C6A8")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB8C6E0", Offset = "0xB8C6E0", VA = "0xB8C6E0")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB8C0B4", Offset = "0xB8C0B4", VA = "0xB8C0B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5435C4", Offset = "0x5435C4")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB8D558", Offset = "0xB8D558", VA = "0xB8D558")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200003E")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000009")]
	public float Duration
	{
		[Token(Token = "0x600011D")]
		[Address(RVA = "0x98D7FC", Offset = "0x98D7FC", VA = "0x98D7FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000A")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600011E")]
		[Address(RVA = "0x98D870", Offset = "0x98D870", VA = "0x98D870")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x98D900", Offset = "0x98D900", VA = "0x98D900")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x98DA08", Offset = "0x98DA08", VA = "0x98DA08")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x98DBA4", Offset = "0x98DBA4", VA = "0x98DBA4")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x98DCC4", Offset = "0x98DCC4", VA = "0x98DCC4")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x98DD9C", Offset = "0x98DD9C", VA = "0x98DD9C")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x98DFCC", Offset = "0x98DFCC", VA = "0x98DFCC")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x98E2A8", Offset = "0x98E2A8", VA = "0x98E2A8")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200003F")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000126")]
	[Address(RVA = "0x92EAE0", Offset = "0x92EAE0", VA = "0x92EAE0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x92EBF4", Offset = "0x92EBF4", VA = "0x92EBF4")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x92EDA0", Offset = "0x92EDA0", VA = "0x92EDA0")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x92EC64", Offset = "0x92EC64", VA = "0x92EC64")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x92ECF8", Offset = "0x92ECF8", VA = "0x92ECF8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000040")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x600012B")]
	[Address(RVA = "0x92E6E0", Offset = "0x92E6E0", VA = "0x92E6E0")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x92EA84", Offset = "0x92EA84", VA = "0x92EA84")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x92E880", Offset = "0x92E880", VA = "0x92E880")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x92E8F8", Offset = "0x92E8F8", VA = "0x92E8F8")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x92E994", Offset = "0x92E994", VA = "0x92E994")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000041")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400018F")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000190")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x98E4D0", Offset = "0x98E4D0", VA = "0x98E4D0")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x98E558", Offset = "0x98E558", VA = "0x98E558", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x98E574", Offset = "0x98E574", VA = "0x98E574")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x98E718", Offset = "0x98E718", VA = "0x98E718")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x98E8CC", Offset = "0x98E8CC", VA = "0x98E8CC")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000042")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x98E958", Offset = "0x98E958", VA = "0x98E958")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x98EA3C", Offset = "0x98EA3C", VA = "0x98EA3C")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x98EE84", Offset = "0x98EE84", VA = "0x98EE84")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x98F244", Offset = "0x98F244", VA = "0x98F244")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x98F350", Offset = "0x98F350", VA = "0x98F350")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000043")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000199")]
	Body = 1,
	[Token(Token = "0x400019A")]
	Hands = 2,
	[Token(Token = "0x400019B")]
	Base = 4,
	[Token(Token = "0x400019C")]
	BodyTilt = 0x10,
	[Token(Token = "0x400019D")]
	Expressive = 0x20,
	[Token(Token = "0x400019E")]
	All = -1
}
[Token(Token = "0x2000044")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40001A0")]
	AvatarSpecification,
	[Token(Token = "0x40001A1")]
	AssetLoaded,
	[Token(Token = "0x40001A2")]
	Count
}
[Token(Token = "0x2000045")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000046")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000047")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40001A8")]
	Mesh,
	[Token(Token = "0x40001A9")]
	Texture,
	[Token(Token = "0x40001AA")]
	Pose,
	[Token(Token = "0x40001AB")]
	Material,
	[Token(Token = "0x40001AC")]
	CombinedMesh,
	[Token(Token = "0x40001AD")]
	PBSMaterial,
	[Token(Token = "0x40001AE")]
	FailedLoad,
	[Token(Token = "0x40001AF")]
	Count
}
[Token(Token = "0x2000048")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200004A")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200004B")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200004C")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200004D")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40001E4")]
	RGB24,
	[Token(Token = "0x40001E5")]
	DXT1,
	[Token(Token = "0x40001E6")]
	DXT5,
	[Token(Token = "0x40001E7")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40001E8")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40001E9")]
	Count
}
[Token(Token = "0x200004E")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200004F")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001F1")]
	SkinnedMeshRender,
	[Token(Token = "0x40001F2")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001F3")]
	ProjectorRender,
	[Token(Token = "0x40001F4")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001F5")]
	Count
}
[Token(Token = "0x2000050")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001F7")]
	Unknown,
	[Token(Token = "0x40001F8")]
	Default,
	[Token(Token = "0x40001F9")]
	Verbose,
	[Token(Token = "0x40001FA")]
	Debug,
	[Token(Token = "0x40001FB")]
	Info,
	[Token(Token = "0x40001FC")]
	Warn,
	[Token(Token = "0x40001FD")]
	Error,
	[Token(Token = "0x40001FE")]
	Fatal,
	[Token(Token = "0x40001FF")]
	Silent
}
[Token(Token = "0x2000051")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000052")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000204")]
	One = 1,
	[Token(Token = "0x4000205")]
	Two = 2,
	[Token(Token = "0x4000206")]
	Three = 4,
	[Token(Token = "0x4000207")]
	Joystick = 8
}
[Token(Token = "0x2000053")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000209")]
	One = 1,
	[Token(Token = "0x400020A")]
	Two = 2,
	[Token(Token = "0x400020B")]
	Joystick = 4,
	[Token(Token = "0x400020C")]
	ThumbRest = 8,
	[Token(Token = "0x400020D")]
	Index = 0x10,
	[Token(Token = "0x400020E")]
	Pointing = 0x40,
	[Token(Token = "0x400020F")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000054")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000055")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000056")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000057")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000059")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200005A")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005B")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005C")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x400022F")]
	Add,
	[Token(Token = "0x4000230")]
	Multiply,
	[Token(Token = "0x4000231")]
	Count
}
[Token(Token = "0x200005D")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000233")]
	Color,
	[Token(Token = "0x4000234")]
	Texture,
	[Token(Token = "0x4000235")]
	TextureSingleChannel,
	[Token(Token = "0x4000236")]
	Parallax,
	[Token(Token = "0x4000237")]
	Count
}
[Token(Token = "0x200005E")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000239")]
	None,
	[Token(Token = "0x400023A")]
	Positional,
	[Token(Token = "0x400023B")]
	ViewReflection,
	[Token(Token = "0x400023C")]
	Fresnel,
	[Token(Token = "0x400023D")]
	Pulse,
	[Token(Token = "0x400023E")]
	Count
}
[Token(Token = "0x200005F")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000240")]
	Touch,
	[Token(Token = "0x4000241")]
	Malibu,
	[Token(Token = "0x4000242")]
	Go,
	[Token(Token = "0x4000243")]
	Quest,
	[Token(Token = "0x4000244")]
	Count
}
[Token(Token = "0x2000060")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000246")]
	Lowest = 1,
	[Token(Token = "0x4000247")]
	Medium = 3,
	[Token(Token = "0x4000248")]
	Highest = 5
}
[Token(Token = "0x2000061")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400024A")]
	Unknown = -1,
	[Token(Token = "0x400024B")]
	One,
	[Token(Token = "0x400024C")]
	Two
}
[Token(Token = "0x2000062")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x7FC42C", Offset = "0x7FC42C", VA = "0x7FC42C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x7FC45C", Offset = "0x7FC45C", VA = "0x7FC45C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x7FC678", Offset = "0x7FC678", VA = "0x7FC678", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000063")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x7FC75C", Offset = "0x7FC75C", VA = "0x7FC75C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x7FC78C", Offset = "0x7FC78C", VA = "0x7FC78C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x7FCB28", Offset = "0x7FCB28", VA = "0x7FCB28", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000064")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x7FB9BC", Offset = "0x7FB9BC", VA = "0x7FB9BC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x7FB9EC", Offset = "0x7FB9EC", VA = "0x7FB9EC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x7FBC7C", Offset = "0x7FBC7C", VA = "0x7FBC7C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000065")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x7FCC90", Offset = "0x7FCC90", VA = "0x7FCC90")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x7FCCC0", Offset = "0x7FCCC0", VA = "0x7FCCC0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x7FCEB0", Offset = "0x7FCEB0", VA = "0x7FCEB0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000066")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xB86CD0", Offset = "0xB86CD0", VA = "0xB86CD0")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000067")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000068")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000281")]
	FirstPerson = 1,
	[Token(Token = "0x4000282")]
	ThirdPerson = 2,
	[Token(Token = "0x4000283")]
	SelfOccluding = 4
}
[Token(Token = "0x2000069")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006A")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006B")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200006C")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006D")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000299")]
	Default,
	[Token(Token = "0x400029A")]
	GripSphere,
	[Token(Token = "0x400029B")]
	GripCube,
	[Token(Token = "0x400029C")]
	Count
}
[Token(Token = "0x200006E")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400029E")]
	Body,
	[Token(Token = "0x400029F")]
	Clothing,
	[Token(Token = "0x40002A0")]
	Eyewear,
	[Token(Token = "0x40002A1")]
	Hair,
	[Token(Token = "0x40002A2")]
	Beard,
	[Token(Token = "0x40002A3")]
	Count
}
[Token(Token = "0x200006F")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000070")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000071")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000072")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000073")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40002AD")]
	AvatarHead,
	[Token(Token = "0x40002AE")]
	AvatarHand,
	[Token(Token = "0x40002AF")]
	Object,
	[Token(Token = "0x40002B0")]
	ObjectStatic,
	[Token(Token = "0x40002B1")]
	Count
}
[Token(Token = "0x2000074")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000075")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000076")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000077")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000078")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40002BD")]
	Point,
	[Token(Token = "0x40002BE")]
	Direction,
	[Token(Token = "0x40002BF")]
	Spot,
	[Token(Token = "0x40002C0")]
	Count
}
[Token(Token = "0x2000079")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200007A")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200007B")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200007C")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200007D")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40002D6")]
	None = 0u,
	[Token(Token = "0x40002D7")]
	GazeTarget = 1u,
	[Token(Token = "0x40002D8")]
	Any = uint.MaxValue
}
[Token(Token = "0x200007E")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200007F")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000080")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000081")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000082")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000083")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000084")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600016C")]
		[Address(RVA = "0x8097B8", Offset = "0x8097B8", VA = "0x8097B8")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002ED")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000B")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600015B")]
		[Address(RVA = "0x98EC34", Offset = "0x98EC34", VA = "0x98EC34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x98F360", Offset = "0x98F360", VA = "0x98F360")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x98F668", Offset = "0x98F668", VA = "0x98F668")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x98F6D8", Offset = "0x98F6D8", VA = "0x98F6D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x9900B8", Offset = "0x9900B8", VA = "0x9900B8")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x99010C", Offset = "0x99010C", VA = "0x99010C")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x990160", Offset = "0x990160", VA = "0x990160")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x9901C4", Offset = "0x9901C4", VA = "0x9901C4")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x990228", Offset = "0x990228", VA = "0x990228")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x98FEB8", Offset = "0x98FEB8", VA = "0x98FEB8")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x990304", Offset = "0x990304", VA = "0x990304")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x990458", Offset = "0x990458", VA = "0x990458")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x98EE08", Offset = "0x98EE08", VA = "0x98EE08")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x99054C", Offset = "0x99054C", VA = "0x99054C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x98F61C", Offset = "0x98F61C", VA = "0x98F61C")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x99062C", Offset = "0x99062C", VA = "0x99062C")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x9906AC", Offset = "0x9906AC", VA = "0x9906AC")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000085")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000C")]
	public static string AppID
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x9905EC", Offset = "0x9905EC", VA = "0x9905EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x990804", Offset = "0x990804", VA = "0x990804")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static string MobileAppID
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x99060C", Offset = "0x99060C", VA = "0x99060C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x990830", Offset = "0x990830", VA = "0x990830")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x9906C4", Offset = "0x9906C4", VA = "0x9906C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000172")]
		[Address(RVA = "0x99085C", Offset = "0x99085C", VA = "0x99085C")]
		set
		{
		}
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x9908AC", Offset = "0x9908AC", VA = "0x9908AC")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000086")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x992350", Offset = "0x992350", VA = "0x992350")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x992610", Offset = "0x992610", VA = "0x992610")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x9924A8", Offset = "0x9924A8", VA = "0x9924A8")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x992850", Offset = "0x992850", VA = "0x992850")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000087")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x992860", Offset = "0x992860", VA = "0x992860")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x9929A4", Offset = "0x9929A4", VA = "0x9929A4")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x992B7C", Offset = "0x992B7C", VA = "0x992B7C")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000088")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000304")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000305")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000306")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x990900", Offset = "0x990900", VA = "0x990900")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x99187C", Offset = "0x99187C", VA = "0x99187C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x991AB8", Offset = "0x991AB8", VA = "0x991AB8")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x990FD0", Offset = "0x990FD0", VA = "0x990FD0")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x990CF4", Offset = "0x990CF4", VA = "0x990CF4")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x990E58", Offset = "0x990E58", VA = "0x990E58")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x992340", Offset = "0x992340", VA = "0x992340")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000089")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200008A")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200008B")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x1271004", Offset = "0x1271004", VA = "0x1271004")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200008C")]
	public struct TextureSet
	{
		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x1271014", Offset = "0x1271014", VA = "0x1271014")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200008D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DCF8", Offset = "0x53DCF8")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000191")]
			[Address(RVA = "0x809DFC", Offset = "0x809DFC", VA = "0x809DFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000193")]
			[Address(RVA = "0x809E44", Offset = "0x809E44", VA = "0x809E44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0x8097E4", Offset = "0x8097E4", VA = "0x8097E4")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0x809810", Offset = "0x809810", VA = "0x809810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0x809814", Offset = "0x809814", VA = "0x809814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x809E04", Offset = "0x809E04", VA = "0x809E04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400030A")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400030B")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400030E")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x400030F")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000310")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000311")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000312")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000313")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000314")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x9932A4", Offset = "0x9932A4", VA = "0x9932A4")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x99368C", Offset = "0x99368C", VA = "0x99368C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x99388C", Offset = "0x99388C", VA = "0x99388C")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x9938D8", Offset = "0x9938D8", VA = "0x9938D8")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x993800", Offset = "0x993800", VA = "0x993800")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x993A84", Offset = "0x993A84", VA = "0x993A84")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x993C8C", Offset = "0x993C8C", VA = "0x993C8C")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x993D30", Offset = "0x993D30", VA = "0x993D30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x543714", Offset = "0x543714")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x9902B8", Offset = "0x9902B8", VA = "0x9902B8")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x993DC0", Offset = "0x993DC0", VA = "0x993DC0")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x200008E")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x993EF8", Offset = "0x993EF8", VA = "0x993EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x994060", Offset = "0x994060", VA = "0x994060")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200008F")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000090")]
	public delegate void OnClick();

	[Token(Token = "0x2000091")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000092")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000093")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DD08", Offset = "0x53DD08")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x7FE7F0", Offset = "0x7FE7F0", VA = "0x7FE7F0")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x7FE7F8", Offset = "0x7FE7F8", VA = "0x7FE7F8")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000095")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DD18", Offset = "0x53DD18")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x7FEA1C", Offset = "0x7FEA1C", VA = "0x7FEA1C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x7FEA24", Offset = "0x7FEA24", VA = "0x7FEA24")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DD28", Offset = "0x53DD28")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x7FEC70", Offset = "0x7FEC70", VA = "0x7FEC70")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x7FEC78", Offset = "0x7FEC78", VA = "0x7FEC78")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000097")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DD38", Offset = "0x53DD38")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x7FF010", Offset = "0x7FF010", VA = "0x7FF010")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x7FF018", Offset = "0x7FF018", VA = "0x7FF018")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000098")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DD48", Offset = "0x53DD48")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x7FF038", Offset = "0x7FF038", VA = "0x7FF038")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x7FF040", Offset = "0x7FF040", VA = "0x7FF040")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000326")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000327")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000328")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000336")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000337")]
	public const float marginH = 16f;

	[Token(Token = "0x4000338")]
	public const float marginV = 16f;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isHorizontal;

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x8C9624", Offset = "0x8C9624", VA = "0x8C9624")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x8C9AD8", Offset = "0x8C9AD8", VA = "0x8C9AD8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x8CA0C0", Offset = "0x8CA0C0", VA = "0x8CA0C0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x8C9E7C", Offset = "0x8C9E7C", VA = "0x8C9E7C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x8CA27C", Offset = "0x8CA27C", VA = "0x8CA27C")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x8CA554", Offset = "0x8CA554", VA = "0x8CA554")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x8CA7E4", Offset = "0x8CA7E4", VA = "0x8CA7E4")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x8CA8E8", Offset = "0x8CA8E8", VA = "0x8CA8E8")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x8CAAC0", Offset = "0x8CAAC0", VA = "0x8CAAC0")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x8CAB64", Offset = "0x8CAB64", VA = "0x8CAB64")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x8CAD34", Offset = "0x8CAD34", VA = "0x8CAD34")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x8CAF1C", Offset = "0x8CAF1C", VA = "0x8CAF1C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x8CB204", Offset = "0x8CB204", VA = "0x8CB204")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x8CB300", Offset = "0x8CB300", VA = "0x8CB300")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x8CB3AC", Offset = "0x8CB3AC", VA = "0x8CB3AC")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000099")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x6CAC78", Offset = "0x6CAC78", VA = "0x6CAC78")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x6CAD14", Offset = "0x6CAD14", VA = "0x6CAD14")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x6CADD4", Offset = "0x6CADD4", VA = "0x6CADD4")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x6CAE10", Offset = "0x6CAE10", VA = "0x6CAE10")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200009A")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200009B")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000356")]
		On,
		[Token(Token = "0x4000357")]
		Off,
		[Token(Token = "0x4000358")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000011")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xBAC2F0", Offset = "0xBAC2F0", VA = "0xBAC2F0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xBAC2AC", Offset = "0xBAC2AC", VA = "0xBAC2AC")]
		set
		{
		}
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xBAC2F8", Offset = "0xBAC2F8", VA = "0xBAC2F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xBAC34C", Offset = "0xBAC34C", VA = "0xBAC34C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xBAC490", Offset = "0xBAC490", VA = "0xBAC490", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xBAC4AC", Offset = "0xBAC4AC", VA = "0xBAC4AC", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xBAC500", Offset = "0xBAC500", VA = "0xBAC500")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xBAC6BC", Offset = "0xBAC6BC", VA = "0xBAC6BC")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xBAC7D0", Offset = "0xBAC7D0", VA = "0xBAC7D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xBAC860", Offset = "0xBAC860", VA = "0xBAC860")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xBAC92C", Offset = "0xBAC92C", VA = "0xBAC92C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xBAC9E0", Offset = "0xBAC9E0", VA = "0xBAC9E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xBACACC", Offset = "0xBACACC", VA = "0xBACACC")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200009C")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000359")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x400035A")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400035B")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EDC4", Offset = "0x53EDC4")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EDFC", Offset = "0x53EDFC")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EE34", Offset = "0x53EE34")]
	public float HeightOffset;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EE6C", Offset = "0x53EE6C")]
	public float MinimumHeight;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EEA4", Offset = "0x53EEA4")]
	public float MaximumHeight;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x93AB38", Offset = "0x93AB38", VA = "0x93AB38")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x93AB40", Offset = "0x93AB40", VA = "0x93AB40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x93ABB8", Offset = "0x93ABB8", VA = "0x93ABB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x93AC4C", Offset = "0x93AC4C", VA = "0x93AC4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x93ACE0", Offset = "0x93ACE0", VA = "0x93ACE0")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x93B00C", Offset = "0x93B00C", VA = "0x93B00C")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x93B23C", Offset = "0x93B23C", VA = "0x93B23C")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200009D")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x87FFB8", Offset = "0x87FFB8", VA = "0x87FFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x88006C", Offset = "0x88006C", VA = "0x88006C")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200009E")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200009F")]
	public enum States
	{
		[Token(Token = "0x4000389")]
		Ready,
		[Token(Token = "0x400038A")]
		Aim,
		[Token(Token = "0x400038B")]
		CancelAim,
		[Token(Token = "0x400038C")]
		PreTeleport,
		[Token(Token = "0x400038D")]
		CancelTeleport,
		[Token(Token = "0x400038E")]
		Teleporting,
		[Token(Token = "0x400038F")]
		PostTeleport
	}

	[Token(Token = "0x20000A0")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000391")]
		None,
		[Token(Token = "0x4000392")]
		Aim,
		[Token(Token = "0x4000393")]
		PreTeleport,
		[Token(Token = "0x4000394")]
		Teleport
	}

	[Token(Token = "0x20000A1")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000396")]
		Point,
		[Token(Token = "0x4000397")]
		Sphere,
		[Token(Token = "0x4000398")]
		Capsule
	}

	[Token(Token = "0x20000A2")]
	public class AimData
	{
		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53F2BC", Offset = "0x53F2BC")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000015")]
		public List<Vector3> Points
		{
			[Token(Token = "0x600020E")]
			[Address(RVA = "0x807610", Offset = "0x807610", VA = "0x807610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543C3C", Offset = "0x543C3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600020F")]
			[Address(RVA = "0x807618", Offset = "0x807618", VA = "0x807618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543C4C", Offset = "0x543C4C")]
			private set
			{
			}
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0x807594", Offset = "0x807594", VA = "0x807594")]
		public AimData()
		{
		}

		[Token(Token = "0x6000210")]
		[Address(RVA = "0x807620", Offset = "0x807620", VA = "0x807620")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DD58", Offset = "0x53DD58")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000214")]
			[Address(RVA = "0x8073EC", Offset = "0x8073EC", VA = "0x8073EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000216")]
			[Address(RVA = "0x807434", Offset = "0x807434", VA = "0x807434", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0x8072D0", Offset = "0x8072D0", VA = "0x8072D0")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0x8072FC", Offset = "0x8072FC", VA = "0x8072FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x807300", Offset = "0x807300", VA = "0x807300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x8073F4", Offset = "0x8073F4", VA = "0x8073F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DD68", Offset = "0x53DD68")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021A")]
			[Address(RVA = "0x806D78", Offset = "0x806D78", VA = "0x806D78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021C")]
			[Address(RVA = "0x806DC0", Offset = "0x806DC0", VA = "0x806DC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x806C08", Offset = "0x806C08", VA = "0x806C08")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0x806C34", Offset = "0x806C34", VA = "0x806C34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x806C38", Offset = "0x806C38", VA = "0x806C38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x806D80", Offset = "0x806D80", VA = "0x806D80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DD78", Offset = "0x53DD78")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000220")]
			[Address(RVA = "0x806E98", Offset = "0x806E98", VA = "0x806E98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000222")]
			[Address(RVA = "0x806EE0", Offset = "0x806EE0", VA = "0x806EE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x806DC8", Offset = "0x806DC8", VA = "0x806DC8")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0x806DF4", Offset = "0x806DF4", VA = "0x806DF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x806DF8", Offset = "0x806DF8", VA = "0x806DF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x806EA0", Offset = "0x806EA0", VA = "0x806EA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DD88", Offset = "0x53DD88")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000226")]
			[Address(RVA = "0x807280", Offset = "0x807280", VA = "0x807280", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000228")]
			[Address(RVA = "0x8072C8", Offset = "0x8072C8", VA = "0x8072C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0x807170", Offset = "0x807170", VA = "0x807170")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000224")]
		[Address(RVA = "0x80719C", Offset = "0x80719C", VA = "0x80719C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0x8071A0", Offset = "0x8071A0", VA = "0x8071A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x807288", Offset = "0x807288", VA = "0x807288", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DD98", Offset = "0x53DD98")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600022C")]
			[Address(RVA = "0x806FB8", Offset = "0x806FB8", VA = "0x806FB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600022E")]
			[Address(RVA = "0x807000", Offset = "0x807000", VA = "0x807000", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0x806EE8", Offset = "0x806EE8", VA = "0x806EE8")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0x806F14", Offset = "0x806F14", VA = "0x806F14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0x806F18", Offset = "0x806F18", VA = "0x806F18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0x806FC0", Offset = "0x806FC0", VA = "0x806FC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DDA8", Offset = "0x53DDA8")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000232")]
			[Address(RVA = "0x807544", Offset = "0x807544", VA = "0x807544", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000234")]
			[Address(RVA = "0x80758C", Offset = "0x80758C", VA = "0x80758C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0x80743C", Offset = "0x80743C", VA = "0x80743C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0x807468", Offset = "0x807468", VA = "0x807468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0x80746C", Offset = "0x80746C", VA = "0x80746C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0x80754C", Offset = "0x80754C", VA = "0x80754C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DDB8", Offset = "0x53DDB8")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000238")]
			[Address(RVA = "0x807120", Offset = "0x807120", VA = "0x807120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600023A")]
			[Address(RVA = "0x807168", Offset = "0x807168", VA = "0x807168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0x807008", Offset = "0x807008", VA = "0x807008")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000236")]
		[Address(RVA = "0x807034", Offset = "0x807034", VA = "0x807034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000237")]
		[Address(RVA = "0x807038", Offset = "0x807038", VA = "0x807038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0x807128", Offset = "0x807128", VA = "0x807128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EEDC", Offset = "0x53EEDC")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EF14", Offset = "0x53EF14")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EF4C", Offset = "0x53EF4C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EF84", Offset = "0x53EF84")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EFBC", Offset = "0x53EFBC")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EFF4", Offset = "0x53EFF4")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F02C", Offset = "0x53F02C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F064", Offset = "0x53F064")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53F09C", Offset = "0x53F09C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F0AC", Offset = "0x53F0AC")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F0E4", Offset = "0x53F0E4")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53F12C", Offset = "0x53F12C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F13C", Offset = "0x53F13C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F174", Offset = "0x53F174")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F1AC", Offset = "0x53F1AC")]
	public float AimCollisionRadius;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F1E4", Offset = "0x53F1E4")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000012")]
	public States CurrentState
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x880B3C", Offset = "0x880B3C", VA = "0x880B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5437C4", Offset = "0x5437C4")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x880B44", Offset = "0x880B44", VA = "0x880B44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5437D4", Offset = "0x5437D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x880D68", Offset = "0x880D68", VA = "0x880D68")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000014")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x880D90", Offset = "0x880D90", VA = "0x880D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543804", Offset = "0x543804")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x880D98", Offset = "0x880D98", VA = "0x880D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543814", Offset = "0x543814")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x880B4C", Offset = "0x880B4C", VA = "0x880B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5437E4", Offset = "0x5437E4")]
		add
		{
		}
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x880BEC", Offset = "0x880BEC", VA = "0x880BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5437F4", Offset = "0x5437F4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x881390", Offset = "0x881390", VA = "0x881390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54385C", Offset = "0x54385C")]
		add
		{
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x881430", Offset = "0x881430", VA = "0x881430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54386C", Offset = "0x54386C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x8814D0", Offset = "0x8814D0", VA = "0x8814D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5438DC", Offset = "0x5438DC")]
		add
		{
		}
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x881570", Offset = "0x881570", VA = "0x881570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5438EC", Offset = "0x5438EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x881610", Offset = "0x881610", VA = "0x881610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5438FC", Offset = "0x5438FC")]
		add
		{
		}
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x8816B0", Offset = "0x8816B0", VA = "0x8816B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54390C", Offset = "0x54390C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x8817C0", Offset = "0x8817C0", VA = "0x8817C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54391C", Offset = "0x54391C")]
		add
		{
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x881860", Offset = "0x881860", VA = "0x881860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54392C", Offset = "0x54392C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x88196C", Offset = "0x88196C", VA = "0x88196C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54399C", Offset = "0x54399C")]
		add
		{
		}
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x881A0C", Offset = "0x881A0C", VA = "0x881A0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5439AC", Offset = "0x5439AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x881B18", Offset = "0x881B18", VA = "0x881B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543A1C", Offset = "0x543A1C")]
		add
		{
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x881BB8", Offset = "0x881BB8", VA = "0x881BB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543A2C", Offset = "0x543A2C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x881CC4", Offset = "0x881CC4", VA = "0x881CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543A9C", Offset = "0x543A9C")]
		add
		{
		}
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x881D64", Offset = "0x881D64", VA = "0x881D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543AAC", Offset = "0x543AAC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0x881E70", Offset = "0x881E70", VA = "0x881E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543B1C", Offset = "0x543B1C")]
		add
		{
		}
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x881F10", Offset = "0x881F10", VA = "0x881F10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543B2C", Offset = "0x543B2C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x88201C", Offset = "0x88201C", VA = "0x88201C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543B9C", Offset = "0x543B9C")]
		add
		{
		}
		[Token(Token = "0x6000204")]
		[Address(RVA = "0x8820BC", Offset = "0x8820BC", VA = "0x8820BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543BAC", Offset = "0x543BAC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x8821C8", Offset = "0x8821C8", VA = "0x8821C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543C1C", Offset = "0x543C1C")]
		add
		{
		}
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x882268", Offset = "0x882268", VA = "0x882268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543C2C", Offset = "0x543C2C")]
		remove
		{
		}
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x8807E8", Offset = "0x8807E8", VA = "0x8807E8")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x88080C", Offset = "0x88080C", VA = "0x88080C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x880C8C", Offset = "0x880C8C", VA = "0x880C8C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x880DA0", Offset = "0x880DA0", VA = "0x880DA0")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x880FEC", Offset = "0x880FEC", VA = "0x880FEC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x543824", Offset = "0x543824")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x8810A0", Offset = "0x8810A0", VA = "0x8810A0")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x881170", Offset = "0x881170", VA = "0x881170")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x88118C", Offset = "0x88118C", VA = "0x88118C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x881250", Offset = "0x881250", VA = "0x881250")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x881294", Offset = "0x881294", VA = "0x881294")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x8812EC", Offset = "0x8812EC", VA = "0x8812EC", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x881388", Offset = "0x881388", VA = "0x881388", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x88131C", Offset = "0x88131C", VA = "0x88131C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54387C", Offset = "0x54387C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x881750", Offset = "0x881750", VA = "0x881750")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x881900", Offset = "0x881900", VA = "0x881900")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54393C", Offset = "0x54393C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x881AAC", Offset = "0x881AAC", VA = "0x881AAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5439BC", Offset = "0x5439BC")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x881C58", Offset = "0x881C58", VA = "0x881C58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x543A3C", Offset = "0x543A3C")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x881E04", Offset = "0x881E04", VA = "0x881E04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x543ABC", Offset = "0x543ABC")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x881FB0", Offset = "0x881FB0", VA = "0x881FB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x543B3C", Offset = "0x543B3C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x88215C", Offset = "0x88215C", VA = "0x88215C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x543BBC", Offset = "0x543BBC")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x882308", Offset = "0x882308", VA = "0x882308")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x882448", Offset = "0x882448", VA = "0x882448")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x88247C", Offset = "0x88247C", VA = "0x88247C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x882544", Offset = "0x882544", VA = "0x882544")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x88263C", Offset = "0x88263C", VA = "0x88263C")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000AA")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0x90D020", Offset = "0x90D020", VA = "0x90D020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543E8C", Offset = "0x543E8C")]
		add
		{
		}
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x90D0C0", Offset = "0x90D0C0", VA = "0x90D0C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543E9C", Offset = "0x543E9C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x90D160", Offset = "0x90D160", VA = "0x90D160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543EAC", Offset = "0x543EAC")]
		add
		{
		}
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x90D200", Offset = "0x90D200", VA = "0x90D200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543EBC", Offset = "0x543EBC")]
		remove
		{
		}
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x90D2A0", Offset = "0x90D2A0", VA = "0x90D2A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x90D35C", Offset = "0x90D35C", VA = "0x90D35C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x90D360", Offset = "0x90D360", VA = "0x90D360")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x90D3D4", Offset = "0x90D3D4", VA = "0x90D3D4")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x90D4F8", Offset = "0x90D4F8", VA = "0x90D4F8")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x90D6E0", Offset = "0x90D6E0", VA = "0x90D6E0")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x90D8E8", Offset = "0x90D8E8", VA = "0x90D8E8")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000AB")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000246")]
	[Address(RVA = "0x8697F8", Offset = "0x8697F8", VA = "0x8697F8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x869888", Offset = "0x869888", VA = "0x869888", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000248")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x869954", Offset = "0x869954", VA = "0x869954")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000AC")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F2EC", Offset = "0x53F2EC")]
	public float Range;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x869964", Offset = "0x869964", VA = "0x869964", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x869A60", Offset = "0x869A60", VA = "0x869A60")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000AD")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F324", Offset = "0x53F324")]
	public float Range;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F35C", Offset = "0x53F35C")]
	public float MinimumElevation;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F394", Offset = "0x53F394")]
	public float Gravity;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53F3CC", Offset = "0x53F3CC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F3CC", Offset = "0x53F3CC")]
	public float AimVelocity;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53F428", Offset = "0x53F428")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F428", Offset = "0x53F428")]
	public float AimStep;

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x869A70", Offset = "0x869A70", VA = "0x869A70", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x869C00", Offset = "0x869C00", VA = "0x869C00")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000AE")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F480", Offset = "0x53F480")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x869C14", Offset = "0x869C14", VA = "0x869C14")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x869D30", Offset = "0x869D30", VA = "0x869D30")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x869D60", Offset = "0x869D60", VA = "0x869D60")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x869D90", Offset = "0x869D90", VA = "0x869D90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x869E38", Offset = "0x869E38", VA = "0x869E38", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x869EA4", Offset = "0x869EA4", VA = "0x869EA4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x869F0C", Offset = "0x869F0C", VA = "0x869F0C")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000AF")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53F4B8", Offset = "0x53F4B8")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F4C8", Offset = "0x53F4C8")]
	public Transform PositionIndicator;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F500", Offset = "0x53F500")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F538", Offset = "0x53F538")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000024")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000255")]
		[Address(RVA = "0x86A030", Offset = "0x86A030", VA = "0x86A030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543ECC", Offset = "0x543ECC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x86A038", Offset = "0x86A038", VA = "0x86A038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543EDC", Offset = "0x543EDC")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x86A1EC", Offset = "0x86A1EC", VA = "0x86A1EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543EEC", Offset = "0x543EEC")]
		add
		{
		}
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x86A28C", Offset = "0x86A28C", VA = "0x86A28C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543EFC", Offset = "0x543EFC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x86A044", Offset = "0x86A044", VA = "0x86A044")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x86A0D4", Offset = "0x86A0D4", VA = "0x86A0D4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x86A1A8", Offset = "0x86A1A8", VA = "0x86A1A8")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x86A1E8", Offset = "0x86A1E8", VA = "0x86A1E8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x86A32C", Offset = "0x86A32C", VA = "0x86A32C")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x86A390", Offset = "0x86A390", VA = "0x86A390")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x86A3B0", Offset = "0x86A3B0", VA = "0x86A3B0", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000B0")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DDC8", Offset = "0x53DDC8")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026C")]
			[Address(RVA = "0x1274450", Offset = "0x1274450", VA = "0x1274450", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026E")]
			[Address(RVA = "0x1274498", Offset = "0x1274498", VA = "0x1274498", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x1274394", Offset = "0x1274394", VA = "0x1274394")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x12743C0", Offset = "0x12743C0", VA = "0x12743C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0x12743C4", Offset = "0x12743C4", VA = "0x12743C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0x1274458", Offset = "0x1274458", VA = "0x1274458", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DDD8", Offset = "0x53DDD8")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000272")]
			[Address(RVA = "0x1274344", Offset = "0x1274344", VA = "0x1274344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000274")]
			[Address(RVA = "0x127438C", Offset = "0x127438C", VA = "0x127438C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0x1274284", Offset = "0x1274284", VA = "0x1274284")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0x12742B0", Offset = "0x12742B0", VA = "0x12742B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0x12742B4", Offset = "0x12742B4", VA = "0x12742B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0x127434C", Offset = "0x127434C", VA = "0x127434C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x86A5BC", Offset = "0x86A5BC", VA = "0x86A5BC")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x86A67C", Offset = "0x86A67C", VA = "0x86A67C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x86A6D4", Offset = "0x86A6D4", VA = "0x86A6D4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x86A78C", Offset = "0x86A78C", VA = "0x86A78C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x543F0C", Offset = "0x543F0C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x86A7F8", Offset = "0x86A7F8", VA = "0x86A7F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x543F6C", Offset = "0x543F6C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000265")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000266")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x86A864", Offset = "0x86A864", VA = "0x86A864")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543FCC", Offset = "0x543FCC")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x86A890", Offset = "0x86A890", VA = "0x86A890")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x543FDC", Offset = "0x543FDC")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000B3")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53F580", Offset = "0x53F580")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F590", Offset = "0x53F590")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F5C8", Offset = "0x53F5C8")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F600", Offset = "0x53F600")]
	public bool FastTeleport;

	[Token(Token = "0x17000029")]
	public Transform Pointer
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x86A8BC", Offset = "0x86A8BC", VA = "0x86A8BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54408C", Offset = "0x54408C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x86A8C4", Offset = "0x86A8C4", VA = "0x86A8C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54409C", Offset = "0x54409C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x86A8CC", Offset = "0x86A8CC", VA = "0x86A8CC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x86AA24", Offset = "0x86AA24", VA = "0x86AA24", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x86AADC", Offset = "0x86AADC", VA = "0x86AADC")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000B4")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000B5")]
	public enum InputModes
	{
		[Token(Token = "0x40003E9")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40003EA")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40003EB")]
		ThumbstickTeleport,
		[Token(Token = "0x40003EC")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000B6")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40003EE")]
		A,
		[Token(Token = "0x40003EF")]
		B,
		[Token(Token = "0x40003F0")]
		LeftTrigger,
		[Token(Token = "0x40003F1")]
		LeftThumbstick,
		[Token(Token = "0x40003F2")]
		RightTrigger,
		[Token(Token = "0x40003F3")]
		RightThumbstick,
		[Token(Token = "0x40003F4")]
		X,
		[Token(Token = "0x40003F5")]
		Y
	}

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F638", Offset = "0x53F638")]
	public InputModes InputMode;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F670", Offset = "0x53F670")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F6A8", Offset = "0x53F6A8")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F6E0", Offset = "0x53F6E0")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x86AAE0", Offset = "0x86AAE0", VA = "0x86AAE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x86AAE4", Offset = "0x86AAE4", VA = "0x86AAE4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x86AECC", Offset = "0x86AECC", VA = "0x86AECC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x86AF8C", Offset = "0x86AF8C", VA = "0x86AF8C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000B7")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000B8")]
	public enum OrientationModes
	{
		[Token(Token = "0x40003FA")]
		HeadRelative,
		[Token(Token = "0x40003FB")]
		ForwardFacing
	}

	[Token(Token = "0x20000B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DDE8", Offset = "0x53DDE8")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600028A")]
			[Address(RVA = "0x1274574", Offset = "0x1274574", VA = "0x1274574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028C")]
			[Address(RVA = "0x12745BC", Offset = "0x12745BC", VA = "0x12745BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x12744A0", Offset = "0x12744A0", VA = "0x12744A0")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x12744CC", Offset = "0x12744CC", VA = "0x12744CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0x12744D0", Offset = "0x12744D0", VA = "0x12744D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0x127457C", Offset = "0x127457C", VA = "0x127457C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x86B058", Offset = "0x86B058", VA = "0x86B058")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x86B138", Offset = "0x86B138", VA = "0x86B138")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x86B140", Offset = "0x86B140", VA = "0x86B140", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x86B18C", Offset = "0x86B18C", VA = "0x86B18C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x86B1D4", Offset = "0x86B1D4", VA = "0x86B1D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5440AC", Offset = "0x5440AC")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000284")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x86B240", Offset = "0x86B240", VA = "0x86B240")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x86B2FC", Offset = "0x86B2FC", VA = "0x86B2FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54410C", Offset = "0x54410C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000BA")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600028D")]
	[Address(RVA = "0x86B328", Offset = "0x86B328", VA = "0x86B328", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x86B32C", Offset = "0x86B32C", VA = "0x86B32C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x86B3A8", Offset = "0x86B3A8", VA = "0x86B3A8")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000BB")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F718", Offset = "0x53F718")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F750", Offset = "0x53F750")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F788", Offset = "0x53F788")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F7C0", Offset = "0x53F7C0")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x86B3AC", Offset = "0x86B3AC", VA = "0x86B3AC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x86B3D8", Offset = "0x86B3D8", VA = "0x86B3D8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x86B788", Offset = "0x86B788", VA = "0x86B788")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000BC")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F7F8", Offset = "0x53F7F8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F830", Offset = "0x53F830")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F868", Offset = "0x53F868")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x86B78C", Offset = "0x86B78C", VA = "0x86B78C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x86B7D0", Offset = "0x86B7D0", VA = "0x86B7D0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x86BB78", Offset = "0x86BB78", VA = "0x86BB78")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000BD")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x86BB88", Offset = "0x86BB88", VA = "0x86BB88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x86BB8C", Offset = "0x86BB8C", VA = "0x86BB8C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x86BB94", Offset = "0x86BB94", VA = "0x86BB94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x86BC50", Offset = "0x86BC50", VA = "0x86BC50")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x86BC78", Offset = "0x86BC78", VA = "0x86BC78")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000BE")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53F8A0", Offset = "0x53F8A0")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700002C")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0x86BC90", Offset = "0x86BC90", VA = "0x86BC90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54416C", Offset = "0x54416C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600029C")]
		[Address(RVA = "0x86BC98", Offset = "0x86BC98", VA = "0x86BC98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54417C", Offset = "0x54417C")]
		private set
		{
		}
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x869828", Offset = "0x869828", VA = "0x869828", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x869928", Offset = "0x869928", VA = "0x869928", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x86BCA0", Offset = "0x86BCA0", VA = "0x86BCA0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x54418C", Offset = "0x54418C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x869E98", Offset = "0x869E98", VA = "0x869E98", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x869F04", Offset = "0x869F04", VA = "0x869F04", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x86995C", Offset = "0x86995C", VA = "0x86995C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000BF")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DDF8", Offset = "0x53DDF8")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AE")]
			[Address(RVA = "0x1274888", Offset = "0x1274888", VA = "0x1274888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B0")]
			[Address(RVA = "0x12748D0", Offset = "0x12748D0", VA = "0x12748D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x12745C4", Offset = "0x12745C4", VA = "0x12745C4")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x12745F0", Offset = "0x12745F0", VA = "0x12745F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x12745F4", Offset = "0x12745F4", VA = "0x12745F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x1274890", Offset = "0x1274890", VA = "0x1274890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F8B0", Offset = "0x53F8B0")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000415")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x86BD7C", Offset = "0x86BD7C", VA = "0x86BD7C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x86BE6C", Offset = "0x86BE6C", VA = "0x86BE6C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x86BE98", Offset = "0x86BE98", VA = "0x86BE98", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x86BEC0", Offset = "0x86BEC0", VA = "0x86BEC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5441C4", Offset = "0x5441C4")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x86BF2C", Offset = "0x86BF2C", VA = "0x86BF2C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002A8")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x86BF48", Offset = "0x86BF48", VA = "0x86BF48", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x86C068", Offset = "0x86C068", VA = "0x86C068")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544224", Offset = "0x544224")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000C1")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x86C094", Offset = "0x86C094", VA = "0x86C094")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x86C0F0", Offset = "0x86C0F0", VA = "0x86C0F0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x86C1E8", Offset = "0x86C1E8", VA = "0x86C1E8", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x86C2E0", Offset = "0x86C2E0", VA = "0x86C2E0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x544284", Offset = "0x544284")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x86C2E4", Offset = "0x86C2E4", VA = "0x86C2E4")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000C2")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F8E8", Offset = "0x53F8E8")]
	public float LOSOffset;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F920", Offset = "0x53F920")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x86C2F0", Offset = "0x86C2F0", VA = "0x86C2F0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x86C4FC", Offset = "0x86C4FC", VA = "0x86C4FC")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000C3")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x86C508", Offset = "0x86C508", VA = "0x86C508", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x86C600", Offset = "0x86C600", VA = "0x86C600")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000C4")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x86C604", Offset = "0x86C604", VA = "0x86C604", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x86C698", Offset = "0x86C698", VA = "0x86C698", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002BC")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x86C728", Offset = "0x86C728", VA = "0x86C728")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000C5")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DE08", Offset = "0x53DE08")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C4")]
			[Address(RVA = "0x1274A04", Offset = "0x1274A04", VA = "0x1274A04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C6")]
			[Address(RVA = "0x1274A4C", Offset = "0x1274A4C", VA = "0x1274A4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x12748D8", Offset = "0x12748D8", VA = "0x12748D8")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x1274904", Offset = "0x1274904", VA = "0x1274904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x1274908", Offset = "0x1274908", VA = "0x1274908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x1274A0C", Offset = "0x1274A0C", VA = "0x1274A0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F958", Offset = "0x53F958")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53F958", Offset = "0x53F958")]
	public float TransitionDuration;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F9B0", Offset = "0x53F9B0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53F9B0", Offset = "0x53F9B0")]
	public float TeleportDelay;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FA04", Offset = "0x53FA04")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x86C730", Offset = "0x86C730", VA = "0x86C730", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x86C75C", Offset = "0x86C75C", VA = "0x86C75C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5442BC", Offset = "0x5442BC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x86C7C8", Offset = "0x86C7C8", VA = "0x86C7C8")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000C7")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x86C968", Offset = "0x86C968", VA = "0x86C968", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x86C984", Offset = "0x86C984", VA = "0x86C984")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000C8")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DE18", Offset = "0x53DE18")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CF")]
			[Address(RVA = "0x1274BB4", Offset = "0x1274BB4", VA = "0x1274BB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D1")]
			[Address(RVA = "0x1274BFC", Offset = "0x1274BFC", VA = "0x1274BFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x1274A54", Offset = "0x1274A54", VA = "0x1274A54")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x1274A80", Offset = "0x1274A80", VA = "0x1274A80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x1274A84", Offset = "0x1274A84", VA = "0x1274A84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1274BBC", Offset = "0x1274BBC", VA = "0x1274BBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FA3C", Offset = "0x53FA3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53FA3C", Offset = "0x53FA3C")]
	public float TransitionDuration;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x86C98C", Offset = "0x86C98C", VA = "0x86C98C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x86C9B8", Offset = "0x86C9B8", VA = "0x86C9B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54436C", Offset = "0x54436C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x86CA24", Offset = "0x86CA24", VA = "0x86CA24")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000CA")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000CB")]
	public enum PlabackState
	{
		[Token(Token = "0x4000445")]
		Idle = 1,
		[Token(Token = "0x4000446")]
		Preparing,
		[Token(Token = "0x4000447")]
		Buffering,
		[Token(Token = "0x4000448")]
		Ready,
		[Token(Token = "0x4000449")]
		Ended
	}

	[Token(Token = "0x20000CC")]
	public enum StereoMode
	{
		[Token(Token = "0x400044B")]
		Unknown = -1,
		[Token(Token = "0x400044C")]
		Mono,
		[Token(Token = "0x400044D")]
		TopBottom,
		[Token(Token = "0x400044E")]
		LeftRight,
		[Token(Token = "0x400044F")]
		Mesh
	}

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000033")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xB79E18", Offset = "0xB79E18", VA = "0xB79E18")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000034")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xB7A148", Offset = "0xB7A148", VA = "0xB7A148")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000035")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xB7A418", Offset = "0xB7A418", VA = "0xB7A418")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000036")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xB7A488", Offset = "0xB7A488", VA = "0xB7A488")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xB7A598", Offset = "0xB7A598", VA = "0xB7A598")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000038")]
	public static long Duration
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xB7A6AC", Offset = "0xB7A6AC", VA = "0xB7A6AC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000039")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xB7A7C0", Offset = "0xB7A7C0", VA = "0xB7A7C0")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700003A")]
	public static int VideoWidth
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xB7A8D4", Offset = "0xB7A8D4", VA = "0xB7A8D4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003B")]
	public static int VideoHeight
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xB7A9E8", Offset = "0xB7A9E8", VA = "0xB7A9E8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003C")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xB7AAFC", Offset = "0xB7AAFC", VA = "0xB7AAFC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xB7AC10", Offset = "0xB7AC10", VA = "0xB7AC10")]
		set
		{
		}
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xB7AD7C", Offset = "0xB7AD7C", VA = "0xB7AD7C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xB7AF9C", Offset = "0xB7AF9C", VA = "0xB7AF9C")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xB7B0B0", Offset = "0xB7B0B0", VA = "0xB7B0B0")]
	public static void Play()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xB7B1C4", Offset = "0xB7B1C4", VA = "0xB7B1C4")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xB7B2D8", Offset = "0xB7B2D8", VA = "0xB7B2D8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xB7B44C", Offset = "0xB7B44C", VA = "0xB7B44C")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xB7B5BC", Offset = "0xB7B5BC", VA = "0xB7B5BC")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000CD")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x931D7C", Offset = "0x931D7C", VA = "0x931D7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54441C", Offset = "0x54441C")]
		add
		{
		}
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x931E1C", Offset = "0x931E1C", VA = "0x931E1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54442C", Offset = "0x54442C")]
		remove
		{
		}
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x931EBC", Offset = "0x931EBC", VA = "0x931EBC", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x931ED0", Offset = "0x931ED0", VA = "0x931ED0")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000CE")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000CF")]
	public enum ButtonType
	{
		[Token(Token = "0x4000453")]
		Play,
		[Token(Token = "0x4000454")]
		Pause,
		[Token(Token = "0x4000455")]
		FastForward,
		[Token(Token = "0x4000456")]
		Rewind,
		[Token(Token = "0x4000457")]
		SkipForward,
		[Token(Token = "0x4000458")]
		SkipBack,
		[Token(Token = "0x4000459")]
		Stop
	}

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700003D")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x88374C", Offset = "0x88374C", VA = "0x88374C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x883754", Offset = "0x883754", VA = "0x883754")]
		set
		{
		}
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x883778", Offset = "0x883778", VA = "0x883778", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x884C10", Offset = "0x884C10", VA = "0x884C10")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000D0")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000D1")]
	public enum VideoShape
	{
		[Token(Token = "0x400046E")]
		_360,
		[Token(Token = "0x400046F")]
		_180,
		[Token(Token = "0x4000470")]
		Quad
	}

	[Token(Token = "0x20000D2")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000472")]
		Mono,
		[Token(Token = "0x4000473")]
		TopBottom,
		[Token(Token = "0x4000474")]
		LeftRight,
		[Token(Token = "0x4000475")]
		BottomTop
	}

	[Token(Token = "0x20000D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DE28", Offset = "0x53DE28")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000303")]
			[Address(RVA = "0x808204", Offset = "0x808204", VA = "0x808204", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000305")]
			[Address(RVA = "0x80824C", Offset = "0x80824C", VA = "0x80824C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x80801C", Offset = "0x80801C", VA = "0x80801C")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x808048", Offset = "0x808048", VA = "0x808048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x80804C", Offset = "0x80804C", VA = "0x80804C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x80820C", Offset = "0x80820C", VA = "0x80820C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DE38", Offset = "0x53DE38")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x807F24", Offset = "0x807F24", VA = "0x807F24")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x807F2C", Offset = "0x807F2C", VA = "0x807F2C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53FAC4", Offset = "0x53FAC4")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53FAD4", Offset = "0x53FAD4")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53FAE4", Offset = "0x53FAE4")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700003E")]
	public bool IsPlaying
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x88B23C", Offset = "0x88B23C", VA = "0x88B23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54443C", Offset = "0x54443C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x88B244", Offset = "0x88B244", VA = "0x88B244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54444C", Offset = "0x54444C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public long Duration
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x88B250", Offset = "0x88B250", VA = "0x88B250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54445C", Offset = "0x54445C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x88B258", Offset = "0x88B258", VA = "0x88B258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54446C", Offset = "0x54446C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x88B260", Offset = "0x88B260", VA = "0x88B260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54447C", Offset = "0x54447C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x88B268", Offset = "0x88B268", VA = "0x88B268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54448C", Offset = "0x54448C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x88B270", Offset = "0x88B270", VA = "0x88B270")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x88B4E8", Offset = "0x88B4E8", VA = "0x88B4E8")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x88B54C", Offset = "0x88B54C", VA = "0x88B54C")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x88B884", Offset = "0x88B884", VA = "0x88B884")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54449C", Offset = "0x54449C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x88B8F0", Offset = "0x88B8F0", VA = "0x88B8F0")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x88BB94", Offset = "0x88BB94", VA = "0x88BB94")]
	public void Play()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x88BC28", Offset = "0x88BC28", VA = "0x88BC28")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x88BCB8", Offset = "0x88BCB8", VA = "0x88BCB8")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x88BDBC", Offset = "0x88BDBC", VA = "0x88BDBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x88C378", Offset = "0x88C378", VA = "0x88C378")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x88C430", Offset = "0x88C430", VA = "0x88C430")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x88C4C0", Offset = "0x88C4C0", VA = "0x88C4C0")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x88C5AC", Offset = "0x88C5AC", VA = "0x88C5AC")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000D5")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000D6")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000492")]
		Playing,
		[Token(Token = "0x4000493")]
		Paused,
		[Token(Token = "0x4000494")]
		Rewinding,
		[Token(Token = "0x4000495")]
		FastForwarding
	}

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xB78380", Offset = "0xB78380", VA = "0xB78380")]
	private void Start()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xB7868C", Offset = "0xB7868C", VA = "0xB7868C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xB787C8", Offset = "0xB787C8", VA = "0xB787C8")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xB788E8", Offset = "0xB788E8", VA = "0xB788E8")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xB789D4", Offset = "0xB789D4", VA = "0xB789D4")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xB788B8", Offset = "0xB788B8", VA = "0xB788B8")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xB78A34", Offset = "0xB78A34", VA = "0xB78A34")]
	private void Update()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xB78578", Offset = "0xB78578", VA = "0xB78578")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xB78D74", Offset = "0xB78D74", VA = "0xB78D74")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000D7")]
public static class VectorUtil
{
	[Token(Token = "0x6000311")]
	[Address(RVA = "0x875A98", Offset = "0x875A98", VA = "0x875A98")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000D8")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000496")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000497")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x92A968", Offset = "0x92A968", VA = "0x92A968")]
	private void Start()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x92AD10", Offset = "0x92AD10", VA = "0x92AD10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x92AF9C", Offset = "0x92AF9C", VA = "0x92AF9C")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x92B104", Offset = "0x92B104", VA = "0x92B104")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x92B270", Offset = "0x92B270", VA = "0x92B270")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x92B400", Offset = "0x92B400", VA = "0x92B400")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000D9")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40004A0")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x8C3F1C", Offset = "0x8C3F1C", VA = "0x8C3F1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x8C3F6C", Offset = "0x8C3F6C", VA = "0x8C3F6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x8C3F70", Offset = "0x8C3F70", VA = "0x8C3F70")]
	private void Update()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x8C3F74", Offset = "0x8C3F74", VA = "0x8C3F74")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x8C41D0", Offset = "0x8C41D0", VA = "0x8C41D0")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x8C4400", Offset = "0x8C4400", VA = "0x8C4400")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000DA")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x8CB424", Offset = "0x8CB424", VA = "0x8CB424")]
	private void Start()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x8CB928", Offset = "0x8CB928", VA = "0x8CB928")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x8CB9E8", Offset = "0x8CB9E8", VA = "0x8CB9E8")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x8CBC14", Offset = "0x8CBC14", VA = "0x8CBC14")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x8CBCF4", Offset = "0x8CBCF4", VA = "0x8CBCF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x8CBDD8", Offset = "0x8CBDD8", VA = "0x8CBDD8")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x8CBE4C", Offset = "0x8CBE4C", VA = "0x8CBE4C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x8CBE54", Offset = "0x8CBE54", VA = "0x8CBE54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54455C", Offset = "0x54455C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x8CBEB8", Offset = "0x8CBEB8", VA = "0x8CBEB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54456C", Offset = "0x54456C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x8CBF1C", Offset = "0x8CBF1C", VA = "0x8CBF1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54457C", Offset = "0x54457C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x8CBF80", Offset = "0x8CBF80", VA = "0x8CBF80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54458C", Offset = "0x54458C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000DB")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000329")]
	[Address(RVA = "0x92A960", Offset = "0x92A960", VA = "0x92A960")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000DC")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x908BD0", Offset = "0x908BD0", VA = "0x908BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x908C74", Offset = "0x908C74", VA = "0x908C74")]
	private void Update()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x908D60", Offset = "0x908D60", VA = "0x908D60")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x908DC0", Offset = "0x908DC0", VA = "0x908DC0")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000DD")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x600032E")]
	[Address(RVA = "0x8680BC", Offset = "0x8680BC", VA = "0x8680BC")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000DE")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DE58", Offset = "0x53DE58")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000336")]
			[Address(RVA = "0x802CE4", Offset = "0x802CE4", VA = "0x802CE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000338")]
			[Address(RVA = "0x802D2C", Offset = "0x802D2C", VA = "0x802D2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x802B94", Offset = "0x802B94", VA = "0x802B94")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0x802BC0", Offset = "0x802BC0", VA = "0x802BC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x802BC4", Offset = "0x802BC4", VA = "0x802BC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x802CEC", Offset = "0x802CEC", VA = "0x802CEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x6CAE18", Offset = "0x6CAE18", VA = "0x6CAE18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x6CAF1C", Offset = "0x6CAF1C", VA = "0x6CAF1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x6CAEB0", Offset = "0x6CAEB0", VA = "0x6CAEB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54459C", Offset = "0x54459C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x6CB0C8", Offset = "0x6CB0C8", VA = "0x6CB0C8")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000E0")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53FB14", Offset = "0x53FB14")]
	public int SubdivisionsU;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53FB30", Offset = "0x53FB30")]
	public int SubdivisionsV;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x93B708", Offset = "0x93B708", VA = "0x93B708")]
	private void Update()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x93C114", Offset = "0x93C114", VA = "0x93C114")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000E1")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000045")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x880074", Offset = "0x880074", VA = "0x880074")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x8800C8", Offset = "0x8800C8", VA = "0x8800C8")]
	public void Start()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x8804C4", Offset = "0x8804C4", VA = "0x8804C4")]
	public void Update()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x8805B0", Offset = "0x8805B0", VA = "0x8805B0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x54464C", Offset = "0x54464C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600033F")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000340")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000341")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000342")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000343")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000344")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000345")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000346")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x880614", Offset = "0x880614", VA = "0x880614")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x880650", Offset = "0x880650", VA = "0x880650")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x8806C0", Offset = "0x8806C0", VA = "0x8806C0")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x880830", Offset = "0x880830", VA = "0x880830")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x88090C", Offset = "0x88090C", VA = "0x88090C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x8803BC", Offset = "0x8803BC", VA = "0x8803BC")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x8809D4", Offset = "0x8809D4", VA = "0x8809D4")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x880A3C", Offset = "0x880A3C", VA = "0x880A3C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x880B34", Offset = "0x880B34", VA = "0x880B34")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x53DE78", Offset = "0x53DE78")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000E3")]
	public enum DrawMode
	{
		[Token(Token = "0x40004CF")]
		Opaque,
		[Token(Token = "0x40004D0")]
		OpaqueWithClip,
		[Token(Token = "0x40004D1")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40004D2")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000046")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xB7CCD8", Offset = "0xB7CCD8", VA = "0xB7CCD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000357")]
		[Address(RVA = "0xB7CD68", Offset = "0xB7CD68", VA = "0xB7CD68")]
		set
		{
		}
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xB7B810", Offset = "0xB7B810", VA = "0xB7B810")]
	private void Start()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xB7C344", Offset = "0xB7C344", VA = "0xB7C344")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xB7C3C4", Offset = "0xB7C3C4", VA = "0xB7C3C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xB7C4B4", Offset = "0xB7C4B4", VA = "0xB7C4B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xB7C5A4", Offset = "0xB7C5A4", VA = "0xB7C5A4", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xB7C7B0", Offset = "0xB7C7B0", VA = "0xB7C7B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xB7CE34", Offset = "0xB7CE34", VA = "0xB7CE34")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000E4")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x92B680", Offset = "0x92B680", VA = "0x92B680")]
	private void Start()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x92B834", Offset = "0x92B834", VA = "0x92B834")]
	private void Update()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x92B9BC", Offset = "0x92B9BC", VA = "0x92B9BC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x92B9C4", Offset = "0x92B9C4", VA = "0x92B9C4")]
	public void Release()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x92B9AC", Offset = "0x92B9AC", VA = "0x92B9AC")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x92B9CC", Offset = "0x92B9CC", VA = "0x92B9CC")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20000E5")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DED8", Offset = "0x53DED8")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600036A")]
			[Address(RVA = "0x7FD578", Offset = "0x7FD578", VA = "0x7FD578", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600036C")]
			[Address(RVA = "0x7FD5C0", Offset = "0x7FD5C0", VA = "0x7FD5C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x7FD454", Offset = "0x7FD454", VA = "0x7FD454")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x7FD480", Offset = "0x7FD480", VA = "0x7FD480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x7FD484", Offset = "0x7FD484", VA = "0x7FD484", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x7FD580", Offset = "0x7FD580", VA = "0x7FD580", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DEE8", Offset = "0x53DEE8")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000370")]
			[Address(RVA = "0x7FD774", Offset = "0x7FD774", VA = "0x7FD774", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000372")]
			[Address(RVA = "0x7FD7BC", Offset = "0x7FD7BC", VA = "0x7FD7BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x7FD5C8", Offset = "0x7FD5C8", VA = "0x7FD5C8")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x7FD5F4", Offset = "0x7FD5F4", VA = "0x7FD5F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x7FD5F8", Offset = "0x7FD5F8", VA = "0x7FD5F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x7FD77C", Offset = "0x7FD77C", VA = "0x7FD77C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x930B60", Offset = "0x930B60", VA = "0x930B60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x930DF4", Offset = "0x930DF4", VA = "0x930DF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x930E50", Offset = "0x930E50", VA = "0x930E50")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x930FB4", Offset = "0x930FB4", VA = "0x930FB4")]
	public void Release()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x931078", Offset = "0x931078", VA = "0x931078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x544684", Offset = "0x544684")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x930EFC", Offset = "0x930EFC", VA = "0x930EFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5446E4", Offset = "0x5446E4")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x931114", Offset = "0x931114", VA = "0x931114")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20000E8")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000373")]
	[Address(RVA = "0x8D15A8", Offset = "0x8D15A8", VA = "0x8D15A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x8D1608", Offset = "0x8D1608", VA = "0x8D1608")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20000E9")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x8D39A4", Offset = "0x8D39A4", VA = "0x8D39A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x8D3AD8", Offset = "0x8D3AD8", VA = "0x8D3AD8")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x8D3B6C", Offset = "0x8D3B6C", VA = "0x8D3B6C")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x8D3BD4", Offset = "0x8D3BD4", VA = "0x8D3BD4")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20000EA")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DEF8", Offset = "0x53DEF8")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000385")]
			[Address(RVA = "0x80084C", Offset = "0x80084C", VA = "0x80084C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000387")]
			[Address(RVA = "0x800894", Offset = "0x800894", VA = "0x800894", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x80064C", Offset = "0x80064C", VA = "0x80064C")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x800678", Offset = "0x800678", VA = "0x800678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x80067C", Offset = "0x80067C", VA = "0x80067C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x800854", Offset = "0x800854", VA = "0x800854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xB59114", Offset = "0xB59114", VA = "0xB59114")]
	private void Start()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xB593A4", Offset = "0xB593A4", VA = "0xB593A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xB596F8", Offset = "0xB596F8", VA = "0xB596F8")]
	private void FindHands()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xB59A24", Offset = "0xB59A24", VA = "0xB59A24")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xB59D2C", Offset = "0xB59D2C", VA = "0xB59D2C")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB59E20", Offset = "0xB59E20", VA = "0xB59E20")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xB59FE4", Offset = "0xB59FE4", VA = "0xB59FE4")]
	public void Release()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xB59F3C", Offset = "0xB59F3C", VA = "0xB59F3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5447E4", Offset = "0x5447E4")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xB5A0D0", Offset = "0xB5A0D0", VA = "0xB5A0D0")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20000EC")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20000ED")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000507")]
		Default,
		[Token(Token = "0x4000508")]
		ForcedHand,
		[Token(Token = "0x4000509")]
		DollyHand,
		[Token(Token = "0x400050A")]
		DollyAttached,
		[Token(Token = "0x400050B")]
		HorizontalScaled,
		[Token(Token = "0x400050C")]
		VerticalScaled,
		[Token(Token = "0x400050D")]
		Menu
	}

	[Token(Token = "0x20000EE")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20000EF")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20000F0")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x53FBBC", Offset = "0x53FBBC")]
	public string ObjectName;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x53FBCC", Offset = "0x53FBCC")]
	public string ObjectInstructions;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x6C58A8", Offset = "0x6C58A8", VA = "0x6C58A8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x6C5904", Offset = "0x6C5904", VA = "0x6C5904")]
	public void Release()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x6C5918", Offset = "0x6C5918", VA = "0x6C5918")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x6C592C", Offset = "0x6C592C", VA = "0x6C592C")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20000F1")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FBEC", Offset = "0x53FBEC")]
	public int radialDivisions;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FC24", Offset = "0x53FC24")]
	public float borderSize;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FC5C", Offset = "0x53FC5C")]
	public float fingerTaper;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FC94", Offset = "0x53FC94")]
	public float fingerTipLength;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FCCC", Offset = "0x53FCCC")]
	public float webOffset;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x6C6884", Offset = "0x6C6884", VA = "0x6C6884")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x6C6A5C", Offset = "0x6C6A5C", VA = "0x6C6A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x6C6C68", Offset = "0x6C6C68", VA = "0x6C6C68")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x6C72A4", Offset = "0x6C72A4", VA = "0x6C72A4")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x6C78D4", Offset = "0x6C78D4", VA = "0x6C78D4")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x6C9F50", Offset = "0x6C9F50", VA = "0x6C9F50")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x6CA00C", Offset = "0x6CA00C", VA = "0x6CA00C")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20000F2")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x6CA030", Offset = "0x6CA030", VA = "0x6CA030")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x6CA368", Offset = "0x6CA368", VA = "0x6CA368")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x6CA0D8", Offset = "0x6CA0D8", VA = "0x6CA0D8")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x6CA758", Offset = "0x6CA758", VA = "0x6CA758")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x6CAC48", Offset = "0x6CAC48", VA = "0x6CAC48")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20000F3")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20000F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DF08", Offset = "0x53DF08")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003B3")]
			[Address(RVA = "0x80877C", Offset = "0x80877C", VA = "0x80877C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003B5")]
			[Address(RVA = "0x8087C4", Offset = "0x8087C4", VA = "0x8087C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x8084B8", Offset = "0x8084B8", VA = "0x8084B8")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x8084E4", Offset = "0x8084E4", VA = "0x8084E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x8084E8", Offset = "0x8084E8", VA = "0x8084E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x808784", Offset = "0x808784", VA = "0x808784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xB7E2F8", Offset = "0xB7E2F8", VA = "0xB7E2F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xB7E524", Offset = "0xB7E524", VA = "0xB7E524")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xB7F13C", Offset = "0xB7F13C", VA = "0xB7F13C")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xB7FD44", Offset = "0xB7FD44", VA = "0xB7FD44")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xB7E4B8", Offset = "0xB7E4B8", VA = "0xB7E4B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x544894", Offset = "0x544894")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xB7E788", Offset = "0xB7E788", VA = "0xB7E788")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xB7F400", Offset = "0xB7F400", VA = "0xB7F400")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xB7FFFC", Offset = "0xB7FFFC", VA = "0xB7FFFC")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xB80088", Offset = "0xB80088", VA = "0xB80088")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xB800B8", Offset = "0xB800B8", VA = "0xB800B8")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xB7FEC4", Offset = "0xB7FEC4", VA = "0xB7FEC4")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xB801DC", Offset = "0xB801DC", VA = "0xB801DC")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20000F5")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xB814E8", Offset = "0xB814E8", VA = "0xB814E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xB81674", Offset = "0xB81674", VA = "0xB81674")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xB8173C", Offset = "0xB8173C", VA = "0xB8173C")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x20000F6")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x20000F7")]
	public enum BrushState
	{
		[Token(Token = "0x400054A")]
		Idle,
		[Token(Token = "0x400054B")]
		Inking
	}

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x995A88", Offset = "0x995A88", VA = "0x995A88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x995A90", Offset = "0x995A90", VA = "0x995A90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x995D78", Offset = "0x995D78", VA = "0x995D78")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x995F54", Offset = "0x995F54", VA = "0x995F54")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x9960FC", Offset = "0x9960FC", VA = "0x9960FC")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x995C84", Offset = "0x995C84", VA = "0x995C84")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x9961D8", Offset = "0x9961D8", VA = "0x9961D8")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x20000F8")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x996264", Offset = "0x996264", VA = "0x996264")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x9963F0", Offset = "0x9963F0", VA = "0x9963F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x996554", Offset = "0x996554", VA = "0x996554")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x20000F9")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x99655C", Offset = "0x99655C", VA = "0x99655C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x996750", Offset = "0x996750", VA = "0x996750")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x996920", Offset = "0x996920", VA = "0x996920")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x20000FA")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x20000FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DF18", Offset = "0x53DF18")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0x1271428", Offset = "0x1271428", VA = "0x1271428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0x1271470", Offset = "0x1271470", VA = "0x1271470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1271250", Offset = "0x1271250", VA = "0x1271250")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x127127C", Offset = "0x127127C", VA = "0x127127C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x1271280", Offset = "0x1271280", VA = "0x1271280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x1271430", Offset = "0x1271430", VA = "0x1271430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DF28", Offset = "0x53DF28")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0x1271690", Offset = "0x1271690", VA = "0x1271690", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E0")]
			[Address(RVA = "0x12716D8", Offset = "0x12716D8", VA = "0x12716D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x1271478", Offset = "0x1271478", VA = "0x1271478")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x12714A4", Offset = "0x12714A4", VA = "0x12714A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x12714A8", Offset = "0x12714A8", VA = "0x12714A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x1271698", Offset = "0x1271698", VA = "0x1271698", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x996928", Offset = "0x996928", VA = "0x996928")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x996C2C", Offset = "0x996C2C", VA = "0x996C2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x996E84", Offset = "0x996E84", VA = "0x996E84")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x996FEC", Offset = "0x996FEC", VA = "0x996FEC")]
	public void Release()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x996F70", Offset = "0x996F70", VA = "0x996F70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x544944", Offset = "0x544944")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x9970CC", Offset = "0x9970CC", VA = "0x9970CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5449A4", Offset = "0x5449A4")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x997148", Offset = "0x997148", VA = "0x997148")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x997168", Offset = "0x997168", VA = "0x997168")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x997188", Offset = "0x997188", VA = "0x997188")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x9971A8", Offset = "0x9971A8", VA = "0x9971A8")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x996BB0", Offset = "0x996BB0", VA = "0x996BB0")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x99720C", Offset = "0x99720C", VA = "0x99720C")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x997218", Offset = "0x997218", VA = "0x997218")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x996C44", Offset = "0x996C44", VA = "0x996C44")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x997224", Offset = "0x997224", VA = "0x997224")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x20000FD")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x997268", Offset = "0x997268", VA = "0x997268")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x997328", Offset = "0x997328", VA = "0x997328")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x20000FE")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x90891C", Offset = "0x90891C", VA = "0x90891C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x908B24", Offset = "0x908B24", VA = "0x908B24")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x908B7C", Offset = "0x908B7C", VA = "0x908B7C")]
	public void Release()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x908BC8", Offset = "0x908BC8", VA = "0x908BC8")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x20000FF")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x90B654", Offset = "0x90B654", VA = "0x90B654")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x90B6CC", Offset = "0x90B6CC", VA = "0x90B6CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x90B9F0", Offset = "0x90B9F0", VA = "0x90B9F0")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000100")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x90C4C0", Offset = "0x90C4C0", VA = "0x90C4C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x90C948", Offset = "0x90C948", VA = "0x90C948")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000101")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000102")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DF38", Offset = "0x53DF38")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1274258", Offset = "0x1274258", VA = "0x1274258")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1274260", Offset = "0x1274260", VA = "0x1274260")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x8680C4", Offset = "0x8680C4", VA = "0x8680C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x8682C8", Offset = "0x8682C8", VA = "0x8682C8")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x8683D8", Offset = "0x8683D8", VA = "0x8683D8")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000103")]
public class SimpleExample : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DF48", Offset = "0x53DF48")]
	private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleExample <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000405")]
			[Address(RVA = "0x12740E4", Offset = "0x12740E4", VA = "0x12740E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000407")]
			[Address(RVA = "0x127412C", Offset = "0x127412C", VA = "0x127412C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x1273D58", Offset = "0x1273D58", VA = "0x1273D58")]
		[DebuggerHidden]
		public <Start>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1273D84", Offset = "0x1273D84", VA = "0x1273D84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x1273D88", Offset = "0x1273D88", VA = "0x1273D88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x12740EC", Offset = "0x12740EC", VA = "0x12740EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SimpleExample instance;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool quitIfInitFail;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject messagePanel;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Text messageLabel;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool checkEntitlementResultSuccess;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53FD24", Offset = "0x53FD24")]
	private static SimpleExample <Instance>k__BackingField;

	[Token(Token = "0x17000053")]
	public static SimpleExample Instance
	{
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x861F54", Offset = "0x861F54", VA = "0x861F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544AA4", Offset = "0x544AA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x861FA0", Offset = "0x861FA0", VA = "0x861FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544AB4", Offset = "0x544AB4")]
		private set
		{
		}
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x861FF0", Offset = "0x861FF0", VA = "0x861FF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x8623A0", Offset = "0x8623A0", VA = "0x8623A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x544AC4", Offset = "0x544AC4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x86240C", Offset = "0x86240C", VA = "0x86240C")]
	public void StartManually()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x86251C", Offset = "0x86251C", VA = "0x86251C")]
	private void ProcessingCheckEntitlementResult(PvrCheckEntitlementResult checkEntitlementResult)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x862614", Offset = "0x862614", VA = "0x862614")]
	public void ProcessingRunningError(PvrRuntimeError runtimeError)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x862708", Offset = "0x862708", VA = "0x862708")]
	public void ProcessingLoggedInUser(PvrUser pvrUser)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x8627D0", Offset = "0x8627D0", VA = "0x8627D0")]
	public void ProcessingAccessToken(string accessToken)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x862860", Offset = "0x862860", VA = "0x862860")]
	public void ProcessingCurrentLanguage(string currentLanguage)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x8628F0", Offset = "0x8628F0", VA = "0x8628F0")]
	public void ProcessingMessageError(string errorInfo)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x862980", Offset = "0x862980", VA = "0x862980")]
	public void OnLogout()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x862A00", Offset = "0x862A00", VA = "0x862A00")]
	public void OnShutDown()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x8621E8", Offset = "0x8621E8", VA = "0x8621E8")]
	private void InitFail()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x862BEC", Offset = "0x862BEC", VA = "0x862BEC")]
	public void ClickMessage()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x862BF4", Offset = "0x862BF4", VA = "0x862BF4")]
	public SimpleExample()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x862BFC", Offset = "0x862BFC", VA = "0x862BFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544B24", Offset = "0x544B24")]
	private bool <Start>b__10_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000105")]
public class ScoresPopup : MonoBehaviour
{
	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DF58", Offset = "0x53DF58")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color c;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScoresPopup <>4__this;

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x1273824", Offset = "0x1273824", VA = "0x1273824")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x127382C", Offset = "0x127382C", VA = "0x127382C")]
		internal void <Appearance>b__0(float value)
		{
		}
	}

	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DF68", Offset = "0x53DF68")]
	private sealed class <Appearance>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScoresPopup <>4__this;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass9_0 <>8__1;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color color;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000417")]
			[Address(RVA = "0x1273BEC", Offset = "0x1273BEC", VA = "0x1273BEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000419")]
			[Address(RVA = "0x1273C34", Offset = "0x1273C34", VA = "0x1273C34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x1273870", Offset = "0x1273870", VA = "0x1273870")]
		[DebuggerHidden]
		public <Appearance>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x127389C", Offset = "0x127389C", VA = "0x127389C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x12738A0", Offset = "0x12738A0", VA = "0x12738A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x1273BF4", Offset = "0x1273BF4", VA = "0x1273BF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DF78", Offset = "0x53DF78")]
	private sealed class <Counting>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0x1273D08", Offset = "0x1273D08", VA = "0x1273D08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600041F")]
			[Address(RVA = "0x1273D50", Offset = "0x1273D50", VA = "0x1273D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x1273C3C", Offset = "0x1273C3C", VA = "0x1273C3C")]
		[DebuggerHidden]
		public <Counting>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x1273C68", Offset = "0x1273C68", VA = "0x1273C68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x1273C6C", Offset = "0x1273C6C", VA = "0x1273C6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1273D10", Offset = "0x1273D10", VA = "0x1273D10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int sign;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FD34", Offset = "0x53FD34")]
	private float increasingTime;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float time;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float flyHeight;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FDA0", Offset = "0x53FDA0")]
	public TMP_Text label;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x90B9F8", Offset = "0x90B9F8", VA = "0x90B9F8")]
	public static ScoresPopup CreatePopup()
	{
		return null;
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x90BA88", Offset = "0x90BA88", VA = "0x90BA88")]
	public static void CreatePopup(Vector3 pos, string text, Color color)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x90BBCC", Offset = "0x90BBCC", VA = "0x90BBCC")]
	public void Initialize(string text, Color color)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x90BD10", Offset = "0x90BD10", VA = "0x90BD10")]
	public void Initialize(int scores, Color color)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x90BC7C", Offset = "0x90BC7C", VA = "0x90BC7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x544B84", Offset = "0x544B84")]
	private IEnumerator Appearance(Color color)
	{
		return null;
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x90BDFC", Offset = "0x90BDFC", VA = "0x90BDFC")]
	public void InitializeCounting(float time, int scores)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x90BE40", Offset = "0x90BE40", VA = "0x90BE40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x544BE4", Offset = "0x544BE4")]
	private IEnumerator Counting(float time, int scores)
	{
		return null;
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x90BEB4", Offset = "0x90BEB4", VA = "0x90BEB4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x544C44", Offset = "0x544C44")]
	private void TestAppearance()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x90BEE0", Offset = "0x90BEE0", VA = "0x90BEE0")]
	private void ReturnToPool()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x90BF28", Offset = "0x90BF28", VA = "0x90BF28")]
	public ScoresPopup()
	{
	}
}
[Token(Token = "0x2000109")]
public class BallButton : MonoBehaviour
{
	[Token(Token = "0x200010A")]
	public enum State : byte
	{
		[Token(Token = "0x40005A0")]
		Locked,
		[Token(Token = "0x40005A1")]
		Available
	}

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FDD8", Offset = "0x53FDD8")]
	public State state;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material skinMaterial;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FE10", Offset = "0x53FE10")]
	private Image ballImage;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image lockImage;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_Text starsNeededLabel;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image redStar;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Image borderImage;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FE9C", Offset = "0x53FE9C")]
	[SerializeField]
	private SettingScreen settingScreen;

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x92E0D4", Offset = "0x92E0D4", VA = "0x92E0D4")]
	public void RefreshButton()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x92E284", Offset = "0x92E284", VA = "0x92E284")]
	public void Click()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x92E0E8", Offset = "0x92E0E8", VA = "0x92E0E8")]
	private void DrawAvailable()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x92E184", Offset = "0x92E184", VA = "0x92E184")]
	private void DrawLocked()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x92E2A4", Offset = "0x92E2A4", VA = "0x92E2A4")]
	public void Highlight()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x92E2D4", Offset = "0x92E2D4", VA = "0x92E2D4")]
	public void Unhighlight()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x92E304", Offset = "0x92E304", VA = "0x92E304")]
	public BallButton()
	{
	}
}
[Serializable]
[Token(Token = "0x200010B")]
public class LeaderboardData
{
	[Token(Token = "0x200010C")]
	public enum DownloadTarget : byte
	{
		[Token(Token = "0x40005AB")]
		TopPlayers,
		[Token(Token = "0x40005AC")]
		LocalPlayerOnly
	}

	[Token(Token = "0x200010D")]
	public enum ResultUnits : byte
	{
		[Token(Token = "0x40005AE")]
		Milliseconds,
		[Token(Token = "0x40005AF")]
		Scores
	}

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string apiName;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ResultUnits resultUnits;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LeaderboardPlayerInfo[] topPlayers;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LeaderboardPlayerInfo localPlayer;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53FEE8", Offset = "0x53FEE8")]
	private bool <LocalPlayerIsTop>k__BackingField;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isWaitingForResult;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53FEF8", Offset = "0x53FEF8")]
	private bool <HasNewData>k__BackingField;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53FF08", Offset = "0x53FF08")]
	private bool <IsInitialized>k__BackingField;

	[Token(Token = "0x1700005A")]
	public bool LocalPlayerIsTop
	{
		[Token(Token = "0x6000427")]
		[Address(RVA = "0xBACADC", Offset = "0xBACADC", VA = "0xBACADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544D1C", Offset = "0x544D1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000428")]
		[Address(RVA = "0xBACAE4", Offset = "0xBACAE4", VA = "0xBACAE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544D2C", Offset = "0x544D2C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public bool HasNewData
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0xBACAF0", Offset = "0xBACAF0", VA = "0xBACAF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544D3C", Offset = "0x544D3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600042A")]
		[Address(RVA = "0xBACAF8", Offset = "0xBACAF8", VA = "0xBACAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544D4C", Offset = "0x544D4C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public bool IsInitialized
	{
		[Token(Token = "0x600042B")]
		[Address(RVA = "0xBACB04", Offset = "0xBACB04", VA = "0xBACB04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544D5C", Offset = "0x544D5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600042C")]
		[Address(RVA = "0xBACB0C", Offset = "0xBACB0C", VA = "0xBACB0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544D6C", Offset = "0x544D6C")]
		private set
		{
		}
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xBACB18", Offset = "0xBACB18", VA = "0xBACB18")]
	public void Initialize(string apiName, ResultUnits resultUnits = ResultUnits.Milliseconds)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xBACCB0", Offset = "0xBACCB0", VA = "0xBACCB0")]
	public void Upload(float resultValue)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xBACD38", Offset = "0xBACD38", VA = "0xBACD38")]
	private void UploadToSteam(float resultValue)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xBACD3C", Offset = "0xBACD3C", VA = "0xBACD3C")]
	private void UploadToOculus(float resultValue)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xBACE84", Offset = "0xBACE84", VA = "0xBACE84")]
	private void OnUploadResult_Oculus(Message<bool> message)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xBACBB0", Offset = "0xBACBB0", VA = "0xBACBB0")]
	public void Download(DownloadTarget downloadTarget = DownloadTarget.TopPlayers)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xBAD10C", Offset = "0xBAD10C", VA = "0xBAD10C")]
	private void DownloadSteamLeaderBoard(DownloadTarget downloadTarget)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xBAD110", Offset = "0xBAD110", VA = "0xBAD110")]
	private void DownloadOculusLeaderBoard(DownloadTarget downloadTarget)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xBAD2A0", Offset = "0xBAD2A0", VA = "0xBAD2A0")]
	private void OnOculusTopPlayersDownloaded(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xBAD7DC", Offset = "0xBAD7DC", VA = "0xBAD7DC")]
	private void OnOculusLocalPlayerDownloaded(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xBADAB8", Offset = "0xBADAB8", VA = "0xBADAB8")]
	public void MarkAsNotNew()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xBADAC0", Offset = "0xBADAC0", VA = "0xBADAC0")]
	public LeaderboardData()
	{
	}
}
[Token(Token = "0x200010E")]
public class LeaderboardLine : MonoBehaviour
{
	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardPlayerInfo playerInfo;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FF28", Offset = "0x53FF28")]
	[SerializeField]
	private TMP_Text rankLabel;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image avatarImage;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text playerNameLabel;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_Text resultLabel;

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xBADAC8", Offset = "0xBADAC8", VA = "0xBADAC8")]
	public void SetInformation(LeaderboardPlayerInfo playerInfo, LeaderboardData.ResultUnits resultUnits = LeaderboardData.ResultUnits.Milliseconds)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xBADD04", Offset = "0xBADD04", VA = "0xBADD04")]
	public void MakeEmptyLine()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xBADDB0", Offset = "0xBADDB0", VA = "0xBADDB0")]
	public LeaderboardLine()
	{
	}
}
[Token(Token = "0x200010F")]
public class LeaderboardPanel : MonoBehaviour
{
	[Token(Token = "0x2000110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DF88", Offset = "0x53DF88")]
	private sealed class <CheckingForLeaderboardUpdates>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardPanel <>4__this;

		[Token(Token = "0x1700005D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000444")]
			[Address(RVA = "0x803D34", Offset = "0x803D34", VA = "0x803D34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0x803D7C", Offset = "0x803D7C", VA = "0x803D7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x803C20", Offset = "0x803C20", VA = "0x803C20")]
		[DebuggerHidden]
		public <CheckingForLeaderboardUpdates>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x803C4C", Offset = "0x803C4C", VA = "0x803C4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x803C50", Offset = "0x803C50", VA = "0x803C50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x803D3C", Offset = "0x803D3C", VA = "0x803D3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text nameLabel;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LeaderboardLine[] lines;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LeaderboardData leaderboardData;

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xBADDB8", Offset = "0xBADDB8", VA = "0xBADDB8")]
	public void Initialize(LeaderboardData leaderboardData)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xBADFFC", Offset = "0xBADFFC", VA = "0xBADFFC")]
	private void Redraw()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xBAE318", Offset = "0xBAE318", VA = "0xBAE318")]
	private void HideAllLines()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xBAE2AC", Offset = "0xBAE2AC", VA = "0xBAE2AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x544D7C", Offset = "0x544D7C")]
	private IEnumerator CheckingForLeaderboardUpdates()
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xBAE394", Offset = "0xBAE394", VA = "0xBAE394")]
	public LeaderboardPanel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000111")]
public class LeaderboardPlayerInfo
{
	[Token(Token = "0x2000112")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DF98", Offset = "0x53DF98")]
	private sealed class <DownloadImage>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string URL;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderboardPlayerInfo <>4__this;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600044D")]
			[Address(RVA = "0x803FB4", Offset = "0x803FB4", VA = "0x803FB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600044F")]
			[Address(RVA = "0x803FFC", Offset = "0x803FFC", VA = "0x803FFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x803D84", Offset = "0x803D84", VA = "0x803D84")]
		[DebuggerHidden]
		public <DownloadImage>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x803DB0", Offset = "0x803DB0", VA = "0x803DB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x803DB4", Offset = "0x803DB4", VA = "0x803DB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x803FBC", Offset = "0x803FBC", VA = "0x803FBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string playerName;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite avatarSprite;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rank;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float scores;

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xBAD720", Offset = "0xBAD720", VA = "0xBAD720")]
	public LeaderboardPlayerInfo(LeaderboardEntry oculusLeaderboardEntry)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xBAE39C", Offset = "0xBAE39C", VA = "0xBAE39C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x544E2C", Offset = "0x544E2C")]
	private IEnumerator DownloadImage(string URL)
	{
		return null;
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xBAE414", Offset = "0xBAE414", VA = "0xBAE414", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000113")]
[SelectionBase]
public class Ball : NetworkBehaviour
{
	[Token(Token = "0x2000114")]
	public enum State
	{
		[Token(Token = "0x40005DF")]
		WaitForPunch,
		[Token(Token = "0x40005E0")]
		Active,
		[Token(Token = "0x40005E1")]
		Dying,
		[Token(Token = "0x40005E2")]
		Dead
	}

	[Token(Token = "0x2000115")]
	public enum BallType
	{
		[Token(Token = "0x40005E4")]
		Normal,
		[Token(Token = "0x40005E5")]
		FireBall,
		[Token(Token = "0x40005E6")]
		StickyBall,
		[Token(Token = "0x40005E7")]
		LaserBall
	}

	[Token(Token = "0x2000116")]
	private enum LastHitObject : byte
	{
		[Token(Token = "0x40005E9")]
		Wall,
		[Token(Token = "0x40005EA")]
		Racket
	}

	[StructLayout(3)]
	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DFB8", Offset = "0x53DFB8")]
	private struct <>c__DisplayClass33_0
	{
		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collision collision;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Ball <>4__this;
	}

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FFC4", Offset = "0x53FFC4")]
	public BallType ballType;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int damage;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float defScale;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float minSpeed;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxSpeed;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FFFC", Offset = "0x53FFFC")]
	public State state;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isSticked;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[SerializeField]
	private bool wallClimber;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540044", Offset = "0x540044")]
	[SerializeField]
	private AudioSource soundPlayer;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Rigidbody rb;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SphereCollider coll;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TrailRenderer trail;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip energyHitSound;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip wallHitSound;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Renderer renderer;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private ConstantForce constForce;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 prevVelocity;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 prevColliderPos;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private byte hitCount;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool climbing;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private PhysicMaterial physMat;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private LastHitObject lastHitObject;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float stickingEndTime;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 velocityBeforeSticking;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float lastUnstickingTime;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 scaleBeforeSticking;

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x92BCCC", Offset = "0x92BCCC", VA = "0x92BCCC")]
	public void ResetAtStartPoint()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x92BE14", Offset = "0x92BE14", VA = "0x92BE14")]
	public void RefreshTrail()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x92BEE8", Offset = "0x92BEE8", VA = "0x92BEE8")]
	public void SetMaterial()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x92BFA0", Offset = "0x92BFA0", VA = "0x92BFA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x92BFA8", Offset = "0x92BFA8", VA = "0x92BFA8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x92C2C0", Offset = "0x92C2C0", VA = "0x92C2C0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x92C994", Offset = "0x92C994", VA = "0x92C994")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x92C40C", Offset = "0x92C40C", VA = "0x92C40C")]
	private void HitSolidObject(Collision collision)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x92C67C", Offset = "0x92C67C", VA = "0x92C67C")]
	private void HitWall(Collision collision, float hitForce)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x92D2A8", Offset = "0x92D2A8", VA = "0x92D2A8")]
	private void ClimbBeh1(Collision collision)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x92D134", Offset = "0x92D134", VA = "0x92D134")]
	private void ClimbBeh2(Collision collision)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x92D524", Offset = "0x92D524", VA = "0x92D524")]
	private void ClimbBeh3(Collision collision)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x92C410", Offset = "0x92C410", VA = "0x92C410")]
	private void HitBrick(Collision collision, float hitForce)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x92C944", Offset = "0x92C944", VA = "0x92C944")]
	private void HitRacket()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x92CEF0", Offset = "0x92CEF0", VA = "0x92CEF0")]
	private void OutOfBoundaries()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x92CF7C", Offset = "0x92CF7C", VA = "0x92CF7C")]
	private void IsKnockedOut()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x92D024", Offset = "0x92D024", VA = "0x92D024")]
	private void TouchScoringZone()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x92D7F0", Offset = "0x92D7F0", VA = "0x92D7F0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x544EDC", Offset = "0x544EDC")]
	public void Split()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x92DD64", Offset = "0x92DD64", VA = "0x92DD64")]
	private GameObject ClonedBall()
	{
		return null;
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x92DDF8", Offset = "0x92DDF8", VA = "0x92DDF8")]
	private void StartSticking()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x92C21C", Offset = "0x92C21C", VA = "0x92C21C")]
	private void Unstick()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x92CDA4", Offset = "0x92CDA4", VA = "0x92CDA4")]
	private void VisualizeDamageValue(Vector3 position, int dmg)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x92D790", Offset = "0x92D790", VA = "0x92D790")]
	private void ReturnToPoolWithDelay(float delay)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x92DF84", Offset = "0x92DF84", VA = "0x92DF84")]
	private void ReturnToPool()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x92D4C8", Offset = "0x92D4C8", VA = "0x92D4C8")]
	private bool HitForwardWall(Vector3 hitNormal)
	{
		return default(bool);
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x92D470", Offset = "0x92D470", VA = "0x92D470")]
	private bool HitCeiling(Vector3 hitNormal)
	{
		return default(bool);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x92D734", Offset = "0x92D734", VA = "0x92D734")]
	private bool HitSideWall(Vector3 hitNormal)
	{
		return default(bool);
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x92DFA0", Offset = "0x92DFA0", VA = "0x92DFA0")]
	public Ball()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x92DFB0", Offset = "0x92DFB0", VA = "0x92DFB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544F14", Offset = "0x544F14")]
	private bool <HitSolidObject>g__IsStuckForZ|33_0(ref <>c__DisplayClass33_0 P_0)
	{
		return default(bool);
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x92E020", Offset = "0x92E020", VA = "0x92E020")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544F24", Offset = "0x544F24")]
	private bool <HitSolidObject>g__IsStuckForY|33_1(ref <>c__DisplayClass33_0 P_0)
	{
		return default(bool);
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x92E0D0", Offset = "0x92E0D0", VA = "0x92E0D0")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000118")]
public class BallScreen : MonoBehaviour
{
	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentBallId;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540100", Offset = "0x540100")]
	[SerializeField]
	private DemoBall[] demoBalls;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject room;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text starsLabel;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x92E314", Offset = "0x92E314", VA = "0x92E314")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x92E580", Offset = "0x92E580", VA = "0x92E580")]
	public void CloseScreen()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x92E42C", Offset = "0x92E42C", VA = "0x92E42C")]
	public void RecheckBallsAvailability()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x92E5D8", Offset = "0x92E5D8", VA = "0x92E5D8")]
	public void BallIsSelected(DemoBall demoBall)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x92E4EC", Offset = "0x92E4EC", VA = "0x92E4EC")]
	public void HighlightCurrentBall()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x92E650", Offset = "0x92E650", VA = "0x92E650")]
	public void SetBallOnLoad(int ballId)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x92E6D8", Offset = "0x92E6D8", VA = "0x92E6D8")]
	public BallScreen()
	{
	}
}
[Token(Token = "0x2000119")]
public class Bonus : MonoBehaviour
{
	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float acceleration;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54016C", Offset = "0x54016C")]
	private Rigidbody rb;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x92F474", Offset = "0x92F474", VA = "0x92F474")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x92F528", Offset = "0x92F528", VA = "0x92F528")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x92F64C", Offset = "0x92F64C", VA = "0x92F64C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x92F818", Offset = "0x92F818", VA = "0x92F818")]
	public Bonus()
	{
	}
}
[Token(Token = "0x200011A")]
public enum BonusType
{
	[Token(Token = "0x40005F5")]
	BallSplitter,
	[Token(Token = "0x40005F6")]
	Fireball,
	[Token(Token = "0x40005F7")]
	StrangeGravitation,
	[Token(Token = "0x40005F8")]
	DefenseWall,
	[Token(Token = "0x40005F9")]
	SloMo,
	[Token(Token = "0x40005FA")]
	BonusLife,
	[Token(Token = "0x40005FB")]
	LaserBall,
	[Token(Token = "0x40005FC")]
	ElectricBall,
	[Token(Token = "0x40005FD")]
	RandomKill
}
[Token(Token = "0x200011B")]
public class Brick : MonoBehaviour
{
	[Token(Token = "0x200011C")]
	public enum State
	{
		[Token(Token = "0x400060E")]
		Alive,
		[Token(Token = "0x400060F")]
		Dead,
		[Token(Token = "0x4000610")]
		ResurrectionProgress
	}

	[Token(Token = "0x200011D")]
	public enum BrickType : byte
	{
		[Token(Token = "0x4000612")]
		Panel,
		[Token(Token = "0x4000613")]
		Cube
	}

	[Token(Token = "0x200011E")]
	public enum PanelType : byte
	{
		[Token(Token = "0x4000615")]
		BuiltInToWall,
		[Token(Token = "0x4000616")]
		FreeStand
	}

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public State state;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5401B8", Offset = "0x5401B8")]
	public BrickType type;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public PanelType panelType;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxHealth;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[ShowOnly]
	public float health;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ShowOnly]
	public Vector3 defPos;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[ShowOnly]
	public float defScale;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material innerMat;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int colorSchemeIndex;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540220", Offset = "0x540220")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material[] materials;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider coll;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> chunks;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool canBeResurrected;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public float deathTime;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x92F820", Offset = "0x92F820", VA = "0x92F820")]
	public void Reset()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x92CC24", Offset = "0x92CC24", VA = "0x92CC24")]
	public bool TakeDamage(int damage, Vector3 impactPoint, float pushForce)
	{
		return default(bool);
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x92F8FC", Offset = "0x92F8FC", VA = "0x92F8FC")]
	private void TrySetDefaultMaterial()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x92FAC0", Offset = "0x92FAC0", VA = "0x92FAC0")]
	private void ChangeAppearance()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x92FB78", Offset = "0x92FB78", VA = "0x92FB78")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x544F34", Offset = "0x544F34")]
	public void Death()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x92F9C0", Offset = "0x92F9C0", VA = "0x92F9C0")]
	public void Death(int damage, Vector3 impactPoint, float force)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x9306C0", Offset = "0x9306C0", VA = "0x9306C0")]
	public void Resurrect()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x930898", Offset = "0x930898", VA = "0x930898")]
	public void DeathWithDelay()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x9308EC", Offset = "0x9308EC", VA = "0x9308EC")]
	public void DeathWithDelay(float delay)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x93094C", Offset = "0x93094C", VA = "0x93094C")]
	private void DeathEffect_v1()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x92FC04", Offset = "0x92FC04", VA = "0x92FC04")]
	private void DeathEffect_v2(int damage, Vector3 impactPoint, float force)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x930B18", Offset = "0x930B18", VA = "0x930B18")]
	private void DestroyFrontBricks()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x930450", Offset = "0x930450", VA = "0x930450")]
	private void DropBonus()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x930B1C", Offset = "0x930B1C", VA = "0x930B1C")]
	public void BakeCurrentState()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x930B20", Offset = "0x930B20", VA = "0x930B20")]
	public Brick()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x930B28", Offset = "0x930B28", VA = "0x930B28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x544F6C", Offset = "0x544F6C")]
	private void <Resurrect>b__21_0()
	{
	}
}
[Token(Token = "0x200011F")]
public class DeathEffect : MonoBehaviour
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x8C938C", Offset = "0x8C938C", VA = "0x8C938C")]
	public void LifeTime()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x8C93E0", Offset = "0x8C93E0", VA = "0x8C93E0")]
	private void ReturnToPool()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x8C961C", Offset = "0x8C961C", VA = "0x8C961C")]
	public DeathEffect()
	{
	}
}
[Token(Token = "0x2000120")]
public class DefenseWall : MonoBehaviour
{
	[Token(Token = "0x2000121")]
	public enum State : byte
	{
		[Token(Token = "0x4000622")]
		Off,
		[Token(Token = "0x4000623")]
		On
	}

	[Token(Token = "0x2000122")]
	public enum PositionType : byte
	{
		[Token(Token = "0x4000625")]
		PositionAtSection1,
		[Token(Token = "0x4000626")]
		PositionAtSection2
	}

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public State state;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54029C", Offset = "0x54029C")]
	public float lifeTime;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 position;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector3 positionAtSection1;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector3 positionAtSection2;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float textureOffset;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startTime;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float endTime;

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x8CBFE4", Offset = "0x8CBFE4", VA = "0x8CBFE4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x544F7C", Offset = "0x544F7C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x8CC088", Offset = "0x8CC088", VA = "0x8CC088")]
	private void Update()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x8CC264", Offset = "0x8CC264", VA = "0x8CC264")]
	public void SwitchOff()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x8CC2EC", Offset = "0x8CC2EC", VA = "0x8CC2EC")]
	public float RemainingTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x8CC314", Offset = "0x8CC314", VA = "0x8CC314")]
	public void SetDefaultPosition()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x8CC328", Offset = "0x8CC328", VA = "0x8CC328")]
	public void SetPosition(PositionType positionType)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x8CC360", Offset = "0x8CC360", VA = "0x8CC360")]
	public void SetPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x8CC36C", Offset = "0x8CC36C", VA = "0x8CC36C")]
	public DefenseWall()
	{
	}
}
[Token(Token = "0x2000123")]
public class DemoBall : MonoBehaviour
{
	[Token(Token = "0x2000124")]
	public enum State : byte
	{
		[Token(Token = "0x4000634")]
		Locked,
		[Token(Token = "0x4000635")]
		Available
	}

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public State state;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int starsForUnlocks;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool availableInDemoVersion;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540324", Offset = "0x540324")]
	[SerializeField]
	private float rotSpeed;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float baseHeight;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float floatValue;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540390", Offset = "0x540390")]
	private GameObject starIcon;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TMP_Text textLabel;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject highlight;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer renderer;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color tailColor;

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x8CD2B0", Offset = "0x8CD2B0", VA = "0x8CD2B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x8CD400", Offset = "0x8CD400", VA = "0x8CD400")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x8CD4E0", Offset = "0x8CD4E0", VA = "0x8CD4E0")]
	public void Click()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x8CD6D0", Offset = "0x8CD6D0", VA = "0x8CD6D0")]
	public void SelectBall()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x8CD414", Offset = "0x8CD414", VA = "0x8CD414")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x544FB4", Offset = "0x544FB4")]
	public void DrawAvailable()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x8CD464", Offset = "0x8CD464", VA = "0x8CD464")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x544FEC", Offset = "0x544FEC")]
	public void DrawLocked()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x8CD790", Offset = "0x8CD790", VA = "0x8CD790")]
	public void Highlight()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x8CD7B0", Offset = "0x8CD7B0", VA = "0x8CD7B0")]
	public void Unhighlight()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x8CD7D0", Offset = "0x8CD7D0", VA = "0x8CD7D0")]
	public DemoBall()
	{
	}
}
[Token(Token = "0x2000125")]
public class DemoRacket : MonoBehaviour
{
	[Token(Token = "0x2000126")]
	public enum State : byte
	{
		[Token(Token = "0x400063F")]
		Locked,
		[Token(Token = "0x4000640")]
		Available
	}

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RacketType racketType;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public State state;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int starsForUnlocks;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool availableInDemoVersion;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54041C", Offset = "0x54041C")]
	[SerializeField]
	private GameObject starIcon;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text textLabel;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540478", Offset = "0x540478")]
	public float rotSpeed;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x8CD7D8", Offset = "0x8CD7D8", VA = "0x8CD7D8")]
	[ExecuteInEditMode]
	private void Update()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x8CD818", Offset = "0x8CD818", VA = "0x8CD818")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x8CD8F8", Offset = "0x8CD8F8", VA = "0x8CD8F8")]
	public void Click()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x8CD82C", Offset = "0x8CD82C", VA = "0x8CD82C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x545034", Offset = "0x545034")]
	public void DrawAvailable()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x8CD87C", Offset = "0x8CD87C", VA = "0x8CD87C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x54506C", Offset = "0x54506C")]
	public void DrawLocked()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x8CDA0C", Offset = "0x8CDA0C", VA = "0x8CDA0C")]
	public DemoRacket()
	{
	}
}
[Token(Token = "0x2000127")]
public class DemoVersionWarning : MonoBehaviour
{
	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float lifeTime;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float hideTime;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text label;

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x8CD5CC", Offset = "0x8CD5CC", VA = "0x8CD5CC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5450A4", Offset = "0x5450A4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x8CDA14", Offset = "0x8CDA14", VA = "0x8CDA14")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x8CDA54", Offset = "0x8CDA54", VA = "0x8CDA54")]
	private void Hide()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x8CDA7C", Offset = "0x8CDA7C", VA = "0x8CDA7C")]
	public DemoVersionWarning()
	{
	}
}
[Serializable]
[Token(Token = "0x2000128")]
public class PoolInfo
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string poolName;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int poolSize;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool fixedSize;

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x8FFD40", Offset = "0x8FFD40", VA = "0x8FFD40")]
	public PoolInfo()
	{
	}
}
[Token(Token = "0x2000129")]
internal class Pool
{
	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Stack<PoolObject> availableObjStack;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool fixedSize;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject poolObjectPrefab;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int poolSize;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string poolName;

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x8FF438", Offset = "0x8FF438", VA = "0x8FF438")]
	public Pool(string poolName, GameObject poolObjectPrefab, int initialCount, bool fixedSize)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x8FF6BC", Offset = "0x8FF6BC", VA = "0x8FF6BC")]
	private void AddObjectToPool(PoolObject po)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x8FF50C", Offset = "0x8FF50C", VA = "0x8FF50C")]
	private PoolObject NewObjectInstance()
	{
		return null;
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x8FF768", Offset = "0x8FF768", VA = "0x8FF768")]
	public GameObject NextAvailableObject(Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x8FF9E8", Offset = "0x8FF9E8", VA = "0x8FF9E8")]
	public GameObject NextAvailableObject()
	{
		return null;
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x8FFBE8", Offset = "0x8FFBE8", VA = "0x8FFBE8")]
	public void ReturnObjectToPool(PoolObject po)
	{
	}
}
[Token(Token = "0x200012A")]
public class EasyObjectPool : MonoBehaviour
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EasyObjectPool instance;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5404D0", Offset = "0x5404D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5404D0", Offset = "0x5404D0")]
	public bool createPoolsByLoader;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540530", Offset = "0x540530")]
	public bool isParentForObjects;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool showDebugLogs;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540568", Offset = "0x540568")]
	[SerializeField]
	private int swapIndex1;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int swapIndex2;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5405C4", Offset = "0x5405C4")]
	public PoolInfo[] poolInfo;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, Pool> poolDictionary;

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x8CF9F0", Offset = "0x8CF9F0", VA = "0x8CF9F0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5450DC", Offset = "0x5450DC")]
	public void Editor_SwapTwoPools()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x8CFB48", Offset = "0x8CFB48", VA = "0x8CFB48")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x8CFC10", Offset = "0x8CFC10", VA = "0x8CFC10")]
	private void CheckForDuplicatePoolNames()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x8CFE20", Offset = "0x8CFE20", VA = "0x8CFE20")]
	public void CreatePools()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x8CFF98", Offset = "0x8CFF98", VA = "0x8CFF98")]
	public GameObject GetObjectFromPool(string poolName, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x8D01B0", Offset = "0x8D01B0", VA = "0x8D01B0")]
	public GameObject GetObjectFromPool(string poolName)
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x8C944C", Offset = "0x8C944C", VA = "0x8C944C")]
	public void ReturnObjectToPool(GameObject go)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x8D0370", Offset = "0x8D0370", VA = "0x8D0370")]
	public EasyObjectPool()
	{
	}
}
[Token(Token = "0x200012B")]
public static class EasyObjectPool_Extension
{
	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x8D03F0", Offset = "0x8D03F0", VA = "0x8D03F0")]
	public static void ReturnToPool(this GameObject go)
	{
	}
}
[Token(Token = "0x200012C")]
public class PoolObject : MonoBehaviour
{
	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string poolName;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isPooled;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x8FFD48", Offset = "0x8FFD48", VA = "0x8FFD48")]
	public PoolObject()
	{
	}
}
[Token(Token = "0x200012D")]
public class ReturnToPoolAfterTime : MonoBehaviour
{
	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x906CC8", Offset = "0x906CC8", VA = "0x906CC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x906D1C", Offset = "0x906D1C", VA = "0x906D1C")]
	private void ReturnToPool()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x906DA8", Offset = "0x906DA8", VA = "0x906DA8")]
	public ReturnToPoolAfterTime()
	{
	}
}
[Token(Token = "0x200012E")]
public class Editor_DemoVersionSetup : MonoBehaviour
{
	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x8D05FC", Offset = "0x8D05FC", VA = "0x8D05FC")]
	public Editor_DemoVersionSetup()
	{
	}
}
[Token(Token = "0x200012F")]
public class EnergyLight : MonoBehaviour
{
	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float extinctionTime;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light light;

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x8D18C4", Offset = "0x8D18C4", VA = "0x8D18C4")]
	public void Initialize(Color color)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x8D1AA8", Offset = "0x8D1AA8", VA = "0x8D1AA8")]
	public void Initialize2(Vector3 dir)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x8D1C0C", Offset = "0x8D1C0C", VA = "0x8D1C0C")]
	public EnergyLight()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x8D1C14", Offset = "0x8D1C14", VA = "0x8D1C14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545124", Offset = "0x545124")]
	private void <Initialize>b__2_0(float value)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x8D1C30", Offset = "0x8D1C30", VA = "0x8D1C30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545134", Offset = "0x545134")]
	private void <Initialize>b__2_1()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x8D1C48", Offset = "0x8D1C48", VA = "0x8D1C48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545144", Offset = "0x545144")]
	private void <Initialize2>b__3_0()
	{
	}
}
[Token(Token = "0x2000130")]
public class EnergyWall : MonoBehaviour
{
	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x8D1C60", Offset = "0x8D1C60", VA = "0x8D1C60")]
	public EnergyWall()
	{
	}
}
[Token(Token = "0x2000131")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x2000132")]
	public enum GameMode : byte
	{
		[Token(Token = "0x400068C")]
		SinglePlayer,
		[Token(Token = "0x400068D")]
		MultiPlayer
	}

	[Token(Token = "0x2000133")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DFD8", Offset = "0x53DFD8")]
	private sealed class <StartingApplication>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000061")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000500")]
			[Address(RVA = "0x802150", Offset = "0x802150", VA = "0x802150", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000062")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000502")]
			[Address(RVA = "0x802198", Offset = "0x802198", VA = "0x802198", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x801F2C", Offset = "0x801F2C", VA = "0x801F2C")]
		[DebuggerHidden]
		public <StartingApplication>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x801F58", Offset = "0x801F58", VA = "0x801F58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x801F5C", Offset = "0x801F5C", VA = "0x801F5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x802158", Offset = "0x802158", VA = "0x802158", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DFE8", Offset = "0x53DFE8")]
	private sealed class <GamePlayRoutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000506")]
			[Address(RVA = "0x801CDC", Offset = "0x801CDC", VA = "0x801CDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000508")]
			[Address(RVA = "0x801D24", Offset = "0x801D24", VA = "0x801D24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x801BD0", Offset = "0x801BD0", VA = "0x801BD0")]
		[DebuggerHidden]
		public <GamePlayRoutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x801BFC", Offset = "0x801BFC", VA = "0x801BFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x801C00", Offset = "0x801C00", VA = "0x801C00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x801CE4", Offset = "0x801CE4", VA = "0x801CE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000135")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53DFF8", Offset = "0x53DFF8")]
	private sealed class <KillBrick>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Brick brick;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050C")]
			[Address(RVA = "0x801EDC", Offset = "0x801EDC", VA = "0x801EDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600050E")]
			[Address(RVA = "0x801F24", Offset = "0x801F24", VA = "0x801F24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x801D2C", Offset = "0x801D2C", VA = "0x801D2C")]
		[DebuggerHidden]
		public <KillBrick>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x801D58", Offset = "0x801D58", VA = "0x801D58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x801D5C", Offset = "0x801D5C", VA = "0x801D5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x801EE4", Offset = "0x801EE4", VA = "0x801EE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E008", Offset = "0x53E008")]
	private sealed class <>c
	{
		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__99_0;

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x801BC0", Offset = "0x801BC0", VA = "0x801BC0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x801BC8", Offset = "0x801BC8", VA = "0x801BC8")]
		internal void <UseSloMo>b__99_0(float value)
		{
		}
	}

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameManager instance;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool demoVersion;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public GameMode gameMode;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public State state;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5405FC", Offset = "0x5405FC")]
	public GravitationState gravitationState;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GravitationType gravitationType;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 startGravitationVector;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GravitationType startGravitationType;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540634", Offset = "0x540634")]
	private float strangeGravitationEndTime;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float strangeGravitationDuration;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TimescaleState timescaleState;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float sloMoEndTime;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject holderForTimescaleLeanTween;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54068C", Offset = "0x54068C")]
	public int livesRemained;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int bricksDestroyed;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float matchStartTime;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float matchFinishTime;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int sloMos;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int totalStars;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5406C4", Offset = "0x5406C4")]
	public Perk[] activePerks;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5406FC", Offset = "0x5406FC")]
	public Level level;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Level[] levels;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Level[] mpLevels;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Ball> balls;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Bonus> bonuses;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Racket leftRacket;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Racket rightRacket;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float minHitForce;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float maxHitForce;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float avgHitForce;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float hitsSumma;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int hitsCounter;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public DefenseWall defenseWall;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float dragForce;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540754", Offset = "0x540754")]
	public GameObject brickPanelPrefab;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject brickCubePrefab;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool autoStartGameplay;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ProbabilityPool<BonusType> defaultBonusPool;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ProbabilityPool<BonusType> bonusPool;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int ballsMissed;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float endTime;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool timeLimit;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int scores;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine gameplayRoutine;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54078C", Offset = "0x54078C")]
	public GameObject[] objs1;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject[] objs2;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject[] objs3;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject[] objs4;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject[] objs5;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x6BB764", Offset = "0x6BB764", VA = "0x6BB764")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x6BB778", Offset = "0x6BB778", VA = "0x6BB778")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x6BB9E0", Offset = "0x6BB9E0", VA = "0x6BB9E0")]
	public void StartApplication()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x6BC258", Offset = "0x6BC258", VA = "0x6BC258")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x545154", Offset = "0x545154")]
	private IEnumerator StartingApplication()
	{
		return null;
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x6BC2C4", Offset = "0x6BC2C4", VA = "0x6BC2C4")]
	public void StartMultiplayerMatch()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x6BBC70", Offset = "0x6BBC70", VA = "0x6BBC70")]
	public void StartGame()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x6BCC58", Offset = "0x6BCC58", VA = "0x6BCC58")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x6BCC5C", Offset = "0x6BCC5C", VA = "0x6BCC5C")]
	public void PlayNextLevel()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x6BCBEC", Offset = "0x6BCBEC", VA = "0x6BCBEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5451B4", Offset = "0x5451B4")]
	private IEnumerator GamePlayRoutine()
	{
		return null;
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x6BB8B4", Offset = "0x6BB8B4", VA = "0x6BB8B4")]
	private void FinishLevel()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x6BC94C", Offset = "0x6BC94C", VA = "0x6BC94C")]
	public void CreateNewBall()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x6BCEB4", Offset = "0x6BCEB4", VA = "0x6BCEB4")]
	public void BallTouchsScoringZone(Ball ball)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x6BCF7C", Offset = "0x6BCF7C", VA = "0x6BCF7C")]
	public void BallIsLost(Ball ball)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x6BD114", Offset = "0x6BD114", VA = "0x6BD114")]
	public void BrickIsDestroyed(Brick brick)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x6BD270", Offset = "0x6BD270", VA = "0x6BD270")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x545214", Offset = "0x545214")]
	private IEnumerator KillBrick(Brick brick)
	{
		return null;
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x6BD23C", Offset = "0x6BD23C", VA = "0x6BD23C")]
	public void CheckForVictory()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x6BD2DC", Offset = "0x6BD2DC", VA = "0x6BD2DC")]
	private bool VictoryConditionIsMet()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x6BD350", Offset = "0x6BD350", VA = "0x6BD350")]
	public void DragBalls()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x6BCCC8", Offset = "0x6BCCC8", VA = "0x6BCCC8")]
	private void CalculateFinishTime()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x6BD54C", Offset = "0x6BD54C", VA = "0x6BD54C")]
	public float MatchTime()
	{
		return default(float);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x6BC8B0", Offset = "0x6BC8B0", VA = "0x6BC8B0")]
	public bool PerkIsActive(PerkType perkType)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x6BD578", Offset = "0x6BD578", VA = "0x6BD578")]
	public void ChangeRackets(RacketType racketType)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x6BD5BC", Offset = "0x6BD5BC", VA = "0x6BD5BC")]
	public void HideRackets()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x6BCE30", Offset = "0x6BCE30", VA = "0x6BCE30")]
	private bool IsOnlineHost()
	{
		return default(bool);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x6BC3AC", Offset = "0x6BC3AC", VA = "0x6BC3AC")]
	public void ClearWorld()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x6BD618", Offset = "0x6BD618", VA = "0x6BD618")]
	public void SetLastPlayedLevelOnLoad(int id)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x6BD700", Offset = "0x6BD700", VA = "0x6BD700")]
	public void ResetAllLevels()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x6BD760", Offset = "0x6BD760", VA = "0x6BD760")]
	public void SomeBallHitsSomething(Ball ball, float hitForce)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x6BDB0C", Offset = "0x6BDB0C", VA = "0x6BDB0C")]
	public void PlayerUsesAbility()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x6BDE80", Offset = "0x6BDE80", VA = "0x6BDE80")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x545274", Offset = "0x545274")]
	private void NormalizeProbabilitiesPools()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x6BCCF8", Offset = "0x6BCCF8", VA = "0x6BCCF8")]
	public void RecalculateTotalStars()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x6BCDC0", Offset = "0x6BCDC0", VA = "0x6BCDC0")]
	public void RecheckLevelsAvailability()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x6BDEE4", Offset = "0x6BDEE4", VA = "0x6BDEE4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5452AC", Offset = "0x5452AC")]
	public void ResetProgress()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x6BBB24", Offset = "0x6BBB24", VA = "0x6BBB24")]
	private void InitialSetup()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x6BDF44", Offset = "0x6BDF44", VA = "0x6BDF44")]
	public void SwitchObjs1()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x6BE034", Offset = "0x6BE034", VA = "0x6BE034")]
	public void SwitchObjs2()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x6BE124", Offset = "0x6BE124", VA = "0x6BE124")]
	public void SwitchObjs3()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x6BE214", Offset = "0x6BE214", VA = "0x6BE214")]
	public void SwitchObjs4()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x6BE304", Offset = "0x6BE304", VA = "0x6BE304")]
	public void SwitchObjs5()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x6BE3F4", Offset = "0x6BE3F4", VA = "0x6BE3F4")]
	public void ActivateRandomBonus(Bonus bonus)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x6BE514", Offset = "0x6BE514", VA = "0x6BE514")]
	private void AdjustBonusesProbabilities()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x6BEC4C", Offset = "0x6BEC4C", VA = "0x6BEC4C")]
	public void Fireballs()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x6BF2FC", Offset = "0x6BF2FC", VA = "0x6BF2FC")]
	public void LaserBalls()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x6BE798", Offset = "0x6BE798", VA = "0x6BE798")]
	public void SplitRandomBall()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x6BF06C", Offset = "0x6BF06C", VA = "0x6BF06C")]
	public void ActivateDefenseWall()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x6BEE48", Offset = "0x6BEE48", VA = "0x6BEE48")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5452E4", Offset = "0x5452E4")]
	public void StrangeGravitation()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x6BB87C", Offset = "0x6BB87C", VA = "0x6BB87C")]
	public void SetNormalGravitation()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x6BC920", Offset = "0x6BC920", VA = "0x6BC920")]
	private void NormalTimescale()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x6BE834", Offset = "0x6BE834", VA = "0x6BE834")]
	private void GetSloMoBonus(Bonus bonus)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x6BDC20", Offset = "0x6BDC20", VA = "0x6BDC20")]
	public void UseSloMo()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x6BF540", Offset = "0x6BF540", VA = "0x6BF540")]
	public void InterruptSloMo()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x6BEA28", Offset = "0x6BEA28", VA = "0x6BEA28")]
	private void GetBonusLife(Bonus bonus)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x6BF168", Offset = "0x6BF168", VA = "0x6BF168")]
	private void RandomKill()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x6BF5BC", Offset = "0x6BF5BC", VA = "0x6BF5BC")]
	private Brick GetRandomAliveBrick()
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x6BF208", Offset = "0x6BF208", VA = "0x6BF208")]
	private int GetCountOfAliveBricks()
	{
		return default(int);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x6BF794", Offset = "0x6BF794", VA = "0x6BF794")]
	public GameManager()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x6BF79C", Offset = "0x6BF79C", VA = "0x6BF79C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54531C", Offset = "0x54531C")]
	private void <UseSloMo>b__99_1()
	{
	}
}
[Token(Token = "0x2000137")]
public enum State : byte
{
	[Token(Token = "0x400069A")]
	Menu,
	[Token(Token = "0x400069B")]
	Gameplay,
	[Token(Token = "0x400069C")]
	ViewingLevelResult
}
[Token(Token = "0x2000138")]
public enum GravitationState : byte
{
	[Token(Token = "0x400069E")]
	Normal,
	[Token(Token = "0x400069F")]
	Strange
}
[Token(Token = "0x2000139")]
public enum GravitationType : byte
{
	[Token(Token = "0x40006A1")]
	Down,
	[Token(Token = "0x40006A2")]
	Up,
	[Token(Token = "0x40006A3")]
	Left,
	[Token(Token = "0x40006A4")]
	Right,
	[Token(Token = "0x40006A5")]
	Zero,
	[Token(Token = "0x40006A6")]
	North,
	[Token(Token = "0x40006A7")]
	Other
}
[Token(Token = "0x200013A")]
public enum TimescaleState : byte
{
	[Token(Token = "0x40006A9")]
	Normal,
	[Token(Token = "0x40006AA")]
	SlowMo
}
[Token(Token = "0x200013B")]
public class GameSettings : MonoBehaviour
{
	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameSettings instance;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string languageCode;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useLeaderboards;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5407C4", Offset = "0x5407C4")]
	public bool visualizeDamageValue;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int defStartLives;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 defGravitation;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float defGravitationValue;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float slowMoValue;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float sloMoDuration;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5407FC", Offset = "0x5407FC")]
	public float ballVelAcceleration;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ballVelDeceleration;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minZComponent;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float zComponentIncreasing;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ballBounciness;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PhysicMaterial ballPhysicMaterial;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540844", Offset = "0x540844")]
	public LayerMask energyWallLayerMask;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public LayerMask wallsLayerMask;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ColorScheme[] colorSchemes;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material ballMaterial;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color ballTailColor;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54087C", Offset = "0x54087C")]
	public float fractUp;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float fractDrag;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float fractForce;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float fractTorgue;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float fractBallForceKoef;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5408B4", Offset = "0x5408B4")]
	public bool allLevelsAvailable;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool ignoreLevelLock;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int forceStarResult;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int additionalStars;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool skipSmoothApplicationLoading;

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x6BF7A4", Offset = "0x6BF7A4", VA = "0x6BF7A4")]
	public void OnChangeBallAcceleration(float value)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x6BF7AC", Offset = "0x6BF7AC", VA = "0x6BF7AC")]
	public void OnChangeBallDeceleration(float value)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x6BF7B4", Offset = "0x6BF7B4", VA = "0x6BF7B4")]
	public void OnChangeBallMinZComponent(float value)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x6BF7BC", Offset = "0x6BF7BC", VA = "0x6BF7BC")]
	public void OnChangeBallZincreasing(float value)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x6BF7C4", Offset = "0x6BF7C4", VA = "0x6BF7C4")]
	public void OnChangeBallBounciness(float value)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x6BF7E8", Offset = "0x6BF7E8", VA = "0x6BF7E8")]
	public GameSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200013C")]
public struct ColorScheme
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material[] materials;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Material innerMaterial;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material cubeMaterial;
}
[Token(Token = "0x200013D")]
public class GoalPanel : MonoBehaviour
{
	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text[] reqTexts;

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x6C55E4", Offset = "0x6C55E4", VA = "0x6C55E4")]
	public void ShowRequirementInfo(Level level)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x6C5694", Offset = "0x6C5694", VA = "0x6C5694")]
	public void ShowRequirementInfo(string[] reqStrings)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x6C5728", Offset = "0x6C5728", VA = "0x6C5728")]
	public GoalPanel()
	{
	}
}
[Token(Token = "0x200013E")]
public class HandButton : MonoBehaviour
{
	[Token(Token = "0x600051B")]
	[Address(RVA = "0x6C687C", Offset = "0x6C687C", VA = "0x6C687C")]
	public HandButton()
	{
	}
}
[Token(Token = "0x200013F")]
public class InGamePanel : MonoBehaviour
{
	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float floatingSpeed;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float floatingAmplitude;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float defPosY;

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x6CC358", Offset = "0x6CC358", VA = "0x6CC358")]
	private void Update()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x6CC3F0", Offset = "0x6CC3F0", VA = "0x6CC3F0")]
	public InGamePanel()
	{
	}
}
[Token(Token = "0x2000140")]
public class LTDescr
{
	[Token(Token = "0x2000141")]
	public delegate Vector3 EaseTypeDelegate();

	[Token(Token = "0x2000142")]
	public delegate void ActionMethodDelegate();

	[Serializable]
	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E018", Offset = "0x53E018")]
	private sealed class <>c
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ActionMethodDelegate <>9__113_0;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ActionMethodDelegate <>9__114_0;

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x80357C", Offset = "0x80357C", VA = "0x80357C")]
		public <>c()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x803584", Offset = "0x803584", VA = "0x803584")]
		internal void <setCallback>b__113_0()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x803588", Offset = "0x803588", VA = "0x803588")]
		internal void <setValue3>b__114_0()
		{
		}
	}

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool toggle;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool useEstimatedTime;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool useFrames;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool useManualTime;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool usesNormalDt;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool hasInitiliazed;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool hasExtraOnCompletes;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool hasPhysics;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onCompleteOnRepeat;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool onCompleteOnStart;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useRecursion;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ratioPassed;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float passed;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastVal;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private uint _id;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int loopCount;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public uint counter;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float direction;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float directionLast;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float overshoot;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float period;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float scale;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool destroyOnComplete;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform trans;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal Vector3 fromInternal;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	internal Vector3 toInternal;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal Vector3 diff;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	internal Vector3 diffDiv2;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TweenAction type;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private LeanTweenType easeType;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LeanTweenType loopType;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool hasUpdateCallback;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EaseTypeDelegate easeMethod;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54092C", Offset = "0x54092C")]
	private ActionMethodDelegate <easeInternal>k__BackingField;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54093C", Offset = "0x54093C")]
	private ActionMethodDelegate <initInternal>k__BackingField;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpriteRenderer spriteRen;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RectTransform rectTransform;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text uiText;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image uiImage;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RawImage rawImage;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite[] sprites;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LTDescrOptional _optional;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float val;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float dt;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 newVect;

	[Token(Token = "0x17000067")]
	public Vector3 from
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x6CFCD4", Offset = "0x6CFCD4", VA = "0x6CFCD4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600051F")]
		[Address(RVA = "0x6CFCE0", Offset = "0x6CFCE0", VA = "0x6CFCE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public Vector3 to
	{
		[Token(Token = "0x6000520")]
		[Address(RVA = "0x6CFCEC", Offset = "0x6CFCEC", VA = "0x6CFCEC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000521")]
		[Address(RVA = "0x6CFCF8", Offset = "0x6CFCF8", VA = "0x6CFCF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public ActionMethodDelegate easeInternal
	{
		[Token(Token = "0x6000522")]
		[Address(RVA = "0x6CFD04", Offset = "0x6CFD04", VA = "0x6CFD04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54541C", Offset = "0x54541C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x6CFD0C", Offset = "0x6CFD0C", VA = "0x6CFD0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54542C", Offset = "0x54542C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public ActionMethodDelegate initInternal
	{
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x6CFD14", Offset = "0x6CFD14", VA = "0x6CFD14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54543C", Offset = "0x54543C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x6CFD1C", Offset = "0x6CFD1C", VA = "0x6CFD1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54544C", Offset = "0x54544C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public Transform toTrans
	{
		[Token(Token = "0x6000526")]
		[Address(RVA = "0x6CFD24", Offset = "0x6CFD24", VA = "0x6CFD24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public int uniqueId
	{
		[Token(Token = "0x600052A")]
		[Address(RVA = "0x6D06EC", Offset = "0x6D06EC", VA = "0x6D06EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006D")]
	public int id
	{
		[Token(Token = "0x600052B")]
		[Address(RVA = "0x6D058C", Offset = "0x6D058C", VA = "0x6D058C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006E")]
	public LTDescrOptional optional
	{
		[Token(Token = "0x600052C")]
		[Address(RVA = "0x6D06FC", Offset = "0x6D06FC", VA = "0x6D06FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600052D")]
		[Address(RVA = "0x6D0704", Offset = "0x6D0704", VA = "0x6D0704")]
		set
		{
		}
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x6CFD40", Offset = "0x6CFD40", VA = "0x6CFD40", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x6D059C", Offset = "0x6D059C", VA = "0x6D059C")]
	public LTDescr()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x6D0608", Offset = "0x6D0608", VA = "0x6D0608")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54545C", Offset = "0x54545C")]
	public LTDescr cancel(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x6D070C", Offset = "0x6D070C", VA = "0x6D070C")]
	public void reset()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x6D0800", Offset = "0x6D0800", VA = "0x6D0800")]
	public LTDescr setFollow()
	{
		return null;
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x6D080C", Offset = "0x6D080C", VA = "0x6D080C")]
	public LTDescr setMoveX()
	{
		return null;
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x6D08C8", Offset = "0x6D08C8", VA = "0x6D08C8")]
	public LTDescr setMoveY()
	{
		return null;
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x6D0988", Offset = "0x6D0988", VA = "0x6D0988")]
	public LTDescr setMoveZ()
	{
		return null;
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x6D0A48", Offset = "0x6D0A48", VA = "0x6D0A48")]
	public LTDescr setMoveLocalX()
	{
		return null;
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x6D0B08", Offset = "0x6D0B08", VA = "0x6D0B08")]
	public LTDescr setMoveLocalY()
	{
		return null;
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x6D0BC8", Offset = "0x6D0BC8", VA = "0x6D0BC8")]
	public LTDescr setMoveLocalZ()
	{
		return null;
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x6D0C88", Offset = "0x6D0C88", VA = "0x6D0C88")]
	private void initFromInternal()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x6D0C90", Offset = "0x6D0C90", VA = "0x6D0C90")]
	public LTDescr setOffset(Vector3 offset)
	{
		return null;
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x6D0C9C", Offset = "0x6D0C9C", VA = "0x6D0C9C")]
	public LTDescr setMoveCurved()
	{
		return null;
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x6D0D5C", Offset = "0x6D0D5C", VA = "0x6D0D5C")]
	public LTDescr setMoveCurvedLocal()
	{
		return null;
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x6D0E1C", Offset = "0x6D0E1C", VA = "0x6D0E1C")]
	public LTDescr setMoveSpline()
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x6D0EDC", Offset = "0x6D0EDC", VA = "0x6D0EDC")]
	public LTDescr setMoveSplineLocal()
	{
		return null;
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x6D0F9C", Offset = "0x6D0F9C", VA = "0x6D0F9C")]
	public LTDescr setScaleX()
	{
		return null;
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x6D105C", Offset = "0x6D105C", VA = "0x6D105C")]
	public LTDescr setScaleY()
	{
		return null;
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x6D111C", Offset = "0x6D111C", VA = "0x6D111C")]
	public LTDescr setScaleZ()
	{
		return null;
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x6D11DC", Offset = "0x6D11DC", VA = "0x6D11DC")]
	public LTDescr setRotateX()
	{
		return null;
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x6D129C", Offset = "0x6D129C", VA = "0x6D129C")]
	public LTDescr setRotateY()
	{
		return null;
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x6D135C", Offset = "0x6D135C", VA = "0x6D135C")]
	public LTDescr setRotateZ()
	{
		return null;
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x6D141C", Offset = "0x6D141C", VA = "0x6D141C")]
	public LTDescr setRotateAround()
	{
		return null;
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x6D14DC", Offset = "0x6D14DC", VA = "0x6D14DC")]
	public LTDescr setRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x6D159C", Offset = "0x6D159C", VA = "0x6D159C")]
	public LTDescr setAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x6D165C", Offset = "0x6D165C", VA = "0x6D165C")]
	public LTDescr setTextAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x6D171C", Offset = "0x6D171C", VA = "0x6D171C")]
	public LTDescr setAlphaVertex()
	{
		return null;
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x6D17DC", Offset = "0x6D17DC", VA = "0x6D17DC")]
	public LTDescr setColor()
	{
		return null;
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x6D189C", Offset = "0x6D189C", VA = "0x6D189C")]
	public LTDescr setCallbackColor()
	{
		return null;
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x6D195C", Offset = "0x6D195C", VA = "0x6D195C")]
	public LTDescr setTextColor()
	{
		return null;
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x6D1A1C", Offset = "0x6D1A1C", VA = "0x6D1A1C")]
	public LTDescr setCanvasAlpha()
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x6D1ADC", Offset = "0x6D1ADC", VA = "0x6D1ADC")]
	public LTDescr setCanvasGroupAlpha()
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x6D1B9C", Offset = "0x6D1B9C", VA = "0x6D1B9C")]
	public LTDescr setCanvasColor()
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x6D1C5C", Offset = "0x6D1C5C", VA = "0x6D1C5C")]
	public LTDescr setCanvasMoveX()
	{
		return null;
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x6D1D1C", Offset = "0x6D1D1C", VA = "0x6D1D1C")]
	public LTDescr setCanvasMoveY()
	{
		return null;
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x6D1DDC", Offset = "0x6D1DDC", VA = "0x6D1DDC")]
	public LTDescr setCanvasMoveZ()
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x6D1E9C", Offset = "0x6D1E9C", VA = "0x6D1E9C")]
	private void initCanvasRotateAround()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x6D1EE4", Offset = "0x6D1EE4", VA = "0x6D1EE4")]
	public LTDescr setCanvasRotateAround()
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x6D1FA4", Offset = "0x6D1FA4", VA = "0x6D1FA4")]
	public LTDescr setCanvasRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x6D2064", Offset = "0x6D2064", VA = "0x6D2064")]
	public LTDescr setCanvasPlaySprite()
	{
		return null;
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x6D2124", Offset = "0x6D2124", VA = "0x6D2124")]
	public LTDescr setCanvasMove()
	{
		return null;
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x6D21E4", Offset = "0x6D21E4", VA = "0x6D21E4")]
	public LTDescr setCanvasScale()
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x6D22A4", Offset = "0x6D22A4", VA = "0x6D22A4")]
	public LTDescr setCanvasSizeDelta()
	{
		return null;
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x6D2364", Offset = "0x6D2364", VA = "0x6D2364")]
	private void callback()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x6D23D8", Offset = "0x6D23D8", VA = "0x6D23D8")]
	public LTDescr setCallback()
	{
		return null;
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x6D2508", Offset = "0x6D2508", VA = "0x6D2508")]
	public LTDescr setValue3()
	{
		return null;
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x6D2638", Offset = "0x6D2638", VA = "0x6D2638")]
	public LTDescr setMove()
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x6D26F8", Offset = "0x6D26F8", VA = "0x6D26F8")]
	public LTDescr setMoveLocal()
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x6D27B8", Offset = "0x6D27B8", VA = "0x6D27B8")]
	public LTDescr setMoveToTransform()
	{
		return null;
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x6D2878", Offset = "0x6D2878", VA = "0x6D2878")]
	public LTDescr setRotate()
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x6D2938", Offset = "0x6D2938", VA = "0x6D2938")]
	public LTDescr setRotateLocal()
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x6D29F8", Offset = "0x6D29F8", VA = "0x6D29F8")]
	public LTDescr setScale()
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x6D2AB8", Offset = "0x6D2AB8", VA = "0x6D2AB8")]
	public LTDescr setGUIMove()
	{
		return null;
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x6D2B78", Offset = "0x6D2B78", VA = "0x6D2B78")]
	public LTDescr setGUIMoveMargin()
	{
		return null;
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x6D2C38", Offset = "0x6D2C38", VA = "0x6D2C38")]
	public LTDescr setGUIScale()
	{
		return null;
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x6D2CF8", Offset = "0x6D2CF8", VA = "0x6D2CF8")]
	public LTDescr setGUIAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x6D2DB8", Offset = "0x6D2DB8", VA = "0x6D2DB8")]
	public LTDescr setGUIRotate()
	{
		return null;
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x6D2E78", Offset = "0x6D2E78", VA = "0x6D2E78")]
	public LTDescr setDelayedSound()
	{
		return null;
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x6D2F38", Offset = "0x6D2F38", VA = "0x6D2F38")]
	public LTDescr setTarget(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x6D2F54", Offset = "0x6D2F54", VA = "0x6D2F54")]
	private void init()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x6D318C", Offset = "0x6D318C", VA = "0x6D318C")]
	private void initSpeed()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x6D3240", Offset = "0x6D3240", VA = "0x6D3240")]
	public LTDescr updateNow()
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x6D3264", Offset = "0x6D3264", VA = "0x6D3264")]
	public bool updateInternal()
	{
		return default(bool);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x6D308C", Offset = "0x6D308C", VA = "0x6D308C")]
	public void callOnCompletes()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x6D358C", Offset = "0x6D358C", VA = "0x6D358C")]
	public LTDescr setFromColor(Color col)
	{
		return null;
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x6D35C8", Offset = "0x6D35C8", VA = "0x6D35C8")]
	private static void alphaRecursive(Transform transform, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x6D3A50", Offset = "0x6D3A50", VA = "0x6D3A50")]
	private static void colorRecursive(Transform transform, Color toColor, bool useRecursion = true)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x6D3E0C", Offset = "0x6D3E0C", VA = "0x6D3E0C")]
	private static void alphaRecursive(RectTransform rectTransform, float val, int recursiveLevel = 0)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x6D4224", Offset = "0x6D4224", VA = "0x6D4224")]
	private static void alphaRecursiveSprite(Transform transform, float val)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x6D45E0", Offset = "0x6D45E0", VA = "0x6D45E0")]
	private static void colorRecursiveSprite(Transform transform, Color toColor)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x6D49B4", Offset = "0x6D49B4", VA = "0x6D49B4")]
	private static void colorRecursive(RectTransform rectTransform, Color toColor)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x6D4DC0", Offset = "0x6D4DC0", VA = "0x6D4DC0")]
	private static void textAlphaChildrenRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x6D5148", Offset = "0x6D5148", VA = "0x6D5148")]
	private static void textAlphaRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x6D5490", Offset = "0x6D5490", VA = "0x6D5490")]
	private static void textColorRecursive(Transform trans, Color toColor)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x6D5818", Offset = "0x6D5818", VA = "0x6D5818")]
	private static Color tweenColor(LTDescr tween, float val)
	{
		return default(Color);
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x6D589C", Offset = "0x6D589C", VA = "0x6D589C")]
	public LTDescr pause()
	{
		return null;
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x6D58B4", Offset = "0x6D58B4", VA = "0x6D58B4")]
	public LTDescr resume()
	{
		return null;
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x6D58C0", Offset = "0x6D58C0", VA = "0x6D58C0")]
	public LTDescr setAxis(Vector3 axis)
	{
		return null;
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x6D58E0", Offset = "0x6D58E0", VA = "0x6D58E0")]
	public LTDescr setDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x6D58E8", Offset = "0x6D58E8", VA = "0x6D58E8")]
	public LTDescr setEase(LeanTweenType easeType)
	{
		return null;
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x6D5A24", Offset = "0x6D5A24", VA = "0x6D5A24")]
	public LTDescr setEaseLinear()
	{
		return null;
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x6D6BD8", Offset = "0x6D6BD8", VA = "0x6D6BD8")]
	public LTDescr setEaseSpring()
	{
		return null;
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x6D5B2C", Offset = "0x6D5B2C", VA = "0x6D5B2C")]
	public LTDescr setEaseInQuad()
	{
		return null;
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x6D5AA8", Offset = "0x6D5AA8", VA = "0x6D5AA8")]
	public LTDescr setEaseOutQuad()
	{
		return null;
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x6D5BB0", Offset = "0x6D5BB0", VA = "0x6D5BB0")]
	public LTDescr setEaseInOutQuad()
	{
		return null;
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x6D5C34", Offset = "0x6D5C34", VA = "0x6D5C34")]
	public LTDescr setEaseInCubic()
	{
		return null;
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x6D5CB8", Offset = "0x6D5CB8", VA = "0x6D5CB8")]
	public LTDescr setEaseOutCubic()
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x6D5D3C", Offset = "0x6D5D3C", VA = "0x6D5D3C")]
	public LTDescr setEaseInOutCubic()
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x6D5DC0", Offset = "0x6D5DC0", VA = "0x6D5DC0")]
	public LTDescr setEaseInQuart()
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x6D5E44", Offset = "0x6D5E44", VA = "0x6D5E44")]
	public LTDescr setEaseOutQuart()
	{
		return null;
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x6D5EC8", Offset = "0x6D5EC8", VA = "0x6D5EC8")]
	public LTDescr setEaseInOutQuart()
	{
		return null;
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x6D5F4C", Offset = "0x6D5F4C", VA = "0x6D5F4C")]
	public LTDescr setEaseInQuint()
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x6D5FD0", Offset = "0x6D5FD0", VA = "0x6D5FD0")]
	public LTDescr setEaseOutQuint()
	{
		return null;
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x6D6054", Offset = "0x6D6054", VA = "0x6D6054")]
	public LTDescr setEaseInOutQuint()
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x6D60D8", Offset = "0x6D60D8", VA = "0x6D60D8")]
	public LTDescr setEaseInSine()
	{
		return null;
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x6D615C", Offset = "0x6D615C", VA = "0x6D615C")]
	public LTDescr setEaseOutSine()
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x6D61E0", Offset = "0x6D61E0", VA = "0x6D61E0")]
	public LTDescr setEaseInOutSine()
	{
		return null;
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x6D6264", Offset = "0x6D6264", VA = "0x6D6264")]
	public LTDescr setEaseInExpo()
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x6D62E8", Offset = "0x6D62E8", VA = "0x6D62E8")]
	public LTDescr setEaseOutExpo()
	{
		return null;
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x6D636C", Offset = "0x6D636C", VA = "0x6D636C")]
	public LTDescr setEaseInOutExpo()
	{
		return null;
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x6D63F0", Offset = "0x6D63F0", VA = "0x6D63F0")]
	public LTDescr setEaseInCirc()
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x6D6474", Offset = "0x6D6474", VA = "0x6D6474")]
	public LTDescr setEaseOutCirc()
	{
		return null;
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x6D64F8", Offset = "0x6D64F8", VA = "0x6D64F8")]
	public LTDescr setEaseInOutCirc()
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x6D657C", Offset = "0x6D657C", VA = "0x6D657C")]
	public LTDescr setEaseInBounce()
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x6D6600", Offset = "0x6D6600", VA = "0x6D6600")]
	public LTDescr setEaseOutBounce()
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x6D6684", Offset = "0x6D6684", VA = "0x6D6684")]
	public LTDescr setEaseInOutBounce()
	{
		return null;
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x6D6708", Offset = "0x6D6708", VA = "0x6D6708")]
	public LTDescr setEaseInBack()
	{
		return null;
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x6D678C", Offset = "0x6D678C", VA = "0x6D678C")]
	public LTDescr setEaseOutBack()
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x6D6810", Offset = "0x6D6810", VA = "0x6D6810")]
	public LTDescr setEaseInOutBack()
	{
		return null;
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x6D6894", Offset = "0x6D6894", VA = "0x6D6894")]
	public LTDescr setEaseInElastic()
	{
		return null;
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x6D6918", Offset = "0x6D6918", VA = "0x6D6918")]
	public LTDescr setEaseOutElastic()
	{
		return null;
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x6D699C", Offset = "0x6D699C", VA = "0x6D699C")]
	public LTDescr setEaseInOutElastic()
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x6D6A20", Offset = "0x6D6A20", VA = "0x6D6A20")]
	public LTDescr setEasePunch()
	{
		return null;
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x6D6AFC", Offset = "0x6D6AFC", VA = "0x6D6AFC")]
	public LTDescr setEaseShake()
	{
		return null;
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x6D6C5C", Offset = "0x6D6C5C", VA = "0x6D6C5C")]
	private Vector3 tweenOnCurve()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x6D6D28", Offset = "0x6D6D28", VA = "0x6D6D28")]
	private Vector3 easeInOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x6D6DE8", Offset = "0x6D6DE8", VA = "0x6D6DE8")]
	private Vector3 easeInQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x6D6E70", Offset = "0x6D6E70", VA = "0x6D6E70")]
	private Vector3 easeOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x6D6F10", Offset = "0x6D6F10", VA = "0x6D6F10")]
	private Vector3 easeLinear()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x6D6F94", Offset = "0x6D6F94", VA = "0x6D6F94")]
	private Vector3 easeSpring()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x6D70B8", Offset = "0x6D70B8", VA = "0x6D70B8")]
	private Vector3 easeInCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x6D7144", Offset = "0x6D7144", VA = "0x6D7144")]
	private Vector3 easeOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x6D71F0", Offset = "0x6D71F0", VA = "0x6D71F0")]
	private Vector3 easeInOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x6D72C8", Offset = "0x6D72C8", VA = "0x6D72C8")]
	private Vector3 easeInQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x6D7358", Offset = "0x6D7358", VA = "0x6D7358")]
	private Vector3 easeOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x6D7408", Offset = "0x6D7408", VA = "0x6D7408")]
	private Vector3 easeInOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x6D7504", Offset = "0x6D7504", VA = "0x6D7504")]
	private Vector3 easeInQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x6D75A8", Offset = "0x6D75A8", VA = "0x6D75A8")]
	private Vector3 easeOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x6D765C", Offset = "0x6D765C", VA = "0x6D765C")]
	private Vector3 easeInOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x6D7744", Offset = "0x6D7744", VA = "0x6D7744")]
	private Vector3 easeInSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x6D7824", Offset = "0x6D7824", VA = "0x6D7824")]
	private Vector3 easeOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x6D78F4", Offset = "0x6D78F4", VA = "0x6D78F4")]
	private Vector3 easeInOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x6D7994", Offset = "0x6D7994", VA = "0x6D7994")]
	private Vector3 easeInExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x6D7A2C", Offset = "0x6D7A2C", VA = "0x6D7A2C")]
	private Vector3 easeOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x6D7AC4", Offset = "0x6D7AC4", VA = "0x6D7AC4")]
	private Vector3 easeInOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x6D7BBC", Offset = "0x6D7BBC", VA = "0x6D7BBC")]
	private Vector3 easeInCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x6D7C6C", Offset = "0x6D7C6C", VA = "0x6D7C6C")]
	private Vector3 easeOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x6D7D30", Offset = "0x6D7D30", VA = "0x6D7D30")]
	private Vector3 easeInOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x6D7E4C", Offset = "0x6D7E4C", VA = "0x6D7E4C")]
	private Vector3 easeInBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x6D7F98", Offset = "0x6D7F98", VA = "0x6D7F98")]
	private Vector3 easeOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x6D8158", Offset = "0x6D8158", VA = "0x6D8158")]
	private Vector3 easeInOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x6D8368", Offset = "0x6D8368", VA = "0x6D8368")]
	private Vector3 easeInBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x6D841C", Offset = "0x6D841C", VA = "0x6D841C")]
	private Vector3 easeOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x6D84E4", Offset = "0x6D84E4", VA = "0x6D84E4")]
	private Vector3 easeInOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x6D8624", Offset = "0x6D8624", VA = "0x6D8624")]
	private Vector3 easeInElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x6D8710", Offset = "0x6D8710", VA = "0x6D8710")]
	private Vector3 easeOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x6D87FC", Offset = "0x6D87FC", VA = "0x6D87FC")]
	private Vector3 easeInOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x6D88E8", Offset = "0x6D88E8", VA = "0x6D88E8")]
	public LTDescr setOvershoot(float overshoot)
	{
		return null;
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x6D88F0", Offset = "0x6D88F0", VA = "0x6D88F0")]
	public LTDescr setPeriod(float period)
	{
		return null;
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x6D88F8", Offset = "0x6D88F8", VA = "0x6D88F8")]
	public LTDescr setScale(float scale)
	{
		return null;
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x6D8900", Offset = "0x6D8900", VA = "0x6D8900")]
	public LTDescr setEase(AnimationCurve easeCurve)
	{
		return null;
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x6D89A0", Offset = "0x6D89A0", VA = "0x6D89A0")]
	public LTDescr setTo(Vector3 to)
	{
		return null;
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x6D89D0", Offset = "0x6D89D0", VA = "0x6D89D0")]
	public LTDescr setTo(Transform to)
	{
		return null;
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x6D89EC", Offset = "0x6D89EC", VA = "0x6D89EC")]
	public LTDescr setFrom(Vector3 from)
	{
		return null;
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x6D8ABC", Offset = "0x6D8ABC", VA = "0x6D8ABC")]
	public LTDescr setFrom(float from)
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x6D8AC8", Offset = "0x6D8AC8", VA = "0x6D8AC8")]
	public LTDescr setDiff(Vector3 diff)
	{
		return null;
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x6D8AD4", Offset = "0x6D8AD4", VA = "0x6D8AD4")]
	public LTDescr setHasInitialized(bool has)
	{
		return null;
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x6D8AE0", Offset = "0x6D8AE0", VA = "0x6D8AE0")]
	public LTDescr setId(uint id, uint global_counter)
	{
		return null;
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x6D8AEC", Offset = "0x6D8AEC", VA = "0x6D8AEC")]
	public LTDescr setPassed(float passed)
	{
		return null;
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x6D8AF4", Offset = "0x6D8AF4", VA = "0x6D8AF4")]
	public LTDescr setTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x6D8B10", Offset = "0x6D8B10", VA = "0x6D8B10")]
	public LTDescr setSpeed(float speed)
	{
		return null;
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x6D8B44", Offset = "0x6D8B44", VA = "0x6D8B44")]
	public LTDescr setRepeat(int repeat)
	{
		return null;
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x6D8B98", Offset = "0x6D8B98", VA = "0x6D8B98")]
	public LTDescr setLoopType(LeanTweenType loopType)
	{
		return null;
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x6D8BA0", Offset = "0x6D8BA0", VA = "0x6D8BA0")]
	public LTDescr setUseEstimatedTime(bool useEstimatedTime)
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x6D8BB0", Offset = "0x6D8BB0", VA = "0x6D8BB0")]
	public LTDescr setIgnoreTimeScale(bool useUnScaledTime)
	{
		return null;
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x6D8BC0", Offset = "0x6D8BC0", VA = "0x6D8BC0")]
	public LTDescr setUseFrames(bool useFrames)
	{
		return null;
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x6D8BD0", Offset = "0x6D8BD0", VA = "0x6D8BD0")]
	public LTDescr setUseManualTime(bool useManualTime)
	{
		return null;
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x6D8BE0", Offset = "0x6D8BE0", VA = "0x6D8BE0")]
	public LTDescr setLoopCount(int loopCount)
	{
		return null;
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x6D8BF0", Offset = "0x6D8BF0", VA = "0x6D8BF0")]
	public LTDescr setLoopOnce()
	{
		return null;
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x6D8BFC", Offset = "0x6D8BFC", VA = "0x6D8BFC")]
	public LTDescr setLoopClamp()
	{
		return null;
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x6D8C1C", Offset = "0x6D8C1C", VA = "0x6D8C1C")]
	public LTDescr setLoopClamp(int loops)
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x6D8C24", Offset = "0x6D8C24", VA = "0x6D8C24")]
	public LTDescr setLoopPingPong()
	{
		return null;
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x6D8C44", Offset = "0x6D8C44", VA = "0x6D8C44")]
	public LTDescr setLoopPingPong(int loops)
	{
		return null;
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x6BF51C", Offset = "0x6BF51C", VA = "0x6BF51C")]
	public LTDescr setOnComplete(Action onComplete)
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x6D8C70", Offset = "0x6D8C70", VA = "0x6D8C70")]
	public LTDescr setOnComplete(Action<object> onComplete)
	{
		return null;
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x6D8C94", Offset = "0x6D8C94", VA = "0x6D8C94")]
	public LTDescr setOnComplete(Action<object> onComplete, object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x6D8CCC", Offset = "0x6D8CCC", VA = "0x6D8CCC")]
	public LTDescr setOnCompleteParam(object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x6BF4F8", Offset = "0x6BF4F8", VA = "0x6BF4F8")]
	public LTDescr setOnUpdate(Action<float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x6D8CF0", Offset = "0x6D8CF0", VA = "0x6D8CF0")]
	public LTDescr setOnUpdateRatio(Action<float, float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x6D8D14", Offset = "0x6D8D14", VA = "0x6D8D14")]
	public LTDescr setOnUpdateObject(Action<float, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x6D8D38", Offset = "0x6D8D38", VA = "0x6D8D38")]
	public LTDescr setOnUpdateVector2(Action<Vector2> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x6D8D5C", Offset = "0x6D8D5C", VA = "0x6D8D5C")]
	public LTDescr setOnUpdateVector3(Action<Vector3> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x6D8D80", Offset = "0x6D8D80", VA = "0x6D8D80")]
	public LTDescr setOnUpdateColor(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x6D8DA4", Offset = "0x6D8DA4", VA = "0x6D8DA4")]
	public LTDescr setOnUpdateColor(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x6D8DC8", Offset = "0x6D8DC8", VA = "0x6D8DC8")]
	public LTDescr setOnUpdate(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x6D8DEC", Offset = "0x6D8DEC", VA = "0x6D8DEC")]
	public LTDescr setOnUpdate(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x6D8E10", Offset = "0x6D8E10", VA = "0x6D8E10")]
	public LTDescr setOnUpdate(Action<float, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x6D8E48", Offset = "0x6D8E48", VA = "0x6D8E48")]
	public LTDescr setOnUpdate(Action<Vector3, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x6D8E80", Offset = "0x6D8E80", VA = "0x6D8E80")]
	public LTDescr setOnUpdate(Action<Vector2> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x6D8EB8", Offset = "0x6D8EB8", VA = "0x6D8EB8")]
	public LTDescr setOnUpdate(Action<Vector3> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x6D8EF0", Offset = "0x6D8EF0", VA = "0x6D8EF0")]
	public LTDescr setOnUpdateParam(object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x6D8F0C", Offset = "0x6D8F0C", VA = "0x6D8F0C")]
	public LTDescr setOrientToPath(bool doesOrient)
	{
		return null;
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x6D8FCC", Offset = "0x6D8FCC", VA = "0x6D8FCC")]
	public LTDescr setOrientToPath2d(bool doesOrient2d)
	{
		return null;
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x6D9034", Offset = "0x6D9034", VA = "0x6D9034")]
	public LTDescr setRect(LTRect rect)
	{
		return null;
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x6D9050", Offset = "0x6D9050", VA = "0x6D9050")]
	public LTDescr setRect(Rect rect)
	{
		return null;
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x6D90F4", Offset = "0x6D90F4", VA = "0x6D90F4")]
	public LTDescr setPath(LTBezierPath path)
	{
		return null;
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x6D9110", Offset = "0x6D9110", VA = "0x6D9110")]
	public LTDescr setPoint(Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x6D9130", Offset = "0x6D9130", VA = "0x6D9130")]
	public LTDescr setDestroyOnComplete(bool doesDestroy)
	{
		return null;
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x6D913C", Offset = "0x6D913C", VA = "0x6D913C")]
	public LTDescr setAudio(object audio)
	{
		return null;
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x6D8B8C", Offset = "0x6D8B8C", VA = "0x6D8B8C")]
	public LTDescr setOnCompleteOnRepeat(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x6D9158", Offset = "0x6D9158", VA = "0x6D9158")]
	public LTDescr setOnCompleteOnStart(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x6D9164", Offset = "0x6D9164", VA = "0x6D9164")]
	public LTDescr setRect(RectTransform rect)
	{
		return null;
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x6D916C", Offset = "0x6D916C", VA = "0x6D916C")]
	public LTDescr setSprites(Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x6D9174", Offset = "0x6D9174", VA = "0x6D9174")]
	public LTDescr setFrameRate(float frameRate)
	{
		return null;
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x6D919C", Offset = "0x6D919C", VA = "0x6D919C")]
	public LTDescr setOnStart(Action onStart)
	{
		return null;
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x6D91B8", Offset = "0x6D91B8", VA = "0x6D91B8")]
	public LTDescr setDirection(float direction)
	{
		return null;
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x6D9378", Offset = "0x6D9378", VA = "0x6D9378")]
	public LTDescr setRecursive(bool useRecursion)
	{
		return null;
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x6D9384", Offset = "0x6D9384", VA = "0x6D9384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545494", Offset = "0x545494")]
	private void <setMoveX>b__73_0()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x6D93B8", Offset = "0x6D93B8", VA = "0x6D93B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5454A4", Offset = "0x5454A4")]
	private void <setMoveX>b__73_1()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x6D9430", Offset = "0x6D9430", VA = "0x6D9430")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5454B4", Offset = "0x5454B4")]
	private void <setMoveY>b__74_0()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x6D9464", Offset = "0x6D9464", VA = "0x6D9464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5454C4", Offset = "0x5454C4")]
	private void <setMoveY>b__74_1()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x6D94D8", Offset = "0x6D94D8", VA = "0x6D94D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5454D4", Offset = "0x5454D4")]
	private void <setMoveZ>b__75_0()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x6D950C", Offset = "0x6D950C", VA = "0x6D950C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5454E4", Offset = "0x5454E4")]
	private void <setMoveZ>b__75_1()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x6D9584", Offset = "0x6D9584", VA = "0x6D9584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5454F4", Offset = "0x5454F4")]
	private void <setMoveLocalX>b__76_0()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x6D95B8", Offset = "0x6D95B8", VA = "0x6D95B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545504", Offset = "0x545504")]
	private void <setMoveLocalX>b__76_1()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x6D9630", Offset = "0x6D9630", VA = "0x6D9630")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545514", Offset = "0x545514")]
	private void <setMoveLocalY>b__77_0()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x6D9664", Offset = "0x6D9664", VA = "0x6D9664")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545524", Offset = "0x545524")]
	private void <setMoveLocalY>b__77_1()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x6D96D8", Offset = "0x6D96D8", VA = "0x6D96D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545534", Offset = "0x545534")]
	private void <setMoveLocalZ>b__78_0()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x6D970C", Offset = "0x6D970C", VA = "0x6D970C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545544", Offset = "0x545544")]
	private void <setMoveLocalZ>b__78_1()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x6D9784", Offset = "0x6D9784", VA = "0x6D9784")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545554", Offset = "0x545554")]
	private void <setMoveCurved>b__81_0()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x6D98AC", Offset = "0x6D98AC", VA = "0x6D98AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545564", Offset = "0x545564")]
	private void <setMoveCurvedLocal>b__82_0()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x6D99D4", Offset = "0x6D99D4", VA = "0x6D99D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545574", Offset = "0x545574")]
	private void <setMoveSpline>b__83_0()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x6D9AB8", Offset = "0x6D9AB8", VA = "0x6D9AB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545584", Offset = "0x545584")]
	private void <setMoveSplineLocal>b__84_0()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x6D9B9C", Offset = "0x6D9B9C", VA = "0x6D9B9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545594", Offset = "0x545594")]
	private void <setScaleX>b__85_0()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x6D9BD0", Offset = "0x6D9BD0", VA = "0x6D9BD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5455A4", Offset = "0x5455A4")]
	private void <setScaleX>b__85_1()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x6D9C48", Offset = "0x6D9C48", VA = "0x6D9C48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5455B4", Offset = "0x5455B4")]
	private void <setScaleY>b__86_0()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x6D9C7C", Offset = "0x6D9C7C", VA = "0x6D9C7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5455C4", Offset = "0x5455C4")]
	private void <setScaleY>b__86_1()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x6D9CF0", Offset = "0x6D9CF0", VA = "0x6D9CF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5455D4", Offset = "0x5455D4")]
	private void <setScaleZ>b__87_0()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x6D9D24", Offset = "0x6D9D24", VA = "0x6D9D24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5455E4", Offset = "0x5455E4")]
	private void <setScaleZ>b__87_1()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x6D9D9C", Offset = "0x6D9D9C", VA = "0x6D9D9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5455F4", Offset = "0x5455F4")]
	private void <setRotateX>b__88_0()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x6D9E34", Offset = "0x6D9E34", VA = "0x6D9E34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545604", Offset = "0x545604")]
	private void <setRotateX>b__88_1()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x6D9EAC", Offset = "0x6D9EAC", VA = "0x6D9EAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545614", Offset = "0x545614")]
	private void <setRotateY>b__89_0()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x6D9F44", Offset = "0x6D9F44", VA = "0x6D9F44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545624", Offset = "0x545624")]
	private void <setRotateY>b__89_1()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x6D9FB8", Offset = "0x6D9FB8", VA = "0x6D9FB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545634", Offset = "0x545634")]
	private void <setRotateZ>b__90_0()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x6DA050", Offset = "0x6DA050", VA = "0x6DA050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545644", Offset = "0x545644")]
	private void <setRotateZ>b__90_1()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x6DA0C8", Offset = "0x6DA0C8", VA = "0x6DA0C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545654", Offset = "0x545654")]
	private void <setRotateAround>b__91_0()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x6DA10C", Offset = "0x6DA10C", VA = "0x6DA10C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545664", Offset = "0x545664")]
	private void <setRotateAround>b__91_1()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x6DA2AC", Offset = "0x6DA2AC", VA = "0x6DA2AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545674", Offset = "0x545674")]
	private void <setRotateAroundLocal>b__92_0()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x6DA2F0", Offset = "0x6DA2F0", VA = "0x6DA2F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545684", Offset = "0x545684")]
	private void <setRotateAroundLocal>b__92_1()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x6DA514", Offset = "0x6DA514", VA = "0x6DA514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545694", Offset = "0x545694")]
	private void <setAlpha>b__93_0()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x6DAADC", Offset = "0x6DAADC", VA = "0x6DAADC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5456A4", Offset = "0x5456A4")]
	private void <setAlpha>b__93_2()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x6DAC50", Offset = "0x6DAC50", VA = "0x6DAC50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5456B4", Offset = "0x5456B4")]
	private void <setAlpha>b__93_1()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x6DADD4", Offset = "0x6DADD4", VA = "0x6DADD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5456C4", Offset = "0x5456C4")]
	private void <setTextAlpha>b__94_0()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x6DAE98", Offset = "0x6DAE98", VA = "0x6DAE98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5456D4", Offset = "0x5456D4")]
	private void <setTextAlpha>b__94_1()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x6DAED4", Offset = "0x6DAED4", VA = "0x6DAED4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5456E4", Offset = "0x5456E4")]
	private void <setAlphaVertex>b__95_0()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x6DAF68", Offset = "0x6DAF68", VA = "0x6DAF68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5456F4", Offset = "0x5456F4")]
	private void <setAlphaVertex>b__95_1()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x6DB1B0", Offset = "0x6DB1B0", VA = "0x6DB1B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545704", Offset = "0x545704")]
	private void <setColor>b__96_0()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x6DB734", Offset = "0x6DB734", VA = "0x6DB734")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545714", Offset = "0x545714")]
	private void <setColor>b__96_1()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x6DB93C", Offset = "0x6DB93C", VA = "0x6DB93C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545724", Offset = "0x545724")]
	private void <setCallbackColor>b__97_0()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x6DB950", Offset = "0x6DB950", VA = "0x6DB950")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545734", Offset = "0x545734")]
	private void <setCallbackColor>b__97_1()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x6DBB58", Offset = "0x6DBB58", VA = "0x6DBB58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545744", Offset = "0x545744")]
	private void <setTextColor>b__98_0()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x6DBC20", Offset = "0x6DBC20", VA = "0x6DBC20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545754", Offset = "0x545754")]
	private void <setTextColor>b__98_1()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x6DBD78", Offset = "0x6DBD78", VA = "0x6DBD78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545764", Offset = "0x545764")]
	private void <setCanvasAlpha>b__99_0()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x6DBEAC", Offset = "0x6DBEAC", VA = "0x6DBEAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545774", Offset = "0x545774")]
	private void <setCanvasAlpha>b__99_1()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x6DC040", Offset = "0x6DC040", VA = "0x6DC040")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545784", Offset = "0x545784")]
	private void <setCanvasGroupAlpha>b__100_0()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x6DC0A8", Offset = "0x6DC0A8", VA = "0x6DC0A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545794", Offset = "0x545794")]
	private void <setCanvasGroupAlpha>b__100_1()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x6DC124", Offset = "0x6DC124", VA = "0x6DC124")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5457A4", Offset = "0x5457A4")]
	private void <setCanvasColor>b__101_0()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x6DC254", Offset = "0x6DC254", VA = "0x6DC254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5457B4", Offset = "0x5457B4")]
	private void <setCanvasColor>b__101_1()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x6DC430", Offset = "0x6DC430", VA = "0x6DC430")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5457C4", Offset = "0x5457C4")]
	private void <setCanvasMoveX>b__102_0()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x6DC464", Offset = "0x6DC464", VA = "0x6DC464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5457D4", Offset = "0x5457D4")]
	private void <setCanvasMoveX>b__102_1()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x6DC4CC", Offset = "0x6DC4CC", VA = "0x6DC4CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5457E4", Offset = "0x5457E4")]
	private void <setCanvasMoveY>b__103_0()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x6DC500", Offset = "0x6DC500", VA = "0x6DC500")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5457F4", Offset = "0x5457F4")]
	private void <setCanvasMoveY>b__103_1()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x6DC56C", Offset = "0x6DC56C", VA = "0x6DC56C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545804", Offset = "0x545804")]
	private void <setCanvasMoveZ>b__104_0()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x6DC5A0", Offset = "0x6DC5A0", VA = "0x6DC5A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545814", Offset = "0x545814")]
	private void <setCanvasMoveZ>b__104_1()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x6DC60C", Offset = "0x6DC60C", VA = "0x6DC60C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545824", Offset = "0x545824")]
	private void <setCanvasRotateAround>b__106_0()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x6DC78C", Offset = "0x6DC78C", VA = "0x6DC78C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545834", Offset = "0x545834")]
	private void <setCanvasRotateAroundLocal>b__107_0()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x6DC974", Offset = "0x6DC974", VA = "0x6DC974")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545844", Offset = "0x545844")]
	private void <setCanvasPlaySprite>b__108_0()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x6DC9D4", Offset = "0x6DC9D4", VA = "0x6DC9D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545854", Offset = "0x545854")]
	private void <setCanvasPlaySprite>b__108_1()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x6DCB20", Offset = "0x6DCB20", VA = "0x6DCB20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545864", Offset = "0x545864")]
	private void <setCanvasMove>b__109_0()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x6DCB58", Offset = "0x6DCB58", VA = "0x6DCB58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545874", Offset = "0x545874")]
	private void <setCanvasMove>b__109_1()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x6DCB98", Offset = "0x6DCB98", VA = "0x6DCB98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545884", Offset = "0x545884")]
	private void <setCanvasScale>b__110_0()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x6DCBD0", Offset = "0x6DCBD0", VA = "0x6DCBD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545894", Offset = "0x545894")]
	private void <setCanvasScale>b__110_1()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x6DCC10", Offset = "0x6DCC10", VA = "0x6DCC10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5458A4", Offset = "0x5458A4")]
	private void <setCanvasSizeDelta>b__111_0()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x6DCC48", Offset = "0x6DCC48", VA = "0x6DCC48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5458B4", Offset = "0x5458B4")]
	private void <setCanvasSizeDelta>b__111_1()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x6DCC88", Offset = "0x6DCC88", VA = "0x6DCC88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5458C4", Offset = "0x5458C4")]
	private void <setMove>b__115_0()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x6DCCC0", Offset = "0x6DCCC0", VA = "0x6DCCC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5458D4", Offset = "0x5458D4")]
	private void <setMove>b__115_1()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x6DCD40", Offset = "0x6DCD40", VA = "0x6DCD40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5458E4", Offset = "0x5458E4")]
	private void <setMoveLocal>b__116_0()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x6DCD78", Offset = "0x6DCD78", VA = "0x6DCD78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5458F4", Offset = "0x5458F4")]
	private void <setMoveLocal>b__116_1()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x6DCDF8", Offset = "0x6DCDF8", VA = "0x6DCDF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545904", Offset = "0x545904")]
	private void <setMoveToTransform>b__117_0()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x6DCE30", Offset = "0x6DCE30", VA = "0x6DCE30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545914", Offset = "0x545914")]
	private void <setMoveToTransform>b__117_1()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x6DCF00", Offset = "0x6DCF00", VA = "0x6DCF00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545924", Offset = "0x545924")]
	private void <setRotate>b__118_0()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x6DCFD0", Offset = "0x6DCFD0", VA = "0x6DCFD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545934", Offset = "0x545934")]
	private void <setRotate>b__118_1()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x6DD050", Offset = "0x6DD050", VA = "0x6DD050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545944", Offset = "0x545944")]
	private void <setRotateLocal>b__119_0()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x6DD120", Offset = "0x6DD120", VA = "0x6DD120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545954", Offset = "0x545954")]
	private void <setRotateLocal>b__119_1()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x6DD1A0", Offset = "0x6DD1A0", VA = "0x6DD1A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545964", Offset = "0x545964")]
	private void <setScale>b__120_0()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x6DD1D8", Offset = "0x6DD1D8", VA = "0x6DD1D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545974", Offset = "0x545974")]
	private void <setScale>b__120_1()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x6DD258", Offset = "0x6DD258", VA = "0x6DD258")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545984", Offset = "0x545984")]
	private void <setGUIMove>b__121_0()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x6DD2F0", Offset = "0x6DD2F0", VA = "0x6DD2F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545994", Offset = "0x545994")]
	private void <setGUIMove>b__121_1()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x6DD3CC", Offset = "0x6DD3CC", VA = "0x6DD3CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5459A4", Offset = "0x5459A4")]
	private void <setGUIMoveMargin>b__122_0()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x6DD3FC", Offset = "0x6DD3FC", VA = "0x6DD3FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5459B4", Offset = "0x5459B4")]
	private void <setGUIMoveMargin>b__122_1()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x6DD440", Offset = "0x6DD440", VA = "0x6DD440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5459C4", Offset = "0x5459C4")]
	private void <setGUIScale>b__123_0()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x6DD4D8", Offset = "0x6DD4D8", VA = "0x6DD4D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5459D4", Offset = "0x5459D4")]
	private void <setGUIScale>b__123_1()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x6DD5B4", Offset = "0x6DD5B4", VA = "0x6DD5B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5459E4", Offset = "0x5459E4")]
	private void <setGUIAlpha>b__124_0()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x6DD5E0", Offset = "0x6DD5E0", VA = "0x6DD5E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5459F4", Offset = "0x5459F4")]
	private void <setGUIAlpha>b__124_1()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x6DD620", Offset = "0x6DD620", VA = "0x6DD620")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A04", Offset = "0x545A04")]
	private void <setGUIRotate>b__125_0()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x6DD690", Offset = "0x6DD690", VA = "0x6DD690")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A14", Offset = "0x545A14")]
	private void <setGUIRotate>b__125_1()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x6DD6D0", Offset = "0x6DD6D0", VA = "0x6DD6D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A24", Offset = "0x545A24")]
	private void <setDelayedSound>b__126_0()
	{
	}
}
[Token(Token = "0x2000144")]
public class LTDescrOptional
{
	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54094C", Offset = "0x54094C")]
	private Transform <toTrans>k__BackingField;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54095C", Offset = "0x54095C")]
	private Vector3 <point>k__BackingField;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54096C", Offset = "0x54096C")]
	private Vector3 <axis>k__BackingField;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54097C", Offset = "0x54097C")]
	private float <lastVal>k__BackingField;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54098C", Offset = "0x54098C")]
	private Quaternion <origRotation>k__BackingField;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54099C", Offset = "0x54099C")]
	private LTBezierPath <path>k__BackingField;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5409AC", Offset = "0x5409AC")]
	private LTSpline <spline>k__BackingField;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int initFrameCount;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color color;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5409BC", Offset = "0x5409BC")]
	private LTRect <ltRect>k__BackingField;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5409CC", Offset = "0x5409CC")]
	private Action<float> <onUpdateFloat>k__BackingField;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5409DC", Offset = "0x5409DC")]
	private Action<float, float> <onUpdateFloatRatio>k__BackingField;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5409EC", Offset = "0x5409EC")]
	private Action<float, object> <onUpdateFloatObject>k__BackingField;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5409FC", Offset = "0x5409FC")]
	private Action<Vector2> <onUpdateVector2>k__BackingField;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x540A0C", Offset = "0x540A0C")]
	private Action<Vector3> <onUpdateVector3>k__BackingField;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x540A1C", Offset = "0x540A1C")]
	private Action<Vector3, object> <onUpdateVector3Object>k__BackingField;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x540A2C", Offset = "0x540A2C")]
	private Action<Color> <onUpdateColor>k__BackingField;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x540A3C", Offset = "0x540A3C")]
	private Action<Color, object> <onUpdateColorObject>k__BackingField;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x540A4C", Offset = "0x540A4C")]
	private Action <onComplete>k__BackingField;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x540A5C", Offset = "0x540A5C")]
	private Action<object> <onCompleteObject>k__BackingField;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x540A6C", Offset = "0x540A6C")]
	private object <onCompleteParam>k__BackingField;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x540A7C", Offset = "0x540A7C")]
	private object <onUpdateParam>k__BackingField;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x540A8C", Offset = "0x540A8C")]
	private Action <onStart>k__BackingField;

	[Token(Token = "0x1700006F")]
	public Transform toTrans
	{
		[Token(Token = "0x6000661")]
		[Address(RVA = "0xBA3334", Offset = "0xBA3334", VA = "0xBA3334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A34", Offset = "0x545A34")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000662")]
		[Address(RVA = "0xBA333C", Offset = "0xBA333C", VA = "0xBA333C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A44", Offset = "0x545A44")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public Vector3 point
	{
		[Token(Token = "0x6000663")]
		[Address(RVA = "0xBA3344", Offset = "0xBA3344", VA = "0xBA3344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A54", Offset = "0x545A54")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000664")]
		[Address(RVA = "0xBA3350", Offset = "0xBA3350", VA = "0xBA3350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A64", Offset = "0x545A64")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public Vector3 axis
	{
		[Token(Token = "0x6000665")]
		[Address(RVA = "0xBA335C", Offset = "0xBA335C", VA = "0xBA335C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A74", Offset = "0x545A74")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000666")]
		[Address(RVA = "0xBA3368", Offset = "0xBA3368", VA = "0xBA3368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A84", Offset = "0x545A84")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public float lastVal
	{
		[Token(Token = "0x6000667")]
		[Address(RVA = "0xBA3374", Offset = "0xBA3374", VA = "0xBA3374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A94", Offset = "0x545A94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000668")]
		[Address(RVA = "0xBA337C", Offset = "0xBA337C", VA = "0xBA337C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545AA4", Offset = "0x545AA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public Quaternion origRotation
	{
		[Token(Token = "0x6000669")]
		[Address(RVA = "0xBA3384", Offset = "0xBA3384", VA = "0xBA3384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545AB4", Offset = "0x545AB4")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600066A")]
		[Address(RVA = "0xBA3390", Offset = "0xBA3390", VA = "0xBA3390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545AC4", Offset = "0x545AC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public LTBezierPath path
	{
		[Token(Token = "0x600066B")]
		[Address(RVA = "0xBA339C", Offset = "0xBA339C", VA = "0xBA339C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545AD4", Offset = "0x545AD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600066C")]
		[Address(RVA = "0xBA33A4", Offset = "0xBA33A4", VA = "0xBA33A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545AE4", Offset = "0x545AE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public LTSpline spline
	{
		[Token(Token = "0x600066D")]
		[Address(RVA = "0xBA33AC", Offset = "0xBA33AC", VA = "0xBA33AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545AF4", Offset = "0x545AF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600066E")]
		[Address(RVA = "0xBA33B4", Offset = "0xBA33B4", VA = "0xBA33B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545B04", Offset = "0x545B04")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public LTRect ltRect
	{
		[Token(Token = "0x600066F")]
		[Address(RVA = "0xBA33BC", Offset = "0xBA33BC", VA = "0xBA33BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545B14", Offset = "0x545B14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000670")]
		[Address(RVA = "0xBA33C4", Offset = "0xBA33C4", VA = "0xBA33C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545B24", Offset = "0x545B24")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public Action<float> onUpdateFloat
	{
		[Token(Token = "0x6000671")]
		[Address(RVA = "0xBA33CC", Offset = "0xBA33CC", VA = "0xBA33CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545B34", Offset = "0x545B34")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000672")]
		[Address(RVA = "0xBA33D4", Offset = "0xBA33D4", VA = "0xBA33D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545B44", Offset = "0x545B44")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public Action<float, float> onUpdateFloatRatio
	{
		[Token(Token = "0x6000673")]
		[Address(RVA = "0xBA33DC", Offset = "0xBA33DC", VA = "0xBA33DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545B54", Offset = "0x545B54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000674")]
		[Address(RVA = "0xBA33E4", Offset = "0xBA33E4", VA = "0xBA33E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545B64", Offset = "0x545B64")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public Action<float, object> onUpdateFloatObject
	{
		[Token(Token = "0x6000675")]
		[Address(RVA = "0xBA33EC", Offset = "0xBA33EC", VA = "0xBA33EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545B74", Offset = "0x545B74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000676")]
		[Address(RVA = "0xBA33F4", Offset = "0xBA33F4", VA = "0xBA33F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545B84", Offset = "0x545B84")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public Action<Vector2> onUpdateVector2
	{
		[Token(Token = "0x6000677")]
		[Address(RVA = "0xBA33FC", Offset = "0xBA33FC", VA = "0xBA33FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545B94", Offset = "0x545B94")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000678")]
		[Address(RVA = "0xBA3404", Offset = "0xBA3404", VA = "0xBA3404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545BA4", Offset = "0x545BA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public Action<Vector3> onUpdateVector3
	{
		[Token(Token = "0x6000679")]
		[Address(RVA = "0xBA340C", Offset = "0xBA340C", VA = "0xBA340C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545BB4", Offset = "0x545BB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600067A")]
		[Address(RVA = "0xBA3414", Offset = "0xBA3414", VA = "0xBA3414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545BC4", Offset = "0x545BC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public Action<Vector3, object> onUpdateVector3Object
	{
		[Token(Token = "0x600067B")]
		[Address(RVA = "0xBA341C", Offset = "0xBA341C", VA = "0xBA341C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545BD4", Offset = "0x545BD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600067C")]
		[Address(RVA = "0xBA3424", Offset = "0xBA3424", VA = "0xBA3424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545BE4", Offset = "0x545BE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public Action<Color> onUpdateColor
	{
		[Token(Token = "0x600067D")]
		[Address(RVA = "0xBA342C", Offset = "0xBA342C", VA = "0xBA342C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545BF4", Offset = "0x545BF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600067E")]
		[Address(RVA = "0xBA3434", Offset = "0xBA3434", VA = "0xBA3434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545C04", Offset = "0x545C04")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public Action<Color, object> onUpdateColorObject
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0xBA343C", Offset = "0xBA343C", VA = "0xBA343C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545C14", Offset = "0x545C14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000680")]
		[Address(RVA = "0xBA3444", Offset = "0xBA3444", VA = "0xBA3444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545C24", Offset = "0x545C24")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public Action onComplete
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0xBA344C", Offset = "0xBA344C", VA = "0xBA344C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545C34", Offset = "0x545C34")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000682")]
		[Address(RVA = "0xBA3454", Offset = "0xBA3454", VA = "0xBA3454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545C44", Offset = "0x545C44")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public Action<object> onCompleteObject
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0xBA345C", Offset = "0xBA345C", VA = "0xBA345C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545C54", Offset = "0x545C54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000684")]
		[Address(RVA = "0xBA3464", Offset = "0xBA3464", VA = "0xBA3464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545C64", Offset = "0x545C64")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public object onCompleteParam
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0xBA346C", Offset = "0xBA346C", VA = "0xBA346C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545C74", Offset = "0x545C74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000686")]
		[Address(RVA = "0xBA3474", Offset = "0xBA3474", VA = "0xBA3474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545C84", Offset = "0x545C84")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public object onUpdateParam
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0xBA347C", Offset = "0xBA347C", VA = "0xBA347C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545C94", Offset = "0x545C94")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000688")]
		[Address(RVA = "0xBA3484", Offset = "0xBA3484", VA = "0xBA3484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545CA4", Offset = "0x545CA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public Action onStart
	{
		[Token(Token = "0x6000689")]
		[Address(RVA = "0xBA348C", Offset = "0xBA348C", VA = "0xBA348C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545CB4", Offset = "0x545CB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600068A")]
		[Address(RVA = "0xBA3494", Offset = "0xBA3494", VA = "0xBA3494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545CC4", Offset = "0x545CC4")]
		set
		{
		}
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xBA349C", Offset = "0xBA349C", VA = "0xBA349C")]
	public void reset()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xBA34EC", Offset = "0xBA34EC", VA = "0xBA34EC")]
	public void callOnUpdate(float val, float ratioPassed)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xBA36A8", Offset = "0xBA36A8", VA = "0xBA36A8")]
	public LTDescrOptional()
	{
	}
}
[Token(Token = "0x2000145")]
public class LTSeq
{
	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LTSeq previous;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LTSeq current;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LTDescr tween;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float totalDelay;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeScale;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int debugIter;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public uint counter;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool toggle;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint _id;

	[Token(Token = "0x17000084")]
	public int id
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0xBA63A8", Offset = "0xBA63A8", VA = "0xBA63A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xBA63B8", Offset = "0xBA63B8", VA = "0xBA63B8")]
	public void reset()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xBA63C8", Offset = "0xBA63C8", VA = "0xBA63C8")]
	public void init(uint id, uint global_counter)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xBA63E0", Offset = "0xBA63E0", VA = "0xBA63E0")]
	private LTSeq addOn()
	{
		return null;
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xBA6728", Offset = "0xBA6728", VA = "0xBA6728")]
	private float addPreviousDelays()
	{
		return default(float);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xBA6764", Offset = "0xBA6764", VA = "0xBA6764")]
	public LTSeq append(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xBA678C", Offset = "0xBA678C", VA = "0xBA678C")]
	public LTSeq append(Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xBA6938", Offset = "0xBA6938", VA = "0xBA6938")]
	public LTSeq append(Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xBA6A9C", Offset = "0xBA6A9C", VA = "0xBA6A9C")]
	public LTSeq append(GameObject gameObject, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xBA6BF4", Offset = "0xBA6BF4", VA = "0xBA6BF4")]
	public LTSeq append(GameObject gameObject, Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xBA68D0", Offset = "0xBA68D0", VA = "0xBA68D0")]
	public LTSeq append(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xBA6D6C", Offset = "0xBA6D6C", VA = "0xBA6D6C")]
	public LTSeq insert(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xBA6DB4", Offset = "0xBA6DB4", VA = "0xBA6DB4")]
	public LTSeq setScale(float timeScale)
	{
		return null;
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xBA6DE0", Offset = "0xBA6DE0", VA = "0xBA6DE0")]
	private void setScaleRecursive(LTSeq seq, float timeScale, int count)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xBA6E84", Offset = "0xBA6E84", VA = "0xBA6E84")]
	public LTSeq reverse()
	{
		return null;
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xBA6E88", Offset = "0xBA6E88", VA = "0xBA6E88")]
	public LTSeq()
	{
	}
}
[Token(Token = "0x2000146")]
public class LeanAudioStream
{
	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int position;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip audioClip;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] audioArr;

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xBAF2CC", Offset = "0xBAF2CC", VA = "0xBAF2CC")]
	public LeanAudioStream(float[] audioArr)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xBAFAB4", Offset = "0xBAFAB4", VA = "0xBAFAB4")]
	public void OnAudioRead(float[] data)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xBAFB38", Offset = "0xBAFB38", VA = "0xBAFB38")]
	public void OnAudioSetPosition(int newPosition)
	{
	}
}
[Token(Token = "0x2000147")]
public class LeanAudio
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MIN_FREQEUNCY_PERIOD;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int PROCESSING_ITERATIONS_MAX;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float[] generatedWaveDistances;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int generatedWaveDistancesCount;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float[] longList;

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xBAE624", Offset = "0xBAE624", VA = "0xBAE624")]
	public static LeanAudioOptions options()
	{
		return null;
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xBAE75C", Offset = "0xBAE75C", VA = "0xBAE75C")]
	public static LeanAudioStream createAudioStream(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xBAF204", Offset = "0xBAF204", VA = "0xBAF204")]
	public static AudioClip createAudio(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xBAE838", Offset = "0xBAE838", VA = "0xBAE838")]
	private static int createAudioWave(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options)
	{
		return default(int);
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xBAEC9C", Offset = "0xBAEC9C", VA = "0xBAEC9C")]
	private static AudioClip createAudioFromWave(int waveLength, LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xBAF2F8", Offset = "0xBAF2F8", VA = "0xBAF2F8")]
	private static void OnAudioSetPosition(int newPosition)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xBAF2FC", Offset = "0xBAF2FC", VA = "0xBAF2FC")]
	public static AudioClip generateAudioFromCurve(AnimationCurve curve, int frequencyRate = 44100)
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xBAF480", Offset = "0xBAF480", VA = "0xBAF480")]
	public static AudioSource play(AudioClip audio, float volume)
	{
		return null;
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xBAF670", Offset = "0xBAF670", VA = "0xBAF670")]
	public static AudioSource play(AudioClip audio)
	{
		return null;
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xBAF700", Offset = "0xBAF700", VA = "0xBAF700")]
	public static AudioSource play(AudioClip audio, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xBAF788", Offset = "0xBAF788", VA = "0xBAF788")]
	public static AudioSource play(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xBAF534", Offset = "0xBAF534", VA = "0xBAF534")]
	public static AudioSource playClipAt(AudioClip clip, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xBAF844", Offset = "0xBAF844", VA = "0xBAF844")]
	public static void printOutAudioClip(AudioClip audioClip, ref AnimationCurve curve, float scaleX = 1f)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xBAF9E8", Offset = "0xBAF9E8", VA = "0xBAF9E8")]
	public LeanAudio()
	{
	}
}
[Token(Token = "0x2000148")]
public class LeanAudioOptions
{
	[Token(Token = "0x2000149")]
	public enum LeanAudioWaveStyle
	{
		[Token(Token = "0x4000735")]
		Sine,
		[Token(Token = "0x4000736")]
		Square,
		[Token(Token = "0x4000737")]
		Sawtooth,
		[Token(Token = "0x4000738")]
		Noise
	}

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LeanAudioWaveStyle waveStyle;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] vibrato;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] modulation;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int frequencyRate;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waveNoiseScale;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waveNoiseInfluence;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useSetData;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LeanAudioStream stream;

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xBAE738", Offset = "0xBAE738", VA = "0xBAE738")]
	public LeanAudioOptions()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xBAFA60", Offset = "0xBAFA60", VA = "0xBAFA60")]
	public LeanAudioOptions setFrequency(int frequencyRate)
	{
		return null;
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xBAFA68", Offset = "0xBAFA68", VA = "0xBAFA68")]
	public LeanAudioOptions setVibrato(Vector3[] vibrato)
	{
		return null;
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xBAFA70", Offset = "0xBAFA70", VA = "0xBAFA70")]
	public LeanAudioOptions setWaveSine()
	{
		return null;
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xBAFA78", Offset = "0xBAFA78", VA = "0xBAFA78")]
	public LeanAudioOptions setWaveSquare()
	{
		return null;
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xBAFA84", Offset = "0xBAFA84", VA = "0xBAFA84")]
	public LeanAudioOptions setWaveSawtooth()
	{
		return null;
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xBAFA90", Offset = "0xBAFA90", VA = "0xBAFA90")]
	public LeanAudioOptions setWaveNoise()
	{
		return null;
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xBAFA9C", Offset = "0xBAFA9C", VA = "0xBAFA9C")]
	public LeanAudioOptions setWaveStyle(LeanAudioWaveStyle style)
	{
		return null;
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xBAFAA4", Offset = "0xBAFAA4", VA = "0xBAFAA4")]
	public LeanAudioOptions setWaveNoiseScale(float waveScale)
	{
		return null;
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xBAFAAC", Offset = "0xBAFAAC", VA = "0xBAFAAC")]
	public LeanAudioOptions setWaveNoiseInfluence(float influence)
	{
		return null;
	}
}
[Token(Token = "0x200014A")]
public class LeanSmooth
{
	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xBAFB48", Offset = "0xBAFB48", VA = "0xBAFB48")]
	public static float damp(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xBAFC7C", Offset = "0xBAFC7C", VA = "0xBAFC7C")]
	public static Vector3 damp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xBAFD34", Offset = "0xBAFD34", VA = "0xBAFD34")]
	public static Color damp(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Color);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xBAFE30", Offset = "0xBAFE30", VA = "0xBAFE30")]
	public static float spring(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(float);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xBAFEE4", Offset = "0xBAFEE4", VA = "0xBAFEE4")]
	public static Vector3 spring(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xBAFFB4", Offset = "0xBAFFB4", VA = "0xBAFFB4")]
	public static Color spring(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Color);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xBB00DC", Offset = "0xBB00DC", VA = "0xBB00DC")]
	public static float linear(float current, float target, float moveSpeed, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xBB0154", Offset = "0xBB0154", VA = "0xBB0154")]
	public static Vector3 linear(Vector3 current, Vector3 target, float moveSpeed, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xBB0288", Offset = "0xBB0288", VA = "0xBB0288")]
	public static Color linear(Color current, Color target, float moveSpeed)
	{
		return default(Color);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xBB0400", Offset = "0xBB0400", VA = "0xBB0400")]
	public static float bounceOut(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(float);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xBB04F8", Offset = "0xBB04F8", VA = "0xBB04F8")]
	public static Vector3 bounceOut(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xBB05E0", Offset = "0xBB05E0", VA = "0xBB05E0")]
	public static Color bounceOut(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Color);
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xBB0718", Offset = "0xBB0718", VA = "0xBB0718")]
	public LeanSmooth()
	{
	}
}
[Token(Token = "0x200014B")]
public class LeanTester : MonoBehaviour
{
	[Token(Token = "0x200014C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E028", Offset = "0x53E028")]
	private sealed class <timeoutCheck>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeanTester <>4__this;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <pauseEndTime>5__2;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006CD")]
			[Address(RVA = "0x8041BC", Offset = "0x8041BC", VA = "0x8041BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006CF")]
			[Address(RVA = "0x804204", Offset = "0x804204", VA = "0x804204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x804004", Offset = "0x804004", VA = "0x804004")]
		[DebuggerHidden]
		public <timeoutCheck>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x804030", Offset = "0x804030", VA = "0x804030", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x804034", Offset = "0x804034", VA = "0x804034", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x8041C4", Offset = "0x8041C4", VA = "0x8041C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeout;

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xBB162C", Offset = "0xBB162C", VA = "0xBB162C")]
	public void Start()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xBB1658", Offset = "0xBB1658", VA = "0xBB1658")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x545CD4", Offset = "0x545CD4")]
	private IEnumerator timeoutCheck()
	{
		return null;
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xBB16C4", Offset = "0xBB16C4", VA = "0xBB16C4")]
	public LeanTester()
	{
	}
}
[Token(Token = "0x200014D")]
public class LeanTest
{
	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int expected;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int tests;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int passes;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float timeout;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool timeoutStarted;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool testsFinished;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xBB0720", Offset = "0xBB0720", VA = "0xBB0720")]
	public static void debug(string name, bool didPass, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xBB0798", Offset = "0xBB0798", VA = "0xBB0798")]
	public static void expect(bool didPass, string definition, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xBB14B8", Offset = "0xBB14B8", VA = "0xBB14B8")]
	public static string padRight(int len)
	{
		return null;
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xBB0E24", Offset = "0xBB0E24", VA = "0xBB0E24")]
	public static float printOutLength(string str)
	{
		return default(float);
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xBB1530", Offset = "0xBB1530", VA = "0xBB1530")]
	public static string formatBC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xBB0F5C", Offset = "0xBB0F5C", VA = "0xBB0F5C")]
	public static string formatB(string str)
	{
		return null;
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xBB0FC4", Offset = "0xBB0FC4", VA = "0xBB0FC4")]
	public static string formatC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xBB1158", Offset = "0xBB1158", VA = "0xBB1158")]
	public static void overview()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xBB15A4", Offset = "0xBB15A4", VA = "0xBB15A4")]
	public LeanTest()
	{
	}
}
[Token(Token = "0x200014E")]
public enum TweenAction
{
	[Token(Token = "0x4000745")]
	MOVE_X,
	[Token(Token = "0x4000746")]
	MOVE_Y,
	[Token(Token = "0x4000747")]
	MOVE_Z,
	[Token(Token = "0x4000748")]
	MOVE_LOCAL_X,
	[Token(Token = "0x4000749")]
	MOVE_LOCAL_Y,
	[Token(Token = "0x400074A")]
	MOVE_LOCAL_Z,
	[Token(Token = "0x400074B")]
	MOVE_CURVED,
	[Token(Token = "0x400074C")]
	MOVE_CURVED_LOCAL,
	[Token(Token = "0x400074D")]
	MOVE_SPLINE,
	[Token(Token = "0x400074E")]
	MOVE_SPLINE_LOCAL,
	[Token(Token = "0x400074F")]
	SCALE_X,
	[Token(Token = "0x4000750")]
	SCALE_Y,
	[Token(Token = "0x4000751")]
	SCALE_Z,
	[Token(Token = "0x4000752")]
	ROTATE_X,
	[Token(Token = "0x4000753")]
	ROTATE_Y,
	[Token(Token = "0x4000754")]
	ROTATE_Z,
	[Token(Token = "0x4000755")]
	ROTATE_AROUND,
	[Token(Token = "0x4000756")]
	ROTATE_AROUND_LOCAL,
	[Token(Token = "0x4000757")]
	CANVAS_ROTATEAROUND,
	[Token(Token = "0x4000758")]
	CANVAS_ROTATEAROUND_LOCAL,
	[Token(Token = "0x4000759")]
	CANVAS_PLAYSPRITE,
	[Token(Token = "0x400075A")]
	ALPHA,
	[Token(Token = "0x400075B")]
	TEXT_ALPHA,
	[Token(Token = "0x400075C")]
	CANVAS_ALPHA,
	[Token(Token = "0x400075D")]
	CANVASGROUP_ALPHA,
	[Token(Token = "0x400075E")]
	ALPHA_VERTEX,
	[Token(Token = "0x400075F")]
	COLOR,
	[Token(Token = "0x4000760")]
	CALLBACK_COLOR,
	[Token(Token = "0x4000761")]
	TEXT_COLOR,
	[Token(Token = "0x4000762")]
	CANVAS_COLOR,
	[Token(Token = "0x4000763")]
	CANVAS_MOVE_X,
	[Token(Token = "0x4000764")]
	CANVAS_MOVE_Y,
	[Token(Token = "0x4000765")]
	CANVAS_MOVE_Z,
	[Token(Token = "0x4000766")]
	CALLBACK,
	[Token(Token = "0x4000767")]
	MOVE,
	[Token(Token = "0x4000768")]
	MOVE_LOCAL,
	[Token(Token = "0x4000769")]
	MOVE_TO_TRANSFORM,
	[Token(Token = "0x400076A")]
	ROTATE,
	[Token(Token = "0x400076B")]
	ROTATE_LOCAL,
	[Token(Token = "0x400076C")]
	SCALE,
	[Token(Token = "0x400076D")]
	VALUE3,
	[Token(Token = "0x400076E")]
	GUI_MOVE,
	[Token(Token = "0x400076F")]
	GUI_MOVE_MARGIN,
	[Token(Token = "0x4000770")]
	GUI_SCALE,
	[Token(Token = "0x4000771")]
	GUI_ALPHA,
	[Token(Token = "0x4000772")]
	GUI_ROTATE,
	[Token(Token = "0x4000773")]
	DELAYED_SOUND,
	[Token(Token = "0x4000774")]
	CANVAS_MOVE,
	[Token(Token = "0x4000775")]
	CANVAS_SCALE,
	[Token(Token = "0x4000776")]
	CANVAS_SIZEDELTA,
	[Token(Token = "0x4000777")]
	FOLLOW
}
[Token(Token = "0x200014F")]
public enum LeanTweenType
{
	[Token(Token = "0x4000779")]
	notUsed,
	[Token(Token = "0x400077A")]
	linear,
	[Token(Token = "0x400077B")]
	easeOutQuad,
	[Token(Token = "0x400077C")]
	easeInQuad,
	[Token(Token = "0x400077D")]
	easeInOutQuad,
	[Token(Token = "0x400077E")]
	easeInCubic,
	[Token(Token = "0x400077F")]
	easeOutCubic,
	[Token(Token = "0x4000780")]
	easeInOutCubic,
	[Token(Token = "0x4000781")]
	easeInQuart,
	[Token(Token = "0x4000782")]
	easeOutQuart,
	[Token(Token = "0x4000783")]
	easeInOutQuart,
	[Token(Token = "0x4000784")]
	easeInQuint,
	[Token(Token = "0x4000785")]
	easeOutQuint,
	[Token(Token = "0x4000786")]
	easeInOutQuint,
	[Token(Token = "0x4000787")]
	easeInSine,
	[Token(Token = "0x4000788")]
	easeOutSine,
	[Token(Token = "0x4000789")]
	easeInOutSine,
	[Token(Token = "0x400078A")]
	easeInExpo,
	[Token(Token = "0x400078B")]
	easeOutExpo,
	[Token(Token = "0x400078C")]
	easeInOutExpo,
	[Token(Token = "0x400078D")]
	easeInCirc,
	[Token(Token = "0x400078E")]
	easeOutCirc,
	[Token(Token = "0x400078F")]
	easeInOutCirc,
	[Token(Token = "0x4000790")]
	easeInBounce,
	[Token(Token = "0x4000791")]
	easeOutBounce,
	[Token(Token = "0x4000792")]
	easeInOutBounce,
	[Token(Token = "0x4000793")]
	easeInBack,
	[Token(Token = "0x4000794")]
	easeOutBack,
	[Token(Token = "0x4000795")]
	easeInOutBack,
	[Token(Token = "0x4000796")]
	easeInElastic,
	[Token(Token = "0x4000797")]
	easeOutElastic,
	[Token(Token = "0x4000798")]
	easeInOutElastic,
	[Token(Token = "0x4000799")]
	easeSpring,
	[Token(Token = "0x400079A")]
	easeShake,
	[Token(Token = "0x400079B")]
	punch,
	[Token(Token = "0x400079C")]
	once,
	[Token(Token = "0x400079D")]
	clamp,
	[Token(Token = "0x400079E")]
	pingPong,
	[Token(Token = "0x400079F")]
	animationCurve
}
[Token(Token = "0x2000150")]
public enum LeanProp
{
	[Token(Token = "0x40007A1")]
	position,
	[Token(Token = "0x40007A2")]
	localPosition,
	[Token(Token = "0x40007A3")]
	x,
	[Token(Token = "0x40007A4")]
	y,
	[Token(Token = "0x40007A5")]
	z,
	[Token(Token = "0x40007A6")]
	localX,
	[Token(Token = "0x40007A7")]
	localY,
	[Token(Token = "0x40007A8")]
	localZ,
	[Token(Token = "0x40007A9")]
	scale,
	[Token(Token = "0x40007AA")]
	color
}
[Token(Token = "0x2000151")]
public class LeanTween : MonoBehaviour
{
	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E038", Offset = "0x53E038")]
	private sealed class <>c__DisplayClass193_0
	{
		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x80420C", Offset = "0x80420C", VA = "0x80420C")]
		public <>c__DisplayClass193_0()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x804214", Offset = "0x804214", VA = "0x804214")]
		internal void <followDamp>b__0()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x804324", Offset = "0x804324", VA = "0x804324")]
		internal void <followDamp>b__1()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x804434", Offset = "0x804434", VA = "0x804434")]
		internal void <followDamp>b__2()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x8044E4", Offset = "0x8044E4", VA = "0x8044E4")]
		internal void <followDamp>b__3()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x804594", Offset = "0x804594", VA = "0x804594")]
		internal void <followDamp>b__4()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x804644", Offset = "0x804644", VA = "0x804644")]
		internal void <followDamp>b__5()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x8046F4", Offset = "0x8046F4", VA = "0x8046F4")]
		internal void <followDamp>b__6()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x8047A4", Offset = "0x8047A4", VA = "0x8047A4")]
		internal void <followDamp>b__7()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x804854", Offset = "0x804854", VA = "0x804854")]
		internal void <followDamp>b__8()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x80493C", Offset = "0x80493C", VA = "0x80493C")]
		internal void <followDamp>b__9()
		{
		}
	}

	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E048", Offset = "0x53E048")]
	private sealed class <>c__DisplayClass194_0
	{
		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float friction;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float accelRate;

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x804A94", Offset = "0x804A94", VA = "0x804A94")]
		public <>c__DisplayClass194_0()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x804A9C", Offset = "0x804A9C", VA = "0x804A9C")]
		internal void <followSpring>b__0()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x804BB8", Offset = "0x804BB8", VA = "0x804BB8")]
		internal void <followSpring>b__1()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x804CB4", Offset = "0x804CB4", VA = "0x804CB4")]
		internal void <followSpring>b__2()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x804D70", Offset = "0x804D70", VA = "0x804D70")]
		internal void <followSpring>b__3()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x804E2C", Offset = "0x804E2C", VA = "0x804E2C")]
		internal void <followSpring>b__4()
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x804EE8", Offset = "0x804EE8", VA = "0x804EE8")]
		internal void <followSpring>b__5()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x804FA4", Offset = "0x804FA4", VA = "0x804FA4")]
		internal void <followSpring>b__6()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x805060", Offset = "0x805060", VA = "0x805060")]
		internal void <followSpring>b__7()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x80511C", Offset = "0x80511C", VA = "0x80511C")]
		internal void <followSpring>b__8()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x805218", Offset = "0x805218", VA = "0x805218")]
		internal void <followSpring>b__9()
		{
		}
	}

	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E058", Offset = "0x53E058")]
	private sealed class <>c__DisplayClass195_0
	{
		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float friction;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float accelRate;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float hitDamping;

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x80537C", Offset = "0x80537C", VA = "0x80537C")]
		public <>c__DisplayClass195_0()
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x805384", Offset = "0x805384", VA = "0x805384")]
		internal void <followBounceOut>b__0()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x8054A8", Offset = "0x8054A8", VA = "0x8054A8")]
		internal void <followBounceOut>b__1()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x8055CC", Offset = "0x8055CC", VA = "0x8055CC")]
		internal void <followBounceOut>b__2()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x80568C", Offset = "0x80568C", VA = "0x80568C")]
		internal void <followBounceOut>b__3()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x80574C", Offset = "0x80574C", VA = "0x80574C")]
		internal void <followBounceOut>b__4()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x80580C", Offset = "0x80580C", VA = "0x80580C")]
		internal void <followBounceOut>b__5()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x8058CC", Offset = "0x8058CC", VA = "0x8058CC")]
		internal void <followBounceOut>b__6()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x80598C", Offset = "0x80598C", VA = "0x80598C")]
		internal void <followBounceOut>b__7()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x805A4C", Offset = "0x805A4C", VA = "0x805A4C")]
		internal void <followBounceOut>b__8()
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x805B50", Offset = "0x805B50", VA = "0x805B50")]
		internal void <followBounceOut>b__9()
		{
		}
	}

	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E068", Offset = "0x53E068")]
	private sealed class <>c__DisplayClass196_0
	{
		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float moveSpeed;

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x805CBC", Offset = "0x805CBC", VA = "0x805CBC")]
		public <>c__DisplayClass196_0()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x805CC4", Offset = "0x805CC4", VA = "0x805CC4")]
		internal void <followLinear>b__0()
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x805D88", Offset = "0x805D88", VA = "0x805D88")]
		internal void <followLinear>b__1()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x805E2C", Offset = "0x805E2C", VA = "0x805E2C")]
		internal void <followLinear>b__2()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x805EB0", Offset = "0x805EB0", VA = "0x805EB0")]
		internal void <followLinear>b__3()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x805F30", Offset = "0x805F30", VA = "0x805F30")]
		internal void <followLinear>b__4()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x805FB8", Offset = "0x805FB8", VA = "0x805FB8")]
		internal void <followLinear>b__5()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x80603C", Offset = "0x80603C", VA = "0x80603C")]
		internal void <followLinear>b__6()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x8060BC", Offset = "0x8060BC", VA = "0x8060BC")]
		internal void <followLinear>b__7()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x806144", Offset = "0x806144", VA = "0x806144")]
		internal void <followLinear>b__8()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x8061E8", Offset = "0x8061E8", VA = "0x8061E8")]
		internal void <followLinear>b__9()
		{
		}
	}

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool throwErrors;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float tau;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float PI_DIV2;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTSeq[] sequences;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static LTDescr[] tweens;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int[] tweensFinished;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] tweensFinishedIds;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static LTDescr tween;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int tweenMaxSearch;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int maxTweens;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int maxSequences;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static int frameRendered;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static GameObject _tweenEmpty;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float dtEstimated;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float dtManual;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float dtActual;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static uint global_counter;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static int i;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static int j;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static int finishedCnt;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static AnimationCurve punch;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static AnimationCurve shake;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static int maxTweenReached;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int startSearch;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static LTDescr d;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static Action<LTEvent>[] eventListeners;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static GameObject[] goListeners;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static int eventsMaxSearch;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static int EVENTS_MAX;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int LISTENERS_MAX;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private static int INIT_LISTENERS_MAX;

	[Token(Token = "0x17000087")]
	public static int maxSearch
	{
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xBB17A4", Offset = "0xBB17A4", VA = "0xBB17A4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000088")]
	public static int maxSimulataneousTweens
	{
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xBB1808", Offset = "0xBB1808", VA = "0xBB1808")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000089")]
	public static int tweensRunning
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xBB186C", Offset = "0xBB186C", VA = "0xBB186C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008A")]
	public static GameObject tweenEmpty
	{
		[Token(Token = "0x6000708")]
		[Address(RVA = "0xBB57B4", Offset = "0xBB57B4", VA = "0xBB57B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xBB16D4", Offset = "0xBB16D4", VA = "0xBB16D4")]
	public static void init()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xBB1738", Offset = "0xBB1738", VA = "0xBB1738")]
	public static void init(int maxSimultaneousTweens)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xBB1948", Offset = "0xBB1948", VA = "0xBB1948")]
	public static void init(int maxSimultaneousTweens, int maxSimultaneousSequences)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xBB1DFC", Offset = "0xBB1DFC", VA = "0xBB1DFC")]
	public static void reset()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xBB1F90", Offset = "0xBB1F90", VA = "0xBB1F90")]
	public void Update()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xBB24C4", Offset = "0xBB24C4", VA = "0xBB24C4")]
	private static void onLevelWasLoaded54(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xBB2530", Offset = "0xBB2530", VA = "0xBB2530")]
	private static void internalOnLevelWasLoaded(int lvl)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xBB1FE8", Offset = "0xBB1FE8", VA = "0xBB1FE8")]
	public static void update()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xBB2990", Offset = "0xBB2990", VA = "0xBB2990")]
	public static void removeTween(int i, int uniqueId)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xBB2588", Offset = "0xBB2588", VA = "0xBB2588")]
	public static void removeTween(int i)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xBB2A6C", Offset = "0xBB2A6C", VA = "0xBB2A6C")]
	public static Vector3[] add(Vector3[] a, Vector3 b)
	{
		return null;
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xBB2C10", Offset = "0xBB2C10", VA = "0xBB2C10")]
	public static float closestRot(float from, float to)
	{
		return default(float);
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xBB2C60", Offset = "0xBB2C60", VA = "0xBB2C60")]
	public static void cancelAll()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xBB2CBC", Offset = "0xBB2CBC", VA = "0xBB2CBC")]
	public static void cancelAll(bool callComplete)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xBB2EC0", Offset = "0xBB2EC0", VA = "0xBB2EC0")]
	public static void cancel(GameObject gameObject)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xBB2F24", Offset = "0xBB2F24", VA = "0xBB2F24")]
	public static void cancel(GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xBB30C0", Offset = "0xBB30C0", VA = "0xBB30C0")]
	public static void cancel(RectTransform rect)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xBB3140", Offset = "0xBB3140", VA = "0xBB3140")]
	public static void cancel(GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xBB33F4", Offset = "0xBB33F4", VA = "0xBB33F4")]
	public static void cancel(LTRect ltRect, int uniqueId)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xBB3528", Offset = "0xBB3528", VA = "0xBB3528")]
	public static void cancel(int uniqueId)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xBB358C", Offset = "0xBB358C", VA = "0xBB358C")]
	public static void cancel(int uniqueId, bool callOnComplete)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xBB3824", Offset = "0xBB3824", VA = "0xBB3824")]
	public static LTDescr descr(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xBB3ABC", Offset = "0xBB3ABC", VA = "0xBB3ABC")]
	public static LTDescr description(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xBB3B1C", Offset = "0xBB3B1C", VA = "0xBB3B1C")]
	public static LTDescr[] descriptions([Optional] GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xBB3D90", Offset = "0xBB3D90", VA = "0xBB3D90")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x545D84", Offset = "0x545D84")]
	public static void pause(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xBB3DF0", Offset = "0xBB3DF0", VA = "0xBB3DF0")]
	public static void pause(int uniqueId)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xBB3EF0", Offset = "0xBB3EF0", VA = "0xBB3EF0")]
	public static void pause(GameObject gameObject)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xBB406C", Offset = "0xBB406C", VA = "0xBB406C")]
	public static void pauseAll()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xBB4154", Offset = "0xBB4154", VA = "0xBB4154")]
	public static void resumeAll()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xBB423C", Offset = "0xBB423C", VA = "0xBB423C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x545DBC", Offset = "0x545DBC")]
	public static void resume(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xBB429C", Offset = "0xBB429C", VA = "0xBB429C")]
	public static void resume(int uniqueId)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xBB439C", Offset = "0xBB439C", VA = "0xBB439C")]
	public static void resume(GameObject gameObject)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xBB4518", Offset = "0xBB4518", VA = "0xBB4518")]
	public static bool isPaused([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xBB47DC", Offset = "0xBB47DC", VA = "0xBB47DC")]
	public static bool isPaused(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xBB4A8C", Offset = "0xBB4A8C", VA = "0xBB4A8C")]
	public static bool isPaused(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xBB4858", Offset = "0xBB4858", VA = "0xBB4858")]
	public static bool isTweening([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xBB4C00", Offset = "0xBB4C00", VA = "0xBB4C00")]
	public static bool isTweening(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xBB4C7C", Offset = "0xBB4C7C", VA = "0xBB4C7C")]
	public static bool isTweening(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xBB4DA4", Offset = "0xBB4DA4", VA = "0xBB4DA4")]
	public static bool isTweening(LTRect ltRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xBB4EDC", Offset = "0xBB4EDC", VA = "0xBB4EDC")]
	public static void drawBezierPath(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float arrowSize = 0f, [Optional] Transform arrowTransform)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xBA7278", Offset = "0xBA7278", VA = "0xBA7278")]
	public static object logError(string error)
	{
		return null;
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xBB530C", Offset = "0xBB530C", VA = "0xBB530C")]
	public static LTDescr options(LTDescr seed)
	{
		return null;
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xBB5388", Offset = "0xBB5388", VA = "0xBB5388")]
	public static LTDescr options()
	{
		return null;
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xBB5828", Offset = "0xBB5828", VA = "0xBB5828")]
	private static LTDescr pushNewTween(GameObject gameObject, Vector3 to, float time, LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xBB5948", Offset = "0xBB5948", VA = "0xBB5948")]
	public static LTDescr play(RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xBA6498", Offset = "0xBA6498", VA = "0xBA6498")]
	public static LTSeq sequence(bool initSequence = true)
	{
		return null;
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xBB5A40", Offset = "0xBB5A40", VA = "0xBB5A40")]
	public static LTDescr alpha(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xBB5B10", Offset = "0xBB5B10", VA = "0xBB5B10")]
	public static LTDescr alpha(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xBB5BCC", Offset = "0xBB5BCC", VA = "0xBB5BCC")]
	public static LTDescr textAlpha(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xBB5C7C", Offset = "0xBB5C7C", VA = "0xBB5C7C")]
	public static LTDescr alphaText(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xBB5D2C", Offset = "0xBB5D2C", VA = "0xBB5D2C")]
	public static LTDescr alphaCanvas(CanvasGroup canvasGroup, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xBB5DDC", Offset = "0xBB5DDC", VA = "0xBB5DDC")]
	public static LTDescr alphaVertex(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xBB5E74", Offset = "0xBB5E74", VA = "0xBB5E74")]
	public static LTDescr color(GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xBB5F78", Offset = "0xBB5F78", VA = "0xBB5F78")]
	public static LTDescr textColor(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xBB605C", Offset = "0xBB605C", VA = "0xBB605C")]
	public static LTDescr colorText(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xBA6808", Offset = "0xBA6808", VA = "0xBA6808")]
	public static LTDescr delayedCall(float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xBA69D4", Offset = "0xBA69D4", VA = "0xBA69D4")]
	public static LTDescr delayedCall(float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xBA6B28", Offset = "0xBA6B28", VA = "0xBA6B28")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xBA6CA0", Offset = "0xBA6CA0", VA = "0xBA6CA0")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xBB6140", Offset = "0xBB6140", VA = "0xBB6140")]
	public static LTDescr destroyAfter(LTRect rect, float delayTime)
	{
		return null;
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xBB6218", Offset = "0xBB6218", VA = "0xBB6218")]
	public static LTDescr move(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xBB62C0", Offset = "0xBB62C0", VA = "0xBB62C0")]
	public static LTDescr move(GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xBB6384", Offset = "0xBB6384", VA = "0xBB6384")]
	public static LTDescr move(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xBB6518", Offset = "0xBB6518", VA = "0xBB6518")]
	public static LTDescr move(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xBB65E0", Offset = "0xBB65E0", VA = "0xBB65E0")]
	public static LTDescr move(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xBB66A8", Offset = "0xBB66A8", VA = "0xBB66A8")]
	public static LTDescr moveSpline(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xBB67BC", Offset = "0xBB67BC", VA = "0xBB67BC")]
	public static LTDescr moveSpline(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xBB6884", Offset = "0xBB6884", VA = "0xBB6884")]
	public static LTDescr moveSplineLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xBB6998", Offset = "0xBB6998", VA = "0xBB6998")]
	public static LTDescr move(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xBB6A54", Offset = "0xBB6A54", VA = "0xBB6A54")]
	public static LTDescr moveMargin(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xBB6B10", Offset = "0xBB6B10", VA = "0xBB6B10")]
	public static LTDescr moveX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xBB6BA8", Offset = "0xBB6BA8", VA = "0xBB6BA8")]
	public static LTDescr moveY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xBB6C40", Offset = "0xBB6C40", VA = "0xBB6C40")]
	public static LTDescr moveZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xBB6CD8", Offset = "0xBB6CD8", VA = "0xBB6CD8")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xBB6D80", Offset = "0xBB6D80", VA = "0xBB6D80")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xBB6F14", Offset = "0xBB6F14", VA = "0xBB6F14")]
	public static LTDescr moveLocalX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xBB6FAC", Offset = "0xBB6FAC", VA = "0xBB6FAC")]
	public static LTDescr moveLocalY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xBB7044", Offset = "0xBB7044", VA = "0xBB7044")]
	public static LTDescr moveLocalZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xBB70DC", Offset = "0xBB70DC", VA = "0xBB70DC")]
	public static LTDescr moveLocal(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xBB71A4", Offset = "0xBB71A4", VA = "0xBB71A4")]
	public static LTDescr moveLocal(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xBB726C", Offset = "0xBB726C", VA = "0xBB726C")]
	public static LTDescr move(GameObject gameObject, Transform to, float time)
	{
		return null;
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xBB7338", Offset = "0xBB7338", VA = "0xBB7338")]
	public static LTDescr rotate(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xBB73E0", Offset = "0xBB73E0", VA = "0xBB73E0")]
	public static LTDescr rotate(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xBB7490", Offset = "0xBB7490", VA = "0xBB7490")]
	public static LTDescr rotateLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xBB7538", Offset = "0xBB7538", VA = "0xBB7538")]
	public static LTDescr rotateX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xBB75D0", Offset = "0xBB75D0", VA = "0xBB75D0")]
	public static LTDescr rotateY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xBB7668", Offset = "0xBB7668", VA = "0xBB7668")]
	public static LTDescr rotateZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xBB7700", Offset = "0xBB7700", VA = "0xBB7700")]
	public static LTDescr rotateAround(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xBB77CC", Offset = "0xBB77CC", VA = "0xBB77CC")]
	public static LTDescr rotateAroundLocal(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xBB7898", Offset = "0xBB7898", VA = "0xBB7898")]
	public static LTDescr scale(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xBB7940", Offset = "0xBB7940", VA = "0xBB7940")]
	public static LTDescr scale(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xBB79FC", Offset = "0xBB79FC", VA = "0xBB79FC")]
	public static LTDescr scaleX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xBB7A94", Offset = "0xBB7A94", VA = "0xBB7A94")]
	public static LTDescr scaleY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xBB7B2C", Offset = "0xBB7B2C", VA = "0xBB7B2C")]
	public static LTDescr scaleZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xBB7BC4", Offset = "0xBB7BC4", VA = "0xBB7BC4")]
	public static LTDescr value(GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xBB7C80", Offset = "0xBB7C80", VA = "0xBB7C80")]
	public static LTDescr value(float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xBB7D40", Offset = "0xBB7D40", VA = "0xBB7D40")]
	public static LTDescr value(GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xBB7E24", Offset = "0xBB7E24", VA = "0xBB7E24")]
	public static LTDescr value(GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xBB7F00", Offset = "0xBB7F00", VA = "0xBB7F00")]
	public static LTDescr value(GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xBB8048", Offset = "0xBB8048", VA = "0xBB8048")]
	public static LTDescr value(GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xBB8138", Offset = "0xBB8138", VA = "0xBB8138")]
	public static LTDescr value(GameObject gameObject, Action<float, float> callOnUpdateRatio, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xBB8228", Offset = "0xBB8228", VA = "0xBB8228")]
	public static LTDescr value(GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xBB8368", Offset = "0xBB8368", VA = "0xBB8368")]
	public static LTDescr value(GameObject gameObject, Action<Color, object> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xBB84A8", Offset = "0xBB84A8", VA = "0xBB84A8")]
	public static LTDescr value(GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xBB85A8", Offset = "0xBB85A8", VA = "0xBB85A8")]
	public static LTDescr value(GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xBB86B8", Offset = "0xBB86B8", VA = "0xBB86B8")]
	public static LTDescr value(GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xBB87AC", Offset = "0xBB87AC", VA = "0xBB87AC")]
	public static LTDescr delayedSound(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xBB889C", Offset = "0xBB889C", VA = "0xBB889C")]
	public static LTDescr delayedSound(GameObject gameObject, AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xBB8990", Offset = "0xBB8990", VA = "0xBB8990")]
	public static LTDescr move(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xBB8A60", Offset = "0xBB8A60", VA = "0xBB8A60")]
	public static LTDescr moveX(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xBB8B20", Offset = "0xBB8B20", VA = "0xBB8B20")]
	public static LTDescr moveY(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xBB8BE0", Offset = "0xBB8BE0", VA = "0xBB8BE0")]
	public static LTDescr moveZ(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xBB8CA0", Offset = "0xBB8CA0", VA = "0xBB8CA0")]
	public static LTDescr rotate(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xBB8D7C", Offset = "0xBB8D7C", VA = "0xBB8D7C")]
	public static LTDescr rotate(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xBB8E68", Offset = "0xBB8E68", VA = "0xBB8E68")]
	public static LTDescr rotateAround(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xBB8F5C", Offset = "0xBB8F5C", VA = "0xBB8F5C")]
	public static LTDescr rotateAroundLocal(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xBB9050", Offset = "0xBB9050", VA = "0xBB9050")]
	public static LTDescr scale(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xBB9120", Offset = "0xBB9120", VA = "0xBB9120")]
	public static LTDescr size(RectTransform rectTrans, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xBB91EC", Offset = "0xBB91EC", VA = "0xBB91EC")]
	public static LTDescr alpha(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xBB92AC", Offset = "0xBB92AC", VA = "0xBB92AC")]
	public static LTDescr color(RectTransform rectTrans, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xBB93A0", Offset = "0xBB93A0", VA = "0xBB93A0")]
	public static float tweenOnCurve(LTDescr tweenDescr, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xBB93EC", Offset = "0xBB93EC", VA = "0xBB93EC")]
	public static Vector3 tweenOnCurveVector(LTDescr tweenDescr, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xBB94C8", Offset = "0xBB94C8", VA = "0xBB94C8")]
	public static float easeOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xBB94E0", Offset = "0xBB94E0", VA = "0xBB94E0")]
	public static float easeInQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xBB94F0", Offset = "0xBB94F0", VA = "0xBB94F0")]
	public static float easeInOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xBB9540", Offset = "0xBB9540", VA = "0xBB9540")]
	public static Vector3 easeInOutQuadOpt(Vector3 start, Vector3 diff, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xBB95C0", Offset = "0xBB95C0", VA = "0xBB95C0")]
	public static float linear(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xBB95C8", Offset = "0xBB95C8", VA = "0xBB95C8")]
	public static float clerp(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xBB962C", Offset = "0xBB962C", VA = "0xBB962C")]
	public static float spring(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xBB96E0", Offset = "0xBB96E0", VA = "0xBB96E0")]
	public static float easeInQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xBB96F4", Offset = "0xBB96F4", VA = "0xBB96F4")]
	public static float easeOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xBB9710", Offset = "0xBB9710", VA = "0xBB9710")]
	public static float easeInOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xBB9764", Offset = "0xBB9764", VA = "0xBB9764")]
	public static float easeInOutQuadOpt2(float start, float diffBy2, float val, float val2)
	{
		return default(float);
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xBB979C", Offset = "0xBB979C", VA = "0xBB979C")]
	public static float easeInCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xBB97B4", Offset = "0xBB97B4", VA = "0xBB97B4")]
	public static float easeOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xBB97DC", Offset = "0xBB97DC", VA = "0xBB97DC")]
	public static float easeInOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xBB9834", Offset = "0xBB9834", VA = "0xBB9834")]
	public static float easeInQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xBB9850", Offset = "0xBB9850", VA = "0xBB9850")]
	public static float easeOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xBB9878", Offset = "0xBB9878", VA = "0xBB9878")]
	public static float easeInOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xBB98D4", Offset = "0xBB98D4", VA = "0xBB98D4")]
	public static float easeInQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xBB98F4", Offset = "0xBB98F4", VA = "0xBB98F4")]
	public static float easeOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xBB9924", Offset = "0xBB9924", VA = "0xBB9924")]
	public static float easeInOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xBB998C", Offset = "0xBB998C", VA = "0xBB998C")]
	public static float easeInSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xBB99C8", Offset = "0xBB99C8", VA = "0xBB99C8")]
	public static float easeOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xBB9A00", Offset = "0xBB9A00", VA = "0xBB9A00")]
	public static float easeInOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xBB9A48", Offset = "0xBB9A48", VA = "0xBB9A48")]
	public static float easeInExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xBB9A84", Offset = "0xBB9A84", VA = "0xBB9A84")]
	public static float easeOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xBB9AC0", Offset = "0xBB9AC0", VA = "0xBB9AC0")]
	public static float easeInOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xBB9B34", Offset = "0xBB9B34", VA = "0xBB9B34")]
	public static float easeInCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xBB9B84", Offset = "0xBB9B84", VA = "0xBB9B84")]
	public static float easeOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xBB9BD4", Offset = "0xBB9BD4", VA = "0xBB9BD4")]
	public static float easeInOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xBB9C58", Offset = "0xBB9C58", VA = "0xBB9C58")]
	public static float easeInBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xBB9CEC", Offset = "0xBB9CEC", VA = "0xBB9CEC")]
	public static float easeOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xBB9DB8", Offset = "0xBB9DB8", VA = "0xBB9DB8")]
	public static float easeInOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xBB9E8C", Offset = "0xBB9E8C", VA = "0xBB9E8C")]
	public static float easeInBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xBB9EC0", Offset = "0xBB9EC0", VA = "0xBB9EC0")]
	public static float easeOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xBB9F00", Offset = "0xBB9F00", VA = "0xBB9F00")]
	public static float easeInOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xBB9F98", Offset = "0xBB9F98", VA = "0xBB9F98")]
	public static float easeInElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xBBA078", Offset = "0xBBA078", VA = "0xBBA078")]
	public static float easeOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xBBA14C", Offset = "0xBBA14C", VA = "0xBBA14C")]
	public static float easeInOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xBBA2A8", Offset = "0xBBA2A8", VA = "0xBBA2A8")]
	public static LTDescr followDamp(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f)
	{
		return null;
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xBBA5F0", Offset = "0xBBA5F0", VA = "0xBBA5F0")]
	public static LTDescr followSpring(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xBBA944", Offset = "0xBBA944", VA = "0xBBA944")]
	public static LTDescr followBounceOut(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return null;
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xBBAC88", Offset = "0xBBAC88", VA = "0xBBAC88")]
	public static LTDescr followLinear(Transform trans, Transform target, LeanProp prop, float moveSpeed)
	{
		return null;
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xBBAFAC", Offset = "0xBBAFAC", VA = "0xBBAFAC")]
	public static void addListener(int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xBBB020", Offset = "0xBBB020", VA = "0xBBB020")]
	public static void addListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xBBB500", Offset = "0xBBB500", VA = "0xBBB500")]
	public static bool removeListener(int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xBBB7A8", Offset = "0xBBB7A8", VA = "0xBBB7A8")]
	public static bool removeListener(int eventId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xBBB574", Offset = "0xBBB574", VA = "0xBBB574")]
	public static bool removeListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xBBB870", Offset = "0xBBB870", VA = "0xBBB870")]
	public static void dispatchEvent(int eventId)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xBBB8D4", Offset = "0xBBB8D4", VA = "0xBBB8D4")]
	public static void dispatchEvent(int eventId, object data)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xBBBB14", Offset = "0xBBBB14", VA = "0xBBBB14")]
	public LeanTween()
	{
	}
}
[Token(Token = "0x2000156")]
public class LTUtility
{
	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xBA8350", Offset = "0xBA8350", VA = "0xBA8350")]
	public static Vector3[] reverse(Vector3[] arr)
	{
		return null;
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xBA83F8", Offset = "0xBA83F8", VA = "0xBA83F8")]
	public LTUtility()
	{
	}
}
[Token(Token = "0x2000157")]
public class LTBezier
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float length;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 a;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 aa;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 bb;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 cc;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float len;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] arcLengths;

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x6CEF00", Offset = "0x6CEF00", VA = "0x6CEF00")]
	public LTBezier(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float precision)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x6CF1B0", Offset = "0x6CF1B0", VA = "0x6CF1B0")]
	private float map(float u)
	{
		return default(float);
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x6CF158", Offset = "0x6CF158", VA = "0x6CF158")]
	private Vector3 bezierPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x6CF2DC", Offset = "0x6CF2DC", VA = "0x6CF2DC")]
	public Vector3 point(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000158")]
public class LTBezierPath
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] pts;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float length;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool orientToPath;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool orientToPath2d;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTBezier[] beziers;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] lengthRatio;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentBezier;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previousBezier;

	[Token(Token = "0x1700008B")]
	public float distance
	{
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x6CF6A0", Offset = "0x6CF6A0", VA = "0x6CF6A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x6CF300", Offset = "0x6CF300", VA = "0x6CF300")]
	public LTBezierPath()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x6CF308", Offset = "0x6CF308", VA = "0x6CF308")]
	public LTBezierPath(Vector3[] pts_)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x6CF338", Offset = "0x6CF338", VA = "0x6CF338")]
	public void setPoints(Vector3[] pts_)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x6CF6A8", Offset = "0x6CF6A8", VA = "0x6CF6A8")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x6CF780", Offset = "0x6CF780", VA = "0x6CF780")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x6CF838", Offset = "0x6CF838", VA = "0x6CF838")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x6CF8F0", Offset = "0x6CF8F0", VA = "0x6CF8F0")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x6CF948", Offset = "0x6CF948", VA = "0x6CF948")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x6CF9E8", Offset = "0x6CF9E8", VA = "0x6CF9E8")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x6CFA40", Offset = "0x6CFA40", VA = "0x6CFA40")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x6CFB28", Offset = "0x6CFB28", VA = "0x6CFB28")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x6CFC04", Offset = "0x6CFC04", VA = "0x6CFC04")]
	public float ratioAtPoint(Vector3 pt, float precision = 0.01f)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x2000159")]
public class LTSpline
{
	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int DISTANCE_COUNT;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int SUBLINE_COUNT;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distance;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool constantSpeed;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] pts;

	[NonSerialized]
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] ptsAdj;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ptsAdjLength;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool orientToPath;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool orientToPath2d;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numSections;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currPt;

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xBA6E90", Offset = "0xBA6E90", VA = "0xBA6E90")]
	public LTSpline(Vector3[] pts)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xBA722C", Offset = "0xBA722C", VA = "0xBA722C")]
	public LTSpline(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xBA6ECC", Offset = "0xBA6ECC", VA = "0xBA6ECC")]
	private void init(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xBA7508", Offset = "0xBA7508", VA = "0xBA7508")]
	public Vector3 map(float u)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xBA7340", Offset = "0xBA7340", VA = "0xBA7340")]
	public Vector3 interp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xBA761C", Offset = "0xBA761C", VA = "0xBA761C")]
	public float ratioAtPoint(Vector3 pt)
	{
		return default(float);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xBA76F8", Offset = "0xBA76F8", VA = "0xBA76F8")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xBA7710", Offset = "0xBA7710", VA = "0xBA7710")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xBA77C8", Offset = "0xBA77C8", VA = "0xBA77C8")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xBA791C", Offset = "0xBA791C", VA = "0xBA791C")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xBA7974", Offset = "0xBA7974", VA = "0xBA7974")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xBA7A14", Offset = "0xBA7A14", VA = "0xBA7A14")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xBA7A6C", Offset = "0xBA7A6C", VA = "0xBA7A6C")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xBA7B3C", Offset = "0xBA7B3C", VA = "0xBA7B3C")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xBA7C04", Offset = "0xBA7C04", VA = "0xBA7C04")]
	public void drawGizmo(Color color)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xBA7D68", Offset = "0xBA7D68", VA = "0xBA7D68")]
	public static void drawGizmo(Transform[] arr, Color color)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xBA7FB0", Offset = "0xBA7FB0", VA = "0xBA7FB0")]
	public static void drawLine(Transform[] arr, float width, Color color)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xBA7FC4", Offset = "0xBA7FC4", VA = "0xBA7FC4")]
	public void drawLinesGLLines(Material outlineMaterial, Color color, float width)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xBA81A0", Offset = "0xBA81A0", VA = "0xBA81A0")]
	public Vector3[] generateVectors()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200015A")]
public class LTRect
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rect _rect;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alpha;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotation;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 pivot;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 margin;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rect relativeRect;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool rotateEnabled;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool rotateFinished;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool alphaEnabled;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string labelStr;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LTGUI.Element_Type type;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GUIStyle style;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useColor;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color color;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool fontScaleToFit;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool useSimpleScale;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool sizeByHeight;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture texture;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _id;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public int counter;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool colorTouched;

	[Token(Token = "0x1700008C")]
	public bool hasInitiliazed
	{
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xBA4B14", Offset = "0xBA4B14", VA = "0xBA4B14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008D")]
	public int id
	{
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xBA5364", Offset = "0xBA5364", VA = "0xBA5364")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008E")]
	public float x
	{
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xBA5FCC", Offset = "0xBA5FCC", VA = "0xBA5FCC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xBA5FD8", Offset = "0xBA5FD8", VA = "0xBA5FD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public float y
	{
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xBA5FE4", Offset = "0xBA5FE4", VA = "0xBA5FE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xBA5FF0", Offset = "0xBA5FF0", VA = "0xBA5FF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public float width
	{
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xBA5FFC", Offset = "0xBA5FFC", VA = "0xBA5FFC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xBA6008", Offset = "0xBA6008", VA = "0xBA6008")]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public float height
	{
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xBA6014", Offset = "0xBA6014", VA = "0xBA6014")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xBA6020", Offset = "0xBA6020", VA = "0xBA6020")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public Rect rect
	{
		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xBA4658", Offset = "0xBA4658", VA = "0xBA4658")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xBA602C", Offset = "0xBA602C", VA = "0xBA602C")]
		set
		{
		}
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xBA59B8", Offset = "0xBA59B8", VA = "0xBA59B8")]
	public LTRect()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xBA4CEC", Offset = "0xBA4CEC", VA = "0xBA4CEC")]
	public LTRect(Rect rect)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xBA5AD4", Offset = "0xBA5AD4", VA = "0xBA5AD4")]
	public LTRect(float x, float y, float width, float height)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xBA5BAC", Offset = "0xBA5BAC", VA = "0xBA5BAC")]
	public LTRect(float x, float y, float width, float height, float alpha)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xBA5C8C", Offset = "0xBA5C8C", VA = "0xBA5C8C")]
	public LTRect(float x, float y, float width, float height, float alpha, float rotation)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xBA5370", Offset = "0xBA5370", VA = "0xBA5370")]
	public void setId(int id, int counter)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xBA5A90", Offset = "0xBA5A90", VA = "0xBA5A90")]
	public void reset()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xBA5D84", Offset = "0xBA5D84", VA = "0xBA5D84")]
	public void resetForRotation()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xBA6038", Offset = "0xBA6038", VA = "0xBA6038")]
	public LTRect setStyle(GUIStyle style)
	{
		return null;
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xBA6040", Offset = "0xBA6040", VA = "0xBA6040")]
	public LTRect setFontScaleToFit(bool fontScaleToFit)
	{
		return null;
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xBA604C", Offset = "0xBA604C", VA = "0xBA604C")]
	public LTRect setColor(Color color)
	{
		return null;
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xBA6060", Offset = "0xBA6060", VA = "0xBA6060")]
	public LTRect setAlpha(float alpha)
	{
		return null;
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xBA6068", Offset = "0xBA6068", VA = "0xBA6068")]
	public LTRect setLabel(string str)
	{
		return null;
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xBA6070", Offset = "0xBA6070", VA = "0xBA6070")]
	public LTRect setUseSimpleScale(bool useSimpleScale, Rect relativeRect)
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xBA6084", Offset = "0xBA6084", VA = "0xBA6084")]
	public LTRect setUseSimpleScale(bool useSimpleScale)
	{
		return null;
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xBA60F0", Offset = "0xBA60F0", VA = "0xBA60F0")]
	public LTRect setSizeByHeight(bool sizeByHeight)
	{
		return null;
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xBA60FC", Offset = "0xBA60FC", VA = "0xBA60FC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200015B")]
public class LTEvent
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public object data;

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xBA36B0", Offset = "0xBA36B0", VA = "0xBA36B0")]
	public LTEvent(int id, object data)
	{
	}
}
[Token(Token = "0x200015C")]
public class LTGUI
{
	[Token(Token = "0x200015D")]
	public enum Element_Type
	{
		[Token(Token = "0x4000818")]
		Texture,
		[Token(Token = "0x4000819")]
		Label
	}

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RECT_LEVELS;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int RECTS_PER_LEVEL;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int BUTTONS_MAX;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTRect[] levels;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] levelDepths;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Rect[] buttons;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] buttonLevels;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int[] buttonLastFrame;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static LTRect r;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Color color;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool isGUIEnabled;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static int global_counter;

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xBA36EC", Offset = "0xBA36EC", VA = "0xBA36EC")]
	public static void init()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xBA37D4", Offset = "0xBA37D4", VA = "0xBA37D4")]
	public static void initRectCheck()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xBA3968", Offset = "0xBA3968", VA = "0xBA3968")]
	public static void reset()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xBA3AF4", Offset = "0xBA3AF4", VA = "0xBA3AF4")]
	public static void update(int updateLevel)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xBA48C4", Offset = "0xBA48C4", VA = "0xBA48C4")]
	public static bool checkOnScreen(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xBA49A4", Offset = "0xBA49A4", VA = "0xBA49A4")]
	public static void destroy(int id)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xBA4B24", Offset = "0xBA4B24", VA = "0xBA4B24")]
	public static void destroyAll(int depth)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xBA4C24", Offset = "0xBA4C24", VA = "0xBA4C24")]
	public static LTRect label(Rect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xBA4DB0", Offset = "0xBA4DB0", VA = "0xBA4DB0")]
	public static LTRect label(LTRect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xBA5218", Offset = "0xBA5218", VA = "0xBA5218")]
	public static LTRect texture(Rect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xBA52E0", Offset = "0xBA52E0", VA = "0xBA52E0")]
	public static LTRect texture(LTRect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xBA4E38", Offset = "0xBA4E38", VA = "0xBA4E38")]
	public static LTRect element(LTRect rect, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xBA5378", Offset = "0xBA5378", VA = "0xBA5378")]
	public static bool hasNoOverlap(Rect rect, int depth)
	{
		return default(bool);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xBA56A8", Offset = "0xBA56A8", VA = "0xBA56A8")]
	public static bool pressedWithinRect(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xBA5844", Offset = "0xBA5844", VA = "0xBA5844")]
	public static bool checkWithinRect(Vector2 vec2, Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xBA57C8", Offset = "0xBA57C8", VA = "0xBA57C8")]
	public static Vector2 firstTouch()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xBA5918", Offset = "0xBA5918", VA = "0xBA5918")]
	public LTGUI()
	{
	}
}
[Token(Token = "0x200015E")]
public static class LeanTweenExt
{
	[Token(Token = "0x600080E")]
	[Address(RVA = "0x876D50", Offset = "0x876D50", VA = "0x876D50")]
	public static LTDescr LeanAlpha(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x876DCC", Offset = "0x876DCC", VA = "0x876DCC")]
	public static LTDescr LeanAlphaVertex(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x876E48", Offset = "0x876E48", VA = "0x876E48")]
	public static LTDescr LeanAlpha(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x876EC4", Offset = "0x876EC4", VA = "0x876EC4")]
	public static LTDescr LeanAlpha(this CanvasGroup canvas, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x876F40", Offset = "0x876F40", VA = "0x876F40")]
	public static LTDescr LeanAlphaText(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x876FBC", Offset = "0x876FBC", VA = "0x876FBC")]
	public static void LeanCancel(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x877020", Offset = "0x877020", VA = "0x877020")]
	public static void LeanCancel(this GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x877094", Offset = "0x877094", VA = "0x877094")]
	public static void LeanCancel(this GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x877110", Offset = "0x877110", VA = "0x877110")]
	public static void LeanCancel(this RectTransform rectTransform)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x877174", Offset = "0x877174", VA = "0x877174")]
	public static LTDescr LeanColor(this GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x877218", Offset = "0x877218", VA = "0x877218")]
	public static LTDescr LeanColorText(this RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x8772BC", Offset = "0x8772BC", VA = "0x8772BC")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x877340", Offset = "0x877340", VA = "0x877340")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x8773C4", Offset = "0x8773C4", VA = "0x8773C4")]
	public static bool LeanIsPaused(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x877428", Offset = "0x877428", VA = "0x877428")]
	public static bool LeanIsPaused(this RectTransform rectTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x87748C", Offset = "0x87748C", VA = "0x87748C")]
	public static bool LeanIsTweening(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x8774F0", Offset = "0x8774F0", VA = "0x8774F0")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x877584", Offset = "0x877584", VA = "0x877584")]
	public static LTDescr LeanMove(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x877634", Offset = "0x877634", VA = "0x877634")]
	public static LTDescr LeanMove(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x8776C8", Offset = "0x8776C8", VA = "0x8776C8")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x877754", Offset = "0x877754", VA = "0x877754")]
	public static LTDescr LeanMove(this Transform transform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x8777FC", Offset = "0x8777FC", VA = "0x8777FC")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x877880", Offset = "0x877880", VA = "0x877880")]
	public static LTDescr LeanMove(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x877904", Offset = "0x877904", VA = "0x877904")]
	public static LTDescr LeanMove(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x877988", Offset = "0x877988", VA = "0x877988")]
	public static LTDescr LeanMove(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x877A28", Offset = "0x877A28", VA = "0x877A28")]
	public static LTDescr LeanMove(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x877AC8", Offset = "0x877AC8", VA = "0x877AC8")]
	public static LTDescr LeanMove(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x877B68", Offset = "0x877B68", VA = "0x877B68")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x877BFC", Offset = "0x877BFC", VA = "0x877BFC")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x877C80", Offset = "0x877C80", VA = "0x877C80")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x877D04", Offset = "0x877D04", VA = "0x877D04")]
	public static LTDescr LeanMoveLocal(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x877DB4", Offset = "0x877DB4", VA = "0x877DB4")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x877E54", Offset = "0x877E54", VA = "0x877E54")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x877EF4", Offset = "0x877EF4", VA = "0x877EF4")]
	public static LTDescr LeanMoveLocalX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x877F70", Offset = "0x877F70", VA = "0x877F70")]
	public static LTDescr LeanMoveLocalY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x877FEC", Offset = "0x877FEC", VA = "0x877FEC")]
	public static LTDescr LeanMoveLocalZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x878068", Offset = "0x878068", VA = "0x878068")]
	public static LTDescr LeanMoveLocalX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x878100", Offset = "0x878100", VA = "0x878100")]
	public static LTDescr LeanMoveLocalY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x878198", Offset = "0x878198", VA = "0x878198")]
	public static LTDescr LeanMoveLocalZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x878230", Offset = "0x878230", VA = "0x878230")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x8782B4", Offset = "0x8782B4", VA = "0x8782B4")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x878338", Offset = "0x878338", VA = "0x878338")]
	public static LTDescr LeanMoveSpline(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x8783D8", Offset = "0x8783D8", VA = "0x8783D8")]
	public static LTDescr LeanMoveSpline(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x878478", Offset = "0x878478", VA = "0x878478")]
	public static LTDescr LeanMoveSplineLocal(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x8784FC", Offset = "0x8784FC", VA = "0x8784FC")]
	public static LTDescr LeanMoveSplineLocal(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x87859C", Offset = "0x87859C", VA = "0x87859C")]
	public static LTDescr LeanMoveX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x878618", Offset = "0x878618", VA = "0x878618")]
	public static LTDescr LeanMoveX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x8786B0", Offset = "0x8786B0", VA = "0x8786B0")]
	public static LTDescr LeanMoveX(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x87872C", Offset = "0x87872C", VA = "0x87872C")]
	public static LTDescr LeanMoveY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x8787A8", Offset = "0x8787A8", VA = "0x8787A8")]
	public static LTDescr LeanMoveY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x878840", Offset = "0x878840", VA = "0x878840")]
	public static LTDescr LeanMoveY(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x8788BC", Offset = "0x8788BC", VA = "0x8788BC")]
	public static LTDescr LeanMoveZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x878938", Offset = "0x878938", VA = "0x878938")]
	public static LTDescr LeanMoveZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x8789D0", Offset = "0x8789D0", VA = "0x8789D0")]
	public static LTDescr LeanMoveZ(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x878A4C", Offset = "0x878A4C", VA = "0x878A4C")]
	public static void LeanPause(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x878AB0", Offset = "0x878AB0", VA = "0x878AB0")]
	public static LTDescr LeanPlay(this RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x878B24", Offset = "0x878B24", VA = "0x878B24")]
	public static void LeanResume(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x878B88", Offset = "0x878B88", VA = "0x878B88")]
	public static LTDescr LeanRotate(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x878C1C", Offset = "0x878C1C", VA = "0x878C1C")]
	public static LTDescr LeanRotate(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x878CCC", Offset = "0x878CCC", VA = "0x878CCC")]
	public static LTDescr LeanRotate(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x878D60", Offset = "0x878D60", VA = "0x878D60")]
	public static LTDescr LeanRotateAround(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x878E04", Offset = "0x878E04", VA = "0x878E04")]
	public static LTDescr LeanRotateAround(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x878EC4", Offset = "0x878EC4", VA = "0x878EC4")]
	public static LTDescr LeanRotateAround(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x878F68", Offset = "0x878F68", VA = "0x878F68")]
	public static LTDescr LeanRotateAroundLocal(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x87900C", Offset = "0x87900C", VA = "0x87900C")]
	public static LTDescr LeanRotateAroundLocal(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x8790CC", Offset = "0x8790CC", VA = "0x8790CC")]
	public static LTDescr LeanRotateAroundLocal(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x879170", Offset = "0x879170", VA = "0x879170")]
	public static LTDescr LeanRotateX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x8791EC", Offset = "0x8791EC", VA = "0x8791EC")]
	public static LTDescr LeanRotateX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x879284", Offset = "0x879284", VA = "0x879284")]
	public static LTDescr LeanRotateY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x879300", Offset = "0x879300", VA = "0x879300")]
	public static LTDescr LeanRotateY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x879398", Offset = "0x879398", VA = "0x879398")]
	public static LTDescr LeanRotateZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x879414", Offset = "0x879414", VA = "0x879414")]
	public static LTDescr LeanRotateZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x8794AC", Offset = "0x8794AC", VA = "0x8794AC")]
	public static LTDescr LeanScale(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x879540", Offset = "0x879540", VA = "0x879540")]
	public static LTDescr LeanScale(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x8795F0", Offset = "0x8795F0", VA = "0x8795F0")]
	public static LTDescr LeanScale(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x879684", Offset = "0x879684", VA = "0x879684")]
	public static LTDescr LeanScaleX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x879700", Offset = "0x879700", VA = "0x879700")]
	public static LTDescr LeanScaleX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x879798", Offset = "0x879798", VA = "0x879798")]
	public static LTDescr LeanScaleY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x879814", Offset = "0x879814", VA = "0x879814")]
	public static LTDescr LeanScaleY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x8798AC", Offset = "0x8798AC", VA = "0x8798AC")]
	public static LTDescr LeanScaleZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x879928", Offset = "0x879928", VA = "0x879928")]
	public static LTDescr LeanScaleZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x8799C0", Offset = "0x8799C0", VA = "0x8799C0")]
	public static LTDescr LeanSize(this RectTransform rectTransform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x879A4C", Offset = "0x879A4C", VA = "0x879A4C")]
	public static LTDescr LeanValue(this GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x879B70", Offset = "0x879B70", VA = "0x879B70")]
	public static LTDescr LeanValue(this GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x879BFC", Offset = "0x879BFC", VA = "0x879BFC")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x879CA0", Offset = "0x879CA0", VA = "0x879CA0")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x879D5C", Offset = "0x879D5C", VA = "0x879D5C")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x879DF8", Offset = "0x879DF8", VA = "0x879DF8")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x879E94", Offset = "0x879E94", VA = "0x879E94")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x879F30", Offset = "0x879F30", VA = "0x879F30")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x87A05C", Offset = "0x87A05C", VA = "0x87A05C")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x87A110", Offset = "0x87A110", VA = "0x87A110")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x87A1DC", Offset = "0x87A1DC", VA = "0x87A1DC")]
	public static void LeanSetPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x87A234", Offset = "0x87A234", VA = "0x87A234")]
	public static void LeanSetPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x87A28C", Offset = "0x87A28C", VA = "0x87A28C")]
	public static void LeanSetPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x87A2E4", Offset = "0x87A2E4", VA = "0x87A2E4")]
	public static void LeanSetLocalPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x87A33C", Offset = "0x87A33C", VA = "0x87A33C")]
	public static void LeanSetLocalPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x87A394", Offset = "0x87A394", VA = "0x87A394")]
	public static void LeanSetLocalPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x87A3EC", Offset = "0x87A3EC", VA = "0x87A3EC")]
	public static Color LeanColor(this Transform transform)
	{
		return default(Color);
	}
}
[Token(Token = "0x200015F")]
public class Level : MonoBehaviour
{
	[Token(Token = "0x2000160")]
	public struct MatchResult
	{
		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte starsAchieved;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool newStarsRecord;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float resultValue;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool newResultRecord;

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x80679C", Offset = "0x80679C", VA = "0x80679C")]
		public MatchResult(byte starsAchieved, bool newStarsRecord, float resultValue, bool newResultRecord)
		{
		}
	}

	[Token(Token = "0x2000161")]
	public enum RoomLength : byte
	{
		[Token(Token = "0x400083D")]
		None,
		[Token(Token = "0x400083E")]
		Zero,
		[Token(Token = "0x400083F")]
		One,
		[Token(Token = "0x4000840")]
		Two,
		[Token(Token = "0x4000841")]
		Three,
		[Token(Token = "0x4000842")]
		TwoWithoutFarWall
	}

	[Token(Token = "0x2000162")]
	public enum State : byte
	{
		[Token(Token = "0x4000844")]
		Locked,
		[Token(Token = "0x4000845")]
		Available
	}

	[Token(Token = "0x2000163")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E088", Offset = "0x53E088")]
	private sealed class <Ticking>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level <>4__this;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000880")]
			[Address(RVA = "0x80674C", Offset = "0x80674C", VA = "0x80674C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000882")]
			[Address(RVA = "0x806794", Offset = "0x806794", VA = "0x806794", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x806300", Offset = "0x806300", VA = "0x806300")]
		[DebuggerHidden]
		public <Ticking>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x80632C", Offset = "0x80632C", VA = "0x80632C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x806330", Offset = "0x806330", VA = "0x806330", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x806754", Offset = "0x806754", VA = "0x806754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540ABC", Offset = "0x540ABC")]
	public int id;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public State state;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int starsForUnlock;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StarRequirement[] starReqs;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ShowOnly]
	public byte bestStarsResult;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeLimit;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool bonusesAllowed;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540B04", Offset = "0x540B04")]
	public LevelType type;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RoomLength roomLength;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RoomPanelType[] excludedPanels;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BestResultGoal bestResultGoalType;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float bestResult;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540B3C", Offset = "0x540B3C")]
	public Brick[] bricks;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Turret[] turrets;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540B74", Offset = "0x540B74")]
	public WorldEnvironment worldStyle;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public SkyStyle skyStyle;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int energyGridColorId;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public EnergyGridTextureStyle energyGridTextureStyle;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[SerializeField]
	private DefenseWall.PositionType defenseWallPositionType;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540BBC", Offset = "0x540BBC")]
	public bool brickResurrection;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float brickResurrectionInterval;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float brickResurrectionDelayAfterDeath;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private int minDeadBrickNumber;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float lastResurrectionTime;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine tickingRoutine;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540C24", Offset = "0x540C24")]
	public bool usingLeaderboard;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int minStartsForResultUpload;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private string leaderboardApiName;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private LeaderboardData.ResultUnits resultUnits;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public LeaderboardData leaderboard;

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x87A458", Offset = "0x87A458", VA = "0x87A458")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x87AAA8", Offset = "0x87AAA8", VA = "0x87AAA8")]
	public void InitializeLeaderboard()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x87AB24", Offset = "0x87AB24", VA = "0x87AB24")]
	public MatchResult CalculateMatchResult()
	{
		return default(MatchResult);
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x87ADD4", Offset = "0x87ADD4", VA = "0x87ADD4")]
	public void Finalize()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x87AEAC", Offset = "0x87AEAC", VA = "0x87AEAC")]
	public string RequirementToString(StarRequirement starRequirement)
	{
		return null;
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x87AEDC", Offset = "0x87AEDC", VA = "0x87AEDC")]
	public string[] RequirementsToString()
	{
		return null;
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x87AA3C", Offset = "0x87AA3C", VA = "0x87AA3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x546424", Offset = "0x546424")]
	private IEnumerator Ticking()
	{
		return null;
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x87A8DC", Offset = "0x87A8DC", VA = "0x87A8DC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x546484", Offset = "0x546484")]
	private void SetLevelEnvironment()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x87B194", Offset = "0x87B194", VA = "0x87B194")]
	public void SetLoadedData(float loadedBestResult)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x87B1C0", Offset = "0x87B1C0", VA = "0x87B1C0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5464BC", Offset = "0x5464BC")]
	private void ResetBestResult()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x87B1E0", Offset = "0x87B1E0", VA = "0x87B1E0")]
	public Level()
	{
	}
}
[Token(Token = "0x2000164")]
public enum LevelType
{
	[Token(Token = "0x400084A")]
	DestroyAllBricks,
	[Token(Token = "0x400084B")]
	DestroyMoreBricksInTime,
	[Token(Token = "0x400084C")]
	HitBalls,
	[Token(Token = "0x400084D")]
	MPScores
}
[Token(Token = "0x2000165")]
public enum BestResultGoal : byte
{
	[Token(Token = "0x400084F")]
	LessTime,
	[Token(Token = "0x4000850")]
	LessMissedBalls,
	[Token(Token = "0x4000851")]
	MoreDestroyedBricks,
	[Token(Token = "0x4000852")]
	MoreScores
}
[Token(Token = "0x2000166")]
public class LevelRoomManager : MonoBehaviour
{
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E098", Offset = "0x53E098")]
	private sealed class <>c__DisplayClass53_0
	{
		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnergyGrid grid;

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x8067B8", Offset = "0x8067B8", VA = "0x8067B8")]
		public <>c__DisplayClass53_0()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x8067C0", Offset = "0x8067C0", VA = "0x8067C0")]
		internal void <AnimatingEnergyGrid>b__0(float value)
		{
		}
	}

	[Token(Token = "0x2000168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E0A8", Offset = "0x53E0A8")]
	private sealed class <AnimatingEnergyGrid>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelRoomManager <>4__this;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000899")]
			[Address(RVA = "0x806AE8", Offset = "0x806AE8", VA = "0x806AE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600089B")]
			[Address(RVA = "0x806B30", Offset = "0x806B30", VA = "0x806B30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x8067EC", Offset = "0x8067EC", VA = "0x8067EC")]
		[DebuggerHidden]
		public <AnimatingEnergyGrid>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x806818", Offset = "0x806818", VA = "0x806818", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x80681C", Offset = "0x80681C", VA = "0x80681C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x806AF0", Offset = "0x806AF0", VA = "0x806AF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelRoomManager instance;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540C7C", Offset = "0x540C7C")]
	private RoomSection[] sections;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject aheadSection1;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject aheadSection2;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject finalSectionClosed;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject finalSectionOpened;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector3 finalSectionPositionL1;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector3 finalSectionPositionL2;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 finalSectionPositionL3;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private RoomPanel[] panels;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540D48", Offset = "0x540D48")]
	private GameObject wallsL2;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject wallsL3;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject leftColliderWall;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject rightColliderWall;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject topColliderWall;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject bottomColliderWall;

	[Token(Token = "0x4000863")]
	private const float colliderWallScale1 = 0.33f;

	[Token(Token = "0x4000864")]
	private const float colliderWallScale2 = 0.66f;

	[Token(Token = "0x4000865")]
	private const float colliderWallScale3 = 1f;

	[Token(Token = "0x4000866")]
	private const float colliderWallPos1 = 2.15f;

	[Token(Token = "0x4000867")]
	private const float colliderWallPos2 = 3.8f;

	[Token(Token = "0x4000868")]
	private const float colliderWallPos3 = 5.5f;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540DE4", Offset = "0x540DE4")]
	public Transform ballStartPoint;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject playerFloor1;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject playerFloor2;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform playerPoint1;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform playerPoint2;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540E1C", Offset = "0x540E1C")]
	[SerializeField]
	private MeshRenderer[] aheadGrids;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private MeshRenderer[] leftRightGrids;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private MeshRenderer[] bottomTopFarGrids;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public EnergyGridsPack currentEnergyGridPack;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540E88", Offset = "0x540E88")]
	private GameObject nearBottomBalkForEmptyLevels;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540ED4", Offset = "0x540ED4")]
	private GameObject light1;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject light2;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject light3;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject light4;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject light5;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540F60", Offset = "0x540F60")]
	[SerializeField]
	private EnergyGridTextureStyle testEnergyGridStyle;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float time;

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x87A6E8", Offset = "0x87A6E8", VA = "0x87A6E8")]
	public void SetupRoom(Level level)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x87C6FC", Offset = "0x87C6FC", VA = "0x87C6FC")]
	public void SetupForMultiplayerGame()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x87B66C", Offset = "0x87B66C", VA = "0x87B66C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x546544", Offset = "0x546544")]
	private void SetupRoom1()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x87BC10", Offset = "0x87BC10", VA = "0x87BC10")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x54657C", Offset = "0x54657C")]
	private void SetupRoom2()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x87BFBC", Offset = "0x87BFBC", VA = "0x87BFBC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5465B4", Offset = "0x5465B4")]
	private void SetupRoom2Opened()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x87C368", Offset = "0x87C368", VA = "0x87C368")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5465EC", Offset = "0x5465EC")]
	private void SetupRoom3()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x87C730", Offset = "0x87C730", VA = "0x87C730")]
	public void SwitchLight1()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x87C770", Offset = "0x87C770", VA = "0x87C770")]
	public void SwitchLight2()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x87C7B0", Offset = "0x87C7B0", VA = "0x87C7B0")]
	public void SwitchLight3()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x87C7F0", Offset = "0x87C7F0", VA = "0x87C7F0")]
	public void SwitchLight4()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x87C830", Offset = "0x87C830", VA = "0x87C830")]
	public void SwitchLight5()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x87AFD8", Offset = "0x87AFD8", VA = "0x87AFD8")]
	public void SetEnergyGridPack(EnergyGridTextureStyle energyGridTextureStyle)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x87C870", Offset = "0x87C870", VA = "0x87C870")]
	public void SetEnergyGridPack(EnergyGridsPack energyGridPack)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x87C8F0", Offset = "0x87C8F0", VA = "0x87C8F0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x546624", Offset = "0x546624")]
	private void EditorTest_SetEnergyGridStyle()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x87CADC", Offset = "0x87CADC", VA = "0x87CADC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x54665C", Offset = "0x54665C")]
	private void EditorTest_AnimateEnergyGrid()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x87CB08", Offset = "0x87CB08", VA = "0x87CB08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x546694", Offset = "0x546694")]
	private IEnumerator AnimatingEnergyGrid()
	{
		return null;
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x87CB74", Offset = "0x87CB74", VA = "0x87CB74")]
	public LevelRoomManager()
	{
	}
}
[Token(Token = "0x2000169")]
public class Loader : MonoBehaviour
{
	[Token(Token = "0x200016A")]
	private struct SettingsSaveData
	{
	}

	[Token(Token = "0x200016B")]
	public enum StartType
	{
		[Token(Token = "0x400088F")]
		Normal,
		[Token(Token = "0x4000890")]
		DoNothing,
		[Token(Token = "0x4000891")]
		StartGameplay
	}

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540FAC", Offset = "0x540FAC")]
	public StartType startType;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool loadPlayerPrefs;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540FE4", Offset = "0x540FE4")]
	[SerializeField]
	private GameManager gameManager;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VrManager vrManager;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameSettings _gameSettings;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EffectManager _effectManager;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SoundManager soundManager;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SaveLoadManager saveLoadManager;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private EasyObjectPool easyObjectPool;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LevelRoomManager roomManager;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private MyNetworkManager networkManager;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SimpleExample _pimaxSimpleExample;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private EnergyGridManager _energyGridManager;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private WorldManager _worldManager;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UI ui;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5410F0", Offset = "0x5410F0")]
	public TMP_Text _console;

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x87E54C", Offset = "0x87E54C", VA = "0x87E54C")]
	private void Start()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x87E664", Offset = "0x87E664", VA = "0x87E664")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x546744", Offset = "0x546744")]
	public void SetupManagersLinks()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x87C9F4", Offset = "0x87C9F4", VA = "0x87C9F4")]
	public static void SetupLinks()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x87E868", Offset = "0x87E868", VA = "0x87E868")]
	public Loader()
	{
	}
}
[Token(Token = "0x200016C")]
public class LogAnywhere : MonoBehaviour
{
	[Token(Token = "0x200016D")]
	private enum LogDestination : byte
	{
		[Token(Token = "0x4000897")]
		None,
		[Token(Token = "0x4000898")]
		File,
		[Token(Token = "0x4000899")]
		TMP_TextLabel
	}

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LogDestination logDestination;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541138", Offset = "0x541138")]
	[SerializeField]
	private TMP_Text tmpText;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool logOnlyIfConsoleIsOpen;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string filename;

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x88264C", Offset = "0x88264C", VA = "0x88264C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x882798", Offset = "0x882798", VA = "0x882798")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x882814", Offset = "0x882814", VA = "0x882814")]
	private void LogHandler(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x8828A4", Offset = "0x8828A4", VA = "0x8828A4")]
	private void LogToFile(string logString)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x882A84", Offset = "0x882A84", VA = "0x882A84")]
	private void LogToTMP_TextLabel(string logString)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x882C6C", Offset = "0x882C6C", VA = "0x882C6C")]
	public LogAnywhere()
	{
	}
}
[Token(Token = "0x200016E")]
public class MainMenu : MonoBehaviour
{
	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x882CC0", Offset = "0x882CC0", VA = "0x882CC0")]
	public void btnConnectToPC()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x882CC4", Offset = "0x882CC4", VA = "0x882CC4")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x200016F")]
public class EditorManager : MonoBehaviour
{
	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x8D05F4", Offset = "0x8D05F4", VA = "0x8D05F4")]
	public EditorManager()
	{
	}
}
[Token(Token = "0x2000170")]
public class EffectManager : MonoBehaviour
{
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E0B8", Offset = "0x53E0B8")]
	private sealed class <WanderLightRoutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectManager <>4__this;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x7FFF80", Offset = "0x7FFF80", VA = "0x7FFF80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0x7FFFC8", Offset = "0x7FFFC8", VA = "0x7FFFC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x7FFE5C", Offset = "0x7FFE5C", VA = "0x7FFE5C")]
		[DebuggerHidden]
		public <WanderLightRoutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x7FFE88", Offset = "0x7FFE88", VA = "0x7FFE88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x7FFE8C", Offset = "0x7FFE8C", VA = "0x7FFE8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x7FFF88", Offset = "0x7FFF88", VA = "0x7FFF88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E0C8", Offset = "0x53E0C8")]
	private sealed class <SwitchingOnGrid>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectManager <>4__this;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x7FFE0C", Offset = "0x7FFE0C", VA = "0x7FFE0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0x7FFE54", Offset = "0x7FFE54", VA = "0x7FFE54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x7FFB68", Offset = "0x7FFB68", VA = "0x7FFB68")]
		[DebuggerHidden]
		public <SwitchingOnGrid>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x7FFB94", Offset = "0x7FFB94", VA = "0x7FFB94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x7FFB98", Offset = "0x7FFB98", VA = "0x7FFB98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x7FFE14", Offset = "0x7FFE14", VA = "0x7FFE14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E0D8", Offset = "0x53E0D8")]
	private sealed class <GridBlinking>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectManager <>4__this;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x7FFB18", Offset = "0x7FFB18", VA = "0x7FFB18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0x7FFB60", Offset = "0x7FFB60", VA = "0x7FFB60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x7FF7C8", Offset = "0x7FF7C8", VA = "0x7FF7C8")]
		[DebuggerHidden]
		public <GridBlinking>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x7FF7F4", Offset = "0x7FF7F4", VA = "0x7FF7F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x7FF7F8", Offset = "0x7FF7F8", VA = "0x7FF7F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x7FFB20", Offset = "0x7FFB20", VA = "0x7FFB20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EffectManager instance;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541194", Offset = "0x541194")]
	[SerializeField]
	private Material skyBoxMat;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool skyRotation;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float skyRotSpeed;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float skyBoxAngle;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541200", Offset = "0x541200")]
	private EnergyLight wanderLight;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float wanderLightInterval;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float wanderLightDuration;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float wanderLightLastTime;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float wanderLightNextTime;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine wanderLightRoutine;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54125C", Offset = "0x54125C")]
	[SerializeField]
	private Material[] energyGridMaterials;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material energyBorderMaterial;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SpriteRenderer colorHolder1;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float gridSwitchOnTime;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Color[] energyColors;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[ShowOnly]
	public Color energyGridColor;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[ShowOnly]
	public Color energyLightColor;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color defenseWallEnergyLightColor;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541308", Offset = "0x541308")]
	private Material[] mats;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Color[] defEmissions;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541364", Offset = "0x541364")]
	private PostProcessVolume ppVolume;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private PostProcessLayer ppLayer;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private PostProcessProfile[] ppProfiles;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5413D0", Offset = "0x5413D0")]
	[SerializeField]
	private Material[] skyMats;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private ParticleSystem firework;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color someTestColor;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private ParticleSystem wind;

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x8D0604", Offset = "0x8D0604", VA = "0x8D0604")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x8D0754", Offset = "0x8D0754", VA = "0x8D0754")]
	public void StartWanderLightRoutine()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x8D080C", Offset = "0x8D080C", VA = "0x8D080C")]
	public void StopWanderLightRoutine()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x8D07A0", Offset = "0x8D07A0", VA = "0x8D07A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54677C", Offset = "0x54677C")]
	private IEnumerator WanderLightRoutine()
	{
		return null;
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x8D0820", Offset = "0x8D0820", VA = "0x8D0820")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5467DC", Offset = "0x5467DC")]
	public void LaunchWanderLight()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x8D0A44", Offset = "0x8D0A44", VA = "0x8D0A44")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x546814", Offset = "0x546814")]
	public void SwitchOffGridImmediately()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x8D0B10", Offset = "0x8D0B10", VA = "0x8D0B10")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x54684C", Offset = "0x54684C")]
	public void SwitchOnEnergyGrid()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x8D0B3C", Offset = "0x8D0B3C", VA = "0x8D0B3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x546884", Offset = "0x546884")]
	private IEnumerator SwitchingOnGrid()
	{
		return null;
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x8D0BA8", Offset = "0x8D0BA8", VA = "0x8D0BA8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5468E4", Offset = "0x5468E4")]
	private void GridBlink()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x8D0BD4", Offset = "0x8D0BD4", VA = "0x8D0BD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54691C", Offset = "0x54691C")]
	private IEnumerator GridBlinking()
	{
		return null;
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x8D0C40", Offset = "0x8D0C40", VA = "0x8D0C40")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x54697C", Offset = "0x54697C")]
	private void Editor_BakeEmissions()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x8D0D40", Offset = "0x8D0D40", VA = "0x8D0D40")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5469B4", Offset = "0x5469B4")]
	public void SetRandomVisualStyle()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x8D0E3C", Offset = "0x8D0E3C", VA = "0x8D0E3C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5469EC", Offset = "0x5469EC")]
	public void SwitchOffPostProcessing()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x8D0F18", Offset = "0x8D0F18", VA = "0x8D0F18")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x546A24", Offset = "0x546A24")]
	public void SelectRandomEnergyColor()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x8D0FAC", Offset = "0x8D0FAC", VA = "0x8D0FAC")]
	public void SetEnergyColor(int energyColorIndex)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x8D10B0", Offset = "0x8D10B0", VA = "0x8D10B0")]
	public Color GetEnergyGridColor(int energyColorIndex)
	{
		return default(Color);
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x8D112C", Offset = "0x8D112C", VA = "0x8D112C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x546A5C", Offset = "0x546A5C")]
	public void SetRandomSky()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x8D1180", Offset = "0x8D1180", VA = "0x8D1180")]
	public void SetSkyColor(int skyColorIndex)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x8D11CC", Offset = "0x8D11CC", VA = "0x8D11CC")]
	public void PlayFireWork()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x8D11EC", Offset = "0x8D11EC", VA = "0x8D11EC")]
	public void StopFireWork()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x8D120C", Offset = "0x8D120C", VA = "0x8D120C")]
	public void StartWind(Vector3 dir)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x8D12E0", Offset = "0x8D12E0", VA = "0x8D12E0")]
	public void StopWind()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x8D1300", Offset = "0x8D1300", VA = "0x8D1300")]
	public EffectManager()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x8D1308", Offset = "0x8D1308", VA = "0x8D1308")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546A94", Offset = "0x546A94")]
	private void <LaunchWanderLight>b__32_0()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x8D1338", Offset = "0x8D1338", VA = "0x8D1338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546AA4", Offset = "0x546AA4")]
	private void <SwitchingOnGrid>b__35_0(Color c)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x8D1408", Offset = "0x8D1408", VA = "0x8D1408")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546AB4", Offset = "0x546AB4")]
	private void <GridBlinking>b__37_0(Color c)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x8D14D8", Offset = "0x8D14D8", VA = "0x8D14D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546AC4", Offset = "0x546AC4")]
	private void <GridBlinking>b__37_1(Color c)
	{
	}
}
[Token(Token = "0x2000174")]
public class ManagerBaseClass : MonoBehaviour
{
	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x882CCC", Offset = "0x882CCC", VA = "0x882CCC", Slot = "4")]
	public virtual void InitialSetup()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x882CD0", Offset = "0x882CD0", VA = "0x882CD0")]
	public ManagerBaseClass()
	{
	}
}
[Token(Token = "0x2000175")]
public class SoundManager : ManagerBaseClass
{
	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoundManager instance;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool soundsEnabled;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool musicEnabled;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54143C", Offset = "0x54143C")]
	public AudioSource musicAS;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource longLoopSoundAS;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource[] soundAS;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5414A8", Offset = "0x5414A8")]
	[SerializeField]
	private AudioClip[] musicClips;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ShowOnly]
	[SerializeField]
	private int musicIndex;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54152C", Offset = "0x54152C")]
	[SerializeField]
	private AudioClip sound_Click;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip sound_Error;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip sound_MagicSmall;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip sound_MagicBig;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5415A8", Offset = "0x5415A8")]
	private AudioClip[] otherSoundClips;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float musicRestartTime;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float musicSilentDuration;

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x8669C8", Offset = "0x8669C8", VA = "0x8669C8", Slot = "4")]
	public override void InitialSetup()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x8669D0", Offset = "0x8669D0", VA = "0x8669D0")]
	public void MusicToggle(bool enable)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x866A28", Offset = "0x866A28", VA = "0x866A28")]
	public void PlaySound(int id)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x866A70", Offset = "0x866A70", VA = "0x866A70")]
	public void PlaySound(int id, bool randomPitch)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x866A30", Offset = "0x866A30", VA = "0x866A30")]
	public void PlaySound(int id, float volume)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x866A7C", Offset = "0x866A7C", VA = "0x866A7C")]
	public void PlaySound(int id, float volume, bool randomPitch)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x866BDC", Offset = "0x866BDC", VA = "0x866BDC")]
	public void PlaySound(AudioClip clip)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x866BE8", Offset = "0x866BE8", VA = "0x866BE8")]
	public void PlaySound(AudioClip clip, float volume)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x866BF0", Offset = "0x866BF0", VA = "0x866BF0")]
	public void PlaySound(AudioClip clip, bool randomPitch)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x866ABC", Offset = "0x866ABC", VA = "0x866ABC")]
	public void PlaySound(AudioClip clip, float volume, bool randomPitch)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x866C80", Offset = "0x866C80", VA = "0x866C80")]
	public void PlayMusic()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x866D18", Offset = "0x866D18", VA = "0x866D18")]
	public void PlayMusic(int id)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x866D94", Offset = "0x866D94", VA = "0x866D94")]
	public void StopMusic()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x866DB0", Offset = "0x866DB0", VA = "0x866DB0")]
	public bool musicIsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x866DCC", Offset = "0x866DCC", VA = "0x866DCC")]
	public void PlayLoopSound(int id, float volume)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x866E68", Offset = "0x866E68", VA = "0x866E68")]
	public void PlayLoopSound(int id)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x866E7C", Offset = "0x866E7C", VA = "0x866E7C")]
	public void StopLoopSound()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x866E98", Offset = "0x866E98", VA = "0x866E98")]
	public void StopAllSounds()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x866BFC", Offset = "0x866BFC", VA = "0x866BFC")]
	private AudioSource GetFreeSoundAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x866F20", Offset = "0x866F20", VA = "0x866F20")]
	private AudioClip GetRandomMusicTrack()
	{
		return null;
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x866F74", Offset = "0x866F74", VA = "0x866F74")]
	public void CheckMusic()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x866FE8", Offset = "0x866FE8", VA = "0x866FE8")]
	public void ClickSound()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x866FF8", Offset = "0x866FF8", VA = "0x866FF8")]
	public void ErrorSound()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x867008", Offset = "0x867008", VA = "0x867008")]
	public void LittleMagicSound()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x867018", Offset = "0x867018", VA = "0x867018")]
	public void MediumMagicSound()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x867028", Offset = "0x867028", VA = "0x867028")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x2000176")]
public class UI : MonoBehaviour
{
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E0E8", Offset = "0x53E0E8")]
	private sealed class <TimerRoutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UI <>4__this;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x1275FD8", Offset = "0x1275FD8", VA = "0x1275FD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0x1276020", Offset = "0x1276020", VA = "0x1276020", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x1275ED0", Offset = "0x1275ED0", VA = "0x1275ED0")]
		[DebuggerHidden]
		public <TimerRoutine>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x1275EFC", Offset = "0x1275EFC", VA = "0x1275EFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x1275F00", Offset = "0x1275F00", VA = "0x1275F00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x1275FE0", Offset = "0x1275FE0", VA = "0x1275FE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UI instance;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5415F4", Offset = "0x5415F4")]
	public MainMenu mainMenu;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SettingScreen settingScreen;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PauseScreen pauseScreen;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ResultPanel resultScreen;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LevelsScreen levelsScreen;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PerkScreen perkScreen;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RacketScreen racketScreen;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BallScreen ballScreen;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DemoVersionWarning demoVersionWarning;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject[] viewFadeBlockers;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material viewFadeMaterial;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TMP_Text console;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TMP_Text stateMonitor;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LeaderboardPanel leaderboardPanel;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54168C", Offset = "0x54168C")]
	public TMP_Text ballsCount;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_Text debugInfoLabel_1;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TMP_Text debugInfoLabel_2;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TMP_Text debugInfoLabel_3;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TMP_Text debugInfoLabel_4;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TMP_Text timerLabel;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TMP_Text bricksLabel;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TMP_Text scoresLabel;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Coroutine timerRoutine;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject inGameInfoPanel1;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GoalPanel[] levelGoalPanels;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject inGameGoalPanel;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject inGameInfoPanel;

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x873A24", Offset = "0x873A24", VA = "0x873A24")]
	public void ShowLevelsScreen()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x862A74", Offset = "0x862A74", VA = "0x862A74")]
	public void CloseAllMenus()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x873B14", Offset = "0x873B14", VA = "0x873B14")]
	public void MenuButtonIsPressed()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x873BDC", Offset = "0x873BDC", VA = "0x873BDC")]
	public void MainMenu()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x873C6C", Offset = "0x873C6C", VA = "0x873C6C")]
	private void ShowInGameMenu()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x873C88", Offset = "0x873C88", VA = "0x873C88")]
	public void ShowInGameUI()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x873AC4", Offset = "0x873AC4", VA = "0x873AC4")]
	private void HideInGameUI()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x873CD8", Offset = "0x873CD8", VA = "0x873CD8")]
	public void ShowResultScreen(Level.MatchResult matchResult)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x873DF4", Offset = "0x873DF4", VA = "0x873DF4")]
	public void ShowSettingScreen()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x873E84", Offset = "0x873E84", VA = "0x873E84")]
	public void ShowPerkScreen()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x873F24", Offset = "0x873F24", VA = "0x873F24")]
	public void ShowRacketScreen()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x873FA4", Offset = "0x873FA4", VA = "0x873FA4")]
	public void ShowBallScreen()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x874024", Offset = "0x874024", VA = "0x874024")]
	public void Restart()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x87407C", Offset = "0x87407C", VA = "0x87407C")]
	private void PlaceInFrontOfPlayerFace(GameObject window)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x8741F8", Offset = "0x8741F8", VA = "0x8741F8")]
	public void RefreshLevelScreen()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x874254", Offset = "0x874254", VA = "0x874254")]
	public void RefreshBallsCount()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x874444", Offset = "0x874444", VA = "0x874444")]
	public void RefreshBricksCount()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x874574", Offset = "0x874574", VA = "0x874574")]
	public void StartTimerRoutine()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x8745C0", Offset = "0x8745C0", VA = "0x8745C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x546BC4", Offset = "0x546BC4")]
	private IEnumerator TimerRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x87462C", Offset = "0x87462C", VA = "0x87462C")]
	public void RefreshTimerLabel()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x8748BC", Offset = "0x8748BC", VA = "0x8748BC")]
	public void RefreshScoresLabel()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x874964", Offset = "0x874964", VA = "0x874964")]
	public void RefreshScoresLabel(int newScores)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x8749F8", Offset = "0x8749F8", VA = "0x8749F8")]
	public void FadeView()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x874B4C", Offset = "0x874B4C", VA = "0x874B4C")]
	public void UnfadeView(float time)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x874CC8", Offset = "0x874CC8", VA = "0x874CC8")]
	public void UnfadeViewImmediately()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x874E1C", Offset = "0x874E1C", VA = "0x874E1C")]
	public void RefreshLevelGoal()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x874EE4", Offset = "0x874EE4", VA = "0x874EE4")]
	public void LogToConsole(string text)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x874F40", Offset = "0x874F40", VA = "0x874F40")]
	public void RefreshStateMonitor(string text)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x874F64", Offset = "0x874F64", VA = "0x874F64")]
	public void QuitApplication()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x874F6C", Offset = "0x874F6C", VA = "0x874F6C")]
	public UI()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x874F74", Offset = "0x874F74", VA = "0x874F74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546C24", Offset = "0x546C24")]
	private void <UnfadeView>b__51_0(float value)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x875010", Offset = "0x875010", VA = "0x875010")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546C34", Offset = "0x546C34")]
	private void <UnfadeView>b__51_1()
	{
	}
}
[Token(Token = "0x2000178")]
public static class ExtensionMethods
{
	[Token(Token = "0x6000918")]
	[Address(RVA = "0x8D1EA0", Offset = "0x8D1EA0", VA = "0x8D1EA0")]
	public static void LookAt2D(this Transform who, Transform target)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x8D1F54", Offset = "0x8D1F54", VA = "0x8D1F54")]
	public static void LookAt2D(this Transform who, GameObject target)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x8D2014", Offset = "0x8D2014", VA = "0x8D2014")]
	public static void LookAt2D(this Transform who, Vector3 point)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x8D20B4", Offset = "0x8D20B4", VA = "0x8D20B4")]
	public static void LookAt2D(this Transform who, Vector2 point)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x8D2160", Offset = "0x8D2160", VA = "0x8D2160")]
	public static void LookAt2D(this Transform who, Transform target, AxisType faceAxis)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x8D2250", Offset = "0x8D2250", VA = "0x8D2250")]
	public static void LookAtDirection2D(this Transform who, Vector2 direction)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x8D22E0", Offset = "0x8D22E0", VA = "0x8D22E0")]
	public static void LookAtDirection2D(this Transform who, Vector2 direction, AxisType faceAxis)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x8D23B0", Offset = "0x8D23B0", VA = "0x8D23B0")]
	public static float AngleToPoint2D(this Transform who, Vector2 targetPoint)
	{
		return default(float);
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x8D2414", Offset = "0x8D2414", VA = "0x8D2414")]
	public static float AngleToDirection2D(this Transform who, Vector2 direction)
	{
		return default(float);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x8D2440", Offset = "0x8D2440", VA = "0x8D2440")]
	public static Color ChangeAlpha(this Color color, float alpha)
	{
		return default(Color);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x8D2448", Offset = "0x8D2448", VA = "0x8D2448")]
	public static bool OppositeSign(this float a, float b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000923")]
	public static T GetRandom<T>(this T[] array)
	{
		return (T)null;
	}

	[Token(Token = "0x6000924")]
	public static T GetRandom<T>(this List<T> list)
	{
		return (T)null;
	}

	[Token(Token = "0x6000925")]
	public static List<T> CreateOrClear<T>(this List<T> list)
	{
		return null;
	}

	[Token(Token = "0x6000926")]
	public static List<T> CreateOrClear<T>(this List<T> list, int listSize)
	{
		return null;
	}

	[Token(Token = "0x6000927")]
	public static T NearestToPosition<T>(this T[] array, Vector3 position) where T : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	public static T NearestToPosition<T>(this List<T> list, Vector3 position) where T : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x8D2478", Offset = "0x8D2478", VA = "0x8D2478")]
	public static GameObject NearestToPosition(this GameObject[] array, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x8D25D0", Offset = "0x8D25D0", VA = "0x8D25D0")]
	public static GameObject NearestToPosition(this List<GameObject> list, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x8D27FC", Offset = "0x8D27FC", VA = "0x8D27FC")]
	public static Transform NearestToPosition(this Transform[] array, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x8D2954", Offset = "0x8D2954", VA = "0x8D2954")]
	public static Transform NearestToPosition(this List<Transform> list, Vector3 position)
	{
		return null;
	}
}
[Token(Token = "0x2000179")]
public enum AxisType
{
	[Token(Token = "0x40008F0")]
	X_Red,
	[Token(Token = "0x40008F1")]
	Y_Green,
	[Token(Token = "0x40008F2")]
	Z_Blue
}
[Token(Token = "0x200017A")]
public class MartyshColors : MonoBehaviour
{
	[Token(Token = "0x600092D")]
	[Address(RVA = "0x882CD8", Offset = "0x882CD8", VA = "0x882CD8")]
	public static Color RandomNiceColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x882E88", Offset = "0x882E88", VA = "0x882E88")]
	public static Color RandomLightTint()
	{
		return default(Color);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x88303C", Offset = "0x88303C", VA = "0x88303C")]
	public static Color RedYellowGreenGradient(float part)
	{
		return default(Color);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x8830E4", Offset = "0x8830E4", VA = "0x8830E4")]
	public static Color GreenYellowRedGradient(float part)
	{
		return default(Color);
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x8830F0", Offset = "0x8830F0", VA = "0x8830F0")]
	private Color WhiteYellowRedGradient(float part)
	{
		return default(Color);
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x88319C", Offset = "0x88319C", VA = "0x88319C")]
	public static Color TripleColorGradient(Color a, Color b, Color c, float part)
	{
		return default(Color);
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x8831FC", Offset = "0x8831FC", VA = "0x8831FC")]
	public static bool EqualColors(Color c1, Color c2, float filterThreshold)
	{
		return default(bool);
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x883234", Offset = "0x883234", VA = "0x883234")]
	public static bool EqualColors(Color c1, Color c2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x883270", Offset = "0x883270", VA = "0x883270")]
	public static void TestConsoleColors()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x8833E4", Offset = "0x8833E4", VA = "0x8833E4")]
	public MartyshColors()
	{
	}
}
[Token(Token = "0x200017B")]
public class MathM
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float Pi2;

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x8833EC", Offset = "0x8833EC", VA = "0x8833EC")]
	public static int RandomSign()
	{
		return default(int);
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x883414", Offset = "0x883414", VA = "0x883414")]
	public MathM()
	{
	}
}
[Serializable]
[Token(Token = "0x200017C")]
public class ProbabilityPool<T> where T : IComparable
{
	[Serializable]
	[Token(Token = "0x200017D")]
	public struct PoolElement<V>
	{
		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public V value;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int probability;

		[Token(Token = "0x6000946")]
		public PoolElement(V value, int prob)
		{
		}
	}

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T defaultValue;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PoolElement<T>[] pool;

	[Token(Token = "0x600093A")]
	public ProbabilityPool(T defaultValue, int count)
	{
	}

	[Token(Token = "0x600093B")]
	public ProbabilityPool(T defaultValue)
	{
	}

	[Token(Token = "0x600093C")]
	public ProbabilityPool()
	{
	}

	[Token(Token = "0x600093D")]
	public ProbabilityPool(T defaultValue, params PoolElement<T>[] values)
	{
	}

	[Token(Token = "0x600093E")]
	public ProbabilityPool(params PoolElement<T>[] values)
	{
	}

	[Token(Token = "0x600093F")]
	public T GetRandomValueFromPool()
	{
		return (T)null;
	}

	[Token(Token = "0x6000940")]
	public virtual void SetProbability(T value, int probability)
	{
	}

	[Token(Token = "0x6000941")]
	public void MakeDeepCopy(ProbabilityPool<T> otherPool)
	{
	}

	[Token(Token = "0x6000942")]
	public int GetProbability(T value)
	{
		return default(int);
	}

	[Token(Token = "0x6000943")]
	public bool CopyProbability(T value, ProbabilityPool<T> otherPool)
	{
		return default(bool);
	}

	[Token(Token = "0x6000944")]
	public void Normalize()
	{
	}

	[Token(Token = "0x6000945")]
	public void ShowPoolInfo()
	{
	}
}
[Token(Token = "0x200017E")]
public class MyNetworkManager : NetworkManager
{
	[Token(Token = "0x200017F")]
	public enum NetworkRole : byte
	{
		[Token(Token = "0x40008FF")]
		None,
		[Token(Token = "0x4000900")]
		Server,
		[Token(Token = "0x4000901")]
		Client
	}

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MyNetworkManager instance;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool allowChangeOwner;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<NetworkConnection> conns;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5416F4", Offset = "0x5416F4")]
	private NetworkRole <networkRole>k__BackingField;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54172C", Offset = "0x54172C")]
	[SerializeField]
	private bool <connectionEstablished>k__BackingField;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject ballOnline;

	[Token(Token = "0x1700009F")]
	public NetworkRole networkRole
	{
		[Token(Token = "0x6000947")]
		[Address(RVA = "0xB78D84", Offset = "0xB78D84", VA = "0xB78D84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546DE4", Offset = "0x546DE4")]
		get
		{
			return default(NetworkRole);
		}
		[Token(Token = "0x6000948")]
		[Address(RVA = "0xB78D8C", Offset = "0xB78D8C", VA = "0xB78D8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546DF4", Offset = "0x546DF4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public bool connectionEstablished
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0xB78D94", Offset = "0xB78D94", VA = "0xB78D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546E04", Offset = "0x546E04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600094A")]
		[Address(RVA = "0xB78D9C", Offset = "0xB78D9C", VA = "0xB78D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546E14", Offset = "0x546E14")]
		private set
		{
		}
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xB78DA8", Offset = "0xB78DA8", VA = "0xB78DA8")]
	private new void Awake()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xB78DF8", Offset = "0xB78DF8", VA = "0xB78DF8", Slot = "16")]
	public override void OnServerAddPlayer(NetworkConnection conn)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xB78E00", Offset = "0xB78E00", VA = "0xB78E00", Slot = "31")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xB78E74", Offset = "0xB78E74", VA = "0xB78E74", Slot = "13")]
	public override void OnServerConnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xB78F50", Offset = "0xB78F50", VA = "0xB78F50", Slot = "14")]
	public override void OnServerDisconnect(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xB7902C", Offset = "0xB7902C", VA = "0xB7902C", Slot = "33")]
	public override void OnStopServer()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xB79054", Offset = "0xB79054", VA = "0xB79054", Slot = "20")]
	public override void OnClientConnect()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xB790D4", Offset = "0xB790D4", VA = "0xB790D4", Slot = "22")]
	public override void OnClientDisconnect()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xB790FC", Offset = "0xB790FC", VA = "0xB790FC")]
	public void ChangeBallOwner(Ball ball)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xB79228", Offset = "0xB79228", VA = "0xB79228")]
	private NetworkConnection FirstClient()
	{
		return null;
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xB79294", Offset = "0xB79294", VA = "0xB79294")]
	private NetworkConnection SecondClient()
	{
		return null;
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xB79300", Offset = "0xB79300", VA = "0xB79300")]
	public void RefreshScoresOnClients(int scores)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xB794C4", Offset = "0xB794C4", VA = "0xB794C4")]
	public MyNetworkManager()
	{
	}
}
[Token(Token = "0x2000180")]
public class MyOculusManager : MonoBehaviour
{
	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string appID;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool autoInitialization;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool quitOnInitializationFail;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x541784", Offset = "0x541784")]
	private static User <currentUser>k__BackingField;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x541794", Offset = "0x541794")]
	private static bool <userIsIdentified>k__BackingField;

	[Token(Token = "0x170000A1")]
	public static User currentUser
	{
		[Token(Token = "0x6000958")]
		[Address(RVA = "0xB7956C", Offset = "0xB7956C", VA = "0xB7956C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546E24", Offset = "0x546E24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000959")]
		[Address(RVA = "0xB795B8", Offset = "0xB795B8", VA = "0xB795B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546E34", Offset = "0x546E34")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public static bool userIsIdentified
	{
		[Token(Token = "0x600095A")]
		[Address(RVA = "0xB79608", Offset = "0xB79608", VA = "0xB79608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546E44", Offset = "0x546E44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600095B")]
		[Address(RVA = "0xB79654", Offset = "0xB79654", VA = "0xB79654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546E54", Offset = "0x546E54")]
		private set
		{
		}
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xB796A8", Offset = "0xB796A8", VA = "0xB796A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xB796B8", Offset = "0xB796B8", VA = "0xB796B8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xB79888", Offset = "0xB79888", VA = "0xB79888")]
	private void CoreAsyncInitializationCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xB79A4C", Offset = "0xB79A4C", VA = "0xB79A4C")]
	private void EntitlementCheckCallback(Message msg)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xB79C48", Offset = "0xB79C48", VA = "0xB79C48")]
	private void CheckUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xB79E08", Offset = "0xB79E08", VA = "0xB79E08")]
	public MyOculusManager()
	{
	}
}
[Token(Token = "0x2000181")]
public class MyPlayerVR : MonoBehaviour
{
	[Token(Token = "0x6000962")]
	[Address(RVA = "0xB79E10", Offset = "0xB79E10", VA = "0xB79E10")]
	public MyPlayerVR()
	{
	}
}
[Token(Token = "0x2000182")]
public class OculusVrPlayer : VrPlayer
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5417A4", Offset = "0x5417A4")]
	public Transform cameraRig;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform trackingSpace;

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xB80278", Offset = "0xB80278", VA = "0xB80278")]
	public OculusVrPlayer()
	{
	}
}
[Token(Token = "0x2000183")]
public class OnlineAvatar : NetworkBehaviour
{
	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E108", Offset = "0x53E108")]
	private sealed class <GamePlayRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x8089F0", Offset = "0x8089F0", VA = "0x8089F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x808A38", Offset = "0x808A38", VA = "0x808A38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x8087CC", Offset = "0x8087CC", VA = "0x8087CC")]
		[DebuggerHidden]
		public <GamePlayRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x8087F8", Offset = "0x8087F8", VA = "0x8087F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x8087FC", Offset = "0x8087FC", VA = "0x8087FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x8089F8", Offset = "0x8089F8", VA = "0x8089F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OnlineAvatar localPlayer;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5417DC", Offset = "0x5417DC")]
	private GameObject head;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject leftHand;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject rightHand;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VrPlayer player;

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xB80280", Offset = "0xB80280", VA = "0xB80280", Slot = "12")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xB8077C", Offset = "0xB8077C", VA = "0xB8077C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xB807B4", Offset = "0xB807B4", VA = "0xB807B4")]
	private void DuplicateRealPlayerPose()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xB8052C", Offset = "0xB8052C", VA = "0xB8052C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x546E64", Offset = "0x546E64")]
	private void HideRender()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xB80A10", Offset = "0xB80A10", VA = "0xB80A10")]
	private void DisableColliders()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xB80720", Offset = "0xB80720", VA = "0xB80720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x546E9C", Offset = "0x546E9C")]
	private IEnumerator GamePlayRoutine()
	{
		return null;
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xB80F10", Offset = "0xB80F10", VA = "0xB80F10")]
	[ClientRpc]
	public void CloseMenu()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xB79384", Offset = "0xB79384", VA = "0xB79384")]
	[ClientRpc]
	public void RefreshScoreLabel(int scores)
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xB81010", Offset = "0xB81010", VA = "0xB81010")]
	public OnlineAvatar()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xB81018", Offset = "0xB81018", VA = "0xB81018")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xB8101C", Offset = "0xB8101C", VA = "0xB8101C")]
	protected void UserCode_CloseMenu()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xB81094", Offset = "0xB81094", VA = "0xB81094")]
	protected static void InvokeUserCode_CloseMenu(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xB811A4", Offset = "0xB811A4", VA = "0xB811A4")]
	protected void UserCode_RefreshScoreLabel(int scores)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xB81204", Offset = "0xB81204", VA = "0xB81204")]
	protected static void InvokeUserCode_RefreshScoreLabel(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xB8135C", Offset = "0xB8135C", VA = "0xB8135C")]
	static OnlineAvatar()
	{
	}
}
[Token(Token = "0x2000185")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541848", Offset = "0x541848")]
	public bool showMilliseconds;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float deltaTime;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541880", Offset = "0x541880")]
	[SerializeField]
	private TMP_Text label;

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x8D2B80", Offset = "0x8D2B80", VA = "0x8D2B80")]
	private void Update()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x8D2CD8", Offset = "0x8D2CD8", VA = "0x8D2CD8")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x2000186")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x53E118", Offset = "0x53E118")]
public class LinkedInInspector : Attribute
{
	[Token(Token = "0x600097B")]
	[Address(RVA = "0x87D8D0", Offset = "0x87D8D0", VA = "0x87D8D0")]
	public LinkedInInspector()
	{
	}
}
[Token(Token = "0x2000187")]
public class ShowOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x600097C")]
	[Address(RVA = "0x90D018", Offset = "0x90D018", VA = "0x90D018")]
	public ShowOnlyAttribute()
	{
	}
}
[Token(Token = "0x2000188")]
public class Perk : MonoBehaviour
{
	[Token(Token = "0x2000189")]
	public enum State : byte
	{
		[Token(Token = "0x4000922")]
		Locked,
		[Token(Token = "0x4000923")]
		Disabled,
		[Token(Token = "0x4000924")]
		Active
	}

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool availableInDemoVersion;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public State state;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5418CC", Offset = "0x5418CC")]
	public PerkType parkType;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite picture;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int starsForUnlock;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541904", Offset = "0x541904")]
	public string localizationNameCode;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string localizationCode;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public new string name;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x54193C", Offset = "0x54193C")]
	public string description;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541954", Offset = "0x541954")]
	public PerkBox currentBox;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PerkBox homeBox;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54198C", Offset = "0x54198C")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material availableMaterial;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material lockedMaterial;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x997928", Offset = "0x997928", VA = "0x997928")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x997A34", Offset = "0x997A34", VA = "0x997A34")]
	public void ReturnToHomeBox()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x997A3C", Offset = "0x997A3C", VA = "0x997A3C")]
	public void PlaceToBox(PerkBox box)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x997A10", Offset = "0x997A10", VA = "0x997A10")]
	public void DrawAsAvailable()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x9979EC", Offset = "0x9979EC", VA = "0x9979EC")]
	public void DrawAsLocked()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x997CE0", Offset = "0x997CE0", VA = "0x997CE0")]
	public Perk()
	{
	}
}
[Token(Token = "0x200018A")]
public enum PerkType : byte
{
	[Token(Token = "0x4000926")]
	TwoHanded,
	[Token(Token = "0x4000927")]
	NoGravitation,
	[Token(Token = "0x4000928")]
	AdditionalLives,
	[Token(Token = "0x4000929")]
	TwoBallsAtStart,
	[Token(Token = "0x400092A")]
	MoreBonuses,
	[Token(Token = "0x400092B")]
	VisibleBonuses,
	[Token(Token = "0x400092C")]
	NoBonuses,
	[Token(Token = "0x400092D")]
	KillLastBrick,
	[Token(Token = "0x400092E")]
	SplitMaster,
	[Token(Token = "0x400092F")]
	MasterOfSloMo,
	[Token(Token = "0x4000930")]
	RandomVisuals
}
[Token(Token = "0x200018B")]
public class PerkBox : MonoBehaviour
{
	[Token(Token = "0x200018C")]
	public enum Type : byte
	{
		[Token(Token = "0x400093D")]
		HomeForSomePerk,
		[Token(Token = "0x400093E")]
		ActivePerk
	}

	[Token(Token = "0x200018D")]
	public enum State : byte
	{
		[Token(Token = "0x4000940")]
		Locked,
		[Token(Token = "0x4000941")]
		Available
	}

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public State state;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int starsForUnlocks;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Type type;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Perk perkInside;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float rotSpeed;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541A08", Offset = "0x541A08")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material availableMaterial;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material lockedMaterial;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject starIcon;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TMP_Text neededStarLabel;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform visualObject;

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x997CE8", Offset = "0x997CE8", VA = "0x997CE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x997D6C", Offset = "0x997D6C", VA = "0x997D6C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x997EB4", Offset = "0x997EB4", VA = "0x997EB4")]
	public void ClearBox()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x997D80", Offset = "0x997D80", VA = "0x997D80")]
	public void DrawAsAvailable()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x997DE4", Offset = "0x997DE4", VA = "0x997DE4")]
	public void DrawAsLocked()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x997F4C", Offset = "0x997F4C", VA = "0x997F4C")]
	public PerkBox()
	{
	}
}
[Token(Token = "0x200018E")]
public class PerkScreen : MonoBehaviour
{
	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[ShowOnly]
	private Perk currentPerk;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541ACC", Offset = "0x541ACC")]
	private GameObject room;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Perk[] perks;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PerkBox[] perkHomes;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PerkBox[] activeBoxes;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541B48", Offset = "0x541B48")]
	[SerializeField]
	private TMP_Text nameLabel;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TMP_Text descriptionLabel;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image picture;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject switchButton;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TMP_Text switchButtonLabel;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TMP_Text totalStarsLabel;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject perkPrefab;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject perkBoxPrefab;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TMP_Text textLabel1;

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x997F54", Offset = "0x997F54", VA = "0x997F54")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x998238", Offset = "0x998238", VA = "0x998238")]
	public void HidePerkScreen()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x998294", Offset = "0x998294", VA = "0x998294")]
	public void RecalculateActivePerks()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x998454", Offset = "0x998454", VA = "0x998454")]
	public void SomePerkIsReleased(Perk perk)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x99873C", Offset = "0x99873C", VA = "0x99873C")]
	public void ShowPerkInfo(Perk perk)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x998188", Offset = "0x998188", VA = "0x998188")]
	private void ClearInfoPanel()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x997C08", Offset = "0x997C08", VA = "0x997C08")]
	public void RefreshSwitchButtonForCurrentPerk()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x9989B0", Offset = "0x9989B0", VA = "0x9989B0")]
	public void SwitchButtonIsPressed()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x998A70", Offset = "0x998A70", VA = "0x998A70")]
	private void SwitchOnCurrentPerk()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x9989D8", Offset = "0x9989D8", VA = "0x9989D8")]
	private void SwitchOffCurrentPerk()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x998C60", Offset = "0x998C60", VA = "0x998C60")]
	private PerkBox EmptyActiveBox()
	{
		return null;
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x998D44", Offset = "0x998D44", VA = "0x998D44")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x546F6C", Offset = "0x546F6C")]
	private void Editor_ShowRoom()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x998D74", Offset = "0x998D74", VA = "0x998D74")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x546FA4", Offset = "0x546FA4")]
	private void Editor_HideRoom()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x998DA4", Offset = "0x998DA4", VA = "0x998DA4")]
	public PerkScreen()
	{
	}
}
[Token(Token = "0x200018F")]
public class Racket : MonoBehaviour
{
	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool followHand;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform followedHand;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandType handType;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541C14", Offset = "0x541C14")]
	public GameObject racketBody;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject roundSmall;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject classicTennis;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject bigRect;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject roundLong;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject colander;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Rigidbody rb;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isVibrating;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float vibrationStartTime;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform forwardAxis;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool useSteamVRMethods;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool useRawSet;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 currVel;

	[Token(Token = "0x4000960")]
	protected const float MaxVelocityChange = 10f;

	[Token(Token = "0x4000961")]
	protected const float VelocityMagic = 6000f;

	[Token(Token = "0x4000962")]
	protected const float AngularVelocityMagic = 50f;

	[Token(Token = "0x4000963")]
	protected const float MaxAngularVelocityChange = 20f;

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x901C0C", Offset = "0x901C0C", VA = "0x901C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x901E98", Offset = "0x901E98", VA = "0x901E98")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x901FF0", Offset = "0x901FF0", VA = "0x901FF0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x901F24", Offset = "0x901F24", VA = "0x901F24")]
	private void UpdateMovement()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x902108", Offset = "0x902108", VA = "0x902108")]
	private void UpdateAttachedVelocity_SteamVRVariant()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x902364", Offset = "0x902364", VA = "0x902364")]
	private bool GetUpdatedAttachedVelocities_SteamVRVariant(out Vector3 velocityTarget, out Vector3 angularTarget)
	{
		return default(bool);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x9021B8", Offset = "0x9021B8", VA = "0x9021B8")]
	private void UpdateMovement_MyMethod()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x902594", Offset = "0x902594", VA = "0x902594")]
	private static Vector3 GetAngularVelocity(Quaternion foreLastFrameRotation, Quaternion lastFrameRotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x90271C", Offset = "0x90271C", VA = "0x90271C")]
	private void HideAllVariants()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x90279C", Offset = "0x90279C", VA = "0x90279C")]
	public void ChangeToVariant(RacketType racketType)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x901DF8", Offset = "0x901DF8", VA = "0x901DF8")]
	private void StopVibration()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x90283C", Offset = "0x90283C", VA = "0x90283C")]
	public void SetFollowingHand(Transform handTransform)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x902930", Offset = "0x902930", VA = "0x902930")]
	public Racket()
	{
	}
}
[Token(Token = "0x2000190")]
public enum RacketType : byte
{
	[Token(Token = "0x4000965")]
	RoundSmall,
	[Token(Token = "0x4000966")]
	BigRect,
	[Token(Token = "0x4000967")]
	LongRect,
	[Token(Token = "0x4000968")]
	ClassicTennis,
	[Token(Token = "0x4000969")]
	Colander
}
[Token(Token = "0x2000191")]
public class RacketChangeButton : MonoBehaviour
{
	[Token(Token = "0x2000192")]
	public enum AvailableState
	{
		[Token(Token = "0x4000974")]
		Locked,
		[Token(Token = "0x4000975")]
		Available
	}

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int starsForUnlock;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AvailableState availableState;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool availableInDemoVersion;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public RacketType racketType;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Text label;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image lockImage;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_Text starsNeededLabel;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image redStar;

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x902938", Offset = "0x902938", VA = "0x902938")]
	public void ChangeRackets()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x902A24", Offset = "0x902A24", VA = "0x902A24")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x902B54", Offset = "0x902B54", VA = "0x902B54")]
	public void DrawAsLocked()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x902AB8", Offset = "0x902AB8", VA = "0x902AB8")]
	public void DrawAsAvailable()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x902C1C", Offset = "0x902C1C", VA = "0x902C1C")]
	public RacketChangeButton()
	{
	}
}
[Token(Token = "0x2000193")]
public class RacketScreen : MonoBehaviour
{
	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentRacketId;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541CEC", Offset = "0x541CEC")]
	[SerializeField]
	private GameObject racketDemoRoom;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Text totalStarsLabel;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private DemoRacket[] demoRackets;

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x902C24", Offset = "0x902C24", VA = "0x902C24")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x902D60", Offset = "0x902D60", VA = "0x902D60")]
	public void RecalculateRacketsAvailability()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x902E20", Offset = "0x902E20", VA = "0x902E20")]
	public void ChangeRacketOnLoad(int racketId)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x902EE8", Offset = "0x902EE8", VA = "0x902EE8")]
	public void CloseButtonIsPressed()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x902F4C", Offset = "0x902F4C", VA = "0x902F4C")]
	public void Close()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x902F98", Offset = "0x902F98", VA = "0x902F98")]
	public RacketScreen()
	{
	}
}
[Token(Token = "0x2000194")]
public class ResultPanel : MonoBehaviour
{
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E14C", Offset = "0x53E14C")]
	private sealed class <ShowingResult>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ResultPanel <>4__this;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level.MatchResult matchResult;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__2;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x12737C4", Offset = "0x12737C4", VA = "0x12737C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x127380C", Offset = "0x127380C", VA = "0x127380C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x1272E4C", Offset = "0x1272E4C", VA = "0x1272E4C")]
		[DebuggerHidden]
		public <ShowingResult>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x1272E78", Offset = "0x1272E78", VA = "0x1272E78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x1272E7C", Offset = "0x1272E7C", VA = "0x1272E7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x12737CC", Offset = "0x12737CC", VA = "0x12737CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541D58", Offset = "0x541D58")]
	private GameObject mainPanel;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text levelNumberLabel;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image[] stars;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text complimentLabel;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color[] complimentLabelColors;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] buttons;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Image nextLevelButtonImage;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Color nextLevelButtonActiveColor;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541E14", Offset = "0x541E14")]
	private GameObject metricsPanel;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TMP_Text timeLabel;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TMP_Text bricksDestroyedLabel;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TMP_Text ballsMissedLabel;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541E90", Offset = "0x541E90")]
	private GameObject requirementsPanel;

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x906190", Offset = "0x906190", VA = "0x906190")]
	public void Initialize(Level.MatchResult matchResult)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x906264", Offset = "0x906264", VA = "0x906264")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x546FDC", Offset = "0x546FDC")]
	private IEnumerator ShowingResult(Level.MatchResult matchResult)
	{
		return null;
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x9062E4", Offset = "0x9062E4", VA = "0x9062E4")]
	public void NextLevelButtonIsPressed()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x9063DC", Offset = "0x9063DC", VA = "0x9063DC")]
	private bool NextLevelIsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x906490", Offset = "0x906490", VA = "0x906490")]
	private bool NextLevelIsLockedByDemoVersionLimit()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x906540", Offset = "0x906540", VA = "0x906540")]
	private void RefreshLevelNumberLabel()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x9065E4", Offset = "0x9065E4", VA = "0x9065E4")]
	private void ShowComplimentText(int starsAchieved)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x90675C", Offset = "0x90675C", VA = "0x90675C")]
	private void WriteSomeDefeatText()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x906A24", Offset = "0x906A24", VA = "0x906A24")]
	private void WriteTextFor1Star()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x906A84", Offset = "0x906A84", VA = "0x906A84")]
	private void WriteTextFor2Stars()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x906B60", Offset = "0x906B60", VA = "0x906B60")]
	private void WriteTextFor3Stars()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x906CC0", Offset = "0x906CC0", VA = "0x906CC0")]
	public ResultPanel()
	{
	}
}
[Token(Token = "0x2000196")]
public class RoomPanel : MonoBehaviour
{
	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomPanelType type;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer eGrid;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x907ED8", Offset = "0x907ED8", VA = "0x907ED8")]
	public void SetEnergyGridStyle(EnergyGridsPack eGridPack)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x908088", Offset = "0x908088", VA = "0x908088")]
	public RoomPanel()
	{
	}
}
[Token(Token = "0x2000197")]
public enum RoomPanelType : byte
{
	[Token(Token = "0x400098F")]
	None,
	[Token(Token = "0x4000990")]
	Bottom,
	[Token(Token = "0x4000991")]
	Left,
	[Token(Token = "0x4000992")]
	Right,
	[Token(Token = "0x4000993")]
	Top,
	[Token(Token = "0x4000994")]
	Near,
	[Token(Token = "0x4000995")]
	Far,
	[Token(Token = "0x4000996")]
	Ahead
}
[Token(Token = "0x2000198")]
public class RoomSection : MonoBehaviour
{
	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int sectionNumber;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoomPanel[] panels;

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x908090", Offset = "0x908090", VA = "0x908090")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x54708C", Offset = "0x54708C")]
	public void SetupDefault()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x90810C", Offset = "0x90810C", VA = "0x90810C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5470C4", Offset = "0x5470C4")]
	public void SetupWithFloorOnly()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x908194", Offset = "0x908194", VA = "0x908194")]
	public void SetupPanels(RoomPanelType[] excludedPanels)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x9082E8", Offset = "0x9082E8", VA = "0x9082E8")]
	public void DisablePanels(RoomPanelType[] excludedPanels)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x9083C4", Offset = "0x9083C4", VA = "0x9083C4")]
	public void DisablePanel(RoomPanelType panelType)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x908458", Offset = "0x908458", VA = "0x908458")]
	public RoomSection()
	{
	}
}
[Token(Token = "0x2000199")]
public class SaveLoadManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200019A")]
	private class SettingsData
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string languageCode;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool music;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public HandType mainHand;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int level;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ball;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int racket;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float floorLevel;

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x127381C", Offset = "0x127381C", VA = "0x127381C")]
		public SettingsData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200019B")]
	private class ProgressData
	{
		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] levelsStars;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] levelsResults;

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x1273814", Offset = "0x1273814", VA = "0x1273814")]
		public ProgressData()
		{
		}
	}

	[Token(Token = "0x200019C")]
	public enum SaveDestination : byte
	{
		[Token(Token = "0x40009B3")]
		PlayerPrefs,
		[Token(Token = "0x40009B4")]
		GameFolder
	}

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SaveLoadManager instance;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int gameVersion;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541EEC", Offset = "0x541EEC")]
	public SaveDestination saveDestination;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool clearForNewVersion;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool showDebugLogs;

	[Token(Token = "0x400099E")]
	private const string VERSION_KEY = "Version";

	[Token(Token = "0x400099F")]
	private const string SETTINGS_KEY = "Settings";

	[Token(Token = "0x40009A0")]
	private const string PROGRESS_KEY = "Progress";

	[Token(Token = "0x40009A1")]
	private const string HASH_KEY = "Hash";

	[Token(Token = "0x40009A2")]
	private const string pathToVersionFile = "/Saves/Version.sav";

	[Token(Token = "0x40009A3")]
	private const string pathToSettingsFile = "/Saves/Settings.sav";

	[Token(Token = "0x40009A4")]
	private const string pathToLevelsFile = "/Saves/Levels.sav";

	[Token(Token = "0x40009A5")]
	private const string pathToProgressFile = "/Saves/Progress.sav";

	[Token(Token = "0x40009A6")]
	private const string pathToHashFile = "/Saves/Hash.sav";

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool encrypt;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hashVerification;

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x908DC8", Offset = "0x908DC8", VA = "0x908DC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x908DCC", Offset = "0x908DCC", VA = "0x908DCC")]
	public void Save()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x909740", Offset = "0x909740", VA = "0x909740")]
	private string CreateSettingsSaveString()
	{
		return null;
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x909BE4", Offset = "0x909BE4", VA = "0x909BE4")]
	private string CreateProgressSaveString(out Hash128 hash)
	{
		return null;
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x909FB4", Offset = "0x909FB4", VA = "0x909FB4")]
	public void Load()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x90A294", Offset = "0x90A294", VA = "0x90A294")]
	private void LoadSettingsData()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x90A714", Offset = "0x90A714", VA = "0x90A714")]
	private void LoadProgressData()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x909ED8", Offset = "0x909ED8", VA = "0x909ED8")]
	private string Obfuscate(string textString)
	{
		return null;
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x90B1BC", Offset = "0x90B1BC", VA = "0x90B1BC")]
	private string Deobfuscate(string textString)
	{
		return null;
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x90B3B4", Offset = "0x90B3B4", VA = "0x90B3B4")]
	public void DeleteGameData()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x90B3B8", Offset = "0x90B3B8", VA = "0x90B3B8")]
	private string WindowsPath_ProgressData()
	{
		return null;
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x90B408", Offset = "0x90B408", VA = "0x90B408")]
	private string WindowsPath_SettingsData()
	{
		return null;
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x90B458", Offset = "0x90B458", VA = "0x90B458")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x90B45C", Offset = "0x90B45C", VA = "0x90B45C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5470FC", Offset = "0x5470FC")]
	public void TestSaveFile()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x90B538", Offset = "0x90B538", VA = "0x90B538")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x547134", Offset = "0x547134")]
	public void TestLoadFile()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x90B644", Offset = "0x90B644", VA = "0x90B644")]
	public SaveLoadManager()
	{
	}
}
[Token(Token = "0x200019D")]
public class ScoringZone : MonoBehaviour
{
	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x90BF30", Offset = "0x90BF30", VA = "0x90BF30")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x90C004", Offset = "0x90C004", VA = "0x90C004")]
	public ScoringZone()
	{
	}
}
[Token(Token = "0x200019E")]
public class SettingScreen : MonoBehaviour
{
	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image[] handImages;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BallButton[] ballButtons;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Slider floorLevelSlider;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text playerHeightLabel;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float floorLevel;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject console;

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x90C950", Offset = "0x90C950", VA = "0x90C950")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x90CC30", Offset = "0x90CC30", VA = "0x90CC30")]
	public void LeftHandButtonClick()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x90CC94", Offset = "0x90CC94", VA = "0x90CC94")]
	public void RightHandButtonClick()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x90C990", Offset = "0x90C990", VA = "0x90C990")]
	private void RefreshHandButtons()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x90CCF8", Offset = "0x90CCF8", VA = "0x90CCF8")]
	public void BallButtonIsClicked(BallButton ballButton)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x90CB14", Offset = "0x90CB14", VA = "0x90CB14")]
	private void HighlightCurrentBallButton()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x90CD6C", Offset = "0x90CD6C", VA = "0x90CD6C")]
	public void ConsoleButtonIsPressed()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x90CDAC", Offset = "0x90CDAC", VA = "0x90CDAC")]
	public void OnSliderChange_PlayerHeight(float value)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x90AF6C", Offset = "0x90AF6C", VA = "0x90AF6C")]
	public void SetFloorLevelFromPlayerPrefs(float value)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x90D010", Offset = "0x90D010", VA = "0x90D010")]
	public SettingScreen()
	{
	}
}
[Serializable]
[Token(Token = "0x200019F")]
public struct StarRequirement
{
	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Requirement[] reqs;

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x867B54", Offset = "0x867B54", VA = "0x867B54")]
	public bool IsAchieved()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x867BE4", Offset = "0x867BE4", VA = "0x867BE4")]
	public string RequirementToString(Level level)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20001A0")]
public struct Requirement
{
	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RequirementType reqType;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float reqValue;

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x906084", Offset = "0x906084", VA = "0x906084")]
	public bool IsAchieved()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001A1")]
public enum RequirementType : byte
{
	[Token(Token = "0x40009BF")]
	BricksDestroyed,
	[Token(Token = "0x40009C0")]
	Time,
	[Token(Token = "0x40009C1")]
	BallsNotMissed,
	[Token(Token = "0x40009C2")]
	Scores
}
[Token(Token = "0x20001A2")]
public class SteamUserStatsTest : MonoBehaviour
{
	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x8683F0", Offset = "0x8683F0", VA = "0x8683F0")]
	public SteamUserStatsTest()
	{
	}
}
[Token(Token = "0x20001A3")]
public class SteamVrPlayer : VrPlayer
{
	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fadeScreen;

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x8683F8", Offset = "0x8683F8", VA = "0x8683F8", Slot = "4")]
	public override void SetActiveFadeScreen()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x868488", Offset = "0x868488", VA = "0x868488", Slot = "5")]
	public override void SetInactiveFadeScreen()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x868518", Offset = "0x868518", VA = "0x868518")]
	public SteamVrPlayer()
	{
	}
}
[Token(Token = "0x20001A4")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x170000A7")]
	public static bool Initialized
	{
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x8683E0", Offset = "0x8683E0", VA = "0x8683E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x8683E8", Offset = "0x8683E8", VA = "0x8683E8")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20001A5")]
public class TestDelete123 : MonoBehaviour
{
	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FracturedObject fo;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> myList;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<FracturedChunk> outerList;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x86CA6C", Offset = "0x86CA6C", VA = "0x86CA6C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x54716C", Offset = "0x54716C")]
	private void TestMethod()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x86CE94", Offset = "0x86CE94", VA = "0x86CE94")]
	public TestDelete123()
	{
	}
}
[Token(Token = "0x20001A6")]
public class Test_Vector3_Cross : MonoBehaviour
{
	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer line1;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LineRenderer line2;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LineRenderer line3;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform v1Start;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform v1End;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform v2Start;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform v2End;

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x86CF8C", Offset = "0x86CF8C", VA = "0x86CF8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x86D180", Offset = "0x86D180", VA = "0x86D180")]
	public Test_Vector3_Cross()
	{
	}
}
[Token(Token = "0x20001A7")]
public class SliderValue : MonoBehaviour
{
	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Slider slider;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text label;

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x862C0C", Offset = "0x862C0C", VA = "0x862C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x862C78", Offset = "0x862C78", VA = "0x862C78")]
	public SliderValue()
	{
	}
}
[Token(Token = "0x20001A8")]
public class TestFracturing : MonoBehaviour
{
	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E16C", Offset = "0x53E16C")]
	private sealed class <Slicing>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestFracturing <>4__this;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x1275218", Offset = "0x1275218", VA = "0x1275218", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x1275260", Offset = "0x1275260", VA = "0x1275260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x1274C04", Offset = "0x1274C04", VA = "0x1274C04")]
		[DebuggerHidden]
		public <Slicing>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x1274C30", Offset = "0x1274C30", VA = "0x1274C30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x1274C34", Offset = "0x1274C34", VA = "0x1274C34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x1275220", Offset = "0x1275220", VA = "0x1275220", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FracturedObject fo;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> myList;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider slider;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject slicedobject;

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x86CE9C", Offset = "0x86CE9C", VA = "0x86CE9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x86CEA0", Offset = "0x86CEA0", VA = "0x86CEA0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5471A4", Offset = "0x5471A4")]
	public void CH()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x86CECC", Offset = "0x86CECC", VA = "0x86CECC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5471DC", Offset = "0x5471DC")]
	private IEnumerator Slicing()
	{
		return null;
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x86CF38", Offset = "0x86CF38", VA = "0x86CF38")]
	public TestFracturing()
	{
	}
}
[Token(Token = "0x20001AA")]
public class TestRot : MonoBehaviour
{
	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x86CF40", Offset = "0x86CF40", VA = "0x86CF40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x86CF84", Offset = "0x86CF84", VA = "0x86CF84")]
	public TestRot()
	{
	}
}
[Token(Token = "0x20001AB")]
public class Turret : MonoBehaviour
{
	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E17C", Offset = "0x53E17C")]
	private sealed class <Firing>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Turret <>4__this;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0x1275E80", Offset = "0x1275E80", VA = "0x1275E80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A0F")]
			[Address(RVA = "0x1275EC8", Offset = "0x1275EC8", VA = "0x1275EC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1275CE8", Offset = "0x1275CE8", VA = "0x1275CE8")]
		[DebuggerHidden]
		public <Firing>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1275D14", Offset = "0x1275D14", VA = "0x1275D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1275D18", Offset = "0x1275D18", VA = "0x1275D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1275E88", Offset = "0x1275E88", VA = "0x1275E88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E18C", Offset = "0x53E18C")]
	private sealed class <Fire>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Turret <>4__this;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x1275C98", Offset = "0x1275C98", VA = "0x1275C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0x1275CE0", Offset = "0x1275CE0", VA = "0x1275CE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x127599C", Offset = "0x127599C", VA = "0x127599C")]
		[DebuggerHidden]
		public <Fire>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x12759C8", Offset = "0x12759C8", VA = "0x12759C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x12759CC", Offset = "0x12759CC", VA = "0x12759CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1275CA0", Offset = "0x1275CA0", VA = "0x1275CA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TurretState state;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542004", Offset = "0x542004")]
	[SerializeField]
	private float startDelay;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float startFireInterval;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool decreaseFireInterval;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float fireIntervalModification;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float startFireForce;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool increaseFireForce;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float fireForceModification;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool isMoving;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float moveSpeed;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform movePosition1;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform movePosition2;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform currentMoveTarget;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float aimingTime;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542100", Offset = "0x542100")]
	private AudioSource audioSOurce;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform head;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Vector3 headUpVector;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform firePoint;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform targetPoint;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform targetTopBoundary;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform targetBottomBoundary;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform targetLeftBoundary;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform targetRightBoundary;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int shotCounter;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float fireInterval;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float fireForce;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine firingRoutine;

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x873448", Offset = "0x873448", VA = "0x873448")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x873484", Offset = "0x873484", VA = "0x873484")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x8736D8", Offset = "0x8736D8", VA = "0x8736D8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x873824", Offset = "0x873824", VA = "0x873824")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54728C", Offset = "0x54728C")]
	private IEnumerator Firing()
	{
		return null;
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x873890", Offset = "0x873890", VA = "0x873890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5472EC", Offset = "0x5472EC")]
	private IEnumerator Fire()
	{
		return null;
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x8738FC", Offset = "0x8738FC", VA = "0x8738FC")]
	private Vector3 NewRandomTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x873644", Offset = "0x873644", VA = "0x873644")]
	private void SetNextMoveTarget()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x873A1C", Offset = "0x873A1C", VA = "0x873A1C")]
	public Turret()
	{
	}
}
[Token(Token = "0x20001AE")]
public enum TurretState : byte
{
	[Token(Token = "0x40009F9")]
	None,
	[Token(Token = "0x40009FA")]
	Idle,
	[Token(Token = "0x40009FB")]
	Firing
}
[Token(Token = "0x20001AF")]
public class PauseScreen : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E19C", Offset = "0x53E19C")]
	private sealed class <>c
	{
		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__3_0;

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1271740", Offset = "0x1271740", VA = "0x1271740")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1271748", Offset = "0x1271748", VA = "0x1271748")]
		internal void <ResumeGame>b__3_0(float value)
		{
		}
	}

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float closeTime;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gameSpeedAtInitialize;

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x99743C", Offset = "0x99743C", VA = "0x99743C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x997604", Offset = "0x997604", VA = "0x997604")]
	public void ResumeGame()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x99783C", Offset = "0x99783C", VA = "0x99783C")]
	public void QuitToMainMenu()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x9978EC", Offset = "0x9978EC", VA = "0x9978EC")]
	public float TimeAfterClosing()
	{
		return default(float);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x997918", Offset = "0x997918", VA = "0x997918")]
	public PauseScreen()
	{
	}
}
[Token(Token = "0x20001B1")]
public class VersionManager : MonoBehaviour
{
	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x875B2C", Offset = "0x875B2C", VA = "0x875B2C")]
	public VersionManager()
	{
	}
}
[Token(Token = "0x20001B2")]
public class VrManager : MonoBehaviour
{
	[Token(Token = "0x20001B3")]
	private enum ControlShowState : byte
	{
		[Token(Token = "0x4000A19")]
		Hided,
		[Token(Token = "0x4000A1A")]
		Show
	}

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VrManager instance;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrPlatform vrPlatform;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5421DC", Offset = "0x5421DC")]
	public GameObject laserPointer;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera camera;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542214", Offset = "0x542214")]
	public VrPlayer player;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SteamVrPlayer steamPlayer;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OculusVrPlayer oculusPlayer;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public aiPlayer aiPlayer;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool useAiPlayer;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public HandType mainHand;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float strafeSpeed;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float upDownSpeed;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Racket rightRacket;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Hand rightHand;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Racket leftRacket;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Hand leftHand;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float racketRotationSpeed;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5422AC", Offset = "0x5422AC")]
	[SerializeField]
	private GameObject controlLayoutButton;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private OVRScreenFade ovrScreenFade;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ControlShowState controlDemoState;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float timeScaleBeforeFocusLost;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SteamManager steamworksManager;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private MyOculusManager oculusManager;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject pimaxManager;

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x7F77F4", Offset = "0x7F77F4", VA = "0x7F77F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x7F7B78", Offset = "0x7F7B78", VA = "0x7F7B78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x7F8A08", Offset = "0x7F8A08", VA = "0x7F8A08")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x7F8B68", Offset = "0x7F8B68", VA = "0x7F8B68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x7F7C04", Offset = "0x7F7C04", VA = "0x7F7C04")]
	private void CheckButtonClicks()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x7F7D2C", Offset = "0x7F7D2C", VA = "0x7F7D2C")]
	private void CheckPlayerMovement()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x7F7F00", Offset = "0x7F7F00", VA = "0x7F7F00")]
	private void CheckRacketsRotation()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x7F8CD0", Offset = "0x7F8CD0", VA = "0x7F8CD0")]
	public bool UiButtonIsStateDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x7F8D70", Offset = "0x7F8D70", VA = "0x7F8D70")]
	public bool UiButtonIsStateUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x7F8E14", Offset = "0x7F8E14", VA = "0x7F8E14")]
	public void ShowController()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x7F8E18", Offset = "0x7F8E18", VA = "0x7F8E18")]
	public void HideController()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x7F8E1C", Offset = "0x7F8E1C", VA = "0x7F8E1C")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x7F8FD8", Offset = "0x7F8FD8", VA = "0x7F8FD8")]
	private void OnOculusPoseRecentered()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x7F8FDC", Offset = "0x7F8FDC", VA = "0x7F8FDC")]
	public void btnDisableAll()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x7F9004", Offset = "0x7F9004", VA = "0x7F9004")]
	public void ShowLaserPointer()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x7F8FE4", Offset = "0x7F8FE4", VA = "0x7F8FE4")]
	public void HideLaserPointer()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x7F9024", Offset = "0x7F9024", VA = "0x7F9024")]
	public void SHowHand()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x7F9028", Offset = "0x7F9028", VA = "0x7F9028")]
	public void HideHand()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x7F902C", Offset = "0x7F902C", VA = "0x7F902C")]
	public void SetMainHandLeft()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x7F7A38", Offset = "0x7F7A38", VA = "0x7F7A38")]
	public void SetMainHandRight()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x7F91B8", Offset = "0x7F91B8", VA = "0x7F91B8")]
	public void ShowRacketInLeftHand()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x7F9204", Offset = "0x7F9204", VA = "0x7F9204")]
	public void HideRacketInLeftHand()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x7F9234", Offset = "0x7F9234", VA = "0x7F9234")]
	public void ShowRacketInRightHand()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x7F9280", Offset = "0x7F9280", VA = "0x7F9280")]
	public void HideRacketInRightHand()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x7F9170", Offset = "0x7F9170", VA = "0x7F9170")]
	public void ShowRacketInMainHandOnly()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x7F92B0", Offset = "0x7F92B0", VA = "0x7F92B0")]
	public void ShowRacketsInBothHands()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x7F8A68", Offset = "0x7F8A68", VA = "0x7F8A68")]
	public void HideRackets()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x7F8A8C", Offset = "0x7F8A8C", VA = "0x7F8A8C")]
	public void ShowRackets()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x7F92D4", Offset = "0x7F92D4", VA = "0x7F92D4")]
	public void SHowHints1()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x7F92D8", Offset = "0x7F92D8", VA = "0x7F92D8")]
	public void SHowHints2()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x7F92DC", Offset = "0x7F92DC", VA = "0x7F92DC")]
	public void HideHitns()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x7F92E0", Offset = "0x7F92E0", VA = "0x7F92E0")]
	public void ShowingControlsStart()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x7F92E4", Offset = "0x7F92E4", VA = "0x7F92E4")]
	public void ShowingControlsStop()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x7F92E8", Offset = "0x7F92E8", VA = "0x7F92E8")]
	public void ClickControlButton()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x7F92EC", Offset = "0x7F92EC", VA = "0x7F92EC")]
	private void VRInfo()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x7F92F0", Offset = "0x7F92F0", VA = "0x7F92F0")]
	public string GetDeviceProperty(int index)
	{
		return null;
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x7F8FE0", Offset = "0x7F8FE0", VA = "0x7F8FE0")]
	private void SomeTestingSteamVR()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x7F80F4", Offset = "0x7F80F4", VA = "0x7F80F4")]
	private void OculusInfo()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x7F9334", Offset = "0x7F9334", VA = "0x7F9334")]
	public void SetFreq72()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x7F9398", Offset = "0x7F9398", VA = "0x7F9398")]
	public void SetFreq80()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x7F93FC", Offset = "0x7F93FC", VA = "0x7F93FC")]
	public void SetFreq90()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x7F9460", Offset = "0x7F9460", VA = "0x7F9460")]
	public VrManager()
	{
	}
}
[Token(Token = "0x20001B4")]
public enum HandType : byte
{
	[Token(Token = "0x4000A1C")]
	Right,
	[Token(Token = "0x4000A1D")]
	Left
}
[Token(Token = "0x20001B5")]
public enum VrPlatform : byte
{
	[Token(Token = "0x4000A1F")]
	SteamVR,
	[Token(Token = "0x4000A20")]
	OculusQuest,
	[Token(Token = "0x4000A21")]
	Pimax
}
[Token(Token = "0x20001B6")]
public class VrPlayer : MonoBehaviour
{
	[Token(Token = "0x20001B7")]
	public enum PlayerType : byte
	{
		[Token(Token = "0x4000A28")]
		None = 0,
		[Token(Token = "0x4000A29")]
		SteamVR = 11,
		[Token(Token = "0x4000A2A")]
		Oculus = 21,
		[Token(Token = "0x4000A2B")]
		AI = 51
	}

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542338", Offset = "0x542338")]
	public PlayerType playerType;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera camera;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject cameraObject;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftHand;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rightHand;

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x7F9478", Offset = "0x7F9478", VA = "0x7F9478", Slot = "4")]
	public virtual void SetActiveFadeScreen()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x7F947C", Offset = "0x7F947C", VA = "0x7F947C", Slot = "5")]
	public virtual void SetInactiveFadeScreen()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x7F9480", Offset = "0x7F9480", VA = "0x7F9480")]
	public VrPlayer()
	{
	}
}
[Token(Token = "0x20001B8")]
public class Wall : MonoBehaviour
{
	[Token(Token = "0x20001B9")]
	public enum WallType : byte
	{
		[Token(Token = "0x4000A2F")]
		NormalWall,
		[Token(Token = "0x4000A30")]
		DefenseWall
	}

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WallType wallType;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 faceDirection;

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x7F9488", Offset = "0x7F9488", VA = "0x7F9488")]
	public Wall()
	{
	}
}
[Token(Token = "0x20001BA")]
public class WorldManager : MonoBehaviour
{
	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WorldManager instance;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ShowOnly]
	public WorldEnvironment currentWorldEnvironment;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542380", Offset = "0x542380")]
	[SerializeField]
	private GameObject spaceEnvironment;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject spaceScenePointLights;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color spaceAmbientColor;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5423EC", Offset = "0x5423EC")]
	[SerializeField]
	private GameObject modernCity;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject[] modernCityBalksForRoomLength3;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Light modernCityDirectionalLight;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color modernCityAmbientColor;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542468", Offset = "0x542468")]
	[ShowOnly]
	public SkyData currentSky;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SkyData[] skyboxes;

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x7F9D2C", Offset = "0x7F9D2C", VA = "0x7F9D2C")]
	public void SetWorld(WorldEnvironment worldEnvironment)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x7F9D8C", Offset = "0x7F9D8C", VA = "0x7F9D8C")]
	private void SetSpaceScene()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x7F9FF8", Offset = "0x7F9FF8", VA = "0x7F9FF8")]
	private void DisableSpaceScene()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x7F9DEC", Offset = "0x7F9DEC", VA = "0x7F9DEC")]
	private void SetModernCityScene()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x7F9DCC", Offset = "0x7F9DCC", VA = "0x7F9DCC")]
	private void DisableModernCity()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x7FA018", Offset = "0x7FA018", VA = "0x7FA018")]
	public void SetupSceneForRoomLength(Level.RoomLength roomLength)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x7FA1A4", Offset = "0x7FA1A4", VA = "0x7FA1A4")]
	public void SetSky(SkyStyle skyStyle)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x7FA1EC", Offset = "0x7FA1EC", VA = "0x7FA1EC")]
	public SkyData GetSkyData(SkyStyle skyStyle)
	{
		return null;
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x7FA254", Offset = "0x7FA254", VA = "0x7FA254")]
	public WorldManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BB")]
public class SkyData
{
	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SkyStyle SkyStyle;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x862C04", Offset = "0x862C04", VA = "0x862C04")]
	public SkyData()
	{
	}
}
[Token(Token = "0x20001BC")]
public enum WorldEnvironment : byte
{
	[Token(Token = "0x4000A3F")]
	Space,
	[Token(Token = "0x4000A40")]
	ModernCity
}
[Token(Token = "0x20001BD")]
public enum SkyStyle : byte
{
	[Token(Token = "0x4000A42")]
	SpaceBlue,
	[Token(Token = "0x4000A43")]
	SpaceGreen,
	[Token(Token = "0x4000A44")]
	SpaceRed,
	[Token(Token = "0x4000A45")]
	MiddayClear
}
[Token(Token = "0x20001BE")]
public class aiPlayer : VrPlayer
{
	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static aiPlayer instance;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5424C4", Offset = "0x5424C4")]
	public bool lookForward;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float handMovementSpeed;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float strafeSpeed;

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x7FA25C", Offset = "0x7FA25C", VA = "0x7FA25C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x7FA2AC", Offset = "0x7FA2AC", VA = "0x7FA2AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x7FA710", Offset = "0x7FA710", VA = "0x7FA710")]
	private Ball FindNearestBall()
	{
		return null;
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x7FA528", Offset = "0x7FA528", VA = "0x7FA528")]
	private Ball FindNearestBall2()
	{
		return null;
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x7FA9D8", Offset = "0x7FA9D8", VA = "0x7FA9D8")]
	private GameObject NearestHand(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x7FA9E0", Offset = "0x7FA9E0", VA = "0x7FA9E0")]
	private GameObject OtherHand(GameObject sourceHand)
	{
		return null;
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x7FAA70", Offset = "0x7FAA70", VA = "0x7FAA70")]
	public aiPlayer()
	{
	}
}
[Token(Token = "0x20001BF")]
public class CheckDynamicCollision : MonoBehaviour
{
	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x93C11C", Offset = "0x93C11C", VA = "0x93C11C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x93C48C", Offset = "0x93C48C", VA = "0x93C48C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x93C340", Offset = "0x93C340", VA = "0x93C340")]
	private void EnableObjectColliders(GameObject chunk, bool bEnable)
	{
	}

	[Token(Token = "0x6000A61")]
	private static void SearchForAllComponentsInHierarchy<T>(GameObject current, ref List<T> listOut) where T : Component
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x93C7AC", Offset = "0x93C7AC", VA = "0x93C7AC")]
	public CheckDynamicCollision()
	{
	}
}
[Token(Token = "0x20001C0")]
public class ExplosionSource : MonoBehaviour
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InfluenceRadius;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Force;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool CheckStructureIntegrity;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool MoveManually;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 PosStart;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 PosEnd;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MoveDuration;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FracturedObject[] m_aFracturedObjects;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fStartTime;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x8D1C68", Offset = "0x8D1C68", VA = "0x8D1C68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x8D1D54", Offset = "0x8D1D54", VA = "0x8D1D54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x8D1E88", Offset = "0x8D1E88", VA = "0x8D1E88")]
	public ExplosionSource()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C1")]
[ExecuteInEditMode]
public class FracturedChunk : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001C2")]
	public class AdjacencyInfo
	{
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FracturedChunk chunk;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fArea;

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x80089C", Offset = "0x80089C", VA = "0x80089C")]
		public AdjacencyInfo(FracturedChunk chunk, float fArea)
		{
		}
	}

	[Token(Token = "0x20001C3")]
	public class CollisionInfo
	{
		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FracturedChunk chunk;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 collisionPoint;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool bIsMain;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool bCancelCollisionEvent;

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x8008D8", Offset = "0x8008D8", VA = "0x8008D8")]
		public CollisionInfo(FracturedChunk chunk, Vector3 collisionPoint, bool bIsMain)
		{
		}
	}

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FracturedObject FracturedObjectSource;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int SplitSubMeshIndex;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DontDeleteAfterBroken;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsSupportChunk;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool IsNonSupportedChunk;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool IsDetachedChunk;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RelativeVolume;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Volume;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool HasConcaveCollider;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float PreviewDecompositionValue;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color RandomMaterialColor;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool Visited;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<AdjacencyInfo> ListAdjacentChunks;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 m_v3InitialLocalPosition;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private Quaternion m_qInitialLocalRotation;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private Vector3 m_v3InitialLocalScale;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool m_bInitialLocalRotScaleInitialized;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<AdjacencyInfo> ListAdjacentChunksCopy;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_fInvisibleTimer;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool m_bNonSupportedChunkStored;

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xB5A11C", Offset = "0xB5A11C", VA = "0xB5A11C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xB5A224", Offset = "0xB5A224", VA = "0xB5A224")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xB5A368", Offset = "0xB5A368", VA = "0xB5A368")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xB5AAC0", Offset = "0xB5AAC0", VA = "0xB5AAC0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xB5A468", Offset = "0xB5A468", VA = "0xB5A468")]
	private void HandleCollision(Collider other, Vector3 v3CollisionPos, float relativeSpeed)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xB5AC4C", Offset = "0xB5AC4C", VA = "0xB5AC4C")]
	public bool IsDestructibleChunk()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xB5B438", Offset = "0xB5B438", VA = "0xB5B438")]
	public void ResetChunk(FracturedObject fracturedObjectSource)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xB5B5D0", Offset = "0xB5B5D0", VA = "0xB5B5D0")]
	public void Impact(Vector3 v3Position, float fExplosionForce, float fRadius, bool bAlsoImpactFreeChunks)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xB5BE5C", Offset = "0xB5BE5C", VA = "0xB5BE5C")]
	public void OnCreateFromFracturedObject(FracturedObject fracturedComponent, int nSplitSubMeshIndex)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xB5BF48", Offset = "0xB5BF48", VA = "0xB5BF48")]
	public void UpdatePreviewDecompositionPosition()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xB5C054", Offset = "0xB5C054", VA = "0xB5C054")]
	public void ConnectTo(FracturedChunk chunk, float fArea)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xB5C3B4", Offset = "0xB5C3B4", VA = "0xB5C3B4")]
	public void DisconnectFrom(FracturedChunk chunk)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xB5C19C", Offset = "0xB5C19C", VA = "0xB5C19C")]
	public bool IsConnectedTo(FracturedChunk chunk)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xB5AE9C", Offset = "0xB5AE9C", VA = "0xB5AE9C")]
	public void DetachFromObject(bool bCheckStructureIntegrity = true)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xB5C5A8", Offset = "0xB5C5A8", VA = "0xB5C5A8")]
	private void RemoveConnectionInfo()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xB5ADC0", Offset = "0xB5ADC0", VA = "0xB5ADC0")]
	public List<FracturedChunk> ComputeRandomConnectionBreaks()
	{
		return null;
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xB5CCF4", Offset = "0xB5CCF4", VA = "0xB5CCF4")]
	private static void ComputeRandomConnectionBreaksRecursive(FracturedChunk chunk, List<FracturedChunk> listBreaksOut, int nLevel)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xB5CF90", Offset = "0xB5CF90", VA = "0xB5CF90")]
	public static FracturedChunk ChunkRaycast(Vector3 v3Pos, Vector3 v3Forward, out RaycastHit hitInfo)
	{
		return null;
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xB5D12C", Offset = "0xB5D12C", VA = "0xB5D12C")]
	public FracturedChunk()
	{
	}
}
[Token(Token = "0x20001C4")]
[ExecuteInEditMode]
public class FracturedObject : MonoBehaviour
{
	[Token(Token = "0x20001C5")]
	public enum EFracturePattern
	{
		[Token(Token = "0x4000ACE")]
		BSP,
		[Token(Token = "0x4000ACF")]
		Voronoi
	}

	[Serializable]
	[Token(Token = "0x20001C6")]
	public class PrefabInfo
	{
		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float MinLifeTime;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MaxLifeTime;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject GameObject;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x800940", Offset = "0x800940", VA = "0x800940")]
		public PrefabInfo()
		{
		}
	}

	[Token(Token = "0x20001C7")]
	public enum ECCAlgorithm
	{
		[Token(Token = "0x4000AD4")]
		Fast,
		[Token(Token = "0x4000AD5")]
		Normal,
		[Token(Token = "0x4000AD6")]
		Legacy
	}

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool GUIExpandMain;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SourceObject;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool GenerateIslands;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool GenerateChunkConnectionInfo;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool StartStatic;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ChunkConnectionMinArea;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ChunkConnectionStrength;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ChunkHorizontalRadiusSupportStrength;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool SupportChunksAreIndestructible;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ChunkIslandConnectionMaxDistance;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TotalMass;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PhysicMaterial ChunkPhysicMaterial;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MinColliderVolumeForBox;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float CapPrecisionFix;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool InvertCapNormals;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool GUIExpandSplits;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public EFracturePattern FracturePattern;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool VoronoiVolumeOptimization;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool VoronoiProximityOptimization;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool VoronoiMultithreading;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VoronoiCellsXCount;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VoronoiCellsYCount;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int VoronoiCellsZCount;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VoronoiCellsXSizeVariation;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float VoronoiCellsYSizeVariation;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VoronoiCellsZSizeVariation;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int GenerateNumChunks;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool SplitsWorldSpace;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool SplitRegularly;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float SplitXProbability;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float SplitYProbability;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float SplitZProbability;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float SplitSizeVariation;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float splitXPosition;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float SplitXVariation;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float SplitYVariation;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float SplitZVariation;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material SplitMaterial;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float SplitMappingTileU;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float SplitMappingTileV;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool GUIExpandEvents;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float EventDetachMinMass;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float EventDetachMinVelocity;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float EventDetachExitForce;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float EventDetachUpwardsModifier;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip EventDetachSound;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public PrefabInfo[] EventDetachPrefabsArray;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string EventDetachCollisionCallMethod;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject EventDetachCollisionCallGameObject;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float EventDetachedMinLifeTime;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float EventDetachedMaxLifeTime;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float EventDetachedOffscreenLifeTime;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float EventDetachedMinMass;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float EventDetachedMinVelocity;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int EventDetachedMaxSounds;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioClip[] EventDetachedSoundArray;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int EventDetachedMaxPrefabs;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public PrefabInfo[] EventDetachedPrefabsArray;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string EventDetachedCollisionCallMethod;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject EventDetachedCollisionCallGameObject;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioClip EventExplosionSound;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int EventExplosionPrefabsInstanceCount;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public PrefabInfo[] EventExplosionPrefabsArray;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AudioClip EventImpactSound;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public PrefabInfo[] EventImpactPrefabsArray;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public string EventDetachedAnyCallMethod;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject EventDetachedAnyCallGameObject;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool GUIExpandSupportPlanes;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool useRandomSeed;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public int RandomSeed;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float DecomposePreview;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool AlwaysComputeColliders;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	public bool ShowChunkConnectionLines;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x176")]
	public bool ShowChunkColoredState;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x177")]
	public bool ShowChunkColoredRandomly;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool SaveMeshDataToAsset;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public string MeshAssetDataFile;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool Verbose;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	public bool IntegrateWithConcaveCollider;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public ECCAlgorithm ConcaveColliderAlgorithm;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public int ConcaveColliderMaxHulls;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public int ConcaveColliderMaxHullVertices;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public int ConcaveColliderLegacySteps;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[HideInInspector]
	public List<SupportPlane> ListSupportPlanes;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[HideInInspector]
	public List<FracturedChunk> ListFracturedChunks;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[HideInInspector]
	public GameObject SingleMeshObject;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public bool IsUsingSingleMeshObjectDraw;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	[HideInInspector]
	public float DecomposeRadius;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color GizmoColorSupport;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Color GizmoColorNonSupport;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool m_bCheckDetachNonSupportedChunkds;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	private bool m_bExploded;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
	private bool m_bDetached;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float[] m_afFreeChunkSoundTimers;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float[] m_afFreeChunkPrefabTimers;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Material m_GizmosMaterial;

	[Token(Token = "0x170000AE")]
	public Material GizmosMaterial
	{
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xB5D1C8", Offset = "0xB5D1C8", VA = "0xB5D1C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xB5D2A8", Offset = "0xB5D2A8", VA = "0xB5D2A8")]
		set
		{
		}
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xB5D2B0", Offset = "0xB5D2B0", VA = "0xB5D2B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xB5D744", Offset = "0xB5D744", VA = "0xB5D744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xB5E120", Offset = "0xB5E120", VA = "0xB5E120")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xB5E124", Offset = "0xB5E124", VA = "0xB5E124")]
	public void OnCreateFracturedObject()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xB5D500", Offset = "0xB5D500", VA = "0xB5D500")]
	public void SetSingleMeshVisibility(bool bEnabled)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xB5E1E0", Offset = "0xB5E1E0", VA = "0xB5E1E0")]
	public bool ResetChunks()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xB5B9EC", Offset = "0xB5B9EC", VA = "0xB5B9EC")]
	public List<FracturedChunk> GetDestructibleChunksInRadius(Vector3 v3Position, float fRadius, bool bAlsoIncludeFreeChunks)
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xB5E488", Offset = "0xB5E488", VA = "0xB5E488")]
	public void Explode(Vector3 v3ExplosionPosition, float fExplosionForce)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xB5E940", Offset = "0xB5E940", VA = "0xB5E940")]
	public void Explode(Vector3 v3ExplosionPosition, float fExplosionForce, float fRadius, bool bPlayExplosionSound, bool bInstanceExplosionPrefabs, bool bAlsoExplodeFree, bool bCheckStructureIntegrityAfter)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xB5EE3C", Offset = "0xB5EE3C", VA = "0xB5EE3C")]
	public void DeleteChunks()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xB5F054", Offset = "0xB5F054", VA = "0xB5F054")]
	public void CollapseChunks()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xB5F214", Offset = "0xB5F214", VA = "0xB5F214")]
	public void ExplodeChunks(float fExplosionForce, Vector3 v3ExplosionPosition, float fUpwardsModifier)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xB5F45C", Offset = "0xB5F45C", VA = "0xB5F45C")]
	public void ComputeChunksRelativeVolume()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xB5F9B8", Offset = "0xB5F9B8", VA = "0xB5F9B8")]
	public void ComputeChunksMass(float fTotalMass)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xB5FBCC", Offset = "0xB5FBCC", VA = "0xB5FBCC")]
	public bool HasDetachedChunks()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xB5C914", Offset = "0xB5C914", VA = "0xB5C914")]
	public void NotifyChunkDetach(FracturedChunk chunk)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xB5ACE8", Offset = "0xB5ACE8", VA = "0xB5ACE8")]
	public void NotifyDetachChunkCollision(FracturedChunk.CollisionInfo collisionInfo)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xB5FBD4", Offset = "0xB5FBD4", VA = "0xB5FBD4")]
	public void NotifyDetachChunkCollision(Vector3 v3Position, bool bIsMain)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xB5B0AC", Offset = "0xB5B0AC", VA = "0xB5B0AC")]
	public void NotifyFreeChunkCollision(FracturedChunk.CollisionInfo collisionInfo)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xB5BC6C", Offset = "0xB5BC6C", VA = "0xB5BC6C")]
	public void NotifyImpact(Vector3 v3Position)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xB5CB98", Offset = "0xB5CB98", VA = "0xB5CB98")]
	public void ResetAllChunkVisitedFlags()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xB5CB80", Offset = "0xB5CB80", VA = "0xB5CB80")]
	public void CheckDetachNonSupportedChunks(bool bForceImmediate = false)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xB5FDD0", Offset = "0xB5FDD0", VA = "0xB5FDD0")]
	public void MarkNonSupportedChunks()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xB5D8C0", Offset = "0xB5D8C0", VA = "0xB5D8C0")]
	private void CheckDetachNonSupportedChunksInternal(bool bOnlyMarkThem = false)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xB5FF38", Offset = "0xB5FF38", VA = "0xB5FF38")]
	private static bool AreSupportedChunksRecursive(FracturedChunk chunk, List<FracturedChunk> listChunksVisited, List<FracturedChunk> listChunksSupport)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xB601F8", Offset = "0xB601F8", VA = "0xB601F8")]
	public void AddSupportPlane()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xB602CC", Offset = "0xB602CC", VA = "0xB602CC")]
	public void ComputeSupportPlaneIntersections()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xB605F8", Offset = "0xB605F8", VA = "0xB605F8")]
	public FracturedObject()
	{
	}
}
[Token(Token = "0x20001C8")]
public class CombinedMesh : MonoBehaviour
{
	[Token(Token = "0x20001C9")]
	public delegate void CombineProgressDelegate(string strMessage, float fT);

	[Serializable]
	[Token(Token = "0x20001CA")]
	public class ObjectInfo
	{
		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material[] aMaterials;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 v3LocalPosition;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion qLocalRotation;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 v3LocalScale;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Matrix4x4 mtxLocal;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Matrix4x4 mtxWorld;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector3[] av3NormalsWorld;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector4[] av4TangentsWorld;

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x7FE118", Offset = "0x7FE118", VA = "0x7FE118")]
		public ObjectInfo(Material[] aMaterials, Mesh mesh, Transform transform, Matrix4x4 mtxLocal)
		{
		}
	}

	[Token(Token = "0x20001CB")]
	private class MaterialMeshInfo
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int nSubMesh;

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x7FE0D8", Offset = "0x7FE0D8", VA = "0x7FE0D8")]
		public MaterialMeshInfo(Transform transform, Mesh mesh, int nSubMesh)
		{
		}
	}

	[Token(Token = "0x20001CC")]
	public enum EPivotMode
	{
		[Token(Token = "0x4000AEC")]
		Keep,
		[Token(Token = "0x4000AED")]
		Center,
		[Token(Token = "0x4000AEE")]
		BottomCenter,
		[Token(Token = "0x4000AEF")]
		TopCenter,
		[Token(Token = "0x4000AF0")]
		Min,
		[Token(Token = "0x4000AF1")]
		Max
	}

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool SaveMeshAsset;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool KeepPosition;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public EPivotMode PivotMode;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter[] MeshObjects;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RootNode;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_bCancelled;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<ObjectInfo> m_listObjectInfo;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<Material, List<MaterialMeshInfo>> m_dicMeshEntries;

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x93D914", Offset = "0x93D914", VA = "0x93D914")]
	public void CancelCombining()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x93D920", Offset = "0x93D920", VA = "0x93D920")]
	public bool CombiningCancelled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x93D928", Offset = "0x93D928", VA = "0x93D928")]
	public void TransformObjInfoMeshVectorsToLocal(Transform newTransform)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x93DCE8", Offset = "0x93DCE8", VA = "0x93DCE8")]
	public int GetObjectCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x93DD34", Offset = "0x93DD34", VA = "0x93DD34")]
	public ObjectInfo GetObjectInfo(int nIndex)
	{
		return null;
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x93DDA8", Offset = "0x93DDA8", VA = "0x93DDA8")]
	public void Combine(CombineProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x9403D0", Offset = "0x9403D0", VA = "0x9403D0")]
	public CombinedMesh()
	{
	}
}
[Token(Token = "0x20001CD")]
public class CanvasLaserPointer : MonoBehaviour
{
	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float defaultLength;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VR_EventSystemInputModule mEventSystemInputModule;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject draggedObject;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5425BC", Offset = "0x5425BC")]
	private TMP_Text debugInfo;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask layerMask;

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x939E44", Offset = "0x939E44", VA = "0x939E44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x939E48", Offset = "0x939E48", VA = "0x939E48")]
	private void UpdateLaserLine()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x93A578", Offset = "0x93A578", VA = "0x93A578")]
	public bool UiButtonIsStateDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x93A618", Offset = "0x93A618", VA = "0x93A618")]
	public bool UiButtonIsStateUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x93A6B8", Offset = "0x93A6B8", VA = "0x93A6B8")]
	public CanvasLaserPointer()
	{
	}
}
[Token(Token = "0x20001CE")]
public class PhysicalLaserPointer : MonoBehaviour
{
	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float defaultLength;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[ShowOnly]
	private Transform pointedObject;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x998DAC", Offset = "0x998DAC", VA = "0x998DAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x998DB0", Offset = "0x998DB0", VA = "0x998DB0")]
	private void UpdateLaserLine()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x99955C", Offset = "0x99955C", VA = "0x99955C")]
	public PhysicalLaserPointer()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x999420", Offset = "0x999420", VA = "0x999420")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5473EC", Offset = "0x5473EC")]
	private void <UpdateLaserLine>g__LeaveCurrentPointedObject|5_0()
	{
	}
}
[Token(Token = "0x20001CF")]
public class VR_EventSystemInputModule : BaseInputModule
{
	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Camera m_Camera;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject m_CurrentObject;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PointerEventData m_Data;

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x875164", Offset = "0x875164", VA = "0x875164", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x8751DC", Offset = "0x8751DC", VA = "0x8751DC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x875908", Offset = "0x875908", VA = "0x875908")]
	public PointerEventData GetData()
	{
		return null;
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x8754BC", Offset = "0x8754BC", VA = "0x8754BC")]
	private void ProcessPress(PointerEventData data)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x8756FC", Offset = "0x8756FC", VA = "0x8756FC")]
	private void ProcessRelease(PointerEventData data)
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x87541C", Offset = "0x87541C", VA = "0x87541C")]
	public bool UiButtonIsStateDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x875658", Offset = "0x875658", VA = "0x875658")]
	public bool UiButtonIsStateUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x875910", Offset = "0x875910", VA = "0x875910")]
	public VR_EventSystemInputModule()
	{
	}
}
[Token(Token = "0x20001D0")]
public class VR_PhysicalButton : MonoBehaviour
{
	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform rt;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider collider;

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x875918", Offset = "0x875918", VA = "0x875918")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5473FC", Offset = "0x5473FC")]
	private void CreatePhysicalCollider()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x875A90", Offset = "0x875A90", VA = "0x875A90")]
	public VR_PhysicalButton()
	{
	}
}
namespace UltimateFracturing
{
	[Token(Token = "0x20001D1")]
	public static class ConcaveColliderInterface
	{
		[Token(Token = "0x20001D2")]
		private struct SConvexDecompositionInfoInOut
		{
			[Token(Token = "0x4000B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint uMaxHullVertices;

			[Token(Token = "0x4000B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint uMaxHulls;

			[Token(Token = "0x4000B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float fPrecision;

			[Token(Token = "0x4000B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float fBackFaceDistanceFactor;

			[Token(Token = "0x4000B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint uLegacyDepth;

			[Token(Token = "0x4000B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public uint uNormalizeInputMesh;

			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint uUseFastVersion;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public uint uTriangleCount;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public uint uVertexCount;

			[Token(Token = "0x4000B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int nHullsOut;
		}

		[Token(Token = "0x20001D3")]
		private struct SConvexDecompositionHullInfo
		{
			[Token(Token = "0x4000B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int nVertexCount;

			[Token(Token = "0x4000B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int nTriangleCount;
		}

		[Token(Token = "0x20001D4")]
		public delegate void LogDelegate(string message);

		[PreserveSig]
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x940494", Offset = "0x940494", VA = "0x940494")]
		private static extern void DllInit(bool bUseMultithreading);

		[PreserveSig]
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x940514", Offset = "0x940514", VA = "0x940514")]
		private static extern void DllClose();

		[PreserveSig]
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x940584", Offset = "0x940584", VA = "0x940584")]
		private static extern void SetLogFunctionPointer(IntPtr pfnUnity3DLog);

		[PreserveSig]
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x940604", Offset = "0x940604", VA = "0x940604")]
		private static extern void SetProgressFunctionPointer(IntPtr pfnUnity3DProgress);

		[PreserveSig]
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x940684", Offset = "0x940684", VA = "0x940684")]
		private static extern void CancelConvexDecomposition();

		[PreserveSig]
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x9406F4", Offset = "0x9406F4", VA = "0x9406F4")]
		private static extern bool DoConvexDecomposition(ref SConvexDecompositionInfoInOut infoInOut, Vector3[] pfVertices, int[] puIndices);

		[PreserveSig]
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x9407A4", Offset = "0x9407A4", VA = "0x9407A4")]
		private static extern bool GetHullInfo(uint uHullIndex, ref SConvexDecompositionHullInfo infoOut);

		[PreserveSig]
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x94083C", Offset = "0x94083C", VA = "0x94083C")]
		private static extern bool FillHullMeshData(uint uHullIndex, ref float pfVolumeOut, int[] pnIndicesOut, Vector3[] pfVerticesOut);

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x9408FC", Offset = "0x9408FC", VA = "0x9408FC")]
		public static int ComputeHull(GameObject gameObject, FracturedObject fracturedObject)
		{
			return default(int);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x940A8C", Offset = "0x940A8C", VA = "0x940A8C")]
		private static bool ComputeHull(GameObject gameObject, FracturedObject.ECCAlgorithm eAlgorithm, int nMaxHulls, int nMaxHullVertices, int nLegacySteps, bool bVerbose, out int nTotalTrianglesOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x941170", Offset = "0x941170", VA = "0x941170")]
		private static void Log(string message)
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public static class Fracturer
	{
		[Token(Token = "0x20001D6")]
		private class FracturingStats
		{
			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nChunkCount;

			[Token(Token = "0x4000B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int nTotalChunks;

			[Token(Token = "0x4000B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int nSplitCount;

			[Token(Token = "0x4000B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool bCancelFracturing;

			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x800980", Offset = "0x800980", VA = "0x800980")]
			public FracturingStats()
			{
			}
		}

		[Token(Token = "0x20001D7")]
		private class VoronoiCell
		{
			[Token(Token = "0x20001D8")]
			public class Face
			{
				[Token(Token = "0x4000B1C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Plane plane;

				[Token(Token = "0x4000B1D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Matrix4x4 mtxPlane;

				[Token(Token = "0x4000B1E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				public int nAdjacentCell;

				[Token(Token = "0x6000AE8")]
				[Address(RVA = "0x127636C", Offset = "0x127636C", VA = "0x127636C")]
				public Face(Plane plane, Matrix4x4 mtxPlane, int nAdjacentCell)
				{
				}
			}

			[Token(Token = "0x4000B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nIndex;

			[Token(Token = "0x4000B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int x;

			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int y;

			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int z;

			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 v3Center;

			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 v3Min;

			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 v3Max;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<Face> listCellFaces;

			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x8019A8", Offset = "0x8019A8", VA = "0x8019A8")]
			public VoronoiCell(int nIndex, int x, int y, int z)
			{
			}
		}

		[Token(Token = "0x20001D9")]
		private class VoronoiPointDistance
		{
			[Token(Token = "0x20001DA")]
			public class IncreasingDistanceComparer : IComparer<VoronoiPointDistance>
			{
				[Token(Token = "0x6000AEA")]
				[Address(RVA = "0x1276480", Offset = "0x1276480", VA = "0x1276480", Slot = "4")]
				public int Compare(VoronoiPointDistance a, VoronoiPointDistance b)
				{
					return default(int);
				}

				[Token(Token = "0x6000AEB")]
				[Address(RVA = "0x12764B4", Offset = "0x12764B4", VA = "0x12764B4")]
				public IncreasingDistanceComparer()
				{
				}
			}

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nIndex;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float fDistanceSqr;

			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x801A68", Offset = "0x801A68", VA = "0x801A68")]
			public VoronoiPointDistance(int nIndex, float fDistanceSqr)
			{
			}
		}

		[Token(Token = "0x20001DB")]
		public struct VoronoiCellKey
		{
			[Token(Token = "0x20001DC")]
			public class EqualityComparer : IEqualityComparer<VoronoiCellKey>
			{
				[Token(Token = "0x6000AED")]
				[Address(RVA = "0x12763DC", Offset = "0x12763DC", VA = "0x12763DC", Slot = "4")]
				public bool Equals(VoronoiCellKey x, VoronoiCellKey y)
				{
					return default(bool);
				}

				[Token(Token = "0x6000AEE")]
				[Address(RVA = "0x127640C", Offset = "0x127640C", VA = "0x127640C", Slot = "5")]
				public int GetHashCode(VoronoiCellKey x)
				{
					return default(int);
				}

				[Token(Token = "0x6000AEF")]
				[Address(RVA = "0x1276478", Offset = "0x1276478", VA = "0x1276478")]
				public EqualityComparer()
				{
				}
			}

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;

			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x801A5C", Offset = "0x801A5C", VA = "0x801A5C")]
			public VoronoiCellKey(int x, int y, int z)
			{
			}
		}

		[Token(Token = "0x20001DD")]
		private class VoronoiThreadData
		{
			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<VoronoiCell> listVoronoiCells;

			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshData meshDataCube;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<MeshData> listMeshDatasObject;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<MeshData> listMeshDatasChunks;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SpaceTreeNode spaceTree;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public FracturedObject fracturedComponent;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int nCurrentCell;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int nTotalCells;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int nCellsProcessed;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public ProgressDelegate progress;

			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0x801AA4", Offset = "0x801AA4", VA = "0x801AA4")]
			public VoronoiThreadData()
			{
			}
		}

		[Token(Token = "0x20001DE")]
		public delegate void ProgressDelegate(string strTitle, string message, float fT);

		[Token(Token = "0x20001DF")]
		private class SpaceTreeNode
		{
			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private SpaceTreeNode nodeOneSide;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private SpaceTreeNode nodeOtherSide;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int nLevel;

			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int nSplitsX;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int nSplitsY;

			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int nSplitsZ;

			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 v3Min;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 v3Max;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<MeshData> listMeshDatasSpace;

			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x800E74", Offset = "0x800E74", VA = "0x800E74")]
			public SpaceTreeNode()
			{
			}

			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x800EF8", Offset = "0x800EF8", VA = "0x800EF8")]
			public bool ContainsCompletely(Vector3 v3Min, Vector3 v3Max)
			{
				return default(bool);
			}

			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x800F68", Offset = "0x800F68", VA = "0x800F68")]
			public static List<MeshData> GetSmallestPossibleMeshData(SpaceTreeNode root, Vector3 v3Min, Vector3 v3Max)
			{
				return null;
			}

			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0x80102C", Offset = "0x80102C", VA = "0x80102C")]
			public static SpaceTreeNode BuildSpaceTree(MeshData meshDataIn, int nSubdivisionLevels, FracturedObject fracturedComponent, [Optional] ProgressDelegate progress)
			{
				return null;
			}
		}

		[Token(Token = "0x20001E0")]
		public class SplitOptions
		{
			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static SplitOptions Default;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool bForceNoProgressInfo;

			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool bForceNoIslandGeneration;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool bForceNoChunkConnectionInfo;

			[Token(Token = "0x4000B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			public bool bForceNoIslandConnectionInfo;

			[Token(Token = "0x4000B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool bForceNoCap;

			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			public bool bForceCapVertexSoup;

			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
			public bool bIgnoreNegativeSide;

			[Token(Token = "0x4000B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
			public bool bVerticesAreLocal;

			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int nForceMeshConnectivityHash;

			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x80190C", Offset = "0x80190C", VA = "0x80190C")]
			public SplitOptions()
			{
			}
		}

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FracturingStats s_FracturingStats;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VoronoiThreadData s_VoronoiThreadData;

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xB60880", Offset = "0xB60880", VA = "0xB60880")]
		public static void CancelFracturing()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xB609B8", Offset = "0xB609B8", VA = "0xB609B8")]
		public static bool IsFracturingCancelled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xB60B00", Offset = "0xB60B00", VA = "0xB60B00")]
		public static bool FractureToChunks(FracturedObject fracturedComponent, bool bPositionOnSourceAndHideOriginal, out List<GameObject> listGameObjectsOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xB611DC", Offset = "0xB611DC", VA = "0xB611DC")]
		private static Mesh CopyMesh(MeshFilter meshfIn)
		{
			return null;
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xB6162C", Offset = "0xB6162C", VA = "0xB6162C")]
		private static bool FractureToChunksBSP(FracturedObject fracturedComponent, bool bPositionOnSourceAndHideOriginal, out List<GameObject> listGameObjectsOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xB63054", Offset = "0xB63054", VA = "0xB63054")]
		private static bool FractureToChunksVoronoi(FracturedObject fracturedComponent, bool bPositionOnSourceAndHideOriginal, out List<GameObject> listGameObjectsOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xB6FE34", Offset = "0xB6FE34", VA = "0xB6FE34")]
		public static void ThreadVoronoiComputePlaneDependencies()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xB70B98", Offset = "0xB70B98", VA = "0xB70B98")]
		public static void ThreadVoronoiComputeCells()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xB65CC8", Offset = "0xB65CC8", VA = "0xB65CC8")]
		public static List<MeshData> ComputeMeshDataIslands(MeshData meshDataIn, bool bVerticesAreLocal, FracturedObject fracturedComponent, ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xB6F3A8", Offset = "0xB6F3A8", VA = "0xB6F3A8")]
		public static void ComputeChunkColliders(FracturedObject fracturedComponent, ProgressDelegate progress)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xB71F10", Offset = "0xB71F10", VA = "0xB71F10")]
		public static void DeleteChunkColliders(FracturedObject fracturedComponent)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xB66EC4", Offset = "0xB66EC4", VA = "0xB66EC4")]
		private static Matrix4x4 GetRandomPlaneSplitMatrix(MeshData meshDataIn, FracturedObject fracturedComponent, out int nSplitAxisPerformed)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xB6EC6C", Offset = "0xB6EC6C", VA = "0xB6EC6C")]
		private static GameObject CreateNewSplitGameObject(GameObject gameObjectIn, FracturedObject fracturedComponent, string strName, bool bTransformVerticesBackToLocal, MeshData meshData)
		{
			return null;
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xB71B5C", Offset = "0xB71B5C", VA = "0xB71B5C")]
		private static int CreateMeshConnectivityVoronoiHash(int nCell1, int nCell2)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xB6F084", Offset = "0xB6F084", VA = "0xB6F084")]
		private static void ComputeChunkConnections(FracturedObject fracturedObject, List<GameObject> listGameObjects, List<MeshData> listMeshDatas, [Optional] ProgressDelegate progress)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xB71BB0", Offset = "0xB71BB0", VA = "0xB71BB0")]
		private static void RemoveEmptySubmeshes(FracturedChunk fracturedChunk)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xB72214", Offset = "0xB72214", VA = "0xB72214")]
		public static bool SplitMeshUsingPlane(GameObject gameObjectIn, FracturedObject fracturedComponent, SplitOptions splitOptions, Transform transformPlaneSplit, out List<GameObject> listGameObjectsPosOut, out List<GameObject> listGameObjectsNegOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xB67538", Offset = "0xB67538", VA = "0xB67538")]
		private static bool SplitMeshUsingPlane(MeshData meshDataIn, FracturedObject fracturedComponent, SplitOptions splitOptions, Vector3 v3PlaneNormal, Vector3 v3PlaneRight, Vector3 v3PlanePoint, out List<MeshData> listMeshDatasPosOut, out List<MeshData> listMeshDatasNegOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xB663A0", Offset = "0xB663A0", VA = "0xB663A0")]
		private static bool ComputeIslandsMeshDataConnectivity(FracturedObject fracturedComponent, bool bVerticesAreLocal, MeshData meshData1, MeshData meshData2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xB7592C", Offset = "0xB7592C", VA = "0xB7592C")]
		public static bool IntersectEdges2D(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xB75AE4", Offset = "0xB75AE4", VA = "0xB75AE4")]
		private static float CrossProduct2D(Vector2 a, Vector2 b)
		{
			return default(float);
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xB737AC", Offset = "0xB737AC", VA = "0xB737AC")]
		private static void TriangulateConstrainedDelaunay(List<List<Vector3>> listlistPointsConstrainedDelaunay, List<List<int>> listlistHashValuesConstrainedDelaunay, bool bForceVertexSoup, FracturedObject fracturedComponent, bool bConnectivityPostprocess, MeshFaceConnectivity faceConnectivityPos, MeshFaceConnectivity faceConnectivityNeg, MeshDataConnectivity meshConnectivityPos, MeshDataConnectivity meshConnectivityNeg, int nForceMeshConnectivityHash, int nSplitCloseSubMesh, Matrix4x4 mtxPlane, Matrix4x4 mtxToLocalPos, Matrix4x4 mtxToLocalNeg, Vector3 v3CenterPos, Vector3 v3CenterNeg, List<int>[] aListIndicesPosInOut, List<VertexData> listVertexDataPosInOut, List<int>[] aListIndicesNegInOut, List<VertexData> listVertexDataNegInOut)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xB75AF4", Offset = "0xB75AF4", VA = "0xB75AF4")]
		private static void CreateIndexedMesh(IList<DelaunayTriangle> listTriangles, List<Vector3> listVerticesOut, List<int> listIndicesOut, Matrix4x4 mtxTransform, bool bTransform)
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xB761AC", Offset = "0xB761AC", VA = "0xB761AC")]
		private static void Triangulate(List<Vector3> listVertices, List<int> listIndices, FracturedObject fracturedComponent, List<List<Vector3>> listlistPointsConstrainedDelaunay, List<List<int>> listlistHashValuesConstrainedDelaunay, bool bConnectivityPostprocess, MeshFaceConnectivity faceConnectivityPos, MeshFaceConnectivity faceConnectivityNeg, MeshDataConnectivity meshConnectivityPos, MeshDataConnectivity meshConnectivityNeg, int nForceMeshConnectivityHash, int nSplitCloseSubMesh, Matrix4x4 mtxPlane, Matrix4x4 mtxToLocalPos, Matrix4x4 mtxToLocalNeg, Vector3 v3CenterPos, Vector3 v3CenterNeg, List<int>[] aListIndicesPosInOut, List<VertexData> listVertexDataPosInOut, List<int>[] aListIndicesNegInOut, List<VertexData> listVertexDataNegInOut)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xB77098", Offset = "0xB77098", VA = "0xB77098")]
		private static int ComputeVertexHash(Vector3 v3Vertex, List<List<Vector3>> listlistPointsConstrainedDelaunay, List<List<int>> listlistHashValuesConstrainedDelaunay)
		{
			return default(int);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xB72B8C", Offset = "0xB72B8C", VA = "0xB72B8C")]
		private static bool AddCapEdge(Dictionary<EdgeKeyByHash, CapEdge> dicCapEdges, int nVertexHash1, int nVertexHash2, Vector3 v3Vertex1, Vector3 v3Vertex2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xB72CFC", Offset = "0xB72CFC", VA = "0xB72CFC")]
		private static bool ResolveCap(Dictionary<EdgeKeyByHash, CapEdge> dicCapEdges, List<List<Vector3>> listlistResolvedCapVertices, List<List<int>> listlistResolvedCapHashValues, FracturedObject fracturedComponent)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E1")]
	public class DieTimer : MonoBehaviour
	{
		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SecondsToDie;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float OffscreenLifeTime;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_fTimer;

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x8CDA84", Offset = "0x8CDA84", VA = "0x8CDA84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x8CDA8C", Offset = "0x8CDA8C", VA = "0x8CDA8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x8CDB3C", Offset = "0x8CDB3C", VA = "0x8CDB3C")]
		public DieTimer()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public static class Parameters
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float EPSILONDISTANCEPLANE;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float EPSILONDISTANCEVERTEX;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float EPSILONCAPPRECISIONMIN;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float EPSILONCROSSPRODUCT;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float EPSILONINSIDETRIANGLE;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int VERTICESSPACESUBDIVISION;
	}
	[Token(Token = "0x20001E3")]
	public class VertexData
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nVertexHash;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 v3Vertex;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 v3Normal;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector4 v4Tangent;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color32 color32;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 v2Mapping1;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 v2Mapping2;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool bHasNormal;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool bHasTangent;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool bHasColor32;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool bHasMapping1;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool bHasMapping2;

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x875B34", Offset = "0x875B34", VA = "0x875B34")]
		public VertexData(int nVertexHash)
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x875BB8", Offset = "0x875BB8", VA = "0x875BB8")]
		public VertexData(int nVertexHash, Vector3 v3Vertex, Vector3 v3Normal, Vector3 v4Tangent, Color32 color32, Vector2 v2Mapping1, Vector2 v2Mapping2, bool bHasNormal, bool bHasTangent, bool bHasColor32, bool bHasMapping1, bool bHasMapping2)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x875CC4", Offset = "0x875CC4", VA = "0x875CC4")]
		public VertexData Copy()
		{
			return null;
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x875D9C", Offset = "0x875D9C", VA = "0x875D9C")]
		public static VertexData Lerp(int nVertexHash, VertexData vd1, VertexData vd2, float fT)
		{
			return null;
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x875FF8", Offset = "0x875FF8", VA = "0x875FF8")]
		public static bool ClipAgainstPlane(VertexData[] aVertexDataInput, int nIndexA, int nIndexB, Vector3 v3A, Vector3 v3B, Plane planeSplit, ref VertexData clippedVertexDataOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x8761F0", Offset = "0x8761F0", VA = "0x8761F0")]
		public static VertexData[] BuildVertexDataArray(Mesh mesh, Matrix4x4 mtxLocalToWorld, bool bTransformVerticesToWorld)
		{
			return null;
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x876808", Offset = "0x876808", VA = "0x876808")]
		public static void SetMeshDataFromVertexDataArray(MeshFilter meshFilter, MeshData meshData, bool bTransformVertexToLocal)
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public struct EdgeKeyByIndex
	{
		[Token(Token = "0x20001E5")]
		public class EqualityComparer : IEqualityComparer<EdgeKeyByIndex>
		{
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x7FF740", Offset = "0x7FF740", VA = "0x7FF740", Slot = "4")]
			public bool Equals(EdgeKeyByIndex x, EdgeKeyByIndex y)
			{
				return default(bool);
			}

			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0x7FF778", Offset = "0x7FF778", VA = "0x7FF778", Slot = "5")]
			public int GetHashCode(EdgeKeyByIndex x)
			{
				return default(int);
			}

			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0x7FF7C0", Offset = "0x7FF7C0", VA = "0x7FF7C0")]
			public EqualityComparer()
			{
			}
		}

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nIndexA;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int nIndexB;

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x8D05A8", Offset = "0x8D05A8", VA = "0x8D05A8")]
		public EdgeKeyByIndex(int nIndexA, int nIndexB)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x8D05B0", Offset = "0x8D05B0", VA = "0x8D05B0")]
		public void Set(int nIndexA, int nIndexB)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x8D05B8", Offset = "0x8D05B8", VA = "0x8D05B8")]
		public bool CompareTo(int nIndexA, int nIndexB)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E6")]
	public struct EdgeKeyByHash
	{
		[Token(Token = "0x20001E7")]
		public class EqualityComparer : IEqualityComparer<EdgeKeyByHash>
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x7FF6B8", Offset = "0x7FF6B8", VA = "0x7FF6B8", Slot = "4")]
			public bool Equals(EdgeKeyByHash x, EdgeKeyByHash y)
			{
				return default(bool);
			}

			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x7FF6F0", Offset = "0x7FF6F0", VA = "0x7FF6F0", Slot = "5")]
			public int GetHashCode(EdgeKeyByHash x)
			{
				return default(int);
			}

			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x7FF738", Offset = "0x7FF738", VA = "0x7FF738")]
			public EqualityComparer()
			{
			}
		}

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nHashA;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int nHashB;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x8D055C", Offset = "0x8D055C", VA = "0x8D055C")]
		public EdgeKeyByHash(int nHashA, int nHashB)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x8D0564", Offset = "0x8D0564", VA = "0x8D0564")]
		public void Set(int nHashA, int nHashB)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x8D056C", Offset = "0x8D056C", VA = "0x8D056C")]
		public bool CompareTo(int nHashA, int nHashB)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E8")]
	public struct ClippedEdge
	{
		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nOldIndexA;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int nOldIndexB;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int nNewIndexA;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int nNewIndexB;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nClippedIndex;

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x93C800", Offset = "0x93C800", VA = "0x93C800")]
		public ClippedEdge(int nOldIndexA, int nOldIndexB, int nNewIndexA, int nNewIndexB, int nClippedIndex)
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x93C810", Offset = "0x93C810", VA = "0x93C810")]
		public int GetFirstIndex(int nOldIndexA)
		{
			return default(int);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x93C82C", Offset = "0x93C82C", VA = "0x93C82C")]
		public int GetSecondIndex(int nOldIndexB)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001E9")]
	public struct CapEdge
	{
		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 v1;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 v2;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int nHash1;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nHash2;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fLength;

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x93A6C0", Offset = "0x93A6C0", VA = "0x93A6C0")]
		public CapEdge(int nHash1, int nHash2, Vector3 v1, Vector3 v2, float fLength)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x93A6D8", Offset = "0x93A6D8", VA = "0x93A6D8")]
		public int SharesVertex1Of(CapEdge edge)
		{
			return default(int);
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x93A704", Offset = "0x93A704", VA = "0x93A704")]
		public int SharesVertex2Of(CapEdge edge)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001EA")]
	public class MeshFaceConnectivity
	{
		[Token(Token = "0x20001EB")]
		public struct EdgeData
		{
			[Token(Token = "0x20001EC")]
			public struct SideData
			{
				[Token(Token = "0x4000B70")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int nFace;

				[Token(Token = "0x4000B71")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public int nSubMesh;

				[Token(Token = "0x4000B72")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public int nSubMeshFace;

				[Token(Token = "0x4000B73")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public int nEdgePos;

				[Token(Token = "0x4000B74")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int nVertexDataV1;

				[Token(Token = "0x4000B75")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public int nVertexDataV2;

				[Token(Token = "0x6000B20")]
				[Address(RVA = "0x127652C", Offset = "0x127652C", VA = "0x127652C")]
				public SideData(int nFace, int nSubMesh, int nSubMeshFace, int nEdgePos, int nVertexDataV1, int nVertexDataV2)
				{
				}
			}

			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int nEdgeIndex;

			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private int nVertex1Hash;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int nVertex2Hash;

			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 v1;

			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 v2;

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<SideData> listSides;

			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0x807A50", Offset = "0x807A50", VA = "0x807A50")]
			public EdgeData(int nEdgeIndex, int nFace, int nSubMesh, int nSubMeshFace, int nEdgePos, Vector3 v1, Vector3 v2, int nVertex1Hash, int nVertex2Hash, int nVertexDataV1, int nVertexDataV2)
			{
			}

			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0x807BB8", Offset = "0x807BB8", VA = "0x807BB8")]
			public bool Compare(int nVertex1Hash, int nVertex2Hash)
			{
				return default(bool);
			}

			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0x807BF4", Offset = "0x807BF4", VA = "0x807BF4")]
			public void AddSideData(int nFace, int nSubMesh, int nSubMeshFace, int nEdgePos, int nVertexDataV1, int nVertexDataV2)
			{
			}

			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0x807D0C", Offset = "0x807D0C", VA = "0x807D0C")]
			public bool HasMoreThanOneSide()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001ED")]
		public class TriangleData
		{
			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nSubMesh;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int nTriangle;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] anEdges;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<int>[] alistNeighborSubMeshes;

			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<int>[] alistNeighborTriangles;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool bVisited;

			[Token(Token = "0x6000B21")]
			[Address(RVA = "0x807D64", Offset = "0x807D64", VA = "0x807D64")]
			public TriangleData(int nSubMesh, int nTriangle)
			{
			}
		}

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TriangleData> listTriangles;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<EdgeData> listEdges;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> listEdgeIndices;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<EdgeKeyByHash, EdgeData> dicEdges;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int nEdgeCount;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, int> dicSubMeshTriangleCount;

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x889A84", Offset = "0x889A84", VA = "0x889A84")]
		public MeshFaceConnectivity()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x889C38", Offset = "0x889C38", VA = "0x889C38")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x889D24", Offset = "0x889D24", VA = "0x889D24")]
		public void ResetVisited()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x889DC0", Offset = "0x889DC0", VA = "0x889DC0")]
		public void AddEdge(int nSubMesh, Vector3 v1, Vector3 v2, int nVertex1Hash, int nVertex2Hash, int nVertexDataIndex1, int nVertexDataIndex2)
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class MeshDataConnectivity
	{
		[Token(Token = "0x20001EF")]
		public struct Face
		{
			[Token(Token = "0x20001F0")]
			public class EqualityComparer : IEqualityComparer<Face>
			{
				[Token(Token = "0x6000B2A")]
				[Address(RVA = "0x12764BC", Offset = "0x12764BC", VA = "0x12764BC", Slot = "4")]
				public bool Equals(Face x, Face y)
				{
					return default(bool);
				}

				[Token(Token = "0x6000B2B")]
				[Address(RVA = "0x12764DC", Offset = "0x12764DC", VA = "0x12764DC", Slot = "5")]
				public int GetHashCode(Face x)
				{
					return default(int);
				}

				[Token(Token = "0x6000B2C")]
				[Address(RVA = "0x1276524", Offset = "0x1276524", VA = "0x1276524")]
				public EqualityComparer()
				{
				}
			}

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int nSubMesh;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int nFaceIndex;

			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x807A48", Offset = "0x807A48", VA = "0x807A48")]
			public Face(int nSubMesh, int nFaceIndex)
			{
			}
		}

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int s_CurrentSharedFaceHash;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<int, List<Face>> dicHash2FaceList;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Face, List<int>> dicFace2HashList;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<Face, bool> dicFace2IsClipped;

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x884D1C", Offset = "0x884D1C", VA = "0x884D1C")]
		public MeshDataConnectivity()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x886550", Offset = "0x886550", VA = "0x886550")]
		public MeshDataConnectivity GetDeepCopy()
		{
			return null;
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x889258", Offset = "0x889258", VA = "0x889258")]
		public void NotifyNewClippedFace(MeshData meshDataSource, int nSourceSubMesh, int nSourceFaceIndex, int nDestSubMesh, int nDestFaceIndex)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x8896E8", Offset = "0x8896E8", VA = "0x8896E8")]
		public static int GetNewHash()
		{
			return default(int);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x88984C", Offset = "0x88984C", VA = "0x88984C")]
		public void NotifyNewCapFace(int nHash, int nSubMesh, int nFaceIndex)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x888DB4", Offset = "0x888DB4", VA = "0x888DB4")]
		public void NotifyRemappedFace(MeshDataConnectivity source, int nSourceSubMesh, int nSourceFaceIndex, int nDestSubMesh, int nDestFaceIndex)
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class MeshData
	{
		[Token(Token = "0x20001F2")]
		public class IncreasingSizeComparer : IComparer<MeshData>
		{
			[Token(Token = "0x4000B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int nSplitAxis;

			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x807864", Offset = "0x807864", VA = "0x807864")]
			public IncreasingSizeComparer(int nSplitAxis)
			{
			}

			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x807890", Offset = "0x807890", VA = "0x807890", Slot = "4")]
			public int Compare(MeshData a, MeshData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20001F3")]
		public class DecreasingSizeComparer : IComparer<MeshData>
		{
			[Token(Token = "0x4000B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int nSplitAxis;

			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0x807680", Offset = "0x807680", VA = "0x807680")]
			public DecreasingSizeComparer(int nSplitAxis)
			{
			}

			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0x8076AC", Offset = "0x8076AC", VA = "0x8076AC", Slot = "4")]
			public int Compare(MeshData a, MeshData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nSubMeshCount;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[][] aaIndices;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int nSplitCloseSubMesh;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VertexData[] aVertexData;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 v3Position;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion qRotation;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 v3Scale;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 v3Min;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 v3Max;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int nCurrentVertexHash;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material[] aMaterials;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MeshDataConnectivity meshDataConnectivity;

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x884C74", Offset = "0x884C74", VA = "0x884C74")]
		private MeshData()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x884E64", Offset = "0x884E64", VA = "0x884E64")]
		public MeshData(Material[] aMaterials, List<int>[] alistIndices, List<VertexData> listVertexData, int nSplitCloseSubMesh, Vector3 v3Position, Quaternion qRotation, Vector3 v3Scale, Matrix4x4 mtxTransformVertices, bool bUseTransform, bool bBuildVertexHashData)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x885B80", Offset = "0x885B80", VA = "0x885B80")]
		public MeshData(Transform transform, Mesh mesh, Material[] aMaterials, Matrix4x4 mtxLocalToWorld, bool bTransformVerticesToWorld, int nSplitCloseSubMesh, bool bBuildVertexHashData)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x885C94", Offset = "0x885C94", VA = "0x885C94")]
		public MeshData(Vector3 v3Position, Quaternion qRotation, Vector3 v3Scale, Mesh mesh, Material[] aMaterials, Matrix4x4 mtxLocalToWorld, bool bTransformVerticesToWorld, int nSplitCloseSubMesh, bool bBuildVertexHashData)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x885F24", Offset = "0x885F24", VA = "0x885F24")]
		public static MeshData CreateBoxMeshData(Vector3 v3Pos, Quaternion qRot, Vector3 v3Scale, Vector3 v3Min, Vector3 v3Max)
		{
			return null;
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x8862BC", Offset = "0x8862BC", VA = "0x8862BC")]
		public MeshData GetDeepCopy()
		{
			return null;
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x886DEC", Offset = "0x886DEC", VA = "0x886DEC")]
		public bool FillMeshFilter(MeshFilter meshFilter, bool bTransformVerticesToLocal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x885174", Offset = "0x885174", VA = "0x885174")]
		public static void ComputeMinMax(IEnumerable<VertexData> VertexData, ref Vector3 v3Min, ref Vector3 v3Max)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x8854C4", Offset = "0x8854C4", VA = "0x8854C4")]
		private void BuildVertexHashData()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x886F78", Offset = "0x886F78", VA = "0x886F78")]
		public bool GetSharedFacesArea(FracturedObject fracturedComponent, MeshData meshData2, out float fSharedArea)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x8878A0", Offset = "0x8878A0", VA = "0x8878A0")]
		private static bool Face2InsideFace1(FracturedObject fracturedComponent, MeshData meshData1, MeshData meshData2, MeshDataConnectivity.Face face1, MeshDataConnectivity.Face face2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x8880B4", Offset = "0x8880B4", VA = "0x8880B4")]
		public static List<MeshData> PostProcessConnectivity(MeshData meshDataSource, MeshFaceConnectivity connectivity, MeshDataConnectivity meshConnectivity, List<int>[] alistIndices, List<VertexData> listVertexData, int nSplitCloseSubMesh, int nCurrentVertexHash, bool bTransformToLocal)
		{
			return null;
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x888D1C", Offset = "0x888D1C", VA = "0x888D1C")]
		private static bool StillHasFacesToProcess(List<int>[] alistFacesRemaining)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x88879C", Offset = "0x88879C", VA = "0x88879C")]
		private static void LookForClosedObjectRecursive(MeshFaceConnectivity connectivity, MeshDataConnectivity meshConnectivity, int nSubMeshStart, int nFaceSubMeshStart, List<int>[] alistIndicesIn, List<VertexData> listVertexDataIn, List<int>[] alistFacesRemainingInOut, int[] aLinearFaceIndexStart, List<int>[] alistIndicesOut, List<VertexData> listVertexDataOut, Dictionary<int, int> dicVertexRemap, MeshDataConnectivity meshConnectivityOut)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F4")]
	public class SupportPlane
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool GUIExpanded;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string GUIName;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool GUIShowInScene;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 v3PlanePosition;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion qPlaneRotation;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 v3PlaneScale;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Mesh planeMesh;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FracturedObject fracturedObject;

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x8685E0", Offset = "0x8685E0", VA = "0x8685E0")]
		public SupportPlane(FracturedObject fracturedObject)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x868B64", Offset = "0x868B64", VA = "0x868B64")]
		public Matrix4x4 GetLocalMatrix()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x868BC4", Offset = "0x868BC4", VA = "0x868BC4")]
		public Vector3[] GetBoundingBoxSegments(Bounds bounds)
		{
			return null;
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x868EAC", Offset = "0x868EAC", VA = "0x868EAC")]
		public bool IntersectsWith(GameObject otherGameObject, bool bBelowIsAlsoValid = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x8695C4", Offset = "0x8695C4", VA = "0x8695C4")]
		private static bool TestSegmentVsPlane(Vector3 v1, Vector3 v2, Plane plane, Matrix4x4 mtxToPlaneLocal, float fLimitRight, float fLimitUp, float fLimitForward)
		{
			return default(bool);
		}
	}
}
namespace Poly2Tri
{
	[Token(Token = "0x20001F5")]
	public static class P2T
	{
		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TriangulationAlgorithm _defaultAlgorithm;

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x9950B4", Offset = "0x9950B4", VA = "0x9950B4")]
		public static void Triangulate(PolygonSet ps)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x995394", Offset = "0x995394", VA = "0x995394")]
		public static void Triangulate(Polygon p)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x995480", Offset = "0x995480", VA = "0x995480")]
		public static void Triangulate(ConstrainedPointSet cps)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x9954EC", Offset = "0x9954EC", VA = "0x9954EC")]
		public static void Triangulate(PointSet ps)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x995558", Offset = "0x995558", VA = "0x995558")]
		public static TriangulationContext CreateContext(TriangulationAlgorithm algorithm)
		{
			return null;
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x995400", Offset = "0x995400", VA = "0x995400")]
		public static void Triangulate(TriangulationAlgorithm algorithm, ITriangulatable t)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x9955B0", Offset = "0x9955B0", VA = "0x9955B0")]
		public static void Triangulate(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x995648", Offset = "0x995648", VA = "0x995648")]
		public static void Warmup()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class DelaunayTriangle
	{
		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FixedArray3<TriangulationPoint> Points;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FixedArray3<DelaunayTriangle> Neighbors;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FixedBitArray3 mEdgeIsConstrained;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public FixedBitArray3 EdgeIsDelaunay;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542670", Offset = "0x542670")]
		private bool <IsInterior>k__BackingField;

		[Token(Token = "0x170000AF")]
		public FixedBitArray3 EdgeIsConstrained
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x8CC37C", Offset = "0x8CC37C", VA = "0x8CC37C")]
			get
			{
				return default(FixedBitArray3);
			}
		}

		[Token(Token = "0x170000B0")]
		public bool IsInterior
		{
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0x8CC38C", Offset = "0x8CC38C", VA = "0x8CC38C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547434", Offset = "0x547434")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0x8CC394", Offset = "0x8CC394", VA = "0x8CC394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547444", Offset = "0x547444")]
			set
			{
			}
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x8C6620", Offset = "0x8C6620", VA = "0x8C6620")]
		public DelaunayTriangle(TriangulationPoint p1, TriangulationPoint p2, TriangulationPoint p3)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x8C872C", Offset = "0x8C872C", VA = "0x8C872C")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x8CC3A0", Offset = "0x8CC3A0", VA = "0x8CC3A0")]
		public int IndexCWFrom(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x8CC3D8", Offset = "0x8CC3D8", VA = "0x8CC3D8")]
		public int IndexCCWFrom(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x8C55F8", Offset = "0x8C55F8", VA = "0x8C55F8")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x8CC410", Offset = "0x8CC410", VA = "0x8CC410")]
		private void MarkNeighbor(TriangulationPoint p1, TriangulationPoint p2, DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x8C66C8", Offset = "0x8C66C8", VA = "0x8C66C8")]
		public void MarkNeighbor(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x8CC4E0", Offset = "0x8CC4E0", VA = "0x8CC4E0")]
		public void ClearNeighbors()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x8CC560", Offset = "0x8CC560", VA = "0x8CC560")]
		public void ClearNeighbor(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x8C5E80", Offset = "0x8C5E80", VA = "0x8C5E80")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x8C56D8", Offset = "0x8C56D8", VA = "0x8C56D8")]
		public TriangulationPoint OppositePoint(DelaunayTriangle t, TriangulationPoint p)
		{
			return null;
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x8C5FE0", Offset = "0x8C5FE0", VA = "0x8C5FE0")]
		public DelaunayTriangle NeighborCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x8C5DDC", Offset = "0x8C5DDC", VA = "0x8C5DDC")]
		public DelaunayTriangle NeighborCCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x8C5654", Offset = "0x8C5654", VA = "0x8C5654")]
		public DelaunayTriangle NeighborAcrossFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x8C5D50", Offset = "0x8C5D50", VA = "0x8C5D50")]
		public TriangulationPoint PointCCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x8C5F54", Offset = "0x8C5F54", VA = "0x8C5F54")]
		public TriangulationPoint PointCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x8CC658", Offset = "0x8CC658", VA = "0x8CC658")]
		private void RotateCW()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x8C88A0", Offset = "0x8C88A0", VA = "0x8C88A0")]
		public void Legalize(TriangulationPoint oPoint, TriangulationPoint nPoint)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x8CC728", Offset = "0x8CC728", VA = "0x8CC728", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x8CC92C", Offset = "0x8CC92C", VA = "0x8CC92C")]
		public void MarkNeighborEdges()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x8CCA78", Offset = "0x8CCA78", VA = "0x8CCA78")]
		public void MarkEdge(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x8CCB80", Offset = "0x8CCB80", VA = "0x8CCB80")]
		public void MarkEdge(List<DelaunayTriangle> tList)
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x8C54E0", Offset = "0x8C54E0", VA = "0x8C54E0")]
		public void MarkConstrainedEdge(int index)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x8CCD68", Offset = "0x8CCD68", VA = "0x8CCD68")]
		public void MarkConstrainedEdge(DTSweepConstraint edge)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x8C77D4", Offset = "0x8C77D4", VA = "0x8C77D4")]
		public void MarkConstrainedEdge(TriangulationPoint p, TriangulationPoint q)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x8CCDC0", Offset = "0x8CCDC0", VA = "0x8CCDC0")]
		public double Area()
		{
			return default(double);
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x8CCEEC", Offset = "0x8CCEEC", VA = "0x8CCEEC")]
		public TriangulationPoint Centroid()
		{
			return null;
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x8C76E8", Offset = "0x8C76E8", VA = "0x8C76E8")]
		public int EdgeIndex(TriangulationPoint p1, TriangulationPoint p2)
		{
			return default(int);
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x8C5434", Offset = "0x8C5434", VA = "0x8C5434")]
		public bool GetConstrainedEdgeCCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x8C6234", Offset = "0x8C6234", VA = "0x8C6234")]
		public bool GetConstrainedEdgeCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x8CD070", Offset = "0x8CD070", VA = "0x8CD070")]
		public bool GetConstrainedEdgeAcross(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x8CD0AC", Offset = "0x8CD0AC", VA = "0x8CD0AC")]
		protected void SetConstrainedEdge(int idx, bool ce)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x8C89DC", Offset = "0x8C89DC", VA = "0x8C89DC")]
		public void SetConstrainedEdgeCCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x8C8A2C", Offset = "0x8C8A2C", VA = "0x8C8A2C")]
		public void SetConstrainedEdgeCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x8C87DC", Offset = "0x8C87DC", VA = "0x8C87DC")]
		public void SetConstrainedEdgeAcross(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x8C8810", Offset = "0x8C8810", VA = "0x8C8810")]
		public bool GetDelaunayEdgeCCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x8C8858", Offset = "0x8C8858", VA = "0x8C8858")]
		public bool GetDelaunayEdgeCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x8CD0B8", Offset = "0x8CD0B8", VA = "0x8CD0B8")]
		public bool GetDelaunayEdgeAcross(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x8C893C", Offset = "0x8C893C", VA = "0x8C893C")]
		public void SetDelaunayEdgeCCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x8C898C", Offset = "0x8C898C", VA = "0x8C898C")]
		public void SetDelaunayEdgeCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x8CD0E0", Offset = "0x8CD0E0", VA = "0x8CD0E0")]
		public void SetDelaunayEdgeAcross(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x8CD110", Offset = "0x8CD110", VA = "0x8CD110")]
		public bool GetEdge(int idx, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x8C5490", Offset = "0x8C5490", VA = "0x8C5490")]
		public bool GetEdgeCCW(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x8CD230", Offset = "0x8CD230", VA = "0x8CD230")]
		public bool GetEdgeCW(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x8CD280", Offset = "0x8CD280", VA = "0x8CD280")]
		public bool GetEdgeAcross(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001F7")]
	public class AdvancingFront
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AdvancingFrontNode Head;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdvancingFrontNode Tail;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected AdvancingFrontNode Search;

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x92A5DC", Offset = "0x92A5DC", VA = "0x92A5DC")]
		public AdvancingFront(AdvancingFrontNode head, AdvancingFrontNode tail)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x92A618", Offset = "0x92A618", VA = "0x92A618")]
		public void AddNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x92A61C", Offset = "0x92A61C", VA = "0x92A61C")]
		public void RemoveNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x92A620", Offset = "0x92A620", VA = "0x92A620", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x92A720", Offset = "0x92A720", VA = "0x92A720")]
		private AdvancingFrontNode FindSearchNode(double x)
		{
			return null;
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x92A728", Offset = "0x92A728", VA = "0x92A728")]
		public AdvancingFrontNode LocateNode(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x92A764", Offset = "0x92A764", VA = "0x92A764")]
		private AdvancingFrontNode LocateNode(double x)
		{
			return null;
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x92A7CC", Offset = "0x92A7CC", VA = "0x92A7CC")]
		public AdvancingFrontNode LocatePoint(TriangulationPoint point)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F8")]
	public class AdvancingFrontNode
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AdvancingFrontNode Next;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdvancingFrontNode Prev;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double Value;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangulationPoint Point;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DelaunayTriangle Triangle;

		[Token(Token = "0x170000B1")]
		public bool HasNext
		{
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0x92A940", Offset = "0x92A940", VA = "0x92A940")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B2")]
		public bool HasPrev
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x92A950", Offset = "0x92A950", VA = "0x92A950")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x92A8F8", Offset = "0x92A8F8", VA = "0x92A8F8")]
		public AdvancingFrontNode(TriangulationPoint point)
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public static class DTSweep
	{
		[Token(Token = "0x4000BA6")]
		private const double PI_div2 = Math.PI / 2.0;

		[Token(Token = "0x4000BA7")]
		private const double PI_3div4 = Math.PI * 3.0 / 4.0;

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x8C4408", Offset = "0x8C4408", VA = "0x8C4408")]
		public static void Triangulate(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x8C46A0", Offset = "0x8C46A0", VA = "0x8C46A0")]
		private static void Sweep(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x8C490C", Offset = "0x8C490C", VA = "0x8C490C")]
		private static void FixupConstrainedEdges(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x8C4C24", Offset = "0x8C4C24", VA = "0x8C4C24")]
		private static void FinalizationConvexHull(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x8C54EC", Offset = "0x8C54EC", VA = "0x8C54EC")]
		private static void TurnAdvancingFrontConvex(DTSweepContext tcx, AdvancingFrontNode b, AdvancingFrontNode c)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x8C4B6C", Offset = "0x8C4B6C", VA = "0x8C4B6C")]
		private static void FinalizationPolygon(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x8C6294", Offset = "0x8C6294", VA = "0x8C6294")]
		private static void FinalizationConstraints(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x8C5024", Offset = "0x8C5024", VA = "0x8C5024")]
		private static AdvancingFrontNode PointEvent(DTSweepContext tcx, TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x8C6360", Offset = "0x8C6360", VA = "0x8C6360")]
		private static AdvancingFrontNode NewFrontTriangle(DTSweepContext tcx, TriangulationPoint point, AdvancingFrontNode node)
		{
			return null;
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x8C51DC", Offset = "0x8C51DC", VA = "0x8C51DC")]
		private static void EdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x8C6C58", Offset = "0x8C6C58", VA = "0x8C6C58")]
		private static void FillEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x8C715C", Offset = "0x8C715C", VA = "0x8C715C")]
		private static void FillRightConcaveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x8C7238", Offset = "0x8C7238", VA = "0x8C7238")]
		private static void FillRightConvexEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x8C7320", Offset = "0x8C7320", VA = "0x8C7320")]
		private static void FillRightBelowEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x8C6F28", Offset = "0x8C6F28", VA = "0x8C6F28")]
		private static void FillRightAboveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x8C742C", Offset = "0x8C742C", VA = "0x8C742C")]
		private static void FillLeftConvexEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x8C750C", Offset = "0x8C750C", VA = "0x8C750C")]
		private static void FillLeftConcaveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x8C75E0", Offset = "0x8C75E0", VA = "0x8C75E0")]
		private static void FillLeftBelowEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x8C7044", Offset = "0x8C7044", VA = "0x8C7044")]
		private static void FillLeftAboveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x8C6B94", Offset = "0x8C6B94", VA = "0x8C6B94")]
		private static bool IsEdgeSideOfTriangle(DelaunayTriangle triangle, TriangulationPoint ep, TriangulationPoint eq)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x8C6C88", Offset = "0x8C6C88", VA = "0x8C6C88")]
		private static void EdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle triangle, TriangulationPoint point)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x8C7814", Offset = "0x8C7814", VA = "0x8C7814")]
		private static void FlipEdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle t, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x8C7CA4", Offset = "0x8C7CA4", VA = "0x8C7CA4")]
		private static bool NextFlipPoint(TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle ot, TriangulationPoint op, out TriangulationPoint newP)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x8C7BF0", Offset = "0x8C7BF0", VA = "0x8C7BF0")]
		private static DelaunayTriangle NextFlipTriangle(DTSweepContext tcx, Orientation o, DelaunayTriangle t, DelaunayTriangle ot, TriangulationPoint p, TriangulationPoint op)
		{
			return null;
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x8C7D7C", Offset = "0x8C7D7C", VA = "0x8C7D7C")]
		private static void FlipScanEdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle flipTriangle, DelaunayTriangle t, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x8C64F0", Offset = "0x8C64F0", VA = "0x8C64F0")]
		private static void FillAdvancingFront(DTSweepContext tcx, AdvancingFrontNode n)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x8C8244", Offset = "0x8C8244", VA = "0x8C8244")]
		private static void FillBasin(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x8C84DC", Offset = "0x8C84DC", VA = "0x8C84DC")]
		private static void FillBasinReq(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x8C860C", Offset = "0x8C860C", VA = "0x8C860C")]
		private static bool IsShallow(DTSweepContext tcx, AdvancingFrontNode node)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x8C7FF8", Offset = "0x8C7FF8", VA = "0x8C7FF8")]
		private static double HoleAngle(AdvancingFrontNode node)
		{
			return default(double);
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x8C8144", Offset = "0x8C8144", VA = "0x8C8144")]
		private static double BasinAngle(AdvancingFrontNode node)
		{
			return default(double);
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x8C60EC", Offset = "0x8C60EC", VA = "0x8C60EC")]
		private static void Fill(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x8C68AC", Offset = "0x8C68AC", VA = "0x8C68AC")]
		private static bool Legalize(DTSweepContext tcx, DelaunayTriangle t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x8C5710", Offset = "0x8C5710", VA = "0x8C5710")]
		private static void RotateTrianglePair(DelaunayTriangle t, TriangulationPoint p, DelaunayTriangle ot, TriangulationPoint op)
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class DTSweepBasin
	{
		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AdvancingFrontNode leftNode;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdvancingFrontNode bottomNode;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancingFrontNode rightNode;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double width;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool leftHighest;

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x8C8A7C", Offset = "0x8C8A7C", VA = "0x8C8A7C")]
		public DTSweepBasin()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class DTSweepConstraint : TriangulationConstraint
	{
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x8C8A84", Offset = "0x8C8A84", VA = "0x8C8A84")]
		public DTSweepConstraint(TriangulationPoint p1, TriangulationPoint p2)
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class DTSweepContext : TriangulationContext
	{
		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly float ALPHA;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AdvancingFront Front;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542680", Offset = "0x542680")]
		private TriangulationPoint <Head>k__BackingField;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542690", Offset = "0x542690")]
		private TriangulationPoint <Tail>k__BackingField;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public DTSweepBasin Basin;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public DTSweepEdgeEvent EdgeEvent;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DTSweepPointComparator _comparator;

		[Token(Token = "0x170000B3")]
		public TriangulationPoint Head
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x8C8AC4", Offset = "0x8C8AC4", VA = "0x8C8AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547454", Offset = "0x547454")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x8C8ACC", Offset = "0x8C8ACC", VA = "0x8C8ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547464", Offset = "0x547464")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public TriangulationPoint Tail
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x8C8AD4", Offset = "0x8C8AD4", VA = "0x8C8AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547474", Offset = "0x547474")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x8C8ADC", Offset = "0x8C8ADC", VA = "0x8C8ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547484", Offset = "0x547484")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public override TriangulationAlgorithm Algorithm
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x8C8AE4", Offset = "0x8C8AE4", VA = "0x8C8AE4", Slot = "4")]
			get
			{
				return default(TriangulationAlgorithm);
			}
		}

		[Token(Token = "0x170000B6")]
		public override bool IsDebugEnabled
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x8C8BD4", Offset = "0x8C8BD4", VA = "0x8C8BD4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x8C8BDC", Offset = "0x8C8BDC", VA = "0x8C8BDC", Slot = "9")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x8C8AEC", Offset = "0x8C8AEC", VA = "0x8C8AEC")]
		public DTSweepContext()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x8C5CEC", Offset = "0x8C5CEC", VA = "0x8C5CEC")]
		public void RemoveFromList(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x8C6290", Offset = "0x8C6290", VA = "0x8C6290")]
		public void MeshClean(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x8C8C64", Offset = "0x8C8C64", VA = "0x8C8C64")]
		private void MeshCleanReq(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x8C8DB0", Offset = "0x8C8DB0", VA = "0x8C8DB0", Slot = "7")]
		public override void Clear()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x8C64D4", Offset = "0x8C64D4", VA = "0x8C64D4")]
		public void AddNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x8C86A8", Offset = "0x8C86A8", VA = "0x8C86A8")]
		public void RemoveNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x8C6344", Offset = "0x8C6344", VA = "0x8C6344")]
		public AdvancingFrontNode LocateNode(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x8C446C", Offset = "0x8C446C", VA = "0x8C446C")]
		public void CreateAdvancingFront()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x8C5C08", Offset = "0x8C5C08", VA = "0x8C5C08")]
		public void MapTriangleToNodes(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x8C8E10", Offset = "0x8C8E10", VA = "0x8C8E10", Slot = "5")]
		public override void PrepareTriangulation(ITriangulatable t)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x8C4F40", Offset = "0x8C4F40", VA = "0x8C4F40")]
		public void FinalizeTriangulation()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x8C9144", Offset = "0x8C9144", VA = "0x8C9144", Slot = "6")]
		public override TriangulationConstraint NewConstraint(TriangulationPoint a, TriangulationPoint b)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FD")]
	public class DTSweepDebugContext : TriangulationDebugContext
	{
		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DelaunayTriangle _primaryTriangle;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DelaunayTriangle _secondaryTriangle;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TriangulationPoint _activePoint;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AdvancingFrontNode _activeNode;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DTSweepConstraint _activeConstraint;

		[Token(Token = "0x170000B7")]
		public DelaunayTriangle PrimaryTriangle
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x8C91B0", Offset = "0x8C91B0", VA = "0x8C91B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x8C6B2C", Offset = "0x8C6B2C", VA = "0x8C6B2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public DelaunayTriangle SecondaryTriangle
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x8C91B8", Offset = "0x8C91B8", VA = "0x8C91B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x8C7B88", Offset = "0x8C7B88", VA = "0x8C7B88")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public TriangulationPoint ActivePoint
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x8C91C0", Offset = "0x8C91C0", VA = "0x8C91C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x8C91C8", Offset = "0x8C91C8", VA = "0x8C91C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public AdvancingFrontNode ActiveNode
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x8C9230", Offset = "0x8C9230", VA = "0x8C9230")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0x8C6084", Offset = "0x8C6084", VA = "0x8C6084")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public DTSweepConstraint ActiveConstraint
		{
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x8C9238", Offset = "0x8C9238", VA = "0x8C9238")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0x8C5174", Offset = "0x8C5174", VA = "0x8C5174")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public bool IsDebugContext
		{
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0x8C9240", Offset = "0x8C9240", VA = "0x8C9240")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x8C8C5C", Offset = "0x8C8C5C", VA = "0x8C8C5C")]
		public DTSweepDebugContext(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x8C9248", Offset = "0x8C9248", VA = "0x8C9248", Slot = "4")]
		public override void Clear()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class DTSweepEdgeEvent
	{
		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DTSweepConstraint ConstrainedEdge;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Right;

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x8C8BC4", Offset = "0x8C8BC4", VA = "0x8C8BC4")]
		public DTSweepEdgeEvent()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class DTSweepPointComparator : IComparer<TriangulationPoint>
	{
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x8C9298", Offset = "0x8C9298", VA = "0x8C9298", Slot = "4")]
		public int Compare(TriangulationPoint p1, TriangulationPoint p2)
		{
			return default(int);
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x8C8BCC", Offset = "0x8C8BCC", VA = "0x8C8BCC")]
		public DTSweepPointComparator()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class PointOnEdgeException : NotImplementedException
	{
		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public readonly TriangulationPoint A;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly TriangulationPoint B;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly TriangulationPoint C;

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x8F6320", Offset = "0x8F6320", VA = "0x8F6320")]
		public PointOnEdgeException(string message, TriangulationPoint a, TriangulationPoint b, TriangulationPoint c)
		{
		}
	}
	[Token(Token = "0x2000201")]
	public interface ITriangulatable
	{
		[Token(Token = "0x170000BD")]
		IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6000BD1")]
			get;
		}

		[Token(Token = "0x170000BE")]
		TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000BD2")]
			get;
		}

		[Token(Token = "0x170000BF")]
		string FileName
		{
			[Token(Token = "0x6000BD3")]
			get;
			[Token(Token = "0x6000BD4")]
			set;
		}

		[Token(Token = "0x170000C0")]
		bool DisplayFlipX
		{
			[Token(Token = "0x6000BD5")]
			get;
			[Token(Token = "0x6000BD6")]
			set;
		}

		[Token(Token = "0x170000C1")]
		bool DisplayFlipY
		{
			[Token(Token = "0x6000BD7")]
			get;
			[Token(Token = "0x6000BD8")]
			set;
		}

		[Token(Token = "0x170000C2")]
		float DisplayRotate
		{
			[Token(Token = "0x6000BD9")]
			get;
			[Token(Token = "0x6000BDA")]
			set;
		}

		[Token(Token = "0x170000C3")]
		double Precision
		{
			[Token(Token = "0x6000BDB")]
			get;
			[Token(Token = "0x6000BDC")]
			set;
		}

		[Token(Token = "0x170000C4")]
		double MinX
		{
			[Token(Token = "0x6000BDD")]
			get;
		}

		[Token(Token = "0x170000C5")]
		double MaxX
		{
			[Token(Token = "0x6000BDE")]
			get;
		}

		[Token(Token = "0x170000C6")]
		double MinY
		{
			[Token(Token = "0x6000BDF")]
			get;
		}

		[Token(Token = "0x170000C7")]
		double MaxY
		{
			[Token(Token = "0x6000BE0")]
			get;
		}

		[Token(Token = "0x170000C8")]
		Rect2D Bounds
		{
			[Token(Token = "0x6000BE1")]
			get;
		}

		[Token(Token = "0x6000BE2")]
		void Prepare(TriangulationContext tcx);

		[Token(Token = "0x6000BE3")]
		void AddTriangle(DelaunayTriangle t);

		[Token(Token = "0x6000BE4")]
		void AddTriangles(IEnumerable<DelaunayTriangle> list);

		[Token(Token = "0x6000BE5")]
		void ClearTriangles();
	}
	[Token(Token = "0x2000202")]
	public enum Orientation
	{
		[Token(Token = "0x4000BBF")]
		CW,
		[Token(Token = "0x4000BC0")]
		CCW,
		[Token(Token = "0x4000BC1")]
		Collinear
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x53E1CC", Offset = "0x53E1CC")]
	public class Contour : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Contour> mHoles;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ITriangulatable mParent;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mName;

		[Token(Token = "0x170000C9")]
		public new TriangulationPoint Item
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x8C0884", Offset = "0x8C0884", VA = "0x8C0884", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x8C24C4", Offset = "0x8C24C4", VA = "0x8C24C4", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public string Name
		{
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0x8C2530", Offset = "0x8C2530", VA = "0x8C2530")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0x8C2538", Offset = "0x8C2538", VA = "0x8C2538")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x8C2540", Offset = "0x8C2540", VA = "0x8C2540", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0x8C2594", Offset = "0x8C2594", VA = "0x8C2594")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x8C2598", Offset = "0x8C2598", VA = "0x8C2598", Slot = "28")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x170000CD")]
		public string FileName
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0x8C2648", Offset = "0x8C2648", VA = "0x8C2648", Slot = "29")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x8C26F8", Offset = "0x8C26F8", VA = "0x8C26F8", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x8C26FC", Offset = "0x8C26FC", VA = "0x8C26FC", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x8C27AC", Offset = "0x8C27AC", VA = "0x8C27AC", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x8C27B0", Offset = "0x8C27B0", VA = "0x8C27B0", Slot = "33")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x8C2860", Offset = "0x8C2860", VA = "0x8C2860", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public float DisplayRotate
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x8C2864", Offset = "0x8C2864", VA = "0x8C2864", Slot = "35")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x8C2914", Offset = "0x8C2914", VA = "0x8C2914", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public double Precision
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x8C2918", Offset = "0x8C2918", VA = "0x8C2918", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0x8C29C8", Offset = "0x8C29C8", VA = "0x8C29C8", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public double MinX
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x8C29CC", Offset = "0x8C29CC", VA = "0x8C29CC", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000D3")]
		public double MaxX
		{
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0x8C29E8", Offset = "0x8C29E8", VA = "0x8C29E8", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000D4")]
		public double MinY
		{
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0x8C2A04", Offset = "0x8C2A04", VA = "0x8C2A04", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000D5")]
		public double MaxY
		{
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x8C2A20", Offset = "0x8C2A20", VA = "0x8C2A20", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000D6")]
		public Rect2D Bounds
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x8C2A3C", Offset = "0x8C2A3C", VA = "0x8C2A3C", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x8C0944", Offset = "0x8C0944", VA = "0x8C0944")]
		public Contour(ITriangulatable parent)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x8C0794", Offset = "0x8C0794", VA = "0x8C0794")]
		public Contour(ITriangulatable parent, IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x8C2D08", Offset = "0x8C2D08", VA = "0x8C2D08", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x8C2D6C", Offset = "0x8C2D6C", VA = "0x8C2D6C", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x8C2DD0", Offset = "0x8C2DD0", VA = "0x8C2DD0", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x8C2E34", Offset = "0x8C2E34", VA = "0x8C2E34", Slot = "56")]
		public void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x8C2E4C", Offset = "0x8C2E4C", VA = "0x8C2E4C", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x8C2FC0", Offset = "0x8C2FC0", VA = "0x8C2FC0", Slot = "22")]
		public override void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x8C2A44", Offset = "0x8C2A44", VA = "0x8C2A44")]
		public void AddRange(IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x8C3480", Offset = "0x8C3480", VA = "0x8C3480", Slot = "52")]
		public void Insert(int idx, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x8C34A0", Offset = "0x8C34A0", VA = "0x8C34A0", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x8C34B0", Offset = "0x8C34B0", VA = "0x8C34B0", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x8C3514", Offset = "0x8C3514", VA = "0x8C3514", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x8C36F4", Offset = "0x8C36F4", VA = "0x8C36F4")]
		protected void AddHole(Contour c)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x8C0C7C", Offset = "0x8C0C7C", VA = "0x8C0C7C")]
		public int GetNumHoles(bool parentIsHole)
		{
			return default(int);
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x8C3760", Offset = "0x8C3760", VA = "0x8C3760")]
		public int GetNumHoles()
		{
			return default(int);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x8C37AC", Offset = "0x8C37AC", VA = "0x8C37AC")]
		public Contour GetHole(int idx)
		{
			return null;
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x8C0FC4", Offset = "0x8C0FC4", VA = "0x8C0FC4")]
		public void GetActualHoles(bool parentIsHole, ref List<Contour> holes)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x8C383C", Offset = "0x8C383C", VA = "0x8C383C")]
		public List<Contour>.Enumerator GetHoleEnumerator()
		{
			return default(List<Contour>.Enumerator);
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x8C2178", Offset = "0x8C2178", VA = "0x8C2178")]
		public void InitializeHoles(ConstrainedPointSet cps)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x8C124C", Offset = "0x8C124C", VA = "0x8C124C")]
		public static void InitializeHoles(List<Contour> holes, ITriangulatable parent, ConstrainedPointSet cps)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x8C38B8", Offset = "0x8C38B8", VA = "0x8C38B8", Slot = "44")]
		public void Prepare(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x8C390C", Offset = "0x8C390C", VA = "0x8C390C", Slot = "45")]
		public void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x8C3960", Offset = "0x8C3960", VA = "0x8C3960", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x8C39B4", Offset = "0x8C39B4", VA = "0x8C39B4", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x8C3A08", Offset = "0x8C3A08", VA = "0x8C3A08")]
		public Point2D FindPointInContour()
		{
			return null;
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x8C3B30", Offset = "0x8C3B30", VA = "0x8C3B30")]
		public bool IsPointInsideContour(Point2D p)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x53E204", Offset = "0x53E204")]
	public class Polygon : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Dictionary<uint, TriangulationPoint> mPointMap;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<DelaunayTriangle> mTriangles;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5426A0", Offset = "0x5426A0")]
		private string <FileName>k__BackingField;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5426B0", Offset = "0x5426B0")]
		private bool <DisplayFlipX>k__BackingField;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5426C0", Offset = "0x5426C0")]
		private bool <DisplayFlipY>k__BackingField;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5426D0", Offset = "0x5426D0")]
		private float <DisplayRotate>k__BackingField;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double mPrecision;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<Polygon> mHoles;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<TriangulationPoint> mSteinerPoints;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected PolygonPoint _last;

		[Token(Token = "0x170000D7")]
		public IList<TriangulationPoint> Points
		{
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x8F7D18", Offset = "0x8F7D18", VA = "0x8F7D18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x8F7D1C", Offset = "0x8F7D1C", VA = "0x8F7D1C", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x8F7D24", Offset = "0x8F7D24", VA = "0x8F7D24", Slot = "28")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x170000DA")]
		public string FileName
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x8F7D2C", Offset = "0x8F7D2C", VA = "0x8F7D2C", Slot = "29")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547494", Offset = "0x547494")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x8F7D34", Offset = "0x8F7D34", VA = "0x8F7D34", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5474A4", Offset = "0x5474A4")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0x8F7D3C", Offset = "0x8F7D3C", VA = "0x8F7D3C", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5474B4", Offset = "0x5474B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x8F7D44", Offset = "0x8F7D44", VA = "0x8F7D44", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5474C4", Offset = "0x5474C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0x8F7D50", Offset = "0x8F7D50", VA = "0x8F7D50", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5474D4", Offset = "0x5474D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x8F7D58", Offset = "0x8F7D58", VA = "0x8F7D58", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5474E4", Offset = "0x5474E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public float DisplayRotate
		{
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0x8F7D64", Offset = "0x8F7D64", VA = "0x8F7D64", Slot = "35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5474F4", Offset = "0x5474F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x8F7D6C", Offset = "0x8F7D6C", VA = "0x8F7D6C", Slot = "36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547504", Offset = "0x547504")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public double Precision
		{
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0x8F7D74", Offset = "0x8F7D74", VA = "0x8F7D74", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x8F7D7C", Offset = "0x8F7D7C", VA = "0x8F7D7C", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public double MinX
		{
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x8F7D84", Offset = "0x8F7D84", VA = "0x8F7D84", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E0")]
		public double MaxX
		{
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0x8F7DA0", Offset = "0x8F7DA0", VA = "0x8F7DA0", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E1")]
		public double MinY
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0x8F7DBC", Offset = "0x8F7DBC", VA = "0x8F7DBC", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E2")]
		public double MaxY
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x8F7DD8", Offset = "0x8F7DD8", VA = "0x8F7DD8", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000E3")]
		public Rect2D Bounds
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x8F7DF4", Offset = "0x8F7DF4", VA = "0x8F7DF4", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		public new TriangulationPoint Item
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0x8F7DFC", Offset = "0x8F7DFC", VA = "0x8F7DFC", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x8F7EBC", Offset = "0x8F7EBC", VA = "0x8F7EBC", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public IList<Polygon> Holes
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x8F7F28", Offset = "0x8F7F28", VA = "0x8F7F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x8F7F30", Offset = "0x8F7F30", VA = "0x8F7F30")]
		public Polygon(IList<PolygonPoint> points)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x8F83D0", Offset = "0x8F83D0", VA = "0x8F83D0")]
		public Polygon(IEnumerable<PolygonPoint> points)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x8F8464", Offset = "0x8F8464", VA = "0x8F8464")]
		public Polygon(params PolygonPoint[] points)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x8F8468", Offset = "0x8F8468", VA = "0x8F8468", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x8F84CC", Offset = "0x8F84CC", VA = "0x8F84CC", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x8F8530", Offset = "0x8F8530", VA = "0x8F8530", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x8F8548", Offset = "0x8F8548", VA = "0x8F8548", Slot = "56")]
		public void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x8F8560", Offset = "0x8F8560", VA = "0x8F8560")]
		public void Add(PolygonPoint p)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x8F8578", Offset = "0x8F8578", VA = "0x8F8578", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x8F810C", Offset = "0x8F810C", VA = "0x8F810C")]
		public void AddRange(IList<PolygonPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x8F86F4", Offset = "0x8F86F4", VA = "0x8F86F4")]
		public void AddRange(IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x8F89B8", Offset = "0x8F89B8", VA = "0x8F89B8", Slot = "52")]
		public void Insert(int idx, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x8F89D8", Offset = "0x8F89D8", VA = "0x8F89D8", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x8F89E0", Offset = "0x8F89E0", VA = "0x8F89E0")]
		public void RemovePoint(PolygonPoint p)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x8F8BC0", Offset = "0x8F8BC0", VA = "0x8F8BC0", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x8F8C24", Offset = "0x8F8C24", VA = "0x8F8C24", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x8F8E04", Offset = "0x8F8E04", VA = "0x8F8E04")]
		public void AddSteinerPoint(TriangulationPoint point)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x8F8EB0", Offset = "0x8F8EB0", VA = "0x8F8EB0")]
		public void AddSteinerPoints(List<TriangulationPoint> points)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x8F8F5C", Offset = "0x8F8F5C", VA = "0x8F8F5C")]
		public void ClearSteinerPoints()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x8F8FB8", Offset = "0x8F8FB8", VA = "0x8F8FB8")]
		public void AddHole(Polygon poly)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x8F9064", Offset = "0x8F9064", VA = "0x8F9064", Slot = "45")]
		public void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x8F90C8", Offset = "0x8F90C8", VA = "0x8F90C8", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x8F912C", Offset = "0x8F912C", VA = "0x8F912C", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x8F9188", Offset = "0x8F9188", VA = "0x8F9188")]
		public bool IsPointInside(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x8F9530", Offset = "0x8F9530", VA = "0x8F9530", Slot = "44")]
		public void Prepare(TriangulationContext tcx)
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class PolygonPoint : TriangulationPoint
	{
		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5426E0", Offset = "0x5426E0")]
		private PolygonPoint <Next>k__BackingField;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5426F0", Offset = "0x5426F0")]
		private PolygonPoint <Previous>k__BackingField;

		[Token(Token = "0x170000E6")]
		public PolygonPoint Next
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x8FAFD4", Offset = "0x8FAFD4", VA = "0x8FAFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547514", Offset = "0x547514")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x8FAFDC", Offset = "0x8FAFDC", VA = "0x8FAFDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547524", Offset = "0x547524")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public PolygonPoint Previous
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x8FAFE4", Offset = "0x8FAFE4", VA = "0x8FAFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547534", Offset = "0x547534")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x8FAFEC", Offset = "0x8FAFEC", VA = "0x8FAFEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547544", Offset = "0x547544")]
			set
			{
			}
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x8F9BE8", Offset = "0x8F9BE8", VA = "0x8F9BE8")]
		public PolygonPoint(double x, double y)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x8FAFF4", Offset = "0x8FAFF4", VA = "0x8FAFF4")]
		public static Point2D ToBasePoint(PolygonPoint p)
		{
			return null;
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x8FAFF8", Offset = "0x8FAFF8", VA = "0x8FAFF8")]
		public static TriangulationPoint ToTriangulationPoint(PolygonPoint p)
		{
			return null;
		}
	}
	[Token(Token = "0x2000206")]
	public class PolygonSet
	{
		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<Polygon> _polygons;

		[Token(Token = "0x170000E8")]
		public IEnumerable<Polygon> Polygons
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x8FB188", Offset = "0x8FB188", VA = "0x8FB188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x8FAFFC", Offset = "0x8FAFFC", VA = "0x8FAFFC")]
		public PolygonSet()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x8FB074", Offset = "0x8FB074", VA = "0x8FB074")]
		public PolygonSet(Polygon poly)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x8FB124", Offset = "0x8FB124", VA = "0x8FB124")]
		public void Add(Polygon p)
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class PolygonUtil
	{
		[Token(Token = "0x2000208")]
		public enum PolyUnionError
		{
			[Token(Token = "0x4000BD3")]
			None,
			[Token(Token = "0x4000BD4")]
			NoIntersections,
			[Token(Token = "0x4000BD5")]
			Poly1InsidePoly2,
			[Token(Token = "0x4000BD6")]
			InfiniteLoop
		}

		[Token(Token = "0x2000209")]
		[Flags]
		public enum PolyOperation : uint
		{
			[Token(Token = "0x4000BD8")]
			None = 0u,
			[Token(Token = "0x4000BD9")]
			Union = 1u,
			[Token(Token = "0x4000BDA")]
			Intersect = 2u,
			[Token(Token = "0x4000BDB")]
			Subtract = 4u
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x8FB190", Offset = "0x8FB190", VA = "0x8FB190")]
		public static Point2DList.WindingOrderType CalculateWindingOrder(IList<Point2D> l)
		{
			return default(Point2DList.WindingOrderType);
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x8FB504", Offset = "0x8FB504", VA = "0x8FB504")]
		public static bool PolygonsAreSame2D(IList<Point2D> poly1, IList<Point2D> poly2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x8F918C", Offset = "0x8F918C", VA = "0x8F918C")]
		public static bool PointInPolygon2D(IList<Point2D> polygon, Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x8FB920", Offset = "0x8FB920", VA = "0x8FB920")]
		public static bool PolygonsIntersect2D(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x8FBEB0", Offset = "0x8FBEB0", VA = "0x8FBEB0")]
		public bool PolygonContainsPolygon(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x8FBECC", Offset = "0x8FBECC", VA = "0x8FBECC")]
		public static bool PolygonContainsPolygon(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2, bool runIntersectionTest)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x8FC198", Offset = "0x8FC198", VA = "0x8FC198")]
		public static void ClipPolygonToEdge2D(Point2D edgeBegin, Point2D edgeEnd, IList<Point2D> poly, out List<Point2D> outPoly)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x8FCC74", Offset = "0x8FCC74", VA = "0x8FCC74")]
		public static void ClipPolygonToPolygon(IList<Point2D> poly, IList<Point2D> clipPoly, out List<Point2D> outPoly)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x8FCFD0", Offset = "0x8FCFD0", VA = "0x8FCFD0")]
		public static PolyUnionError PolygonUnion(Point2DList polygon1, Point2DList polygon2, out Point2DList union)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x8FD068", Offset = "0x8FD068", VA = "0x8FD068")]
		protected static void PolygonUnionInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x8FD54C", Offset = "0x8FD54C", VA = "0x8FD54C")]
		public static PolyUnionError PolygonIntersect(Point2DList polygon1, Point2DList polygon2, out Point2DList intersectOut)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x8FD5E4", Offset = "0x8FD5E4", VA = "0x8FD5E4")]
		protected static void PolygonIntersectInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x8FDB44", Offset = "0x8FDB44", VA = "0x8FDB44")]
		public static PolyUnionError PolygonSubtract(Point2DList polygon1, Point2DList polygon2, out Point2DList subtract)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x8FDBDC", Offset = "0x8FDBDC", VA = "0x8FDBDC")]
		public static void PolygonSubtractInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x8FE160", Offset = "0x8FE160", VA = "0x8FE160")]
		public static PolyUnionError PolygonOperation(PolyOperation operations, Point2DList polygon1, Point2DList polygon2, out Dictionary<uint, Point2DList> results)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x8FE1F8", Offset = "0x8FE1F8", VA = "0x8FE1F8")]
		public static PolyUnionError PolygonOperation(PolygonOperationContext ctx)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x8FE25C", Offset = "0x8FE25C", VA = "0x8FE25C")]
		public static List<Point2DList> SplitComplexPolygon(Point2DList verts, double epsilon)
		{
			return null;
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x8FF120", Offset = "0x8FF120", VA = "0x8FF120")]
		private static List<Point2DList> SplitComplexPolygonCleanup(IList<Point2D> orig)
		{
			return null;
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x8FF430", Offset = "0x8FF430", VA = "0x8FF430")]
		public PolygonUtil()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class EdgeIntersectInfo
	{
		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542700", Offset = "0x542700")]
		private Edge <EdgeOne>k__BackingField;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542710", Offset = "0x542710")]
		private Edge <EdgeTwo>k__BackingField;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542720", Offset = "0x542720")]
		private Point2D <IntersectionPoint>k__BackingField;

		[Token(Token = "0x170000E9")]
		public Edge EdgeOne
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x8D052C", Offset = "0x8D052C", VA = "0x8D052C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547554", Offset = "0x547554")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x8D0534", Offset = "0x8D0534", VA = "0x8D0534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547564", Offset = "0x547564")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public Edge EdgeTwo
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x8D053C", Offset = "0x8D053C", VA = "0x8D053C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547574", Offset = "0x547574")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x8D0544", Offset = "0x8D0544", VA = "0x8D0544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547584", Offset = "0x547584")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public Point2D IntersectionPoint
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x8D054C", Offset = "0x8D054C", VA = "0x8D054C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547594", Offset = "0x547594")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x8D0554", Offset = "0x8D0554", VA = "0x8D0554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5475A4", Offset = "0x5475A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x8D04EC", Offset = "0x8D04EC", VA = "0x8D04EC")]
		public EdgeIntersectInfo(Edge edgeOne, Edge edgeTwo, Point2D intersectionPoint)
		{
		}
	}
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x53E24C", Offset = "0x53E24C")]
	public class SplitComplexPolygonNode
	{
		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<SplitComplexPolygonNode> mConnected;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Point2D mPosition;

		[Token(Token = "0x170000EC")]
		public int NumConnected
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x867038", Offset = "0x867038", VA = "0x867038")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000ED")]
		public Point2D Position
		{
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x867084", Offset = "0x867084", VA = "0x867084")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x86708C", Offset = "0x86708C", VA = "0x86708C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public SplitComplexPolygonNode Item
		{
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x867094", Offset = "0x867094", VA = "0x867094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x867108", Offset = "0x867108", VA = "0x867108")]
		public SplitComplexPolygonNode()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x867180", Offset = "0x867180", VA = "0x867180")]
		public SplitComplexPolygonNode(Point2D pos)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x86720C", Offset = "0x86720C", VA = "0x86720C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x867308", Offset = "0x867308", VA = "0x867308")]
		public bool Equals(SplitComplexPolygonNode pn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x86732C", Offset = "0x86732C", VA = "0x86732C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x8672D0", Offset = "0x8672D0", VA = "0x8672D0")]
		public static bool operator ==(SplitComplexPolygonNode lhs, SplitComplexPolygonNode rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x867334", Offset = "0x867334", VA = "0x867334")]
		public static bool operator !=(SplitComplexPolygonNode lhs, SplitComplexPolygonNode rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x867380", Offset = "0x867380", VA = "0x867380", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x8674F4", Offset = "0x8674F4", VA = "0x8674F4")]
		private bool IsRighter(double sinA, double cosA, double sinB, double cosB)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x867534", Offset = "0x867534", VA = "0x867534")]
		private int remainder(int x, int modulus)
		{
			return default(int);
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x86754C", Offset = "0x86754C", VA = "0x86754C")]
		public void AddConnection(SplitComplexPolygonNode toMe)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x8675FC", Offset = "0x8675FC", VA = "0x8675FC")]
		public void RemoveConnection(SplitComplexPolygonNode fromMe)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x867660", Offset = "0x867660", VA = "0x867660")]
		private void RemoveConnectionByIndex(int index)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x8676F0", Offset = "0x8676F0", VA = "0x8676F0")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x867744", Offset = "0x867744", VA = "0x867744")]
		private bool IsConnectedTo(SplitComplexPolygonNode me)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x8677A8", Offset = "0x8677A8", VA = "0x8677A8")]
		public SplitComplexPolygonNode GetRightestConnection(SplitComplexPolygonNode incoming)
		{
			return null;
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x867AD0", Offset = "0x867AD0", VA = "0x867AD0")]
		public SplitComplexPolygonNode GetRightestConnection(Point2D incomingDir)
		{
			return null;
		}
	}
	[Token(Token = "0x200020C")]
	public class PolygonOperationContext
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PolygonUtil.PolyOperation mOperations;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Point2DList mOriginalPolygon1;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Point2DList mOriginalPolygon2;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Point2DList mPoly1;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Point2DList mPoly2;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<EdgeIntersectInfo> mIntersections;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int mStartingIndex;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public PolygonUtil.PolyUnionError mError;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> mPoly1VectorAngles;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<int> mPoly2VectorAngles;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<uint, Point2DList> mOutput;

		[Token(Token = "0x170000EF")]
		public Point2DList Union
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0x8F9F60", Offset = "0x8F9F60", VA = "0x8F9F60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public Point2DList Intersect
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0x8FA02C", Offset = "0x8FA02C", VA = "0x8FA02C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public Point2DList Subtract
		{
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x8FA0F8", Offset = "0x8FA0F8", VA = "0x8FA0F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x8FA1C4", Offset = "0x8FA1C4", VA = "0x8FA1C4")]
		public PolygonOperationContext()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x8FA23C", Offset = "0x8FA23C", VA = "0x8FA23C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x8FA2D0", Offset = "0x8FA2D0", VA = "0x8FA2D0")]
		public bool Init(PolygonUtil.PolyOperation operations, Point2DList polygon1, Point2DList polygon2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x8FAA70", Offset = "0x8FAA70", VA = "0x8FAA70")]
		private bool VerticesIntersect(Point2DList polygon1, Point2DList polygon2, out List<EdgeIntersectInfo> intersections)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x8FAD80", Offset = "0x8FAD80", VA = "0x8FAD80")]
		public bool PointInPolygonAngle(Point2D point, Point2DList polygon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x8FAEA4", Offset = "0x8FAEA4", VA = "0x8FAEA4")]
		public double VectorAngle(Point2D p1, Point2D p2)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200020D")]
	public class ConstrainedPointSet : PointSet
	{
		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Dictionary<uint, TriangulationConstraint> mConstraintMap;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<Contour> mHoles;

		[Token(Token = "0x170000F2")]
		public override TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x8BF228", Offset = "0x8BF228", VA = "0x8BF228", Slot = "61")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x8BF230", Offset = "0x8BF230", VA = "0x8BF230")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x8BF694", Offset = "0x8BF694", VA = "0x8BF694")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds, List<TriangulationConstraint> constraints)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x8BF984", Offset = "0x8BF984", VA = "0x8BF984")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds, int[] indices)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x8BF300", Offset = "0x8BF300", VA = "0x8BF300")]
		protected void AddBoundaryConstraints()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x8BFDCC", Offset = "0x8BFDCC", VA = "0x8BFDCC", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x8BFE64", Offset = "0x8BFE64", VA = "0x8BFE64", Slot = "62")]
		public override void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x8BFE74", Offset = "0x8BFE74", VA = "0x8BFE74", Slot = "63")]
		public override bool AddRange(List<TriangulationPoint> points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x8BFFA4", Offset = "0x8BFFA4", VA = "0x8BFFA4")]
		public bool AddHole(List<TriangulationPoint> points, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x8BF774", Offset = "0x8BF774", VA = "0x8BF774")]
		public bool AddConstraints(List<TriangulationConstraint> constraints)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x8BFBD0", Offset = "0x8BFBD0", VA = "0x8BFBD0")]
		public bool AddConstraint(TriangulationConstraint tc)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x8C0A18", Offset = "0x8C0A18", VA = "0x8C0A18")]
		public bool TryGetConstraint(uint constraintCode, out TriangulationConstraint tc)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x8C0A84", Offset = "0x8C0A84", VA = "0x8C0A84")]
		public int GetNumConstraints()
		{
			return default(int);
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x8C0AD8", Offset = "0x8C0AD8", VA = "0x8C0AD8")]
		public Dictionary<uint, TriangulationConstraint>.Enumerator GetConstraintEnumerator()
		{
			return default(Dictionary<uint, TriangulationConstraint>.Enumerator);
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x8C0B58", Offset = "0x8C0B58", VA = "0x8C0B58")]
		public int GetNumHoles()
		{
			return default(int);
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x8C0DB4", Offset = "0x8C0DB4", VA = "0x8C0DB4")]
		public Contour GetHole(int idx)
		{
			return null;
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x8C0E44", Offset = "0x8C0E44", VA = "0x8C0E44")]
		public int GetActualHoles(out List<Contour> holes)
		{
			return default(int);
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x8C1124", Offset = "0x8C1124", VA = "0x8C1124")]
		protected void InitializeHoles()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x8C22AC", Offset = "0x8C22AC", VA = "0x8C22AC", Slot = "65")]
		public override bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x8C22D4", Offset = "0x8C22D4", VA = "0x8C22D4", Slot = "66")]
		public override void Prepare(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x8C23FC", Offset = "0x8C23FC", VA = "0x8C23FC", Slot = "64")]
		public override void AddTriangle(DelaunayTriangle t)
		{
		}
	}
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x53E284", Offset = "0x53E284")]
	public class PointSet : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Dictionary<uint, TriangulationPoint> mPointMap;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542730", Offset = "0x542730")]
		private IList<DelaunayTriangle> <Triangles>k__BackingField;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542740", Offset = "0x542740")]
		private string <FileName>k__BackingField;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542750", Offset = "0x542750")]
		private bool <DisplayFlipX>k__BackingField;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542760", Offset = "0x542760")]
		private bool <DisplayFlipY>k__BackingField;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542770", Offset = "0x542770")]
		private float <DisplayRotate>k__BackingField;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected double mPrecision;

		[Token(Token = "0x170000F3")]
		public IList<TriangulationPoint> Points
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x8F6360", Offset = "0x8F6360", VA = "0x8F6360")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x8F6364", Offset = "0x8F6364", VA = "0x8F6364")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x8F6368", Offset = "0x8F6368", VA = "0x8F6368", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5475B4", Offset = "0x5475B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x8F6370", Offset = "0x8F6370", VA = "0x8F6370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5475C4", Offset = "0x5475C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public string FileName
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x8F6378", Offset = "0x8F6378", VA = "0x8F6378", Slot = "29")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5475D4", Offset = "0x5475D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x8F6380", Offset = "0x8F6380", VA = "0x8F6380", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5475E4", Offset = "0x5475E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x8F6388", Offset = "0x8F6388", VA = "0x8F6388", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5475F4", Offset = "0x5475F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x8F6390", Offset = "0x8F6390", VA = "0x8F6390", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547604", Offset = "0x547604")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x8F639C", Offset = "0x8F639C", VA = "0x8F639C", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547614", Offset = "0x547614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x8F63A4", Offset = "0x8F63A4", VA = "0x8F63A4", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547624", Offset = "0x547624")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public float DisplayRotate
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x8F63B0", Offset = "0x8F63B0", VA = "0x8F63B0", Slot = "35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547634", Offset = "0x547634")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x8F63B8", Offset = "0x8F63B8", VA = "0x8F63B8", Slot = "36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547644", Offset = "0x547644")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public double Precision
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x8F63C0", Offset = "0x8F63C0", VA = "0x8F63C0", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x8F63C8", Offset = "0x8F63C8", VA = "0x8F63C8", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public double MinX
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x8F63D0", Offset = "0x8F63D0", VA = "0x8F63D0", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000FB")]
		public double MaxX
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x8F63EC", Offset = "0x8F63EC", VA = "0x8F63EC", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000FC")]
		public double MinY
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x8F6408", Offset = "0x8F6408", VA = "0x8F6408", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000FD")]
		public double MaxY
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x8F6424", Offset = "0x8F6424", VA = "0x8F6424", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000FE")]
		public Rect2D Bounds
		{
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0x8F6440", Offset = "0x8F6440", VA = "0x8F6440", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		public virtual TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0x8F6448", Offset = "0x8F6448", VA = "0x8F6448", Slot = "61")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x17000100")]
		public new TriangulationPoint Item
		{
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x8F6450", Offset = "0x8F6450", VA = "0x8F6450", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0x8F6510", Offset = "0x8F6510", VA = "0x8F6510", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x8F657C", Offset = "0x8F657C", VA = "0x8F657C")]
		public PointSet(List<TriangulationPoint> bounds)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x8F69D8", Offset = "0x8F69D8", VA = "0x8F69D8", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x8F6A3C", Offset = "0x8F6A3C", VA = "0x8F6A3C", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x8F6AA0", Offset = "0x8F6AA0", VA = "0x8F6AA0", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x8F6B34", Offset = "0x8F6B34", VA = "0x8F6B34", Slot = "62")]
		public virtual void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x8F6B40", Offset = "0x8F6B40", VA = "0x8F6B40", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool constrainToBounds)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x8F67A0", Offset = "0x8F67A0", VA = "0x8F67A0")]
		protected bool Add(TriangulationPoint p, int idx, bool constrainToBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x8F6DB8", Offset = "0x8F6DB8", VA = "0x8F6DB8", Slot = "22")]
		public override void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x8F6F64", Offset = "0x8F6F64", VA = "0x8F6F64", Slot = "63")]
		public virtual bool AddRange(List<TriangulationPoint> points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x8F7090", Offset = "0x8F7090", VA = "0x8F7090")]
		public bool TryGetPoint(double x, double y, out TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x8F7158", Offset = "0x8F7158", VA = "0x8F7158", Slot = "52")]
		public void Insert(int idx, TriangulationPoint item)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x8F71C4", Offset = "0x8F71C4", VA = "0x8F71C4", Slot = "24")]
		public override bool Remove(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x8F7228", Offset = "0x8F7228", VA = "0x8F7228", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x8F728C", Offset = "0x8F728C", VA = "0x8F728C", Slot = "25")]
		public override void RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x8F7318", Offset = "0x8F7318", VA = "0x8F7318", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x8F737C", Offset = "0x8F737C", VA = "0x8F737C", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x8F755C", Offset = "0x8F755C", VA = "0x8F755C")]
		protected bool ConstrainPointToBounds(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x8F6BE4", Offset = "0x8F6BE4", VA = "0x8F6BE4")]
		protected bool ConstrainPointToBounds(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x8F7730", Offset = "0x8F7730", VA = "0x8F7730", Slot = "64")]
		public virtual void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x8F77F0", Offset = "0x8F77F0", VA = "0x8F77F0", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x8F7AB0", Offset = "0x8F7AB0", VA = "0x8F7AB0", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x8F7B60", Offset = "0x8F7B60", VA = "0x8F7B60", Slot = "65")]
		public virtual bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x8F7B68", Offset = "0x8F7B68", VA = "0x8F7B68", Slot = "66")]
		public virtual void Prepare(TriangulationContext tcx)
		{
		}
	}
	[Token(Token = "0x200020F")]
	public enum TriangulationAlgorithm
	{
		[Token(Token = "0x4000BF6")]
		DTSweep
	}
	[Token(Token = "0x2000210")]
	public class Edge
	{
		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Point2D mP;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Point2D mQ;

		[Token(Token = "0x17000101")]
		public Point2D EdgeStart
		{
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0x8D046C", Offset = "0x8D046C", VA = "0x8D046C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x8D0474", Offset = "0x8D0474", VA = "0x8D0474")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public Point2D EdgeEnd
		{
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x8D047C", Offset = "0x8D047C", VA = "0x8D047C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x8D0484", Offset = "0x8D0484", VA = "0x8D0484")]
			set
			{
			}
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x8D048C", Offset = "0x8D048C", VA = "0x8D048C")]
		public Edge()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x8D04B4", Offset = "0x8D04B4", VA = "0x8D04B4")]
		public Edge(Point2D edgeStart, Point2D edgeEnd)
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class TriangulationConstraint : Edge
	{
		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint mContraintCode;

		[Token(Token = "0x17000103")]
		public TriangulationPoint P
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x870F18", Offset = "0x870F18", VA = "0x870F18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x870F98", Offset = "0x870F98", VA = "0x870F98")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public TriangulationPoint Q
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x870FF0", Offset = "0x870FF0", VA = "0x870FF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x871070", Offset = "0x871070", VA = "0x871070")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public uint ConstraintCode
		{
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x87108C", Offset = "0x87108C", VA = "0x87108C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x871094", Offset = "0x871094", VA = "0x871094")]
		public TriangulationConstraint(TriangulationPoint p1, TriangulationPoint p2)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x871190", Offset = "0x871190", VA = "0x871190", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x870FB4", Offset = "0x870FB4", VA = "0x870FB4")]
		public void CalculateContraintCode()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x8713D0", Offset = "0x8713D0", VA = "0x8713D0")]
		public static uint CalculateContraintCode(TriangulationPoint p, TriangulationPoint q)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000212")]
	public abstract class TriangulationContext
	{
		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542780", Offset = "0x542780")]
		private TriangulationDebugContext <DebugContext>k__BackingField;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<DelaunayTriangle> Triangles;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly List<TriangulationPoint> Points;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542790", Offset = "0x542790")]
		private TriangulationMode <TriangulationMode>k__BackingField;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5427A0", Offset = "0x5427A0")]
		private ITriangulatable <Triangulatable>k__BackingField;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5427B0", Offset = "0x5427B0")]
		private int <StepCount>k__BackingField;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5427C0", Offset = "0x5427C0")]
		private bool <IsDebugEnabled>k__BackingField;

		[Token(Token = "0x17000106")]
		public TriangulationDebugContext DebugContext
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x8714E4", Offset = "0x8714E4", VA = "0x8714E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547654", Offset = "0x547654")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x8714EC", Offset = "0x8714EC", VA = "0x8714EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547664", Offset = "0x547664")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x8714F4", Offset = "0x8714F4", VA = "0x8714F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547674", Offset = "0x547674")]
			get
			{
				return default(TriangulationMode);
			}
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x8714FC", Offset = "0x8714FC", VA = "0x8714FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547684", Offset = "0x547684")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public ITriangulatable Triangulatable
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x871504", Offset = "0x871504", VA = "0x871504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547694", Offset = "0x547694")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x87150C", Offset = "0x87150C", VA = "0x87150C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5476A4", Offset = "0x5476A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public int StepCount
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x871514", Offset = "0x871514", VA = "0x871514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5476B4", Offset = "0x5476B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x87151C", Offset = "0x87151C", VA = "0x87151C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5476C4", Offset = "0x5476C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public abstract TriangulationAlgorithm Algorithm
		{
			[Token(Token = "0x6000CE2")]
			get;
		}

		[Token(Token = "0x1700010B")]
		public virtual bool IsDebugEnabled
		{
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x8716D0", Offset = "0x8716D0", VA = "0x8716D0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5476D4", Offset = "0x5476D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x8716D8", Offset = "0x8716D8", VA = "0x8716D8", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5476E4", Offset = "0x5476E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public DTSweepDebugContext DTDebugContext
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x8716E4", Offset = "0x8716E4", VA = "0x8716E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x871524", Offset = "0x871524", VA = "0x871524")]
		public void Done()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x871534", Offset = "0x871534", VA = "0x871534", Slot = "5")]
		public virtual void PrepareTriangulation(ITriangulatable t)
		{
		}

		[Token(Token = "0x6000CE4")]
		public abstract TriangulationConstraint NewConstraint(TriangulationPoint a, TriangulationPoint b);

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x87165C", Offset = "0x87165C", VA = "0x87165C")]
		public void Update(string message)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x871660", Offset = "0x871660", VA = "0x871660", Slot = "7")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x871764", Offset = "0x871764", VA = "0x871764")]
		protected TriangulationContext()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public abstract class TriangulationDebugContext
	{
		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected TriangulationContext _tcx;

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x871820", Offset = "0x871820", VA = "0x871820")]
		public TriangulationDebugContext(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6000CEC")]
		public abstract void Clear();
	}
	[Token(Token = "0x2000214")]
	public enum TriangulationMode
	{
		[Token(Token = "0x4000C03")]
		Unconstrained,
		[Token(Token = "0x4000C04")]
		Constrained,
		[Token(Token = "0x4000C05")]
		Polygon
	}
	[Token(Token = "0x2000215")]
	public class TriangulationPoint : Point2D
	{
		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly double kVertexCodeDefaultPrecision;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected uint mVertexCode;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5427D0", Offset = "0x5427D0")]
		private List<DTSweepConstraint> <Edges>k__BackingField;

		[Token(Token = "0x1700010D")]
		public override double X
		{
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x87184C", Offset = "0x87184C", VA = "0x87184C", Slot = "5")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x871854", Offset = "0x871854", VA = "0x871854", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public override double Y
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x8719E4", Offset = "0x8719E4", VA = "0x8719E4", Slot = "7")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x8719EC", Offset = "0x8719EC", VA = "0x8719EC", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public uint VertexCode
		{
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x871A84", Offset = "0x871A84", VA = "0x871A84")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000110")]
		public List<DTSweepConstraint> Edges
		{
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x871A8C", Offset = "0x871A8C", VA = "0x871A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5476F4", Offset = "0x5476F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x871A94", Offset = "0x871A94", VA = "0x871A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547704", Offset = "0x547704")]
			private set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public bool HasEdges
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x871A9C", Offset = "0x871A9C", VA = "0x871A9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x871AAC", Offset = "0x871AAC", VA = "0x871AAC")]
		public TriangulationPoint(double x, double y)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x871B30", Offset = "0x871B30", VA = "0x871B30")]
		public TriangulationPoint(double x, double y, double precision)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x871BD0", Offset = "0x871BD0", VA = "0x871BD0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x871C58", Offset = "0x871C58", VA = "0x871C58", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x871C60", Offset = "0x871C60", VA = "0x871C60", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x871D0C", Offset = "0x871D0C", VA = "0x871D0C", Slot = "9")]
		public override void Set(double x, double y)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x8718EC", Offset = "0x8718EC", VA = "0x8718EC")]
		public static uint CreateVertexCode(double x, double y, double precision)
		{
			return default(uint);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x871DB0", Offset = "0x871DB0", VA = "0x871DB0")]
		public void AddEdge(DTSweepConstraint e)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x871E5C", Offset = "0x871E5C", VA = "0x871E5C")]
		public bool HasEdge(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x871E84", Offset = "0x871E84", VA = "0x871E84")]
		public bool GetEdge(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x8720CC", Offset = "0x8720CC", VA = "0x8720CC")]
		public static Point2D ToPoint2D(TriangulationPoint p)
		{
			return null;
		}
	}
	[Token(Token = "0x2000216")]
	public class TriangulationPointEnumerator : IEnumerator<TriangulationPoint>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IList<Point2D> mPoints;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int position;

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x872230", Offset = "0x872230", VA = "0x872230", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public TriangulationPoint Current
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0x872234", Offset = "0x872234", VA = "0x872234", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x872120", Offset = "0x872120", VA = "0x872120")]
		public TriangulationPointEnumerator(IList<Point2D> points)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x872154", Offset = "0x872154", VA = "0x872154", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x872220", Offset = "0x872220", VA = "0x872220", Slot = "8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x87222C", Offset = "0x87222C", VA = "0x87222C", Slot = "5")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class TriangulationPointList : Point2DList
	{
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x8723CC", Offset = "0x8723CC", VA = "0x8723CC")]
		public TriangulationPointList()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class PointGenerator
	{
		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly System.Random RNG;

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x9A392C", Offset = "0x9A392C", VA = "0x9A392C")]
		public static List<TriangulationPoint> UniformDistribution(int n, double scale)
		{
			return null;
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x9A3AB4", Offset = "0x9A3AB4", VA = "0x9A3AB4")]
		public static List<TriangulationPoint> UniformGrid(int n, double scale)
		{
			return null;
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x9A3BFC", Offset = "0x9A3BFC", VA = "0x9A3BFC")]
		public PointGenerator()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class PolygonGenerator
	{
		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly System.Random RNG;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static double PI_2;

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x8F98B0", Offset = "0x8F98B0", VA = "0x8F98B0")]
		public static Polygon RandomCircleSweep(double scale, int vertexCount)
		{
			return null;
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x8F9C64", Offset = "0x8F9C64", VA = "0x8F9C64")]
		public static Polygon RandomCircleSweep2(double scale, int vertexCount)
		{
			return null;
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x8F9EC8", Offset = "0x8F9EC8", VA = "0x8F9EC8")]
		public PolygonGenerator()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class TriangulationUtil
	{
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x872430", Offset = "0x872430", VA = "0x872430")]
		public static bool SmartIncircle(Point2D pa, Point2D pb, Point2D pc, Point2D pd)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x8725B4", Offset = "0x8725B4", VA = "0x8725B4")]
		public static bool InScanArea(Point2D pa, Point2D pb, Point2D pc, Point2D pd)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x8726E8", Offset = "0x8726E8", VA = "0x8726E8")]
		public static Orientation Orient2d(Point2D pa, Point2D pb, Point2D pc)
		{
			return default(Orientation);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x87288C", Offset = "0x87288C", VA = "0x87288C")]
		public static bool PointInBoundingBox(double xmin, double xmax, double ymin, double ymax, Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x872934", Offset = "0x872934", VA = "0x872934")]
		public static bool PointOnLineSegment2D(Point2D lineStart, Point2D lineEnd, Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x872A18", Offset = "0x872A18", VA = "0x872A18")]
		public static bool PointOnLineSegment2D(double x1, double y1, double x2, double y2, double x, double y, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x872B98", Offset = "0x872B98", VA = "0x872B98")]
		public static bool RectsIntersect(Rect2D r1, Rect2D r2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x872BFC", Offset = "0x872BFC", VA = "0x872BFC")]
		public static bool LinesIntersect2D(Point2D ptStart0, Point2D ptEnd0, Point2D ptStart1, Point2D ptEnd1, bool firstIsSegment, bool secondIsSegment, bool coincidentEndPointCollisions, ref Point2D pIntersectionPt, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x873094", Offset = "0x873094", VA = "0x873094")]
		public static bool LinesIntersect2D(Point2D ptStart0, Point2D ptEnd0, Point2D ptStart1, Point2D ptEnd1, ref Point2D pIntersectionPt, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x8730C4", Offset = "0x8730C4", VA = "0x8730C4")]
		public static double LI2DDotProduct(Point2D v0, Point2D v1)
		{
			return default(double);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x873154", Offset = "0x873154", VA = "0x873154")]
		public static bool RaysIntersect2D(Point2D ptRayOrigin0, Point2D ptRayVector0, Point2D ptRayOrigin1, Point2D ptRayVector1, ref Point2D ptIntersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x873440", Offset = "0x873440", VA = "0x873440")]
		public TriangulationUtil()
		{
		}
	}
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x53E2BC", Offset = "0x53E2BC")]
	public struct FixedArray3<T> : IEnumerable<T>, IEnumerable where T : class
	{
		[Token(Token = "0x200021C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E2F4", Offset = "0x53E2F4")]
		private sealed class <Enumerate>d__10 : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4000C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FixedArray3<T> <>4__this;

			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FixedArray3<T> <>3__<>4__this;

			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x17000115")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6000D28")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000116")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D2A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D25")]
			[DebuggerHidden]
			public <Enumerate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000D26")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D27")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D29")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000D2B")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000D2C")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _0;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _1;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _2;

		[Token(Token = "0x17000114")]
		public T Item
		{
			[Token(Token = "0x6000D1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D1D")]
			set
			{
			}
		}

		[Token(Token = "0x6000D1E")]
		public bool Contains(T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1F")]
		public int IndexOf(T value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D20")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000D21")]
		public void Clear(T value)
		{
		}

		[Token(Token = "0x6000D22")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x547714", Offset = "0x547714")]
		private IEnumerable<T> Enumerate()
		{
			return null;
		}

		[Token(Token = "0x6000D23")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000D24")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x53E304", Offset = "0x53E304")]
	public struct FixedBitArray3 : IEnumerable<bool>, IEnumerable
	{
		[Token(Token = "0x200021E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E33C", Offset = "0x53E33C")]
		private sealed class <Enumerate>d__10 : IEnumerable<bool>, IEnumerable, IEnumerator<bool>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool <>2__current;

			[Token(Token = "0x4000C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public FixedBitArray3 <>4__this;

			[Token(Token = "0x4000C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
			public FixedBitArray3 <>3__<>4__this;

			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <i>5__2;

			[Token(Token = "0x17000118")]
			private bool System.Collections.Generic.IEnumerator<System.Boolean>.Current
			{
				[Token(Token = "0x6000D39")]
				[Address(RVA = "0x8004F0", Offset = "0x8004F0", VA = "0x8004F0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000119")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D3B")]
				[Address(RVA = "0x800538", Offset = "0x800538", VA = "0x800538", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x800434", Offset = "0x800434", VA = "0x800434")]
			[DebuggerHidden]
			public <Enumerate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x80046C", Offset = "0x80046C", VA = "0x80046C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x800470", Offset = "0x800470", VA = "0x800470", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x8004F8", Offset = "0x8004F8", VA = "0x8004F8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x800598", Offset = "0x800598", VA = "0x800598", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<bool> System.Collections.Generic.IEnumerable<System.Boolean>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x800648", Offset = "0x800648", VA = "0x800648", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool _0;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool _1;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool _2;

		[Token(Token = "0x17000117")]
		public bool Item
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x8C86C4", Offset = "0x8C86C4", VA = "0x8C86C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x8C7F74", Offset = "0x8C7F74", VA = "0x8C7F74")]
			set
			{
			}
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x8D376C", Offset = "0x8D376C", VA = "0x8D376C")]
		public bool Contains(bool value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x8D37C4", Offset = "0x8D37C4", VA = "0x8D37C4")]
		public int IndexOf(bool value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x8C7FEC", Offset = "0x8C7FEC", VA = "0x8C7FEC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x8D3818", Offset = "0x8D3818", VA = "0x8D3818")]
		public void Clear(bool value)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x8D3874", Offset = "0x8D3874", VA = "0x8D3874")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5477E4", Offset = "0x5477E4")]
		private IEnumerable<bool> Enumerate()
		{
			return null;
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x8D38EC", Offset = "0x8D38EC", VA = "0x8D38EC", Slot = "4")]
		public IEnumerator<bool> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x8D39A0", Offset = "0x8D39A0", VA = "0x8D39A0", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x200021F")]
	public class MathUtil
	{
		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static double EPSILON;

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x883470", Offset = "0x883470", VA = "0x883470")]
		public static bool AreValuesEqual(double val1, double val2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x883500", Offset = "0x883500", VA = "0x883500")]
		public static bool AreValuesEqual(double val1, double val2, double tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x883520", Offset = "0x883520", VA = "0x883520")]
		public static bool IsValueBetween(double val, double min, double max, double tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x883558", Offset = "0x883558", VA = "0x883558")]
		public static double RoundWithPrecision(double f, double precision)
		{
			return default(double);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x8835E8", Offset = "0x8835E8", VA = "0x8835E8")]
		public static double Clamp(double a, double low, double high)
		{
			return default(double);
		}

		[Token(Token = "0x6000D43")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x883678", Offset = "0x883678", VA = "0x883678")]
		public static uint Jenkins32Hash(byte[] data, uint nInitialValue)
		{
			return default(uint);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x8836E8", Offset = "0x8836E8", VA = "0x8836E8")]
		public MathUtil()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class Point2D : IComparable<Point2D>
	{
		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected double mX;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected double mY;

		[Token(Token = "0x1700011A")]
		public virtual double X
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x99E0CC", Offset = "0x99E0CC", VA = "0x99E0CC", Slot = "5")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x99E0D4", Offset = "0x99E0D4", VA = "0x99E0D4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public virtual double Y
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x99E0DC", Offset = "0x99E0DC", VA = "0x99E0DC", Slot = "7")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x99E0E4", Offset = "0x99E0E4", VA = "0x99E0E4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public float Xf
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x99E0EC", Offset = "0x99E0EC", VA = "0x99E0EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700011D")]
		public float Yf
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x99E10C", Offset = "0x99E10C", VA = "0x99E10C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x99E12C", Offset = "0x99E12C", VA = "0x99E12C")]
		public Point2D()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x99E154", Offset = "0x99E154", VA = "0x99E154")]
		public Point2D(double x, double y)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x99E18C", Offset = "0x99E18C", VA = "0x99E18C")]
		public Point2D(Point2D p)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x99E1E4", Offset = "0x99E1E4", VA = "0x99E1E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x99E3C4", Offset = "0x99E3C4", VA = "0x99E3C4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x99E3CC", Offset = "0x99E3CC", VA = "0x99E3CC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x99E474", Offset = "0x99E474", VA = "0x99E474")]
		public bool Equals(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x99E47C", Offset = "0x99E47C", VA = "0x99E47C")]
		public bool Equals(Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x99E5A8", Offset = "0x99E5A8", VA = "0x99E5A8", Slot = "4")]
		public int CompareTo(Point2D other)
		{
			return default(int);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x99E698", Offset = "0x99E698", VA = "0x99E698", Slot = "9")]
		public virtual void Set(double x, double y)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x99E6DC", Offset = "0x99E6DC", VA = "0x99E6DC", Slot = "10")]
		public virtual void Set(Point2D p)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x99E740", Offset = "0x99E740", VA = "0x99E740")]
		public void Add(Point2D p)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x99E7DC", Offset = "0x99E7DC", VA = "0x99E7DC")]
		public void Add(double scalar)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x99E844", Offset = "0x99E844", VA = "0x99E844")]
		public void Subtract(Point2D p)
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x99E8E0", Offset = "0x99E8E0", VA = "0x99E8E0")]
		public void Subtract(double scalar)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x99E948", Offset = "0x99E948", VA = "0x99E948")]
		public void Multiply(Point2D p)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x99E9E4", Offset = "0x99E9E4", VA = "0x99E9E4")]
		public void Multiply(double scalar)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x99EA4C", Offset = "0x99EA4C", VA = "0x99EA4C")]
		public void Divide(Point2D p)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x99EAE8", Offset = "0x99EAE8", VA = "0x99EAE8")]
		public void Divide(double scalar)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x99EB50", Offset = "0x99EB50", VA = "0x99EB50")]
		public void Negate()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x99EBAC", Offset = "0x99EBAC", VA = "0x99EBAC")]
		public double Magnitude()
		{
			return default(double);
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x99EC98", Offset = "0x99EC98", VA = "0x99EC98")]
		public double MagnitudeSquared()
		{
			return default(double);
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x99ED18", Offset = "0x99ED18", VA = "0x99ED18")]
		public double MagnitudeReciprocal()
		{
			return default(double);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x99ED34", Offset = "0x99ED34", VA = "0x99ED34")]
		public void Normalize()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x99ED60", Offset = "0x99ED60", VA = "0x99ED60")]
		public double Dot(Point2D p)
		{
			return default(double);
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x99EDF0", Offset = "0x99EDF0", VA = "0x99EDF0")]
		public double Cross(Point2D p)
		{
			return default(double);
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x99EE80", Offset = "0x99EE80", VA = "0x99EE80")]
		public void Clamp(Point2D low, Point2D high)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x99EFD8", Offset = "0x99EFD8", VA = "0x99EFD8")]
		public void Abs()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x99F084", Offset = "0x99F084", VA = "0x99F084")]
		public void Reciprocal()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x99F12C", Offset = "0x99F12C", VA = "0x99F12C")]
		public void Translate(Point2D vector)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x99F130", Offset = "0x99F130", VA = "0x99F130")]
		public void Translate(double x, double y)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x99F19C", Offset = "0x99F19C", VA = "0x99F19C")]
		public void Scale(Point2D vector)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x99F1A0", Offset = "0x99F1A0", VA = "0x99F1A0")]
		public void Scale(double scalar)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x99F1A4", Offset = "0x99F1A4", VA = "0x99F1A4")]
		public void Scale(double x, double y)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x99F210", Offset = "0x99F210", VA = "0x99F210")]
		public void Rotate(double radians)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x99F2F4", Offset = "0x99F2F4", VA = "0x99F2F4")]
		public void RotateDegrees(double degrees)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x99F310", Offset = "0x99F310", VA = "0x99F310")]
		public static double Dot(Point2D lhs, Point2D rhs)
		{
			return default(double);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x99F3A0", Offset = "0x99F3A0", VA = "0x99F3A0")]
		public static double Cross(Point2D lhs, Point2D rhs)
		{
			return default(double);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x99F430", Offset = "0x99F430", VA = "0x99F430")]
		public static Point2D Clamp(Point2D a, Point2D low, Point2D high)
		{
			return null;
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x99F4B4", Offset = "0x99F4B4", VA = "0x99F4B4")]
		public static Point2D Min(Point2D a, Point2D b)
		{
			return null;
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x99F5F0", Offset = "0x99F5F0", VA = "0x99F5F0")]
		public static Point2D Max(Point2D a, Point2D b)
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x99F72C", Offset = "0x99F72C", VA = "0x99F72C")]
		public static Point2D Abs(Point2D a)
		{
			return null;
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x99F7F4", Offset = "0x99F7F4", VA = "0x99F7F4")]
		public static Point2D Reciprocal(Point2D a)
		{
			return null;
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x99F898", Offset = "0x99F898", VA = "0x99F898")]
		public static Point2D Perpendicular(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x99F944", Offset = "0x99F944", VA = "0x99F944")]
		public static Point2D Perpendicular(double scalar, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x99F9F0", Offset = "0x99F9F0", VA = "0x99F9F0")]
		public static Point2D operator +(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x99FA6C", Offset = "0x99FA6C", VA = "0x99FA6C")]
		public static Point2D operator +(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x99FAE8", Offset = "0x99FAE8", VA = "0x99FAE8")]
		public static Point2D operator -(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x99FB64", Offset = "0x99FB64", VA = "0x99FB64")]
		public static Point2D operator -(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x99FBE0", Offset = "0x99FBE0", VA = "0x99FBE0")]
		public static Point2D operator *(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x99FC5C", Offset = "0x99FC5C", VA = "0x99FC5C")]
		public static Point2D operator *(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x99FCD8", Offset = "0x99FCD8", VA = "0x99FCD8")]
		public static Point2D operator *(double scalar, Point2D lhs)
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x99FD54", Offset = "0x99FD54", VA = "0x99FD54")]
		public static Point2D operator /(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x99FDD0", Offset = "0x99FDD0", VA = "0x99FDD0")]
		public static Point2D operator /(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x99FE4C", Offset = "0x99FE4C", VA = "0x99FE4C")]
		public static Point2D operator -(Point2D p)
		{
			return null;
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x99FEB8", Offset = "0x99FEB8", VA = "0x99FEB8")]
		public static bool operator <(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x99FEDC", Offset = "0x99FEDC", VA = "0x99FEDC")]
		public static bool operator >(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x99FF00", Offset = "0x99FF00", VA = "0x99FF00")]
		public static bool operator <=(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x99FF24", Offset = "0x99FF24", VA = "0x99FF24")]
		public static bool operator >=(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000221")]
	public class Point2DEnumerator : IEnumerator<Point2D>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IList<Point2D> mPoints;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int position;

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0x9A0058", Offset = "0x9A0058", VA = "0x9A0058", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public Point2D Current
		{
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0x9A005C", Offset = "0x9A005C", VA = "0x9A005C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x99FF48", Offset = "0x99FF48", VA = "0x99FF48")]
		public Point2DEnumerator(IList<Point2D> points)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x99FF7C", Offset = "0x99FF7C", VA = "0x99FF7C", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x9A0048", Offset = "0x9A0048", VA = "0x9A0048", Slot = "8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x9A0054", Offset = "0x9A0054", VA = "0x9A0054", Slot = "5")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x53E34C", Offset = "0x53E34C")]
	public class Point2DList : IEnumerable<Point2D>, IEnumerable, IList<Point2D>, ICollection<Point2D>
	{
		[Token(Token = "0x2000223")]
		public enum WindingOrderType
		{
			[Token(Token = "0x4000C2D")]
			CW = 0,
			[Token(Token = "0x4000C2E")]
			CCW = 1,
			[Token(Token = "0x4000C2F")]
			Unknown = 2,
			[Token(Token = "0x4000C30")]
			Default = 1
		}

		[Token(Token = "0x2000224")]
		[Flags]
		public enum PolygonError : uint
		{
			[Token(Token = "0x4000C32")]
			None = 0u,
			[Token(Token = "0x4000C33")]
			NotEnoughVertices = 1u,
			[Token(Token = "0x4000C34")]
			NotConvex = 2u,
			[Token(Token = "0x4000C35")]
			NotSimple = 4u,
			[Token(Token = "0x4000C36")]
			AreaTooSmall = 8u,
			[Token(Token = "0x4000C37")]
			SidesTooCloseToParallel = 0x10u,
			[Token(Token = "0x4000C38")]
			TooThin = 0x20u,
			[Token(Token = "0x4000C39")]
			Degenerate = 0x40u,
			[Token(Token = "0x4000C3A")]
			Unknown = 0x40000000u
		}

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int kMaxPolygonVertices;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly double kLinearSlop;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly double kAngularSlop;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<Point2D> mPoints;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Rect2D mBoundingBox;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected WindingOrderType mWindingOrder;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected double mEpsilon;

		[Token(Token = "0x17000120")]
		public Rect2D BoundingBox
		{
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0x9A01B8", Offset = "0x9A01B8", VA = "0x9A01B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		public WindingOrderType WindingOrder
		{
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0x9A01C0", Offset = "0x9A01C0", VA = "0x9A01C0")]
			get
			{
				return default(WindingOrderType);
			}
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0x9A01C8", Offset = "0x9A01C8", VA = "0x9A01C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public double Epsilon
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0x9A0290", Offset = "0x9A0290", VA = "0x9A0290")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000123")]
		public Point2D Item
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0x9A0298", Offset = "0x9A0298", VA = "0x9A0298", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0x9A030C", Offset = "0x9A030C", VA = "0x9A030C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public int Count
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x9A0378", Offset = "0x9A0378", VA = "0x9A0378", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000125")]
		public virtual bool IsReadOnly
		{
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x9A03C4", Offset = "0x9A03C4", VA = "0x9A03C4", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x9A03CC", Offset = "0x9A03CC", VA = "0x9A03CC")]
		public Point2DList()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x9A04B4", Offset = "0x9A04B4", VA = "0x9A04B4")]
		public Point2DList(int capacity)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x9A05D4", Offset = "0x9A05D4", VA = "0x9A05D4")]
		public Point2DList(IList<Point2D> l)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x9A0760", Offset = "0x9A0760", VA = "0x9A0760")]
		public Point2DList(Point2DList l)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x9A08E8", Offset = "0x9A08E8", VA = "0x9A08E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x9A09F0", Offset = "0x9A09F0", VA = "0x9A09F0", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x9A0A84", Offset = "0x9A0A84", VA = "0x9A0A84", Slot = "4")]
		private IEnumerator<Point2D> System.Collections.Generic.IEnumerable<Poly2Tri.Point2D>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x9A0AF0", Offset = "0x9A0AF0", VA = "0x9A0AF0", Slot = "14")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x9A0B9C", Offset = "0x9A0B9C", VA = "0x9A0B9C", Slot = "8")]
		public int IndexOf(Point2D p)
		{
			return default(int);
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x9A0C00", Offset = "0x9A0C00", VA = "0x9A0C00", Slot = "19")]
		public virtual void Add(Point2D p)
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x9A0C18", Offset = "0x9A0C18", VA = "0x9A0C18", Slot = "20")]
		protected virtual void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x9A0DF4", Offset = "0x9A0DF4", VA = "0x9A0DF4", Slot = "21")]
		public virtual void AddRange(Point2DList l)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x9A0EB4", Offset = "0x9A0EB4", VA = "0x9A0EB4", Slot = "22")]
		public virtual void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x9A11DC", Offset = "0x9A11DC", VA = "0x9A11DC", Slot = "23")]
		public virtual void Insert(int idx, Point2D item)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x9A11FC", Offset = "0x9A11FC", VA = "0x9A11FC", Slot = "24")]
		public virtual bool Remove(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x9A13B4", Offset = "0x9A13B4", VA = "0x9A13B4", Slot = "25")]
		public virtual void RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x9A1444", Offset = "0x9A1444", VA = "0x9A1444", Slot = "26")]
		public virtual void RemoveRange(int idxStart, int count)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x9A14E0", Offset = "0x9A14E0", VA = "0x9A14E0", Slot = "15")]
		public bool Contains(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x9A1544", Offset = "0x9A1544", VA = "0x9A1544", Slot = "16")]
		public void CopyTo(Point2D[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x9A1288", Offset = "0x9A1288", VA = "0x9A1288")]
		public void CalculateBounds()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x9A0D08", Offset = "0x9A0D08", VA = "0x9A0D08")]
		public double CalculateEpsilon()
		{
			return default(double);
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x9A0260", Offset = "0x9A0260", VA = "0x9A0260")]
		public WindingOrderType CalculateWindingOrder()
		{
			return default(WindingOrderType);
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x9A17A4", Offset = "0x9A17A4", VA = "0x9A17A4")]
		public int NextIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x9A17D0", Offset = "0x9A17D0", VA = "0x9A17D0")]
		public int PreviousIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x9A1690", Offset = "0x9A1690", VA = "0x9A1690")]
		public double GetSignedArea()
		{
			return default(double);
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x9A17F0", Offset = "0x9A17F0", VA = "0x9A17F0")]
		public double GetArea()
		{
			return default(double);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x9A1910", Offset = "0x9A1910", VA = "0x9A1910")]
		public Point2D GetCentroid()
		{
			return null;
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x9A1A84", Offset = "0x9A1A84", VA = "0x9A1A84")]
		public void Translate(Point2D vector)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x9A1AF4", Offset = "0x9A1AF4", VA = "0x9A1AF4")]
		public void Scale(Point2D value)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x9A1B64", Offset = "0x9A1B64", VA = "0x9A1B64")]
		public void Rotate(double radians)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x9A1D48", Offset = "0x9A1D48", VA = "0x9A1D48")]
		public bool IsDegenerate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x9A1F3C", Offset = "0x9A1F3C", VA = "0x9A1F3C")]
		public bool IsConvex()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x9A2120", Offset = "0x9A2120", VA = "0x9A2120")]
		public bool IsSimple()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x9A2300", Offset = "0x9A2300", VA = "0x9A2300")]
		public PolygonError CheckPolygon()
		{
			return default(PolygonError);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x9A27EC", Offset = "0x9A27EC", VA = "0x9A27EC")]
		public static string GetErrorString(PolygonError error)
		{
			return null;
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x9A2EBC", Offset = "0x9A2EBC", VA = "0x9A2EBC")]
		public void RemoveDuplicateNeighborPoints()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x9A305C", Offset = "0x9A305C", VA = "0x9A305C")]
		public void Simplify()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x9A3064", Offset = "0x9A3064", VA = "0x9A3064")]
		public void Simplify(double bias)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x9A31A4", Offset = "0x9A31A4", VA = "0x9A31A4")]
		public void MergeParallelEdges(double tolerance)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x9A37F0", Offset = "0x9A37F0", VA = "0x9A37F0")]
		public void ProjectToAxis(Point2D axis, out double min, out double max)
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class Rect2D
	{
		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double mMinX;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double mMaxX;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double mMinY;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double mMaxY;

		[Token(Token = "0x17000126")]
		public double MinX
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x904980", Offset = "0x904980", VA = "0x904980")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0x904988", Offset = "0x904988", VA = "0x904988")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public double MaxX
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x904990", Offset = "0x904990", VA = "0x904990")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x904998", Offset = "0x904998", VA = "0x904998")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public double MinY
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x9049A0", Offset = "0x9049A0", VA = "0x9049A0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x9049A8", Offset = "0x9049A8", VA = "0x9049A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public double MaxY
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x9049B0", Offset = "0x9049B0", VA = "0x9049B0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x9049B8", Offset = "0x9049B8", VA = "0x9049B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public double Left
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x9049C0", Offset = "0x9049C0", VA = "0x9049C0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x9049C8", Offset = "0x9049C8", VA = "0x9049C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public double Right
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x9049D0", Offset = "0x9049D0", VA = "0x9049D0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x9049D8", Offset = "0x9049D8", VA = "0x9049D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public double Top
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x9049E0", Offset = "0x9049E0", VA = "0x9049E0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x9049E8", Offset = "0x9049E8", VA = "0x9049E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public double Bottom
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x9049F0", Offset = "0x9049F0", VA = "0x9049F0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x9049F8", Offset = "0x9049F8", VA = "0x9049F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public double Width
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x8FBEA4", Offset = "0x8FBEA4", VA = "0x8FBEA4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700012F")]
		public double Height
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x904A00", Offset = "0x904A00", VA = "0x904A00")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000130")]
		public bool Empty
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x904A0C", Offset = "0x904A0C", VA = "0x904A0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x904A30", Offset = "0x904A30", VA = "0x904A30")]
		public Rect2D()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x904A60", Offset = "0x904A60", VA = "0x904A60", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x904A68", Offset = "0x904A68", VA = "0x904A68", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x904B0C", Offset = "0x904B0C", VA = "0x904B0C")]
		public bool Equals(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x904B88", Offset = "0x904B88", VA = "0x904B88")]
		public bool Equals(Rect2D r, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x8F8BB0", Offset = "0x8F8BB0", VA = "0x8F8BB0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x904CE4", Offset = "0x904CE4", VA = "0x904CE4")]
		public void Set(double xmin, double xmax, double ymin, double ymax)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x904DE8", Offset = "0x904DE8", VA = "0x904DE8")]
		public void Set(Rect2D b)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x904E1C", Offset = "0x904E1C", VA = "0x904E1C")]
		public void SetSize(double w, double h)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x904E38", Offset = "0x904E38", VA = "0x904E38")]
		public bool Contains(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x904E74", Offset = "0x904E74", VA = "0x904E74")]
		public bool Contains(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x904F00", Offset = "0x904F00", VA = "0x904F00")]
		public bool Contains(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x904F5C", Offset = "0x904F5C", VA = "0x904F5C")]
		public bool ContainsInclusive(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x904F98", Offset = "0x904F98", VA = "0x904F98")]
		public bool ContainsInclusive(double x, double y, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x904FE4", Offset = "0x904FE4", VA = "0x904FE4")]
		public bool ContainsInclusive(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x905070", Offset = "0x905070", VA = "0x905070")]
		public bool ContainsInclusive(Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x905110", Offset = "0x905110", VA = "0x905110")]
		public bool ContainsInclusive(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x90516C", Offset = "0x90516C", VA = "0x90516C")]
		public bool ContainsInclusive(Rect2D r, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x8FBE48", Offset = "0x8FBE48", VA = "0x8FBE48")]
		public bool Intersects(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x9051D8", Offset = "0x9051D8", VA = "0x9051D8")]
		public Point2D GetCenter()
		{
			return null;
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x905260", Offset = "0x905260", VA = "0x905260")]
		public bool IsNormalized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x904CF0", Offset = "0x904CF0", VA = "0x904CF0")]
		public void Normalize()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x8F68BC", Offset = "0x8F68BC", VA = "0x8F68BC")]
		public void AddPoint(Point2D p)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x905284", Offset = "0x905284", VA = "0x905284")]
		public void Inflate(double w, double h)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x9052A8", Offset = "0x9052A8", VA = "0x9052A8")]
		public void Inflate(double left, double top, double right, double bottom)
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x9052CC", Offset = "0x9052CC", VA = "0x9052CC")]
		public void Offset(double w, double h)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x9052E8", Offset = "0x9052E8", VA = "0x9052E8")]
		public void SetPosition(double x, double y)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x905314", Offset = "0x905314", VA = "0x905314")]
		public bool Intersection(Rect2D r1, Rect2D r2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x9053C8", Offset = "0x9053C8", VA = "0x9053C8")]
		public void Union(Rect2D r1, Rect2D r2)
		{
		}
	}
}
namespace DentedPixel
{
	[Token(Token = "0x2000226")]
	public class LeanDummy
	{
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xBAFB40", Offset = "0xBAFB40", VA = "0xBAFB40")]
		public LeanDummy()
		{
		}
	}
}
namespace Pimax.Platform
{
	[Token(Token = "0x2000227")]
	public struct PvrUser
	{
		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong userID;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string userName;
	}
	[Token(Token = "0x2000228")]
	public enum PvrRuntimeError
	{
		[Token(Token = "0x4000C42")]
		pvrRuntimeError_Refund = 4001,
		[Token(Token = "0x4000C43")]
		pvrRuntimeError_TooManyDevices = 5001,
		[Token(Token = "0x4000C44")]
		pvrRuntimeError_Unknown = 99999
	}
	[Token(Token = "0x2000229")]
	public enum PvrCheckEntitlementResult
	{
		[Token(Token = "0x4000C46")]
		pvrEntitlement_Success = 0,
		[Token(Token = "0x4000C47")]
		pvrEntitlement_NotLogin = 1001,
		[Token(Token = "0x4000C48")]
		pvrEntitlement_Refund = 1002,
		[Token(Token = "0x4000C49")]
		pvrEntitlement_NotPurchased = 1003,
		[Token(Token = "0x4000C4A")]
		pvrEntitlement_PimaxIsNotInstalled = 3001,
		[Token(Token = "0x4000C4B")]
		pvrEntitlement_NoInternet = 3002,
		[Token(Token = "0x4000C4C")]
		pvrEntitlement_NoInternetPurchased = 3003,
		[Token(Token = "0x4000C4D")]
		pvrEntitlement_NoInternetNotPurchased = 3004,
		[Token(Token = "0x4000C4E")]
		pvrEntitlement_Unknown = 99999
	}
	[Token(Token = "0x200022A")]
	public enum PvrMessageType
	{
		[Token(Token = "0x4000C50")]
		pvrMessage_Unknown = 0,
		[Token(Token = "0x4000C51")]
		pvrMessage_CheckEntitlement = 256,
		[Token(Token = "0x4000C52")]
		pvrMessage_GetAccessToken = 257,
		[Token(Token = "0x4000C53")]
		pvrMessage_GetLoggedInUser = 258,
		[Token(Token = "0x4000C54")]
		pvrMessage_GetCurrentLanguage = 512,
		[Token(Token = "0x4000C55")]
		pvrMessage_ShutDown = 131072,
		[Token(Token = "0x4000C56")]
		pvrMessage_Notify_Logout = 327681,
		[Token(Token = "0x4000C57")]
		pvrMessage_Notify_RunningError = 327682
	}
	[Token(Token = "0x200022B")]
	public enum PvrPlatformResult
	{
		[Token(Token = "0x4000C59")]
		pvrPlatformResult_Success = 0,
		[Token(Token = "0x4000C5A")]
		pvrPlatformResult_Failed = 1,
		[Token(Token = "0x4000C5B")]
		pvrPlatformResult_IsConnected = 3,
		[Token(Token = "0x4000C5C")]
		pvrPlatformResult_NotInitialize = 100,
		[Token(Token = "0x4000C5D")]
		pvrPlatformResult_NotReady = 101,
		[Token(Token = "0x4000C5E")]
		pvrPlatformResult_ServiceNotInstalled = 102,
		[Token(Token = "0x4000C5F")]
		pvrPlatformResult_ServiceLaunchFailed = 103,
		[Token(Token = "0x4000C60")]
		pvrPlatformResult_ConnectServiceFailed = 104,
		[Token(Token = "0x4000C61")]
		pvrPlatformResult_ConnectPimaxFailed = 105,
		[Token(Token = "0x4000C62")]
		pvrPlatformResult_ConnectPimaxServerFailed = 106,
		[Token(Token = "0x4000C63")]
		pvrPlatformResult_Unknown = 99999
	}
	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x53E394", Offset = "0x53E394")]
	public class PvrSettingScriptableObject : ScriptableObject
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong AppID;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IgnoreSDKSetting;

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x901C04", Offset = "0x901C04", VA = "0x901C04")]
		public PvrSettingScriptableObject()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class PvrConnectToDLL
	{
		[Token(Token = "0x4000C66")]
		private const string DLL_Name = "platformSDK_64";

		[PreserveSig]
		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x900008", Offset = "0x900008", VA = "0x900008")]
		public static extern long pvr_GetCurrentLanguage();

		[PreserveSig]
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x90007C", Offset = "0x90007C", VA = "0x90007C")]
		public static extern long pvr_CheckEntitlement();

		[PreserveSig]
		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x9000F0", Offset = "0x9000F0", VA = "0x9000F0")]
		public static extern long pvr_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x900164", Offset = "0x900164", VA = "0x900164")]
		public static extern long pvr_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x9001D8", Offset = "0x9001D8", VA = "0x9001D8")]
		public static extern IntPtr pvr_PollMessage();

		[PreserveSig]
		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x90024C", Offset = "0x90024C", VA = "0x90024C")]
		public static extern long pvr_Message_GetType(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x9002CC", Offset = "0x9002CC", VA = "0x9002CC")]
		public static extern bool pvr_Message_IsError(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x900354", Offset = "0x900354", VA = "0x900354")]
		public static extern IntPtr pvr_Message_GetError(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x9003D4", Offset = "0x9003D4", VA = "0x9003D4")]
		public static extern IntPtr pvr_Message_GetErrorInfo(IntPtr errorhandle);

		[PreserveSig]
		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x900454", Offset = "0x900454", VA = "0x900454")]
		public static extern long pvr_PlatformInit(ulong AppId);

		[PreserveSig]
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x9004D4", Offset = "0x9004D4", VA = "0x9004D4")]
		public static extern long pvr_PlatformShutdown();

		[PreserveSig]
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x900548", Offset = "0x900548", VA = "0x900548")]
		public static extern ulong pvr_UserInfo_GetUserId(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x9005C8", Offset = "0x9005C8", VA = "0x9005C8")]
		public static extern IntPtr pvr_UserInfo_GetUserName(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x900648", Offset = "0x900648", VA = "0x900648")]
		public static extern short pvr_Message_GetInt16(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x9006C8", Offset = "0x9006C8", VA = "0x9006C8")]
		public static extern ushort pvr_Message_GetUint16(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x900748", Offset = "0x900748", VA = "0x900748")]
		public static extern int pvr_Message_GetInt32(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x9007C8", Offset = "0x9007C8", VA = "0x9007C8")]
		public static extern uint pvr_Message_GetUint32(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x900848", Offset = "0x900848", VA = "0x900848")]
		public static extern long pvr_Message_GetInt64(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x9008C8", Offset = "0x9008C8", VA = "0x9008C8")]
		public static extern ulong pvr_Message_GetUint64(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x900948", Offset = "0x900948", VA = "0x900948")]
		public static extern bool pvr_Message_GetBool(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x9009D0", Offset = "0x9009D0", VA = "0x9009D0")]
		public static extern double pvr_Message_GetDouble(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x900A50", Offset = "0x900A50", VA = "0x900A50")]
		public static extern IntPtr pvr_Message_GetString(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x900AD0", Offset = "0x900AD0", VA = "0x900AD0")]
		public static extern long pvr_CheckEntitlement_GetResult(IntPtr massagehandle);

		[PreserveSig]
		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x900B50", Offset = "0x900B50", VA = "0x900B50")]
		public static extern long pvr_RuntimeError_GetError(IntPtr massagehandle);

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x900BD0", Offset = "0x900BD0", VA = "0x900BD0")]
		public PvrConnectToDLL()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class PvrManager : MonoBehaviour
	{
		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringEvent OnMessageError;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrRunningErrorEvent OnRunningError;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnShutDown;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnLogout;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5427E0", Offset = "0x5427E0")]
		private static PvrManager <Instance>k__BackingField;

		[Token(Token = "0x17000131")]
		public static PvrManager Instance
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x900DD4", Offset = "0x900DD4", VA = "0x900DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5478B4", Offset = "0x5478B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x900E20", Offset = "0x900E20", VA = "0x900E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5478C4", Offset = "0x5478C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x900E70", Offset = "0x900E70", VA = "0x900E70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x900FC0", Offset = "0x900FC0", VA = "0x900FC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x9015CC", Offset = "0x9015CC", VA = "0x9015CC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x9015D0", Offset = "0x9015D0", VA = "0x9015D0")]
		public PvrManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022F")]
	public class StringEvent : UnityEvent<string>
	{
		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x868520", Offset = "0x868520", VA = "0x868520")]
		public StringEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000230")]
	public class PvrRunningErrorEvent : UnityEvent<PvrRuntimeError>
	{
		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x9016A8", Offset = "0x9016A8", VA = "0x9016A8")]
		public PvrRunningErrorEvent()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class CheckEntitlementEvent : UnityEvent<PvrCheckEntitlementResult>
	{
		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x93C7B4", Offset = "0x93C7B4", VA = "0x93C7B4")]
		public CheckEntitlementEvent()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class PvrUserEvent : UnityEvent<PvrUser>
	{
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x9017CC", Offset = "0x9017CC", VA = "0x9017CC")]
		public PvrUserEvent()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class PvrMessageManager
	{
		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public CheckEntitlementEvent OnCheckEntitlement;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public StringEvent OnGetAccessToken;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public PvrUserEvent OnGetLoggedInUser;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public StringEvent OnGetCurrentLanguage;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PvrMessageManager _instance;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly object _lock;

		[Token(Token = "0x17000132")]
		public static PvrMessageManager Instance
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x901024", Offset = "0x901024", VA = "0x901024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x9016F4", Offset = "0x9016F4", VA = "0x9016F4")]
		private PvrMessageManager()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x9011A8", Offset = "0x9011A8", VA = "0x9011A8")]
		public bool PumpMessage()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x901818", Offset = "0x901818", VA = "0x901818")]
		public static string IntptrToGB2312(IntPtr intPtr)
		{
			return null;
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x9018EC", Offset = "0x9018EC", VA = "0x9018EC")]
		private static PvrUser LoggedInUser(IntPtr messageHandle)
		{
			return default(PvrUser);
		}
	}
	[Token(Token = "0x2000234")]
	public static class PvrPlatform
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PvrMessageManager messageManager;

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x900CE0", Offset = "0x900CE0", VA = "0x900CE0")]
		public static void init()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x9019F4", Offset = "0x9019F4", VA = "0x9019F4")]
		public static PvrPlatformResult GetLoggedInUser(UnityAction<PvrUser> callBack)
		{
			return default(PvrPlatformResult);
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x901A78", Offset = "0x901A78", VA = "0x901A78")]
		public static PvrPlatformResult GetAccessToken(UnityAction<string> callBack)
		{
			return default(PvrPlatformResult);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x901AFC", Offset = "0x901AFC", VA = "0x901AFC")]
		public static PvrPlatformResult CheckEntitlement(UnityAction<PvrCheckEntitlementResult> callBack)
		{
			return default(PvrPlatformResult);
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x901B80", Offset = "0x901B80", VA = "0x901B80")]
		public static PvrPlatformResult GetCurrentLanguage(UnityAction<string> callBack)
		{
			return default(PvrPlatformResult);
		}
	}
	[Token(Token = "0x2000235")]
	public sealed class PvrCore
	{
		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542830", Offset = "0x542830")]
		private static bool <IsPlatformInitialized>k__BackingField;

		[Token(Token = "0x17000133")]
		public static bool IsPlatformInitialized
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x900BD8", Offset = "0x900BD8", VA = "0x900BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5478D4", Offset = "0x5478D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x900C24", Offset = "0x900C24", VA = "0x900C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5478E4", Offset = "0x5478E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x900C78", Offset = "0x900C78", VA = "0x900C78")]
		public static PvrPlatformResult Initialize()
		{
			return default(PvrPlatformResult);
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x900D5C", Offset = "0x900D5C", VA = "0x900D5C")]
		private static ulong GetAppID()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x900DC8", Offset = "0x900DC8", VA = "0x900DC8")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x900DCC", Offset = "0x900DCC", VA = "0x900DCC")]
		public PvrCore()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000236")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000134")]
		public bool Highlight
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x93CB0C", Offset = "0x93CB0C", VA = "0x93CB0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x93CB14", Offset = "0x93CB14", VA = "0x93CB14")]
			set
			{
			}
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x93CB20", Offset = "0x93CB20", VA = "0x93CB20")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x93CCE8", Offset = "0x93CCE8", VA = "0x93CCE8", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x93CD10", Offset = "0x93CD10", VA = "0x93CD10", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x93CD38", Offset = "0x93CD38", VA = "0x93CD38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x93CBE8", Offset = "0x93CBE8", VA = "0x93CBE8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x93CFD0", Offset = "0x93CFD0", VA = "0x93CFD0")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000135")]
		public bool InRange
		{
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x8CDB50", Offset = "0x8CDB50", VA = "0x8CDB50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x8CDB58", Offset = "0x8CDB58", VA = "0x8CDB58")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public bool Targeted
		{
			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x8CDCD4", Offset = "0x8CDCD4", VA = "0x8CDCD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x8CDCDC", Offset = "0x8CDCDC", VA = "0x8CDCDC")]
			set
			{
			}
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x8CDCE8", Offset = "0x8CDCE8", VA = "0x8CDCE8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x8CDB64", Offset = "0x8CDB64", VA = "0x8CDB64")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x8CDE18", Offset = "0x8CDE18", VA = "0x8CDE18")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x53E3E8", Offset = "0x53E3E8")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000137")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x8CDE20", Offset = "0x8CDE20", VA = "0x8CDE20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x8CDE28", Offset = "0x8CDE28", VA = "0x8CDE28")]
			set
			{
			}
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x8CDE44", Offset = "0x8CDE44", VA = "0x8CDE44", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x8CE074", Offset = "0x8CE074", VA = "0x8CE074", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x8CE934", Offset = "0x8CE934", VA = "0x8CE934", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x8CEDAC", Offset = "0x8CEDAC", VA = "0x8CEDAC", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x8CF06C", Offset = "0x8CF06C", VA = "0x8CF06C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x8CE2C8", Offset = "0x8CE2C8", VA = "0x8CE2C8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x8CF15C", Offset = "0x8CF15C", VA = "0x8CF15C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x8CF558", Offset = "0x8CF558", VA = "0x8CF558", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x8CF570", Offset = "0x8CF570", VA = "0x8CF570", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x8CF578", Offset = "0x8CF578", VA = "0x8CF578")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x6C5730", Offset = "0x6C5730", VA = "0x6C5730")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x6C57E8", Offset = "0x6C57E8", VA = "0x6C57E8")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x6C58A0", Offset = "0x6C58A0", VA = "0x6C58A0")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x200023B")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000C96")]
			Disabled,
			[Token(Token = "0x4000C97")]
			Enabled,
			[Token(Token = "0x4000C98")]
			Targeted
		}

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x6C5960", Offset = "0x6C5960", VA = "0x6C5960")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x6C59C4", Offset = "0x6C59C4", VA = "0x6C59C4")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x6C5A60", Offset = "0x6C5A60", VA = "0x6C5A60")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x6C5AA8", Offset = "0x6C5AA8", VA = "0x6C5AA8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x997330", Offset = "0x997330", VA = "0x997330")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x99741C", Offset = "0x99741C", VA = "0x99741C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x997428", Offset = "0x997428", VA = "0x997428")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x997434", Offset = "0x997434", VA = "0x997434")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x92EDF4", Offset = "0x92EDF4", VA = "0x92EDF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x92EE48", Offset = "0x92EE48", VA = "0x92EE48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x92F1B4", Offset = "0x92F1B4", VA = "0x92F1B4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x92F2B8", Offset = "0x92F2B8", VA = "0x92F2B8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x92EE4C", Offset = "0x92EE4C", VA = "0x92EE4C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x92F3BC", Offset = "0x92F3BC", VA = "0x92F3BC")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200023F")]
		public enum ContactTest
		{
			[Token(Token = "0x4000CAB")]
			PerpenTest,
			[Token(Token = "0x4000CAC")]
			BackwardsPress
		}

		[Token(Token = "0x4000C9C")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000C9D")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542970", Offset = "0x542970")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000138")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x93111C", Offset = "0x93111C", VA = "0x93111C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000139")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x931124", Offset = "0x931124", VA = "0x931124")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700013A")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x931130", Offset = "0x931130", VA = "0x931130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5478F4", Offset = "0x5478F4")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x931138", Offset = "0x931138", VA = "0x931138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547904", Offset = "0x547904")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x931140", Offset = "0x931140", VA = "0x931140", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x93122C", Offset = "0x93122C", VA = "0x93122C")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x93142C", Offset = "0x93142C", VA = "0x93142C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x9319E0", Offset = "0x9319E0", VA = "0x9319E0")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x931A8C", Offset = "0x931A8C", VA = "0x931A8C")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x9318F8", Offset = "0x9318F8", VA = "0x9318F8")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x931B94", Offset = "0x931B94", VA = "0x931B94")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x931C18", Offset = "0x931C18", VA = "0x931C18")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x931CA4", Offset = "0x931CA4", VA = "0x931CA4")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542990", Offset = "0x542990")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5429A0", Offset = "0x5429A0")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700013B")]
		public Collider Collider
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x931ED8", Offset = "0x931ED8", VA = "0x931ED8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547914", Offset = "0x547914")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x931EE0", Offset = "0x931EE0", VA = "0x931EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547924", Offset = "0x547924")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x931EE8", Offset = "0x931EE8", VA = "0x931EE8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547934", Offset = "0x547934")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x931EF0", Offset = "0x931EF0", VA = "0x931EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547944", Offset = "0x547944")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x931EF8", Offset = "0x931EF8", VA = "0x931EF8", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x931F48", Offset = "0x931F48", VA = "0x931F48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x931FCC", Offset = "0x931FCC", VA = "0x931FCC")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700013E")]
		Collider Collider
		{
			[Token(Token = "0x6000E66")]
			get;
		}

		[Token(Token = "0x1700013F")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000E67")]
			get;
		}

		[Token(Token = "0x17000140")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000E68")]
			get;
		}
	}
	[Token(Token = "0x2000242")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x93138C", Offset = "0x93138C", VA = "0x93138C")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000243")]
	public enum InteractionType
	{
		[Token(Token = "0x4000CB5")]
		Enter,
		[Token(Token = "0x4000CB6")]
		Stay,
		[Token(Token = "0x4000CB7")]
		Exit
	}
	[Token(Token = "0x2000244")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000245")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000CC9")]
			Mesh,
			[Token(Token = "0x4000CCA")]
			Skeleton,
			[Token(Token = "0x4000CCB")]
			Both
		}

		[Token(Token = "0x2000246")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E448", Offset = "0x53E448")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700014C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E8B")]
				[Address(RVA = "0x802F94", Offset = "0x802F94", VA = "0x802F94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E8D")]
				[Address(RVA = "0x802FDC", Offset = "0x802FDC", VA = "0x802FDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x802D34", Offset = "0x802D34", VA = "0x802D34")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x802D60", Offset = "0x802D60", VA = "0x802D60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x802D64", Offset = "0x802D64", VA = "0x802D64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x802F9C", Offset = "0x802F9C", VA = "0x802F9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CB8")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5429D0", Offset = "0x5429D0")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000141")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x6CB0D0", Offset = "0x6CB0D0", VA = "0x6CB0D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x6CB108", Offset = "0x6CB108", VA = "0x6CB108")]
			private set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x6CB170", Offset = "0x6CB170", VA = "0x6CB170")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x6CB1A8", Offset = "0x6CB1A8", VA = "0x6CB1A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x6CB210", Offset = "0x6CB210", VA = "0x6CB210")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x6CB248", Offset = "0x6CB248", VA = "0x6CB248")]
			private set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x6CB2B0", Offset = "0x6CB2B0", VA = "0x6CB2B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x6CB2E8", Offset = "0x6CB2E8", VA = "0x6CB2E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x6CB350", Offset = "0x6CB350", VA = "0x6CB350")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x6CB388", Offset = "0x6CB388", VA = "0x6CB388")]
			private set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x6CB3F0", Offset = "0x6CB3F0", VA = "0x6CB3F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x6CB424", Offset = "0x6CB424", VA = "0x6CB424")]
			private set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x6CB488", Offset = "0x6CB488", VA = "0x6CB488")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x6CB4BC", Offset = "0x6CB4BC", VA = "0x6CB4BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x6CB520", Offset = "0x6CB520", VA = "0x6CB520")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x6CB554", Offset = "0x6CB554", VA = "0x6CB554")]
			private set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x6CB5B8", Offset = "0x6CB5B8", VA = "0x6CB5B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0x6CB5EC", Offset = "0x6CB5EC", VA = "0x6CB5EC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x6CB650", Offset = "0x6CB650", VA = "0x6CB650")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x6CB684", Offset = "0x6CB684", VA = "0x6CB684")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x6CB6E8", Offset = "0x6CB6E8", VA = "0x6CB6E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547954", Offset = "0x547954")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x6CB734", Offset = "0x6CB734", VA = "0x6CB734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547964", Offset = "0x547964")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x6CB784", Offset = "0x6CB784", VA = "0x6CB784")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x6CBB2C", Offset = "0x6CBB2C", VA = "0x6CBB2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x6CBAC0", Offset = "0x6CBAC0", VA = "0x6CBAC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x547974", Offset = "0x547974")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x6CBBB4", Offset = "0x6CBBB4", VA = "0x6CBBB4")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x6CBC98", Offset = "0x6CBC98", VA = "0x6CBC98")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x6CBE78", Offset = "0x6CBE78", VA = "0x6CBE78")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x6CC0B4", Offset = "0x6CC0B4", VA = "0x6CC0B4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x6CC240", Offset = "0x6CC240", VA = "0x6CC240")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000248")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x802FE4", Offset = "0x802FE4", VA = "0x802FE4")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700014E")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x6CC700", Offset = "0x6CC700", VA = "0x6CC700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x6CC708", Offset = "0x6CC708", VA = "0x6CC708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x6CC710", Offset = "0x6CC710", VA = "0x6CC710")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x6CC718", Offset = "0x6CC718", VA = "0x6CC718", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x6CC720", Offset = "0x6CC720", VA = "0x6CC720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547A24", Offset = "0x547A24")]
			add
			{
			}
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x6CC7C0", Offset = "0x6CC7C0", VA = "0x6CC7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547A34", Offset = "0x547A34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x6CC8D0", Offset = "0x6CC8D0", VA = "0x6CC8D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547A44", Offset = "0x547A44")]
			add
			{
			}
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x6CC970", Offset = "0x6CC970", VA = "0x6CC970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547A54", Offset = "0x547A54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x6CCA80", Offset = "0x6CCA80", VA = "0x6CCA80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547A64", Offset = "0x547A64")]
			add
			{
			}
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x6CCB20", Offset = "0x6CCB20", VA = "0x6CCB20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547A74", Offset = "0x547A74")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x6CC860", Offset = "0x6CC860", VA = "0x6CC860", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x6CCA10", Offset = "0x6CCA10", VA = "0x6CCA10", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x6CCBC0", Offset = "0x6CCBC0", VA = "0x6CCBC0", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000E9B")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x6CCC30", Offset = "0x6CCC30", VA = "0x6CCC30", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x6CCD5C", Offset = "0x6CCD5C", VA = "0x6CCD5C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x6CCE88", Offset = "0x6CCE88", VA = "0x6CCE88")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000CD7")]
		None,
		[Token(Token = "0x4000CD8")]
		Proximity,
		[Token(Token = "0x4000CD9")]
		Contact,
		[Token(Token = "0x4000CDA")]
		Action
	}
	[Token(Token = "0x200024A")]
	public enum InteractableState
	{
		[Token(Token = "0x4000CDC")]
		Default,
		[Token(Token = "0x4000CDD")]
		ProximityState,
		[Token(Token = "0x4000CDE")]
		ContactState,
		[Token(Token = "0x4000CDF")]
		ActionState
	}
	[Token(Token = "0x200024B")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x6CCFC8", Offset = "0x6CCFC8", VA = "0x6CCFC8")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000152")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x6CCED4", Offset = "0x6CCED4", VA = "0x6CCED4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x6CCC90", Offset = "0x6CCC90", VA = "0x6CCC90")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x6CCDBC", Offset = "0x6CCDBC", VA = "0x6CCDBC")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x6CCF38", Offset = "0x6CCF38", VA = "0x6CCF38")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200024E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E458", Offset = "0x53E458")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000153")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EAE")]
				[Address(RVA = "0x8034CC", Offset = "0x8034CC", VA = "0x8034CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000154")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EB0")]
				[Address(RVA = "0x803514", Offset = "0x803514", VA = "0x803514", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x803030", Offset = "0x803030", VA = "0x803030")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x80305C", Offset = "0x80305C", VA = "0x80305C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x8030CC", Offset = "0x8030CC", VA = "0x8030CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x803078", Offset = "0x803078", VA = "0x803078")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x8034D4", Offset = "0x8034D4", VA = "0x8034D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x6CDCB4", Offset = "0x6CDCB4", VA = "0x6CDCB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x6CDD30", Offset = "0x6CDD30", VA = "0x6CDD30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x547A84", Offset = "0x547A84")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x6CDDB8", Offset = "0x6CDDB8", VA = "0x6CDDB8")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x6CDEA0", Offset = "0x6CDEA0", VA = "0x6CDEA0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000155")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x6CDEA8", Offset = "0x6CDEA8", VA = "0x6CDEA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x6CE024", Offset = "0x6CE024", VA = "0x6CE024")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x6CE0CC", Offset = "0x6CE0CC", VA = "0x6CE0CC")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x6CE174", Offset = "0x6CE174", VA = "0x6CE174")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x6CE420", Offset = "0x6CE420", VA = "0x6CE420")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x6CE468", Offset = "0x6CE468", VA = "0x6CE468")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x6CE6FC", Offset = "0x6CE6FC", VA = "0x6CE6FC")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x6CE848", Offset = "0x6CE848", VA = "0x6CE848")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000251")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E468", Offset = "0x53E468")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700015A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ECA")]
				[Address(RVA = "0x8003E4", Offset = "0x8003E4", VA = "0x8003E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ECC")]
				[Address(RVA = "0x80042C", Offset = "0x80042C", VA = "0x80042C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x7FFFD0", Offset = "0x7FFFD0", VA = "0x7FFFD0")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x7FFFFC", Offset = "0x7FFFFC", VA = "0x7FFFFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x800000", Offset = "0x800000", VA = "0x800000", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x8003EC", Offset = "0x8003EC", VA = "0x8003EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CF8")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000156")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x8D2CE0", Offset = "0x8D2CE0", VA = "0x8D2CE0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000157")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x8D2CE8", Offset = "0x8D2CE8", VA = "0x8D2CE8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000158")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x8D2CF0", Offset = "0x8D2CF0", VA = "0x8D2CF0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000159")]
		public override bool EnableState
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x8D2CF8", Offset = "0x8D2CF8", VA = "0x8D2CF8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x8D2D24", Offset = "0x8D2D24", VA = "0x8D2D24", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x8D2D60", Offset = "0x8D2D60", VA = "0x8D2D60", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x8D2E00", Offset = "0x8D2E00", VA = "0x8D2E00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x547B34", Offset = "0x547B34")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x8D2E6C", Offset = "0x8D2E6C", VA = "0x8D2E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x8D310C", Offset = "0x8D310C", VA = "0x8D310C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x8D3298", Offset = "0x8D3298", VA = "0x8D3298")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x8D3390", Offset = "0x8D3390", VA = "0x8D3390", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x8D3688", Offset = "0x8D3688", VA = "0x8D3688", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x8D368C", Offset = "0x8D368C", VA = "0x8D368C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x8D3690", Offset = "0x8D3690", VA = "0x8D3690")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542A60", Offset = "0x542A60")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542A70", Offset = "0x542A70")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542A80", Offset = "0x542A80")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700015C")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x8D36A8", Offset = "0x8D36A8", VA = "0x8D36A8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547BE4", Offset = "0x547BE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x8D36B0", Offset = "0x8D36B0", VA = "0x8D36B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547BF4", Offset = "0x547BF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public bool EnableState
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x8D36B8", Offset = "0x8D36B8", VA = "0x8D36B8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x8D36D4", Offset = "0x8D36D4", VA = "0x8D36D4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x8D36F4", Offset = "0x8D36F4", VA = "0x8D36F4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547C04", Offset = "0x547C04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x8D36FC", Offset = "0x8D36FC", VA = "0x8D36FC", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547C14", Offset = "0x547C14")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public float SphereRadius
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x8D3708", Offset = "0x8D3708", VA = "0x8D3708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547C24", Offset = "0x547C24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x8D3710", Offset = "0x8D3710", VA = "0x8D3710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547C34", Offset = "0x547C34")]
			private set
			{
			}
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x8D3718", Offset = "0x8D3718", VA = "0x8D3718")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x8D3760", Offset = "0x8D3760", VA = "0x8D3760", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x8D3764", Offset = "0x8D3764", VA = "0x8D3764")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000253")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000D0B")]
		None = 0,
		[Token(Token = "0x4000D0C")]
		Ray = 1,
		[Token(Token = "0x4000D0D")]
		Poke = 4,
		[Token(Token = "0x4000D0E")]
		All = -1
	}
	[Token(Token = "0x2000254")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000D10")]
		Inactive,
		[Token(Token = "0x4000D11")]
		PrimaryInputDown,
		[Token(Token = "0x4000D12")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000D13")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000255")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x6CCE90", Offset = "0x6CCE90", VA = "0x6CCE90")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000256")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542A90", Offset = "0x542A90")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542AA0", Offset = "0x542AA0")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542AB0", Offset = "0x542AB0")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000160")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x6CD068", Offset = "0x6CD068", VA = "0x6CD068")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x6CD070", Offset = "0x6CD070", VA = "0x6CD070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547C44", Offset = "0x547C44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x6CD078", Offset = "0x6CD078", VA = "0x6CD078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547C54", Offset = "0x547C54")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000EDC")]
			get;
		}

		[Token(Token = "0x17000163")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000EDD")]
			get;
		}

		[Token(Token = "0x17000164")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000EDE")]
			get;
		}

		[Token(Token = "0x17000165")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x6CD084", Offset = "0x6CD084", VA = "0x6CD084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547C64", Offset = "0x547C64")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x6CD090", Offset = "0x6CD090", VA = "0x6CD090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547C74", Offset = "0x547C74")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x6CD09C", Offset = "0x6CD09C", VA = "0x6CD09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547C84", Offset = "0x547C84")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x6CD0A8", Offset = "0x6CD0A8", VA = "0x6CD0A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547C94", Offset = "0x547C94")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000EE7")]
			get;
			[Token(Token = "0x6000EE8")]
			set;
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x6CD0B4", Offset = "0x6CD0B4", VA = "0x6CD0B4")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000EE4")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000EE5")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000EE6")]
		public abstract void DeFocus();

		[Token(Token = "0x6000EE9")]
		public abstract void Initialize();

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x6CD0BC", Offset = "0x6CD0BC", VA = "0x6CD0BC")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x6CD108", Offset = "0x6CD108", VA = "0x6CD108")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x6CD15C", Offset = "0x6CD15C", VA = "0x6CD15C", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x6CD3F0", Offset = "0x6CD3F0", VA = "0x6CD3F0", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x6CDB6C", Offset = "0x6CDB6C", VA = "0x6CDB6C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000168")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000EEF")]
			get;
		}

		[Token(Token = "0x17000169")]
		bool EnableState
		{
			[Token(Token = "0x6000EF1")]
			get;
			[Token(Token = "0x6000EF2")]
			set;
		}

		[Token(Token = "0x1700016A")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000EF3")]
			get;
			[Token(Token = "0x6000EF4")]
			set;
		}

		[Token(Token = "0x6000EF0")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000258")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000259")]
		private enum PinchState
		{
			[Token(Token = "0x4000D24")]
			None,
			[Token(Token = "0x4000D25")]
			PinchDown,
			[Token(Token = "0x4000D26")]
			PinchStay,
			[Token(Token = "0x4000D27")]
			PinchUp
		}

		[Token(Token = "0x4000D20")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700016B")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x999564", Offset = "0x999564", VA = "0x999564")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016C")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x9995EC", Offset = "0x9995EC", VA = "0x9995EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016D")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x999674", Offset = "0x999674", VA = "0x999674")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x9996FC", Offset = "0x9996FC", VA = "0x9996FC")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x999728", Offset = "0x999728", VA = "0x999728")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000D28")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000D29")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000D2A")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000D2B")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000D2C")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x542AD0", Offset = "0x542AD0")]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700016E")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x902FA0", Offset = "0x902FA0", VA = "0x902FA0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700016F")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x902FA8", Offset = "0x902FA8", VA = "0x902FA8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000170")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x90301C", Offset = "0x90301C", VA = "0x90301C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000171")]
		public override bool EnableState
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x903024", Offset = "0x903024", VA = "0x903024", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x903068", Offset = "0x903068", VA = "0x903068", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x9030DC", Offset = "0x9030DC", VA = "0x9030DC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x90313C", Offset = "0x90313C", VA = "0x90313C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x9031E0", Offset = "0x9031E0", VA = "0x9031E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x9034A4", Offset = "0x9034A4", VA = "0x9034A4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x90352C", Offset = "0x90352C", VA = "0x90352C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x9038D4", Offset = "0x9038D4", VA = "0x9038D4")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x9039E4", Offset = "0x9039E4", VA = "0x9039E4")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x903B08", Offset = "0x903B08", VA = "0x903B08")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x903E0C", Offset = "0x903E0C", VA = "0x903E0C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x9041A0", Offset = "0x9041A0", VA = "0x9041A0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x904270", Offset = "0x904270", VA = "0x904270", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x9042A4", Offset = "0x9042A4", VA = "0x9042A4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000D38")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000D39")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542B44", Offset = "0x542B44")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000172")]
		public bool EnableState
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x90304C", Offset = "0x90304C", VA = "0x90304C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x903084", Offset = "0x903084", VA = "0x903084", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x90436C", Offset = "0x90436C", VA = "0x90436C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x903468", Offset = "0x903468", VA = "0x903468", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x9045B0", Offset = "0x9045B0", VA = "0x9045B0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547CA4", Offset = "0x547CA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x9045B8", Offset = "0x9045B8", VA = "0x9045B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547CB4", Offset = "0x547CB4")]
			set
			{
			}
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x904374", Offset = "0x904374", VA = "0x904374")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x9041D4", Offset = "0x9041D4", VA = "0x9041D4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x9045C0", Offset = "0x9045C0", VA = "0x9045C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x904834", Offset = "0x904834", VA = "0x904834")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x904924", Offset = "0x904924", VA = "0x904924")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000175")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x8CF598", Offset = "0x8CF598", VA = "0x8CF598")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x8CF5A0", Offset = "0x8CF5A0", VA = "0x8CF5A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x8CF628", Offset = "0x8CF628", VA = "0x8CF628")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x8CF630", Offset = "0x8CF630", VA = "0x8CF630")]
			set
			{
			}
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x8CF69C", Offset = "0x8CF69C", VA = "0x8CF69C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x8CF950", Offset = "0x8CF950", VA = "0x8CF950")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x8CF960", Offset = "0x8CF960", VA = "0x8CF960")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x8CF970", Offset = "0x8CF970", VA = "0x8CF970")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x8C3C90", Offset = "0x8C3C90", VA = "0x8C3C90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x8C3C94", Offset = "0x8C3C94", VA = "0x8C3C94")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x8C3CCC", Offset = "0x8C3CCC", VA = "0x8C3CCC")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x8C3D04", Offset = "0x8C3D04", VA = "0x8C3D04")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x8C3D3C", Offset = "0x8C3D3C", VA = "0x8C3D3C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x8C3D74", Offset = "0x8C3D74", VA = "0x8C3D74")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x8C3DAC", Offset = "0x8C3DAC", VA = "0x8C3DAC")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x8C3DE4", Offset = "0x8C3DE4", VA = "0x8C3DE4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x8C3E58", Offset = "0x8C3E58", VA = "0x8C3E58")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x8C3EC8", Offset = "0x8C3EC8", VA = "0x8C3EC8")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x8C3ED0", Offset = "0x8C3ED0", VA = "0x8C3ED0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x8C3ED4", Offset = "0x8C3ED4", VA = "0x8C3ED4")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x8C3E8C", Offset = "0x8C3E8C", VA = "0x8C3E8C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x8C3F14", Offset = "0x8C3F14", VA = "0x8C3F14")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E488", Offset = "0x53E488")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000177")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F34")]
				[Address(RVA = "0x1271200", Offset = "0x1271200", VA = "0x1271200", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000178")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F36")]
				[Address(RVA = "0x1271248", Offset = "0x1271248", VA = "0x1271248", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x1271024", Offset = "0x1271024", VA = "0x1271024")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x1271050", Offset = "0x1271050", VA = "0x1271050", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x1271054", Offset = "0x1271054", VA = "0x1271054", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x1271208", Offset = "0x1271208", VA = "0x1271208", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D49")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000D4A")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x995664", Offset = "0x995664", VA = "0x995664")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x995704", Offset = "0x995704", VA = "0x995704")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x995938", Offset = "0x995938", VA = "0x995938")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x9958CC", Offset = "0x9958CC", VA = "0x9958CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x547CC4", Offset = "0x547CC4")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x995984", Offset = "0x995984", VA = "0x995984")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000262")]
		public enum SelectionState
		{
			[Token(Token = "0x4000D60")]
			Off,
			[Token(Token = "0x4000D61")]
			Selected,
			[Token(Token = "0x4000D62")]
			Highlighted
		}

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000179")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x90C00C", Offset = "0x90C00C", VA = "0x90C00C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x90C014", Offset = "0x90C014", VA = "0x90C014")]
			set
			{
			}
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x90C198", Offset = "0x90C198", VA = "0x90C198")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x90C360", Offset = "0x90C360", VA = "0x90C360")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x90C09C", Offset = "0x90C09C", VA = "0x90C09C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x90C44C", Offset = "0x90C44C", VA = "0x90C44C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000264")]
		public enum SegmentType
		{
			[Token(Token = "0x4000D71")]
			Straight,
			[Token(Token = "0x4000D72")]
			LeftTurn,
			[Token(Token = "0x4000D73")]
			RightTurn,
			[Token(Token = "0x4000D74")]
			Switch
		}

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000D69")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000D6A")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542C24", Offset = "0x542C24")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700017A")]
		public float StartDistance
		{
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x86DEA4", Offset = "0x86DEA4", VA = "0x86DEA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547D74", Offset = "0x547D74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x86DEAC", Offset = "0x86DEAC", VA = "0x86DEAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547D84", Offset = "0x547D84")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public float GridSize
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x86DEB4", Offset = "0x86DEB4", VA = "0x86DEB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x86DEBC", Offset = "0x86DEBC", VA = "0x86DEBC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public int SubDivCount
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x86DEC4", Offset = "0x86DEC4", VA = "0x86DEC4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x86DECC", Offset = "0x86DECC", VA = "0x86DECC")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public SegmentType Type
		{
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x86DED4", Offset = "0x86DED4", VA = "0x86DED4")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700017E")]
		public Pose EndPose
		{
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0x86DEDC", Offset = "0x86DEDC", VA = "0x86DEDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		public float Radius
		{
			[Token(Token = "0x6000F46")]
			[Address(RVA = "0x86E238", Offset = "0x86E238", VA = "0x86E238")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000180")]
		public float SegmentLength
		{
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x86DF44", Offset = "0x86DF44", VA = "0x86DF44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x86E248", Offset = "0x86E248", VA = "0x86E248")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x86E260", Offset = "0x86E260", VA = "0x86E260")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x86DF84", Offset = "0x86DF84", VA = "0x86DF84")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x86E264", Offset = "0x86E264", VA = "0x86E264")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x86E268", Offset = "0x86E268", VA = "0x86E268")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x86E2D0", Offset = "0x86E2D0", VA = "0x86E2D0")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x86EB98", Offset = "0x86EB98", VA = "0x86EB98")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x86EE24", Offset = "0x86EE24", VA = "0x86EE24")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000266")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E498", Offset = "0x53E498")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000181")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F5E")]
				[Address(RVA = "0x12753FC", Offset = "0x12753FC", VA = "0x12753FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000182")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F60")]
				[Address(RVA = "0x1275444", Offset = "0x1275444", VA = "0x1275444", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x1275268", Offset = "0x1275268", VA = "0x1275268")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x1275294", Offset = "0x1275294", VA = "0x1275294", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1275298", Offset = "0x1275298", VA = "0x1275298", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x1275404", Offset = "0x1275404", VA = "0x1275404", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D75")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000D76")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x86EED0", Offset = "0x86EED0", VA = "0x86EED0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x86EF78", Offset = "0x86EF78", VA = "0x86EF78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x86F028", Offset = "0x86F028", VA = "0x86F028")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x86F1A0", Offset = "0x86F1A0", VA = "0x86F1A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x86F368", Offset = "0x86F368", VA = "0x86F368")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x86F450", Offset = "0x86F450", VA = "0x86F450")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x86F654", Offset = "0x86F654", VA = "0x86F654")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x86F564", Offset = "0x86F564", VA = "0x86F564")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x86F578", Offset = "0x86F578", VA = "0x86F578")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x86F6AC", Offset = "0x86F6AC", VA = "0x86F6AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x547D94", Offset = "0x547D94")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x86F718", Offset = "0x86F718", VA = "0x86F718")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000183")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x86F7C8", Offset = "0x86F7C8", VA = "0x86F7C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x86F7D8", Offset = "0x86F7D8", VA = "0x86F7D8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x86F7E0", Offset = "0x86F7E0", VA = "0x86F7E0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x86FB24", Offset = "0x86FB24", VA = "0x86FB24")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000D8E")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000D8F")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542D24", Offset = "0x542D24")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000184")]
		public float Distance
		{
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x86FC1C", Offset = "0x86FC1C", VA = "0x86FC1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547E44", Offset = "0x547E44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x86FC24", Offset = "0x86FC24", VA = "0x86FC24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547E54", Offset = "0x547E54")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public float Scale
		{
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x86FC2C", Offset = "0x86FC2C", VA = "0x86FC2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x86FC34", Offset = "0x86FC34", VA = "0x86FC34")]
			set
			{
			}
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x86F7DC", Offset = "0x86F7DC", VA = "0x86F7DC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x86FC3C", Offset = "0x86FC3C", VA = "0x86FC3C")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x86F828", Offset = "0x86F828", VA = "0x86F828")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x86FA4C", Offset = "0x86FA4C", VA = "0x86FA4C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000F6D")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x86FB90", Offset = "0x86FB90", VA = "0x86FB90")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200026A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E4A8", Offset = "0x53E4A8")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000186")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F7C")]
				[Address(RVA = "0x12756A4", Offset = "0x12756A4", VA = "0x12756A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000187")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F7E")]
				[Address(RVA = "0x12756EC", Offset = "0x12756EC", VA = "0x12756EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x127544C", Offset = "0x127544C", VA = "0x127544C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x1275478", Offset = "0x1275478", VA = "0x1275478", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x127547C", Offset = "0x127547C", VA = "0x127547C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x12756AC", Offset = "0x12756AC", VA = "0x12756AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x86FDDC", Offset = "0x86FDDC", VA = "0x86FDDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x86FE28", Offset = "0x86FE28", VA = "0x86FE28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x86FF30", Offset = "0x86FF30", VA = "0x86FF30")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x870090", Offset = "0x870090", VA = "0x870090")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x86FF8C", Offset = "0x86FF8C", VA = "0x86FF8C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x87016C", Offset = "0x87016C", VA = "0x87016C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x547E64", Offset = "0x547E64")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x8701E8", Offset = "0x8701E8", VA = "0x8701E8")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x870294", Offset = "0x870294", VA = "0x870294")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x8702F4", Offset = "0x8702F4", VA = "0x8702F4")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200026C")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000DCC")]
			Start,
			[Token(Token = "0x4000DCD")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000DCE")]
			Stop
		}

		[Token(Token = "0x200026D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E4B8", Offset = "0x53E4B8")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000188")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F91")]
				[Address(RVA = "0x127594C", Offset = "0x127594C", VA = "0x127594C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000189")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F93")]
				[Address(RVA = "0x1275994", Offset = "0x1275994", VA = "0x1275994", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0x12756F4", Offset = "0x12756F4", VA = "0x12756F4")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0x1275720", Offset = "0x1275720", VA = "0x1275720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F90")]
			[Address(RVA = "0x1275724", Offset = "0x1275724", VA = "0x1275724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x1275954", Offset = "0x1275954", VA = "0x1275954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DAE")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000DAF")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000DB0")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000DB1")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x542D84", Offset = "0x542D84")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x870350", Offset = "0x870350", VA = "0x870350")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x8704A4", Offset = "0x8704A4", VA = "0x8704A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x8704B0", Offset = "0x8704B0", VA = "0x8704B0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x870600", Offset = "0x870600", VA = "0x870600")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x870424", Offset = "0x870424", VA = "0x870424")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x547F14", Offset = "0x547F14")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x87064C", Offset = "0x87064C", VA = "0x87064C")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x87059C", Offset = "0x87059C", VA = "0x87059C")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x870868", Offset = "0x870868", VA = "0x870868")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x8709A4", Offset = "0x8709A4", VA = "0x8709A4")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x8708D4", Offset = "0x8708D4", VA = "0x8708D4")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x870A10", Offset = "0x870A10", VA = "0x870A10")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x870A30", Offset = "0x870A30", VA = "0x870A30")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x870ABC", Offset = "0x870ABC", VA = "0x870ABC")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x870B74", Offset = "0x870B74", VA = "0x870B74")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x870B84", Offset = "0x870B84", VA = "0x870B84")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700018A")]
		public float TrackLength
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x870BEC", Offset = "0x870BEC", VA = "0x870BEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x870BF4", Offset = "0x870BF4", VA = "0x870BF4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x870BFC", Offset = "0x870BFC", VA = "0x870BFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x86FCBC", Offset = "0x86FCBC", VA = "0x86FCBC")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x870C00", Offset = "0x870C00", VA = "0x870C00")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x870E00", Offset = "0x870E00", VA = "0x870E00")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x870EFC", Offset = "0x870EFC", VA = "0x870EFC")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class Pose
	{
		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x8FFD50", Offset = "0x8FFD50", VA = "0x8FFD50")]
		public Pose()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x8FFD94", Offset = "0x8FFD94", VA = "0x8FFD94")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000271")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E4C8", Offset = "0x53E4C8")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700018C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FA9")]
				[Address(RVA = "0x12761D0", Offset = "0x12761D0", VA = "0x12761D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FAB")]
				[Address(RVA = "0x1276218", Offset = "0x1276218", VA = "0x1276218", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x1276028", Offset = "0x1276028", VA = "0x1276028")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x1276054", Offset = "0x1276054", VA = "0x1276054", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x1276058", Offset = "0x1276058", VA = "0x1276058", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x12761D8", Offset = "0x12761D8", VA = "0x12761D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000272")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E4D8", Offset = "0x53E4D8")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700018E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FAF")]
				[Address(RVA = "0x127631C", Offset = "0x127631C", VA = "0x127631C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FB1")]
				[Address(RVA = "0x1276364", Offset = "0x1276364", VA = "0x1276364", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x1276220", Offset = "0x1276220", VA = "0x1276220")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x127624C", Offset = "0x127624C", VA = "0x127624C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x1276250", Offset = "0x1276250", VA = "0x1276250", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x1276324", Offset = "0x1276324", VA = "0x1276324", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DE1")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x542F6C", Offset = "0x542F6C")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700018B")]
		public bool IsMoving
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x7F9490", Offset = "0x7F9490", VA = "0x7F9490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547FC4", Offset = "0x547FC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x7F9498", Offset = "0x7F9498", VA = "0x7F9498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x547FD4", Offset = "0x547FD4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x7F94A4", Offset = "0x7F94A4", VA = "0x7F94A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x7F94E0", Offset = "0x7F94E0", VA = "0x7F94E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x7F95C4", Offset = "0x7F95C4", VA = "0x7F95C4")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x7F962C", Offset = "0x7F962C", VA = "0x7F962C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x547FE4", Offset = "0x547FE4")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x7F96A8", Offset = "0x7F96A8", VA = "0x7F96A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x548044", Offset = "0x548044")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x7F9738", Offset = "0x7F9738", VA = "0x7F9738")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x7F97A4", Offset = "0x7F97A4", VA = "0x7F97A4")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x7F97AC", Offset = "0x7F97AC", VA = "0x7F97AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x7F9810", Offset = "0x7F9810", VA = "0x7F9810")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x7F98F4", Offset = "0x7F98F4", VA = "0x7F98F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x7F9A2C", Offset = "0x7F9A2C", VA = "0x7F9A2C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x7F9AA8", Offset = "0x7F9AA8", VA = "0x7F9AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x7F9B84", Offset = "0x7F9B84", VA = "0x7F9B84")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000DFE")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000DFF")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000E00")]
		EUDT_None,
		[Token(Token = "0x4000E01")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000275")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000276")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E4E8", Offset = "0x53E4E8")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000190")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FCB")]
				[Address(RVA = "0x808468", Offset = "0x808468", VA = "0x808468", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000191")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FCD")]
				[Address(RVA = "0x8084B0", Offset = "0x8084B0", VA = "0x8084B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x808254", Offset = "0x808254", VA = "0x808254")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x808280", Offset = "0x808280", VA = "0x808280", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x808284", Offset = "0x808284", VA = "0x808284", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x808470", Offset = "0x808470", VA = "0x808470", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000E03")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000E04")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000E05")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542FAC", Offset = "0x542FAC")]
		public GameObject mainCamera;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542FE4", Offset = "0x542FE4")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xB7CEF4", Offset = "0xB7CEF4", VA = "0xB7CEF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xB7D71C", Offset = "0xB7D71C", VA = "0xB7D71C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xB7D864", Offset = "0xB7D864", VA = "0xB7D864")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xB7D994", Offset = "0xB7D994", VA = "0xB7D994")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xB7DAC4", Offset = "0xB7DAC4", VA = "0xB7DAC4")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xB7D838", Offset = "0xB7D838", VA = "0xB7D838")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xB7DBA4", Offset = "0xB7DBA4", VA = "0xB7DBA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x548144", Offset = "0x548144")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xB7DC10", Offset = "0xB7DC10", VA = "0xB7DC10")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xB7D334", Offset = "0xB7D334", VA = "0xB7D334")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xB7DD64", Offset = "0xB7DD64", VA = "0xB7DD64")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xB7DC44", Offset = "0xB7DC44", VA = "0xB7DC44")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xB7E07C", Offset = "0xB7E07C", VA = "0xB7E07C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xB7E16C", Offset = "0xB7E16C", VA = "0xB7E16C")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xB7E1F0", Offset = "0xB7E1F0", VA = "0xB7E1F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5481A4", Offset = "0x5481A4")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xB7E248", Offset = "0xB7E248", VA = "0xB7E248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5481B4", Offset = "0x5481B4")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xB7E2A0", Offset = "0xB7E2A0", VA = "0xB7E2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5481C4", Offset = "0x5481C4")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x53E4F8", Offset = "0x53E4F8")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E558", Offset = "0x53E558")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x802B60", Offset = "0x802B60", VA = "0x802B60")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x802B68", Offset = "0x802B68", VA = "0x802B68")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E1D")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000E1E")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000E1F")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000E20")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000E21")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000E22")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000E23")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000E24")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000E25")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000E26")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000E27")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x6C5AB0", Offset = "0x6C5AB0", VA = "0x6C5AB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x6C5B04", Offset = "0x6C5B04", VA = "0x6C5B04")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x6C5F78", Offset = "0x6C5F78", VA = "0x6C5F78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x6C6064", Offset = "0x6C6064", VA = "0x6C6064")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x6C61C8", Offset = "0x6C61C8", VA = "0x6C61C8")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x6C64D0", Offset = "0x6C64D0", VA = "0x6C64D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x6C65C8", Offset = "0x6C65C8", VA = "0x6C65C8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x6C6728", Offset = "0x6C6728", VA = "0x6C6728")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x6C6260", Offset = "0x6C6260", VA = "0x6C6260")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x6C62B4", Offset = "0x6C62B4", VA = "0x6C62B4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x6C5E1C", Offset = "0x6C5E1C", VA = "0x6C5E1C")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x6C6864", Offset = "0x6C6864", VA = "0x6C6864")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000E3C")]
		Default,
		[Token(Token = "0x4000E3D")]
		Generic,
		[Token(Token = "0x4000E3E")]
		PingPongBall,
		[Token(Token = "0x4000E3F")]
		Controller
	}
	[Token(Token = "0x200027A")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000192")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x6CAC58", Offset = "0x6CAC58", VA = "0x6CAC58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000193")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x6CAC60", Offset = "0x6CAC60", VA = "0x6CAC60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000194")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x6CAC68", Offset = "0x6CAC68", VA = "0x6CAC68")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x6CAC70", Offset = "0x6CAC70", VA = "0x6CAC70")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x86DB14", Offset = "0x86DB14", VA = "0x86DB14")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x86DDFC", Offset = "0x86DDFC", VA = "0x86DDFC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x86DE58", Offset = "0x86DE58", VA = "0x86DE58")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x86DE9C", Offset = "0x86DE9C", VA = "0x86DE9C")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Voice.Demo.UIShapesDemo
{
	[Token(Token = "0x200027C")]
	public class InteractionHandler : MonoBehaviour
	{
		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54309C", Offset = "0x54309C")]
		private string freshStateText;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5430F8", Offset = "0x5430F8")]
		[SerializeField]
		private Text textArea;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showJson;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x543154", Offset = "0x543154")]
		[SerializeField]
		private AppVoiceExperience appVoiceExperience;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string pendingText;

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x6CE910", Offset = "0x6CE910", VA = "0x6CE910")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x6CE9DC", Offset = "0x6CE9DC", VA = "0x6CE9DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x6CEAA8", Offset = "0x6CEAA8", VA = "0x6CEAA8")]
		private void OnRequestStarted(WitRequest r)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x6CEB50", Offset = "0x6CEB50", VA = "0x6CEB50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x6CEB94", Offset = "0x6CEB94", VA = "0x6CEB94")]
		public void OnResponse(WitResponseNode response)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x6CEC84", Offset = "0x6CEC84", VA = "0x6CEC84")]
		public void OnError(string error, string message)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x6CEE44", Offset = "0x6CEE44", VA = "0x6CEE44")]
		public void ToggleActivation()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x6CEEA4", Offset = "0x6CEEA4", VA = "0x6CEEA4")]
		public InteractionHandler()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x6CEEF8", Offset = "0x6CEEF8", VA = "0x6CEEF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x548224", Offset = "0x548224")]
		private void <OnRequestStarted>b__7_0(string response)
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x93C848", Offset = "0x93C848", VA = "0x93C848")]
		public void UpdateColor(WitResponseNode commandResult)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x93CAC8", Offset = "0x93CAC8", VA = "0x93CAC8")]
		public void UpdateColor(string[] results)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x93C8DC", Offset = "0x93C8DC", VA = "0x93C8DC")]
		public void UpdateColor(string colorName, string shape)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x93CB04", Offset = "0x93CB04", VA = "0x93CB04")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x200027E")]
	[ExecuteAlways]
	public class Instructions : MonoBehaviour
	{
		[Token(Token = "0x200027F")]
		internal enum Step
		{
			[Token(Token = "0x4000E4F")]
			SetupWit,
			[Token(Token = "0x4000E50")]
			MissingServerToken,
			[Token(Token = "0x4000E51")]
			MissingClientToken,
			[Token(Token = "0x4000E52")]
			AddConfig,
			[Token(Token = "0x4000E53")]
			AddVoiceExperiences,
			[Token(Token = "0x4000E54")]
			SetConfig,
			[Token(Token = "0x4000E55")]
			Ready
		}

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] steps;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text instructionText;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Step currentStep;

		[Token(Token = "0x17000195")]
		internal Step CurrentStep
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x6CC3F8", Offset = "0x6CC3F8", VA = "0x6CC3F8")]
			get
			{
				return default(Step);
			}
		}

		[Token(Token = "0x17000196")]
		internal string CurrentStepText
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x6CC400", Offset = "0x6CC400", VA = "0x6CC400")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x6CC494", Offset = "0x6CC494", VA = "0x6CC494")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x6CC49C", Offset = "0x6CC49C", VA = "0x6CC49C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x6CC4A0", Offset = "0x6CC4A0", VA = "0x6CC4A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x6CC498", Offset = "0x6CC498", VA = "0x6CC498")]
		private void UpdateStep()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x6CC4A4", Offset = "0x6CC4A4", VA = "0x6CC4A4")]
		public Instructions()
		{
		}
	}
}
namespace Oculus.Voice.Demo.BuiltInDemo
{
	[Token(Token = "0x2000280")]
	public class TimerController : MonoBehaviour
	{
		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _timerExist;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _timerRunning;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5431B0", Offset = "0x5431B0")]
		public Text logText;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5431E8", Offset = "0x5431E8")]
		public AudioClip buzzSound;

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x86D188", Offset = "0x86D188", VA = "0x86D188")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x86D258", Offset = "0x86D258", VA = "0x86D258")]
		private void Log(string msg)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x86D1EC", Offset = "0x86D1EC", VA = "0x86D1EC")]
		private void OnElapsedTime()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x86D2E8", Offset = "0x86D2E8", VA = "0x86D2E8")]
		public void DeleteTimer()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x86D35C", Offset = "0x86D35C", VA = "0x86D35C")]
		public void CreateTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x86D6E8", Offset = "0x86D6E8", VA = "0x86D6E8")]
		public void GetTimerIntent()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x86D798", Offset = "0x86D798", VA = "0x86D798")]
		public void PauseTimer()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x86D7E8", Offset = "0x86D7E8", VA = "0x86D7E8")]
		public void ResumeTimer()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x86D83C", Offset = "0x86D83C", VA = "0x86D83C")]
		public void SubtractTimeTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x86D954", Offset = "0x86D954", VA = "0x86D954")]
		public void AddTimeToTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x86DA60", Offset = "0x86DA60", VA = "0x86DA60")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x86D710", Offset = "0x86D710", VA = "0x86D710")]
		public string GetFormattedTimeFromSeconds()
		{
			return null;
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x86D574", Offset = "0x86D574", VA = "0x86D574")]
		private bool ParseTime(string[] entityValues, out float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x86DA68", Offset = "0x86DA68", VA = "0x86DA68")]
		public TimerController()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class TimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimerController timer;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _uiText;

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x86DA70", Offset = "0x86DA70", VA = "0x86DA70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x86DAC4", Offset = "0x86DAC4", VA = "0x86DAC4")]
		private void Update()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x86DB0C", Offset = "0x86DB0C", VA = "0x86DB0C")]
		public TimerDisplay()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class WitActivation : MonoBehaviour
	{
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppVoiceExperience voiceExperience;

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x7F9B94", Offset = "0x7F9B94", VA = "0x7F9B94")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x7F9C28", Offset = "0x7F9C28", VA = "0x7F9C28")]
		private void Start()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x7F9C7C", Offset = "0x7F9C7C", VA = "0x7F9C7C")]
		private void Update()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x7F9D00", Offset = "0x7F9D00", VA = "0x7F9D00")]
		public void ActivateWit()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x7F9D24", Offset = "0x7F9D24", VA = "0x7F9D24")]
		public WitActivation()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000283")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000E5E")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000E5F")]
		public const string Tab = "    ";

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x92B9DC", Offset = "0x92B9DC", VA = "0x92B9DC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x548234", Offset = "0x548234")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x548234", Offset = "0x548234")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x92BA6C", Offset = "0x92BA6C", VA = "0x92BA6C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x548294", Offset = "0x548294")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x548294", Offset = "0x548294")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x92BB0C", Offset = "0x92BB0C", VA = "0x92BB0C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5482F4", Offset = "0x5482F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5482F4", Offset = "0x5482F4")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x92BB9C", Offset = "0x92BB9C", VA = "0x92BB9C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x548354", Offset = "0x548354")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x548354", Offset = "0x548354")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x92BC2C", Offset = "0x92BC2C", VA = "0x92BC2C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5483B4", Offset = "0x5483B4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5483B4", Offset = "0x5483B4")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class CAPI
	{
		[Token(Token = "0x2000285")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000286")]
		public enum Result
		{
			[Token(Token = "0x4000E6B")]
			Success = 0,
			[Token(Token = "0x4000E6C")]
			Failure = -1000,
			[Token(Token = "0x4000E6D")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000E6E")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000E6F")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000E70")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000E71")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000E72")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000E73")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000287")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x7FDAE4", Offset = "0x7FDAE4", VA = "0x7FDAE4")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000E60")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000E68")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001015")]
		[Address(RVA = "0x932038", Offset = "0x932038", VA = "0x932038")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x9320C8", Offset = "0x9320C8", VA = "0x9320C8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x9322E0", Offset = "0x9322E0", VA = "0x9322E0")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001018")]
		[Address(RVA = "0x9323C8", Offset = "0x9323C8", VA = "0x9323C8")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001019")]
		[Address(RVA = "0x932438", Offset = "0x932438", VA = "0x932438")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x600101A")]
		[Address(RVA = "0x9324AC", Offset = "0x9324AC", VA = "0x9324AC")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x93252C", Offset = "0x93252C", VA = "0x93252C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x600101C")]
		[Address(RVA = "0x932670", Offset = "0x932670", VA = "0x932670")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x9326F0", Offset = "0x9326F0", VA = "0x9326F0")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x600101E")]
		[Address(RVA = "0x932834", Offset = "0x932834", VA = "0x932834")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600101F")]
		[Address(RVA = "0x9328B4", Offset = "0x9328B4", VA = "0x9328B4")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001020")]
		[Address(RVA = "0x932934", Offset = "0x932934", VA = "0x932934")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001021")]
		[Address(RVA = "0x9329B4", Offset = "0x9329B4", VA = "0x9329B4")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001022")]
		[Address(RVA = "0x932A34", Offset = "0x932A34", VA = "0x932A34")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001023")]
		[Address(RVA = "0x932AC4", Offset = "0x932AC4", VA = "0x932AC4")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001024")]
		[Address(RVA = "0x932B54", Offset = "0x932B54", VA = "0x932B54")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x932BE4", Offset = "0x932BE4", VA = "0x932BE4")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001026")]
		[Address(RVA = "0x932C64", Offset = "0x932C64", VA = "0x932C64")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001027")]
		[Address(RVA = "0x932CE4", Offset = "0x932CE4", VA = "0x932CE4")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001028")]
		[Address(RVA = "0x932D74", Offset = "0x932D74", VA = "0x932D74")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001029")]
		[Address(RVA = "0x932E04", Offset = "0x932E04", VA = "0x932E04")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x600102A")]
		[Address(RVA = "0x932E94", Offset = "0x932E94", VA = "0x932E94")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600102B")]
		[Address(RVA = "0x932F14", Offset = "0x932F14", VA = "0x932F14")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x932FB4", Offset = "0x932FB4", VA = "0x932FB4")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600102D")]
		[Address(RVA = "0x933030", Offset = "0x933030", VA = "0x933030")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x600102E")]
		[Address(RVA = "0x9330D0", Offset = "0x9330D0", VA = "0x9330D0")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x600102F")]
		[Address(RVA = "0x933190", Offset = "0x933190", VA = "0x933190")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001030")]
		[Address(RVA = "0x933260", Offset = "0x933260", VA = "0x933260")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001031")]
		[Address(RVA = "0x9332F0", Offset = "0x9332F0", VA = "0x9332F0")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001032")]
		[Address(RVA = "0x933380", Offset = "0x933380", VA = "0x933380")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001033")]
		[Address(RVA = "0x933410", Offset = "0x933410", VA = "0x933410")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001034")]
		[Address(RVA = "0x9334A0", Offset = "0x9334A0", VA = "0x9334A0")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001035")]
		[Address(RVA = "0x933530", Offset = "0x933530", VA = "0x933530")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x9335B0", Offset = "0x9335B0", VA = "0x9335B0")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x9336CC", Offset = "0x9336CC", VA = "0x9336CC")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001038")]
		[Address(RVA = "0x93363C", Offset = "0x93363C", VA = "0x93363C")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x9338E0", Offset = "0x9338E0", VA = "0x9338E0")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600103A")]
		[Address(RVA = "0x933A50", Offset = "0x933A50", VA = "0x933A50")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x600103B")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x933AD0", Offset = "0x933AD0", VA = "0x933AD0")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600103D")]
		[Address(RVA = "0x933D78", Offset = "0x933D78", VA = "0x933D78")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x933DF8", Offset = "0x933DF8", VA = "0x933DF8")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600103F")]
		[Address(RVA = "0x933F68", Offset = "0x933F68", VA = "0x933F68")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x933FE8", Offset = "0x933FE8", VA = "0x933FE8")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001041")]
		[Address(RVA = "0x934158", Offset = "0x934158", VA = "0x934158")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x9341D8", Offset = "0x9341D8", VA = "0x9341D8")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001043")]
		[Address(RVA = "0x934348", Offset = "0x934348", VA = "0x934348")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x9343C8", Offset = "0x9343C8", VA = "0x9343C8")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001045")]
		[Address(RVA = "0x934538", Offset = "0x934538", VA = "0x934538")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001046")]
		[Address(RVA = "0x9345B8", Offset = "0x9345B8", VA = "0x9345B8")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001047")]
		[Address(RVA = "0x934638", Offset = "0x934638", VA = "0x934638")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001048")]
		[Address(RVA = "0x9346D0", Offset = "0x9346D0", VA = "0x9346D0")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x934750", Offset = "0x934750", VA = "0x934750")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x934928", Offset = "0x934928", VA = "0x934928")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x600104B")]
		[Address(RVA = "0x934A80", Offset = "0x934A80", VA = "0x934A80")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600104C")]
		[Address(RVA = "0x9348A8", Offset = "0x9348A8", VA = "0x9348A8")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600104D")]
		[Address(RVA = "0x934B00", Offset = "0x934B00", VA = "0x934B00")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600104E")]
		[Address(RVA = "0x934B80", Offset = "0x934B80", VA = "0x934B80")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600104F")]
		[Address(RVA = "0x934C10", Offset = "0x934C10", VA = "0x934C10")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001050")]
		[Address(RVA = "0x934C90", Offset = "0x934C90", VA = "0x934C90")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001051")]
		[Address(RVA = "0x934D20", Offset = "0x934D20", VA = "0x934D20")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001052")]
		[Address(RVA = "0x934DA0", Offset = "0x934DA0", VA = "0x934DA0")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x934E20", Offset = "0x934E20", VA = "0x934E20")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001054")]
		[Address(RVA = "0x9350AC", Offset = "0x9350AC", VA = "0x9350AC")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x93513C", Offset = "0x93513C", VA = "0x93513C")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001056")]
		[Address(RVA = "0x93536C", Offset = "0x93536C", VA = "0x93536C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x935404", Offset = "0x935404", VA = "0x935404")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001058")]
		[Address(RVA = "0x935554", Offset = "0x935554", VA = "0x935554")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001059")]
		[Address(RVA = "0x9355D4", Offset = "0x9355D4", VA = "0x9355D4")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x935654", Offset = "0x935654", VA = "0x935654")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x600105B")]
		[Address(RVA = "0x9357A8", Offset = "0x9357A8", VA = "0x9357A8")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x935828", Offset = "0x935828", VA = "0x935828")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x600105D")]
		[Address(RVA = "0x93597C", Offset = "0x93597C", VA = "0x93597C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600105E")]
		[Address(RVA = "0x9359FC", Offset = "0x9359FC", VA = "0x9359FC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600105F")]
		[Address(RVA = "0x935A8C", Offset = "0x935A8C", VA = "0x935A8C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001060")]
		[Address(RVA = "0x935B1C", Offset = "0x935B1C", VA = "0x935B1C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001061")]
		[Address(RVA = "0x935BAC", Offset = "0x935BAC", VA = "0x935BAC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001062")]
		[Address(RVA = "0x935C2C", Offset = "0x935C2C", VA = "0x935C2C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001063")]
		[Address(RVA = "0x935CB4", Offset = "0x935CB4", VA = "0x935CB4")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001064")]
		[Address(RVA = "0x935D3C", Offset = "0x935D3C", VA = "0x935D3C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001065")]
		[Address(RVA = "0x935DBC", Offset = "0x935DBC", VA = "0x935DBC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001066")]
		[Address(RVA = "0x935E3C", Offset = "0x935E3C", VA = "0x935E3C")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001067")]
		[Address(RVA = "0x935EF0", Offset = "0x935EF0", VA = "0x935EF0")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001068")]
		[Address(RVA = "0x935F80", Offset = "0x935F80", VA = "0x935F80")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001069")]
		[Address(RVA = "0x936010", Offset = "0x936010", VA = "0x936010")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600106A")]
		[Address(RVA = "0x936090", Offset = "0x936090", VA = "0x936090")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600106B")]
		[Address(RVA = "0x936110", Offset = "0x936110", VA = "0x936110")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600106C")]
		[Address(RVA = "0x936190", Offset = "0x936190", VA = "0x936190")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600106D")]
		[Address(RVA = "0x936228", Offset = "0x936228", VA = "0x936228")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x600106E")]
		[Address(RVA = "0x9362B8", Offset = "0x9362B8", VA = "0x9362B8")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x600106F")]
		[Address(RVA = "0x936348", Offset = "0x936348", VA = "0x936348")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001070")]
		[Address(RVA = "0x9363D8", Offset = "0x9363D8", VA = "0x9363D8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001071")]
		[Address(RVA = "0x936470", Offset = "0x936470", VA = "0x936470")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001072")]
		[Address(RVA = "0x936508", Offset = "0x936508", VA = "0x936508")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001073")]
		[Address(RVA = "0x936588", Offset = "0x936588", VA = "0x936588")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x936608", Offset = "0x936608", VA = "0x936608")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001075")]
		[Address(RVA = "0x93675C", Offset = "0x93675C", VA = "0x93675C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x9367DC", Offset = "0x9367DC", VA = "0x9367DC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001077")]
		[Address(RVA = "0x936930", Offset = "0x936930", VA = "0x936930")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x9369B0", Offset = "0x9369B0", VA = "0x9369B0")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001079")]
		[Address(RVA = "0x936AEC", Offset = "0x936AEC", VA = "0x936AEC")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x936B6C", Offset = "0x936B6C", VA = "0x936B6C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x936D40", Offset = "0x936D40", VA = "0x936D40")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600107C")]
		[Address(RVA = "0x937020", Offset = "0x937020", VA = "0x937020")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600107D")]
		[Address(RVA = "0x936CC0", Offset = "0x936CC0", VA = "0x936CC0")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600107E")]
		[Address(RVA = "0x9370B0", Offset = "0x9370B0", VA = "0x9370B0")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600107F")]
		[Address(RVA = "0x937130", Offset = "0x937130", VA = "0x937130")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001080")]
		[Address(RVA = "0x9371C0", Offset = "0x9371C0", VA = "0x9371C0")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001081")]
		[Address(RVA = "0x937250", Offset = "0x937250", VA = "0x937250")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001082")]
		[Address(RVA = "0x9372E0", Offset = "0x9372E0", VA = "0x9372E0")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001083")]
		[Address(RVA = "0x937380", Offset = "0x937380", VA = "0x937380")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001084")]
		[Address(RVA = "0x937420", Offset = "0x937420", VA = "0x937420")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001085")]
		[Address(RVA = "0x9374C0", Offset = "0x9374C0", VA = "0x9374C0")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001086")]
		[Address(RVA = "0x937540", Offset = "0x937540", VA = "0x937540")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001087")]
		[Address(RVA = "0x9375C0", Offset = "0x9375C0", VA = "0x9375C0")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001088")]
		[Address(RVA = "0x937640", Offset = "0x937640", VA = "0x937640")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001089")]
		[Address(RVA = "0x9376C0", Offset = "0x9376C0", VA = "0x9376C0")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600108A")]
		[Address(RVA = "0x937740", Offset = "0x937740", VA = "0x937740")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600108B")]
		[Address(RVA = "0x937868", Offset = "0x937868", VA = "0x937868")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600108C")]
		[Address(RVA = "0x937900", Offset = "0x937900", VA = "0x937900")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x937980", Offset = "0x937980", VA = "0x937980")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x9379E0", Offset = "0x9379E0", VA = "0x9379E0")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600108F")]
		[Address(RVA = "0x937B28", Offset = "0x937B28", VA = "0x937B28")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x937BB8", Offset = "0x937BB8", VA = "0x937BB8")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001091")]
		[Address(RVA = "0x937D10", Offset = "0x937D10", VA = "0x937D10")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001092")]
		[Address(RVA = "0x937DA0", Offset = "0x937DA0", VA = "0x937DA0")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x937E40", Offset = "0x937E40", VA = "0x937E40")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001094")]
		[Address(RVA = "0x938210", Offset = "0x938210", VA = "0x938210")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001095")]
		[Address(RVA = "0x938290", Offset = "0x938290", VA = "0x938290")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x938328", Offset = "0x938328", VA = "0x938328")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001097")]
		[Address(RVA = "0x938B88", Offset = "0x938B88", VA = "0x938B88")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001098")]
		[Address(RVA = "0x938C08", Offset = "0x938C08", VA = "0x938C08")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x931FD4", Offset = "0x931FD4", VA = "0x931FD4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x548414", Offset = "0x548414")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600109A")]
		[Address(RVA = "0x938CA0", Offset = "0x938CA0", VA = "0x938CA0")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x938D24", Offset = "0x938D24", VA = "0x938D24")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x600109C")]
		[Address(RVA = "0x938DA4", Offset = "0x938DA4", VA = "0x938DA4")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600109D")]
		[Address(RVA = "0x938E24", Offset = "0x938E24", VA = "0x938E24")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x938EA4", Offset = "0x938EA4", VA = "0x938EA4")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600109F")]
		[Address(RVA = "0x939868", Offset = "0x939868", VA = "0x939868")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x9398E8", Offset = "0x9398E8", VA = "0x9398E8")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x939D08", Offset = "0x939D08", VA = "0x939D08")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x939C70", Offset = "0x939C70", VA = "0x939C70")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x939D7C", Offset = "0x939D7C", VA = "0x939D7C")]
		public CAPI()
		{
		}
	}
}
namespace SmartLocalization
{
	[Token(Token = "0x2000288")]
	public class LoadAllLanguages : MonoBehaviour
	{
		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> currentLanguageKeys;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SmartCultureInfo> availableLanguages;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LanguageManager languageManager;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 valuesScrollPosition;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 languagesScrollPosition;

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x87D8D8", Offset = "0x87D8D8", VA = "0x87D8D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x87DAEC", Offset = "0x87DAEC", VA = "0x87DAEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x87DC04", Offset = "0x87DC04", VA = "0x87DC04")]
		private void OnLanguageChanged(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x87DC38", Offset = "0x87DC38", VA = "0x87DC38")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x87E510", Offset = "0x87E510", VA = "0x87E510")]
		public LoadAllLanguages()
		{
		}
	}
	[Token(Token = "0x2000289")]
	internal static class ApplicationExtensions
	{
		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x92B410", Offset = "0x92B410", VA = "0x92B410")]
		internal static string GetSystemLanguage()
		{
			return null;
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x92B428", Offset = "0x92B428", VA = "0x92B428")]
		internal static string GetStringValueOfSystemLanguage(SystemLanguage systemLanguage)
		{
			return null;
		}
	}
	[Token(Token = "0x200028A")]
	internal interface ILocalizedAssetLoader
	{
		[Token(Token = "0x60010B2")]
		T LoadAsset<T>(string assetKey, string languageCode) where T : UnityEngine.Object;
	}
	[Token(Token = "0x200028B")]
	internal class LanguageDataHandler
	{
		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SortedDictionary<string, LocalizedObject> loadedValuesDictionary;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool verboseLogging;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SmartCultureInfo loadedCultureInfo;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ILocalizedAssetLoader assetLoader;

		[Token(Token = "0x17000197")]
		internal SmartCultureInfo LoadedCulture
		{
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0xBA8580", Offset = "0xBA8580", VA = "0xBA8580")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xBA8588", Offset = "0xBA8588", VA = "0xBA8588")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		internal bool VerboseLogging
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xBA8590", Offset = "0xBA8590", VA = "0xBA8590")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xBA8598", Offset = "0xBA8598", VA = "0xBA8598")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		internal SortedDictionary<string, LocalizedObject> LoadedValuesDictionary
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xBA85A4", Offset = "0xBA85A4", VA = "0xBA85A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xBA85AC", Offset = "0xBA85AC", VA = "0xBA85AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		internal ILocalizedAssetLoader AssetLoader
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0xBA85B4", Offset = "0xBA85B4", VA = "0xBA85B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xBA861C", Offset = "0xBA861C", VA = "0xBA861C")]
			set
			{
			}
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xBA8624", Offset = "0xBA8624", VA = "0xBA8624")]
		internal LanguageDataHandler()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xBA86A0", Offset = "0xBA86A0", VA = "0xBA86A0")]
		internal bool Load(string resxData)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xBA87F4", Offset = "0xBA87F4", VA = "0xBA87F4")]
		internal bool Append(string resxData)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xBA8AF0", Offset = "0xBA8AF0", VA = "0xBA8AF0")]
		internal List<string> GetKeysWithinCategory(string category)
		{
			return null;
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xBA8D04", Offset = "0xBA8D04", VA = "0xBA8D04")]
		internal List<string> GetAllKeys()
		{
			return null;
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xBA8DA8", Offset = "0xBA8DA8", VA = "0xBA8DA8")]
		internal LocalizedObject GetLocalizedObject(string key)
		{
			return null;
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xBA8E1C", Offset = "0xBA8E1C", VA = "0xBA8E1C")]
		internal string GetTextValue(string key)
		{
			return null;
		}

		[Token(Token = "0x60010C2")]
		internal T GetAsset<T>(string key) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xBA8EF8", Offset = "0xBA8EF8", VA = "0xBA8EF8")]
		internal bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xBA8774", Offset = "0xBA8774", VA = "0xBA8774")]
		private SortedDictionary<string, LocalizedObject> LoadLanguageDictionary(string resxData)
		{
			return null;
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xBA92B8", Offset = "0xBA92B8", VA = "0xBA92B8")]
		private string CheckLanguageOverrideCode(LocalizedObject localizedObject)
		{
			return null;
		}
	}
	[Token(Token = "0x200028C")]
	public delegate void ChangeLanguageEventHandler(LanguageManager thisLanguageManager);
	[Token(Token = "0x200028D")]
	public class LanguageManager : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x200028E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E578", Offset = "0x53E578")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string englishName;

			[Token(Token = "0x6001102")]
			[Address(RVA = "0x803B08", Offset = "0x803B08", VA = "0x803B08")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6001103")]
			[Address(RVA = "0x803B10", Offset = "0x803B10", VA = "0x803B10")]
			internal bool <GetDeviceCultureIfSupported>b__0(SmartCultureInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200028F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E588", Offset = "0x53E588")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string languageCode;

			[Token(Token = "0x6001104")]
			[Address(RVA = "0x803B68", Offset = "0x803B68", VA = "0x803B68")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6001105")]
			[Address(RVA = "0x803B70", Offset = "0x803B70", VA = "0x803B70")]
			internal bool <IsCultureSupported>b__0(SmartCultureInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E598", Offset = "0x53E598")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string englishName;

			[Token(Token = "0x6001106")]
			[Address(RVA = "0x803B94", Offset = "0x803B94", VA = "0x803B94")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6001107")]
			[Address(RVA = "0x803B9C", Offset = "0x803B9C", VA = "0x803B9C")]
			internal bool <IsLanguageSupportedEnglishName>b__0(SmartCultureInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000291")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E5A8", Offset = "0x53E5A8")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string languageCode;

			[Token(Token = "0x6001108")]
			[Address(RVA = "0x803BF4", Offset = "0x803BF4", VA = "0x803BF4")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x6001109")]
			[Address(RVA = "0x803BFC", Offset = "0x803BFC", VA = "0x803BFC")]
			internal bool <GetCultureInfo>b__0(SmartCultureInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LanguageManager instance;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool IsQuitting;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool DontDestroyOnLoadToggle;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		private static bool DidSetDontDestroyOnLoad;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private List<string> serializedKeys;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private List<LocalizedObject> serializedValues;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private SmartCultureInfo serializedCulture;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ChangeLanguageEventHandler OnChangeLanguage;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string defaultLanguage;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SmartCultureInfoCollection availableLanguages;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LanguageDataHandler languageDataHandler;

		[Token(Token = "0x1700019B")]
		public static LanguageManager Instance
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xBA931C", Offset = "0xBA931C", VA = "0xBA931C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		public static bool HasInstance
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0xBA9764", Offset = "0xBA9764", VA = "0xBA9764")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x548580", Offset = "0x548580")]
		public SortedDictionary<string, LocalizedObject> LanguageDatabase
		{
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0xBA9C8C", Offset = "0xBA9C8C", VA = "0xBA9C8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5485B8", Offset = "0x5485B8")]
		public Dictionary<string, string> RawTextDatabase
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0xBA9CA8", Offset = "0xBA9CA8", VA = "0xBA9CA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public int NumberOfSupportedLanguages
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xBA9E88", Offset = "0xBA9E88", VA = "0xBA9E88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5485F0", Offset = "0x5485F0")]
		public string LoadedLanguage
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0xBA9EE4", Offset = "0xBA9EE4", VA = "0xBA9EE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public SmartCultureInfo CurrentlyLoadedCulture
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0xBA9C70", Offset = "0xBA9C70", VA = "0xBA9C70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public bool VerboseLogging
		{
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0xBA9F0C", Offset = "0xBA9F0C", VA = "0xBA9F0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0xBA9F28", Offset = "0xBA9F28", VA = "0xBA9F28")]
			set
			{
			}
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xBA962C", Offset = "0xBA962C", VA = "0xBA962C")]
		public static void SetDontDestroyOnLoad()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xBA9804", Offset = "0xBA9804", VA = "0xBA9804", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xBA99BC", Offset = "0xBA99BC", VA = "0xBA99BC", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xBA9F48", Offset = "0xBA9F48", VA = "0xBA9F48")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xBAA4D8", Offset = "0xBAA4D8", VA = "0xBAA4D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xBAA4E0", Offset = "0xBAA4E0", VA = "0xBAA4E0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xBAA31C", Offset = "0xBAA31C", VA = "0xBAA31C")]
		private bool LoadAvailableCultures()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xBAA548", Offset = "0xBAA548", VA = "0xBAA548")]
		public List<string> GetAllKeys()
		{
			return null;
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xBAA4C0", Offset = "0xBAA4C0", VA = "0xBAA4C0")]
		public void ChangeLanguage(SmartCultureInfo cultureInfo)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xBAA560", Offset = "0xBAA560", VA = "0xBAA560")]
		public void ChangeLanguage(string languageCode)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xBAA8EC", Offset = "0xBAA8EC", VA = "0xBAA8EC")]
		public void ChangeLanguageWithData(string languageDataInResX, string languageCode)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xBAA92C", Offset = "0xBAA92C", VA = "0xBAA92C")]
		public bool AppendLanguageWithTextData(string languageDataInResX)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xBAA7A0", Offset = "0xBAA7A0", VA = "0xBAA7A0")]
		private bool LoadLanguage(string languageData, string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xBAAA3C", Offset = "0xBAAA3C", VA = "0xBAAA3C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x548474", Offset = "0x548474")]
		public bool IsLanguageSupported(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xBAAB98", Offset = "0xBAAB98", VA = "0xBAAB98")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5484AC", Offset = "0x5484AC")]
		public bool IsLanguageSupported(SmartCultureInfo cultureInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xBAABB0", Offset = "0xBAABB0", VA = "0xBAABB0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5484E4", Offset = "0x5484E4")]
		public SmartCultureInfo GetSupportedSystemLanguage()
		{
			return null;
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xBAACC4", Offset = "0xBAACC4", VA = "0xBAACC4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54851C", Offset = "0x54851C")]
		public string GetSupportedSystemLanguageCode()
		{
			return null;
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xBAABB4", Offset = "0xBAABB4", VA = "0xBAABB4")]
		public SmartCultureInfo GetDeviceCultureIfSupported()
		{
			return null;
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xBAAA40", Offset = "0xBAAA40", VA = "0xBAAA40")]
		public bool IsCultureSupported(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xBAAD30", Offset = "0xBAAD30", VA = "0xBAAD30")]
		public bool IsCultureSupported(SmartCultureInfo cultureInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xBAAD48", Offset = "0xBAAD48", VA = "0xBAAD48")]
		public bool IsLanguageSupportedEnglishName(string englishName)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xBAA944", Offset = "0xBAA944", VA = "0xBAA944")]
		public SmartCultureInfo GetCultureInfo(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xBAAD28", Offset = "0xBAAD28", VA = "0xBAAD28")]
		public string GetSystemLanguageEnglishName()
		{
			return null;
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xBAAEA0", Offset = "0xBAAEA0", VA = "0xBAAEA0")]
		public List<SmartCultureInfo> GetSupportedLanguages()
		{
			return null;
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xBAAF30", Offset = "0xBAAF30", VA = "0xBAAF30")]
		public List<string> GetKeysWithinCategory(string category)
		{
			return null;
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xBAAF48", Offset = "0xBAAF48", VA = "0xBAAF48")]
		public string GetTextValue(string key)
		{
			return null;
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xBAAF60", Offset = "0xBAAF60", VA = "0xBAAF60")]
		public string GetTextValue(string key, int count)
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xBAB008", Offset = "0xBAB008", VA = "0xBAB008")]
		public TextAsset GetTextAsset(string key, int count)
		{
			return null;
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xBAB10C", Offset = "0xBAB10C", VA = "0xBAB10C")]
		public AudioClip GetAudioClip(string key, int count)
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xBAB210", Offset = "0xBAB210", VA = "0xBAB210")]
		public GameObject GetPrefab(string key, int count)
		{
			return null;
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xBAB314", Offset = "0xBAB314", VA = "0xBAB314")]
		public Texture GetTexture(string key, int count)
		{
			return null;
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xBAB418", Offset = "0xBAB418", VA = "0xBAB418")]
		public string GetTextValue(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xBAB4B8", Offset = "0xBAB4B8", VA = "0xBAB4B8")]
		public TextAsset GetTextAsset(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xBAB54C", Offset = "0xBAB54C", VA = "0xBAB54C")]
		public Font GetFont(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xBAB644", Offset = "0xBAB644", VA = "0xBAB644")]
		public AudioClip GetAudioClip(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xBAB6D8", Offset = "0xBAB6D8", VA = "0xBAB6D8")]
		public GameObject GetPrefab(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xBAB76C", Offset = "0xBAB76C", VA = "0xBAB76C")]
		public Texture GetTexture(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xBAB0A8", Offset = "0xBAB0A8", VA = "0xBAB0A8")]
		public TextAsset GetTextAsset(string key)
		{
			return null;
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xBAB5E0", Offset = "0xBAB5E0", VA = "0xBAB5E0")]
		public Font GetFont(string key)
		{
			return null;
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xBAB1AC", Offset = "0xBAB1AC", VA = "0xBAB1AC")]
		public AudioClip GetAudioClip(string key)
		{
			return null;
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xBAB2B0", Offset = "0xBAB2B0", VA = "0xBAB2B0")]
		public GameObject GetPrefab(string key)
		{
			return null;
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xBAB3B4", Offset = "0xBAB3B4", VA = "0xBAB3B4")]
		public Texture GetTexture(string key)
		{
			return null;
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xBAB800", Offset = "0xBAB800", VA = "0xBAB800")]
		public bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xBAB828", Offset = "0xBAB828", VA = "0xBAB828")]
		private LocalizedObject GetLocalizedObject(string key)
		{
			return null;
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xBAB840", Offset = "0xBAB840", VA = "0xBAB840")]
		public LanguageManager()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xBAB8C0", Offset = "0xBAB8C0", VA = "0xBAB8C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54852C", Offset = "0x54852C")]
		private bool <Awake>b__31_0(SmartCultureInfo info)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000292")]
	public static class LanguageParser
	{
		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string xmlHeader;

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xBA8F14", Offset = "0xBA8F14", VA = "0xBA8F14")]
		public static SortedDictionary<string, LocalizedObject> LoadLanguage(string languageDataInResX)
		{
			return null;
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xBABAA4", Offset = "0xBABAA4", VA = "0xBABAA4")]
		private static void ReadElements(XmlReader reader, SortedDictionary<string, LocalizedObject> loadedLanguageDictionary)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xBABB9C", Offset = "0xBABB9C", VA = "0xBABB9C")]
		private static void ReadData(XmlReader reader, SortedDictionary<string, LocalizedObject> loadedLanguageDictionary)
		{
		}
	}
	[Token(Token = "0x2000293")]
	public static class LanguageRuntimeData
	{
		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string AvailableCulturesFileName;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string rootLanguageName;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string AudioFileFolderName;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string TexturesFolderName;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string PrefabsFolderName;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string TextAssetsFolderName;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string FontsFolderName;

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xBAA718", Offset = "0xBAA718", VA = "0xBAA718")]
		public static string LanguageFilePath(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xBABE78", Offset = "0xBABE78", VA = "0xBABE78")]
		public static string AvailableCulturesFilePath()
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xBABEDC", Offset = "0xBABEDC", VA = "0xBABEDC")]
		public static string AudioFilesFolderPath(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xBABF64", Offset = "0xBABF64", VA = "0xBABF64")]
		public static string TexturesFolderPath(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xBABFEC", Offset = "0xBABFEC", VA = "0xBABFEC")]
		public static string TextAssetsFolderPath(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xBAC074", Offset = "0xBAC074", VA = "0xBAC074")]
		public static string FontsFolderPath(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xBAC0FC", Offset = "0xBAC0FC", VA = "0xBAC0FC")]
		public static string PrefabsFolderPath(string languageCode)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "XmlRootAttribute", RVA = "0x53E5B8", Offset = "0x53E5B8")]
	public class SmartCultureInfoCollection
	{
		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E5F0", Offset = "0x53E5F0")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SmartCultureInfo cultureInfo;

			[Token(Token = "0x600111D")]
			[Address(RVA = "0x1274134", Offset = "0x1274134", VA = "0x1274134")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600111E")]
			[Address(RVA = "0x127413C", Offset = "0x127413C", VA = "0x127413C")]
			internal bool <FindCulture>b__0(SmartCultureInfo c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E600", Offset = "0x53E600")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string languageCode;

			[Token(Token = "0x600111F")]
			[Address(RVA = "0x12741F8", Offset = "0x12741F8", VA = "0x12741F8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001120")]
			[Address(RVA = "0x1274200", Offset = "0x1274200", VA = "0x1274200")]
			internal bool <FindCulture>b__0(SmartCultureInfo c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E95")]
		public const int LatestVersion = 4;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x5432E8", Offset = "0x5432E8")]
		public int version;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0x543324", Offset = "0x543324")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0x543324", Offset = "0x543324")]
		public List<SmartCultureInfo> cultureInfos;

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x862E30", Offset = "0x862E30", VA = "0x862E30")]
		public void RemoveCultureInfo(SmartCultureInfo cultureInfo)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x862F30", Offset = "0x862F30", VA = "0x862F30")]
		public void AddCultureInfo(SmartCultureInfo cultureInfo)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x862FF0", Offset = "0x862FF0", VA = "0x862FF0")]
		public static SmartCultureInfoCollection Deserialize(TextAsset xmlFile)
		{
			return null;
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x8632BC", Offset = "0x8632BC", VA = "0x8632BC")]
		public SmartCultureInfo FindCulture(SmartCultureInfo cultureInfo)
		{
			return null;
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x8633BC", Offset = "0x8633BC", VA = "0x8633BC")]
		public SmartCultureInfo FindCulture(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x8634C8", Offset = "0x8634C8", VA = "0x8634C8")]
		public bool IsCultureInCollection(SmartCultureInfo cultureInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x8634E4", Offset = "0x8634E4", VA = "0x8634E4")]
		public SmartCultureInfoCollection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000297")]
	public class SmartCultureInfo
	{
		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string languageCode;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string englishName;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string nativeName;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isRightToLeft;

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x862C80", Offset = "0x862C80", VA = "0x862C80")]
		public SmartCultureInfo()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x862C88", Offset = "0x862C88", VA = "0x862C88")]
		public SmartCultureInfo(string languageCode, string englishName, string nativeName, bool isRightToLeft)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x862CDC", Offset = "0x862CDC", VA = "0x862CDC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000298")]
	internal static class SmartCultureInfoCollectionDeserializer
	{
		[Token(Token = "0x6001124")]
		[Address(RVA = "0x862FF4", Offset = "0x862FF4", VA = "0x862FF4")]
		public static SmartCultureInfoCollection Deserialize(TextAsset xmlFile)
		{
			return null;
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x86355C", Offset = "0x86355C", VA = "0x86355C")]
		private static void ReadElements(XmlReader reader, SmartCultureInfoCollection newCollection)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x863628", Offset = "0x863628", VA = "0x863628")]
		private static void ReadData(XmlReader reader, SmartCultureInfoCollection newCollection)
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class LocalizedAudioSource : MonoBehaviour
	{
		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string localizedKey;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip audioClip;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource audioSource;

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x87E878", Offset = "0x87E878", VA = "0x87E878")]
		private void Start()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x87EA54", Offset = "0x87EA54", VA = "0x87EA54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x87E998", Offset = "0x87E998", VA = "0x87E998")]
		private void OnChangeLanguage(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x87EB6C", Offset = "0x87EB6C", VA = "0x87EB6C")]
		public LocalizedAudioSource()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class LocalizedGUIText : MonoBehaviour
	{
		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string localizedKey;

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x87EBC0", Offset = "0x87EBC0", VA = "0x87EBC0")]
		private void Start()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x87ECB8", Offset = "0x87ECB8", VA = "0x87ECB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x87ECB4", Offset = "0x87ECB4", VA = "0x87ECB4")]
		private void OnChangeLanguage(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x87EDD0", Offset = "0x87EDD0", VA = "0x87EDD0")]
		public LocalizedGUIText()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class LocalizedGUITexture : MonoBehaviour
	{
		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string localizedKey;

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x87EE24", Offset = "0x87EE24", VA = "0x87EE24")]
		private void Start()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x87EF1C", Offset = "0x87EF1C", VA = "0x87EF1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x87EF18", Offset = "0x87EF18", VA = "0x87EF18")]
		private void OnChangeLanguage(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x87F034", Offset = "0x87F034", VA = "0x87F034")]
		public LocalizedGUITexture()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public enum LocalizedObjectType
	{
		[Token(Token = "0x4000EA4")]
		STRING,
		[Token(Token = "0x4000EA5")]
		GAME_OBJECT,
		[Token(Token = "0x4000EA6")]
		AUDIO,
		[Token(Token = "0x4000EA7")]
		TEXTURE,
		[Token(Token = "0x4000EA8")]
		TEXT_ASSET,
		[Token(Token = "0x4000EA9")]
		FONT,
		[Token(Token = "0x4000EAA")]
		INVALID
	}
	[Serializable]
	[Token(Token = "0x200029D")]
	public class LocalizedObject
	{
		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string keyTypeIdentifier;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string endBracket;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private LocalizedObjectType objectType;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string textValue;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject thisGameObject;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip thisAudioClip;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture thisTexture;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextAsset thisTextAsset;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Font font;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool overrideLocalizedObject;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string overrideObjectLanguageCode;

		[Token(Token = "0x170001A3")]
		public LocalizedObjectType ObjectType
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0x87F088", Offset = "0x87F088", VA = "0x87F088")]
			get
			{
				return default(LocalizedObjectType);
			}
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x87F090", Offset = "0x87F090", VA = "0x87F090")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public string TextValue
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x87F098", Offset = "0x87F098", VA = "0x87F098")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x87F0A0", Offset = "0x87F0A0", VA = "0x87F0A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public GameObject ThisGameObject
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0x87F0A8", Offset = "0x87F0A8", VA = "0x87F0A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x87F0B0", Offset = "0x87F0B0", VA = "0x87F0B0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public AudioClip ThisAudioClip
		{
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x87F0B8", Offset = "0x87F0B8", VA = "0x87F0B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x87F0C0", Offset = "0x87F0C0", VA = "0x87F0C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public Texture ThisTexture
		{
			[Token(Token = "0x600113B")]
			[Address(RVA = "0x87F0C8", Offset = "0x87F0C8", VA = "0x87F0C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113C")]
			[Address(RVA = "0x87F0D0", Offset = "0x87F0D0", VA = "0x87F0D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public bool OverrideLocalizedObject
		{
			[Token(Token = "0x600113D")]
			[Address(RVA = "0x87F0D8", Offset = "0x87F0D8", VA = "0x87F0D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600113E")]
			[Address(RVA = "0x87F0E0", Offset = "0x87F0E0", VA = "0x87F0E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public string OverrideObjectLanguageCode
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0x87F104", Offset = "0x87F104", VA = "0x87F104")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001140")]
			[Address(RVA = "0x87F10C", Offset = "0x87F10C", VA = "0x87F10C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public TextAsset ThisTextAsset
		{
			[Token(Token = "0x6001141")]
			[Address(RVA = "0x87F17C", Offset = "0x87F17C", VA = "0x87F17C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x87F184", Offset = "0x87F184", VA = "0x87F184")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public Font Font
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x87F18C", Offset = "0x87F18C", VA = "0x87F18C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x87F194", Offset = "0x87F194", VA = "0x87F194")]
			set
			{
			}
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x87F19C", Offset = "0x87F19C", VA = "0x87F19C")]
		public LocalizedObject()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x87F1A4", Offset = "0x87F1A4", VA = "0x87F1A4")]
		public LocalizedObject(LocalizedObject other)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x87F1E8", Offset = "0x87F1E8", VA = "0x87F1E8")]
		public static LocalizedObjectType GetLocalizedObjectType(string key)
		{
			return default(LocalizedObjectType);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x87F4C8", Offset = "0x87F4C8", VA = "0x87F4C8")]
		public static string GetCleanKey(string key, LocalizedObjectType objectType)
		{
			return null;
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x87F6C4", Offset = "0x87F6C4", VA = "0x87F6C4")]
		public static string GetCleanKey(string key)
		{
			return null;
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x87F730", Offset = "0x87F730", VA = "0x87F730")]
		public string GetFullKey(string parsedKey)
		{
			return null;
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x87F7E8", Offset = "0x87F7E8", VA = "0x87F7E8")]
		public static string GetFullKey(string parsedKey, LocalizedObjectType objectType)
		{
			return null;
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x87F628", Offset = "0x87F628", VA = "0x87F628")]
		public static string GetLocalizedObjectTypeStringValue(LocalizedObjectType objectType)
		{
			return null;
		}
	}
	[Token(Token = "0x200029E")]
	internal class PluralForms
	{
		[Serializable]
		[Token(Token = "0x200029F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53E610", Offset = "0x53E610")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6001153")]
			[Address(RVA = "0x12717B0", Offset = "0x12717B0", VA = "0x12717B0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001154")]
			[Address(RVA = "0x12717B8", Offset = "0x12717B8", VA = "0x12717B8")]
			internal int <.cctor>b__4_0(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001155")]
			[Address(RVA = "0x1271808", Offset = "0x1271808", VA = "0x1271808")]
			internal int <.cctor>b__4_1(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001156")]
			[Address(RVA = "0x1271814", Offset = "0x1271814", VA = "0x1271814")]
			internal int <.cctor>b__4_2(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001157")]
			[Address(RVA = "0x1271820", Offset = "0x1271820", VA = "0x1271820")]
			internal int <.cctor>b__4_3(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001158")]
			[Address(RVA = "0x1271828", Offset = "0x1271828", VA = "0x1271828")]
			internal int <.cctor>b__4_4(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001159")]
			[Address(RVA = "0x1271858", Offset = "0x1271858", VA = "0x1271858")]
			internal int <.cctor>b__4_5(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600115A")]
			[Address(RVA = "0x1271864", Offset = "0x1271864", VA = "0x1271864")]
			internal int <.cctor>b__4_6(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600115B")]
			[Address(RVA = "0x1271870", Offset = "0x1271870", VA = "0x1271870")]
			internal int <.cctor>b__4_7(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600115C")]
			[Address(RVA = "0x127187C", Offset = "0x127187C", VA = "0x127187C")]
			internal int <.cctor>b__4_8(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600115D")]
			[Address(RVA = "0x1271888", Offset = "0x1271888", VA = "0x1271888")]
			internal int <.cctor>b__4_9(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600115E")]
			[Address(RVA = "0x1271894", Offset = "0x1271894", VA = "0x1271894")]
			internal int <.cctor>b__4_10(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600115F")]
			[Address(RVA = "0x12718A0", Offset = "0x12718A0", VA = "0x12718A0")]
			internal int <.cctor>b__4_11(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001160")]
			[Address(RVA = "0x12718AC", Offset = "0x12718AC", VA = "0x12718AC")]
			internal int <.cctor>b__4_12(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001161")]
			[Address(RVA = "0x12718B8", Offset = "0x12718B8", VA = "0x12718B8")]
			internal int <.cctor>b__4_13(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001162")]
			[Address(RVA = "0x12718C4", Offset = "0x12718C4", VA = "0x12718C4")]
			internal int <.cctor>b__4_14(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001163")]
			[Address(RVA = "0x127191C", Offset = "0x127191C", VA = "0x127191C")]
			internal int <.cctor>b__4_15(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001164")]
			[Address(RVA = "0x1271928", Offset = "0x1271928", VA = "0x1271928")]
			internal int <.cctor>b__4_16(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001165")]
			[Address(RVA = "0x1271930", Offset = "0x1271930", VA = "0x1271930")]
			internal int <.cctor>b__4_17(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001166")]
			[Address(RVA = "0x1271938", Offset = "0x1271938", VA = "0x1271938")]
			internal int <.cctor>b__4_18(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001167")]
			[Address(RVA = "0x1271944", Offset = "0x1271944", VA = "0x1271944")]
			internal int <.cctor>b__4_19(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001168")]
			[Address(RVA = "0x1271950", Offset = "0x1271950", VA = "0x1271950")]
			internal int <.cctor>b__4_20(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0x12719C8", Offset = "0x12719C8", VA = "0x12719C8")]
			internal int <.cctor>b__4_21(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0x12719D4", Offset = "0x12719D4", VA = "0x12719D4")]
			internal int <.cctor>b__4_22(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600116B")]
			[Address(RVA = "0x1271A24", Offset = "0x1271A24", VA = "0x1271A24")]
			internal int <.cctor>b__4_23(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600116C")]
			[Address(RVA = "0x1271AA4", Offset = "0x1271AA4", VA = "0x1271AA4")]
			internal int <.cctor>b__4_24(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600116D")]
			[Address(RVA = "0x1271B24", Offset = "0x1271B24", VA = "0x1271B24")]
			internal int <.cctor>b__4_25(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600116E")]
			[Address(RVA = "0x1271B54", Offset = "0x1271B54", VA = "0x1271B54")]
			internal int <.cctor>b__4_26(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600116F")]
			[Address(RVA = "0x1271B60", Offset = "0x1271B60", VA = "0x1271B60")]
			internal int <.cctor>b__4_27(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001170")]
			[Address(RVA = "0x1271B6C", Offset = "0x1271B6C", VA = "0x1271B6C")]
			internal int <.cctor>b__4_28(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001171")]
			[Address(RVA = "0x1271B74", Offset = "0x1271B74", VA = "0x1271B74")]
			internal int <.cctor>b__4_29(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001172")]
			[Address(RVA = "0x1271B80", Offset = "0x1271B80", VA = "0x1271B80")]
			internal int <.cctor>b__4_30(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001173")]
			[Address(RVA = "0x1271B88", Offset = "0x1271B88", VA = "0x1271B88")]
			internal int <.cctor>b__4_31(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001174")]
			[Address(RVA = "0x1271C08", Offset = "0x1271C08", VA = "0x1271C08")]
			internal int <.cctor>b__4_32(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001175")]
			[Address(RVA = "0x1271C88", Offset = "0x1271C88", VA = "0x1271C88")]
			internal int <.cctor>b__4_33(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001176")]
			[Address(RVA = "0x1271CD0", Offset = "0x1271CD0", VA = "0x1271CD0")]
			internal int <.cctor>b__4_34(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001177")]
			[Address(RVA = "0x1271CDC", Offset = "0x1271CDC", VA = "0x1271CDC")]
			internal int <.cctor>b__4_35(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001178")]
			[Address(RVA = "0x1271D44", Offset = "0x1271D44", VA = "0x1271D44")]
			internal int <.cctor>b__4_36(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001179")]
			[Address(RVA = "0x1271DC0", Offset = "0x1271DC0", VA = "0x1271DC0")]
			internal int <.cctor>b__4_37(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600117A")]
			[Address(RVA = "0x1271DC8", Offset = "0x1271DC8", VA = "0x1271DC8")]
			internal int <.cctor>b__4_38(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600117B")]
			[Address(RVA = "0x1271DD0", Offset = "0x1271DD0", VA = "0x1271DD0")]
			internal int <.cctor>b__4_39(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600117C")]
			[Address(RVA = "0x1271DDC", Offset = "0x1271DDC", VA = "0x1271DDC")]
			internal int <.cctor>b__4_40(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600117D")]
			[Address(RVA = "0x1271DE8", Offset = "0x1271DE8", VA = "0x1271DE8")]
			internal int <.cctor>b__4_41(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600117E")]
			[Address(RVA = "0x1271E34", Offset = "0x1271E34", VA = "0x1271E34")]
			internal int <.cctor>b__4_42(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600117F")]
			[Address(RVA = "0x1271E40", Offset = "0x1271E40", VA = "0x1271E40")]
			internal int <.cctor>b__4_43(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001180")]
			[Address(RVA = "0x1271E48", Offset = "0x1271E48", VA = "0x1271E48")]
			internal int <.cctor>b__4_44(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001181")]
			[Address(RVA = "0x1271E54", Offset = "0x1271E54", VA = "0x1271E54")]
			internal int <.cctor>b__4_45(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001182")]
			[Address(RVA = "0x1271E60", Offset = "0x1271E60", VA = "0x1271E60")]
			internal int <.cctor>b__4_46(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001183")]
			[Address(RVA = "0x1271E6C", Offset = "0x1271E6C", VA = "0x1271E6C")]
			internal int <.cctor>b__4_47(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x1271E78", Offset = "0x1271E78", VA = "0x1271E78")]
			internal int <.cctor>b__4_48(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001185")]
			[Address(RVA = "0x1271E84", Offset = "0x1271E84", VA = "0x1271E84")]
			internal int <.cctor>b__4_49(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x1271E90", Offset = "0x1271E90", VA = "0x1271E90")]
			internal int <.cctor>b__4_50(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001187")]
			[Address(RVA = "0x1271E9C", Offset = "0x1271E9C", VA = "0x1271E9C")]
			internal int <.cctor>b__4_51(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001188")]
			[Address(RVA = "0x1271EA8", Offset = "0x1271EA8", VA = "0x1271EA8")]
			internal int <.cctor>b__4_52(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001189")]
			[Address(RVA = "0x1271EB4", Offset = "0x1271EB4", VA = "0x1271EB4")]
			internal int <.cctor>b__4_53(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600118A")]
			[Address(RVA = "0x1271EC0", Offset = "0x1271EC0", VA = "0x1271EC0")]
			internal int <.cctor>b__4_54(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600118B")]
			[Address(RVA = "0x1271F10", Offset = "0x1271F10", VA = "0x1271F10")]
			internal int <.cctor>b__4_55(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600118C")]
			[Address(RVA = "0x1271F1C", Offset = "0x1271F1C", VA = "0x1271F1C")]
			internal int <.cctor>b__4_56(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600118D")]
			[Address(RVA = "0x1271F28", Offset = "0x1271F28", VA = "0x1271F28")]
			internal int <.cctor>b__4_57(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600118E")]
			[Address(RVA = "0x1271F30", Offset = "0x1271F30", VA = "0x1271F30")]
			internal int <.cctor>b__4_58(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600118F")]
			[Address(RVA = "0x1271F60", Offset = "0x1271F60", VA = "0x1271F60")]
			internal int <.cctor>b__4_59(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001190")]
			[Address(RVA = "0x1271F6C", Offset = "0x1271F6C", VA = "0x1271F6C")]
			internal int <.cctor>b__4_60(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001191")]
			[Address(RVA = "0x1271F78", Offset = "0x1271F78", VA = "0x1271F78")]
			internal int <.cctor>b__4_61(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001192")]
			[Address(RVA = "0x1271F84", Offset = "0x1271F84", VA = "0x1271F84")]
			internal int <.cctor>b__4_62(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001193")]
			[Address(RVA = "0x1271F90", Offset = "0x1271F90", VA = "0x1271F90")]
			internal int <.cctor>b__4_63(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001194")]
			[Address(RVA = "0x1271F9C", Offset = "0x1271F9C", VA = "0x1271F9C")]
			internal int <.cctor>b__4_64(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001195")]
			[Address(RVA = "0x1271FA8", Offset = "0x1271FA8", VA = "0x1271FA8")]
			internal int <.cctor>b__4_65(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001196")]
			[Address(RVA = "0x1271FB4", Offset = "0x1271FB4", VA = "0x1271FB4")]
			internal int <.cctor>b__4_66(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001197")]
			[Address(RVA = "0x1271FC0", Offset = "0x1271FC0", VA = "0x1271FC0")]
			internal int <.cctor>b__4_67(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001198")]
			[Address(RVA = "0x1272018", Offset = "0x1272018", VA = "0x1272018")]
			internal int <.cctor>b__4_68(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6001199")]
			[Address(RVA = "0x1272024", Offset = "0x1272024", VA = "0x1272024")]
			internal int <.cctor>b__4_69(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600119A")]
			[Address(RVA = "0x127202C", Offset = "0x127202C", VA = "0x127202C")]
			internal int <.cctor>b__4_70(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600119B")]
			[Address(RVA = "0x1272034", Offset = "0x1272034", VA = "0x1272034")]
			internal int <.cctor>b__4_71(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600119C")]
			[Address(RVA = "0x1272040", Offset = "0x1272040", VA = "0x1272040")]
			internal int <.cctor>b__4_72(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600119D")]
			[Address(RVA = "0x127204C", Offset = "0x127204C", VA = "0x127204C")]
			internal int <.cctor>b__4_73(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600119E")]
			[Address(RVA = "0x12720C4", Offset = "0x12720C4", VA = "0x12720C4")]
			internal int <.cctor>b__4_74(int n)
			{
				return default(int);
			}

			[Token(Token = "0x600119F")]
			[Address(RVA = "0x12720D0", Offset = "0x12720D0", VA = "0x12720D0")]
			internal int <.cctor>b__4_75(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x1272120", Offset = "0x1272120", VA = "0x1272120")]
			internal int <.cctor>b__4_76(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x12721A0", Offset = "0x12721A0", VA = "0x12721A0")]
			internal int <.cctor>b__4_77(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x1272220", Offset = "0x1272220", VA = "0x1272220")]
			internal int <.cctor>b__4_78(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x1272250", Offset = "0x1272250", VA = "0x1272250")]
			internal int <.cctor>b__4_79(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011A4")]
			[Address(RVA = "0x127225C", Offset = "0x127225C", VA = "0x127225C")]
			internal int <.cctor>b__4_80(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x1272268", Offset = "0x1272268", VA = "0x1272268")]
			internal int <.cctor>b__4_81(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x1272270", Offset = "0x1272270", VA = "0x1272270")]
			internal int <.cctor>b__4_82(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x127227C", Offset = "0x127227C", VA = "0x127227C")]
			internal int <.cctor>b__4_83(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x1272284", Offset = "0x1272284", VA = "0x1272284")]
			internal int <.cctor>b__4_84(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x1272304", Offset = "0x1272304", VA = "0x1272304")]
			internal int <.cctor>b__4_85(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x1272384", Offset = "0x1272384", VA = "0x1272384")]
			internal int <.cctor>b__4_86(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x12723CC", Offset = "0x12723CC", VA = "0x12723CC")]
			internal int <.cctor>b__4_87(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x12723D8", Offset = "0x12723D8", VA = "0x12723D8")]
			internal int <.cctor>b__4_88(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x1272440", Offset = "0x1272440", VA = "0x1272440")]
			internal int <.cctor>b__4_89(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x12724BC", Offset = "0x12724BC", VA = "0x12724BC")]
			internal int <.cctor>b__4_90(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x12724C4", Offset = "0x12724C4", VA = "0x12724C4")]
			internal int <.cctor>b__4_91(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x12724CC", Offset = "0x12724CC", VA = "0x12724CC")]
			internal int <.cctor>b__4_92(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x12724D8", Offset = "0x12724D8", VA = "0x12724D8")]
			internal int <.cctor>b__4_93(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x12724E4", Offset = "0x12724E4", VA = "0x12724E4")]
			internal int <.cctor>b__4_94(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x1272530", Offset = "0x1272530", VA = "0x1272530")]
			internal int <.cctor>b__4_95(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x127253C", Offset = "0x127253C", VA = "0x127253C")]
			internal int <.cctor>b__4_96(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x1272544", Offset = "0x1272544", VA = "0x1272544")]
			internal int <.cctor>b__4_97(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x1272550", Offset = "0x1272550", VA = "0x1272550")]
			internal int <.cctor>b__4_98(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x127255C", Offset = "0x127255C", VA = "0x127255C")]
			internal int <.cctor>b__4_99(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x1272568", Offset = "0x1272568", VA = "0x1272568")]
			internal int <.cctor>b__4_100(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x1272574", Offset = "0x1272574", VA = "0x1272574")]
			internal int <.cctor>b__4_101(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x1272580", Offset = "0x1272580", VA = "0x1272580")]
			internal int <.cctor>b__4_102(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x127258C", Offset = "0x127258C", VA = "0x127258C")]
			internal int <.cctor>b__4_103(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x1272598", Offset = "0x1272598", VA = "0x1272598")]
			internal int <.cctor>b__4_104(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x12725A4", Offset = "0x12725A4", VA = "0x12725A4")]
			internal int <.cctor>b__4_105(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011BE")]
			[Address(RVA = "0x12725B0", Offset = "0x12725B0", VA = "0x12725B0")]
			internal int <.cctor>b__4_106(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x12725BC", Offset = "0x12725BC", VA = "0x12725BC")]
			internal int <.cctor>b__4_107(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x127260C", Offset = "0x127260C", VA = "0x127260C")]
			internal int <.cctor>b__4_108(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x1272614", Offset = "0x1272614", VA = "0x1272614")]
			internal int <.cctor>b__4_109(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x1272620", Offset = "0x1272620", VA = "0x1272620")]
			internal int <.cctor>b__4_110(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x127262C", Offset = "0x127262C", VA = "0x127262C")]
			internal int <.cctor>b__4_111(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x1272638", Offset = "0x1272638", VA = "0x1272638")]
			internal int <.cctor>b__4_112(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x1272644", Offset = "0x1272644", VA = "0x1272644")]
			internal int <.cctor>b__4_113(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x1272650", Offset = "0x1272650", VA = "0x1272650")]
			internal int <.cctor>b__4_114(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x127265C", Offset = "0x127265C", VA = "0x127265C")]
			internal int <.cctor>b__4_115(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x1272668", Offset = "0x1272668", VA = "0x1272668")]
			internal int <.cctor>b__4_116(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x1272674", Offset = "0x1272674", VA = "0x1272674")]
			internal int <.cctor>b__4_117(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x1272680", Offset = "0x1272680", VA = "0x1272680")]
			internal int <.cctor>b__4_118(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x12726D0", Offset = "0x12726D0", VA = "0x12726D0")]
			internal int <.cctor>b__4_119(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x12726D8", Offset = "0x12726D8", VA = "0x12726D8")]
			internal int <.cctor>b__4_120(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011CD")]
			[Address(RVA = "0x12726E4", Offset = "0x12726E4", VA = "0x12726E4")]
			internal int <.cctor>b__4_121(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x12726F0", Offset = "0x12726F0", VA = "0x12726F0")]
			internal int <.cctor>b__4_122(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x12726FC", Offset = "0x12726FC", VA = "0x12726FC")]
			internal int <.cctor>b__4_123(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x1272708", Offset = "0x1272708", VA = "0x1272708")]
			internal int <.cctor>b__4_124(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x1272758", Offset = "0x1272758", VA = "0x1272758")]
			internal int <.cctor>b__4_125(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x1272760", Offset = "0x1272760", VA = "0x1272760")]
			internal int <.cctor>b__4_126(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x127276C", Offset = "0x127276C", VA = "0x127276C")]
			internal int <.cctor>b__4_127(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x1272778", Offset = "0x1272778", VA = "0x1272778")]
			internal int <.cctor>b__4_128(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x1272784", Offset = "0x1272784", VA = "0x1272784")]
			internal int <.cctor>b__4_129(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x1272790", Offset = "0x1272790", VA = "0x1272790")]
			internal int <.cctor>b__4_130(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x12727E0", Offset = "0x12727E0", VA = "0x12727E0")]
			internal int <.cctor>b__4_131(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x12727E8", Offset = "0x12727E8", VA = "0x12727E8")]
			internal int <.cctor>b__4_132(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x12727F4", Offset = "0x12727F4", VA = "0x12727F4")]
			internal int <.cctor>b__4_133(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x1272800", Offset = "0x1272800", VA = "0x1272800")]
			internal int <.cctor>b__4_134(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x127280C", Offset = "0x127280C", VA = "0x127280C")]
			internal int <.cctor>b__4_135(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x127285C", Offset = "0x127285C", VA = "0x127285C")]
			internal int <.cctor>b__4_136(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x1272868", Offset = "0x1272868", VA = "0x1272868")]
			internal int <.cctor>b__4_137(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x1272874", Offset = "0x1272874", VA = "0x1272874")]
			internal int <.cctor>b__4_138(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x12728C4", Offset = "0x12728C4", VA = "0x12728C4")]
			internal int <.cctor>b__4_139(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x12728D0", Offset = "0x12728D0", VA = "0x12728D0")]
			internal int <.cctor>b__4_140(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x12728DC", Offset = "0x12728DC", VA = "0x12728DC")]
			internal int <.cctor>b__4_141(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x127292C", Offset = "0x127292C", VA = "0x127292C")]
			internal int <.cctor>b__4_142(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x1272938", Offset = "0x1272938", VA = "0x1272938")]
			internal int <.cctor>b__4_143(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x1272988", Offset = "0x1272988", VA = "0x1272988")]
			internal int <.cctor>b__4_144(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x1272994", Offset = "0x1272994", VA = "0x1272994")]
			internal int <.cctor>b__4_145(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x12729E4", Offset = "0x12729E4", VA = "0x12729E4")]
			internal int <.cctor>b__4_146(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x12729F0", Offset = "0x12729F0", VA = "0x12729F0")]
			internal int <.cctor>b__4_147(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x1272A40", Offset = "0x1272A40", VA = "0x1272A40")]
			internal int <.cctor>b__4_148(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x1272A4C", Offset = "0x1272A4C", VA = "0x1272A4C")]
			internal int <.cctor>b__4_149(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x1272A58", Offset = "0x1272A58", VA = "0x1272A58")]
			internal int <.cctor>b__4_150(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x1272AA8", Offset = "0x1272AA8", VA = "0x1272AA8")]
			internal int <.cctor>b__4_151(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x1272AB4", Offset = "0x1272AB4", VA = "0x1272AB4")]
			internal int <.cctor>b__4_152(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x1272AC0", Offset = "0x1272AC0", VA = "0x1272AC0")]
			internal int <.cctor>b__4_153(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x1272B10", Offset = "0x1272B10", VA = "0x1272B10")]
			internal int <.cctor>b__4_154(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011EF")]
			[Address(RVA = "0x1272B1C", Offset = "0x1272B1C", VA = "0x1272B1C")]
			internal int <.cctor>b__4_155(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x1272B28", Offset = "0x1272B28", VA = "0x1272B28")]
			internal int <.cctor>b__4_156(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x1272B78", Offset = "0x1272B78", VA = "0x1272B78")]
			internal int <.cctor>b__4_157(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x1272B84", Offset = "0x1272B84", VA = "0x1272B84")]
			internal int <.cctor>b__4_158(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x1272BD4", Offset = "0x1272BD4", VA = "0x1272BD4")]
			internal int <.cctor>b__4_159(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x1272BE0", Offset = "0x1272BE0", VA = "0x1272BE0")]
			internal int <.cctor>b__4_160(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x1272C30", Offset = "0x1272C30", VA = "0x1272C30")]
			internal int <.cctor>b__4_161(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x1272C3C", Offset = "0x1272C3C", VA = "0x1272C3C")]
			internal int <.cctor>b__4_162(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x1272C48", Offset = "0x1272C48", VA = "0x1272C48")]
			internal int <.cctor>b__4_163(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x1272C54", Offset = "0x1272C54", VA = "0x1272C54")]
			internal int <.cctor>b__4_164(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x1272C60", Offset = "0x1272C60", VA = "0x1272C60")]
			internal int <.cctor>b__4_165(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x1272C6C", Offset = "0x1272C6C", VA = "0x1272C6C")]
			internal int <.cctor>b__4_166(int n)
			{
				return default(int);
			}

			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x1272C74", Offset = "0x1272C74", VA = "0x1272C74")]
			internal int <.cctor>b__4_167(int n)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, Func<int, int>> Languages;

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x999C08", Offset = "0x999C08", VA = "0x999C08")]
		public static string GetPluralKey(string languageCode, string baseKey, int count)
		{
			return null;
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x999D64", Offset = "0x999D64", VA = "0x999D64")]
		public static string GetPluralKey(string baseKey, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x999E14", Offset = "0x999E14", VA = "0x999E14")]
		public PluralForms()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	internal class RuntimeLocalizedAssetLoader : ILocalizedAssetLoader
	{
		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Type GameObjectType;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Type AudioClipType;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Type TextureType;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Type TextAssetType;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Type FontType;

		[Token(Token = "0x60011FC")]
		public T LoadAsset<T>(string assetKey, string languageCode) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x908460", Offset = "0x908460", VA = "0x908460")]
		private string GetAssetFolderPath(Type assetType, string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x9087C8", Offset = "0x9087C8", VA = "0x9087C8")]
		public RuntimeLocalizedAssetLoader()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class LanguageButton : MonoBehaviour
	{
		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string languageCode;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject highlight;

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xBA8400", Offset = "0xBA8400", VA = "0xBA8400")]
		public void Click()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xBA8538", Offset = "0xBA8538", VA = "0xBA8538")]
		public void Highlight()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xBA8558", Offset = "0xBA8558", VA = "0xBA8558")]
		public void Unhighlight()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xBA8578", Offset = "0xBA8578", VA = "0xBA8578")]
		public LanguageButton()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class LanguagePanel : MonoBehaviour
	{
		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LanguagePanel instance;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LanguageButton[] languageButtons;

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xBAB8E4", Offset = "0xBAB8E4", VA = "0xBAB8E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xBAB934", Offset = "0xBAB934", VA = "0xBAB934")]
		private void Start()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xBA8488", Offset = "0xBA8488", VA = "0xBA8488")]
		public void PressLanguageButton(LanguageButton langButton)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xBABA34", Offset = "0xBABA34", VA = "0xBABA34")]
		private void UnhighlightAllButtons()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xBAB938", Offset = "0xBAB938", VA = "0xBAB938")]
		private void HighlightCurrentLanguageButton()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xBABA9C", Offset = "0xBABA9C", VA = "0xBABA9C")]
		public LanguagePanel()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x53E620", Offset = "0x53E620")]
	public class LocalizedTextMeshPro : MonoBehaviour
	{
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string localizedKey;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI textObject;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x543424", Offset = "0x543424")]
		public bool toUpperCase;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool toLowerCase;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool withColon;

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x87FC3C", Offset = "0x87FC3C", VA = "0x87FC3C")]
		private void Start()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x87FE4C", Offset = "0x87FE4C", VA = "0x87FE4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x87FD58", Offset = "0x87FD58", VA = "0x87FD58")]
		private void OnChangeLanguage(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x87FF64", Offset = "0x87FF64", VA = "0x87FF64")]
		public LocalizedTextMeshPro()
		{
		}
	}
}
namespace SmartLocalization.Editor
{
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x53E680", Offset = "0x53E680")]
	public class LocalizedText : MonoBehaviour
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string localizedKey;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text textObject;

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x87F920", Offset = "0x87F920", VA = "0x87F920")]
		private void Start()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x87FAD0", Offset = "0x87FAD0", VA = "0x87FAD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x87FA3C", Offset = "0x87FA3C", VA = "0x87FA3C")]
		private void OnChangeLanguage(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x87FBE8", Offset = "0x87FBE8", VA = "0x87FBE8")]
		public LocalizedText()
		{
		}
	}
}
namespace ManasparkAssets.HierarchyDividers
{
	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x53E6E0", Offset = "0x53E6E0")]
	public class DividerPreset_SCO : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20002A6")]
		public class Divider
		{
			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public int ID;

			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string PreSuffix;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int PreSuffixCount;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string Label;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool BoldFont;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool ItalicFont;

			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			public bool ColoredFont;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
			public bool ColoredBG;

			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool HasOverrideColor_leftSprite;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool HasOverrideColor_rightSprite;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color FontColor;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Color BGColor;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Color OverrideColor_leftSprite;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Color OverrideColor_rightSprite;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public bool HasSprite_left;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
			public bool HasSprite_right;

			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Sprite LeftSprite;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Sprite RightSprite;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public float LeftScale;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public float RightScale;

			[Token(Token = "0x6001213")]
			[Address(RVA = "0x7FF54C", Offset = "0x7FF54C", VA = "0x7FF54C")]
			public void SetLabel()
			{
			}

			[Token(Token = "0x6001214")]
			[Address(RVA = "0x7FF654", Offset = "0x7FF654", VA = "0x7FF654")]
			public Divider()
			{
			}
		}

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		public List<Divider> Dividers;

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x8CF978", Offset = "0x8CF978", VA = "0x8CF978")]
		public DividerPreset_SCO()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public interface IHierarchyDivider
	{
		[Token(Token = "0x170001AC")]
		string DividerLabel
		{
			[Token(Token = "0x6001215")]
			get;
		}

		[Token(Token = "0x170001AD")]
		Transform GetTransform
		{
			[Token(Token = "0x6001216")]
			get;
		}
	}
}
namespace Mirror
{
	[StructLayout(3, CharSet = CharSet.Auto)]
	[Token(Token = "0x20002AD")]
	public static class GeneratedNetworkCode
	{
		[Token(Token = "0x6001217")]
		[Address(RVA = "0x6BFE4C", Offset = "0x6BFE4C", VA = "0x6BFE4C")]
		public static ReadyMessage _Read_Mirror.ReadyMessage(NetworkReader reader)
		{
			return default(ReadyMessage);
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x6BFE54", Offset = "0x6BFE54", VA = "0x6BFE54")]
		public static void _Write_Mirror.ReadyMessage(NetworkWriter writer, ReadyMessage value)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x6BFE58", Offset = "0x6BFE58", VA = "0x6BFE58")]
		public static NotReadyMessage _Read_Mirror.NotReadyMessage(NetworkReader reader)
		{
			return default(NotReadyMessage);
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x6BFE60", Offset = "0x6BFE60", VA = "0x6BFE60")]
		public static void _Write_Mirror.NotReadyMessage(NetworkWriter writer, NotReadyMessage value)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x6BFE64", Offset = "0x6BFE64", VA = "0x6BFE64")]
		public static AddPlayerMessage _Read_Mirror.AddPlayerMessage(NetworkReader reader)
		{
			return default(AddPlayerMessage);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x6BFE6C", Offset = "0x6BFE6C", VA = "0x6BFE6C")]
		public static void _Write_Mirror.AddPlayerMessage(NetworkWriter writer, AddPlayerMessage value)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x6BFE70", Offset = "0x6BFE70", VA = "0x6BFE70")]
		public static SceneMessage _Read_Mirror.SceneMessage(NetworkReader reader)
		{
			return default(SceneMessage);
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x6BFF0C", Offset = "0x6BFF0C", VA = "0x6BFF0C")]
		public static SceneOperation _Read_Mirror.SceneOperation(NetworkReader reader)
		{
			return default(SceneOperation);
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x6BFF70", Offset = "0x6BFF70", VA = "0x6BFF70")]
		public static void _Write_Mirror.SceneMessage(NetworkWriter writer, SceneMessage value)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x6C0008", Offset = "0x6C0008", VA = "0x6C0008")]
		public static void _Write_Mirror.SceneOperation(NetworkWriter writer, SceneOperation value)
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x6C007C", Offset = "0x6C007C", VA = "0x6C007C")]
		public static CommandMessage _Read_Mirror.CommandMessage(NetworkReader reader)
		{
			return default(CommandMessage);
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x6C0150", Offset = "0x6C0150", VA = "0x6C0150")]
		public static void _Write_Mirror.CommandMessage(NetworkWriter writer, CommandMessage value)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x6C01F8", Offset = "0x6C01F8", VA = "0x6C01F8")]
		public static RpcMessage _Read_Mirror.RpcMessage(NetworkReader reader)
		{
			return default(RpcMessage);
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x6C02CC", Offset = "0x6C02CC", VA = "0x6C02CC")]
		public static void _Write_Mirror.RpcMessage(NetworkWriter writer, RpcMessage value)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x6C0374", Offset = "0x6C0374", VA = "0x6C0374")]
		public static SpawnMessage _Read_Mirror.SpawnMessage(NetworkReader reader)
		{
			return default(SpawnMessage);
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x6C04F8", Offset = "0x6C04F8", VA = "0x6C04F8")]
		public static void _Write_Mirror.SpawnMessage(NetworkWriter writer, SpawnMessage value)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x6C060C", Offset = "0x6C060C", VA = "0x6C060C")]
		public static ChangeOwnerMessage _Read_Mirror.ChangeOwnerMessage(NetworkReader reader)
		{
			return default(ChangeOwnerMessage);
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x6C06B0", Offset = "0x6C06B0", VA = "0x6C06B0")]
		public static void _Write_Mirror.ChangeOwnerMessage(NetworkWriter writer, ChangeOwnerMessage value)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x6C074C", Offset = "0x6C074C", VA = "0x6C074C")]
		public static ObjectSpawnStartedMessage _Read_Mirror.ObjectSpawnStartedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnStartedMessage);
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x6C0754", Offset = "0x6C0754", VA = "0x6C0754")]
		public static void _Write_Mirror.ObjectSpawnStartedMessage(NetworkWriter writer, ObjectSpawnStartedMessage value)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x6C0758", Offset = "0x6C0758", VA = "0x6C0758")]
		public static ObjectSpawnFinishedMessage _Read_Mirror.ObjectSpawnFinishedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnFinishedMessage);
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x6C0760", Offset = "0x6C0760", VA = "0x6C0760")]
		public static void _Write_Mirror.ObjectSpawnFinishedMessage(NetworkWriter writer, ObjectSpawnFinishedMessage value)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x6C0764", Offset = "0x6C0764", VA = "0x6C0764")]
		public static ObjectDestroyMessage _Read_Mirror.ObjectDestroyMessage(NetworkReader reader)
		{
			return default(ObjectDestroyMessage);
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x6C07D0", Offset = "0x6C07D0", VA = "0x6C07D0")]
		public static void _Write_Mirror.ObjectDestroyMessage(NetworkWriter writer, ObjectDestroyMessage value)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x6C0844", Offset = "0x6C0844", VA = "0x6C0844")]
		public static ObjectHideMessage _Read_Mirror.ObjectHideMessage(NetworkReader reader)
		{
			return default(ObjectHideMessage);
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x6C08B0", Offset = "0x6C08B0", VA = "0x6C08B0")]
		public static void _Write_Mirror.ObjectHideMessage(NetworkWriter writer, ObjectHideMessage value)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x6C0924", Offset = "0x6C0924", VA = "0x6C0924")]
		public static EntityStateMessage _Read_Mirror.EntityStateMessage(NetworkReader reader)
		{
			return default(EntityStateMessage);
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x6C09B0", Offset = "0x6C09B0", VA = "0x6C09B0")]
		public static void _Write_Mirror.EntityStateMessage(NetworkWriter writer, EntityStateMessage value)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x6C0A38", Offset = "0x6C0A38", VA = "0x6C0A38")]
		public static NetworkPingMessage _Read_Mirror.NetworkPingMessage(NetworkReader reader)
		{
			return default(NetworkPingMessage);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x6C0A9C", Offset = "0x6C0A9C", VA = "0x6C0A9C")]
		public static void _Write_Mirror.NetworkPingMessage(NetworkWriter writer, NetworkPingMessage value)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x6C0B10", Offset = "0x6C0B10", VA = "0x6C0B10")]
		public static NetworkPongMessage _Read_Mirror.NetworkPongMessage(NetworkReader reader)
		{
			return default(NetworkPongMessage);
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x6C0B98", Offset = "0x6C0B98", VA = "0x6C0B98")]
		public static void _Write_Mirror.NetworkPongMessage(NetworkWriter writer, NetworkPongMessage value)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x6C0C20", Offset = "0x6C0C20", VA = "0x6C0C20")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x54853C", Offset = "0x54853C")]
		public static void InitReadWriters()
		{
		}
	}
}
