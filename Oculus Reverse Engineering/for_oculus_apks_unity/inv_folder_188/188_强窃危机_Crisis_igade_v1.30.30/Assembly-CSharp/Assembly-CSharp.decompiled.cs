using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using AOT;
using BezierSolution;
using Bhaptics.Tact;
using Bhaptics.Tact.Unity;
using CrisisVRigade.UI;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using NewtonVR;
using Oculus.Platform;
using Oculus.Platform.Models;
using Photon.Chat;
using Photon.Pun;
using Photon.Pun.Demo.Shared;
using Photon.Pun.Demo.SlotRacer.Utils;
using Photon.Pun.UtilityScripts;
using Photon.Realtime;
using RootMotion.FinalIK;
using Sumalab.Util;
using Sumalab_Hands;
using Sumalab_Weapons;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.Video;
using UnitySA.Utility;
using VRigade.online;
using VRrigade;
using Viveport.Internal;
using VolumetricLines;
using ch.sycoforge.Decal;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AndroidBuildDisable : MonoBehaviour
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0xAA785C", Offset = "0xAA785C", VA = "0xAA785C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xAA7880", Offset = "0xAA7880", VA = "0xAA7880")]
	public AndroidBuildDisable()
	{
	}
}
[Token(Token = "0x2000003")]
public class BhapticsAndroidBasicExample : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000004")]
	public struct BhapticsAndroidExampleButtons
	{
		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button ping;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Button toggle;
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BhapticsAndroidExampleButtons talButtons;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BhapticsAndroidExampleButtons suitButtons;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BhapticsAndroidExampleButtons armsLeftButtons;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BhapticsAndroidExampleButtons armsRightButtons;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text pairedDevicesCount;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xAA7888", Offset = "0xAA7888", VA = "0xAA7888")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xAA792C", Offset = "0xAA792C", VA = "0xAA792C")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xAA7B88", Offset = "0xAA7B88", VA = "0xAA7B88")]
	public void PingTactal()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xAA7C00", Offset = "0xAA7C00", VA = "0xAA7C00")]
	public void PingTactSuit()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xAA7C20", Offset = "0xAA7C20", VA = "0xAA7C20")]
	public void PingTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xAA7C40", Offset = "0xAA7C40", VA = "0xAA7C40")]
	public void ToggleTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xAA7BA8", Offset = "0xAA7BA8", VA = "0xAA7BA8")]
	private void PingPairedDevice(PositionType deviceType)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xAA7D40", Offset = "0xAA7D40", VA = "0xAA7D40")]
	public BhapticsAndroidBasicExample()
	{
	}
}
[Token(Token = "0x2000005")]
public class BhapticsAndroidScanExample : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_ControlButton[] controlButtons;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool open;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button activeButton;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xAA7D48", Offset = "0xAA7D48", VA = "0xAA7D48")]
	private void Start()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xAA7F34", Offset = "0xAA7F34", VA = "0xAA7F34")]
	private void Refresh()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xAA8180", Offset = "0xAA8180", VA = "0xAA8180")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xAA8198", Offset = "0xAA8198", VA = "0xAA8198")]
	private void Open()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xAA7E58", Offset = "0xAA7E58", VA = "0xAA7E58")]
	private void Close()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xAA8274", Offset = "0xAA8274", VA = "0xAA8274")]
	public BhapticsAndroidScanExample()
	{
	}
}
[Token(Token = "0x2000006")]
public class BhapticsCharacterController : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpSpeed;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gravity;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationSpeedH;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationSpeedV;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isEnableControl;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 moveDirection;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HapticSender tactSender;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Shooting with raycasting or with Physical bullet")]
	public bool IsRaycastingShooting;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform shootingPoint;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[Header("Physical bullet setting")]
	private GameObject bulletPrefab;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterController characterController;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xAA827C", Offset = "0xAA827C", VA = "0xAA827C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xAA83B8", Offset = "0xAA83B8", VA = "0xAA83B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xAA83D8", Offset = "0xAA83D8", VA = "0xAA83D8")]
	private void ShootPlayer()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xAA8A34", Offset = "0xAA8A34", VA = "0xAA8A34")]
	private void RotatePlayer()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xAA88DC", Offset = "0xAA88DC", VA = "0xAA88DC")]
	private void MovePlayer()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xAA8C74", Offset = "0xAA8C74", VA = "0xAA8C74")]
	public BhapticsCharacterController()
	{
	}
}
[Token(Token = "0x2000007")]
public class BhapticsCustomHapticReceiver : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PositionTag PositionTag;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xAA8CF0", Offset = "0xAA8CF0", VA = "0xAA8CF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xAA8F08", Offset = "0xAA8F08", VA = "0xAA8F08")]
	private void OnTriggerEnter(Collider bullet)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xAA90AC", Offset = "0xAA90AC", VA = "0xAA90AC")]
	private void OnCollisionEnter(Collision bullet)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xAA8FC4", Offset = "0xAA8FC4", VA = "0xAA8FC4")]
	private void Handle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xAA8B64", Offset = "0xAA8B64", VA = "0xAA8B64")]
	public void ReflectHandle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xAA9184", Offset = "0xAA9184", VA = "0xAA9184")]
	public BhapticsCustomHapticReceiver()
	{
	}
}
[Token(Token = "0x2000008")]
public class BhapticsDotPointControllerExample : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClipPositionType clipPositionType;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<DotPoint> dotPointList;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string key;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int duration;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xAA9194", Offset = "0xAA9194", VA = "0xAA9194")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xAA9208", Offset = "0xAA9208", VA = "0xAA9208")]
	private void Update()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xAA957C", Offset = "0xAA957C", VA = "0xAA957C")]
	public void Toggle(DotPoint dot)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xAA968C", Offset = "0xAA968C", VA = "0xAA968C")]
	private bool AddToList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xAA95F8", Offset = "0xAA95F8", VA = "0xAA95F8")]
	private bool RemoveAtList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xAA9768", Offset = "0xAA9768", VA = "0xAA9768")]
	public BhapticsDotPointControllerExample()
	{
	}
}
[Token(Token = "0x2000009")]
public class BhapticsDotPointExample : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int motorIndex;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int motorIntensity;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BhapticsDotPointControllerExample controller;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DotPoint dotPoint;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xAA97B0", Offset = "0xAA97B0", VA = "0xAA97B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xAA9848", Offset = "0xAA9848", VA = "0xAA9848")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xAA98CC", Offset = "0xAA98CC", VA = "0xAA98CC")]
	public BhapticsDotPointExample()
	{
	}
}
[Token(Token = "0x200000A")]
public class BhapticsFpsView : MonoBehaviour
{
	[Token(Token = "0x200000B")]
	[CompilerGenerated]
	private sealed class <FPS>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsFpsView <>4__this;

		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] <buffer>5__2;

		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <frequency>5__4;

		[Token(Token = "0x4000029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <initial>5__5;

		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <lastFrameCount>5__6;

		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <lastTime>5__7;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600002F")]
			[Address(RVA = "0xAAA1E8", Offset = "0xAAA1E8", VA = "0xAAA1E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000031")]
			[Address(RVA = "0xAAA230", Offset = "0xAAA230", VA = "0xAAA230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600002C")]
		[Address(RVA = "0xAA99B4", Offset = "0xAA99B4", VA = "0xAA99B4")]
		[DebuggerHidden]
		public <FPS>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600002D")]
		[Address(RVA = "0xAA9BA0", Offset = "0xAA9BA0", VA = "0xAA9BA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0xAA9BA4", Offset = "0xAA9BA4", VA = "0xAA9BA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000030")]
		[Address(RVA = "0xAAA1F0", Offset = "0xAAA1F0", VA = "0xAAA1F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text fpsText;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xAA98DC", Offset = "0xAA98DC", VA = "0xAA98DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xAA992C", Offset = "0xAA992C", VA = "0xAA992C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xAA994C", Offset = "0xAA994C", VA = "0xAA994C")]
	[IteratorStateMachine(typeof(<FPS>d__3))]
	private IEnumerator FPS()
	{
		return null;
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xAA99DC", Offset = "0xAA99DC", VA = "0xAA99DC")]
	private float Average(float[] floats)
	{
		return default(float);
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xAA9A44", Offset = "0xAA9A44", VA = "0xAA9A44")]
	public float Percentile(float[] sequence, float excelPercentile)
	{
		return default(float);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xAA9B98", Offset = "0xAA9B98", VA = "0xAA9B98")]
	public BhapticsFpsView()
	{
	}
}
[Token(Token = "0x200000C")]
public class BhapticsHapticBullet : MonoBehaviour
{
	[Token(Token = "0x6000032")]
	[Address(RVA = "0xAAA238", Offset = "0xAAA238", VA = "0xAAA238")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xAAA2A8", Offset = "0xAAA2A8", VA = "0xAAA2A8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xAAA314", Offset = "0xAAA314", VA = "0xAAA314")]
	public BhapticsHapticBullet()
	{
	}
}
[Token(Token = "0x200000D")]
public class BhapticsHapticClipExample : MonoBehaviour
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClip hapticClip;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xAAA31C", Offset = "0xAAA31C", VA = "0xAAA31C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xAAA3A4", Offset = "0xAAA3A4", VA = "0xAAA3A4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xAAA430", Offset = "0xAAA430", VA = "0xAAA430")]
	public BhapticsHapticClipExample()
	{
	}
}
[Token(Token = "0x200000E")]
public class BhapticsIdentifierPlayExample : MonoBehaviour
{
	[Token(Token = "0x200000F")]
	[CompilerGenerated]
	private sealed class <PlayCor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsIdentifierPlayExample <>4__this;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <bufferSize>5__2;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <index>5__3;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <identifier>5__4;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000041")]
			[Address(RVA = "0xAAA84C", Offset = "0xAAA84C", VA = "0xAAA84C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000043")]
			[Address(RVA = "0xAAA894", Offset = "0xAAA894", VA = "0xAAA894", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0xAAA60C", Offset = "0xAAA60C", VA = "0xAAA60C")]
		[DebuggerHidden]
		public <PlayCor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0xAAA63C", Offset = "0xAAA63C", VA = "0xAAA63C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0xAAA640", Offset = "0xAAA640", VA = "0xAAA640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0xAAA854", Offset = "0xAAA854", VA = "0xAAA854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip clip;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text identifierText;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool applyIdentifier;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xAAA438", Offset = "0xAAA438", VA = "0xAAA438")]
	private void Start()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xAAA498", Offset = "0xAAA498", VA = "0xAAA498")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xAAA4BC", Offset = "0xAAA4BC", VA = "0xAAA4BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xAAA43C", Offset = "0xAAA43C", VA = "0xAAA43C")]
	private void Play()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xAAA5A4", Offset = "0xAAA5A4", VA = "0xAAA5A4")]
	[IteratorStateMachine(typeof(<PlayCor>d__8))]
	private IEnumerator PlayCor()
	{
		return null;
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xAAA634", Offset = "0xAAA634", VA = "0xAAA634")]
	public BhapticsIdentifierPlayExample()
	{
	}
}
[Token(Token = "0x2000010")]
public class BhapticsIsConnectIsPlayingExample : MonoBehaviour
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip[] clips;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text isConnectText;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text clipText;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text isPlayingText;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xAAA89C", Offset = "0xAAA89C", VA = "0xAAA89C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xAAAA6C", Offset = "0xAAAA6C", VA = "0xAAAA6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xAAB358", Offset = "0xAAB358", VA = "0xAAB358")]
	private void PlayClips()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xAAB3BC", Offset = "0xAAB3BC", VA = "0xAAB3BC")]
	public BhapticsIsConnectIsPlayingExample()
	{
	}
}
[Token(Token = "0x2000011")]
public class BhapticsLongTest : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xAAB3C4", Offset = "0xAAB3C4", VA = "0xAAB3C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xAAB448", Offset = "0xAAB448", VA = "0xAAB448")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xAAB4AC", Offset = "0xAAB4AC", VA = "0xAAB4AC")]
	private void ReloadScene()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xAAB5D0", Offset = "0xAAB5D0", VA = "0xAAB5D0")]
	public BhapticsLongTest()
	{
	}
}
[Token(Token = "0x2000012")]
public class BhapticsProfiler : MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int numOfTactClips;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticClip[] tactClips;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hapticEnable;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int targetFrameRate;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xAAB5D8", Offset = "0xAAB5D8", VA = "0xAAB5D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xAAB638", Offset = "0xAAB638", VA = "0xAAB638")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xAAB7D8", Offset = "0xAAB7D8", VA = "0xAAB7D8")]
	public BhapticsProfiler()
	{
	}
}
[Token(Token = "0x2000013")]
public class BhapticsReflectExample : MonoBehaviour
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmsHapticClip armsHapticClip;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isReflect;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xAAB7F0", Offset = "0xAAB7F0", VA = "0xAAB7F0")]
	public void Play()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xAAB878", Offset = "0xAAB878", VA = "0xAAB878")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xAAB904", Offset = "0xAAB904", VA = "0xAAB904")]
	public void OnClickToggle(Toggle toggle)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xAAB9BC", Offset = "0xAAB9BC", VA = "0xAAB9BC")]
	public BhapticsReflectExample()
	{
	}
}
[Token(Token = "0x2000014")]
public class BhapticsRotate : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isRandom;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 axis;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xAAB9C4", Offset = "0xAAB9C4", VA = "0xAAB9C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xAABA18", Offset = "0xAABA18", VA = "0xAABA18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xAABA64", Offset = "0xAABA64", VA = "0xAABA64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xAABA90", Offset = "0xAABA90", VA = "0xAABA90")]
	private void RandomAxis()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xAABAFC", Offset = "0xAABAFC", VA = "0xAABAFC")]
	public BhapticsRotate()
	{
	}
}
[Token(Token = "0x2000015")]
public class BhapticsRotateExample : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VestHapticClip vestHapticClip;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public Text angleXText;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text offsetYText;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float angleX;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float offsetY;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xAABB14", Offset = "0xAABB14", VA = "0xAABB14")]
	public void PlayWithRotate()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xAABBBC", Offset = "0xAABBBC", VA = "0xAABBBC")]
	public void Stop()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xAABC48", Offset = "0xAABC48", VA = "0xAABC48")]
	public void OnAngleXChanged(Slider slider)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xAABDE4", Offset = "0xAABDE4", VA = "0xAABDE4")]
	public void OnOffsetYChanged(Slider slider)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xAABF9C", Offset = "0xAABF9C", VA = "0xAABF9C")]
	public BhapticsRotateExample()
	{
	}
}
[Token(Token = "0x2000016")]
public class BhapticsShootingCharacter : MonoBehaviour
{
	[Token(Token = "0x2000017")]
	[CompilerGenerated]
	private sealed class <RepeatShoot>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsShootingCharacter <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000068")]
			[Address(RVA = "0xAAC688", Offset = "0xAAC688", VA = "0xAAC688", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600006A")]
			[Address(RVA = "0xAAC6D0", Offset = "0xAAC6D0", VA = "0xAAC6D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0xAAC208", Offset = "0xAAC208", VA = "0xAAC208")]
		[DebuggerHidden]
		public <RepeatShoot>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0xAAC598", Offset = "0xAAC598", VA = "0xAAC598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000067")]
		[Address(RVA = "0xAAC59C", Offset = "0xAAC59C", VA = "0xAAC59C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000069")]
		[Address(RVA = "0xAAC690", Offset = "0xAAC690", VA = "0xAAC690", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform shootPointLeft;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform shootPointRight;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject bulletPrefab;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space]
	[SerializeField]
	private Transform[] lookingTransforms;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int shootCount;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float shootDelay;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float bulletSpeed;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xAABFA4", Offset = "0xAABFA4", VA = "0xAABFA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xAABFF4", Offset = "0xAABFF4", VA = "0xAABFF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xAAC178", Offset = "0xAAC178", VA = "0xAAC178")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xAAC200", Offset = "0xAAC200", VA = "0xAAC200")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xAAC198", Offset = "0xAAC198", VA = "0xAAC198")]
	[IteratorStateMachine(typeof(<RepeatShoot>d__13))]
	private IEnumerator RepeatShoot()
	{
		return null;
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xAAC230", Offset = "0xAAC230", VA = "0xAAC230")]
	private void ShootTarget(int hand)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xAABFF8", Offset = "0xAABFF8", VA = "0xAABFF8")]
	private void Looking()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xAAC57C", Offset = "0xAAC57C", VA = "0xAAC57C")]
	public BhapticsShootingCharacter()
	{
	}
}
[Token(Token = "0x2000018")]
public class BhapticsStreamingTest : MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HapticClip clip;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xAAC6D8", Offset = "0xAAC6D8", VA = "0xAAC6D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xAAC72C", Offset = "0xAAC72C", VA = "0xAAC72C")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xAAC730", Offset = "0xAAC730", VA = "0xAAC730")]
	private void Check()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xAACC78", Offset = "0xAACC78", VA = "0xAACC78")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xAACCC8", Offset = "0xAACCC8", VA = "0xAACCC8")]
	public BhapticsStreamingTest()
	{
	}
}
[Token(Token = "0x2000019")]
public class BhapticsTeleportPoint : MonoBehaviour
{
	[Token(Token = "0x6000070")]
	[Address(RVA = "0xAACCD0", Offset = "0xAACCD0", VA = "0xAACCD0")]
	public BhapticsTeleportPoint()
	{
	}
}
[Token(Token = "0x200001A")]
public class BhapticsTestScript : MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider intensitySlider;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider durationSlider;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider offsetXSlider;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider offsetYSlider;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle reflectToggle;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button openBluetoothSettingButton;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button playButton;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Button toggleEnableAllButton;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xAACCD8", Offset = "0xAACCD8", VA = "0xAACCD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xAACEB8", Offset = "0xAACEB8", VA = "0xAACEB8")]
	private void ToggleEnable()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xAAD028", Offset = "0xAAD028", VA = "0xAAD028")]
	private void Open()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xAAD078", Offset = "0xAAD078", VA = "0xAAD078")]
	private void Play()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xAAD24C", Offset = "0xAAD24C", VA = "0xAAD24C")]
	public BhapticsTestScript()
	{
	}
}
[Token(Token = "0x200001B")]
public class BhapticsVisualFeedbackOnMotors : MonoBehaviour
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PositionType tactPositionType;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject visualMotorsObject;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Gradient hapticColor;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] visualMotors;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xAAD254", Offset = "0xAAD254", VA = "0xAAD254")]
	private void Start()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xAAD4F4", Offset = "0xAAD4F4", VA = "0xAAD4F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xAAD5B8", Offset = "0xAAD5B8", VA = "0xAAD5B8")]
	private void ShowFeedbackEffect(int[] feedback)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xAAD704", Offset = "0xAAD704", VA = "0xAAD704")]
	public BhapticsVisualFeedbackOnMotors()
	{
	}
}
[Token(Token = "0x200001C")]
public class BhapticsVRBody : MonoBehaviour
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform camera;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xAAD70C", Offset = "0xAAD70C", VA = "0xAAD70C")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xAAD710", Offset = "0xAAD710", VA = "0xAAD710")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xAAD7FC", Offset = "0xAAD7FC", VA = "0xAAD7FC")]
	public BhapticsVRBody()
	{
	}
}
[Token(Token = "0x200001D")]
public class BhapticsWidgetInstiate : MonoBehaviour
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_UI widgetPrefab;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xAAD804", Offset = "0xAAD804", VA = "0xAAD804")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xAAD854", Offset = "0xAAD854", VA = "0xAAD854")]
	private void CreateWidget()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xAAD8C4", Offset = "0xAAD8C4", VA = "0xAAD8C4")]
	public BhapticsWidgetInstiate()
	{
	}
}
[Token(Token = "0x200001E")]
[CreateAssetMenu(fileName = "Data", menuName = "Bhaptics/Create Config", order = 1)]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Windows Settings")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Android Settings")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("If you set it true, you don't need to define permissions and external bHaptics VR Player(beta) on SideQuest will be required.")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xAAD8CC", Offset = "0xAAD8CC", VA = "0xAAD8CC")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x200001F")]
public class BhapticsLogger
{
	[Token(Token = "0x2000020")]
	public enum LogLevel
	{
		[Token(Token = "0x400006E")]
		Debug,
		[Token(Token = "0x400006F")]
		Info,
		[Token(Token = "0x4000070")]
		Error
	}

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xAA80A8", Offset = "0xAA80A8", VA = "0xAA80A8")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xAA8E2C", Offset = "0xAA8E2C", VA = "0xAA8E2C")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xAAD460", Offset = "0xAAD460", VA = "0xAAD460")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xAAD8DC", Offset = "0xAAD8DC", VA = "0xAAD8DC")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x2000021")]
public class BhapticsManager
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xAA92F0", Offset = "0xAA92F0", VA = "0xAA92F0")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xAAD930", Offset = "0xAAD930", VA = "0xAAD930")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xAAD934", Offset = "0xAAD934", VA = "0xAAD934")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xAADB14", Offset = "0xAADB14", VA = "0xAADB14")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x2000022")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xAADB1C", Offset = "0xAADB1C", VA = "0xAADB1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xAADB6C", Offset = "0xAADB6C", VA = "0xAADB6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xAADC8C", Offset = "0xAADC8C", VA = "0xAADC8C")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x2000023")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BhapticsConfig Config;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xAADC94", Offset = "0xAADC94", VA = "0xAADC94")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xAAE050", Offset = "0xAAE050", VA = "0xAAE050")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xAADD88", Offset = "0xAADD88", VA = "0xAADD88")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xAAE054", Offset = "0xAAE054", VA = "0xAAE054")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x2000024")]
public class ExplodingProjectileExplosion2 : MonoBehaviour
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactPrefab;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosionPrefab;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float thrust;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody thisRigidbody;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject particleKillGroup;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider thisCollider;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool LookRotation;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool Missile;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform missileTarget;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float projectileSpeed;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float projectileSpeedMultiplier;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool explodeOnTimer;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float explosionTimer;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timer;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xAAE05C", Offset = "0xAAE05C", VA = "0xAAE05C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xAAE10C", Offset = "0xAAE10C", VA = "0xAAE10C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xAAE2C4", Offset = "0xAAE2C4", VA = "0xAAE2C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xAAE354", Offset = "0xAAE354", VA = "0xAAE354")]
	private void CheckCollision(Vector3 prevPos)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xAAE6BC", Offset = "0xAAE6BC", VA = "0xAAE6BC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xAAE1A4", Offset = "0xAAE1A4", VA = "0xAAE1A4")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xAAE974", Offset = "0xAAE974", VA = "0xAAE974")]
	public ExplodingProjectileExplosion2()
	{
	}
}
[Token(Token = "0x2000025")]
public class projectileActorExplosion2 : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000026")]
	public class projectile
	{
		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bombPrefab;

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Torque;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float min;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float max;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Tor_min;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Tor_max;

		[Token(Token = "0x600009F")]
		[Address(RVA = "0xAAEFC4", Offset = "0xAAEFC4", VA = "0xAAEFC4")]
		public projectile()
		{
		}
	}

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnLocator;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public projectile[] bombList;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string FauxName;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text UiText;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int bombType;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem muzzleflare;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool swarmMissileLauncher;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int projectileSimFire;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool MinorRotate;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool MajorRotate;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int seq;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xAAE984", Offset = "0xAAE984", VA = "0xAAE984")]
	private void Start()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xAAEA0C", Offset = "0xAAEA0C", VA = "0xAAEA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xAAEAC8", Offset = "0xAAEAC8", VA = "0xAAEAC8")]
	public void Switch(int value)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xAAEB60", Offset = "0xAAEB60", VA = "0xAAEB60")]
	public void Fire()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xAAEDEC", Offset = "0xAAEDEC", VA = "0xAAEDEC")]
	private void RandomizeRotation()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xAAEEEC", Offset = "0xAAEEEC", VA = "0xAAEEEC")]
	private void Major_RandomizeRotation()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xAAEFB4", Offset = "0xAAEFB4", VA = "0xAAEFB4")]
	public projectileActorExplosion2()
	{
	}
}
[Token(Token = "0x2000027")]
public class SpawnEffectOnMouse : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000028")]
	public class chainEffect
	{
		[NonSerialized]
		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int firstvariableisinvisible;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isPlayed;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Yoffset;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool RotateRandomizer;

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Effect;

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xAAF394", Offset = "0xAAF394", VA = "0xAAF394")]
		public chainEffect()
		{
		}
	}

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public chainEffect[] chainEffectList;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int activevariation;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text UIText;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ray ray;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RaycastHit hit;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xAAEFCC", Offset = "0xAAEFCC", VA = "0xAAEFCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xAAF090", Offset = "0xAAF090", VA = "0xAAF090")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xAAF330", Offset = "0xAAF330", VA = "0xAAF330")]
	private void NextEffect(bool increase)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xAAEFD0", Offset = "0xAAEFD0", VA = "0xAAEFD0")]
	private void CheckName()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xAAF38C", Offset = "0xAAF38C", VA = "0xAAF38C")]
	public SpawnEffectOnMouse()
	{
	}
}
[Token(Token = "0x2000029")]
public class CameraShake : MonoBehaviour
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform camTransform;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float shakeDuration;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float shakeAmount;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float decreaseFactor;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 originalPos;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xAAF39C", Offset = "0xAAF39C", VA = "0xAAF39C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xAAF4B4", Offset = "0xAAF4B4", VA = "0xAAF4B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xAAF4E0", Offset = "0xAAF4E0", VA = "0xAAF4E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xAAF694", Offset = "0xAAF694", VA = "0xAAF694")]
	public CameraShake()
	{
	}
}
[Token(Token = "0x200002A")]
public class CameraShakeCaller : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ProjectileShakeDuration;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ProjectileShakeAmount;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xAAF6F4", Offset = "0xAAF6F4", VA = "0xAAF6F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xAAF75C", Offset = "0xAAF75C", VA = "0xAAF75C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xAAF760", Offset = "0xAAF760", VA = "0xAAF760")]
	public CameraShakeCaller()
	{
	}
}
[Token(Token = "0x200002B")]
public class CameraShakeProjectile : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator CamerShakeAnimator;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xAAF774", Offset = "0xAAF774", VA = "0xAAF774")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xAAF778", Offset = "0xAAF778", VA = "0xAAF778")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xAAF77C", Offset = "0xAAF77C", VA = "0xAAF77C")]
	public void ShakeCamera()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xAAF7D0", Offset = "0xAAF7D0", VA = "0xAAF7D0")]
	public CameraShakeProjectile()
	{
	}
}
[Token(Token = "0x200002C")]
public class EffectActor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200002D")]
	public class projectile
	{
		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject bombPrefab;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bombPrefabTransform;

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0xAAFE2C", Offset = "0xAAFE2C", VA = "0xAAFE2C")]
		public projectile()
		{
		}
	}

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnLocator;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public projectile[] bombList;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string FauxName;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text UiText;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int bombType;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float min;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float max;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool MinorRotate;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool MajorRotate;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int seq;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xAAF7D8", Offset = "0xAAF7D8", VA = "0xAAF7D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xAAF8CC", Offset = "0xAAF8CC", VA = "0xAAF8CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xAAF988", Offset = "0xAAF988", VA = "0xAAF988")]
	public void Switch(int value)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xAAFAC4", Offset = "0xAAFAC4", VA = "0xAAFAC4")]
	public void Fire()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xAAFC44", Offset = "0xAAFC44", VA = "0xAAFC44")]
	private void RandomizeRotation()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xAAFD44", Offset = "0xAAFD44", VA = "0xAAFD44")]
	private void Major_RandomizeRotation()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xAAFE24", Offset = "0xAAFE24", VA = "0xAAFE24")]
	public EffectActor()
	{
	}
}
[Token(Token = "0x200002E")]
public class ExplodingProjectile : MonoBehaviour
{
	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactPrefab;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosionPrefab;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float thrust;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody thisRigidbody;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject particleKillGroup;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider thisCollider;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool LookRotation;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool Missile;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform missileTarget;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float projectileSpeed;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float projectileSpeedMultiplier;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool ignorePrevRotation;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool explodeOnTimer;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float explosionTimer;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timer;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 previousPosition;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xAAFE34", Offset = "0xAAFE34", VA = "0xAAFE34")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xAAFF04", Offset = "0xAAFF04", VA = "0xAAFF04")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xAB0074", Offset = "0xAB0074", VA = "0xAB0074")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xAB0188", Offset = "0xAB0188", VA = "0xAB0188")]
	private void CheckCollision(Vector3 prevPos)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xAB04F0", Offset = "0xAB04F0", VA = "0xAB04F0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xAAFF54", Offset = "0xAAFF54", VA = "0xAAFF54")]
	private void Explode()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xAB07C4", Offset = "0xAB07C4", VA = "0xAB07C4")]
	public ExplodingProjectile()
	{
	}
}
[Token(Token = "0x200002F")]
public class Projectile2 : MonoBehaviour
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float disappearAfterTime;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float disappearTimer;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isActive;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 direction;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startPosition;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float movementSpeed;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 targetPosition;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float distanceToTarget;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float movementValue;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xAB07D4", Offset = "0xAB07D4", VA = "0xAB07D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xAB07D8", Offset = "0xAB07D8", VA = "0xAB07D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xAB0888", Offset = "0xAB0888", VA = "0xAB0888")]
	private void Move()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xAB08F0", Offset = "0xAB08F0", VA = "0xAB08F0")]
	private void MoveWithoutTargetHit()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xAB0A1C", Offset = "0xAB0A1C", VA = "0xAB0A1C")]
	public void Fire(Vector3 target, Vector3 spawnPosition, Vector3 Direction, float speed)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xAB087C", Offset = "0xAB087C", VA = "0xAB087C")]
	private void Explode()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xAB0C04", Offset = "0xAB0C04", VA = "0xAB0C04")]
	public bool GetIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xAB0C0C", Offset = "0xAB0C0C", VA = "0xAB0C0C")]
	public Projectile2()
	{
	}
}
[Token(Token = "0x2000030")]
public class projectileActor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000031")]
	public class projectile
	{
		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bombPrefab;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject muzzleflare;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float min;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float max;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool rapidFire;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rapidFireCooldown;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool shotgunBehavior;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int shotgunPellets;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject shellPrefab;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool hasShells;

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xAB16E0", Offset = "0xAB16E0", VA = "0xAB16E0")]
		public projectile()
		{
		}
	}

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnLocator;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spawnLocatorMuzzleFlare;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform shellLocator;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator recoilAnimator;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] shotgunLocator;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public projectile[] bombList;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string FauxName;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text UiText;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UImaster;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool CameraShake;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rapidFireDelay;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CameraShakeProjectile CameraShakeCaller;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float firingTimer;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool firing;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int bombType;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool swarmMissileLauncher;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int projectileSimFire;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Torque;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float Tor_min;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float Tor_max;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool MinorRotate;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool MajorRotate;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int seq;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xAB0C24", Offset = "0xAB0C24", VA = "0xAB0C24")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xAB0CB4", Offset = "0xAB0CB4", VA = "0xAB0CB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xAB0ED4", Offset = "0xAB0ED4", VA = "0xAB0ED4")]
	public void Switch(int value)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xAB0F7C", Offset = "0xAB0F7C", VA = "0xAB0F7C")]
	public void Fire()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xAB14E8", Offset = "0xAB14E8", VA = "0xAB14E8")]
	private void RandomizeRotation()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xAB15E8", Offset = "0xAB15E8", VA = "0xAB15E8")]
	private void Major_RandomizeRotation()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xAB16C8", Offset = "0xAB16C8", VA = "0xAB16C8")]
	public projectileActor()
	{
	}
}
[Token(Token = "0x2000032")]
public class destroyMe : MonoBehaviour
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float deathtimer;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xAB16E8", Offset = "0xAB16E8", VA = "0xAB16E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xAB16EC", Offset = "0xAB16EC", VA = "0xAB16EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xAB1790", Offset = "0xAB1790", VA = "0xAB1790")]
	public destroyMe()
	{
	}
}
[Token(Token = "0x2000033")]
[ExecuteInEditMode]
public class particleColorChangerMaster : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000034")]
	public class colorChange
	{
		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem[] colored_ParticleSystem;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient Gradient_custom;

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xAB1940", Offset = "0xAB1940", VA = "0xAB1940")]
		public colorChange()
		{
		}
	}

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed_custom;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public colorChange[] colorChangeList;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool applyChanges;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool Keep_applyChanges;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xAB17A0", Offset = "0xAB17A0", VA = "0xAB17A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xAB17A4", Offset = "0xAB17A4", VA = "0xAB17A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xAB1930", Offset = "0xAB1930", VA = "0xAB1930")]
	public particleColorChangerMaster()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
public class Floor_PlanarReflection : MonoBehaviour
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int renderTextureSize;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float clipPlaneOffset;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool disablePixelLights;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture renderTexture;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int restorePixelLightCount;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera sourceCamera;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xAB1948", Offset = "0xAB1948", VA = "0xAB1948", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xAB1B10", Offset = "0xAB1B10", VA = "0xAB1B10", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xAB1D98", Offset = "0xAB1D98", VA = "0xAB1D98", Slot = "6")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xAB1DF4", Offset = "0xAB1DF4", VA = "0xAB1DF4", Slot = "7")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xAB1EF0", Offset = "0xAB1EF0", VA = "0xAB1EF0", Slot = "8")]
	public virtual void OnPreCull()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xAB23C0", Offset = "0xAB23C0", VA = "0xAB23C0", Slot = "9")]
	public virtual void OnPreRender()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xAB23F0", Offset = "0xAB23F0", VA = "0xAB23F0", Slot = "10")]
	public virtual void OnPostRender()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xAB2424", Offset = "0xAB2424", VA = "0xAB2424", Slot = "11")]
	public virtual Vector4 CameraSpacePlane(Vector3 pos, Vector3 normal)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xAB260C", Offset = "0xAB260C", VA = "0xAB260C")]
	public static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xAB223C", Offset = "0xAB223C", VA = "0xAB223C")]
	public static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xAB21A8", Offset = "0xAB21A8", VA = "0xAB21A8")]
	public static Matrix4x4 CalculateReflectionMatrix(Vector4 plane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xAB262C", Offset = "0xAB262C", VA = "0xAB262C")]
	public Floor_PlanarReflection()
	{
	}
}
[Token(Token = "0x2000036")]
public class Floor_ReflectionScriptCamera : MonoBehaviour
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] reflectiveObjects;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask reflectionMask;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] reflectiveMaterials;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform reflectiveSurfaceHeight;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader replacementShader;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool highQuality;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color clearColor;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string reflectionSampler;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float clipPlaneOffset;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 oldpos;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera reflectionCamera;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<Camera, bool> helperCameras;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Texture[] initialReflectionTextures;

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xAB265C", Offset = "0xAB265C", VA = "0xAB265C")]
	public void Start()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xAB2748", Offset = "0xAB2748", VA = "0xAB2748")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xAB27CC", Offset = "0xAB27CC", VA = "0xAB27CC")]
	private Camera CreateReflectionCameraFor(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xAB2D28", Offset = "0xAB2D28", VA = "0xAB2D28")]
	public void HighQuality()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xAB2B2C", Offset = "0xAB2B2C", VA = "0xAB2B2C")]
	private void SetStandardCameraParameter(Camera cam, LayerMask mask)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xAB2B94", Offset = "0xAB2B94", VA = "0xAB2B94")]
	private RenderTexture CreateTextureFor(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xAB2D34", Offset = "0xAB2D34", VA = "0xAB2D34")]
	public void RenderHelpCameras(Camera currentCam)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xAB3358", Offset = "0xAB3358", VA = "0xAB3358")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xAB351C", Offset = "0xAB351C", VA = "0xAB351C")]
	private void ObjectBeingRendered(Transform tr, Camera currentCam)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xAB2F40", Offset = "0xAB2F40", VA = "0xAB2F40")]
	private void RenderReflectionFor(Camera cam, Camera reflectCamera)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xAB35AC", Offset = "0xAB35AC", VA = "0xAB35AC")]
	private void SaneCameraSettings(Camera helperCam)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xAB3860", Offset = "0xAB3860", VA = "0xAB3860")]
	private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xAB360C", Offset = "0xAB360C", VA = "0xAB360C")]
	private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xAB39CC", Offset = "0xAB39CC", VA = "0xAB39CC")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xAB36B0", Offset = "0xAB36B0", VA = "0xAB36B0")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xAB39EC", Offset = "0xAB39EC", VA = "0xAB39EC")]
	public Floor_ReflectionScriptCamera()
	{
	}
}
[Token(Token = "0x2000037")]
[ExecuteInEditMode]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private System.Collections.Hashtable m_ReflectionCameras;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xAB3A94", Offset = "0xAB3A94", VA = "0xAB3A94")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xAB4E90", Offset = "0xAB4E90", VA = "0xAB4E90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xAB482C", Offset = "0xAB482C", VA = "0xAB482C")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xAB4348", Offset = "0xAB4348", VA = "0xAB4348")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xAB5250", Offset = "0xAB5250", VA = "0xAB5250")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xAB4B90", Offset = "0xAB4B90", VA = "0xAB4B90")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xAB4D40", Offset = "0xAB4D40", VA = "0xAB4D40")]
	private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xAB4AFC", Offset = "0xAB4AFC", VA = "0xAB4AFC")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xAB5270", Offset = "0xAB5270", VA = "0xAB5270")]
	public MirrorReflection()
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xAB5300", Offset = "0xAB5300", VA = "0xAB5300", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xAB5344", Offset = "0xAB5344", VA = "0xAB5344")]
	public Rotate()
	{
	}
}
[Token(Token = "0x2000039")]
public class LightMapData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200003A")]
	public struct RendererInfo
	{
		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int lightmapIndex;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector4 lightmapOffsetScale;
	}

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public RendererInfo m_RendererInfo;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xAB534C", Offset = "0xAB534C", VA = "0xAB534C")]
	public void GetInfo()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xAB5410", Offset = "0xAB5410", VA = "0xAB5410")]
	public LightMapData()
	{
	}
}
[Serializable]
[Token(Token = "0x200003B")]
public class LightMapDataContainerObject : ScriptableObject
{
	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] lightmapIndexes;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4[] lightmapOffsetScales;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xAB5418", Offset = "0xAB5418", VA = "0xAB5418")]
	public LightMapDataContainerObject()
	{
	}
}
[Token(Token = "0x200003C")]
[ExecuteInEditMode]
public class LightmappingManager : MonoBehaviour
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Renderer[] sceneRenderers;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LightMapDataContainerObject lighmapDataContainer;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Texture2D[] lightMapTexturesFar;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xAB5420", Offset = "0xAB5420", VA = "0xAB5420")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xAB5590", Offset = "0xAB5590", VA = "0xAB5590")]
	public void SetLightMapTextures()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xAB5438", Offset = "0xAB5438", VA = "0xAB5438")]
	public void SetLightMapData()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xAB56CC", Offset = "0xAB56CC", VA = "0xAB56CC")]
	public LightmappingManager()
	{
	}
}
[Token(Token = "0x200003D")]
public class Checkpoint : MonoBehaviour
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action CheckpointActivated;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xAB56D4", Offset = "0xAB56D4", VA = "0xAB56D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xAB56D8", Offset = "0xAB56D8", VA = "0xAB56D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xAB56DC", Offset = "0xAB56DC", VA = "0xAB56DC")]
	private void OnTriggerEnter()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xAB576C", Offset = "0xAB576C", VA = "0xAB576C")]
	public Checkpoint()
	{
	}
}
[Token(Token = "0x200003E")]
public class CheckpointController : MonoBehaviour
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Checkpoint[] CheckpointsList;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LookAtTargetController Arrow;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Checkpoint CurrentCheckpoint;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int CheckpointId;

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xAB5774", Offset = "0xAB5774", VA = "0xAB5774")]
	private void Start()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xAB5810", Offset = "0xAB5810", VA = "0xAB5810")]
	private void SetCurrentCheckpoint(Checkpoint checkpoint)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xAB59E0", Offset = "0xAB59E0", VA = "0xAB59E0")]
	private void CheckpointActivated()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xAB5B28", Offset = "0xAB5B28", VA = "0xAB5B28")]
	private void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xAB5B2C", Offset = "0xAB5B2C", VA = "0xAB5B2C")]
	public CheckpointController()
	{
	}
}
[Token(Token = "0x200003F")]
public class ControlPanel : MonoBehaviour
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource MusicSound;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private KeyCode SpeedUp;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private KeyCode SpeedDown;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private KeyCode Forward;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private KeyCode Back;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private KeyCode Left;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private KeyCode Right;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private KeyCode TurnLeft;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private KeyCode TurnRight;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private KeyCode MusicOffOn;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private KeyCode[] keyCodes;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<PressedKeyCode[]> KeyPressed;

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xAB5B34", Offset = "0xAB5B34", VA = "0xAB5B34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xAB5C10", Offset = "0xAB5C10", VA = "0xAB5C10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xAB5C14", Offset = "0xAB5C14", VA = "0xAB5C14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xAB5DD8", Offset = "0xAB5DD8", VA = "0xAB5DD8")]
	public ControlPanel()
	{
	}
}
[Token(Token = "0x2000040")]
public class FollowTargetCamera : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PositionFolowForce;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotationFolowForce;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xAB5DFC", Offset = "0xAB5DFC", VA = "0xAB5DFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xAB5E00", Offset = "0xAB5E00", VA = "0xAB5E00")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xAB60C8", Offset = "0xAB60C8", VA = "0xAB60C8")]
	public FollowTargetCamera()
	{
	}
}
[Token(Token = "0x2000041")]
public class HelicopterController : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource HelicopterSound;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControlPanel ControlPanel;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody HelicopterModel;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HeliRotorController MainRotorController;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HeliRotorController SubRotorController;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TurnForce;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ForwardForce;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ForwardTiltForce;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float TurnTiltForce;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float EffectiveHeight;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float turnTiltForcePercent;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float turnForcePercent;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _engineForce;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 hMove;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector2 hTilt;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float hTurn;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool IsOnGround;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 movement;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 prevpos;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 newpos;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 fwd;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 vright;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 lastRotation;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool forward;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool backward;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	public bool right;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	public bool left;

	[Token(Token = "0x17000007")]
	public float EngineForce
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0xAB60D8", Offset = "0xAB60D8", VA = "0xAB60D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000117")]
		[Address(RVA = "0xAB60E0", Offset = "0xAB60E0", VA = "0xAB60E0")]
		set
		{
		}
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xAB61A4", Offset = "0xAB61A4", VA = "0xAB61A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xAB61A8", Offset = "0xAB61A8", VA = "0xAB61A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xAB62BC", Offset = "0xAB62BC", VA = "0xAB62BC")]
	private void MoveProcess()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xAB640C", Offset = "0xAB640C", VA = "0xAB640C")]
	private void LiftProcess()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xAB61AC", Offset = "0xAB61AC", VA = "0xAB61AC")]
	private void TiltProcess()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xAB64F8", Offset = "0xAB64F8", VA = "0xAB64F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xAB66FC", Offset = "0xAB66FC", VA = "0xAB66FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xAB678C", Offset = "0xAB678C", VA = "0xAB678C")]
	private void OnKeyPressed(PressedKeyCode[] obj)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xAB69E0", Offset = "0xAB69E0", VA = "0xAB69E0")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xAB69EC", Offset = "0xAB69EC", VA = "0xAB69EC")]
	private void OnCollisionExit()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xAB69F4", Offset = "0xAB69F4", VA = "0xAB69F4")]
	public HelicopterController()
	{
	}
}
[Token(Token = "0x2000042")]
public class HeliRotorController : MonoBehaviour
{
	[Token(Token = "0x2000043")]
	public enum Axis
	{
		[Token(Token = "0x4000152")]
		X,
		[Token(Token = "0x4000153")]
		Y,
		[Token(Token = "0x4000154")]
		Z
	}

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Axis RotateAxis;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _rotarSpeed;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotateDegree;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 OriginalRotate;

	[Token(Token = "0x17000008")]
	public float RotarSpeed
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0xAB6A84", Offset = "0xAB6A84", VA = "0xAB6A84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0xAB6184", Offset = "0xAB6184", VA = "0xAB6184")]
		set
		{
		}
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xAB6A8C", Offset = "0xAB6A8C", VA = "0xAB6A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xAB6ABC", Offset = "0xAB6ABC", VA = "0xAB6ABC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xAB6B94", Offset = "0xAB6B94", VA = "0xAB6B94")]
	public HeliRotorController()
	{
	}
}
[Token(Token = "0x2000044")]
public class LookAtTargetController : MonoBehaviour
{
	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool smooth;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float damping;

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xAB6B9C", Offset = "0xAB6B9C", VA = "0xAB6B9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xAB6BA0", Offset = "0xAB6BA0", VA = "0xAB6BA0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xAB6D6C", Offset = "0xAB6D6C", VA = "0xAB6D6C")]
	public LookAtTargetController()
	{
	}
}
[Token(Token = "0x2000045")]
public enum PressedKeyCode
{
	[Token(Token = "0x4000159")]
	SpeedUpPressed,
	[Token(Token = "0x400015A")]
	SpeedDownPressed,
	[Token(Token = "0x400015B")]
	ForwardPressed,
	[Token(Token = "0x400015C")]
	BackPressed,
	[Token(Token = "0x400015D")]
	LeftPressed,
	[Token(Token = "0x400015E")]
	RightPressed,
	[Token(Token = "0x400015F")]
	TurnLeftPressed,
	[Token(Token = "0x4000160")]
	TurnRightPressed
}
[Token(Token = "0x2000046")]
public class UIGameController : MonoBehaviour
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text EngineForceView;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject RestartButton;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject InfoButton;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject InfoPanel;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIGameController runtime;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xAB6D84", Offset = "0xAB6D84", VA = "0xAB6D84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xAB6DD0", Offset = "0xAB6DD0", VA = "0xAB6DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xAB6DE0", Offset = "0xAB6DE0", VA = "0xAB6DE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xAB6DE4", Offset = "0xAB6DE4", VA = "0xAB6DE4")]
	private void ShowInfoPanel(bool isShow)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xAB6DD8", Offset = "0xAB6DD8", VA = "0xAB6DD8")]
	public void ShowInfo()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xAB6E6C", Offset = "0xAB6E6C", VA = "0xAB6E6C")]
	public void HideInfo()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xAB6E74", Offset = "0xAB6E74", VA = "0xAB6E74")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xAB6EB8", Offset = "0xAB6EB8", VA = "0xAB6EB8")]
	public UIGameController()
	{
	}
}
[Token(Token = "0x2000047")]
[RequireComponent(typeof(ParticleSystem))]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xAB6EC0", Offset = "0xAB6EC0", VA = "0xAB6EC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xAB6ECC", Offset = "0xAB6ECC", VA = "0xAB6ECC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xAB6FE4", Offset = "0xAB6FE4", VA = "0xAB6FE4")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x2000048")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xAB6FF4", Offset = "0xAB6FF4", VA = "0xAB6FF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xAB707C", Offset = "0xAB707C", VA = "0xAB707C")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000049")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xAB7094", Offset = "0xAB7094", VA = "0xAB7094")]
	private void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xAB71D0", Offset = "0xAB71D0", VA = "0xAB71D0")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x200004A")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xAB722C", Offset = "0xAB722C", VA = "0xAB722C")]
	private void Start()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xAB72CC", Offset = "0xAB72CC", VA = "0xAB72CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xAB733C", Offset = "0xAB733C", VA = "0xAB733C")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x200004B")]
public class WFX_Demo : MonoBehaviour
{
	[Token(Token = "0x200004C")]
	[CompilerGenerated]
	private sealed class <RandomSpawnsCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_Demo <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014E")]
			[Address(RVA = "0xAB9328", Offset = "0xAB9328", VA = "0xAB9328", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000150")]
			[Address(RVA = "0xAB9370", Offset = "0xAB9370", VA = "0xAB9370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0xAB8564", Offset = "0xAB8564", VA = "0xAB8564")]
		[DebuggerHidden]
		public <RandomSpawnsCoroutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0xAB9150", Offset = "0xAB9150", VA = "0xAB9150", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0xAB9154", Offset = "0xAB9154", VA = "0xAB9154", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0xAB9330", Offset = "0xAB9330", VA = "0xAB9330", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSpeed;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool orderedSpawns;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float step;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float order;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject walls;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bulletholes;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] ParticleExamples;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIndex;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string randomSpawnsDelay;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool randomSpawns;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool slowMo;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool rotateCam;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material wood;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material concrete;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material metal;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material checker;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material woodWall;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material concreteWall;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material metalWall;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material checkerWall;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string groundTextureStr;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<string> groundTextures;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject m4;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m4fps;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool rotate_m4;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xAB73B8", Offset = "0xAB73B8", VA = "0xAB73B8")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xAB7538", Offset = "0xAB7538", VA = "0xAB7538")]
	public GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xAB7794", Offset = "0xAB7794", VA = "0xAB7794")]
	private void SetActiveCrossVersions(GameObject obj, bool active)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xAB7838", Offset = "0xAB7838", VA = "0xAB7838")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xAB84FC", Offset = "0xAB84FC", VA = "0xAB84FC")]
	[IteratorStateMachine(typeof(<RandomSpawnsCoroutine>d__30))]
	private IEnumerator RandomSpawnsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xAB858C", Offset = "0xAB858C", VA = "0xAB858C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xAB83AC", Offset = "0xAB83AC", VA = "0xAB83AC")]
	private void prevTexture()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xAB8458", Offset = "0xAB8458", VA = "0xAB8458")]
	private void nextTexture()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xAB872C", Offset = "0xAB872C", VA = "0xAB872C")]
	private void selectMaterial()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xAB8344", Offset = "0xAB8344", VA = "0xAB8344")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xAB8378", Offset = "0xAB8378", VA = "0xAB8378")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xAB8A64", Offset = "0xAB8A64", VA = "0xAB8A64")]
	private void showHideStuff()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xAB8F40", Offset = "0xAB8F40", VA = "0xAB8F40")]
	public WFX_Demo()
	{
	}
}
[Token(Token = "0x200004D")]
public class WFX_Demo_DeleteAfterDelay : MonoBehaviour
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xABA378", Offset = "0xABA378", VA = "0xABA378")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xABA418", Offset = "0xABA418", VA = "0xABA418")]
	public WFX_Demo_DeleteAfterDelay()
	{
	}
}
[Token(Token = "0x200004E")]
public class WFX_Demo_New : MonoBehaviour
{
	[Token(Token = "0x200004F")]
	[CompilerGenerated]
	private sealed class <CheckForDeletedParticles>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_Demo_New <>4__this;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000168")]
			[Address(RVA = "0xABC03C", Offset = "0xABC03C", VA = "0xABC03C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016A")]
			[Address(RVA = "0xABC084", Offset = "0xABC084", VA = "0xABC084", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0xABB278", Offset = "0xABB278", VA = "0xABB278")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0xABBECC", Offset = "0xABBECC", VA = "0xABBECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0xABBED0", Offset = "0xABBED0", VA = "0xABBED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0xABC044", Offset = "0xABC044", VA = "0xABC044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	[Space]
	public Image slowMoBtn;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space]
	public Text EffectLabel;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] AdditionalEffects;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ground;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject walls;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject bulletholes;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m4;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject m4fps;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material wood;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material concrete;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material metal;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material checker;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material woodWall;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material concreteWall;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material metalWall;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material checkerWall;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string groundTextureStr;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<string> groundTextures;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int exampleIndex;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool slowMo;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xABA428", Offset = "0xABA428", VA = "0xABA428")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xABA75C", Offset = "0xABA75C", VA = "0xABA75C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xABAFD8", Offset = "0xABAFD8", VA = "0xABAFD8")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xABB098", Offset = "0xABB098", VA = "0xABB098")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xABB168", Offset = "0xABB168", VA = "0xABB168")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xABB208", Offset = "0xABB208", VA = "0xABB208")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xABB20C", Offset = "0xABB20C", VA = "0xABB20C")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xABA630", Offset = "0xABA630", VA = "0xABA630")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xABABF4", Offset = "0xABABF4", VA = "0xABABF4")]
	public GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xABB210", Offset = "0xABB210", VA = "0xABB210")]
	[IteratorStateMachine(typeof(<CheckForDeletedParticles>d__41))]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xABAA3C", Offset = "0xABAA3C", VA = "0xABAA3C")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xABAA80", Offset = "0xABAA80", VA = "0xABAA80")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xABAAC4", Offset = "0xABAAC4", VA = "0xABAAC4")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xABB80C", Offset = "0xABB80C", VA = "0xABB80C")]
	private void prevTexture()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xABBC20", Offset = "0xABBC20", VA = "0xABBC20")]
	private void nextTexture()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xABB8B8", Offset = "0xABB8B8", VA = "0xABB8B8")]
	private void selectMaterial()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xABB2A0", Offset = "0xABB2A0", VA = "0xABB2A0")]
	private void showHideStuff()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xABBCC4", Offset = "0xABBCC4", VA = "0xABBCC4")]
	public WFX_Demo_New()
	{
	}
}
[Token(Token = "0x2000050")]
public class WFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xABC08C", Offset = "0xABC08C", VA = "0xABC08C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xABC114", Offset = "0xABC114", VA = "0xABC114")]
	public WFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000051")]
public class WFX_Demo_Wall : MonoBehaviour
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WFX_Demo_New demo;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xABC12C", Offset = "0xABC12C", VA = "0xABC12C")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xABC2D0", Offset = "0xABC2D0", VA = "0xABC2D0")]
	public WFX_Demo_Wall()
	{
	}
}
[Token(Token = "0x2000052")]
[RequireComponent(typeof(ParticleSystem))]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x2000053")]
	[CompilerGenerated]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000175")]
			[Address(RVA = "0xABC4F4", Offset = "0xABC4F4", VA = "0xABC4F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000177")]
			[Address(RVA = "0xABC53C", Offset = "0xABC53C", VA = "0xABC53C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0xABC38C", Offset = "0xABC38C", VA = "0xABC38C")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0xABC3BC", Offset = "0xABC3BC", VA = "0xABC3BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0xABC3C0", Offset = "0xABC3C0", VA = "0xABC3C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0xABC4FC", Offset = "0xABC4FC", VA = "0xABC4FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xABC2D8", Offset = "0xABC2D8", VA = "0xABC2D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xABC324", Offset = "0xABC324", VA = "0xABC324")]
	[IteratorStateMachine(typeof(<CheckIfAlive>d__2))]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xABC3B4", Offset = "0xABC3B4", VA = "0xABC3B4")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x2000054")]
[RequireComponent(typeof(Light))]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xABC544", Offset = "0xABC544", VA = "0xABC544")]
	private void Start()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xABC5A4", Offset = "0xABC5A4", VA = "0xABC5A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xABC620", Offset = "0xABC620", VA = "0xABC620")]
	private void Update()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xABC784", Offset = "0xABC784", VA = "0xABC784")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000055")]
[RequireComponent(typeof(MeshFilter))]
public class WFX_BulletHoleDecal : MonoBehaviour
{
	[Token(Token = "0x2000056")]
	[CompilerGenerated]
	private sealed class <holeUpdate>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_BulletHoleDecal <>4__this;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000184")]
			[Address(RVA = "0xABCD54", Offset = "0xABCD54", VA = "0xABCD54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000186")]
			[Address(RVA = "0xABCD9C", Offset = "0xABCD9C", VA = "0xABCD9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0xABCB4C", Offset = "0xABCB4C", VA = "0xABCB4C")]
		[DebuggerHidden]
		public <holeUpdate>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0xABCC40", Offset = "0xABCC40", VA = "0xABCC40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0xABCC44", Offset = "0xABCC44", VA = "0xABCC44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0xABCD5C", Offset = "0xABCD5C", VA = "0xABCD5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2[] quadUVs;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifetime;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeoutpercent;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 frames;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomRotation;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool deactivate;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float life;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeout;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color color;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float orgAlpha;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xABC794", Offset = "0xABC794", VA = "0xABC794")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xABC820", Offset = "0xABC820", VA = "0xABC820")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xABCAE4", Offset = "0xABCAE4", VA = "0xABCAE4")]
	[IteratorStateMachine(typeof(<holeUpdate>d__12))]
	private IEnumerator holeUpdate()
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xABCB74", Offset = "0xABCB74", VA = "0xABCB74")]
	public WFX_BulletHoleDecal()
	{
	}
}
[Token(Token = "0x2000057")]
[RequireComponent(typeof(Light))]
public class WFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x2000058")]
	[CompilerGenerated]
	private sealed class <Flicker>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_LightFlicker <>4__this;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018D")]
			[Address(RVA = "0xABCF98", Offset = "0xABCF98", VA = "0xABCF98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600018F")]
			[Address(RVA = "0xABCFE0", Offset = "0xABCFE0", VA = "0xABCFE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0xABCE60", Offset = "0xABCE60", VA = "0xABCE60")]
		[DebuggerHidden]
		public <Flicker>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0xABCE9C", Offset = "0xABCE9C", VA = "0xABCE9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0xABCEA0", Offset = "0xABCEA0", VA = "0xABCEA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0xABCFA0", Offset = "0xABCFA0", VA = "0xABCFA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xABCDA4", Offset = "0xABCDA4", VA = "0xABCDA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xABCDF8", Offset = "0xABCDF8", VA = "0xABCDF8")]
	[IteratorStateMachine(typeof(<Flicker>d__3))]
	private IEnumerator Flicker()
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xABCE88", Offset = "0xABCE88", VA = "0xABCE88")]
	public WFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000059")]
public class CFX_SpawnSystem : MonoBehaviour
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CFX_SpawnSystem instance;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToPreload;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] objectsToPreloadTimes;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideObjectsInHierarchy;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool spawnAsChildren;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool onlyGetInactiveObjects;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool instantiateIfNeeded;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool allObjectsLoaded;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<GameObject>> instantiatedObjects;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> poolCursors;

	[Token(Token = "0x17000013")]
	public static bool AllObjectsLoaded
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0xABDE94", Offset = "0xABDE94", VA = "0xABDE94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xABCFE8", Offset = "0xABCFE8", VA = "0xABCFE8")]
	public static GameObject GetNextObject(GameObject sourceObj, bool activateObject = true)
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xABD6FC", Offset = "0xABD6FC", VA = "0xABD6FC")]
	public static void PreloadObject(GameObject sourceObj, int poolSize = 1)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xABDA9C", Offset = "0xABDA9C", VA = "0xABDA9C")]
	public static void UnloadObjects(GameObject sourceObj)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xABD764", Offset = "0xABD764", VA = "0xABD764")]
	private void addObjectToPool(GameObject sourceObject, int number)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xABDAF4", Offset = "0xABDAF4", VA = "0xABDAF4")]
	private void removeObjectsFromPool(GameObject sourceObject)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xABD59C", Offset = "0xABD59C", VA = "0xABD59C")]
	private void increasePoolCursor(int uniqueId)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xABDEE8", Offset = "0xABDEE8", VA = "0xABDEE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xABDFDC", Offset = "0xABDFDC", VA = "0xABDFDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xABE05C", Offset = "0xABE05C", VA = "0xABE05C")]
	public CFX_SpawnSystem()
	{
	}
}
[Token(Token = "0x200005A")]
public class BFX_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xABE174", Offset = "0xABE174", VA = "0xABE174")]
	private void Start()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xABE1A0", Offset = "0xABE1A0", VA = "0xABE1A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xABE5F8", Offset = "0xABE5F8", VA = "0xABE5F8")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xABE634", Offset = "0xABE634", VA = "0xABE634")]
	public BFX_MouseOrbit()
	{
	}
}
[Token(Token = "0x200005B")]
public class DemoGUI : MonoBehaviour
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentNomber;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject currentInstance;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xABE650", Offset = "0xABE650", VA = "0xABE650")]
	private void Start()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xABE7B4", Offset = "0xABE7B4", VA = "0xABE7B4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xABE9B0", Offset = "0xABE9B0", VA = "0xABE9B0")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xABEB50", Offset = "0xABEB50", VA = "0xABEB50")]
	public DemoGUI()
	{
	}
}
[Token(Token = "0x200005C")]
public class DemoReactivator : MonoBehaviour
{
	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelayToReactivate;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xABEBB8", Offset = "0xABEBB8", VA = "0xABEBB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xABEC0C", Offset = "0xABEC0C", VA = "0xABEC0C")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xABECD4", Offset = "0xABECD4", VA = "0xABECD4")]
	public DemoReactivator()
	{
	}
}
[Token(Token = "0x200005D")]
internal class UVTextureAnimator : MonoBehaviour
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Rows;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Columns;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Fps;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int OffsetMat;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float StartDelay;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BFX_TextureShaderProperties[] TextureNames;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer currentRenderer;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Projector projector;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material instanceMaterial;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float animationStartTime;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool canUpdate;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int previousIndex;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int totalFrames;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentInterpolatedTime;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentIndex;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 size;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isInitialized;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool startDelayIsBroken;

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xABECE4", Offset = "0xABECE4", VA = "0xABECE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xABEF18", Offset = "0xABEF18", VA = "0xABEF18")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xABEF34", Offset = "0xABEF34", VA = "0xABEF34")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xABEF44", Offset = "0xABEF44", VA = "0xABEF44")]
	private void ManualUpdate()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xABF4B0", Offset = "0xABF4B0", VA = "0xABF4B0")]
	private void StartDelayFunc()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xABECF4", Offset = "0xABECF4", VA = "0xABECF4")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xABF4D4", Offset = "0xABF4D4", VA = "0xABF4D4")]
	private void InitializeMaterial()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xABEF7C", Offset = "0xABEF7C", VA = "0xABEF7C")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xABF12C", Offset = "0xABF12C", VA = "0xABF12C")]
	private void SetSpriteAnimation()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xABF358", Offset = "0xABF358", VA = "0xABF358")]
	private void SetSpriteAnimationIterpolated()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xABF6FC", Offset = "0xABF6FC", VA = "0xABF6FC")]
	public UVTextureAnimator()
	{
	}
}
[Token(Token = "0x200005E")]
public enum BFX_TextureShaderProperties
{
	[Token(Token = "0x4000200")]
	_MainTex,
	[Token(Token = "0x4000201")]
	_DistortTex,
	[Token(Token = "0x4000202")]
	_Mask,
	[Token(Token = "0x4000203")]
	_Cutout,
	[Token(Token = "0x4000204")]
	_CutoutTex,
	[Token(Token = "0x4000205")]
	_Bump,
	[Token(Token = "0x4000206")]
	_BumpTex,
	[Token(Token = "0x4000207")]
	_EmissionTex
}
[Token(Token = "0x200005F")]
public class EarthSpinScript : MonoBehaviour
{
	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xABF788", Offset = "0xABF788", VA = "0xABF788")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xABF824", Offset = "0xABF824", VA = "0xABF824")]
	public EarthSpinScript()
	{
	}
}
[Token(Token = "0x2000060")]
[ExecuteInEditMode]
public class ListMeshVertCount : MonoBehaviour
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool includeInActive;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool listVertCount;

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xABF834", Offset = "0xABF834", VA = "0xABF834")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xABF848", Offset = "0xABF848", VA = "0xABF848")]
	private void ListVertCount()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xABFB24", Offset = "0xABFB24", VA = "0xABFB24")]
	public ListMeshVertCount()
	{
	}
}
[Token(Token = "0x2000061")]
public class NetworkControllerTest : MonoBehaviour
{
	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xABFB2C", Offset = "0xABFB2C", VA = "0xABFB2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xABFB7C", Offset = "0xABFB7C", VA = "0xABFB7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xABFB80", Offset = "0xABFB80", VA = "0xABFB80")]
	private void Connect()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xABFBE4", Offset = "0xABFBE4", VA = "0xABFBE4")]
	private void Join()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xABFC60", Offset = "0xABFC60", VA = "0xABFC60")]
	public NetworkControllerTest()
	{
	}
}
[Token(Token = "0x2000062")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xABFC68", Offset = "0xABFC68", VA = "0xABFC68")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xABFDA8", Offset = "0xABFDA8", VA = "0xABFDA8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xAC00D8", Offset = "0xAC00D8", VA = "0xAC00D8")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xAC0270", Offset = "0xAC0270", VA = "0xAC0270", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xAC029C", Offset = "0xAC029C", VA = "0xAC029C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000063")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xAC0304", Offset = "0xAC0304", VA = "0xAC0304")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xAC0380", Offset = "0xAC0380", VA = "0xAC0380")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xAC04F0", Offset = "0xAC04F0", VA = "0xAC04F0")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000064")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000014")]
	public bool IsVisible
	{
		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xAC04F8", Offset = "0xAC04F8", VA = "0xAC04F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xAC0500", Offset = "0xAC0500", VA = "0xAC0500")]
		set
		{
		}
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xAC0624", Offset = "0xAC0624", VA = "0xAC0624")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xAC0814", Offset = "0xAC0814", VA = "0xAC0814")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xAC081C", Offset = "0xAC081C", VA = "0xAC081C")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000065")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000066")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xAC140C", Offset = "0xAC140C", VA = "0xAC140C")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000067")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMax;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMin;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float LatencyWeight;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 10f)]
		public int MaxSamples;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xAC1414", Offset = "0xAC1414", VA = "0xAC1414")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xAC15F0", Offset = "0xAC15F0", VA = "0xAC15F0")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xAC0830", Offset = "0xAC0830", VA = "0xAC0830")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xAC0974", Offset = "0xAC0974", VA = "0xAC0974")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xAC0D64", Offset = "0xAC0D64", VA = "0xAC0D64")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xAC0CC4", Offset = "0xAC0CC4", VA = "0xAC0CC4")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xAC10F0", Offset = "0xAC10F0", VA = "0xAC10F0")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xAC1548", Offset = "0xAC1548", VA = "0xAC1548")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000068")]
public class P2PManager
{
	[Token(Token = "0x2000069")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000222")]
		Update = 1
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xAC1684", Offset = "0xAC1684", VA = "0xAC1684")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xAC1750", Offset = "0xAC1750", VA = "0xAC1750")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xAC1990", Offset = "0xAC1990", VA = "0xAC1990")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xAC1AD8", Offset = "0xAC1AD8", VA = "0xAC1AD8")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xAC1C28", Offset = "0xAC1C28", VA = "0xAC1C28")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xAC1E14", Offset = "0xAC1E14", VA = "0xAC1E14")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xAC21CC", Offset = "0xAC21CC", VA = "0xAC21CC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xAC2454", Offset = "0xAC2454", VA = "0xAC2454")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xAC1FD8", Offset = "0xAC1FD8", VA = "0xAC1FD8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xAC23A0", Offset = "0xAC23A0", VA = "0xAC23A0")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xAC20A4", Offset = "0xAC20A4", VA = "0xAC20A4")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xAC267C", Offset = "0xAC267C", VA = "0xAC267C")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xAC2014", Offset = "0xAC2014", VA = "0xAC2014")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xAC23D8", Offset = "0xAC23D8", VA = "0xAC23D8")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xAC213C", Offset = "0xAC213C", VA = "0xAC213C")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xAC26F8", Offset = "0xAC26F8", VA = "0xAC26F8")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200006A")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xAC2774", Offset = "0xAC2774", VA = "0xAC2774", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xAC2AF4", Offset = "0xAC2AF4", VA = "0xAC2AF4", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xAC2B18", Offset = "0xAC2B18", VA = "0xAC2B18", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xAC2EB8", Offset = "0xAC2EB8", VA = "0xAC2EB8")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xAC3018", Offset = "0xAC3018", VA = "0xAC3018")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xAC3094", Offset = "0xAC3094", VA = "0xAC3094")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xAC3170", Offset = "0xAC3170", VA = "0xAC3170")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200006B")]
public class RemotePlayer
{
	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xAC3248", Offset = "0xAC3248", VA = "0xAC3248")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200006C")]
public class RoomManager
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xAC3250", Offset = "0xAC3250", VA = "0xAC3250")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xAC3334", Offset = "0xAC3334", VA = "0xAC3334")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xAC3534", Offset = "0xAC3534", VA = "0xAC3534")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xAC364C", Offset = "0xAC364C", VA = "0xAC364C")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xAC3704", Offset = "0xAC3704", VA = "0xAC3704")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xAC3AF0", Offset = "0xAC3AF0", VA = "0xAC3AF0")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xAC3560", Offset = "0xAC3560", VA = "0xAC3560")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xAC3B68", Offset = "0xAC3B68", VA = "0xAC3B68")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xAC4280", Offset = "0xAC4280", VA = "0xAC4280")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xAC4554", Offset = "0xAC4554", VA = "0xAC4554")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xAC3E30", Offset = "0xAC3E30", VA = "0xAC3E30")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x200006D")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200006E")]
	public enum State
	{
		[Token(Token = "0x400025A")]
		INITIALIZING,
		[Token(Token = "0x400025B")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x400025C")]
		CREATING_A_ROOM,
		[Token(Token = "0x400025D")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x400025E")]
		JOINING_A_ROOM,
		[Token(Token = "0x400025F")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000260")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000261")]
		SHUTDOWN
	}

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000015")]
	public static State CurrentState
	{
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xAC62A0", Offset = "0xAC62A0", VA = "0xAC62A0")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000016")]
	public static ulong MyID
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0xAC1818", Offset = "0xAC1818", VA = "0xAC1818")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000017")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000201")]
		[Address(RVA = "0xAC6304", Offset = "0xAC6304", VA = "0xAC6304")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xAC2B30", Offset = "0xAC2B30", VA = "0xAC2B30", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xAC27A0", Offset = "0xAC27A0", VA = "0xAC27A0", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xAC4FE0", Offset = "0xAC4FE0", VA = "0xAC4FE0")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xAC2B14", Offset = "0xAC2B14", VA = "0xAC2B14", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xAC5168", Offset = "0xAC5168", VA = "0xAC5168")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xAC5260", Offset = "0xAC5260", VA = "0xAC5260")]
	private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xAC59F0", Offset = "0xAC59F0", VA = "0xAC59F0")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xAC5E08", Offset = "0xAC5E08", VA = "0xAC5E08")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xAC602C", Offset = "0xAC602C", VA = "0xAC602C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xAC6238", Offset = "0xAC6238", VA = "0xAC6238")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xAC4E6C", Offset = "0xAC4E6C", VA = "0xAC4E6C")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xAC3488", Offset = "0xAC3488", VA = "0xAC3488")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xAC37F0", Offset = "0xAC37F0", VA = "0xAC37F0")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xAC6408", Offset = "0xAC6408", VA = "0xAC6408")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xAC3A30", Offset = "0xAC3A30", VA = "0xAC3A30")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xAC45BC", Offset = "0xAC45BC", VA = "0xAC45BC")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xAC4998", Offset = "0xAC4998", VA = "0xAC4998")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xAC4A78", Offset = "0xAC4A78", VA = "0xAC4A78")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xAC18DC", Offset = "0xAC18DC", VA = "0xAC18DC")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xAC4740", Offset = "0xAC4740", VA = "0xAC4740")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xAC47C8", Offset = "0xAC47C8", VA = "0xAC47C8")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xAC658C", Offset = "0xAC658C", VA = "0xAC658C")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xAC6850", Offset = "0xAC6850", VA = "0xAC6850")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xAC4DF4", Offset = "0xAC4DF4", VA = "0xAC4DF4")]
	[MonoPInvokeCallback(typeof(CAPI.FilterCallback))]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xAC1A00", Offset = "0xAC1A00", VA = "0xAC1A00")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xAC31CC", Offset = "0xAC31CC", VA = "0xAC31CC")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200006F")]
public class VoipManager
{
	[Token(Token = "0x6000211")]
	[Address(RVA = "0xAC4F14", Offset = "0xAC4F14", VA = "0xAC4F14")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xAC6788", Offset = "0xAC6788", VA = "0xAC6788")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xAC61C8", Offset = "0xAC61C8", VA = "0xAC61C8")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xAC6B7C", Offset = "0xAC6B7C", VA = "0xAC6B7C")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xAC6CCC", Offset = "0xAC6CCC", VA = "0xAC6CCC")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000070")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xAC6EB8", Offset = "0xAC6EB8", VA = "0xAC6EB8")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xAC6F28", Offset = "0xAC6F28", VA = "0xAC6F28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xAC706C", Offset = "0xAC706C", VA = "0xAC706C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xAC70C0", Offset = "0xAC70C0", VA = "0xAC70C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xAC6F58", Offset = "0xAC6F58", VA = "0xAC6F58")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xAC7170", Offset = "0xAC7170", VA = "0xAC7170")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xAC7188", Offset = "0xAC7188", VA = "0xAC7188")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000071")]
public class AvatarLayer
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xAC7190", Offset = "0xAC7190", VA = "0xAC7190")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000072")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xAC7198", Offset = "0xAC7198", VA = "0xAC7198")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000073")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000074")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000253")]
		[Address(RVA = "0xACA064", Offset = "0xACA064", VA = "0xACA064")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000075")]
	public enum HandType
	{
		[Token(Token = "0x40002C3")]
		Right,
		[Token(Token = "0x40002C4")]
		Left,
		[Token(Token = "0x40002C5")]
		Max
	}

	[Token(Token = "0x2000076")]
	public enum HandJoint
	{
		[Token(Token = "0x40002C7")]
		HandBase,
		[Token(Token = "0x40002C8")]
		IndexBase,
		[Token(Token = "0x40002C9")]
		IndexTip,
		[Token(Token = "0x40002CA")]
		ThumbBase,
		[Token(Token = "0x40002CB")]
		ThumbTip,
		[Token(Token = "0x40002CC")]
		Max
	}

	[Token(Token = "0x2000077")]
	[CompilerGenerated]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000257")]
			[Address(RVA = "0xACC200", Offset = "0xACC200", VA = "0xACC200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000259")]
			[Address(RVA = "0xACC248", Offset = "0xACC248", VA = "0xACC248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0xACBD24", Offset = "0xACBD24", VA = "0xACBD24")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0xACC064", Offset = "0xACC064", VA = "0xACC064", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0xACC068", Offset = "0xACC068", VA = "0xACC068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0xACC208", Offset = "0xACC208", VA = "0xACC208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Avatar")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Capabilities")]
	public bool EnableBody;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Network")]
	public bool RecordPackets;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Visibility")]
	public bool StartWithControllers;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[Tooltip("LOD mesh complexity and texture resolution. Highest LOD recommended on PC and simple mobile apps. Medium LOD recommended on mobile devices or for background characters on PC. Lowest LOD recommended for background characters on mobile.")]
	[Header("Performance")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Enable to use combined meshes to reduce draw calls. Currently only available on mobile devices. Will be forced to false on PC.")]
	private bool CombineMeshes;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[Tooltip("Enable to use transparent queue, disable to use geometry queue. Requires restart to take effect.")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Shaders")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Other")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[Tooltip("Enable laughter detection and animation as part of OVRLipSync.")]
	public bool EnableLaughter;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40002A3")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40002A5")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40002A6")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40002A7")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40002A8")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40002A9")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xAC71AC", Offset = "0xAC71AC", VA = "0xAC71AC")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xAC7524", Offset = "0xAC7524", VA = "0xAC7524")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xAC75AC", Offset = "0xAC75AC", VA = "0xAC75AC")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xAC7608", Offset = "0xAC7608", VA = "0xAC7608")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xAC771C", Offset = "0xAC771C", VA = "0xAC771C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xAC77F8", Offset = "0xAC77F8", VA = "0xAC77F8")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xAC78C8", Offset = "0xAC78C8", VA = "0xAC78C8")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xAC7A98", Offset = "0xAC7A98", VA = "0xAC7A98")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xAC7B60", Offset = "0xAC7B60", VA = "0xAC7B60")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xAC7BD4", Offset = "0xAC7BD4", VA = "0xAC7BD4")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xAC7C8C", Offset = "0xAC7C8C", VA = "0xAC7C8C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xAC7D14", Offset = "0xAC7D14", VA = "0xAC7D14")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xAC7DB8", Offset = "0xAC7DB8", VA = "0xAC7DB8")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xAC7DD0", Offset = "0xAC7DD0", VA = "0xAC7DD0")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x600022D")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xAC81DC", Offset = "0xAC81DC", VA = "0xAC81DC")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xAC84D0", Offset = "0xAC84D0", VA = "0xAC84D0")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xAC8664", Offset = "0xAC8664", VA = "0xAC8664")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xAC88A0", Offset = "0xAC88A0", VA = "0xAC88A0")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xAC89CC", Offset = "0xAC89CC", VA = "0xAC89CC")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xAC8D08", Offset = "0xAC8D08", VA = "0xAC8D08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xAC901C", Offset = "0xAC901C", VA = "0xAC901C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xAC9AC8", Offset = "0xAC9AC8", VA = "0xAC9AC8")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xAC9B0C", Offset = "0xAC9B0C", VA = "0xAC9B0C")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xAC30D8", Offset = "0xAC30D8", VA = "0xAC30D8")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xAC8C70", Offset = "0xAC8C70", VA = "0xAC8C70")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xAC9B38", Offset = "0xAC9B38", VA = "0xAC9B38")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xAC93F8", Offset = "0xAC93F8", VA = "0xAC93F8")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xAC9DAC", Offset = "0xAC9DAC", VA = "0xAC9DAC")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xAC9BE0", Offset = "0xAC9BE0", VA = "0xAC9BE0")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xACA0D0", Offset = "0xACA0D0", VA = "0xACA0D0")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xACA548", Offset = "0xACA548", VA = "0xACA548")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xACA960", Offset = "0xACA960", VA = "0xACA960")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xACAA98", Offset = "0xACAA98", VA = "0xACAA98")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xACAC64", Offset = "0xACAC64", VA = "0xACAC64")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xAC95A0", Offset = "0xAC95A0", VA = "0xAC95A0")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xACAD2C", Offset = "0xACAD2C", VA = "0xACAD2C")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xAC9408", Offset = "0xAC9408", VA = "0xAC9408")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xACAE08", Offset = "0xACAE08", VA = "0xACAE08")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xACB3DC", Offset = "0xACB3DC", VA = "0xACB3DC")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xACB864", Offset = "0xACB864", VA = "0xACB864")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xACB88C", Offset = "0xACB88C", VA = "0xACB88C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xACB8B4", Offset = "0xACB8B4", VA = "0xACB8B4")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xAC9970", Offset = "0xAC9970", VA = "0xAC9970")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xACAEB8", Offset = "0xACAEB8", VA = "0xACAEB8")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xACBCBC", Offset = "0xACBCBC", VA = "0xACBCBC")]
	[IteratorStateMachine(typeof(<WaitForMouthAudioSource>d__137))]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xACBD4C", Offset = "0xACBD4C", VA = "0xACBD4C")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xACBB50", Offset = "0xACBB50", VA = "0xACBB50")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xAC697C", Offset = "0xAC697C", VA = "0xAC697C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xACBDF0", Offset = "0xACBDF0", VA = "0xACBDF0")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xACB8F0", Offset = "0xACB8F0", VA = "0xACB8F0")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xACBEB8", Offset = "0xACBEB8", VA = "0xACBEB8")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000078")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xACC250", Offset = "0xACC250", VA = "0xACC250")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000079")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xACC258", Offset = "0xACC258", VA = "0xACC258")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xACD374", Offset = "0xACD374", VA = "0xACD374")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xACCFD0", Offset = "0xACCFD0", VA = "0xACCFD0")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xACCD80", Offset = "0xACCD80", VA = "0xACCD80")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xACCE54", Offset = "0xACCE54", VA = "0xACCE54")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xACD5C0", Offset = "0xACD5C0", VA = "0xACD5C0")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200007A")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40002D5")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xACDB0C", Offset = "0xACDB0C", VA = "0xACDB0C")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200007B")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xACDD44", Offset = "0xACDD44", VA = "0xACDD44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xACE160", Offset = "0xACE160", VA = "0xACE160")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200007C")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xACA814", Offset = "0xACA814", VA = "0xACA814")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xACE274", Offset = "0xACE274", VA = "0xACE274")]
	private void Update()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xACE37C", Offset = "0xACE37C", VA = "0xACE37C")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200007D")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xACE3D0", Offset = "0xACE3D0", VA = "0xACE3D0")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xACDE4C", Offset = "0xACDE4C", VA = "0xACDE4C")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xACE3D8", Offset = "0xACE3D8", VA = "0xACE3D8")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xACE42C", Offset = "0xACE42C", VA = "0xACE42C")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xACEB34", Offset = "0xACEB34", VA = "0xACEB34")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xACE1B4", Offset = "0xACE1B4", VA = "0xACE1B4")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200007E")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200007F")]
	public enum PacketMode
	{
		[Token(Token = "0x40002E9")]
		SDK,
		[Token(Token = "0x40002EA")]
		Unity
	}

	[Token(Token = "0x2000080")]
	public struct ControllerPose
	{
		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000274")]
		[Address(RVA = "0xB9B370", Offset = "0xB9B370", VA = "0xB9B370")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000081")]
	public struct PoseFrame
	{
		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000275")]
		[Address(RVA = "0xB9B3E0", Offset = "0xB9B3E0", VA = "0xB9B3E0")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xB9B06C", Offset = "0xB9B06C", VA = "0xB9B06C")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600026F")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xB9B07C", Offset = "0xB9B07C", VA = "0xB9B07C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xB9B0F8", Offset = "0xB9B0F8", VA = "0xB9B0F8")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xB9B358", Offset = "0xB9B358", VA = "0xB9B358")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xB9B360", Offset = "0xB9B360", VA = "0xB9B360")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000082")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xB9B6D8", Offset = "0xB9B6D8", VA = "0xB9B6D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xB9B808", Offset = "0xB9B808", VA = "0xB9B808")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000083")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xB9B868", Offset = "0xB9B868", VA = "0xB9B868")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xB9B9A8", Offset = "0xB9B9A8", VA = "0xB9B9A8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xB9BCD8", Offset = "0xB9BCD8", VA = "0xB9BCD8")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xB9BEF4", Offset = "0xB9BEF4", VA = "0xB9BEF4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xB9BF1C", Offset = "0xB9BF1C", VA = "0xB9BF1C")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000084")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000085")]
	public enum TextureType
	{
		[Token(Token = "0x4000320")]
		DiffuseTextures,
		[Token(Token = "0x4000321")]
		NormalMaps,
		[Token(Token = "0x4000322")]
		RoughnessMaps,
		[Token(Token = "0x4000323")]
		Count
	}

	[Token(Token = "0x2000086")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000087")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000088")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000089")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x600028C")]
		[Address(RVA = "0xB9E1C8", Offset = "0xB9E1C8", VA = "0xB9E1C8")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200008A")]
	[CompilerGenerated]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000290")]
			[Address(RVA = "0xB9EBE0", Offset = "0xB9EBE0", VA = "0xB9EBE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000292")]
			[Address(RVA = "0xB9EC28", Offset = "0xB9EC28", VA = "0xB9EC28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0xB9DFFC", Offset = "0xB9DFFC", VA = "0xB9DFFC")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0xB9E584", Offset = "0xB9E584", VA = "0xB9E584", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0xB9E588", Offset = "0xB9E588", VA = "0xB9E588", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0xB9EBE8", Offset = "0xB9EBE8", VA = "0xB9EBE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400031B")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x400031C")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x400031D")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x400031E")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xB9BFBC", Offset = "0xB9BFBC", VA = "0xB9BFBC")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xB9C13C", Offset = "0xB9C13C", VA = "0xB9C13C")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xB9C164", Offset = "0xB9C164", VA = "0xB9C164")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xB9C860", Offset = "0xB9C860", VA = "0xB9C860")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xB9CCD0", Offset = "0xB9CCD0", VA = "0xB9CCD0")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xB9C204", Offset = "0xB9C204", VA = "0xB9C204")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xB9CDAC", Offset = "0xB9CDAC", VA = "0xB9CDAC")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xB9C634", Offset = "0xB9C634", VA = "0xB9C634")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xB9D014", Offset = "0xB9D014", VA = "0xB9D014")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xB9D298", Offset = "0xB9D298", VA = "0xB9D298")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xB9D3BC", Offset = "0xB9D3BC", VA = "0xB9D3BC")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xB9D3F4", Offset = "0xB9D3F4", VA = "0xB9D3F4")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xB9C7EC", Offset = "0xB9C7EC", VA = "0xB9C7EC")]
	[IteratorStateMachine(typeof(<RunLoadingAnimation>d__49))]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xB9E024", Offset = "0xB9E024", VA = "0xB9E024")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200008B")]
public class OvrAvatarPacket
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700001C")]
	public float Duration
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xB9EC30", Offset = "0xB9EC30", VA = "0xB9EC30")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001D")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xB9EC94", Offset = "0xB9EC94", VA = "0xB9EC94")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xB9ED1C", Offset = "0xB9ED1C", VA = "0xB9ED1C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xB9EE30", Offset = "0xB9EE30", VA = "0xB9EE30")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xB9F084", Offset = "0xB9F084", VA = "0xB9F084")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xB9F1B0", Offset = "0xB9F1B0", VA = "0xB9F1B0")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xB9F334", Offset = "0xB9F334", VA = "0xB9F334")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xB9F510", Offset = "0xB9F510", VA = "0xB9F510")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xB9FA58", Offset = "0xB9FA58", VA = "0xB9FA58")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200008C")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600029C")]
	[Address(RVA = "0xB9FC7C", Offset = "0xB9FC7C", VA = "0xB9FC7C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xB9FD84", Offset = "0xB9FD84", VA = "0xB9FD84")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xB9FF10", Offset = "0xB9FF10", VA = "0xB9FF10")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xB9FDE8", Offset = "0xB9FDE8", VA = "0xB9FDE8")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xB9FE70", Offset = "0xB9FE70", VA = "0xB9FE70")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200008D")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xB9F8BC", Offset = "0xB9F8BC", VA = "0xB9F8BC")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xBA0138", Offset = "0xBA0138", VA = "0xBA0138")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xB9FF58", Offset = "0xB9FF58", VA = "0xB9FF58")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xB9FFC4", Offset = "0xB9FFC4", VA = "0xB9FFC4")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xBA0054", Offset = "0xBA0054", VA = "0xBA0054")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200008E")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000345")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000346")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xBA0188", Offset = "0xBA0188", VA = "0xBA0188")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xBA020C", Offset = "0xBA020C", VA = "0xBA020C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xBA0228", Offset = "0xBA0228", VA = "0xBA0228")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xBA03AC", Offset = "0xBA03AC", VA = "0xBA03AC")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xBA0530", Offset = "0xBA0530", VA = "0xBA0530")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200008F")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xBA05C8", Offset = "0xBA05C8", VA = "0xBA05C8")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xBA06A4", Offset = "0xBA06A4", VA = "0xBA06A4")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xBA0908", Offset = "0xBA0908", VA = "0xBA0908")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xBA0C50", Offset = "0xBA0C50", VA = "0xBA0C50")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xBA0D54", Offset = "0xBA0D54", VA = "0xBA0D54")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000090")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x400034F")]
	Body = 1,
	[Token(Token = "0x4000350")]
	Hands = 2,
	[Token(Token = "0x4000351")]
	Base = 4,
	[Token(Token = "0x4000352")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000353")]
	Expressive = 0x20,
	[Token(Token = "0x4000354")]
	All = -1
}
[Token(Token = "0x2000091")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000356")]
	AvatarSpecification,
	[Token(Token = "0x4000357")]
	AssetLoaded,
	[Token(Token = "0x4000358")]
	Count
}
[Token(Token = "0x2000092")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000093")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000094")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x400035E")]
	Mesh,
	[Token(Token = "0x400035F")]
	Texture,
	[Token(Token = "0x4000360")]
	Pose,
	[Token(Token = "0x4000361")]
	Material,
	[Token(Token = "0x4000362")]
	CombinedMesh,
	[Token(Token = "0x4000363")]
	PBSMaterial,
	[Token(Token = "0x4000364")]
	FailedLoad,
	[Token(Token = "0x4000365")]
	Count
}
[Token(Token = "0x2000095")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000096")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000097")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000098")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000099")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200009A")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400039A")]
	RGB24,
	[Token(Token = "0x400039B")]
	DXT1,
	[Token(Token = "0x400039C")]
	DXT5,
	[Token(Token = "0x400039D")]
	ASTC_RGB_6x6,
	[Token(Token = "0x400039E")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400039F")]
	Count
}
[Token(Token = "0x200009B")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200009C")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40003A7")]
	SkinnedMeshRender,
	[Token(Token = "0x40003A8")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40003A9")]
	ProjectorRender,
	[Token(Token = "0x40003AA")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40003AB")]
	Count
}
[Token(Token = "0x200009D")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40003AD")]
	Unknown,
	[Token(Token = "0x40003AE")]
	Default,
	[Token(Token = "0x40003AF")]
	Verbose,
	[Token(Token = "0x40003B0")]
	Debug,
	[Token(Token = "0x40003B1")]
	Info,
	[Token(Token = "0x40003B2")]
	Warn,
	[Token(Token = "0x40003B3")]
	Error,
	[Token(Token = "0x40003B4")]
	Fatal,
	[Token(Token = "0x40003B5")]
	Silent
}
[Token(Token = "0x200009E")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200009F")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40003BA")]
	One = 1,
	[Token(Token = "0x40003BB")]
	Two = 2,
	[Token(Token = "0x40003BC")]
	Three = 4,
	[Token(Token = "0x40003BD")]
	Joystick = 8
}
[Token(Token = "0x20000A0")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40003BF")]
	One = 1,
	[Token(Token = "0x40003C0")]
	Two = 2,
	[Token(Token = "0x40003C1")]
	Joystick = 4,
	[Token(Token = "0x40003C2")]
	ThumbRest = 8,
	[Token(Token = "0x40003C3")]
	Index = 0x10,
	[Token(Token = "0x40003C4")]
	Pointing = 0x40,
	[Token(Token = "0x40003C5")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000A1")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000A2")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000A3")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000A4")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000A5")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000A6")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000A7")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000A8")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000A9")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40003E5")]
	Add,
	[Token(Token = "0x40003E6")]
	Multiply,
	[Token(Token = "0x40003E7")]
	Count
}
[Token(Token = "0x20000AA")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40003E9")]
	Color,
	[Token(Token = "0x40003EA")]
	Texture,
	[Token(Token = "0x40003EB")]
	TextureSingleChannel,
	[Token(Token = "0x40003EC")]
	Parallax,
	[Token(Token = "0x40003ED")]
	Count
}
[Token(Token = "0x20000AB")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40003EF")]
	None,
	[Token(Token = "0x40003F0")]
	Positional,
	[Token(Token = "0x40003F1")]
	ViewReflection,
	[Token(Token = "0x40003F2")]
	Fresnel,
	[Token(Token = "0x40003F3")]
	Pulse,
	[Token(Token = "0x40003F4")]
	Count
}
[Token(Token = "0x20000AC")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40003F6")]
	Touch,
	[Token(Token = "0x40003F7")]
	Malibu,
	[Token(Token = "0x40003F8")]
	Go,
	[Token(Token = "0x40003F9")]
	Quest,
	[Token(Token = "0x40003FA")]
	Count
}
[Token(Token = "0x20000AD")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40003FC")]
	Lowest = 1,
	[Token(Token = "0x40003FD")]
	Medium = 3,
	[Token(Token = "0x40003FE")]
	Highest = 5
}
[Token(Token = "0x20000AE")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000400")]
	Unknown = -1,
	[Token(Token = "0x4000401")]
	One,
	[Token(Token = "0x4000402")]
	Two
}
[Token(Token = "0x20000AF")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xBA112C", Offset = "0xBA112C", VA = "0xBA112C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xBA115C", Offset = "0xBA115C", VA = "0xBA115C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xBA136C", Offset = "0xBA136C", VA = "0xBA136C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B0")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xBA15B0", Offset = "0xBA15B0", VA = "0xBA15B0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xBA15E0", Offset = "0xBA15E0", VA = "0xBA15E0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xBA1970", Offset = "0xBA1970", VA = "0xBA1970", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B1")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xBA1D18", Offset = "0xBA1D18", VA = "0xBA1D18")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xBA1D48", Offset = "0xBA1D48", VA = "0xBA1D48", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xBA1F90", Offset = "0xBA1F90", VA = "0xBA1F90", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B2")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xBA2264", Offset = "0xBA2264", VA = "0xBA2264")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xBA2294", Offset = "0xBA2294", VA = "0xBA2294", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xBA245C", Offset = "0xBA245C", VA = "0xBA245C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B3")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xBA2670", Offset = "0xBA2670", VA = "0xBA2670")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000B4")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000B5")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000437")]
	FirstPerson = 1,
	[Token(Token = "0x4000438")]
	ThirdPerson = 2,
	[Token(Token = "0x4000439")]
	SelfOccluding = 4
}
[Token(Token = "0x20000B6")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000B7")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000B8")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000B9")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000BA")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x400044F")]
	Default,
	[Token(Token = "0x4000450")]
	GripSphere,
	[Token(Token = "0x4000451")]
	GripCube,
	[Token(Token = "0x4000452")]
	Count
}
[Token(Token = "0x20000BB")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000454")]
	Body,
	[Token(Token = "0x4000455")]
	Clothing,
	[Token(Token = "0x4000456")]
	Eyewear,
	[Token(Token = "0x4000457")]
	Hair,
	[Token(Token = "0x4000458")]
	Beard,
	[Token(Token = "0x4000459")]
	Count
}
[Token(Token = "0x20000BC")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000BD")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000BE")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000BF")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000C0")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000463")]
	AvatarHead,
	[Token(Token = "0x4000464")]
	AvatarHand,
	[Token(Token = "0x4000465")]
	Object,
	[Token(Token = "0x4000466")]
	ObjectStatic,
	[Token(Token = "0x4000467")]
	Count
}
[Token(Token = "0x20000C1")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000C2")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000C3")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000C4")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000C5")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000473")]
	Point,
	[Token(Token = "0x4000474")]
	Direction,
	[Token(Token = "0x4000475")]
	Spot,
	[Token(Token = "0x4000476")]
	Count
}
[Token(Token = "0x20000C6")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000C7")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000C8")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000C9")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000CA")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x400048C")]
	None = 0u,
	[Token(Token = "0x400048D")]
	GazeTarget = 1u,
	[Token(Token = "0x400048E")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000CB")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000CC")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000CD")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000CE")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000CF")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000D0")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20000D1")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xBA4708", Offset = "0xBA4708", VA = "0xBA4708")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40004A3")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700001E")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xB9C8BC", Offset = "0xB9C8BC", VA = "0xB9C8BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xBA3490", Offset = "0xBA3490", VA = "0xBA3490")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xBA3798", Offset = "0xBA3798", VA = "0xBA3798")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xBA37FC", Offset = "0xBA37FC", VA = "0xBA37FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xBA418C", Offset = "0xBA418C", VA = "0xBA418C")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xBA41DC", Offset = "0xBA41DC", VA = "0xBA41DC")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xBA422C", Offset = "0xBA422C", VA = "0xBA422C")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xBA42D4", Offset = "0xBA42D4", VA = "0xBA42D4")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xBA432C", Offset = "0xBA432C", VA = "0xBA432C")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xBA3FB0", Offset = "0xBA3FB0", VA = "0xBA3FB0")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xBA43F0", Offset = "0xBA43F0", VA = "0xBA43F0")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xBA453C", Offset = "0xBA453C", VA = "0xBA453C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xBA0890", Offset = "0xBA0890", VA = "0xBA0890")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xBA4628", Offset = "0xBA4628", VA = "0xBA4628")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xBA3758", Offset = "0xBA3758", VA = "0xBA3758")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xB9CA7C", Offset = "0xB9CA7C", VA = "0xB9CA7C")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xBA46F0", Offset = "0xBA46F0", VA = "0xBA46F0")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000D2")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700001F")]
	public static string AppID
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xBA46B8", Offset = "0xBA46B8", VA = "0xBA46B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xBA4858", Offset = "0xBA4858", VA = "0xBA4858")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public static string MobileAppID
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xBA46D4", Offset = "0xBA46D4", VA = "0xBA46D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xBA4878", Offset = "0xBA4878", VA = "0xBA4878")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xBA4734", Offset = "0xBA4734", VA = "0xBA4734")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xBA4898", Offset = "0xBA4898", VA = "0xBA4898")]
		set
		{
		}
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xBA48E4", Offset = "0xBA48E4", VA = "0xBA48E4")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000D3")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xBA4934", Offset = "0xBA4934", VA = "0xBA4934")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xBA4BC0", Offset = "0xBA4BC0", VA = "0xBA4BC0")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xBA4A78", Offset = "0xBA4A78", VA = "0xBA4A78")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xBA4DD0", Offset = "0xBA4DD0", VA = "0xBA4DD0")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000D4")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xBA4DE0", Offset = "0xBA4DE0", VA = "0xBA4DE0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xBA4F18", Offset = "0xBA4F18", VA = "0xBA4F18")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xBA50C8", Offset = "0xBA50C8", VA = "0xBA50C8")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000D5")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40004BA")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40004BB")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40004BC")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xBA50D8", Offset = "0xBA50D8", VA = "0xBA50D8")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xBA5FD0", Offset = "0xBA5FD0", VA = "0xBA5FD0")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xBA61DC", Offset = "0xBA61DC", VA = "0xBA61DC")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xBA57B0", Offset = "0xBA57B0", VA = "0xBA57B0")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xBA54AC", Offset = "0xBA54AC", VA = "0xBA54AC")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xBA5624", Offset = "0xBA5624", VA = "0xBA5624")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xBA69F0", Offset = "0xBA69F0", VA = "0xBA69F0")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000D6")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000D7")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20000D8")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000302")]
		[Address(RVA = "0xBA6FC0", Offset = "0xBA6FC0", VA = "0xBA6FC0")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20000D9")]
	public struct TextureSet
	{
		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000303")]
		[Address(RVA = "0xBA6FD0", Offset = "0xBA6FD0", VA = "0xBA6FD0")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20000DA")]
	[CompilerGenerated]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000307")]
			[Address(RVA = "0xBA7758", Offset = "0xBA7758", VA = "0xBA7758", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000309")]
			[Address(RVA = "0xBA77A0", Offset = "0xBA77A0", VA = "0xBA77A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0xBA706C", Offset = "0xBA706C", VA = "0xBA706C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0xBA7198", Offset = "0xBA7198", VA = "0xBA7198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0xBA719C", Offset = "0xBA719C", VA = "0xBA719C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0xBA7760", Offset = "0xBA7760", VA = "0xBA7760", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40004C0")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40004C1")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40004C4")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40004C5")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40004C6")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40004C7")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40004C8")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40004C9")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40004CA")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xBA6A00", Offset = "0xBA6A00", VA = "0xBA6A00")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xBA6DDC", Offset = "0xBA6DDC", VA = "0xBA6DDC")]
	public void Update()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB9EB98", Offset = "0xB9EB98", VA = "0xB9EB98")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB9CE7C", Offset = "0xB9CE7C", VA = "0xB9CE7C")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xBA6F40", Offset = "0xBA6F40", VA = "0xBA6F40")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xB9CAF0", Offset = "0xB9CAF0", VA = "0xB9CAF0")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xB9CD14", Offset = "0xB9CD14", VA = "0xB9CD14")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xBA6FE0", Offset = "0xBA6FE0", VA = "0xBA6FE0")]
	[IteratorStateMachine(typeof(<DeleteTextureSetCoroutine>d__24))]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xBA43B0", Offset = "0xBA43B0", VA = "0xBA43B0")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xBA7094", Offset = "0xBA7094", VA = "0xBA7094")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000DB")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xBA77A8", Offset = "0xBA77A8", VA = "0xBA77A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xBA78D8", Offset = "0xBA78D8", VA = "0xBA78D8")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000DC")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	public delegate void OnClick();

	[Token(Token = "0x20000DE")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20000DF")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20000E0")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x40004DC")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40004DD")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40004DE")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xBA7938", Offset = "0xBA7938", VA = "0xBA7938")]
	public void Awake()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xBA7E2C", Offset = "0xBA7E2C", VA = "0xBA7E2C")]
	public void Show()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xBA8194", Offset = "0xBA8194", VA = "0xBA8194")]
	public void Hide()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xBA8310", Offset = "0xBA8310", VA = "0xBA8310")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xBA8528", Offset = "0xBA8528", VA = "0xBA8528")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xBA8184", Offset = "0xBA8184", VA = "0xBA8184")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xBA881C", Offset = "0xBA881C", VA = "0xBA881C")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xBA8B20", Offset = "0xBA8B20", VA = "0xBA8B20")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xBA8EB8", Offset = "0xBA8EB8", VA = "0xBA8EB8")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xBA8FB0", Offset = "0xBA8FB0", VA = "0xBA8FB0")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xBA9174", Offset = "0xBA9174", VA = "0xBA9174")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xBA920C", Offset = "0xBA920C", VA = "0xBA920C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xBA93C8", Offset = "0xBA93C8", VA = "0xBA93C8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xBA95A4", Offset = "0xBA95A4", VA = "0xBA95A4")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xBA9880", Offset = "0xBA9880", VA = "0xBA9880")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xBA9970", Offset = "0xBA9970", VA = "0xBA9970")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xBA9A04", Offset = "0xBA9A04", VA = "0xBA9A04")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000E6")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xBAA038", Offset = "0xBAA038", VA = "0xBAA038")]
	private void Start()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xBAA0C8", Offset = "0xBAA0C8", VA = "0xBAA0C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xBAA164", Offset = "0xBAA164", VA = "0xBAA164")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xBAA19C", Offset = "0xBAA19C", VA = "0xBAA19C")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000E7")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20000E8")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x400050E")]
		On,
		[Token(Token = "0x400050F")]
		Off,
		[Token(Token = "0x4000510")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000024")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0xBAA1A4", Offset = "0xBAA1A4", VA = "0xBAA1A4")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600033B")]
		[Address(RVA = "0xBA7DEC", Offset = "0xBA7DEC", VA = "0xBA7DEC")]
		set
		{
		}
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xBAA1AC", Offset = "0xBAA1AC", VA = "0xBAA1AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xBAA1FC", Offset = "0xBAA1FC", VA = "0xBAA1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xBAA334", Offset = "0xBAA334", VA = "0xBAA334", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xBAA350", Offset = "0xBAA350", VA = "0xBAA350", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xBAA3A0", Offset = "0xBAA3A0", VA = "0xBAA3A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xBAA540", Offset = "0xBAA540", VA = "0xBAA540")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xBAA650", Offset = "0xBAA650", VA = "0xBAA650")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xBAA6D4", Offset = "0xBAA6D4", VA = "0xBAA6D4")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xBAA794", Offset = "0xBAA794", VA = "0xBAA794")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xBAA83C", Offset = "0xBAA83C", VA = "0xBAA83C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xBAA928", Offset = "0xBAA928", VA = "0xBAA928")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000E9")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000511")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000512")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000513")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("This should be a reference to the OVRCameraRig that is usually a child of the PlayerController.")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Collision layers to be used for the purposes of fading out the screen when the HMD is inside world geometry and adjusting the capsule height.")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Offset is added to camera's real world height, effectively treating it as though the player was taller/standing higher.")]
	public float HeightOffset;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Minimum height that the character capsule can shrink to.  To disable, set to capsule's height.")]
	public float MinimumHeight;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Maximum height that the character capsule can grow to.  To disable, set to capsule's height.")]
	public float MaximumHeight;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xBAA938", Offset = "0xBAA938", VA = "0xBAA938")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xBAA940", Offset = "0xBAA940", VA = "0xBAA940")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xBAA9BC", Offset = "0xBAA9BC", VA = "0xBAA9BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xBAAAE0", Offset = "0xBAAAE0", VA = "0xBAAAE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xBAAC04", Offset = "0xBAAC04", VA = "0xBAAC04")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xBAAF24", Offset = "0xBAAF24", VA = "0xBAAF24")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xBAB184", Offset = "0xBAB184", VA = "0xBAB184")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000EA")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xBAB8DC", Offset = "0xBAB8DC", VA = "0xBAB8DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xBAB974", Offset = "0xBAB974", VA = "0xBAB974")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000EB")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20000EC")]
	public enum States
	{
		[Token(Token = "0x4000541")]
		Ready,
		[Token(Token = "0x4000542")]
		Aim,
		[Token(Token = "0x4000543")]
		CancelAim,
		[Token(Token = "0x4000544")]
		PreTeleport,
		[Token(Token = "0x4000545")]
		CancelTeleport,
		[Token(Token = "0x4000546")]
		Teleporting,
		[Token(Token = "0x4000547")]
		PostTeleport
	}

	[Token(Token = "0x20000ED")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000549")]
		None,
		[Token(Token = "0x400054A")]
		Aim,
		[Token(Token = "0x400054B")]
		PreTeleport,
		[Token(Token = "0x400054C")]
		Teleport
	}

	[Token(Token = "0x20000EE")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x400054E")]
		Point,
		[Token(Token = "0x400054F")]
		Sphere,
		[Token(Token = "0x4000550")]
		Capsule
	}

	[Token(Token = "0x20000EF")]
	public class AimData
	{
		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x17000028")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000386")]
			[Address(RVA = "0xBAD604", Offset = "0xBAD604", VA = "0xBAD604")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000387")]
			[Address(RVA = "0xBAD60C", Offset = "0xBAD60C", VA = "0xBAD60C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xBAD584", Offset = "0xBAD584", VA = "0xBAD584")]
		public AimData()
		{
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0xBAD614", Offset = "0xBAD614", VA = "0xBAD614")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000F0")]
	[CompilerGenerated]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038C")]
			[Address(RVA = "0xBAD75C", Offset = "0xBAD75C", VA = "0xBAD75C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038E")]
			[Address(RVA = "0xBAD7A4", Offset = "0xBAD7A4", VA = "0xBAD7A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0xBAC320", Offset = "0xBAC320", VA = "0xBAC320")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xBAD66C", Offset = "0xBAD66C", VA = "0xBAD66C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xBAD670", Offset = "0xBAD670", VA = "0xBAD670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0xBAD764", Offset = "0xBAD764", VA = "0xBAD764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F1")]
	[CompilerGenerated]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000392")]
			[Address(RVA = "0xBAD8F0", Offset = "0xBAD8F0", VA = "0xBAD8F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000394")]
			[Address(RVA = "0xBAD938", Offset = "0xBAD938", VA = "0xBAD938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0xBAC79C", Offset = "0xBAC79C", VA = "0xBAC79C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0xBAD7AC", Offset = "0xBAD7AC", VA = "0xBAD7AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0xBAD7B0", Offset = "0xBAD7B0", VA = "0xBAD7B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0xBAD8F8", Offset = "0xBAD8F8", VA = "0xBAD8F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F2")]
	[CompilerGenerated]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000398")]
			[Address(RVA = "0xBAD9E8", Offset = "0xBAD9E8", VA = "0xBAD9E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600039A")]
			[Address(RVA = "0xBADA30", Offset = "0xBADA30", VA = "0xBADA30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0xBAC964", Offset = "0xBAC964", VA = "0xBAC964")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xBAD940", Offset = "0xBAD940", VA = "0xBAD940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0xBAD944", Offset = "0xBAD944", VA = "0xBAD944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0xBAD9F0", Offset = "0xBAD9F0", VA = "0xBAD9F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F3")]
	[CompilerGenerated]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600039E")]
			[Address(RVA = "0xBADB14", Offset = "0xBADB14", VA = "0xBADB14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A0")]
			[Address(RVA = "0xBADB5C", Offset = "0xBADB5C", VA = "0xBADB5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0xBACB2C", Offset = "0xBACB2C", VA = "0xBACB2C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0xBADA38", Offset = "0xBADA38", VA = "0xBADA38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0xBADA3C", Offset = "0xBADA3C", VA = "0xBADA3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0xBADB1C", Offset = "0xBADB1C", VA = "0xBADB1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F4")]
	[CompilerGenerated]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A4")]
			[Address(RVA = "0xBADC0C", Offset = "0xBADC0C", VA = "0xBADC0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0xBADC54", Offset = "0xBADC54", VA = "0xBADC54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xBACCF4", Offset = "0xBACCF4", VA = "0xBACCF4")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xBADB64", Offset = "0xBADB64", VA = "0xBADB64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xBADB68", Offset = "0xBADB68", VA = "0xBADB68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xBADC14", Offset = "0xBADC14", VA = "0xBADC14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F5")]
	[CompilerGenerated]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003AA")]
			[Address(RVA = "0xBADD34", Offset = "0xBADD34", VA = "0xBADD34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003AC")]
			[Address(RVA = "0xBADD7C", Offset = "0xBADD7C", VA = "0xBADD7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xBACEBC", Offset = "0xBACEBC", VA = "0xBACEBC")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xBADC5C", Offset = "0xBADC5C", VA = "0xBADC5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xBADC60", Offset = "0xBADC60", VA = "0xBADC60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xBADD3C", Offset = "0xBADD3C", VA = "0xBADD3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F6")]
	[CompilerGenerated]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003B0")]
			[Address(RVA = "0xBADE70", Offset = "0xBADE70", VA = "0xBADE70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003B2")]
			[Address(RVA = "0xBADEB8", Offset = "0xBADEB8", VA = "0xBADEB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xBAD084", Offset = "0xBAD084", VA = "0xBAD084")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xBADD84", Offset = "0xBADD84", VA = "0xBADD84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0xBADD88", Offset = "0xBADD88", VA = "0xBADD88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xBADE78", Offset = "0xBADE78", VA = "0xBADE78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Allow linear movement prior to the teleport system being activated.")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Tooltip("Allow linear movement while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Tooltip("Allow linear movement while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("Allow linear movement after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Allow rotation prior to the teleport system being activated.")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Allow rotation while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("Allow rotation while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Tooltip("Allow rotation after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableRotationDuringPostTeleport;

	[NonSerialized]
	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("This prefab will be instantiated as needed and updated to match the current aim target.")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("TeleportDestinationPrefab will be instantiated into this layer.")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("When aiming at possible destinations, the aim collision type determines which shape to use for collision tests.")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Use the character collision radius/height/skinwidth for sphere/capsule collision tests.")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Radius of the sphere or capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Height of the capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000025")]
	public States CurrentState
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0xBAB9C4", Offset = "0xBAB9C4", VA = "0xBAB9C4")]
		[CompilerGenerated]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000354")]
		[Address(RVA = "0xBAB9CC", Offset = "0xBAB9CC", VA = "0xBAB9CC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0xBABB9C", Offset = "0xBABB9C", VA = "0xBABB9C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000027")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0xBABBC0", Offset = "0xBABBC0", VA = "0xBABBC0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600035A")]
		[Address(RVA = "0xBABBC8", Offset = "0xBABBC8", VA = "0xBABBC8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0xBAB9D4", Offset = "0xBAB9D4", VA = "0xBAB9D4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xBABA84", Offset = "0xBABA84", VA = "0xBABA84")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000364")]
		[Address(RVA = "0xBAC1E8", Offset = "0xBAC1E8", VA = "0xBAC1E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000365")]
		[Address(RVA = "0xBAC284", Offset = "0xBAC284", VA = "0xBAC284")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0xBAC348", Offset = "0xBAC348", VA = "0xBAC348")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000368")]
		[Address(RVA = "0xBAC3E4", Offset = "0xBAC3E4", VA = "0xBAC3E4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0xBAC480", Offset = "0xBAC480", VA = "0xBAC480")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600036A")]
		[Address(RVA = "0xBAC530", Offset = "0xBAC530", VA = "0xBAC530")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600036C")]
		[Address(RVA = "0xBAC5FC", Offset = "0xBAC5FC", VA = "0xBAC5FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xBAC698", Offset = "0xBAC698", VA = "0xBAC698")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600036F")]
		[Address(RVA = "0xBAC7C4", Offset = "0xBAC7C4", VA = "0xBAC7C4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000370")]
		[Address(RVA = "0xBAC860", Offset = "0xBAC860", VA = "0xBAC860")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000372")]
		[Address(RVA = "0xBAC98C", Offset = "0xBAC98C", VA = "0xBAC98C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000373")]
		[Address(RVA = "0xBACA28", Offset = "0xBACA28", VA = "0xBACA28")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000375")]
		[Address(RVA = "0xBACB54", Offset = "0xBACB54", VA = "0xBACB54")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000376")]
		[Address(RVA = "0xBACBF0", Offset = "0xBACBF0", VA = "0xBACBF0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000378")]
		[Address(RVA = "0xBACD1C", Offset = "0xBACD1C", VA = "0xBACD1C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000379")]
		[Address(RVA = "0xBACDB8", Offset = "0xBACDB8", VA = "0xBACDB8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600037B")]
		[Address(RVA = "0xBACEE4", Offset = "0xBACEE4", VA = "0xBACEE4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600037C")]
		[Address(RVA = "0xBACF80", Offset = "0xBACF80", VA = "0xBACF80")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0xBAD0AC", Offset = "0xBAD0AC", VA = "0xBAD0AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600037F")]
		[Address(RVA = "0xBAD15C", Offset = "0xBAD15C", VA = "0xBAD15C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xBAB97C", Offset = "0xBAB97C", VA = "0xBAB97C")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xBAB9A0", Offset = "0xBAB9A0", VA = "0xBAB9A0")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xBABB34", Offset = "0xBABB34", VA = "0xBABB34")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xBABBD0", Offset = "0xBABBD0", VA = "0xBABBD0")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xBABE98", Offset = "0xBABE98", VA = "0xBABE98")]
	[Conditional("DEBUG_TELEPORT_STATES")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xBABF40", Offset = "0xBABF40", VA = "0xBABF40")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xBAC004", Offset = "0xBAC004", VA = "0xBAC004")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xBAC020", Offset = "0xBAC020", VA = "0xBAC020")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xBAC0D0", Offset = "0xBAC0D0", VA = "0xBAC0D0")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xBAC100", Offset = "0xBAC100", VA = "0xBAC100")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xBAC154", Offset = "0xBAC154", VA = "0xBAC154", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xBAC1E0", Offset = "0xBAC1E0", VA = "0xBAC1E0", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xBAC178", Offset = "0xBAC178", VA = "0xBAC178")]
	[IteratorStateMachine(typeof(<ReadyStateCoroutine>d__52))]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xBAC5E0", Offset = "0xBAC5E0", VA = "0xBAC5E0")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xBAC734", Offset = "0xBAC734", VA = "0xBAC734")]
	[IteratorStateMachine(typeof(<AimStateCoroutine>d__64))]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xBAC8FC", Offset = "0xBAC8FC", VA = "0xBAC8FC")]
	[IteratorStateMachine(typeof(<CancelAimStateCoroutine>d__68))]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xBACAC4", Offset = "0xBACAC4", VA = "0xBACAC4")]
	[IteratorStateMachine(typeof(<PreTeleportStateCoroutine>d__72))]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xBACC8C", Offset = "0xBACC8C", VA = "0xBACC8C")]
	[IteratorStateMachine(typeof(<CancelTeleportStateCoroutine>d__76))]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xBACE54", Offset = "0xBACE54", VA = "0xBACE54")]
	[IteratorStateMachine(typeof(<TeleportingStateCoroutine>d__80))]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xBAD01C", Offset = "0xBAD01C", VA = "0xBAD01C")]
	[IteratorStateMachine(typeof(<PostTeleportStateCoroutine>d__84))]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xBAD20C", Offset = "0xBAD20C", VA = "0xBAD20C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xBAD320", Offset = "0xBAD320", VA = "0xBAD320")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xBAD350", Offset = "0xBAD350", VA = "0xBAD350")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xBAD48C", Offset = "0xBAD48C", VA = "0xBAD48C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xBAD574", Offset = "0xBAD574", VA = "0xBAD574")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000F7")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xBAAA44", Offset = "0xBAAA44", VA = "0xBAAA44")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xBAAB68", Offset = "0xBAAB68", VA = "0xBAAB68")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xBADEC0", Offset = "0xBADEC0", VA = "0xBADEC0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xBADF5C", Offset = "0xBADF5C", VA = "0xBADF5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xBADFF8", Offset = "0xBADFF8", VA = "0xBADFF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xBAE0B0", Offset = "0xBAE0B0", VA = "0xBAE0B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xBAE0B4", Offset = "0xBAE0B4", VA = "0xBAE0B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xBAE128", Offset = "0xBAE128", VA = "0xBAE128")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xBAE24C", Offset = "0xBAE24C", VA = "0xBAE24C")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xBAE4C4", Offset = "0xBAE4C4", VA = "0xBAE4C4")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xBAE6E4", Offset = "0xBAE6E4", VA = "0xBAE6E4")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000F8")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xBAE704", Offset = "0xBAE704", VA = "0xBAE704", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xBAE72C", Offset = "0xBAE72C", VA = "0xBAE72C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60003C0")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xBAE7B4", Offset = "0xBAE7B4", VA = "0xBAE7B4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000F9")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xBAE7BC", Offset = "0xBAE7BC", VA = "0xBAE7BC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xBAE94C", Offset = "0xBAE94C", VA = "0xBAE94C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000FA")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The MinimumElevation is relative to the AimPosition.")]
	public float MinimumElevation;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The Gravity is used in conjunction with AimVelocity and the aim direction to simulate a projectile.")]
	public float Gravity;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The AimVelocity is the initial speed of the faked projectile.")]
	[Range(0.001f, 50f)]
	public float AimVelocity;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0.001f, 1f)]
	[Tooltip("The AimStep is the how much to subdivide the iteration.")]
	public float AimStep;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xBAE95C", Offset = "0xBAE95C", VA = "0xBAE95C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xBAEB30", Offset = "0xBAEB30", VA = "0xBAEB30")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000FB")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This prefab will be instantiated when the aim visual is awakened, and will be set active when the user is aiming, and deactivated when they are done aiming.")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xBAEB44", Offset = "0xBAEB44", VA = "0xBAEB44")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xBAEC58", Offset = "0xBAEC58", VA = "0xBAEC58")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xBAEC84", Offset = "0xBAEC84", VA = "0xBAEC84")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xBAECB0", Offset = "0xBAECB0", VA = "0xBAECB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xBAED4C", Offset = "0xBAED4C", VA = "0xBAED4C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xBAEDAC", Offset = "0xBAEDAC", VA = "0xBAEDAC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xBAEE08", Offset = "0xBAEE08", VA = "0xBAEE08")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000FC")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("If the target handler provides a target position, this transform will be moved to that position and it's game object enabled. A target position being provided does not mean the position is valid, only that the aim handler found something to test as a destination.")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This transform will be rotated to match the rotation of the aiming target. Simple teleport destinations should assign this to the object containing this component. More complex teleport destinations might assign this to a sub-object that is used to indicate the landing orientation independently from the rest of the destination indicator, such as when world space effects are required. This will typically be a child of the PositionIndicator.")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("After the player teleports, the character controller will have it's rotation set to this value. It is different from the OrientationIndicator transform.rotation in order to support both head-relative and forward-facing teleport modes (See TeleportOrientationHandlerThumbstick.cs).")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000037")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xBAEF04", Offset = "0xBAEF04", VA = "0xBAEF04")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xBAEF0C", Offset = "0xBAEF0C", VA = "0xBAEF0C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xBAF094", Offset = "0xBAF094", VA = "0xBAF094")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xBAF144", Offset = "0xBAF144", VA = "0xBAF144")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xBAEF18", Offset = "0xBAEF18", VA = "0xBAEF18")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xBAEF94", Offset = "0xBAEF94", VA = "0xBAEF94")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xBAF05C", Offset = "0xBAF05C", VA = "0xBAF05C")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xBAF090", Offset = "0xBAF090", VA = "0xBAF090")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xBAF1F4", Offset = "0xBAF1F4", VA = "0xBAF1F4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xBAF218", Offset = "0xBAF218", VA = "0xBAF218")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xBAF238", Offset = "0xBAF238", VA = "0xBAF238", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000FD")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000FE")]
	[CompilerGenerated]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E4")]
			[Address(RVA = "0xBAF7C4", Offset = "0xBAF7C4", VA = "0xBAF7C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E6")]
			[Address(RVA = "0xBAF80C", Offset = "0xBAF80C", VA = "0xBAF80C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xBAF648", Offset = "0xBAF648", VA = "0xBAF648")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xBAF740", Offset = "0xBAF740", VA = "0xBAF740", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xBAF744", Offset = "0xBAF744", VA = "0xBAF744", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xBAF7CC", Offset = "0xBAF7CC", VA = "0xBAF7CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FF")]
	[CompilerGenerated]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003EA")]
			[Address(RVA = "0xBAF8A4", Offset = "0xBAF8A4", VA = "0xBAF8A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0xBAF8EC", Offset = "0xBAF8EC", VA = "0xBAF8EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xBAF6D8", Offset = "0xBAF6D8", VA = "0xBAF6D8")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xBAF814", Offset = "0xBAF814", VA = "0xBAF814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xBAF818", Offset = "0xBAF818", VA = "0xBAF818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xBAF8AC", Offset = "0xBAF8AC", VA = "0xBAF8AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xBAF42C", Offset = "0xBAF42C", VA = "0xBAF42C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xBAF4EC", Offset = "0xBAF4EC", VA = "0xBAF4EC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xBAF530", Offset = "0xBAF530", VA = "0xBAF530", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xBAF5E0", Offset = "0xBAF5E0", VA = "0xBAF5E0")]
	[IteratorStateMachine(typeof(<TeleportReadyCoroutine>d__5))]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xBAF670", Offset = "0xBAF670", VA = "0xBAF670")]
	[IteratorStateMachine(typeof(<TeleportAimCoroutine>d__6))]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003DD")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60003DE")]
	public abstract void GetAimData(out Ray aimRay);
}
[Token(Token = "0x2000100")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The button used to begin aiming for a teleport.")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The button used to trigger the teleport after aiming. It can be the same button as the AimButton, however you cannot abort a teleport if it is.")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("When true, the system will not use the PreTeleport intention which will allow a teleport to occur on a button downpress. When false, the button downpress will trigger the PreTeleport intention and the Teleport intention when the button is released.")]
	public bool FastTeleport;

	[Token(Token = "0x1700003C")]
	public Transform Pointer
	{
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xBAF8F4", Offset = "0xBAF8F4", VA = "0xBAF8F4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xBAF8FC", Offset = "0xBAF8FC", VA = "0xBAF8FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xBAF904", Offset = "0xBAF904", VA = "0xBAF904", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xBAFA30", Offset = "0xBAFA30", VA = "0xBAFA30", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xBAFAE4", Offset = "0xBAFAE4", VA = "0xBAFAE4")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000101")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000102")]
	public enum InputModes
	{
		[Token(Token = "0x40005A1")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40005A2")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40005A3")]
		ThumbstickTeleport,
		[Token(Token = "0x40005A4")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000103")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40005A6")]
		A,
		[Token(Token = "0x40005A7")]
		B,
		[Token(Token = "0x40005A8")]
		LeftTrigger,
		[Token(Token = "0x40005A9")]
		LeftThumbstick,
		[Token(Token = "0x40005AA")]
		RightTrigger,
		[Token(Token = "0x40005AB")]
		RightThumbstick,
		[Token(Token = "0x40005AC")]
		X,
		[Token(Token = "0x40005AD")]
		Y
	}

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("CapacitiveButtonForAimAndTeleport=Activate aiming via cap touch detection, press the same button to teleport.\nSeparateButtonsForAimAndTeleport=Use one button to begin aiming, and another to trigger the teleport.\nThumbstickTeleport=Push a thumbstick to begin aiming, release to teleport.")]
	public InputModes InputMode;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Select the controller to be used for aiming. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Select the button to use for triggering aim and teleport when InputMode==CapacitiveButtonForAimAndTeleport")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("The thumbstick magnitude required to trigger aiming and teleports when InputMode==InputModes.ThumbstickTeleport")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xBAFAE8", Offset = "0xBAFAE8", VA = "0xBAFAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xBAFAEC", Offset = "0xBAFAEC", VA = "0xBAFAEC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xBAFF20", Offset = "0xBAFF20", VA = "0xBAFF20", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xBAFFDC", Offset = "0xBAFFDC", VA = "0xBAFFDC")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000104")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000105")]
	public enum OrientationModes
	{
		[Token(Token = "0x40005B2")]
		HeadRelative,
		[Token(Token = "0x40005B3")]
		ForwardFacing
	}

	[Token(Token = "0x2000106")]
	[CompilerGenerated]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000402")]
			[Address(RVA = "0xBB0458", Offset = "0xBB0458", VA = "0xBB0458", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000404")]
			[Address(RVA = "0xBB04A0", Offset = "0xBB04A0", VA = "0xBB04A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xBB0274", Offset = "0xBB0274", VA = "0xBB0274")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xBB03B4", Offset = "0xBB03B4", VA = "0xBB03B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0xBB03B8", Offset = "0xBB03B8", VA = "0xBB03B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0xBB0460", Offset = "0xBB0460", VA = "0xBB0460", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xBB00B4", Offset = "0xBB00B4", VA = "0xBB00B4")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xBB0188", Offset = "0xBB0188", VA = "0xBB0188")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xBB0190", Offset = "0xBB0190", VA = "0xBB0190", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xBB01D0", Offset = "0xBB01D0", VA = "0xBB01D0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xBB020C", Offset = "0xBB020C", VA = "0xBB020C")]
	[IteratorStateMachine(typeof(<UpdateOrientationCoroutine>d__7))]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003FB")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60003FC")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xBB029C", Offset = "0xBB029C", VA = "0xBB029C")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000107")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000405")]
	[Address(RVA = "0xBB04A8", Offset = "0xBB04A8", VA = "0xBB04A8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xBB04AC", Offset = "0xBB04AC", VA = "0xBB04AC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xBB0524", Offset = "0xBB0524", VA = "0xBB0524")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000108")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Should the destination orientation be updated during the aim state in addition to the PreTeleport state?")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("How far from the destination must the HMD be pointing before using it for orientation")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("How far from the destination must the HMD be pointing before rejecting the teleport")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xBB0528", Offset = "0xBB0528", VA = "0xBB0528", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xBB0578", Offset = "0xBB0578", VA = "0xBB0578", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xBB09F4", Offset = "0xBB09F4", VA = "0xBB09F4")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000109")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Which thumbstick is to be used for adjusting the teleport orientation. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The orientation will only change if the thumbstick magnitude is above this value. This will usually be larger than the TeleportInputHandlerTouch.ThumbstickTeleportThreshold.")]
	public float RotateStickThreshold;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xBB09F8", Offset = "0xBB09F8", VA = "0xBB09F8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xBB0A30", Offset = "0xBB0A30", VA = "0xBB0A30", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xBB0F08", Offset = "0xBB0F08", VA = "0xBB0F08")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200010A")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xBB0F18", Offset = "0xBB0F18", VA = "0xBB0F18")]
	private void Start()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xBB0F1C", Offset = "0xBB0F1C", VA = "0xBB0F1C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xBB0F24", Offset = "0xBB0F24", VA = "0xBB0F24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xBB1010", Offset = "0xBB1010", VA = "0xBB1010")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xBB102C", Offset = "0xBB102C", VA = "0xBB102C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200010B")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700003F")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000413")]
		[Address(RVA = "0xBB1044", Offset = "0xBB1044", VA = "0xBB1044")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000414")]
		[Address(RVA = "0xBB104C", Offset = "0xBB104C", VA = "0xBB104C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xBB1054", Offset = "0xBB1054", VA = "0xBB1054", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xBB10B0", Offset = "0xBB10B0", VA = "0xBB10B0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xBB10D0", Offset = "0xBB10D0", VA = "0xBB10D0")]
	[Conditional("DEBUG_TELEPORT_EVENT_HANDLERS")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xBAEDA0", Offset = "0xBAEDA0", VA = "0xBAEDA0", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xBAEE00", Offset = "0xBAEE00", VA = "0xBAEE00", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xBAEC50", Offset = "0xBAEC50", VA = "0xBAEC50")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200010C")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x200010D")]
	[CompilerGenerated]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000426")]
			[Address(RVA = "0xBB1784", Offset = "0xBB1784", VA = "0xBB1784", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000428")]
			[Address(RVA = "0xBB17CC", Offset = "0xBB17CC", VA = "0xBB17CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xBB1358", Offset = "0xBB1358", VA = "0xBB1358")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xBB14D8", Offset = "0xBB14D8", VA = "0xBB14D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xBB14DC", Offset = "0xBB14DC", VA = "0xBB14DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xBB178C", Offset = "0xBB178C", VA = "0xBB178C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("This bitmask controls which game object layers will be included in the targeting collision tests.")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40005CD")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xBB11A0", Offset = "0xBB11A0", VA = "0xBB11A0")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xBB129C", Offset = "0xBB129C", VA = "0xBB129C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xBB12C8", Offset = "0xBB12C8", VA = "0xBB12C8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xBB12F0", Offset = "0xBB12F0", VA = "0xBB12F0")]
	[IteratorStateMachine(typeof(<TargetAimCoroutine>d__7))]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xBB1380", Offset = "0xBB1380", VA = "0xBB1380", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000420")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xBB139C", Offset = "0xBB139C", VA = "0xBB139C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}
}
[Token(Token = "0x200010E")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xBB17D4", Offset = "0xBB17D4", VA = "0xBB17D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xBB1834", Offset = "0xBB1834", VA = "0xBB1834", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xBB19A0", Offset = "0xBB19A0", VA = "0xBB19A0", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xBB1A90", Offset = "0xBB1A90", VA = "0xBB1A90")]
	[Conditional("SHOW_PATH_RESULT")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xBB1A94", Offset = "0xBB1A94", VA = "0xBB1A94")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200010F")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("When checking line of sight to the destination, add this value to the vertical offset for targeting collision checks.")]
	public float LOSOffset;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Teleport logic will only work with TeleportPoint components that exist in the layers specified by this mask.")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xBB1AA0", Offset = "0xBB1AA0", VA = "0xBB1AA0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xBB1CA0", Offset = "0xBB1CA0", VA = "0xBB1CA0")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000110")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000430")]
	[Address(RVA = "0xBB1CAC", Offset = "0xBB1CAC", VA = "0xBB1CAC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xBB1E18", Offset = "0xBB1E18", VA = "0xBB1E18")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000111")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000432")]
	[Address(RVA = "0xBB1E1C", Offset = "0xBB1E1C", VA = "0xBB1E1C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xBB1EA4", Offset = "0xBB1EA4", VA = "0xBB1EA4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000434")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xBB1F28", Offset = "0xBB1F28", VA = "0xBB1F28")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000112")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000113")]
	[CompilerGenerated]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600043C")]
			[Address(RVA = "0xBB226C", Offset = "0xBB226C", VA = "0xBB226C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043E")]
			[Address(RVA = "0xBB22B4", Offset = "0xBB22B4", VA = "0xBB22B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0xBB1FB8", Offset = "0xBB1FB8", VA = "0xBB1FB8")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xBB2170", Offset = "0xBB2170", VA = "0xBB2170", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xBB2174", Offset = "0xBB2174", VA = "0xBB2174", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0xBB2274", Offset = "0xBB2274", VA = "0xBB2274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How long the transition takes. Usually this is greater than Teleport Delay.")]
	[Range(0.01f, 2f)]
	public float TransitionDuration;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	[Tooltip("At what percentage of the elapsed transition time does the teleport occur?")]
	public float TeleportDelay;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Fade to black over the duration of the transition")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xBB1F30", Offset = "0xBB1F30", VA = "0xBB1F30", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xBB1F50", Offset = "0xBB1F50", VA = "0xBB1F50")]
	[IteratorStateMachine(typeof(<BlinkCoroutine>d__4))]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xBB1FE0", Offset = "0xBB1FE0", VA = "0xBB1FE0")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000114")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600043F")]
	[Address(RVA = "0xBB22BC", Offset = "0xBB22BC", VA = "0xBB22BC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xBB22D8", Offset = "0xBB22D8", VA = "0xBB22D8")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000115")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000116")]
	[CompilerGenerated]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000447")]
			[Address(RVA = "0xBB24E4", Offset = "0xBB24E4", VA = "0xBB24E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000449")]
			[Address(RVA = "0xBB252C", Offset = "0xBB252C", VA = "0xBB252C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0xBB2368", Offset = "0xBB2368", VA = "0xBB2368")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0xBB23CC", Offset = "0xBB23CC", VA = "0xBB23CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0xBB23D0", Offset = "0xBB23D0", VA = "0xBB23D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0xBB24EC", Offset = "0xBB24EC", VA = "0xBB24EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0.01f, 1f)]
	[Tooltip("How much time the warp transition takes to complete.")]
	public float TransitionDuration;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xBB22E0", Offset = "0xBB22E0", VA = "0xBB22E0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xBB2300", Offset = "0xBB2300", VA = "0xBB2300")]
	[IteratorStateMachine(typeof(<DoWarp>d__3))]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xBB2390", Offset = "0xBB2390", VA = "0xBB2390")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000117")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000118")]
	public enum PlabackState
	{
		[Token(Token = "0x40005FD")]
		Idle = 1,
		[Token(Token = "0x40005FE")]
		Preparing,
		[Token(Token = "0x40005FF")]
		Buffering,
		[Token(Token = "0x4000600")]
		Ready,
		[Token(Token = "0x4000601")]
		Ended
	}

	[Token(Token = "0x2000119")]
	public enum StereoMode
	{
		[Token(Token = "0x4000603")]
		Unknown = -1,
		[Token(Token = "0x4000604")]
		Mono,
		[Token(Token = "0x4000605")]
		TopBottom,
		[Token(Token = "0x4000606")]
		LeftRight,
		[Token(Token = "0x4000607")]
		Mesh
	}

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000046")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600044A")]
		[Address(RVA = "0xBB2534", Offset = "0xBB2534", VA = "0xBB2534")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000047")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600044B")]
		[Address(RVA = "0xBB27F0", Offset = "0xBB27F0", VA = "0xBB27F0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000048")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600044C")]
		[Address(RVA = "0xBB2A5C", Offset = "0xBB2A5C", VA = "0xBB2A5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000049")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600044D")]
		[Address(RVA = "0xBB2AC0", Offset = "0xBB2AC0", VA = "0xBB2AC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004A")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0xBB2BB4", Offset = "0xBB2BB4", VA = "0xBB2BB4")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700004B")]
	public static long Duration
	{
		[Token(Token = "0x600044F")]
		[Address(RVA = "0xBB2CAC", Offset = "0xBB2CAC", VA = "0xBB2CAC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700004C")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000450")]
		[Address(RVA = "0xBB2DA4", Offset = "0xBB2DA4", VA = "0xBB2DA4")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700004D")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000451")]
		[Address(RVA = "0xBB2E9C", Offset = "0xBB2E9C", VA = "0xBB2E9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700004E")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0xBB2F94", Offset = "0xBB2F94", VA = "0xBB2F94")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700004F")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000453")]
		[Address(RVA = "0xBB308C", Offset = "0xBB308C", VA = "0xBB308C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000454")]
		[Address(RVA = "0xBB3184", Offset = "0xBB3184", VA = "0xBB3184")]
		set
		{
		}
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xBB32D4", Offset = "0xBB32D4", VA = "0xBB32D4")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xBB34D0", Offset = "0xBB34D0", VA = "0xBB34D0")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xBB35C8", Offset = "0xBB35C8", VA = "0xBB35C8")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xBB36C0", Offset = "0xBB36C0", VA = "0xBB36C0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xBB37B8", Offset = "0xBB37B8", VA = "0xBB37B8")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xBB3910", Offset = "0xBB3910", VA = "0xBB3910")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xBB3A64", Offset = "0xBB3A64", VA = "0xBB3A64")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x200011A")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xBB3C98", Offset = "0xBB3C98", VA = "0xBB3C98")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600045E")]
		[Address(RVA = "0xBB3D34", Offset = "0xBB3D34", VA = "0xBB3D34")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xBB3DD0", Offset = "0xBB3DD0", VA = "0xBB3DD0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xBB3DEC", Offset = "0xBB3DEC", VA = "0xBB3DEC")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200011B")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200011C")]
	public enum ButtonType
	{
		[Token(Token = "0x400060B")]
		Play,
		[Token(Token = "0x400060C")]
		Pause,
		[Token(Token = "0x400060D")]
		FastForward,
		[Token(Token = "0x400060E")]
		Rewind,
		[Token(Token = "0x400060F")]
		SkipForward,
		[Token(Token = "0x4000610")]
		SkipBack,
		[Token(Token = "0x4000611")]
		Stop
	}

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000050")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000461")]
		[Address(RVA = "0xBB3DF4", Offset = "0xBB3DF4", VA = "0xBB3DF4")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000462")]
		[Address(RVA = "0xBB3DFC", Offset = "0xBB3DFC", VA = "0xBB3DFC")]
		set
		{
		}
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xBB3E20", Offset = "0xBB3E20", VA = "0xBB3E20", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xBB4C74", Offset = "0xBB4C74", VA = "0xBB4C74")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200011D")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200011E")]
	public enum VideoShape
	{
		[Token(Token = "0x4000626")]
		_360,
		[Token(Token = "0x4000627")]
		_180,
		[Token(Token = "0x4000628")]
		Quad
	}

	[Token(Token = "0x200011F")]
	public enum VideoStereo
	{
		[Token(Token = "0x400062A")]
		Mono,
		[Token(Token = "0x400062B")]
		TopBottom,
		[Token(Token = "0x400062C")]
		LeftRight,
		[Token(Token = "0x400062D")]
		BottomTop
	}

	[Token(Token = "0x2000120")]
	[CompilerGenerated]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600047B")]
			[Address(RVA = "0xBB60FC", Offset = "0xBB60FC", VA = "0xBB60FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600047D")]
			[Address(RVA = "0xBB6144", Offset = "0xBB6144", VA = "0xBB6144", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0xBB5318", Offset = "0xBB5318", VA = "0xBB5318")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0xBB5F5C", Offset = "0xBB5F5C", VA = "0xBB5F5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xBB5F60", Offset = "0xBB5F60", VA = "0xBB5F60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xBB6104", Offset = "0xBB6104", VA = "0xBB6104", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000051")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000465")]
		[Address(RVA = "0xBB4CCC", Offset = "0xBB4CCC", VA = "0xBB4CCC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000466")]
		[Address(RVA = "0xBB4CD4", Offset = "0xBB4CD4", VA = "0xBB4CD4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public long Duration
	{
		[Token(Token = "0x6000467")]
		[Address(RVA = "0xBB4CE0", Offset = "0xBB4CE0", VA = "0xBB4CE0")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000468")]
		[Address(RVA = "0xBB4CE8", Offset = "0xBB4CE8", VA = "0xBB4CE8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000469")]
		[Address(RVA = "0xBB4CF0", Offset = "0xBB4CF0", VA = "0xBB4CF0")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600046A")]
		[Address(RVA = "0xBB4CF8", Offset = "0xBB4CF8", VA = "0xBB4CF8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xBB4D00", Offset = "0xBB4D00", VA = "0xBB4D00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xBB4F50", Offset = "0xBB4F50", VA = "0xBB4F50")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xBB4FB0", Offset = "0xBB4FB0", VA = "0xBB4FB0")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xBB52B0", Offset = "0xBB52B0", VA = "0xBB52B0")]
	[IteratorStateMachine(typeof(<Start>d__33))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xBB5340", Offset = "0xBB5340", VA = "0xBB5340")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xBB55D0", Offset = "0xBB55D0", VA = "0xBB55D0")]
	public void Play()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xBB5654", Offset = "0xBB5654", VA = "0xBB5654")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xBB56D4", Offset = "0xBB56D4", VA = "0xBB56D4")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xBB57C0", Offset = "0xBB57C0", VA = "0xBB57C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xBB5D50", Offset = "0xBB5D50", VA = "0xBB5D50")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xBB5DEC", Offset = "0xBB5DEC", VA = "0xBB5DEC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xBB5E6C", Offset = "0xBB5E6C", VA = "0xBB5E6C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xBB5F4C", Offset = "0xBB5F4C", VA = "0xBB5F4C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000122")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000123")]
	private enum PlaybackState
	{
		[Token(Token = "0x400064A")]
		Playing,
		[Token(Token = "0x400064B")]
		Paused,
		[Token(Token = "0x400064C")]
		Rewinding,
		[Token(Token = "0x400064D")]
		FastForwarding
	}

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xBB6220", Offset = "0xBB6220", VA = "0xBB6220")]
	private void Start()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xBB654C", Offset = "0xBB654C", VA = "0xBB654C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xBB671C", Offset = "0xBB671C", VA = "0xBB671C")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xBB6840", Offset = "0xBB6840", VA = "0xBB6840")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xBB693C", Offset = "0xBB693C", VA = "0xBB693C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xBB6814", Offset = "0xBB6814", VA = "0xBB6814")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xBB699C", Offset = "0xBB699C", VA = "0xBB699C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xBB644C", Offset = "0xBB644C", VA = "0xBB644C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xBB6CA8", Offset = "0xBB6CA8", VA = "0xBB6CA8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000124")]
public static class VectorUtil
{
	[Token(Token = "0x6000489")]
	[Address(RVA = "0xBB5CD8", Offset = "0xBB5CD8", VA = "0xBB5CD8")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000125")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x400064E")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x400064F")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xBB6CB8", Offset = "0xBB6CB8", VA = "0xBB6CB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xBB72A8", Offset = "0xBB72A8", VA = "0xBB72A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xBB7504", Offset = "0xBB7504", VA = "0xBB7504")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xBB7668", Offset = "0xBB7668", VA = "0xBB7668")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xBB77D0", Offset = "0xBB77D0", VA = "0xBB77D0")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xBB7954", Offset = "0xBB7954", VA = "0xBB7954")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x2000126")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000658")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xBB7964", Offset = "0xBB7964", VA = "0xBB7964")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xBB79B0", Offset = "0xBB79B0", VA = "0xBB79B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xBB79B4", Offset = "0xBB79B4", VA = "0xBB79B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xBB7068", Offset = "0xBB7068", VA = "0xBB7068")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xBB79B8", Offset = "0xBB79B8", VA = "0xBB79B8")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xBB7BD4", Offset = "0xBB7BD4", VA = "0xBB7BD4")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x2000127")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xBB7BDC", Offset = "0xBB7BDC", VA = "0xBB7BDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xBB812C", Offset = "0xBB812C", VA = "0xBB812C")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xBB81D8", Offset = "0xBB81D8", VA = "0xBB81D8")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xBB83F0", Offset = "0xBB83F0", VA = "0xBB83F0")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xBB84C4", Offset = "0xBB84C4", VA = "0xBB84C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xBB859C", Offset = "0xBB859C", VA = "0xBB859C")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xBB8604", Offset = "0xBB8604", VA = "0xBB8604")]
	public DebugUISample()
	{
	}
}
[Token(Token = "0x2000128")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xBB87AC", Offset = "0xBB87AC", VA = "0xBB87AC")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x2000129")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xBB87B4", Offset = "0xBB87B4", VA = "0xBB87B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xBB884C", Offset = "0xBB884C", VA = "0xBB884C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xBB8924", Offset = "0xBB8924", VA = "0xBB8924")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xBB8980", Offset = "0xBB8980", VA = "0xBB8980")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x200012A")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xBB8988", Offset = "0xBB8988", VA = "0xBB8988")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x200012B")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200012C")]
	[CompilerGenerated]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004AE")]
			[Address(RVA = "0xBB8D54", Offset = "0xBB8D54", VA = "0xBB8D54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B0")]
			[Address(RVA = "0xBB8D9C", Offset = "0xBB8D9C", VA = "0xBB8D9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xBB8C1C", Offset = "0xBB8C1C", VA = "0xBB8C1C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xBB8C4C", Offset = "0xBB8C4C", VA = "0xBB8C4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xBB8C50", Offset = "0xBB8C50", VA = "0xBB8C50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xBB8D5C", Offset = "0xBB8D5C", VA = "0xBB8D5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xBB8990", Offset = "0xBB8990", VA = "0xBB8990")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xBB8A84", Offset = "0xBB8A84", VA = "0xBB8A84")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xBB8A1C", Offset = "0xBB8A1C", VA = "0xBB8A1C")]
	[IteratorStateMachine(typeof(<GetCenterEye>d__6))]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xBB8C44", Offset = "0xBB8C44", VA = "0xBB8C44")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x200012D")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(4f, 32f)]
	public int SubdivisionsU;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(4f, 32f)]
	public int SubdivisionsV;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xBB8DA4", Offset = "0xBB8DA4", VA = "0xBB8DA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xBBA710", Offset = "0xBBA710", VA = "0xBBA710")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200012E")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000058")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xBBA718", Offset = "0xBBA718", VA = "0xBBA718")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xBBA768", Offset = "0xBBA768", VA = "0xBBA768")]
	public void Start()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xBBAB94", Offset = "0xBBAB94", VA = "0xBBAB94")]
	public void Update()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xBBAC6C", Offset = "0xBBAC6C", VA = "0xBBAC6C")]
	[Conditional("DEBUG_LOCOMOTION_PANEL")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60004B7")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60004B8")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60004B9")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60004BA")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60004BB")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60004BC")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60004BD")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60004BE")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xBBACC4", Offset = "0xBBACC4", VA = "0xBBACC4")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xBBAD04", Offset = "0xBBAD04", VA = "0xBBAD04")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xBBAD70", Offset = "0xBBAD70", VA = "0xBBAD70")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xBBAEBC", Offset = "0xBBAEBC", VA = "0xBBAEBC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xBBAF8C", Offset = "0xBBAF8C", VA = "0xBBAF8C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xBBAA70", Offset = "0xBBAA70", VA = "0xBBAA70")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xBBB05C", Offset = "0xBBB05C", VA = "0xBBB05C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xBBB0A8", Offset = "0xBBB0A8", VA = "0xBBB0A8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xBBB1B8", Offset = "0xBBB1B8", VA = "0xBBB1B8")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200012F")]
[RequireComponent(typeof(Canvas))]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000130")]
	public enum DrawMode
	{
		[Token(Token = "0x4000687")]
		Opaque,
		[Token(Token = "0x4000688")]
		OpaqueWithClip,
		[Token(Token = "0x4000689")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400068A")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000059")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xBBC714", Offset = "0xBBC714", VA = "0xBBC714")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xBBC798", Offset = "0xBBC798", VA = "0xBBC798")]
		set
		{
		}
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xBBB1C0", Offset = "0xBBB1C0", VA = "0xBBB1C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xBBBD9C", Offset = "0xBBBD9C", VA = "0xBBBD9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xBBBE10", Offset = "0xBBBE10", VA = "0xBBBE10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xBBBEE0", Offset = "0xBBBEE0", VA = "0xBBBEE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xBBBFB0", Offset = "0xBBBFB0", VA = "0xBBBFB0", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xBBC1B4", Offset = "0xBBC1B4", VA = "0xBBC1B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xBBC854", Offset = "0xBBC854", VA = "0xBBC854")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000131")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xBBC904", Offset = "0xBBC904", VA = "0xBBC904")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xBBCC50", Offset = "0xBBCC50", VA = "0xBBCC50")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xBBCDE4", Offset = "0xBBCDE4", VA = "0xBBCDE4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xBBCDEC", Offset = "0xBBCDEC", VA = "0xBBCDEC")]
	public void Release()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xBBCDD4", Offset = "0xBBCDD4", VA = "0xBBCDD4")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xBBCDF4", Offset = "0xBBCDF4", VA = "0xBBCDF4")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x2000132")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x2000133")]
	[CompilerGenerated]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E2")]
			[Address(RVA = "0xBBD4A8", Offset = "0xBBD4A8", VA = "0xBBD4A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004E4")]
			[Address(RVA = "0xBBD4F0", Offset = "0xBBD4F0", VA = "0xBBD4F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xBBD364", Offset = "0xBBD364", VA = "0xBBD364")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xBBD3BC", Offset = "0xBBD3BC", VA = "0xBBD3BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xBBD3C0", Offset = "0xBBD3C0", VA = "0xBBD3C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xBBD4B0", Offset = "0xBBD4B0", VA = "0xBBD4B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000134")]
	[CompilerGenerated]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0xBBD668", Offset = "0xBBD668", VA = "0xBBD668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0xBBD6B0", Offset = "0xBBD6B0", VA = "0xBBD6B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xBBD38C", Offset = "0xBBD38C", VA = "0xBBD38C")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xBBD4F8", Offset = "0xBBD4F8", VA = "0xBBD4F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xBBD4FC", Offset = "0xBBD4FC", VA = "0xBBD4FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xBBD670", Offset = "0xBBD670", VA = "0xBBD670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xBBCDFC", Offset = "0xBBCDFC", VA = "0xBBCDFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xBBD09C", Offset = "0xBBD09C", VA = "0xBBD09C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xBBD0EC", Offset = "0xBBD0EC", VA = "0xBBD0EC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xBBD240", Offset = "0xBBD240", VA = "0xBBD240")]
	public void Release()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xBBD2CC", Offset = "0xBBD2CC", VA = "0xBBD2CC")]
	[IteratorStateMachine(typeof(<FadeCameraClearColor>d__8))]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xBBD18C", Offset = "0xBBD18C", VA = "0xBBD18C")]
	[IteratorStateMachine(typeof(<FadeSphere>d__9))]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xBBD3B4", Offset = "0xBBD3B4", VA = "0xBBD3B4")]
	public BrushController()
	{
	}
}
[Token(Token = "0x2000135")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xBBD6B8", Offset = "0xBBD6B8", VA = "0xBBD6B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xBBD70C", Offset = "0xBBD70C", VA = "0xBBD70C")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x2000136")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xBBD714", Offset = "0xBBD714", VA = "0xBBD714")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xBBD8E8", Offset = "0xBBD8E8", VA = "0xBBD8E8")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xBBD978", Offset = "0xBBD978", VA = "0xBBD978")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xBBD9D4", Offset = "0xBBD9D4", VA = "0xBBD9D4")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x2000137")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000138")]
	[CompilerGenerated]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004FD")]
			[Address(RVA = "0xBBEB18", Offset = "0xBBEB18", VA = "0xBBEB18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004FF")]
			[Address(RVA = "0xBBEB60", Offset = "0xBBEB60", VA = "0xBBEB60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xBBE88C", Offset = "0xBBE88C", VA = "0xBBE88C")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xBBE954", Offset = "0xBBE954", VA = "0xBBE954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xBBE958", Offset = "0xBBE958", VA = "0xBBE958", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xBBEB20", Offset = "0xBBEB20", VA = "0xBBEB20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xBBD9DC", Offset = "0xBBD9DC", VA = "0xBBD9DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xBBDC78", Offset = "0xBBDC78", VA = "0xBBDC78")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xBBDF64", Offset = "0xBBDF64", VA = "0xBBDF64")]
	private void FindHands()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xBBE25C", Offset = "0xBBE25C", VA = "0xBBE25C")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xBBE534", Offset = "0xBBE534", VA = "0xBBE534")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xBBE61C", Offset = "0xBBE61C", VA = "0xBBE61C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xBBE7A8", Offset = "0xBBE7A8", VA = "0xBBE7A8")]
	public void Release()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xBBE704", Offset = "0xBBE704", VA = "0xBBE704")]
	[IteratorStateMachine(typeof(<FadeLighting>d__17))]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xBBE8B4", Offset = "0xBBE8B4", VA = "0xBBE8B4")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x2000139")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x200013A")]
	public enum ManipulationType
	{
		[Token(Token = "0x40006BF")]
		Default,
		[Token(Token = "0x40006C0")]
		ForcedHand,
		[Token(Token = "0x40006C1")]
		DollyHand,
		[Token(Token = "0x40006C2")]
		DollyAttached,
		[Token(Token = "0x40006C3")]
		HorizontalScaled,
		[Token(Token = "0x40006C4")]
		VerticalScaled,
		[Token(Token = "0x40006C5")]
		Menu
	}

	[Token(Token = "0x200013B")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x200013C")]
	public delegate void ReleasedObject();

	[Token(Token = "0x200013D")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string ObjectName;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea]
	public string ObjectInstructions;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xBBEB68", Offset = "0xBBEB68", VA = "0xBBEB68")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xBBEBC8", Offset = "0xBBEBC8", VA = "0xBBEBC8")]
	public void Release()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xBBEBE4", Offset = "0xBBEBE4", VA = "0xBBEBE4")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xBBEC00", Offset = "0xBBEC00", VA = "0xBBEC00")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x200013E")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The segments around the tip of a finger")]
	public int radialDivisions;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The fade range (finger width is 2x this)")]
	public float borderSize;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Along the fingers, each knuckle scales down by this amount.  Default is zero for uniform width along entire finger.")]
	public float fingerTaper;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Shorten the last bone of each finger; need this to account for bone structure (end bone is at finger tip instead of center). Default is 1.")]
	public float fingerTipLength;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Move the base of the 4 main fingers towards the tips, to avoid a visible mesh crack between finger webbing. Default is 0.")]
	public float webOffset;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xBBEEA8", Offset = "0xBBEEA8", VA = "0xBBEEA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xBBF0DC", Offset = "0xBBF0DC", VA = "0xBBF0DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xBBF2A4", Offset = "0xBBF2A4", VA = "0xBBF2A4")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xBBF8AC", Offset = "0xBBF8AC", VA = "0xBBF8AC")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xBBFE44", Offset = "0xBBFE44", VA = "0xBBFE44")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xBC214C", Offset = "0xBC214C", VA = "0xBC214C")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xBC24C0", Offset = "0xBC24C0", VA = "0xBC24C0")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x200013F")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xBC24E4", Offset = "0xBC24E4", VA = "0xBC24E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xBC284C", Offset = "0xBC284C", VA = "0xBC284C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xBC2580", Offset = "0xBC2580", VA = "0xBC2580")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xBC2CB4", Offset = "0xBC2CB4", VA = "0xBC2CB4")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xBC3224", Offset = "0xBC3224", VA = "0xBC3224")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000140")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000141")]
	[CompilerGenerated]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600052B")]
			[Address(RVA = "0xBC59F4", Offset = "0xBC59F4", VA = "0xBC59F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600052D")]
			[Address(RVA = "0xBC5A3C", Offset = "0xBC5A3C", VA = "0xBC5A3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xBC5340", Offset = "0xBC5340", VA = "0xBC5340")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0xBC5728", Offset = "0xBC5728", VA = "0xBC5728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xBC572C", Offset = "0xBC572C", VA = "0xBC572C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xBC59FC", Offset = "0xBC59FC", VA = "0xBC59FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xBC3234", Offset = "0xBC3234", VA = "0xBC3234")]
	private void Start()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xBC3424", Offset = "0xBC3424", VA = "0xBC3424")]
	private void Update()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xBC42C0", Offset = "0xBC42C0", VA = "0xBC42C0")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xBC5058", Offset = "0xBC5058", VA = "0xBC5058")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xBC33BC", Offset = "0xBC33BC", VA = "0xBC33BC")]
	[IteratorStateMachine(typeof(<StartDemo>d__23))]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xBC366C", Offset = "0xBC366C", VA = "0xBC366C")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xBC45B8", Offset = "0xBC45B8", VA = "0xBC45B8")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xBC5368", Offset = "0xBC5368", VA = "0xBC5368")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xBC541C", Offset = "0xBC541C", VA = "0xBC541C")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xBC544C", Offset = "0xBC544C", VA = "0xBC544C")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xBC5224", Offset = "0xBC5224", VA = "0xBC5224")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xBC553C", Offset = "0xBC553C", VA = "0xBC553C")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x2000142")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xBC5A44", Offset = "0xBC5A44", VA = "0xBC5A44")]
	private void Start()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xBC5BA4", Offset = "0xBC5BA4", VA = "0xBC5BA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xBC5C58", Offset = "0xBC5C58", VA = "0xBC5C58")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x2000143")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000144")]
	public enum BrushState
	{
		[Token(Token = "0x4000702")]
		Idle,
		[Token(Token = "0x4000703")]
		Inking
	}

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xBC5C60", Offset = "0xBC5C60", VA = "0xBC5C60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xBC5C68", Offset = "0xBC5C68", VA = "0xBC5C68")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xBC5F18", Offset = "0xBC5F18", VA = "0xBC5F18")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xBC6138", Offset = "0xBC6138", VA = "0xBC6138")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xBC6378", Offset = "0xBC6378", VA = "0xBC6378")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xBC5E30", Offset = "0xBC5E30", VA = "0xBC5E30")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xBC6448", Offset = "0xBC6448", VA = "0xBC6448")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x2000145")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xBC64D8", Offset = "0xBC64D8", VA = "0xBC64D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xBC6638", Offset = "0xBC6638", VA = "0xBC6638")]
	private void Update()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xBC6824", Offset = "0xBC6824", VA = "0xBC6824")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000146")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xBC682C", Offset = "0xBC682C", VA = "0xBC682C")]
	private void Start()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xBC69F4", Offset = "0xBC69F4", VA = "0xBC69F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xBC6B94", Offset = "0xBC6B94", VA = "0xBC6B94")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000147")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000148")]
	[CompilerGenerated]
	private sealed class <FadeToCurrentStyle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600054F")]
			[Address(RVA = "0xBC7780", Offset = "0xBC7780", VA = "0xBC7780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000551")]
			[Address(RVA = "0xBC77C8", Offset = "0xBC77C8", VA = "0xBC77C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xBC74F4", Offset = "0xBC74F4", VA = "0xBC74F4")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xBC7638", Offset = "0xBC7638", VA = "0xBC7638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xBC763C", Offset = "0xBC763C", VA = "0xBC763C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xBC7788", Offset = "0xBC7788", VA = "0xBC7788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000149")]
	[CompilerGenerated]
	private sealed class <FadeToDefaultPassthrough>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000555")]
			[Address(RVA = "0xBC7930", Offset = "0xBC7930", VA = "0xBC7930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000557")]
			[Address(RVA = "0xBC7978", Offset = "0xBC7978", VA = "0xBC7978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xBC751C", Offset = "0xBC751C", VA = "0xBC751C")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xBC77D0", Offset = "0xBC77D0", VA = "0xBC77D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xBC77D4", Offset = "0xBC77D4", VA = "0xBC77D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0xBC7938", Offset = "0xBC7938", VA = "0xBC7938", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] compactObjects;

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xBC6B9C", Offset = "0xBC6B9C", VA = "0xBC6B9C")]
	private void Start()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xBC6EB0", Offset = "0xBC6EB0", VA = "0xBC6EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xBC7250", Offset = "0xBC7250", VA = "0xBC7250")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xBC73A8", Offset = "0xBC73A8", VA = "0xBC73A8")]
	public void Release()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xBC7330", Offset = "0xBC7330", VA = "0xBC7330")]
	[IteratorStateMachine(typeof(<FadeToCurrentStyle>d__18))]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xBC747C", Offset = "0xBC747C", VA = "0xBC747C")]
	[IteratorStateMachine(typeof(<FadeToDefaultPassthrough>d__19))]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xBC7544", Offset = "0xBC7544", VA = "0xBC7544")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xBC7564", Offset = "0xBC7564", VA = "0xBC7564")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xBC7584", Offset = "0xBC7584", VA = "0xBC7584")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xBC6E48", Offset = "0xBC6E48", VA = "0xBC6E48")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xBC75B8", Offset = "0xBC75B8", VA = "0xBC75B8")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xBC75C4", Offset = "0xBC75C4", VA = "0xBC75C4")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xBC6EC8", Offset = "0xBC6EC8", VA = "0xBC6EC8")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xBC75D0", Offset = "0xBC75D0", VA = "0xBC75D0")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x200014A")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xBC7980", Offset = "0xBC7980", VA = "0xBC7980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xBC7A34", Offset = "0xBC7A34", VA = "0xBC7A34")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x200014B")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xBC7A3C", Offset = "0xBC7A3C", VA = "0xBC7A3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xBC7AA8", Offset = "0xBC7AA8", VA = "0xBC7AA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xBC7D9C", Offset = "0xBC7D9C", VA = "0xBC7D9C")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x200014C")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xBC7DA4", Offset = "0xBC7DA4", VA = "0xBC7DA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xBC81F8", Offset = "0xBC81F8", VA = "0xBC81F8")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x200014D")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xBC8200", Offset = "0xBC8200", VA = "0xBC8200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xBC8428", Offset = "0xBC8428", VA = "0xBC8428")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xBC8474", Offset = "0xBC8474", VA = "0xBC8474")]
	public void Release()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xBC84B4", Offset = "0xBC84B4", VA = "0xBC84B4")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x200014E")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x200014F")]
	[CompilerGenerated]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600056E")]
			[Address(RVA = "0xBC8BA0", Offset = "0xBC8BA0", VA = "0xBC8BA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000570")]
			[Address(RVA = "0xBC8BE8", Offset = "0xBC8BE8", VA = "0xBC8BE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xBC8A74", Offset = "0xBC8A74", VA = "0xBC8A74")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xBC8AB4", Offset = "0xBC8AB4", VA = "0xBC8AB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0xBC8AB8", Offset = "0xBC8AB8", VA = "0xBC8AB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xBC8BA8", Offset = "0xBC8BA8", VA = "0xBC8BA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xBC84BC", Offset = "0xBC84BC", VA = "0xBC84BC")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xBC84E0", Offset = "0xBC84E0", VA = "0xBC84E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xBC85D0", Offset = "0xBC85D0", VA = "0xBC85D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xBC8674", Offset = "0xBC8674", VA = "0xBC8674")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xBC88BC", Offset = "0xBC88BC", VA = "0xBC88BC")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xBC8960", Offset = "0xBC8960", VA = "0xBC8960")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xBC8844", Offset = "0xBC8844", VA = "0xBC8844")]
	[IteratorStateMachine(typeof(<PlayPopCallback>d__18))]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xBC8A9C", Offset = "0xBC8A9C", VA = "0xBC8A9C")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x2000150")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xBC8BF0", Offset = "0xBC8BF0", VA = "0xBC8BF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xBC8EEC", Offset = "0xBC8EEC", VA = "0xBC8EEC")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x2000151")]
[RequireComponent(typeof(OVRSceneAnchor))]
[DefaultExecutionOrder(30)]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Add a point at ceiling.")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xBC8EF4", Offset = "0xBC8EF4", VA = "0xBC8EF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xBC90D8", Offset = "0xBC90D8", VA = "0xBC90D8")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xBC9548", Offset = "0xBC9548", VA = "0xBC9548")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xBC8F7C", Offset = "0xBC8F7C", VA = "0xBC8F7C")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xBC974C", Offset = "0xBC974C", VA = "0xBC974C")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xBC9C38", Offset = "0xBC9C38", VA = "0xBC9C38")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x2000152")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x2000153")]
	[CompilerGenerated]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000580")]
			[Address(RVA = "0xBC9E54", Offset = "0xBC9E54", VA = "0xBC9E54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000582")]
			[Address(RVA = "0xBC9E9C", Offset = "0xBC9E9C", VA = "0xBC9E9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xBC9CA8", Offset = "0xBC9CA8", VA = "0xBC9CA8")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xBC9D60", Offset = "0xBC9D60", VA = "0xBC9D60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xBC9D64", Offset = "0xBC9D64", VA = "0xBC9D64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xBC9E5C", Offset = "0xBC9E5C", VA = "0xBC9E5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xBC9C40", Offset = "0xBC9C40", VA = "0xBC9C40")]
	[IteratorStateMachine(typeof(<DelayedLoad>d__0))]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xBC9CD0", Offset = "0xBC9CD0", VA = "0xBC9CD0", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xBC9CF0", Offset = "0xBC9CF0", VA = "0xBC9CF0", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xBC9D58", Offset = "0xBC9D58", VA = "0xBC9D58")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x2000154")]
[RequireComponent(typeof(OVRManager))]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x6000583")]
	[Address(RVA = "0xBC9EA4", Offset = "0xBC9EA4", VA = "0xBC9EA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xBC9EA8", Offset = "0xBC9EA8", VA = "0xBC9EA8")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x2000155")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xBC9EB0", Offset = "0xBC9EB0", VA = "0xBC9EB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xBC9F20", Offset = "0xBC9F20", VA = "0xBC9F20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xBC9FA4", Offset = "0xBC9FA4", VA = "0xBC9FA4")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x2000156")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x2000157")]
	public enum Method
	{
		[Token(Token = "0x400075F")]
		Adapt,
		[Token(Token = "0x4000760")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x4000761")]
		Scale,
		[Token(Token = "0x4000762")]
		None
	}

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(15f)]
	public Method ScalingX;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 0.5f)]
	public float PaddingX;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(-0.5f, 0f)]
	public float PaddingXMax;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(15f)]
	public Method ScalingY;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 0.5f)]
	public float PaddingY;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(-0.5f, 0f)]
	public float PaddingYMax;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(15f)]
	public Method ScalingZ;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.5f)]
	public float PaddingZ;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-0.5f, 0f)]
	public float PaddingZMax;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x1700006A")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x6000588")]
		[Address(RVA = "0xBC9FB4", Offset = "0xBC9FB4", VA = "0xBC9FB4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006B")]
	public Vector3 NewSize
	{
		[Token(Token = "0x6000589")]
		[Address(RVA = "0xBC9FD0", Offset = "0xBC9FD0", VA = "0xBC9FD0")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600058A")]
		[Address(RVA = "0xBC9FDC", Offset = "0xBC9FDC", VA = "0xBC9FDC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x600058B")]
		[Address(RVA = "0xBC9FE8", Offset = "0xBC9FE8", VA = "0xBC9FE8")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600058C")]
		[Address(RVA = "0xBC9FF4", Offset = "0xBC9FF4", VA = "0xBC9FF4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public Mesh Mesh
	{
		[Token(Token = "0x600058D")]
		[Address(RVA = "0xBCA000", Offset = "0xBCA000", VA = "0xBCA000")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600058E")]
		[Address(RVA = "0xBCA008", Offset = "0xBCA008", VA = "0xBCA008")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xBCA010", Offset = "0xBCA010", VA = "0xBCA010")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xBCA120", Offset = "0xBCA120", VA = "0xBCA120")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x2000158")]
public class SimpleResizer
{
	[Token(Token = "0x6000591")]
	[Address(RVA = "0xBC98A4", Offset = "0xBC98A4", VA = "0xBC98A4")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xBCA128", Offset = "0xBCA128", VA = "0xBCA128")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xBCA3AC", Offset = "0xBCA3AC", VA = "0xBCA3AC")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xBC989C", Offset = "0xBC989C", VA = "0xBC989C")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000159")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xBCA454", Offset = "0xBCA454", VA = "0xBCA454", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xBCA458", Offset = "0xBCA458", VA = "0xBCA458", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xBCA8C0", Offset = "0xBCA8C0", VA = "0xBCA8C0")]
	public Spawnable()
	{
	}
}
[Token(Token = "0x200015A")]
[RequireComponent(typeof(OVRSceneAnchor))]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x200015B")]
	public enum GeometryType
	{
		[Token(Token = "0x400076A")]
		Plane,
		[Token(Token = "0x400076B")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x200015C")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xBCA910", Offset = "0xBCA910", VA = "0xBCA910")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xBCAD3C", Offset = "0xBCAD3C", VA = "0xBCAD3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xBCB674", Offset = "0xBCB674", VA = "0xBCB674")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xBCB54C", Offset = "0xBCB54C", VA = "0xBCB54C")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xBCB6F4", Offset = "0xBCB6F4", VA = "0xBCB6F4")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x200015D")]
[RequireComponent(typeof(OVRSpatialAnchor))]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x200015E")]
	[CompilerGenerated]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0xBCC448", Offset = "0xBCC448", VA = "0xBCC448", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0xBCC490", Offset = "0xBCC490", VA = "0xBCC490", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xBCB8AC", Offset = "0xBCB8AC", VA = "0xBCB8AC")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xBCC2D8", Offset = "0xBCC2D8", VA = "0xBCC2D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xBCC2DC", Offset = "0xBCC2DC", VA = "0xBCC2DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xBCC450", Offset = "0xBCC450", VA = "0xBCC450", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400076E")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[FormerlySerializedAs("canvas_")]
	[SerializeField]
	private Canvas _canvas;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[FormerlySerializedAs("pivot_")]
	[SerializeField]
	private Transform _pivot;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[FormerlySerializedAs("anchorMenu_")]
	private GameObject _anchorMenu;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[FormerlySerializedAs("anchorName_")]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[FormerlySerializedAs("saveIcon_")]
	[SerializeField]
	private GameObject _saveIcon;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[FormerlySerializedAs("labelImage_")]
	[SerializeField]
	private Image _labelImage;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[FormerlySerializedAs("labelBaseColor_")]
	[SerializeField]
	private Color _labelBaseColor;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[FormerlySerializedAs("labelHighlightColor_")]
	[SerializeField]
	private Color _labelHighlightColor;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[FormerlySerializedAs("labelSelectedColor_")]
	[SerializeField]
	private Color _labelSelectedColor;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[FormerlySerializedAs("uiManager_")]
	[SerializeField]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[FormerlySerializedAs("renderers_")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[FormerlySerializedAs("buttonList_")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x1700006E")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xBCBD58", Offset = "0xBCBD58", VA = "0xBCBD58")]
		set
		{
		}
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xBCB6FC", Offset = "0xBCB6FC", VA = "0xBCB6FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xBCB844", Offset = "0xBCB844", VA = "0xBCB844")]
	[IteratorStateMachine(typeof(<Start>d__20))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xBCB8D4", Offset = "0xBCB8D4", VA = "0xBCB8D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xBCBB4C", Offset = "0xBCBB4C", VA = "0xBCBB4C")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xBCBC1C", Offset = "0xBCBC1C", VA = "0xBCBC1C")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xBCBC88", Offset = "0xBCBC88", VA = "0xBCBC88")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xBCBD78", Offset = "0xBCBD78", VA = "0xBCBD78")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xBCBE94", Offset = "0xBCBE94", VA = "0xBCBE94")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xBCBF9C", Offset = "0xBCBF9C", VA = "0xBCBF9C")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xBCB924", Offset = "0xBCB924", VA = "0xBCB924")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xBCBA58", Offset = "0xBCBA58", VA = "0xBCBA58")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xBCC05C", Offset = "0xBCC05C", VA = "0xBCC05C")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xBCC180", Offset = "0xBCC180", VA = "0xBCC180")]
	public Anchor()
	{
	}
}
[Token(Token = "0x200015F")]
[RequireComponent(typeof(SpatialAnchorLoader))]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000160")]
	public enum AnchorMode
	{
		[Token(Token = "0x4000797")]
		Create,
		[Token(Token = "0x4000798")]
		Select
	}

	[Token(Token = "0x2000161")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[FormerlySerializedAs("createModeButton_")]
	[SerializeField]
	private GameObject _createModeButton;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[FormerlySerializedAs("selectModeButton_")]
	[SerializeField]
	private GameObject _selectModeButton;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[FormerlySerializedAs("trackedDevice_")]
	[SerializeField]
	private Transform _trackedDevice;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[FormerlySerializedAs("lineRenderer_")]
	[SerializeField]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[FormerlySerializedAs("buttonList_")]
	private List<Button> _buttonList;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("placementPreview_")]
	private GameObject _placementPreview;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[FormerlySerializedAs("anchorPlacementTransform_")]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000071")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xBCC498", Offset = "0xBCC498", VA = "0xBCC498")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xBCC4A0", Offset = "0xBCC4A0", VA = "0xBCC4A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xBCC560", Offset = "0xBCC560", VA = "0xBCC560")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xBCC680", Offset = "0xBCC680", VA = "0xBCC680")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xBCCAF4", Offset = "0xBCCAF4", VA = "0xBCCAF4")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xBCCB60", Offset = "0xBCCB60", VA = "0xBCCB60")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xBCC630", Offset = "0xBCC630", VA = "0xBCC630")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xBCCDB8", Offset = "0xBCCDB8", VA = "0xBCCDB8")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xBCCE38", Offset = "0xBCCE38", VA = "0xBCCE38")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xBCCE50", Offset = "0xBCCE50", VA = "0xBCCE50")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xBCCDA0", Offset = "0xBCCDA0", VA = "0xBCCDA0")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xBCCA00", Offset = "0xBCCA00", VA = "0xBCCA00")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xBCD038", Offset = "0xBCD038", VA = "0xBCD038")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xBCCED0", Offset = "0xBCCED0", VA = "0xBCCED0")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xBCCFAC", Offset = "0xBCCFAC", VA = "0xBCCFAC")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xBCD124", Offset = "0xBCD124", VA = "0xBCD124")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xBCCFCC", Offset = "0xBCCFCC", VA = "0xBCCFCC")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xBCD004", Offset = "0xBCD004", VA = "0xBCD004")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xBCC780", Offset = "0xBCC780", VA = "0xBCC780")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xBCD210", Offset = "0xBCD210", VA = "0xBCD210")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xBCD22C", Offset = "0xBCD22C", VA = "0xBCD22C")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xBCD2A8", Offset = "0xBCD2A8", VA = "0xBCD2A8")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xBCD3C0", Offset = "0xBCD3C0", VA = "0xBCD3C0")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000162")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<OVRSpatialAnchor.UnboundAnchor, bool> _onLoadAnchor;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xBCCBB4", Offset = "0xBCCBB4", VA = "0xBCCBB4")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xBCD57C", Offset = "0xBCD57C", VA = "0xBCD57C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xBCD49C", Offset = "0xBCD49C", VA = "0xBCD49C")]
	private void Load(OVRSpatialAnchor.LoadOptions options)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xBCD5F8", Offset = "0xBCD5F8", VA = "0xBCD5F8")]
	private void OnLocalized(OVRSpatialAnchor.UnboundAnchor unboundAnchor, bool success)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xBCD410", Offset = "0xBCD410", VA = "0xBCD410")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xBCD7A8", Offset = "0xBCD7A8", VA = "0xBCD7A8")]
	public SpatialAnchorLoader()
	{
	}
}
[Token(Token = "0x2000163")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xBCD8E0", Offset = "0xBCD8E0", VA = "0xBCD8E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xBCDAE4", Offset = "0xBCDAE4", VA = "0xBCDAE4")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xBCDBE8", Offset = "0xBCDBE8", VA = "0xBCDBE8")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000165")]
public class OnlinePS4Hack : HitTarget
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int counter;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastHit;

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xBCDC0C", Offset = "0xBCDC0C", VA = "0xBCDC0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xBCDC10", Offset = "0xBCDC10", VA = "0xBCDC10")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xBCDC14", Offset = "0xBCDC14", VA = "0xBCDC14", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xBCDD24", Offset = "0xBCDD24", VA = "0xBCDD24")]
	public OnlinePS4Hack()
	{
	}
}
[Token(Token = "0x2000166")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xBCDD34", Offset = "0xBCDD34", VA = "0xBCDD34")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xBCDDA8", Offset = "0xBCDDA8", VA = "0xBCDDA8", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xBCE0A8", Offset = "0xBCE0A8", VA = "0xBCE0A8")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x2000167")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xBCE0B0", Offset = "0xBCE0B0", VA = "0xBCE0B0")]
	public void Update()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xBCE1E4", Offset = "0xBCE1E4", VA = "0xBCE1E4")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x2000168")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal AppSettings chatAppSettings;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x17000072")]
	public string UserName
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xBCE1EC", Offset = "0xBCE1EC", VA = "0xBCE1EC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xBCE1F4", Offset = "0xBCE1F4", VA = "0xBCE1F4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xBCE1FC", Offset = "0xBCE1FC", VA = "0xBCE1FC")]
	public void Start()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xBCE49C", Offset = "0xBCE49C", VA = "0xBCE49C")]
	public void Connect()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xBCE634", Offset = "0xBCE634", VA = "0xBCE634")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xBCE648", Offset = "0xBCE648", VA = "0xBCE648")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xBCE65C", Offset = "0xBCE65C", VA = "0xBCE65C")]
	public void Update()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xBCE72C", Offset = "0xBCE72C", VA = "0xBCE72C")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xBCF204", Offset = "0xBCF204", VA = "0xBCF204")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xBCE7C0", Offset = "0xBCE7C0", VA = "0xBCE7C0")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xBCF2B4", Offset = "0xBCF2B4", VA = "0xBCF2B4")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xBCF358", Offset = "0xBCF358", VA = "0xBCF358", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xBCF400", Offset = "0xBCF400", VA = "0xBCF400", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xBCF73C", Offset = "0xBCF73C", VA = "0xBCF73C", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xBCF75C", Offset = "0xBCF75C", VA = "0xBCF75C", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xBCF7F0", Offset = "0xBCF7F0", VA = "0xBCF7F0", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xBCF984", Offset = "0xBCF984", VA = "0xBCF984")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xBCF5E4", Offset = "0xBCF5E4", VA = "0xBCF5E4")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xBCFB64", Offset = "0xBCFB64", VA = "0xBCFB64", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xBCFFA8", Offset = "0xBCFFA8", VA = "0xBCFFA8", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xBCFFE8", Offset = "0xBCFFE8", VA = "0xBCFFE8", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xBD00FC", Offset = "0xBD00FC", VA = "0xBD00FC", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xBD043C", Offset = "0xBD043C", VA = "0xBD043C", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xBD0540", Offset = "0xBD0540", VA = "0xBD0540", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xBD0644", Offset = "0xBD0644", VA = "0xBD0644")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xBCDE20", Offset = "0xBCDE20", VA = "0xBCDE20")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xBD0730", Offset = "0xBD0730", VA = "0xBD0730")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xBD0774", Offset = "0xBD0774", VA = "0xBD0774")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x2000169")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x17000073")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x6000602")]
		[Address(RVA = "0xBD08C8", Offset = "0xBD08C8", VA = "0xBD08C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000601")]
		[Address(RVA = "0xBCFB40", Offset = "0xBCFB40", VA = "0xBCFB40")]
		set
		{
		}
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xBD08EC", Offset = "0xBD08EC", VA = "0xBD08EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xBD02BC", Offset = "0xBD02BC", VA = "0xBD02BC")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xBD0950", Offset = "0xBD0950", VA = "0xBD0950")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x200016A")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x6000606")]
	[Address(RVA = "0xBD0958", Offset = "0xBD0958", VA = "0xBD0958", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xBD0978", Offset = "0xBD0978", VA = "0xBD0978")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x200016B")]
[RequireComponent(typeof(ChatGui))]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x40007BF")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xBD0980", Offset = "0xBD0980", VA = "0xBD0980")]
	public void Start()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xBD0A40", Offset = "0xBD0A40", VA = "0xBD0A40")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xBD0A7C", Offset = "0xBD0A7C", VA = "0xBD0A7C")]
	public void StartChat()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xBD0B48", Offset = "0xBD0B48", VA = "0xBD0B48")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x200016C")]
public class ScoreHelper : MonoBehaviour
{
	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Score;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _currentScore;

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xBD0B50", Offset = "0xBD0B50", VA = "0xBD0B50")]
	private void Start()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xBD0B54", Offset = "0xBD0B54", VA = "0xBD0B54")]
	private void Update()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xBD0BEC", Offset = "0xBD0BEC", VA = "0xBD0BEC")]
	public ScoreHelper()
	{
	}
}
[Token(Token = "0x200016D")]
public class pseudorandomtest : MonoBehaviour
{
	[Token(Token = "0x600060F")]
	[Address(RVA = "0xBD0BF4", Offset = "0xBD0BF4", VA = "0xBD0BF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xBD0C68", Offset = "0xBD0C68", VA = "0xBD0C68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xBD0C6C", Offset = "0xBD0C6C", VA = "0xBD0C6C")]
	public pseudorandomtest()
	{
	}
}
[Token(Token = "0x200016E")]
public class ScreenFadeControl : MonoBehaviour
{
	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material fadeMaterial;

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xBD0C74", Offset = "0xBD0C74", VA = "0xBD0C74")]
	private void OnCustomPostRender()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xBD0D3C", Offset = "0xBD0D3C", VA = "0xBD0D3C")]
	public ScreenFadeControl()
	{
	}
}
[Token(Token = "0x200016F")]
public class ScreenFader : MonoBehaviour
{
	[Token(Token = "0x2000170")]
	[CompilerGenerated]
	private sealed class <FadeOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFader <>4__this;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__3;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061E")]
			[Address(RVA = "0xBD12B0", Offset = "0xBD12B0", VA = "0xBD12B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000620")]
			[Address(RVA = "0xBD12F8", Offset = "0xBD12F8", VA = "0xBD12F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xBD0F50", Offset = "0xBD0F50", VA = "0xBD0F50")]
		[DebuggerHidden]
		public <FadeOut>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xBD116C", Offset = "0xBD116C", VA = "0xBD116C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xBD1170", Offset = "0xBD1170", VA = "0xBD1170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xBD12B8", Offset = "0xBD12B8", VA = "0xBD12B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000171")]
	[CompilerGenerated]
	private sealed class <FadeIn>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFader <>4__this;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__3;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000624")]
			[Address(RVA = "0xBD1464", Offset = "0xBD1464", VA = "0xBD1464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000626")]
			[Address(RVA = "0xBD14AC", Offset = "0xBD14AC", VA = "0xBD14AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xBD0FE0", Offset = "0xBD0FE0", VA = "0xBD0FE0")]
		[DebuggerHidden]
		public <FadeIn>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xBD1300", Offset = "0xBD1300", VA = "0xBD1300", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xBD1304", Offset = "0xBD1304", VA = "0xBD1304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xBD146C", Offset = "0xBD146C", VA = "0xBD146C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000172")]
	[CompilerGenerated]
	private sealed class <DoFade>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenFader <>4__this;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600062A")]
			[Address(RVA = "0xBD17E4", Offset = "0xBD17E4", VA = "0xBD17E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062C")]
			[Address(RVA = "0xBD182C", Offset = "0xBD182C", VA = "0xBD182C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xBD10AC", Offset = "0xBD10AC", VA = "0xBD10AC")]
		[DebuggerHidden]
		public <DoFade>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xBD14B4", Offset = "0xBD14B4", VA = "0xBD14B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xBD14B8", Offset = "0xBD14B8", VA = "0xBD14B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xBD17EC", Offset = "0xBD17EC", VA = "0xBD17EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fadeIn;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeTime;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color fadeColor;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material fadeMaterial;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool faded;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool lastFadeIn;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<ScreenFadeControl> fadeControls;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScreenFader Instance;

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xBD0D44", Offset = "0xBD0D44", VA = "0xBD0D44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xBD0D90", Offset = "0xBD0D90", VA = "0xBD0D90")]
	private void SetFadersEnabled(bool value)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xBD0EE8", Offset = "0xBD0EE8", VA = "0xBD0EE8")]
	[IteratorStateMachine(typeof(<FadeOut>d__10))]
	public IEnumerator FadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xBD0F78", Offset = "0xBD0F78", VA = "0xBD0F78")]
	[IteratorStateMachine(typeof(<FadeIn>d__11))]
	public IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xBD1008", Offset = "0xBD1008", VA = "0xBD1008")]
	public void Update()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xBD1044", Offset = "0xBD1044", VA = "0xBD1044")]
	[IteratorStateMachine(typeof(<DoFade>d__13))]
	public IEnumerator DoFade()
	{
		return null;
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xBD10D4", Offset = "0xBD10D4", VA = "0xBD10D4")]
	public ScreenFader()
	{
	}
}
[Token(Token = "0x2000173")]
public class AimTarget : HitTarget
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform aimTarget;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isAlive;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool aimable;

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xBD1834", Offset = "0xBD1834", VA = "0xBD1834", Slot = "7")]
	public virtual void OnBulletConsumed(Bullet bullet)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xBD1838", Offset = "0xBD1838", VA = "0xBD1838")]
	public AimTarget()
	{
	}
}
[Token(Token = "0x2000174")]
public class AimZurdMode : MonoBehaviour
{
	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool zurd;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CrisisWeapon weapon;

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xBD1848", Offset = "0xBD1848", VA = "0xBD1848")]
	public AimZurdMode()
	{
	}
}
[Token(Token = "0x2000175")]
public class AmbientMusic : MonoBehaviour
{
	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] inGameMusic;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int count;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xBD1850", Offset = "0xBD1850", VA = "0xBD1850")]
	private void Start()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xBD1A08", Offset = "0xBD1A08", VA = "0xBD1A08")]
	private void Play()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xBD18AC", Offset = "0xBD18AC", VA = "0xBD18AC")]
	private void RandomizeClips()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xBD1AE4", Offset = "0xBD1AE4", VA = "0xBD1AE4")]
	public AmbientMusic()
	{
	}
}
[Token(Token = "0x2000176")]
public class AmbientSound : MonoBehaviour
{
	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip office;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip street;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip port;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AmbientSound instance;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xBD1AEC", Offset = "0xBD1AEC", VA = "0xBD1AEC")]
	public static AmbientSound getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xBD1B34", Offset = "0xBD1B34", VA = "0xBD1B34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xBD1BAC", Offset = "0xBD1BAC", VA = "0xBD1BAC")]
	public void setAmbientSound(AmbientSoundType type)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xBD1C88", Offset = "0xBD1C88", VA = "0xBD1C88")]
	public void setStreetAmbientSound()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xBD1CBC", Offset = "0xBD1CBC", VA = "0xBD1CBC")]
	public AmbientSound()
	{
	}
}
[Token(Token = "0x2000177")]
public enum AmbientSoundType
{
	[Token(Token = "0x40007E8")]
	Office,
	[Token(Token = "0x40007E9")]
	Street,
	[Token(Token = "0x40007EA")]
	Port,
	[Token(Token = "0x40007EB")]
	None
}
[Token(Token = "0x2000178")]
public class AnimTest : MonoBehaviour
{
	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AimController aimController;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform aimTarget;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CommonCharacterController character;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xBD1CC4", Offset = "0xBD1CC4", VA = "0xBD1CC4")]
	public AnimTest()
	{
	}
}
[Token(Token = "0x2000179")]
public class BackgroundMusic : MonoBehaviour
{
	[Token(Token = "0x40007F0")]
	private const string MISSION_ACCOMPLISHED = "missionaccomplished";

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BackgroundMusic instance;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip introMusic;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip thanksMusic;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip thanksMusicSpa;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xBD1CCC", Offset = "0xBD1CCC", VA = "0xBD1CCC")]
	public static BackgroundMusic getInstance()
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xBD1D14", Offset = "0xBD1D14", VA = "0xBD1D14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xBD1D8C", Offset = "0xBD1D8C", VA = "0xBD1D8C")]
	public void PlayIntroMusic()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xBD1E20", Offset = "0xBD1E20", VA = "0xBD1E20")]
	public void PlayThanksMusic()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xBD1EDC", Offset = "0xBD1EDC", VA = "0xBD1EDC")]
	public BackgroundMusic()
	{
	}
}
[Token(Token = "0x200017A")]
public class Barrel : MonoBehaviour
{
	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform triggerPoint;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool killCharacters;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 lastPosition;

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xBD1EE4", Offset = "0xBD1EE4", VA = "0xBD1EE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xBD1FA0", Offset = "0xBD1FA0", VA = "0xBD1FA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xBD2414", Offset = "0xBD2414", VA = "0xBD2414")]
	public Barrel()
	{
	}
}
[Token(Token = "0x200017B")]
public class TestA : MonoBehaviour
{
	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationClip animationClip;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform root;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform clips;

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xBD241C", Offset = "0xBD241C", VA = "0xBD241C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xBD2420", Offset = "0xBD2420", VA = "0xBD2420")]
	public void test()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xBD24D4", Offset = "0xBD24D4", VA = "0xBD24D4")]
	private void save(AnimationClip clip, Transform obj, Transform root)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xBD28E4", Offset = "0xBD28E4", VA = "0xBD28E4")]
	private string getName(Transform obj, Transform root)
	{
		return null;
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xBD2A70", Offset = "0xBD2A70", VA = "0xBD2A70")]
	public TestA()
	{
	}
}
[Token(Token = "0x200017C")]
public class ButtonHandler : HitTarget, IKeyboardPointable
{
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 initScale;

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xBD2A78", Offset = "0xBD2A78", VA = "0xBD2A78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xBD2AA8", Offset = "0xBD2AA8", VA = "0xBD2AA8", Slot = "7")]
	public void OnHoverAnimation(bool isHover)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xBD2CF4", Offset = "0xBD2CF4", VA = "0xBD2CF4", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xBD2E9C", Offset = "0xBD2E9C", VA = "0xBD2E9C")]
	public ButtonHandler()
	{
	}
}
[Token(Token = "0x200017D")]
public class CV2_BHapticsButton : UIButton
{
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] menu;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool open;

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xBD2EFC", Offset = "0xBD2EFC", VA = "0xBD2EFC", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xBD2FD0", Offset = "0xBD2FD0", VA = "0xBD2FD0")]
	public CV2_BHapticsButton()
	{
	}
}
[Token(Token = "0x200017E")]
public class BinarySerializer
{
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Type, FieldInfo[]> fieldCache;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static byte NULL;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static byte BYTES2;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte[] byteBuffer;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private object[] param1Buffer;

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xBD2FD8", Offset = "0xBD2FD8", VA = "0xBD2FD8")]
	public byte[] serialize(object o)
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xBD3090", Offset = "0xBD3090", VA = "0xBD3090")]
	public void serialize(object o, BinaryWriter os)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xBD3BF0", Offset = "0xBD3BF0", VA = "0xBD3BF0")]
	public object deserialize(Type type, byte[] data)
	{
		return null;
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xBD3C9C", Offset = "0xBD3C9C", VA = "0xBD3C9C")]
	public object deserialize(Type type, BinaryReader br)
	{
		return null;
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xBD3860", Offset = "0xBD3860", VA = "0xBD3860")]
	private void writeSize(int iSize, BinaryWriter os)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xBD44C0", Offset = "0xBD44C0", VA = "0xBD44C0")]
	private int readSize(BinaryReader br)
	{
		return default(int);
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xBD4150", Offset = "0xBD4150", VA = "0xBD4150")]
	private object deserializeArray(Type type, BinaryReader br)
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xBD4590", Offset = "0xBD4590", VA = "0xBD4590")]
	private object deserializeList(Type type, BinaryReader br)
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xBD37F0", Offset = "0xBD37F0", VA = "0xBD37F0")]
	private byte[] getByteBuffer(int iSize)
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xBD3594", Offset = "0xBD3594", VA = "0xBD3594")]
	private void serializeArray(object array, BinaryWriter os)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xBD392C", Offset = "0xBD392C", VA = "0xBD392C")]
	private void serializeList(object list, BinaryWriter os)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xBD3AD8", Offset = "0xBD3AD8", VA = "0xBD3AD8")]
	private FieldInfo[] getFields(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xBD3678", Offset = "0xBD3678", VA = "0xBD3678")]
	private void WriteInt32(int i, BinaryWriter bw)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xBD4300", Offset = "0xBD4300", VA = "0xBD4300")]
	private int ReadInt32(BinaryReader br)
	{
		return default(int);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xBD46D8", Offset = "0xBD46D8", VA = "0xBD46D8")]
	private void WriteInt16(short i, BinaryWriter bw)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xBD478C", Offset = "0xBD478C", VA = "0xBD478C")]
	private short ReadInt16(BinaryReader br)
	{
		return default(short);
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xBD372C", Offset = "0xBD372C", VA = "0xBD372C")]
	private void WriteFloat(float i, BinaryWriter bw)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xBD43E0", Offset = "0xBD43E0", VA = "0xBD43E0")]
	private float ReadFloat(BinaryReader br)
	{
		return default(float);
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xBD4874", Offset = "0xBD4874", VA = "0xBD4874")]
	private static void Main(string[] args)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xBD4960", Offset = "0xBD4960", VA = "0xBD4960")]
	public BinarySerializer()
	{
	}
}
[Token(Token = "0x200017F")]
internal class FieldInfoComparer : IComparer<FieldInfo>
{
	[Token(Token = "0x6000662")]
	[Address(RVA = "0xBD4B98", Offset = "0xBD4B98", VA = "0xBD4B98", Slot = "4")]
	public int Compare(FieldInfo x, FieldInfo y)
	{
		return default(int);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xBD486C", Offset = "0xBD486C", VA = "0xBD486C")]
	public FieldInfoComparer()
	{
	}
}
[Token(Token = "0x2000180")]
internal class Test
{
	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int field1;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int field2;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float field3;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float field4;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] farray;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Test2 test2;

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xBD4BF0", Offset = "0xBD4BF0", VA = "0xBD4BF0")]
	public Test()
	{
	}
}
[Token(Token = "0x2000181")]
internal class Test2
{
	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<string> funciona;

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xBD4A00", Offset = "0xBD4A00", VA = "0xBD4A00")]
	public Test2()
	{
	}
}
[Token(Token = "0x2000182")]
public class BlinkText : MonoBehaviour
{
	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro[] textsToBlink;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enableBlink;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blinkSpeed;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currentAlpha;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int modifier;

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xBD4CB8", Offset = "0xBD4CB8", VA = "0xBD4CB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xBD4D08", Offset = "0xBD4D08", VA = "0xBD4D08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xBD4D28", Offset = "0xBD4D28", VA = "0xBD4D28")]
	private void updateColorAlpha()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xBD4E04", Offset = "0xBD4E04", VA = "0xBD4E04")]
	public BlinkText()
	{
	}
}
[Token(Token = "0x2000183")]
public class BombHitArea : HitTarget
{
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lastTimeSound;

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xBD4E1C", Offset = "0xBD4E1C", VA = "0xBD4E1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xBD4E38", Offset = "0xBD4E38", VA = "0xBD4E38", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xBD4F6C", Offset = "0xBD4F6C", VA = "0xBD4F6C")]
	public BombHitArea()
	{
	}
}
[Token(Token = "0x2000184")]
public class BombHitTarget : HitTarget
{
	[Token(Token = "0x600066D")]
	[Address(RVA = "0xBD4F74", Offset = "0xBD4F74", VA = "0xBD4F74", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xBD5208", Offset = "0xBD5208", VA = "0xBD5208")]
	public BombHitTarget()
	{
	}
}
[Token(Token = "0x2000185")]
public class BombRandomDelay : MonoBehaviour
{
	[Token(Token = "0x2000186")]
	[CompilerGenerated]
	private sealed class <boomCoroutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool bForce;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BombRandomDelay <>4__this;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000675")]
			[Address(RVA = "0xBD5514", Offset = "0xBD5514", VA = "0xBD5514", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000677")]
			[Address(RVA = "0xBD555C", Offset = "0xBD555C", VA = "0xBD555C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xBD528C", Offset = "0xBD528C", VA = "0xBD528C")]
		[DebuggerHidden]
		public <boomCoroutine>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xBD52BC", Offset = "0xBD52BC", VA = "0xBD52BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xBD52C0", Offset = "0xBD52C0", VA = "0xBD52C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xBD551C", Offset = "0xBD551C", VA = "0xBD551C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xBD5174", Offset = "0xBD5174", VA = "0xBD5174")]
	public void boom(bool bForce = false)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xBD5210", Offset = "0xBD5210", VA = "0xBD5210")]
	[IteratorStateMachine(typeof(<boomCoroutine>d__1))]
	private IEnumerator boomCoroutine(bool bForce = false)
	{
		return null;
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xBD52B4", Offset = "0xBD52B4", VA = "0xBD52B4")]
	public BombRandomDelay()
	{
	}
}
[Token(Token = "0x2000187")]
public class BoxItem : HitTarget
{
	[Token(Token = "0x2000188")]
	public enum Item
	{
		[Token(Token = "0x400081B")]
		caja_AK1,
		[Token(Token = "0x400081C")]
		caja_M16,
		[Token(Token = "0x400081D")]
		caja_SMG,
		[Token(Token = "0x400081E")]
		caja_medkit,
		[Token(Token = "0x400081F")]
		caja_vacia
	}

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Item item;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool randomItem;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool randomWeapon;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool firstHit;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private System.Random randomGenerator;

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xBD5564", Offset = "0xBD5564", VA = "0xBD5564")]
	private void Start()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xBD5568", Offset = "0xBD5568", VA = "0xBD5568")]
	private void initialise()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xBD5850", Offset = "0xBD5850", VA = "0xBD5850", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xBD5A28", Offset = "0xBD5A28", VA = "0xBD5A28")]
	private void showItemIcon()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xBD5B90", Offset = "0xBD5B90", VA = "0xBD5B90")]
	public BoxItem()
	{
	}
}
[Token(Token = "0x2000189")]
public class BreakableCoverage : HitTarget
{
	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int resistance;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PoolManager.PoolType noBreakAnimation;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public PoolManager.PoolType breakAnimation;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animation anim;

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xBD5B98", Offset = "0xBD5B98", VA = "0xBD5B98")]
	private void Start()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xBD5BFC", Offset = "0xBD5BFC", VA = "0xBD5BFC", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xBD5D98", Offset = "0xBD5D98", VA = "0xBD5D98")]
	public BreakableCoverage()
	{
	}
}
[Token(Token = "0x200018A")]
public class BreakGlass : HitTarget
{
	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer optionalMeshRenderer;

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xBD5DA0", Offset = "0xBD5DA0", VA = "0xBD5DA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xBD5EAC", Offset = "0xBD5EAC", VA = "0xBD5EAC", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xBD6114", Offset = "0xBD6114", VA = "0xBD6114")]
	public BreakGlass()
	{
	}
}
[Token(Token = "0x200018B")]
public class BreakGlassAnim : HitTarget
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer[] glassList;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject associatedVoronoi;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float aliveTime;

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xBD611C", Offset = "0xBD611C", VA = "0xBD611C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xBD61B4", Offset = "0xBD61B4", VA = "0xBD61B4", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xBD6340", Offset = "0xBD6340", VA = "0xBD6340")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xBD638C", Offset = "0xBD638C", VA = "0xBD638C")]
	private void timeOut()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xBD63B0", Offset = "0xBD63B0", VA = "0xBD63B0")]
	public BreakGlassAnim()
	{
	}
}
[Token(Token = "0x200018C")]
public class ButtonsHelper : MonoBehaviour
{
	[Token(Token = "0x200018D")]
	private class ButtonData
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform enabledButton;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform disabledButton;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMesh text;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string defaultText;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool init;

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xBD87F8", Offset = "0xBD87F8", VA = "0xBD87F8")]
		public ButtonData(Transform enabledButton, Transform disabledButton)
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xBD890C", Offset = "0xBD890C", VA = "0xBD890C")]
		public void setButtonState(bool enable, string text = "")
		{
		}
	}

	[Token(Token = "0x200018E")]
	public enum ButtonState
	{
		[Token(Token = "0x4000841")]
		None,
		[Token(Token = "0x4000842")]
		Grab,
		[Token(Token = "0x4000843")]
		Trigger,
		[Token(Token = "0x4000844")]
		Drop,
		[Token(Token = "0x4000845")]
		All
	}

	[Token(Token = "0x4000828")]
	public const string BH_PREFIX = "BH_";

	[Token(Token = "0x4000829")]
	public const string BH_HTC = "Vive";

	[Token(Token = "0x400082A")]
	public const string BH_WMR = "WMR_";

	[Token(Token = "0x400082B")]
	public const string BH_OCULUSRIFT = "OculusRift_";

	[Token(Token = "0x400082C")]
	public const string BH_OCULUSQUESTRIFTS = "OculusQuestRiftS_";

	[Token(Token = "0x400082D")]
	public const string BH_PSMOVE = "PSMove";

	[Token(Token = "0x400082E")]
	public const string BH_AIMCONTROLLER = "AimController";

	[Token(Token = "0x400082F")]
	public const string BH_DUALSHOCK = "Dualshock";

	[Token(Token = "0x4000830")]
	public const string BH_PICONEO2 = "PicoNeo2_";

	[Token(Token = "0x4000831")]
	public const string BH_PICONEO3 = "PicoNeo3_";

	[Token(Token = "0x4000832")]
	public const string BH_PICONEO4 = "PicoNeo4_";

	[Token(Token = "0x4000833")]
	public const string BH_QIYU = "Qiyu_";

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand hand;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string buttonsHelperName;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform buttonsHelper;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ButtonData triggerButton;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ButtonData grabButton;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ButtonData actionButton;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ButtonData menuButton;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xBD63C0", Offset = "0xBD63C0", VA = "0xBD63C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xBD6464", Offset = "0xBD6464", VA = "0xBD6464")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xBD6508", Offset = "0xBD6508", VA = "0xBD6508")]
	private void initialise()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xBD6510", Offset = "0xBD6510", VA = "0xBD6510")]
	private void initialise(NVRHand _hand)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xBD6BEC", Offset = "0xBD6BEC", VA = "0xBD6BEC")]
	public void updateButtonsHelper()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xBD6C50", Offset = "0xBD6C50", VA = "0xBD6C50")]
	public void updateButtonsHelper(int config)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xBD66E8", Offset = "0xBD66E8", VA = "0xBD66E8")]
	private void setHelperName()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xBD7230", Offset = "0xBD7230", VA = "0xBD7230")]
	private string getConfig(int config)
	{
		return null;
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xBD72D0", Offset = "0xBD72D0", VA = "0xBD72D0")]
	public void setLineRenderer(Transform buttonHelper)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xBD749C", Offset = "0xBD749C", VA = "0xBD749C")]
	private string getLineRendererPointName(int p, int s)
	{
		return null;
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xBD712C", Offset = "0xBD712C", VA = "0xBD712C")]
	private void clear()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xBD7578", Offset = "0xBD7578", VA = "0xBD7578")]
	public void setButtonState(ButtonState buttonState)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xBD77F0", Offset = "0xBD77F0", VA = "0xBD77F0")]
	public ButtonsHelper()
	{
	}
}
[Token(Token = "0x200018F")]
public class CameraMovement : MonoBehaviour
{
	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float speed;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float zoomSpeed;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minX;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxX;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minY;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxY;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sensX;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float sensY;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationY;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float rotationX;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cam;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool showCam;

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xBD8A70", Offset = "0xBD8A70", VA = "0xBD8A70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xBD8AC0", Offset = "0xBD8AC0", VA = "0xBD8AC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xBD906C", Offset = "0xBD906C", VA = "0xBD906C")]
	public bool touchPadPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xBD9158", Offset = "0xBD9158", VA = "0xBD9158")]
	public CameraMovement()
	{
	}
}
[Token(Token = "0x2000190")]
public class CameraRenderDepthTexture : MonoBehaviour
{
	[Token(Token = "0x600069B")]
	[Address(RVA = "0xBD9180", Offset = "0xBD9180", VA = "0xBD9180")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xBD91DC", Offset = "0xBD91DC", VA = "0xBD91DC")]
	public CameraRenderDepthTexture()
	{
	}
}
[Token(Token = "0x2000191")]
public class CarefulBombs : MonoBehaviour
{
	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int sceneId;

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xBD91E4", Offset = "0xBD91E4", VA = "0xBD91E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xBD92DC", Offset = "0xBD92DC", VA = "0xBD92DC")]
	private void onSceneInitialise(int sceneId)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xBD9348", Offset = "0xBD9348", VA = "0xBD9348")]
	public void communication()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xBD93A0", Offset = "0xBD93A0", VA = "0xBD93A0")]
	public CarefulBombs()
	{
	}
}
[Token(Token = "0x2000192")]
public class CensoredGameObject : MonoBehaviour
{
	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject censored;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject uncensored;

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xBD93A8", Offset = "0xBD93A8", VA = "0xBD93A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xBD93E0", Offset = "0xBD93E0", VA = "0xBD93E0")]
	public CensoredGameObject()
	{
	}
}
[Token(Token = "0x2000193")]
public class CharacterMaterials : MonoBehaviour
{
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materialsList;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xBD93E8", Offset = "0xBD93E8", VA = "0xBD93E8")]
	public Material getRandomMaterial()
	{
		return null;
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xBD9438", Offset = "0xBD9438", VA = "0xBD9438")]
	public CharacterMaterials()
	{
	}
}
[Token(Token = "0x2000194")]
public class CharacterSphereRaycastItem : SphereHitRaycastItem
{
	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CommonCharacterController m_character;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xBD9440", Offset = "0xBD9440", VA = "0xBD9440", Slot = "4")]
	public override void changeToPhysicsColliders(bool bValue)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xBD9774", Offset = "0xBD9774", VA = "0xBD9774", Slot = "5")]
	public override bool OnHit(Bullet bullet, SphereHit sphereCollision)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xBD9494", Offset = "0xBD9494", VA = "0xBD9494")]
	public CommonCharacterController getCharacter()
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xBD98E0", Offset = "0xBD98E0", VA = "0xBD98E0")]
	public CharacterSphereRaycastItem()
	{
	}
}
[Token(Token = "0x2000195")]
public class CharacterVoices : MonoBehaviour
{
	[Token(Token = "0x2000196")]
	public enum Voice
	{
		[Token(Token = "0x400085C")]
		femaleA,
		[Token(Token = "0x400085D")]
		femaleB,
		[Token(Token = "0x400085E")]
		femaleC,
		[Token(Token = "0x400085F")]
		femaleD,
		[Token(Token = "0x4000860")]
		maleA,
		[Token(Token = "0x4000861")]
		maleB,
		[Token(Token = "0x4000862")]
		maleC,
		[Token(Token = "0x4000863")]
		maleD
	}

	[Token(Token = "0x2000197")]
	public enum Phrases
	{
		[Token(Token = "0x4000865")]
		clear,
		[Token(Token = "0x4000866")]
		fire_in_the_hole,
		[Token(Token = "0x4000867")]
		gogogo,
		[Token(Token = "0x4000868")]
		keep_firing,
		[Token(Token = "0x4000869")]
		take_cover,
		[Token(Token = "0x400086A")]
		watch_my_back,
		[Token(Token = "0x400086B")]
		lookout_behind_you,
		[Token(Token = "0x400086C")]
		cover_me,
		[Token(Token = "0x400086D")]
		target_destroy,
		[Token(Token = "0x400086E")]
		die,
		[Token(Token = "0x400086F")]
		everywhere,
		[Token(Token = "0x4000870")]
		flancs,
		[Token(Token = "0x4000871")]
		getdown,
		[Token(Token = "0x4000872")]
		lookout,
		[Token(Token = "0x4000873")]
		multiple_enemies,
		[Token(Token = "0x4000874")]
		reloading,
		[Token(Token = "0x4000875")]
		reloading_2,
		[Token(Token = "0x4000876")]
		target,
		[Token(Token = "0x4000877")]
		watch_out
	}

	[Token(Token = "0x4000857")]
	private const string SOUNDS_PATH = "CharacterVoices";

	[Token(Token = "0x4000858")]
	private const string SLASH = "/";

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CharacterVoices Instance;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Voice, AudioClip[]> phrases;

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xBD98E8", Offset = "0xBD98E8", VA = "0xBD98E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xBD9A28", Offset = "0xBD9A28", VA = "0xBD9A28")]
	private void loadClips()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xBD9C44", Offset = "0xBD9C44", VA = "0xBD9C44")]
	public AudioClip getPhrase(Voice voice, Phrases phrase)
	{
		return null;
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xBD9D5C", Offset = "0xBD9D5C", VA = "0xBD9D5C")]
	public CharacterVoices()
	{
	}
}
[Token(Token = "0x2000198")]
public class CinematicScreen : MonoBehaviour
{
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform topBand;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bottomBand;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeToMove;

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xBD9DD8", Offset = "0xBD9DD8", VA = "0xBD9DD8")]
	public void Show()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xBD9E8C", Offset = "0xBD9E8C", VA = "0xBD9E8C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xBD9F90", Offset = "0xBD9F90", VA = "0xBD9F90")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xBD9FE4", Offset = "0xBD9FE4", VA = "0xBD9FE4")]
	public CinematicScreen()
	{
	}
}
[Token(Token = "0x2000199")]
public class CommonCharacterController : AimTarget
{
	[Token(Token = "0x200019A")]
	private class TransformStore
	{
		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localPosition;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 localRotation;

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xBDA4C8", Offset = "0xBDA4C8", VA = "0xBDA4C8")]
		public TransformStore()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200019B")]
	public enum MoveMode
	{
		[Token(Token = "0x40008A5")]
		Directional,
		[Token(Token = "0x40008A6")]
		Strafe
	}

	[Token(Token = "0x200019C")]
	[CompilerGenerated]
	private sealed class <ApplyForce>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommonCharacterController <>4__this;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody _rigidbodyHit;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 _hitVector;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float _bulletHitForce;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E5")]
			[Address(RVA = "0xBDDC34", Offset = "0xBDDC34", VA = "0xBDDC34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E7")]
			[Address(RVA = "0xBDDC7C", Offset = "0xBDDC7C", VA = "0xBDDC7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xBDB284", Offset = "0xBDB284", VA = "0xBDB284")]
		[DebuggerHidden]
		public <ApplyForce>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xBDDBA0", Offset = "0xBDDBA0", VA = "0xBDDBA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xBDDBA4", Offset = "0xBDDBA4", VA = "0xBDDBA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xBDDC3C", Offset = "0xBDDC3C", VA = "0xBDDC3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019D")]
	[CompilerGenerated]
	private sealed class <backToHitColliderCoroutine>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommonCharacterController <>4__this;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006EB")]
			[Address(RVA = "0xBDDD4C", Offset = "0xBDDD4C", VA = "0xBDDD4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006ED")]
			[Address(RVA = "0xBDDD94", Offset = "0xBDDD94", VA = "0xBDDD94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xBDBC10", Offset = "0xBDBC10", VA = "0xBDBC10")]
		[DebuggerHidden]
		public <backToHitColliderCoroutine>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xBDDC84", Offset = "0xBDDC84", VA = "0xBDDC84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xBDDC88", Offset = "0xBDDC88", VA = "0xBDDC88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xBDDD54", Offset = "0xBDDD54", VA = "0xBDDD54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400087B")]
	private const float CENSORED_ENABLED_DELAY = 1f;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RagdollUtility ragdoll;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeOutWhenDead;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isRagdoll;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool firstHit;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float SECOND_HIT_FORCE;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int currentAction;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isMoving;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool male;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool disableOnDead;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<CharacterActionNew> actions;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<OverwriteAnimTransform> overwriteAnimTransforms;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, TransformStore> bones;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool kinematicOnDead;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CharacterSphereRaycastItem m_sphereRaycast;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, CommonCharacterController> s_charactersCache;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool actionsStarted;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float lastHit;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent OnDead;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Space]
	[Header("Movement")]
	public MoveMode moveMode;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float smoothAccelerationTime;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float linearAccelerationSpeed;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[Header("Rotation")]
	public bool lookInCameraDirection;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float turnSpeed;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float stationaryTurnSpeedMlp;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 moveDirection;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Animator animator;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 moveDirectionVelocity;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private float turnSensitivity;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Range(0.1f, 3f)]
	[SerializeField]
	private float animSpeedMultiplier;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 lastForwardAnimator;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private NetworkCharacterController remoteCharacterController;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform m_root;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform m_hips;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool bInitiated;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Collider[] characterColliders;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Coroutine backCoroutine;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool pendingAction;

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xBDA018", Offset = "0xBDA018", VA = "0xBDA018")]
	public static CommonCharacterController GetCharacter(string strName)
	{
		return null;
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xBDA0EC", Offset = "0xBDA0EC", VA = "0xBDA0EC")]
	public static void ClearCharacterChache()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xBDA164", Offset = "0xBDA164", VA = "0xBDA164", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xBDA4D0", Offset = "0xBDA4D0", VA = "0xBDA4D0")]
	public void init()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xBDA914", Offset = "0xBDA914", VA = "0xBDA914", Slot = "9")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xBDA9B8", Offset = "0xBDA9B8", VA = "0xBDA9B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xBDA848", Offset = "0xBDA848", VA = "0xBDA848")]
	public NetworkCharacterController GetNetworkCharacterController()
	{
		return null;
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xBDAAC0", Offset = "0xBDAAC0", VA = "0xBDAAC0")]
	public void saveBones()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xBDAC78", Offset = "0xBDAC78", VA = "0xBDAC78")]
	public void updateBones()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xBDAE30", Offset = "0xBDAE30", VA = "0xBDAE30", Slot = "10")]
	public virtual void AimToggle(bool state, bool setRootMotion = true)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xBDAE84", Offset = "0xBDAE84", VA = "0xBDAE84", Slot = "11")]
	public virtual void EnemyHit(Rigidbody _rigidbodyHit, Vector3 _hitVector, float _bulletHitForce)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xBDB1E8", Offset = "0xBDB1E8", VA = "0xBDB1E8")]
	[IteratorStateMachine(typeof(<ApplyForce>d__48))]
	private IEnumerator ApplyForce(Vector3 _hitVector, Rigidbody _rigidbodyHit, float _bulletHitForce)
	{
		return null;
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xBDB2AC", Offset = "0xBDB2AC", VA = "0xBDB2AC")]
	private void timeOut()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xBDB2F8", Offset = "0xBDB2F8", VA = "0xBDB2F8")]
	public void setSceneDataEditor(PoliceThiefData data)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xBD9528", Offset = "0xBD9528", VA = "0xBD9528")]
	public void activateBodyColliders(bool bActivate, bool bActivateRigidbody = false)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xBDB474", Offset = "0xBDB474", VA = "0xBDB474", Slot = "5")]
	protected override void ShowImpactEffect(Ray ray, RaycastHit hit)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xBDB4D4", Offset = "0xBDB4D4", VA = "0xBDB4D4", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xBDB62C", Offset = "0xBDB62C", VA = "0xBDB62C", Slot = "12")]
	public virtual bool OnHit(Bullet bullet, Ray ray, RaycastHit hit, Collider collider, bool bRemote = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xBDBB14", Offset = "0xBDBB14", VA = "0xBDBB14", Slot = "13")]
	public virtual Rigidbody getHips()
	{
		return null;
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xBDB40C", Offset = "0xBDB40C", VA = "0xBDB40C")]
	[IteratorStateMachine(typeof(<backToHitColliderCoroutine>d__58))]
	private IEnumerator backToHitColliderCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xBDBC38", Offset = "0xBDBC38", VA = "0xBDBC38")]
	public void startActions()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xBDBC4C", Offset = "0xBDBC4C", VA = "0xBDBC4C")]
	public void startNextAction()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xBDBDD4", Offset = "0xBDBDD4", VA = "0xBDBDD4")]
	public void executeAction(CharacterActionNew action)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xBDC0A0", Offset = "0xBDC0A0", VA = "0xBDC0A0")]
	public void executeAction(int iAction)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xBDB000", Offset = "0xBDB000", VA = "0xBDB000")]
	public void stopActions()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xBDBDC8", Offset = "0xBDBDC8", VA = "0xBDBDC8")]
	public void executeNextAction()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xBDBEC4", Offset = "0xBDBEC4", VA = "0xBDBEC4")]
	public void executeNewAction(int nextAction)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xBDC478", Offset = "0xBDC478", VA = "0xBDC478")]
	public bool hasActionActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xBDC4D8", Offset = "0xBDC4D8", VA = "0xBDC4D8")]
	public CharacterActionNew getCurrentAction()
	{
		return null;
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xBDC764", Offset = "0xBDC764", VA = "0xBDC764", Slot = "14")]
	public virtual void setWeaponStateRunning(bool state)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xBDC768", Offset = "0xBDC768", VA = "0xBDC768", Slot = "6")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xBDC7EC", Offset = "0xBDC7EC", VA = "0xBDC7EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xBDCA04", Offset = "0xBDCA04", VA = "0xBDCA04")]
	public void AddOverwriteTransform(OverwriteAnimTransform toAdd)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xBDCAAC", Offset = "0xBDCAAC", VA = "0xBDCAAC")]
	public void RemoveOverwriteTransform(OverwriteAnimTransform toRemove)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xBDCB04", Offset = "0xBDCB04", VA = "0xBDCB04")]
	public void UpdateAnimator(Vector3 movement)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xBDCD2C", Offset = "0xBDCD2C", VA = "0xBDCD2C")]
	private Vector3 GetMoveDirection(Vector3 movement)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xBDD0EC", Offset = "0xBDD0EC", VA = "0xBDD0EC")]
	private void Rotate(Vector3 movement)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xBDD44C", Offset = "0xBDD44C", VA = "0xBDD44C")]
	private float GetAngleFromForward(Transform obj, Vector3 worldDirection)
	{
		return default(float);
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xBDBD20", Offset = "0xBDBD20", VA = "0xBDBD20")]
	public bool isLocalControlled()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xBDC3D0", Offset = "0xBDC3D0", VA = "0xBDC3D0")]
	public bool isRemoteMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xBDB598", Offset = "0xBDB598", VA = "0xBDB598")]
	public bool isConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xBDD480", Offset = "0xBDD480", VA = "0xBDD480")]
	public bool isRemoteControllerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xBDD514", Offset = "0xBDD514", VA = "0xBDD514")]
	public Transform getPlayerTarget()
	{
		return null;
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xBDD5E8", Offset = "0xBDD5E8", VA = "0xBDD5E8")]
	public void reload()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xBDB0F0", Offset = "0xBDB0F0", VA = "0xBDB0F0")]
	protected bool IsCensored()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xBDDA08", Offset = "0xBDDA08", VA = "0xBDDA08")]
	public CommonCharacterController()
	{
	}
}
[Token(Token = "0x200019E")]
public class ComputerHitTarget : HitTarget
{
	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xBDDD9C", Offset = "0xBDDD9C", VA = "0xBDDD9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xBDDDA0", Offset = "0xBDDDA0", VA = "0xBDDDA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xBDDDA4", Offset = "0xBDDDA4", VA = "0xBDDDA4", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xBDDE10", Offset = "0xBDDE10", VA = "0xBDDE10")]
	public ComputerHitTarget()
	{
	}
}
[Token(Token = "0x200019F")]
public class CopyAnimationTransform : MonoBehaviour
{
	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool copy;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xBDDE18", Offset = "0xBDDE18", VA = "0xBDDE18")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xBDDE2C", Offset = "0xBDDE2C", VA = "0xBDDE2C")]
	private void copyAnimation()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xBDE148", Offset = "0xBDE148", VA = "0xBDE148")]
	public CopyAnimationTransform()
	{
	}
}
[Token(Token = "0x20001A0")]
public class CopyComponentUtil
{
	[Token(Token = "0x60006F5")]
	public static T CopyComponent<T>(T original, GameObject destination) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xBDE150", Offset = "0xBDE150", VA = "0xBDE150")]
	public CopyComponentUtil()
	{
	}
}
[Token(Token = "0x20001A1")]
public class CountDown : MonoBehaviour
{
	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro text;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentTime;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] timeSplit;

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xBDE158", Offset = "0xBDE158", VA = "0xBDE158")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xBDE1AC", Offset = "0xBDE1AC", VA = "0xBDE1AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xBDE39C", Offset = "0xBDE39C", VA = "0xBDE39C")]
	private void updateTime()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xBDE648", Offset = "0xBDE648", VA = "0xBDE648")]
	public CountDown()
	{
	}
}
[Token(Token = "0x20001A2")]
public class Crane : HitTarget
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody barrelPlatform;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SceneData scene;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool hitted;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool init;

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xBDE6B8", Offset = "0xBDE6B8", VA = "0xBDE6B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xBDE784", Offset = "0xBDE784", VA = "0xBDE784")]
	private void OnSceneInitialise(int sceneId)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xBDE804", Offset = "0xBDE804", VA = "0xBDE804")]
	private void communication()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xBDE85C", Offset = "0xBDE85C", VA = "0xBDE85C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xBDE93C", Offset = "0xBDE93C", VA = "0xBDE93C")]
	public Crane()
	{
	}
}
[Token(Token = "0x20001A3")]
public class CraneBarrels : MonoBehaviour
{
	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform triggerPoint;

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xBDE944", Offset = "0xBDE944", VA = "0xBDE944")]
	private void Update()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xBDED00", Offset = "0xBDED00", VA = "0xBDED00")]
	public CraneBarrels()
	{
	}
}
[Token(Token = "0x20001A4")]
public class CrisisVRigadeData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001A5")]
	public struct CharacterData
	{
		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SkinnedMeshRenderer skinnedMesh;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshRenderer[] meshes;
	}

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterData[] characterTemplates;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sceneManagerPrefab;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sceneDataPrefab;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject thiefPolicePrefab;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ThiefPoliceController> teammates;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xBDED08", Offset = "0xBDED08", VA = "0xBDED08")]
	public void test()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xBDF128", Offset = "0xBDF128", VA = "0xBDF128")]
	public void updateCharacterMaterials()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xBDF4C8", Offset = "0xBDF4C8", VA = "0xBDF4C8")]
	public void updateFireActions()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xBDF648", Offset = "0xBDF648", VA = "0xBDF648")]
	public void updateGotoActions()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xBDF7A8", Offset = "0xBDF7A8", VA = "0xBDF7A8")]
	public CrisisVRigadeData()
	{
	}
}
[Token(Token = "0x20001A6")]
public class CrisisVrigade_PS4Trophies
{
	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int FIRST_SHOT;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int FIRST_HEADSHOT;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int FIRST_SCENE_COMPLETED;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int KILL_BUDDIE;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int FIRST_SHOT_BONUSWEAPON;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int FIRST_HEADSHOT_SLOWMOTION;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int BOMBS_EXPLODED;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int GAMEPLAY_100;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int MISSION_ACCOMPLISHED_ALLHOSTAGEALIVE;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int HEADSHOTS_1000;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int MISSION_ACCOMPLISHED;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int MISSION_ACCOMPLISHED_HELLMODE;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool firstShot;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public static bool firstHeadshot;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public static bool firstSceneCompleted;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public static bool killBuddie;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static bool firstShotBonusWeapon;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public static bool firstHeadshotSlowMotion;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public static bool bombsExploded;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public static bool gameplay100;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool missionAccomplishedAllHostageAlive;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public static bool headshots1000;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public static bool missionAccomplished;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public static bool missionAccomplishedHellMode;

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xBDF824", Offset = "0xBDF824", VA = "0xBDF824")]
	public CrisisVrigade_PS4Trophies()
	{
	}
}
[Token(Token = "0x20001A7")]
public class CrisisWatch : MonoBehaviour
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform watch;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro lifes;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerHit playerHit;

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xBDF898", Offset = "0xBDF898", VA = "0xBDF898")]
	private void Awake()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xBDF9A4", Offset = "0xBDF9A4", VA = "0xBDF9A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xBDFB38", Offset = "0xBDFB38", VA = "0xBDFB38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xBDFAA0", Offset = "0xBDFAA0", VA = "0xBDFAA0")]
	public void updateLifes()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xBDFBCC", Offset = "0xBDFBCC", VA = "0xBDFBCC")]
	public CrisisWatch()
	{
	}
}
[Token(Token = "0x20001A8")]
public class CrisisWeapon : Weapon
{
	[Token(Token = "0x40008DB")]
	private const float NOT_SHOOTING_DURATION = 15f;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform aimHand;

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xBDFBD4", Offset = "0xBDFBD4", VA = "0xBDFBD4", Slot = "22")]
	protected override void init()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xBDFCA0", Offset = "0xBDFCA0", VA = "0xBDFCA0", Slot = "23")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xBDFDF0", Offset = "0xBDFDF0", VA = "0xBDFDF0", Slot = "25")]
	protected override void reloadUpdate()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xBE0050", Offset = "0xBE0050", VA = "0xBE0050", Slot = "10")]
	public override void BeginInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xBE0190", Offset = "0xBE0190", VA = "0xBE0190", Slot = "15")]
	public override void EndInteraction(NVRHand hand)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xBE0264", Offset = "0xBE0264", VA = "0xBE0264", Slot = "27")]
	protected override void decreaseBulletIcon()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xBDFE70", Offset = "0xBDFE70", VA = "0xBDFE70")]
	public void changeWeapon(bool forceReload = false)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xBDFE38", Offset = "0xBDFE38", VA = "0xBDFE38")]
	public bool isDefaultWeapon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xBE0318", Offset = "0xBE0318", VA = "0xBE0318")]
	public void changeHands()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xBE03F0", Offset = "0xBE03F0", VA = "0xBE03F0")]
	public void setHands()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xBE04A8", Offset = "0xBE04A8", VA = "0xBE04A8", Slot = "21")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xBE04AC", Offset = "0xBE04AC", VA = "0xBE04AC", Slot = "26")]
	public override void dropMagazine()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xBE0534", Offset = "0xBE0534", VA = "0xBE0534", Slot = "28")]
	public override void reload(bool bAnimate = false, bool bRemote = false)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xBE072C", Offset = "0xBE072C", VA = "0xBE072C")]
	public CrisisWeapon()
	{
	}
}
[Token(Token = "0x20001A9")]
public class CustomRenderQueue : MonoBehaviour
{
	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int custom_render_queue;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool modifychildren;

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xBE0784", Offset = "0xBE0784", VA = "0xBE0784")]
	private void Start()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xBE0788", Offset = "0xBE0788", VA = "0xBE0788")]
	private void modifyRenderQueue()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xBE087C", Offset = "0xBE087C", VA = "0xBE087C")]
	public CustomRenderQueue()
	{
	}
}
[Token(Token = "0x20001AA")]
public class DebugCommand : MonoBehaviour
{
	[Token(Token = "0x20001AB")]
	public enum Command
	{
		[Token(Token = "0x40008E1")]
		SceneSelection,
		[Token(Token = "0x40008E2")]
		Player,
		[Token(Token = "0x40008E3")]
		Polices,
		[Token(Token = "0x40008E4")]
		Thiefs,
		[Token(Token = "0x40008E5")]
		Hostages,
		[Token(Token = "0x40008E6")]
		Characters,
		[Token(Token = "0x40008E7")]
		BulletTime
	}

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Command command;

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xBE088C", Offset = "0xBE088C", VA = "0xBE088C")]
	public DebugCommand()
	{
	}
}
[Token(Token = "0x20001AC")]
public class DebugPointer : MonoBehaviour
{
	[Token(Token = "0x6000721")]
	[Address(RVA = "0xBE0894", Offset = "0xBE0894", VA = "0xBE0894")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xBE0B98", Offset = "0xBE0B98", VA = "0xBE0B98")]
	public DebugPointer()
	{
	}
}
[Token(Token = "0x20001AD")]
public class DebugModeObject : HitTarget
{
	[Token(Token = "0x6000723")]
	[Address(RVA = "0xBE0BA0", Offset = "0xBE0BA0", VA = "0xBE0BA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xBE0BC4", Offset = "0xBE0BC4", VA = "0xBE0BC4", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xBE0D50", Offset = "0xBE0D50", VA = "0xBE0D50")]
	public DebugModeObject()
	{
	}
}
[Token(Token = "0x20001AE")]
public class Door : SceneAction
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform openDoorTransform;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SceneData openDoorScene;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xBE0D58", Offset = "0xBE0D58", VA = "0xBE0D58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xBE0DA8", Offset = "0xBE0DA8", VA = "0xBE0DA8", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xBE0E08", Offset = "0xBE0E08", VA = "0xBE0E08")]
	private void openDoor()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xBE0F0C", Offset = "0xBE0F0C", VA = "0xBE0F0C")]
	public void closeDoor()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xBE0F10", Offset = "0xBE0F10", VA = "0xBE0F10")]
	public Door()
	{
	}
}
[Token(Token = "0x20001AF")]
public class EnemyBullet : MonoBehaviour
{
	[Token(Token = "0x600072B")]
	[Address(RVA = "0xBE0F18", Offset = "0xBE0F18", VA = "0xBE0F18")]
	public EnemyBullet()
	{
	}
}
[Token(Token = "0x20001B0")]
public class ExcludeFromPlatformBuild : MonoBehaviour
{
	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool exclude_pc;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool exclude_quest;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool exclude_pico;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool exclude_nolo;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool exclude_ps4;

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xBE0F20", Offset = "0xBE0F20", VA = "0xBE0F20")]
	private void Start()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xBE0F54", Offset = "0xBE0F54", VA = "0xBE0F54")]
	public ExcludeFromPlatformBuild()
	{
	}
}
[Token(Token = "0x20001B1")]
public class ExitButton : UIButton
{
	[Token(Token = "0x600072E")]
	[Address(RVA = "0xBE0F5C", Offset = "0xBE0F5C", VA = "0xBE0F5C", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xBE0F64", Offset = "0xBE0F64", VA = "0xBE0F64", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xBE1030", Offset = "0xBE1030", VA = "0xBE1030")]
	private void exitGame()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xBE1038", Offset = "0xBE1038", VA = "0xBE1038")]
	public ExitButton()
	{
	}
}
[Token(Token = "0x20001B2")]
public class ExplosiveItem : HitTarget
{
	[Token(Token = "0x20001B3")]
	[CompilerGenerated]
	private sealed class <test>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Rigidbody> rbs;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ExplosiveItem <>4__this;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600073C")]
			[Address(RVA = "0xBE1DFC", Offset = "0xBE1DFC", VA = "0xBE1DFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600073E")]
			[Address(RVA = "0xBE1E44", Offset = "0xBE1E44", VA = "0xBE1E44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xBE1B24", Offset = "0xBE1B24", VA = "0xBE1B24")]
		[DebuggerHidden]
		public <test>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xBE1BE0", Offset = "0xBE1BE0", VA = "0xBE1BE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xBE1BE4", Offset = "0xBE1BE4", VA = "0xBE1BE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xBE1E04", Offset = "0xBE1E04", VA = "0xBE1E04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B4")]
	[CompilerGenerated]
	private sealed class <test2>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Rigidbody> rbs;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ExplosiveItem <>4__this;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000742")]
			[Address(RVA = "0xBE21A4", Offset = "0xBE21A4", VA = "0xBE21A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000744")]
			[Address(RVA = "0xBE21EC", Offset = "0xBE21EC", VA = "0xBE21EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xBE1B4C", Offset = "0xBE1B4C", VA = "0xBE1B4C")]
		[DebuggerHidden]
		public <test2>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xBE1E4C", Offset = "0xBE1E4C", VA = "0xBE1E4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xBE1E50", Offset = "0xBE1E50", VA = "0xBE1E50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xBE21AC", Offset = "0xBE21AC", VA = "0xBE21AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject item;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject explosion;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float explosionRadius;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float force;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float upForce;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float force2;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool checkCharacters;

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xBE1040", Offset = "0xBE1040", VA = "0xBE1040", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xBE1584", Offset = "0xBE1584", VA = "0xBE1584")]
	private List<CommonCharacterController> getCharactersHitted()
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xBE1ACC", Offset = "0xBE1ACC", VA = "0xBE1ACC")]
	private void startCommunication()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xBE19E4", Offset = "0xBE19E4", VA = "0xBE19E4")]
	[IteratorStateMachine(typeof(<test>d__10))]
	private IEnumerator test(List<Rigidbody> rbs)
	{
		return null;
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xBE1A58", Offset = "0xBE1A58", VA = "0xBE1A58")]
	[IteratorStateMachine(typeof(<test2>d__11))]
	private IEnumerator test2(List<Rigidbody> rbs)
	{
		return null;
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xBE1B74", Offset = "0xBE1B74", VA = "0xBE1B74")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xBE1BC4", Offset = "0xBE1BC4", VA = "0xBE1BC4")]
	public ExplosiveItem()
	{
	}
}
[Token(Token = "0x20001B5")]
public static class UnityWebRequestExtension
{
	[Token(Token = "0x6000745")]
	[Address(RVA = "0xBE21F4", Offset = "0xBE21F4", VA = "0xBE21F4")]
	public static TaskAwaiter<UnityWebRequest.Result> GetAwaiter(this UnityWebRequestAsyncOperation reqOp)
	{
		return default(TaskAwaiter<UnityWebRequest.Result>);
	}
}
[Token(Token = "0x20001B7")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformToFollow;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deltaY;

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xBE23FC", Offset = "0xBE23FC", VA = "0xBE23FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xBE2488", Offset = "0xBE2488", VA = "0xBE2488")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x20001B8")]
public class GameObjectAnimator : MonoBehaviour
{
	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 initPosition;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initRotation;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 initScale;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 animatedPosition;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 animatedRotation;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 animatedScale;

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xBE2490", Offset = "0xBE2490", VA = "0xBE2490")]
	private void Awake()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xBE2618", Offset = "0xBE2618", VA = "0xBE2618")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xBE2628", Offset = "0xBE2628", VA = "0xBE2628")]
	public void setAnimation(bool enable, float time)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xBE276C", Offset = "0xBE276C", VA = "0xBE276C")]
	public GameObjectAnimator()
	{
	}
}
[Token(Token = "0x20001B9")]
public class GameOver : MonoBehaviour
{
	[Token(Token = "0x20001BA")]
	[CompilerGenerated]
	private sealed class <retryMenu>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOver <>4__this;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000764")]
			[Address(RVA = "0xBE4D18", Offset = "0xBE4D18", VA = "0xBE4D18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000766")]
			[Address(RVA = "0xBE4D60", Offset = "0xBE4D60", VA = "0xBE4D60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xBE2EC4", Offset = "0xBE2EC4", VA = "0xBE2EC4")]
		[DebuggerHidden]
		public <retryMenu>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xBE4418", Offset = "0xBE4418", VA = "0xBE4418", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xBE441C", Offset = "0xBE441C", VA = "0xBE441C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xBE4D20", Offset = "0xBE4D20", VA = "0xBE4D20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BB")]
	[CompilerGenerated]
	private sealed class <volumeOff>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOver <>4__this;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource[] <audioSources>5__2;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <volume>5__3;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <bFirst>5__4;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600076A")]
			[Address(RVA = "0xBE50B8", Offset = "0xBE50B8", VA = "0xBE50B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600076C")]
			[Address(RVA = "0xBE5100", Offset = "0xBE5100", VA = "0xBE5100", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xBE304C", Offset = "0xBE304C", VA = "0xBE304C")]
		[DebuggerHidden]
		public <volumeOff>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xBE4D68", Offset = "0xBE4D68", VA = "0xBE4D68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xBE4D6C", Offset = "0xBE4D6C", VA = "0xBE4D6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xBE50C0", Offset = "0xBE50C0", VA = "0xBE50C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BC")]
	[CompilerGenerated]
	private sealed class <volumeOn>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOver <>4__this;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource[] <audioSources>5__2;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <volume>5__3;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000770")]
			[Address(RVA = "0xBE54EC", Offset = "0xBE54EC", VA = "0xBE54EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0xBE5534", Offset = "0xBE5534", VA = "0xBE5534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xBE30DC", Offset = "0xBE30DC", VA = "0xBE30DC")]
		[DebuggerHidden]
		public <volumeOn>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xBE5108", Offset = "0xBE5108", VA = "0xBE5108", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xBE510C", Offset = "0xBE510C", VA = "0xBE510C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xBE54F4", Offset = "0xBE54F4", VA = "0xBE54F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BD")]
	[CompilerGenerated]
	private sealed class <retryCountdownCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOver <>4__this;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000776")]
			[Address(RVA = "0xBE56DC", Offset = "0xBE56DC", VA = "0xBE56DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000778")]
			[Address(RVA = "0xBE5724", Offset = "0xBE5724", VA = "0xBE5724", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xBE316C", Offset = "0xBE316C", VA = "0xBE316C")]
		[DebuggerHidden]
		public <retryCountdownCoroutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xBE553C", Offset = "0xBE553C", VA = "0xBE553C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xBE5540", Offset = "0xBE5540", VA = "0xBE5540", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xBE56E4", Offset = "0xBE56E4", VA = "0xBE56E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000909")]
	private const int RETRY_COUNTDOWN = 9;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform retryTransform;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform gameOverTransform;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject newScore;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshPro nameScoreInput;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro retryCountdown;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LayerMask oldCullingMask;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color oldBackgroundColor;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private CameraClearFlags oldClearFlags;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<AudioSource, float> originalVolumes;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WalkieTalkie.CommunicationEvent gameOverCommunicationEvent;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isSpectator;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool bRetry;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool bBackToOffice;

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xBE2774", Offset = "0xBE2774", VA = "0xBE2774")]
	private void Awake()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xBE2A40", Offset = "0xBE2A40", VA = "0xBE2A40")]
	public void Show()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xBE2C9C", Offset = "0xBE2C9C", VA = "0xBE2C9C")]
	private void communication()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xBE2D80", Offset = "0xBE2D80", VA = "0xBE2D80")]
	private void portTimeCommunication()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xBE2DD8", Offset = "0xBE2DD8", VA = "0xBE2DD8")]
	private void gameOver()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xBE2E5C", Offset = "0xBE2E5C", VA = "0xBE2E5C")]
	[IteratorStateMachine(typeof(<retryMenu>d__17))]
	private IEnumerator retryMenu()
	{
		return null;
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xBE2EEC", Offset = "0xBE2EEC", VA = "0xBE2EEC")]
	private CrisisWeapon getWeapon()
	{
		return null;
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xBE2FE4", Offset = "0xBE2FE4", VA = "0xBE2FE4")]
	[IteratorStateMachine(typeof(<volumeOff>d__19))]
	private IEnumerator volumeOff()
	{
		return null;
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xBE3074", Offset = "0xBE3074", VA = "0xBE3074")]
	[IteratorStateMachine(typeof(<volumeOn>d__20))]
	private IEnumerator volumeOn()
	{
		return null;
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xBE3104", Offset = "0xBE3104", VA = "0xBE3104")]
	[IteratorStateMachine(typeof(<retryCountdownCoroutine>d__21))]
	private IEnumerator retryCountdownCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xBE3194", Offset = "0xBE3194", VA = "0xBE3194")]
	private void retry(UIButton button)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xBE3A84", Offset = "0xBE3A84", VA = "0xBE3A84")]
	public void backToOffice([Optional] UIButton button)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xBE37C4", Offset = "0xBE37C4", VA = "0xBE37C4")]
	private void restartGame()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xBE3C6C", Offset = "0xBE3C6C", VA = "0xBE3C6C")]
	private void backToBase()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xBE3CB8", Offset = "0xBE3CB8", VA = "0xBE3CB8")]
	private void hideAll()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xBE3D08", Offset = "0xBE3D08", VA = "0xBE3D08")]
	public void showAll()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xBE3888", Offset = "0xBE3888", VA = "0xBE3888")]
	private void backToGameAsViewer()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xBE40E0", Offset = "0xBE40E0", VA = "0xBE40E0")]
	private bool isBestScore(int currentScore)
	{
		return default(bool);
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xBE4394", Offset = "0xBE4394", VA = "0xBE4394")]
	public GameOver()
	{
	}
}
[Token(Token = "0x20001BE")]
public class HarborAnimationEvents : MonoBehaviour
{
	[Token(Token = "0x20001BF")]
	[CompilerGenerated]
	private sealed class <wheelCollision>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HarborAnimationEvents <>4__this;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0xBE5CDC", Offset = "0xBE5CDC", VA = "0xBE5CDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0xBE5D24", Offset = "0xBE5D24", VA = "0xBE5D24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xBE5BBC", Offset = "0xBE5BBC", VA = "0xBE5BBC")]
		[DebuggerHidden]
		public <wheelCollision>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xBE5BEC", Offset = "0xBE5BEC", VA = "0xBE5BEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xBE5BF0", Offset = "0xBE5BF0", VA = "0xBE5BF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xBE5CE4", Offset = "0xBE5CE4", VA = "0xBE5CE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000929")]
	private const float POLICE_CAR_CRASH_FIRE_DELAY = 2f;

	[Token(Token = "0x400092A")]
	private const float SWAT_WHEEL_IMPACT_FORCE = 100f;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ThiefPoliceController swat;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody swatHead;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource[] audios;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject wheel;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject policeCarCrashSmoke;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject policeCarCrashFire;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject policeCarCrashModel;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem policeCarExplosion;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem policeCarTruckExplosion;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem craneFX;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SceneData sceneData;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject animationModelReplacement;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject oldModel;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xBE572C", Offset = "0xBE572C", VA = "0xBE572C")]
	private void Start()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xBE57F8", Offset = "0xBE57F8", VA = "0xBE57F8")]
	private void replaceAnimation(int sceneId)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xBE5880", Offset = "0xBE5880", VA = "0xBE5880")]
	public void OnAnimationPlay()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xBE58E0", Offset = "0xBE58E0", VA = "0xBE58E0")]
	public void OnThrowedWheel()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xBE599C", Offset = "0xBE599C", VA = "0xBE599C")]
	public void ThrowedWheelAudio()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xBE5A0C", Offset = "0xBE5A0C", VA = "0xBE5A0C")]
	public void OnPoliceCarAndTruckCrash()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xBE5A4C", Offset = "0xBE5A4C", VA = "0xBE5A4C")]
	public void OnPoliceCarAndCraneCrash()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xBE5B0C", Offset = "0xBE5B0C", VA = "0xBE5B0C")]
	public void OnPoliceCarCrash()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xBE5AEC", Offset = "0xBE5AEC", VA = "0xBE5AEC")]
	private void showPoliceCarCrashSmoke()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xBE5B5C", Offset = "0xBE5B5C", VA = "0xBE5B5C")]
	private void showPoliceCarCrashFire()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xBE5B7C", Offset = "0xBE5B7C", VA = "0xBE5B7C")]
	public void OnCraneCrash()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xBE5934", Offset = "0xBE5934", VA = "0xBE5934")]
	[IteratorStateMachine(typeof(<wheelCollision>d__26))]
	private IEnumerator wheelCollision()
	{
		return null;
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xBE5BE4", Offset = "0xBE5BE4", VA = "0xBE5BE4")]
	public HarborAnimationEvents()
	{
	}
}
[Token(Token = "0x20001C0")]
public class HarborCrash : SceneAction
{
	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ThiefPoliceController[] charactersToDeadBeforeAnimation;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ThiefPoliceController[] charactersAfterAnimation;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animation anim;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int deadsCount;

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xBE5D2C", Offset = "0xBE5D2C", VA = "0xBE5D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xBE5D38", Offset = "0xBE5D38", VA = "0xBE5D38", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xBE5E24", Offset = "0xBE5E24", VA = "0xBE5E24")]
	private void OnDeadCharacter()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xBE5EF8", Offset = "0xBE5EF8", VA = "0xBE5EF8")]
	public HarborCrash()
	{
	}
}
[Token(Token = "0x20001C1")]
public class HelicopterRotorKiller : MonoBehaviour
{
	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playerKilled;

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xBE5F00", Offset = "0xBE5F00", VA = "0xBE5F00")]
	public void throwToPlayer(Vector3 playerPosition)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xBE6250", Offset = "0xBE6250", VA = "0xBE6250")]
	private void missionAccomplished()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xBE6368", Offset = "0xBE6368", VA = "0xBE6368")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xBE6490", Offset = "0xBE6490", VA = "0xBE6490")]
	private void detectCollisions()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xBE64EC", Offset = "0xBE64EC", VA = "0xBE64EC")]
	public HelicopterRotorKiller()
	{
	}
}
[Token(Token = "0x20001C2")]
public class Helper : MonoBehaviour
{
	[Token(Token = "0x20001C3")]
	public enum HelperState
	{
		[Token(Token = "0x4000947")]
		GrabWeapon,
		[Token(Token = "0x4000948")]
		DropMagazine,
		[Token(Token = "0x4000949")]
		GrabMagazine,
		[Token(Token = "0x400094A")]
		InsertMagazine,
		[Token(Token = "0x400094B")]
		CockWeapon,
		[Token(Token = "0x400094C")]
		Shot
	}

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool enableInstructions;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon weapon;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform screens;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HelperState helperState;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool initialised;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool twoHandsActive;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xBE64F4", Offset = "0xBE64F4", VA = "0xBE64F4")]
	public void init()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xBE6940", Offset = "0xBE6940", VA = "0xBE6940")]
	private bool checkHandsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xBE69E4", Offset = "0xBE69E4", VA = "0xBE69E4")]
	private void _showHelper(bool enable)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xBE6C44", Offset = "0xBE6C44", VA = "0xBE6C44")]
	private void showHelper(bool enable)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xBE6688", Offset = "0xBE6688", VA = "0xBE6688")]
	private void setHelperState(HelperState helperState)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xBE6B64", Offset = "0xBE6B64", VA = "0xBE6B64")]
	private void setHandHelperState(NVRHand hand, ButtonsHelper.ButtonState buttonState)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xBE6C5C", Offset = "0xBE6C5C", VA = "0xBE6C5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xBE7050", Offset = "0xBE7050", VA = "0xBE7050")]
	public Helper()
	{
	}
}
[Token(Token = "0x20001C4")]
public class HitTargetRigidbody : HitTarget
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_bulletForceFactor;

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xBE70AC", Offset = "0xBE70AC", VA = "0xBE70AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xBE70B0", Offset = "0xBE70B0", VA = "0xBE70B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xBE70B4", Offset = "0xBE70B4", VA = "0xBE70B4", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xBE72C8", Offset = "0xBE72C8", VA = "0xBE72C8")]
	public HitTargetRigidbody()
	{
	}
}
[Token(Token = "0x20001C5")]
public class HostageController : CommonCharacterController
{
	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xBE72D8", Offset = "0xBE72D8", VA = "0xBE72D8", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xBE72DC", Offset = "0xBE72DC", VA = "0xBE72DC", Slot = "9")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xBE73C0", Offset = "0xBE73C0", VA = "0xBE73C0", Slot = "12")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit, Collider c, bool bRemote = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xBE762C", Offset = "0xBE762C", VA = "0xBE762C")]
	public HostageController()
	{
	}
}
[Token(Token = "0x20001C6")]
public class InGameMessage : MonoBehaviour
{
	[Token(Token = "0x20001C7")]
	public enum MessageType
	{
		[Token(Token = "0x4000953")]
		Message_TeammateDisconnected
	}

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton button;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject messageObj;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro textMesh;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool showMessage;

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xBE7680", Offset = "0xBE7680", VA = "0xBE7680")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xBE7804", Offset = "0xBE7804", VA = "0xBE7804")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xBE78BC", Offset = "0xBE78BC", VA = "0xBE78BC")]
	public void ShowMessage(MessageType messageType)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xBE7ACC", Offset = "0xBE7ACC", VA = "0xBE7ACC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xBE7C48", Offset = "0xBE7C48", VA = "0xBE7C48")]
	private void OnTeammateDisconnected()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xBE7CE8", Offset = "0xBE7CE8", VA = "0xBE7CE8")]
	private void OnButtonPressed(UIButton button)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xBE7D10", Offset = "0xBE7D10", VA = "0xBE7D10")]
	public InGameMessage()
	{
	}
}
[Token(Token = "0x20001C8")]
public interface IKeyboardPointable
{
	[Token(Token = "0x60007AD")]
	void OnHoverAnimation(bool isHover);
}
[Token(Token = "0x20001C9")]
public class KeyboardPointer : MonoBehaviour
{
	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SumalabEvent OnLaserPointerEvent;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool laserEnabled;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool laserEquipped;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject holder;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pointer;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float thickness;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxDistance;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IKeyboardPointable previousContact;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RaycastHit hit;

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xBE7D18", Offset = "0xBE7D18", VA = "0xBE7D18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xBE7E7C", Offset = "0xBE7E7C", VA = "0xBE7E7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xBE7E0C", Offset = "0xBE7E0C", VA = "0xBE7E0C")]
	private void OnLaserPointerStateChanged()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xBE7F34", Offset = "0xBE7F34", VA = "0xBE7F34")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xBE3C00", Offset = "0xBE3C00", VA = "0xBE3C00")]
	public static void SetLaserPointer(bool enable)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xBE8330", Offset = "0xBE8330", VA = "0xBE8330")]
	public static void SetLaserPointerEquipped(bool enable)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xBE838C", Offset = "0xBE838C", VA = "0xBE838C")]
	public static bool GetLaserPointerEquipped()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xBE83E4", Offset = "0xBE83E4", VA = "0xBE83E4")]
	public static bool GetLaserPointer()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xBE843C", Offset = "0xBE843C", VA = "0xBE843C")]
	public KeyboardPointer()
	{
	}
}
[Token(Token = "0x20001CA")]
public class Line : VolumetricLineBehavior
{
	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xBE84D0", Offset = "0xBE84D0", VA = "0xBE84D0")]
	public void drawLine(Vector3 initPoint, Vector3 endPoint)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xBE862C", Offset = "0xBE862C", VA = "0xBE862C")]
	public void showLine()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xBE86B8", Offset = "0xBE86B8", VA = "0xBE86B8")]
	public void hideLine(float delay = 0f)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xBE87D4", Offset = "0xBE87D4", VA = "0xBE87D4")]
	public void invokeHideLine()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xBE8860", Offset = "0xBE8860", VA = "0xBE8860")]
	public Line()
	{
	}
}
[Token(Token = "0x20001CB")]
public class LoadSaveData : MonoBehaviour
{
	[Token(Token = "0x20001CC")]
	public enum LoadSaveResult
	{
		[Token(Token = "0x4000969")]
		Ok,
		[Token(Token = "0x400096A")]
		CorruptFile,
		[Token(Token = "0x400096B")]
		GenericError,
		[Token(Token = "0x400096C")]
		NoData,
		[Token(Token = "0x400096D")]
		TimeOut
	}

	[Token(Token = "0x20001CD")]
	[CompilerGenerated]
	private sealed class <loadData>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadSaveData <>4__this;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0xBE97AC", Offset = "0xBE97AC", VA = "0xBE97AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0xBE97F4", Offset = "0xBE97F4", VA = "0xBE97F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xBE8EB0", Offset = "0xBE8EB0", VA = "0xBE8EB0")]
		[DebuggerHidden]
		public <loadData>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xBE9348", Offset = "0xBE9348", VA = "0xBE9348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xBE934C", Offset = "0xBE934C", VA = "0xBE934C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xBE97B4", Offset = "0xBE97B4", VA = "0xBE97B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095E")]
	private const float WAIT_TIME = 2f;

	[Token(Token = "0x400095F")]
	private const string SLASH = "/";

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LoadSaveData Instance;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject game;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializableGlobalData globalData;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SerializableSettings settingsData;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityAction<SerializableGlobalData> OnLoadGlobalDataAction;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityAction<SerializableSettings> OnLoadSettingsAction;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool globalDataInit;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool settingsDataInit;

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xBE8868", Offset = "0xBE8868", VA = "0xBE8868")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xBE8CE0", Offset = "0xBE8CE0", VA = "0xBE8CE0")]
	private void OnLoadGameData(SerializableGlobalData data)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xBE8DC8", Offset = "0xBE8DC8", VA = "0xBE8DC8")]
	private void OnLoadSettings(SerializableSettings data)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xBE89C0", Offset = "0xBE89C0", VA = "0xBE89C0")]
	[IteratorStateMachine(typeof(<loadData>d__14))]
	private IEnumerator loadData()
	{
		return null;
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xBE8A28", Offset = "0xBE8A28", VA = "0xBE8A28")]
	private void startGame()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xBE9050", Offset = "0xBE9050", VA = "0xBE9050")]
	private int GetSystemLanguage()
	{
		return default(int);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xBE35F8", Offset = "0xBE35F8", VA = "0xBE35F8")]
	public void SaveScores()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xBE9164", Offset = "0xBE9164", VA = "0xBE9164")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x60007C5")]
	public static void LoadFile<T>(string fileName, Action<LoadSaveResult, T> onLoadComplete)
	{
	}

	[Token(Token = "0x60007C6")]
	public static void SaveFile<T>(string fileName, T data, Action<LoadSaveResult> onSaveComplete)
	{
	}

	[Token(Token = "0x60007C7")]
	public static void SavePrefs<T>(string pref, T data)
	{
	}

	[Token(Token = "0x60007C8")]
	public static T LoadPrefs<T>(string pref)
	{
		return (T)null;
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xBE9330", Offset = "0xBE9330", VA = "0xBE9330")]
	public LoadSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CE")]
public class SerializableScoreData
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string username;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string date;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int score;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int gameLevel;

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xBE35F0", Offset = "0xBE35F0", VA = "0xBE35F0")]
	public SerializableScoreData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CF")]
public class SerializableGlobalData
{
	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float CURRENT_DATA_VERSION;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float version;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int totalHeadshots;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int totalGameplays;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int bestScoreGallery;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool bankMissionAccomplished;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool portMissionAccomplished;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool officeMissionAccomplished;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<SerializableScoreData> scoresData;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SerializableScoreData> scoresPort;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<SerializableScoreData> scoresOffice;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal string userName;

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xBE97FC", Offset = "0xBE97FC", VA = "0xBE97FC")]
	[OnDeserializing]
	internal void OnDeserializingMethod(StreamingContext context)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xBE8ED8", Offset = "0xBE8ED8", VA = "0xBE8ED8")]
	public SerializableGlobalData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D0")]
public class SerializableSettings
{
	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float CURRENT_SETTINGS_VERSION;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float version;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float playerHeight;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int reloadMode;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int language;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int buttonConfig;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string onlineNickName;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string onlineDefaultJoinGamePassword;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool walkieTalkieEnabled;

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xBE9904", Offset = "0xBE9904", VA = "0xBE9904")]
	[OnDeserializing]
	internal void OnDeserializingMethod(StreamingContext context)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xBE9994", Offset = "0xBE9994", VA = "0xBE9994")]
	[OnDeserialized]
	internal void OnDeserializedMethod(StreamingContext context)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xBE8FA0", Offset = "0xBE8FA0", VA = "0xBE8FA0")]
	public SerializableSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D1")]
public class LocalizationData
{
	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LocalizationItem[] items;

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xBE9A70", Offset = "0xBE9A70", VA = "0xBE9A70")]
	public LocalizationData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D2")]
public class LocalizationItem
{
	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xBE9A78", Offset = "0xBE9A78", VA = "0xBE9A78")]
	public LocalizationItem()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D3")]
public class LocalizationDataLegacy
{
	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LocalizationItemLegacy[] localization;

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xBE9A80", Offset = "0xBE9A80", VA = "0xBE9A80")]
	public LocalizationDataLegacy()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D4")]
public class LocalizationItemLegacy
{
	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string StringIdentifier;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string English;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Chinese;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Japanese;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Korean;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xBE9A88", Offset = "0xBE9A88", VA = "0xBE9A88")]
	public LocalizationItemLegacy()
	{
	}
}
[Token(Token = "0x20001D5")]
public class LocalizationManager : MonoBehaviour
{
	[Token(Token = "0x20001D6")]
	public delegate void LocalizationEventHandler();

	[Token(Token = "0x20001D7")]
	public enum Language
	{
		[Token(Token = "0x400099C")]
		en = 1,
		[Token(Token = "0x400099D")]
		es,
		[Token(Token = "0x400099E")]
		cn,
		[Token(Token = "0x400099F")]
		jp,
		[Token(Token = "0x40009A0")]
		kr
	}

	[Token(Token = "0x4000993")]
	private const string LOCALIZATION_PATH = "Localization/";

	[Token(Token = "0x4000994")]
	private const string LOCALIZATION_FILE_PATTERN = "localization_";

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocalizationManager Instance;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Language language;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> localizedText;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isReady;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string missingTextString;

	[Token(Token = "0x14000010")]
	public event LocalizationEventHandler OnLocalizationChanged
	{
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xBE9A90", Offset = "0xBE9A90", VA = "0xBE9A90")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xBE9B2C", Offset = "0xBE9B2C", VA = "0xBE9B2C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xBE9BC8", Offset = "0xBE9BC8", VA = "0xBE9BC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xBE9CE8", Offset = "0xBE9CE8", VA = "0xBE9CE8")]
	private void LoadLocalizedText(string fileName)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xBE90BC", Offset = "0xBE90BC", VA = "0xBE90BC")]
	public void SetLocalization(Language language)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xBE79A8", Offset = "0xBE79A8", VA = "0xBE79A8")]
	public string GetLocalizedValue(string key)
	{
		return null;
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xBE9FBC", Offset = "0xBE9FBC", VA = "0xBE9FBC")]
	public bool GetIsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xBE9FC4", Offset = "0xBE9FC4", VA = "0xBE9FC4")]
	public LocalizationManager()
	{
	}
}
[Token(Token = "0x20001D8")]
public class LocalizedText : MonoBehaviour
{
	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int layer;

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xBEA118", Offset = "0xBEA118", VA = "0xBEA118")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xBEA51C", Offset = "0xBEA51C", VA = "0xBEA51C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xBEA2F8", Offset = "0xBEA2F8", VA = "0xBEA2F8")]
	private void OnLocalizationChanged()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xBD8A6C", Offset = "0xBD8A6C", VA = "0xBD8A6C")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xBEA5C4", Offset = "0xBEA5C4", VA = "0xBEA5C4")]
	public LocalizedText()
	{
	}
}
[Token(Token = "0x20001D9")]
public class MaskHeadshot : MonoBehaviour
{
	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xBEA5D4", Offset = "0xBEA5D4", VA = "0xBEA5D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xBDB958", Offset = "0xBDB958", VA = "0xBDB958")]
	public void activate(RaycastHit hit, Ray ray)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xBEA630", Offset = "0xBEA630", VA = "0xBEA630")]
	public MaskHeadshot()
	{
	}
}
[Token(Token = "0x20001DA")]
public class MipMapTest : MonoBehaviour
{
	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture[] textures;

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xBEA638", Offset = "0xBEA638", VA = "0xBEA638")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xBEA6A8", Offset = "0xBEA6A8", VA = "0xBEA6A8")]
	public MipMapTest()
	{
	}
}
[Token(Token = "0x20001DB")]
public class Newspaper : MonoBehaviour
{
	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform newspaperTransform;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xBEA6B0", Offset = "0xBEA6B0", VA = "0xBEA6B0")]
	public void Show()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xBEAC14", Offset = "0xBEAC14", VA = "0xBEAC14")]
	public void Hide()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xBEAC5C", Offset = "0xBEAC5C", VA = "0xBEAC5C")]
	public Newspaper()
	{
	}
}
[Token(Token = "0x20001DC")]
public class NoInterlude : MonoBehaviour
{
	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToHide;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int sceneId;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xBEAC64", Offset = "0xBEAC64", VA = "0xBEAC64")]
	public void Hide(int currentSceneId)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xBEACD4", Offset = "0xBEACD4", VA = "0xBEACD4")]
	public NoInterlude()
	{
	}
}
[Token(Token = "0x20001DD")]
[ExecuteInEditMode]
public class AudioSourceEditor : MonoBehaviour
{
	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool play;

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xBEACDC", Offset = "0xBEACDC", VA = "0xBEACDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xBEAD4C", Offset = "0xBEAD4C", VA = "0xBEAD4C")]
	public AudioSourceEditor()
	{
	}
}
[Token(Token = "0x20001DE")]
public class BrokenGlass : HitTarget
{
	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnGlassBroken;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool onlyPlayer;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject glassIntact;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject glassBroken;

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xBEAD54", Offset = "0xBEAD54", VA = "0xBEAD54", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xBEAE5C", Offset = "0xBEAE5C", VA = "0xBEAE5C")]
	public void breakGlass()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xBEAEFC", Offset = "0xBEAEFC", VA = "0xBEAEFC")]
	public BrokenGlass()
	{
	}
}
[Token(Token = "0x20001DF")]
public class ColumnBrokenGroup : HitTarget
{
	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject brokenTile;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject brokenGroup;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject tile;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool disable;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool android_enabled;

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xBEAF64", Offset = "0xBEAF64", VA = "0xBEAF64", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xBEB110", Offset = "0xBEB110", VA = "0xBEB110")]
	private void disableGroup()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xBEB13C", Offset = "0xBEB13C", VA = "0xBEB13C")]
	public ColumnBrokenGroup()
	{
	}
}
[Token(Token = "0x20001E0")]
public class Elevator : MonoBehaviour
{
	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip openDoorsClip;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform door1;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform door2;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform door3;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform door4;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform door1_openPosition;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform door2_openPosition;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform door3_openPosition;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform door4_openPosition;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 door1_closePosition;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 door2_closePosition;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 door3_closePosition;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 door4_closePosition;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TextMeshPro floorText;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool doorsOpen;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float speed;

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xBEB144", Offset = "0xBEB144", VA = "0xBEB144")]
	private void Start()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xBEB228", Offset = "0xBEB228", VA = "0xBEB228")]
	public void openDoors(bool animate = true)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xBEB3EC", Offset = "0xBEB3EC", VA = "0xBEB3EC")]
	public void closeDoors(bool animate = true)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xBEB574", Offset = "0xBEB574", VA = "0xBEB574")]
	public void setFloor(int floor)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xBEB5BC", Offset = "0xBEB5BC", VA = "0xBEB5BC")]
	public Elevator()
	{
	}
}
[Token(Token = "0x20001E1")]
public class ElevatorScene : NextSceneData
{
	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Elevator elevator;

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xBEB5D0", Offset = "0xBEB5D0", VA = "0xBEB5D0", Slot = "4")]
	protected override void OnFirstFade()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xBEB5EC", Offset = "0xBEB5EC", VA = "0xBEB5EC", Slot = "6")]
	protected override void OnComplete()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xBEB62C", Offset = "0xBEB62C", VA = "0xBEB62C")]
	public ElevatorScene()
	{
	}
}
[Token(Token = "0x20001E2")]
public class EnemyWaves : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E3")]
	public class Wave
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PoliceThiefData[] enemies;

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xBEBED8", Offset = "0xBEBED8", VA = "0xBEBED8")]
		public Wave()
		{
		}
	}

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Wave[] waves;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startDelay;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float wavesDelay;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SceneData sceneData;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentWave;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int enemyDeads;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentEnemy;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xBEB634", Offset = "0xBEB634", VA = "0xBEB634")]
	public string getCurrentEnemyName(GameObject enemy)
	{
		return null;
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xBEB830", Offset = "0xBEB830", VA = "0xBEB830")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xBEB92C", Offset = "0xBEB92C", VA = "0xBEB92C")]
	private void OnSceneInitialised(int sceneId)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xBEB9A4", Offset = "0xBEB9A4", VA = "0xBEB9A4")]
	private void StartWaves()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xBEBDFC", Offset = "0xBEBDFC", VA = "0xBEBDFC")]
	private void OnEnemyDead()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xBEBED0", Offset = "0xBEBED0", VA = "0xBEBED0")]
	public EnemyWaves()
	{
	}
}
[Token(Token = "0x20001E4")]
public class Extinguisher : HitTarget
{
	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject model;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fx;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xBEBEE0", Offset = "0xBEBEE0", VA = "0xBEBEE0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xBEBFA8", Offset = "0xBEBFA8", VA = "0xBEBFA8")]
	public Extinguisher()
	{
	}
}
[Token(Token = "0x20001E5")]
public class Office_Bomb : HitTarget
{
	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Office_Bombs bombsController;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool exploded;

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xBEBFB0", Offset = "0xBEBFB0", VA = "0xBEBFB0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xBEC06C", Offset = "0xBEC06C", VA = "0xBEC06C")]
	public void explode()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xBEC198", Offset = "0xBEC198", VA = "0xBEC198")]
	public Office_Bomb()
	{
	}
}
[Token(Token = "0x20001E6")]
public class Office_Bombs : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	[CompilerGenerated]
	private sealed class <explodeBombsCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool gameOver;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Office_Bombs <>4__this;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Office_Bomb[] <>7__wrap1;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap2;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600081D")]
			[Address(RVA = "0xBEC5A0", Offset = "0xBEC5A0", VA = "0xBEC5A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600081F")]
			[Address(RVA = "0xBEC5E8", Offset = "0xBEC5E8", VA = "0xBEC5E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xBEC318", Offset = "0xBEC318", VA = "0xBEC318")]
		[DebuggerHidden]
		public <explodeBombsCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xBEC348", Offset = "0xBEC348", VA = "0xBEC348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xBEC34C", Offset = "0xBEC34C", VA = "0xBEC34C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xBEC5A8", Offset = "0xBEC5A8", VA = "0xBEC5A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parentCharacters;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bombsParent;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Office_Room room;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xBEC1A0", Offset = "0xBEC1A0", VA = "0xBEC1A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xBEC1A4", Offset = "0xBEC1A4", VA = "0xBEC1A4")]
	public void explodePresident()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xBEC174", Offset = "0xBEC174", VA = "0xBEC174")]
	public void explodeBombs(bool gameOver)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xBEC29C", Offset = "0xBEC29C", VA = "0xBEC29C")]
	[IteratorStateMachine(typeof(<explodeBombsCoroutine>d__6))]
	private IEnumerator explodeBombsCoroutine(bool gameOver)
	{
		return null;
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xBEC340", Offset = "0xBEC340", VA = "0xBEC340")]
	public Office_Bombs()
	{
	}
}
[Token(Token = "0x20001E8")]
public class Office_BulletTimeNextScene : NextSceneData
{
	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animation helicopter;

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xBEC5F0", Offset = "0xBEC5F0", VA = "0xBEC5F0", Slot = "4")]
	protected override void OnFirstFade()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xBEC71C", Offset = "0xBEC71C", VA = "0xBEC71C", Slot = "5")]
	protected override float getFadeTime(int fadeIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xBEC734", Offset = "0xBEC734", VA = "0xBEC734", Slot = "6")]
	protected override void OnComplete()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xBEC784", Offset = "0xBEC784", VA = "0xBEC784")]
	public Office_BulletTimeNextScene()
	{
	}
}
[Token(Token = "0x20001E9")]
public class Office_BulletTimeSceneAction : SceneAction
{
	[Token(Token = "0x20001EA")]
	[CompilerGenerated]
	private sealed class <FinishCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Office_BulletTimeSceneAction <>4__this;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600082F")]
			[Address(RVA = "0xBED290", Offset = "0xBED290", VA = "0xBED290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000831")]
			[Address(RVA = "0xBED2D8", Offset = "0xBED2D8", VA = "0xBED2D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xBECFF8", Offset = "0xBECFF8", VA = "0xBECFF8")]
		[DebuggerHidden]
		public <FinishCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xBED028", Offset = "0xBED028", VA = "0xBED028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xBED02C", Offset = "0xBED02C", VA = "0xBED02C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xBED298", Offset = "0xBED298", VA = "0xBED298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ThiefPoliceController smith;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation helicopter;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool bulletTime;

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xBEC78C", Offset = "0xBEC78C", VA = "0xBEC78C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xBEC8F4", Offset = "0xBEC8F4", VA = "0xBEC8F4", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xBECB0C", Offset = "0xBECB0C", VA = "0xBECB0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xBECC08", Offset = "0xBECC08", VA = "0xBECC08")]
	private void BulletTime()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xBECF58", Offset = "0xBECF58", VA = "0xBECF58")]
	private void startnext()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xBECF70", Offset = "0xBECF70", VA = "0xBECF70")]
	private void Finish()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xBECF90", Offset = "0xBECF90", VA = "0xBECF90")]
	[IteratorStateMachine(typeof(<FinishCoroutine>d__9))]
	private IEnumerator FinishCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xBED020", Offset = "0xBED020", VA = "0xBED020")]
	public Office_BulletTimeSceneAction()
	{
	}
}
[Token(Token = "0x20001EB")]
[ExecuteInEditMode]
public class Office_Chair : HitTarget
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool right;

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xBED2E0", Offset = "0xBED2E0", VA = "0xBED2E0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xBED404", Offset = "0xBED404", VA = "0xBED404")]
	public Office_Chair()
	{
	}
}
[Token(Token = "0x20001EC")]
public class Office_HallScene : SceneData
{
	[Token(Token = "0x6000834")]
	[Address(RVA = "0xBED40C", Offset = "0xBED40C", VA = "0xBED40C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xBED410", Offset = "0xBED410", VA = "0xBED410")]
	private void Update()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xBED414", Offset = "0xBED414", VA = "0xBED414")]
	public Office_HallScene()
	{
	}
}
[Token(Token = "0x20001ED")]
public class Office_HallSceneAction : SceneAction
{
	[Token(Token = "0x20001EE")]
	[CompilerGenerated]
	private sealed class <Play>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Office_HallSceneAction <>4__this;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600083F")]
			[Address(RVA = "0xBED89C", Offset = "0xBED89C", VA = "0xBED89C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000841")]
			[Address(RVA = "0xBED8E4", Offset = "0xBED8E4", VA = "0xBED8E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xBED6F4", Offset = "0xBED6F4", VA = "0xBED6F4")]
		[DebuggerHidden]
		public <Play>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xBED724", Offset = "0xBED724", VA = "0xBED724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xBED728", Offset = "0xBED728", VA = "0xBED728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xBED8A4", Offset = "0xBED8A4", VA = "0xBED8A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Elevator[] elevators;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ThiefPoliceController[] enemies;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ThiefPoliceController immortalTeammate;

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xBED46C", Offset = "0xBED46C", VA = "0xBED46C", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xBED5F0", Offset = "0xBED5F0", VA = "0xBED5F0")]
	private void OnSceneDeactivate(int sceneId)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xBED69C", Offset = "0xBED69C", VA = "0xBED69C")]
	private void communication()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xBED588", Offset = "0xBED588", VA = "0xBED588")]
	[IteratorStateMachine(typeof(<Play>d__6))]
	private IEnumerator Play()
	{
		return null;
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xBED71C", Offset = "0xBED71C", VA = "0xBED71C")]
	public Office_HallSceneAction()
	{
	}
}
[Token(Token = "0x20001EF")]
public class Office_Helicopter : MonoBehaviour
{
	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HeliRotorController mainRotor;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HeliRotorController backRotor;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BezierSolution.BezierSpline path;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityAction onPathComplete;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion initRotation;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion targetRotation;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool lookRotation;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tween pathTween;

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xBED8EC", Offset = "0xBED8EC", VA = "0xBED8EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xBED8F8", Offset = "0xBED8F8", VA = "0xBED8F8")]
	public void Move(Transform initTransform, Transform targetTransform, BezierSolution.BezierSpline path, UnityAction onPathComplete, float speed = 1f)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xBED9DC", Offset = "0xBED9DC", VA = "0xBED9DC")]
	public void Move(BezierSolution.BezierSpline path, UnityAction onPathComplete, float speed = 1f)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xBEDDE8", Offset = "0xBEDDE8", VA = "0xBEDDE8")]
	public void CompleteCurrentPath()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xBEDE1C", Offset = "0xBEDE1C", VA = "0xBEDE1C")]
	private void OnPathComplete()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xBEDE58", Offset = "0xBEDE58", VA = "0xBEDE58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xBEDE5C", Offset = "0xBEDE5C", VA = "0xBEDE5C")]
	private void UpdatePath()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xBEDF24", Offset = "0xBEDF24", VA = "0xBEDF24")]
	public Office_Helicopter()
	{
	}
}
[Token(Token = "0x20001F0")]
public class Office_HelicopterSceneAction : SceneData
{
	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Tromp tromp;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public EnemySpawnerController spawner1;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EnemySpawnerController spawner2;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Office_Helicopter helicopter;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BezierSolution.BezierSpline helicopterPathRoofTop;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BezierSolution.BezierSpline helicopterPathBuilding;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform roof;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform building;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform officeCharactersParent;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform helicopterFinalPose;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Office_Room[] rooms;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Office_Room kidnapRoom;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<Transform> roomPositions;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform playerTransform;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int scenePhase;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool roofTopPathComplete;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	private bool buildingPathComplete;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xBEDF34", Offset = "0xBEDF34", VA = "0xBEDF34", Slot = "4")]
	public override void initialise()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xBEE184", Offset = "0xBEE184", VA = "0xBEE184")]
	public void moveHelicopter(int iMovement)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xBEE26C", Offset = "0xBEE26C", VA = "0xBEE26C")]
	public void moveHelicopterImpl(int iMovement)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xBEE5B4", Offset = "0xBEE5B4", VA = "0xBEE5B4", Slot = "5")]
	public override void activate()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xBEE990", Offset = "0xBEE990", VA = "0xBEE990", Slot = "7")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xBEEA00", Offset = "0xBEEA00", VA = "0xBEEA00", Slot = "8")]
	protected override void OnThiefDead()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xBEEAA8", Offset = "0xBEEAA8", VA = "0xBEEAA8")]
	public void CheckIfStartNextScenePhase()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xBEEBE0", Offset = "0xBEEBE0", VA = "0xBEEBE0")]
	public void startNextScenePhaseRemote(int iPhase)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xBEEAF8", Offset = "0xBEEAF8", VA = "0xBEEAF8")]
	public void NextScenePhase(int iPhase)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xBEEBE4", Offset = "0xBEEBE4", VA = "0xBEEBE4")]
	public void NextScenePhaseImpl(int iPhase)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xBEF098", Offset = "0xBEF098", VA = "0xBEF098")]
	private void OnRoofTopPathComplete()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xBEEDC0", Offset = "0xBEEDC0", VA = "0xBEEDC0")]
	private void StartBuilding()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xBEF104", Offset = "0xBEF104", VA = "0xBEF104")]
	private void initOfficeCharacters()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xBEF27C", Offset = "0xBEF27C", VA = "0xBEF27C")]
	private void hideRoofTop()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xBEF2A8", Offset = "0xBEF2A8", VA = "0xBEF2A8")]
	private void showBuilding()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xBEF2D4", Offset = "0xBEF2D4", VA = "0xBEF2D4")]
	private void OnBuildingPathComplete()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xBEE48C", Offset = "0xBEE48C", VA = "0xBEE48C")]
	private void PlayJumpAnimation()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xBEDFA4", Offset = "0xBEDFA4", VA = "0xBEDFA4")]
	private void RandomRooms()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xBEF2F4", Offset = "0xBEF2F4", VA = "0xBEF2F4")]
	private void setRoom(Office_Room room, Transform roomPosition)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xBEF618", Offset = "0xBEF618", VA = "0xBEF618")]
	public void enableAllGlasses()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xBEF7BC", Offset = "0xBEF7BC", VA = "0xBEF7BC", Slot = "9")]
	public override void onlinePlayerBecomesMainClient()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xBEF7C0", Offset = "0xBEF7C0", VA = "0xBEF7C0")]
	public Office_HelicopterSceneAction()
	{
	}
}
[Token(Token = "0x20001F2")]
public class Office_ObjectAnimation : HitTarget
{
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject model;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animation anim;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NVRCollisionSoundMaterials hitSound;

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xBEFCB0", Offset = "0xBEFCB0", VA = "0xBEFCB0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xBEFD6C", Offset = "0xBEFD6C", VA = "0xBEFD6C")]
	public Office_ObjectAnimation()
	{
	}
}
[Token(Token = "0x20001F3")]
public class Office_OfficeScene : SceneAction
{
	[Token(Token = "0x20001F4")]
	[CompilerGenerated]
	private sealed class <ElevatorPlay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Office_OfficeScene <>4__this;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <floor>5__2;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000870")]
			[Address(RVA = "0xBF01DC", Offset = "0xBF01DC", VA = "0xBF01DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000872")]
			[Address(RVA = "0xBF0224", Offset = "0xBF0224", VA = "0xBF0224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xBEFECC", Offset = "0xBEFECC", VA = "0xBEFECC")]
		[DebuggerHidden]
		public <ElevatorPlay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xBF0034", Offset = "0xBF0034", VA = "0xBF0034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xBF0038", Offset = "0xBF0038", VA = "0xBF0038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xBF01E4", Offset = "0xBF01E4", VA = "0xBF01E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F5")]
	[CompilerGenerated]
	private sealed class <turnOffMusic>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Office_OfficeScene <>4__this;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0xBF02C0", Offset = "0xBF02C0", VA = "0xBF02C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0xBF0308", Offset = "0xBF0308", VA = "0xBF0308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xBF0004", Offset = "0xBF0004", VA = "0xBF0004")]
		[DebuggerHidden]
		public <turnOffMusic>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xBF022C", Offset = "0xBF022C", VA = "0xBF022C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xBF0230", Offset = "0xBF0230", VA = "0xBF0230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xBF02C8", Offset = "0xBF02C8", VA = "0xBF02C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Elevator elevator;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xBEFD74", Offset = "0xBEFD74", VA = "0xBEFD74", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xBEFE64", Offset = "0xBEFE64", VA = "0xBEFE64")]
	[IteratorStateMachine(typeof(<ElevatorPlay>d__3))]
	private IEnumerator ElevatorPlay()
	{
		return null;
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xBEFEF4", Offset = "0xBEFEF4", VA = "0xBEFEF4")]
	private void OnSceneDeactivate(int sceneId)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xBEFF9C", Offset = "0xBEFF9C", VA = "0xBEFF9C")]
	[IteratorStateMachine(typeof(<turnOffMusic>d__5))]
	private IEnumerator turnOffMusic()
	{
		return null;
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xBF002C", Offset = "0xBF002C", VA = "0xBF002C")]
	public Office_OfficeScene()
	{
	}
}
[Token(Token = "0x20001F6")]
public class Office_Room : MonoBehaviour
{
	[Token(Token = "0x20001F7")]
	[CompilerGenerated]
	private sealed class <startCharacters>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Office_Room <>4__this;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private System.Random <random>5__2;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000883")]
			[Address(RVA = "0xBF0678", Offset = "0xBF0678", VA = "0xBF0678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0xBF06C0", Offset = "0xBF06C0", VA = "0xBF06C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xBF0390", Offset = "0xBF0390", VA = "0xBF0390")]
		[DebuggerHidden]
		public <startCharacters>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xBF0420", Offset = "0xBF0420", VA = "0xBF0420", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xBF0424", Offset = "0xBF0424", VA = "0xBF0424", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xBF0680", Offset = "0xBF0680", VA = "0xBF0680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Office_HelicopterSceneAction helicopterScene;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PoliceThiefData[] enemies;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BrokenGlass[] brokenGlasses;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform characters;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool enableGlass;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isActive;

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xBEF438", Offset = "0xBEF438", VA = "0xBEF438")]
	public void init(Office_HelicopterSceneAction helicopterScene, BrokenGlass[] brokenGlasses)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xBEF0A4", Offset = "0xBEF0A4", VA = "0xBEF0A4")]
	public void activate()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xBF0378", Offset = "0xBF0378", VA = "0xBF0378")]
	public void EnableAllGlasses()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xBEF680", Offset = "0xBEF680", VA = "0xBEF680")]
	public void EnableGlasses()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xBF0310", Offset = "0xBF0310", VA = "0xBF0310")]
	[IteratorStateMachine(typeof(<startCharacters>d__10))]
	private IEnumerator startCharacters()
	{
		return null;
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xBF03B8", Offset = "0xBF03B8", VA = "0xBF03B8")]
	public void breakGlasses()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xBF0418", Offset = "0xBF0418", VA = "0xBF0418")]
	public Office_Room()
	{
	}
}
[Token(Token = "0x20001F8")]
public class Office_StairsNextScene : NextSceneData
{
	[Token(Token = "0x6000886")]
	[Address(RVA = "0xBF06C8", Offset = "0xBF06C8", VA = "0xBF06C8", Slot = "4")]
	protected override void OnFirstFade()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xBF06CC", Offset = "0xBF06CC", VA = "0xBF06CC", Slot = "6")]
	protected override void OnComplete()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xBF06FC", Offset = "0xBF06FC", VA = "0xBF06FC")]
	public Office_StairsNextScene()
	{
	}
}
[Token(Token = "0x20001F9")]
public class Office_StairsSceneAction : SceneAction
{
	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animation swatFallingAnimation;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource swatFallingAS;

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xBF0704", Offset = "0xBF0704", VA = "0xBF0704", Slot = "4")]
	public override void executeAction()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xBF0754", Offset = "0xBF0754", VA = "0xBF0754")]
	public Office_StairsSceneAction()
	{
	}
}
[Token(Token = "0x20001FA")]
public class Tromp : CommonCharacterController
{
	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public ThiefPoliceController trompAssasin;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Office_Bombs bombs;

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xBF075C", Offset = "0xBF075C", VA = "0xBF075C", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xBF077C", Offset = "0xBF077C", VA = "0xBF077C", Slot = "6")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xBEF93C", Offset = "0xBEF93C", VA = "0xBEF93C")]
	public void Jump()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xBF07F0", Offset = "0xBF07F0", VA = "0xBF07F0")]
	public void TrompAssasin()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xBF0AA4", Offset = "0xBF0AA4", VA = "0xBF0AA4")]
	public void ExplodeBarrels()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xBF0AD4", Offset = "0xBF0AD4", VA = "0xBF0AD4")]
	public void FinishGame()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xBF0C80", Offset = "0xBF0C80", VA = "0xBF0C80", Slot = "11")]
	public override void EnemyHit(Rigidbody _rigidbodyHit, Vector3 _hitVector, float _bulletHitForce)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xBF0D3C", Offset = "0xBF0D3C", VA = "0xBF0D3C")]
	public Tromp()
	{
	}
}
[Token(Token = "0x20001FB")]
public class PS4NetworkUtils : MonoBehaviour
{
	[Token(Token = "0x6000893")]
	[Address(RVA = "0xBF0D94", Offset = "0xBF0D94", VA = "0xBF0D94")]
	public PS4NetworkUtils()
	{
	}
}
[Token(Token = "0x20001FC")]
public class BodyHeadFollower : MonoBehaviour
{
	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform head;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Tweener tweener;

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xBF0D9C", Offset = "0xBF0D9C", VA = "0xBF0D9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xBF0DA0", Offset = "0xBF0DA0", VA = "0xBF0DA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xBF0F38", Offset = "0xBF0F38", VA = "0xBF0F38")]
	public BodyHeadFollower()
	{
	}
}
[Token(Token = "0x20001FD")]
public class NetworkBulletController : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NetworkBulletController Instance;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_iCurrentBulletId;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool sendBullets;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Bullet> m_hmRemoteBullets;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xBF0F40", Offset = "0xBF0F40", VA = "0xBF0F40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xBF1018", Offset = "0xBF1018", VA = "0xBF1018")]
	private void Start()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xBF10C0", Offset = "0xBF10C0", VA = "0xBF10C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xBF10C4", Offset = "0xBF10C4", VA = "0xBF10C4")]
	public string createBulletId()
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xBF11A8", Offset = "0xBF11A8", VA = "0xBF11A8")]
	public void sendCreateBullet(string bulletId, string owner, string parent, Vector3 position, Quaternion rotation, Vector3 finalPosition, bool isRemotePlayer, int bulletsCount)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xBF14CC", Offset = "0xBF14CC", VA = "0xBF14CC")]
	[PunRPC]
	private void CreateBullet(string bulletId, string owner, string parent, Vector3 position, Quaternion rotation, Vector3 finalPosition, bool isRemotePlayer, int bulletsCount)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xBF1934", Offset = "0xBF1934", VA = "0xBF1934")]
	internal void sendMiniGunStartFire()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xBF1A58", Offset = "0xBF1A58", VA = "0xBF1A58")]
	[PunRPC]
	private void MiniGunStartFire(string owner)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xBF1B78", Offset = "0xBF1B78", VA = "0xBF1B78")]
	internal void sendMiniGunStopFire()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xBF1C90", Offset = "0xBF1C90", VA = "0xBF1C90")]
	[PunRPC]
	private void MiniGunStopFire(string owner)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xBEECB4", Offset = "0xBEECB4", VA = "0xBEECB4")]
	public void sendStartNextScenePhase(int iPhase)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xBF1DB0", Offset = "0xBF1DB0", VA = "0xBF1DB0")]
	[PunRPC]
	public void StartNextScenePhase(int iPhase)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xBEE380", Offset = "0xBEE380", VA = "0xBEE380")]
	public void sendMoveHelipter(int iMovement)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xBF1E3C", Offset = "0xBF1E3C", VA = "0xBF1E3C")]
	[PunRPC]
	public void MoveHelicopter(int iMovement)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xBF1EC8", Offset = "0xBF1EC8", VA = "0xBF1EC8")]
	public Bullet getRemoteBullet(string bulletId)
	{
		return null;
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xBF1F60", Offset = "0xBF1F60", VA = "0xBF1F60")]
	public void sendBulletTime(float time)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xBF2074", Offset = "0xBF2074", VA = "0xBF2074")]
	[PunRPC]
	private void BulletTime(float time)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xBF20D4", Offset = "0xBF20D4", VA = "0xBF20D4")]
	public void sendOnHitSceneButton(string buttonName)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xBF2208", Offset = "0xBF2208", VA = "0xBF2208")]
	[PunRPC]
	private void OnHitSceneButton(string buttonName)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xBF23CC", Offset = "0xBF23CC", VA = "0xBF23CC")]
	public void sendChangeMission(int missionSelected)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xBF2548", Offset = "0xBF2548", VA = "0xBF2548")]
	[PunRPC]
	public void ChangeMission(int missionSelected)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xBF266C", Offset = "0xBF266C", VA = "0xBF266C")]
	public void sendOnHitMenuButton(string buttonName, int expectedOnlinePlayers)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xBF27A4", Offset = "0xBF27A4", VA = "0xBF27A4")]
	[PunRPC]
	private void OnHitMenuButton(string buttonName, int expectedOnlinePlayers)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xBF29BC", Offset = "0xBF29BC", VA = "0xBF29BC")]
	public void sendDrawLine(Vector3 initPosition, Vector3 endPosition)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xBF2BE8", Offset = "0xBF2BE8", VA = "0xBF2BE8")]
	[PunRPC]
	private void DrawLine(Vector3 initPosition, Vector3 endPosition)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xBF2EF4", Offset = "0xBF2EF4", VA = "0xBF2EF4")]
	public void sendExplodeBombs()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xBF3000", Offset = "0xBF3000", VA = "0xBF3000")]
	[PunRPC]
	private void ExplodeBombs()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xBF30AC", Offset = "0xBF30AC", VA = "0xBF30AC")]
	public void sendRPGHelicopterDown(Vector3 playerPosition)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xBF31D4", Offset = "0xBF31D4", VA = "0xBF31D4")]
	[PunRPC]
	private void RPGHelicopterDown(Vector3 playerPosition)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xBF32C8", Offset = "0xBF32C8", VA = "0xBF32C8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xBF32CC", Offset = "0xBF32CC", VA = "0xBF32CC")]
	public void sendReloadManualWeapon(string strOwner)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xBF33A4", Offset = "0xBF33A4", VA = "0xBF33A4")]
	[PunRPC]
	private void ReloadManualWeapon(string strOwner)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xBF34BC", Offset = "0xBF34BC", VA = "0xBF34BC")]
	public void sendStartSceneForDebug(int iScene)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xBF35C8", Offset = "0xBF35C8", VA = "0xBF35C8")]
	[PunRPC]
	private void StartSceneForDebug(int iScene)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xBF3624", Offset = "0xBF3624", VA = "0xBF3624")]
	public void sendTest()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xBF36EC", Offset = "0xBF36EC", VA = "0xBF36EC")]
	[PunRPC]
	private void Test()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xBF3754", Offset = "0xBF3754", VA = "0xBF3754")]
	public NetworkBulletController()
	{
	}
}
[Token(Token = "0x20001FE")]
public class NetworkWeaponTakeableController : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NetworkWeaponTakeableController Instance;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_iCurrentWeaponTakeableId;

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xBF37D8", Offset = "0xBF37D8", VA = "0xBF37D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xBF3824", Offset = "0xBF3824", VA = "0xBF3824")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xBF38CC", Offset = "0xBF38CC", VA = "0xBF38CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xBF38D0", Offset = "0xBF38D0", VA = "0xBF38D0")]
	public string createWeaponTakeableId()
	{
		return null;
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xBF39B4", Offset = "0xBF39B4", VA = "0xBF39B4")]
	public void sendShowWeaponTakeable(WeaponTakeable wt, string owner, int currentBullets = -1)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xBF3E5C", Offset = "0xBF3E5C", VA = "0xBF3E5C")]
	[PunRPC]
	private void ShowWeaponTakeable(string id, WeaponTakeable.BonusType bonusType, WeaponModel weaponModel, string owner, Vector3 position, int currentBullets)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xBF4288", Offset = "0xBF4288", VA = "0xBF4288")]
	public void sendHideWeaponTakeable(WeaponTakeable wt, string player, bool exclusive = false)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xBF4404", Offset = "0xBF4404", VA = "0xBF4404")]
	[PunRPC]
	private void HideWeaponTakeable(string id, string player, bool exclusive)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xBF4790", Offset = "0xBF4790", VA = "0xBF4790", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xBF4794", Offset = "0xBF4794", VA = "0xBF4794")]
	public NetworkWeaponTakeableController()
	{
	}
}
[Token(Token = "0x20001FF")]
public class OnlineSceneModifier : MonoBehaviour
{
	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] swat1DisabledItems;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] swat1EnabledItems;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] swat2DisabledItems;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] swat2EnabledItems;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SceneData sceneData;

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xBF479C", Offset = "0xBF479C", VA = "0xBF479C")]
	public void ModifyScene()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xBF48D0", Offset = "0xBF48D0", VA = "0xBF48D0")]
	private void disableBots(GameObject[] data)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xBF4AD8", Offset = "0xBF4AD8", VA = "0xBF4AD8")]
	private void enableBots(GameObject[] data)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xBF4C60", Offset = "0xBF4C60", VA = "0xBF4C60")]
	public OnlineSceneModifier()
	{
	}
}
[Token(Token = "0x2000200")]
public abstract class AbstractPlayerID
{
	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xBF4C68", Offset = "0xBF4C68", VA = "0xBF4C68", Slot = "4")]
	public virtual string getPlayerName()
	{
		return null;
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xBF4C70", Offset = "0xBF4C70", VA = "0xBF4C70", Slot = "5")]
	public virtual string getPlayerID()
	{
		return null;
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xBF4C78", Offset = "0xBF4C78", VA = "0xBF4C78", Slot = "6")]
	public virtual bool isReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xBF4C80", Offset = "0xBF4C80", VA = "0xBF4C80")]
	protected AbstractPlayerID()
	{
	}
}
[Token(Token = "0x2000201")]
public class PlayerIDDummy : AbstractPlayerID
{
	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xBF4C88", Offset = "0xBF4C88", VA = "0xBF4C88", Slot = "4")]
	public override string getPlayerName()
	{
		return null;
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xBF4E7C", Offset = "0xBF4E7C", VA = "0xBF4E7C", Slot = "5")]
	public override string getPlayerID()
	{
		return null;
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xBF4EBC", Offset = "0xBF4EBC", VA = "0xBF4EBC")]
	public PlayerIDDummy()
	{
	}
}
[Token(Token = "0x2000202")]
public class PlayerIDFactory
{
	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AbstractPlayerID playerID;

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xBF4EC4", Offset = "0xBF4EC4", VA = "0xBF4EC4")]
	public string getPlayerID()
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xBF4FF0", Offset = "0xBF4FF0", VA = "0xBF4FF0")]
	public PlayerIDFactory()
	{
	}
}
[Token(Token = "0x2000203")]
public class PlayerIDPS4 : AbstractPlayerID
{
	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xBF4FF8", Offset = "0xBF4FF8", VA = "0xBF4FF8")]
	public PlayerIDPS4()
	{
	}
}
[Token(Token = "0x2000204")]
public class PlayerIDSteam : AbstractPlayerID
{
	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xBF5000", Offset = "0xBF5000", VA = "0xBF5000")]
	public PlayerIDSteam()
	{
	}
}
[Token(Token = "0x2000205")]
public class RemoteHandController : MonoBehaviour
{
	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand Hand;

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xBF5008", Offset = "0xBF5008", VA = "0xBF5008")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xBF5134", Offset = "0xBF5134", VA = "0xBF5134")]
	public void checkStartingWeapon()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xBF5440", Offset = "0xBF5440", VA = "0xBF5440")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xBF5174", Offset = "0xBF5174", VA = "0xBF5174")]
	private void BeginInteraction(NVRInteractable interactable)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xBF5444", Offset = "0xBF5444", VA = "0xBF5444")]
	private void EndInteraction(NVRInteractable interactable)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xBF5538", Offset = "0xBF5538", VA = "0xBF5538")]
	public RemoteHandController()
	{
	}
}
[Token(Token = "0x2000206")]
public class TestLauncer : MonoBehaviour
{
	[Token(Token = "0x2000209")]
	[CompilerGenerated]
	private sealed class <CheckPlayerReady>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestLauncer <>4__this;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0xBF64EC", Offset = "0xBF64EC", VA = "0xBF64EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0xBF6534", Offset = "0xBF6534", VA = "0xBF6534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xBF5F48", Offset = "0xBF5F48", VA = "0xBF5F48")]
		[DebuggerHidden]
		public <CheckPlayerReady>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xBF63AC", Offset = "0xBF63AC", VA = "0xBF63AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xBF63B0", Offset = "0xBF63B0", VA = "0xBF63B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xBF64F4", Offset = "0xBF64F4", VA = "0xBF64F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int connected;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro log;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool nickNameSet;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SumalabInvoke.SumalabInvokeHandler handler;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xBF5540", Offset = "0xBF5540", VA = "0xBF5540")]
	private void cancel(object test, string str)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xBF55A8", Offset = "0xBF55A8", VA = "0xBF55A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xBF5A34", Offset = "0xBF5A34", VA = "0xBF5A34")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xBF5EE0", Offset = "0xBF5EE0", VA = "0xBF5EE0")]
	[IteratorStateMachine(typeof(<CheckPlayerReady>d__7))]
	private IEnumerator CheckPlayerReady()
	{
		return null;
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xBF5F70", Offset = "0xBF5F70", VA = "0xBF5F70")]
	private void OnGameConnected()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xBF5FB8", Offset = "0xBF5FB8", VA = "0xBF5FB8")]
	private void OnGameJoined()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xBF60B0", Offset = "0xBF60B0", VA = "0xBF60B0")]
	private void OnGameDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xBF60F8", Offset = "0xBF60F8", VA = "0xBF60F8")]
	private void launchBankScene()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xBF5E5C", Offset = "0xBF5E5C", VA = "0xBF5E5C")]
	private void Log(string str)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xBF61A0", Offset = "0xBF61A0", VA = "0xBF61A0")]
	private void Test(string str)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xBF61F8", Offset = "0xBF61F8", VA = "0xBF61F8")]
	public TestLauncer()
	{
	}
}
[Token(Token = "0x200020A")]
public class TestInvoke
{
	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xBF6220", Offset = "0xBF6220", VA = "0xBF6220")]
	public void test(string str)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xBF5A2C", Offset = "0xBF5A2C", VA = "0xBF5A2C")]
	public TestInvoke()
	{
	}
}
[Token(Token = "0x200020B")]
public class OnlineChangeNickNamePanel : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x200020C")]
	[CompilerGenerated]
	private struct <CheckSensitiveWord>d__10 : IAsyncStateMachine
	{
		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string str;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnlineChangeNickNamePanel <>4__this;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<PicoUtility.ResponseData> <>u__1;

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xBF6B98", Offset = "0xBF6B98", VA = "0xBF6B98", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xBF6E98", Offset = "0xBF6E98", VA = "0xBF6E98", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyboardScreen screen;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Keyboard keyboard;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton OkButton;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro errorInfo;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string nickname;

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xBF653C", Offset = "0xBF653C", VA = "0xBF653C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xBF66F8", Offset = "0xBF66F8", VA = "0xBF66F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xBF67A8", Offset = "0xBF67A8", VA = "0xBF67A8")]
	private void OnKeyboardOk()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xBF67AC", Offset = "0xBF67AC", VA = "0xBF67AC")]
	private void OnButtonOk(UIButton button)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xBF6A90", Offset = "0xBF6A90", VA = "0xBF6A90")]
	[AsyncStateMachine(typeof(<CheckSensitiveWord>d__10))]
	private void CheckSensitiveWord(string str)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xBF6868", Offset = "0xBF6868", VA = "0xBF6868")]
	private string GetNickNameLengthError()
	{
		return null;
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xBF6B2C", Offset = "0xBF6B2C", VA = "0xBF6B2C")]
	private void OnLocalizationChanged()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xBF6B90", Offset = "0xBF6B90", VA = "0xBF6B90")]
	public OnlineChangeNickNamePanel()
	{
	}
}
[Token(Token = "0x200020D")]
public class OnlineCreateJoinKeyPanel : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x200020E")]
	[CompilerGenerated]
	private struct <CheckSensitiveWord>d__10 : IAsyncStateMachine
	{
		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string str;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OnlineCreateJoinKeyPanel <>4__this;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<PicoUtility.ResponseData> <>u__1;

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xBF746C", Offset = "0xBF746C", VA = "0xBF746C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xBF776C", Offset = "0xBF776C", VA = "0xBF776C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyboardScreen screen;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Keyboard keyboard;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton OkButton;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro errorInfo;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string password;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xBF6EA4", Offset = "0xBF6EA4", VA = "0xBF6EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xBF7060", Offset = "0xBF7060", VA = "0xBF7060")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xBF7110", Offset = "0xBF7110", VA = "0xBF7110")]
	private void OnKeyboardOk()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xBF7114", Offset = "0xBF7114", VA = "0xBF7114")]
	private void OnButtonOk(UIButton button)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xBF7364", Offset = "0xBF7364", VA = "0xBF7364")]
	[AsyncStateMachine(typeof(<CheckSensitiveWord>d__10))]
	private void CheckSensitiveWord(string str)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xBF71D0", Offset = "0xBF71D0", VA = "0xBF71D0")]
	private string GetRoomNameLengthError()
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xBF7400", Offset = "0xBF7400", VA = "0xBF7400")]
	private void OnLocalizationChanged()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xBF7464", Offset = "0xBF7464", VA = "0xBF7464")]
	public OnlineCreateJoinKeyPanel()
	{
	}
}
[Token(Token = "0x200020F")]
public class OnlineGameManager : MonoBehaviour
{
	[Token(Token = "0x2000210")]
	[CompilerGenerated]
	private sealed class <waitForMyPlayer>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700009E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092E")]
			[Address(RVA = "0xBF97EC", Offset = "0xBF97EC", VA = "0xBF97EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000930")]
			[Address(RVA = "0xBF9834", Offset = "0xBF9834", VA = "0xBF9834", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xBF95FC", Offset = "0xBF95FC", VA = "0xBF95FC")]
		[DebuggerHidden]
		public <waitForMyPlayer>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xBF9630", Offset = "0xBF9630", VA = "0xBF9630", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xBF9634", Offset = "0xBF9634", VA = "0xBF9634", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xBF97F4", Offset = "0xBF97F4", VA = "0xBF97F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A4F")]
	public const string SENSITIVEWORD_ERROR = "online_sensitiveworderror";

	[Token(Token = "0x4000A50")]
	public const string LENGTH_ERROR = "online_lengtherror";

	[Token(Token = "0x4000A51")]
	private const string CONNECTING = "online_connecting";

	[Token(Token = "0x4000A52")]
	private const string ONLINE = "online";

	[Token(Token = "0x4000A53")]
	private const string JOIN_RANDOM_GAME = "online_joinrandom";

	[Token(Token = "0x4000A54")]
	private const string RANDOM_ROOM = "online_randomroom";

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton connectButton;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton disconnectButton;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton backToMainPanelButton;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform OnlineWindow;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnlineMainPanel mainPanel;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OnlineWaitingPlayersPanel waitingPlayersPanel;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OnlineCreateJoinKeyPanel createJoinKeyPanel;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnlineChangeNickNamePanel changeNickNamePanel;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform onlineNetworkErrorPanel;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform infoPanels;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro myName;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public string defaultNickName;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public string defaultJoinPassword;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OnlineGameManager Instance;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_bOnlineGameStarted;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MenuButton[] menuButtons;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SumalabInvoke.SumalabInvokeHandler invokeHandler;

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xBF7778", Offset = "0xBF7778", VA = "0xBF7778")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xBF77C4", Offset = "0xBF77C4", VA = "0xBF77C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xBF7A58", Offset = "0xBF7A58", VA = "0xBF7A58")]
	private void finishStart()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xBF8054", Offset = "0xBF8054", VA = "0xBF8054")]
	private void Update()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xBF8058", Offset = "0xBF8058", VA = "0xBF8058")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xBF7B88", Offset = "0xBF7B88", VA = "0xBF7B88")]
	public void startOnlineConnection(UIButton button)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xBF83BC", Offset = "0xBF83BC", VA = "0xBF83BC")]
	private void onGamePlayerEnteredRoom()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xBF83C0", Offset = "0xBF83C0", VA = "0xBF83C0")]
	private void sendChangeMission()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xBF8060", Offset = "0xBF8060", VA = "0xBF8060")]
	public void resetListening(bool bResetDisconnect = true)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xBF8528", Offset = "0xBF8528", VA = "0xBF8528")]
	public void stopOnlineConnection(UIButton button)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xBF85D0", Offset = "0xBF85D0", VA = "0xBF85D0")]
	public void joinRandomGame()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xBF86B0", Offset = "0xBF86B0", VA = "0xBF86B0")]
	public void showJoinPasswordGamePanel()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xBF89B8", Offset = "0xBF89B8", VA = "0xBF89B8")]
	public void showChangeNickNamePanel()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xBF8A74", Offset = "0xBF8A74", VA = "0xBF8A74")]
	private void showDisconnectError()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xBF8AB4", Offset = "0xBF8AB4", VA = "0xBF8AB4")]
	private void backToMainPanel(UIButton arg0)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xBF7278", Offset = "0xBF7278", VA = "0xBF7278")]
	public void joinGame(string password)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xBF6910", Offset = "0xBF6910", VA = "0xBF6910")]
	public void setNickName(string str)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xBF8F3C", Offset = "0xBF8F3C", VA = "0xBF8F3C")]
	private void onGameConnected()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xBF82C8", Offset = "0xBF82C8", VA = "0xBF82C8")]
	private void checkCanPlayRoutine()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xBF8FCC", Offset = "0xBF8FCC", VA = "0xBF8FCC")]
	private void checkCanPlay()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xBF90F4", Offset = "0xBF90F4", VA = "0xBF90F4")]
	private void stopCheckCanPlay()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xBF8854", Offset = "0xBF8854", VA = "0xBF8854")]
	private void showInfoPanel(Transform panel)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xBF9214", Offset = "0xBF9214", VA = "0xBF9214")]
	private void onGameDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xBF9454", Offset = "0xBF9454", VA = "0xBF9454")]
	private void onGameJoinRoomError(string errorMessage)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xBF8AB8", Offset = "0xBF8AB8", VA = "0xBF8AB8")]
	private void showMainPanel()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xBF8278", Offset = "0xBF8278", VA = "0xBF8278")]
	private void showOnlineWindow()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xBF7974", Offset = "0xBF7974", VA = "0xBF7974")]
	private void hideOnlineWindow()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xBF949C", Offset = "0xBF949C", VA = "0xBF949C")]
	public void closeRoomForNewPlayers()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xBF9500", Offset = "0xBF9500", VA = "0xBF9500")]
	private void onGameJoinedRoom()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xBF9534", Offset = "0xBF9534", VA = "0xBF9534")]
	private void startGame()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xBF7EA4", Offset = "0xBF7EA4", VA = "0xBF7EA4")]
	private void waitingForPlayers(bool bBlock = false)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xBF959C", Offset = "0xBF959C", VA = "0xBF959C")]
	[IteratorStateMachine(typeof(<waitForMyPlayer>d__54))]
	private IEnumerator waitForMyPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xBF8E24", Offset = "0xBF8E24", VA = "0xBF8E24")]
	private void saveSettings()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xBF9624", Offset = "0xBF9624", VA = "0xBF9624")]
	public OnlineGameManager()
	{
	}
}
[Token(Token = "0x2000211")]
public class OnlineMainPanel : MonoBehaviour
{
	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIButton joinRandomGameButton;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIButton joinPasswordGameButton;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIButton changeNickNameButton;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xBF983C", Offset = "0xBF983C", VA = "0xBF983C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xBF99C8", Offset = "0xBF99C8", VA = "0xBF99C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xBF99CC", Offset = "0xBF99CC", VA = "0xBF99CC")]
	public void joinRandomGame(UIButton button)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xBF99E4", Offset = "0xBF99E4", VA = "0xBF99E4")]
	public void joinPasswordGame(UIButton button)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xBF99FC", Offset = "0xBF99FC", VA = "0xBF99FC")]
	public void changeNickName(UIButton button)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xBF9A14", Offset = "0xBF9A14", VA = "0xBF9A14")]
	public OnlineMainPanel()
	{
	}
}
[Token(Token = "0x2000212")]
public class OnlineWaitingPlayersPanel : MonoBehaviour
{
	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro titleText;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro infoText;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro playersText;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIButton playButton;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool block;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OnlineGameManager onlineGameManager;

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xBF9A1C", Offset = "0xBF9A1C", VA = "0xBF9A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xBF9AF8", Offset = "0xBF9AF8", VA = "0xBF9AF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xBF9AFC", Offset = "0xBF9AFC", VA = "0xBF9AFC")]
	private void Play(UIButton button)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xBF9B14", Offset = "0xBF9B14", VA = "0xBF9B14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xBF9BAC", Offset = "0xBF9BAC", VA = "0xBF9BAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xBF9C24", Offset = "0xBF9C24", VA = "0xBF9C24")]
	private void checkPlayers()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xBF9EF8", Offset = "0xBF9EF8", VA = "0xBF9EF8")]
	public OnlineWaitingPlayersPanel()
	{
	}
}
[Token(Token = "0x2000213")]
public class OOpaHeadMovement : MonoBehaviour
{
	[Token(Token = "0x600093E")]
	[Address(RVA = "0xBF9F00", Offset = "0xBF9F00", VA = "0xBF9F00")]
	private void Start()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xBF9FFC", Offset = "0xBF9FFC", VA = "0xBF9FFC")]
	public OOpaHeadMovement()
	{
	}
}
[Token(Token = "0x2000214")]
public class OutOfPlayArea : MonoBehaviour
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Collider, Shader> default_Materials;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject oopa_screen;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<Collider> m_colliders;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Collider> m_collidersDisabled;

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xBFA004", Offset = "0xBFA004", VA = "0xBFA004")]
	private void Start()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xBFA17C", Offset = "0xBFA17C", VA = "0xBFA17C")]
	private void OnRecenterEdit()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xBFA22C", Offset = "0xBFA22C", VA = "0xBFA22C")]
	private void OnSceneActivate(int sceneId)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xBFA234", Offset = "0xBFA234", VA = "0xBFA234")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xBFA684", Offset = "0xBFA684", VA = "0xBFA684")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xBFA89C", Offset = "0xBFA89C", VA = "0xBFA89C")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xBFA830", Offset = "0xBFA830", VA = "0xBFA830")]
	private void pauseGame()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xBFA620", Offset = "0xBFA620", VA = "0xBFA620")]
	private void resumeGame()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xBFA930", Offset = "0xBFA930", VA = "0xBFA930")]
	public void restoreShaders()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xBFA184", Offset = "0xBFA184", VA = "0xBFA184")]
	public void ResetColliders(bool unlockPlayer = true)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xBFAB70", Offset = "0xBFAB70", VA = "0xBFAB70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xBFA758", Offset = "0xBFA758", VA = "0xBFA758")]
	private bool gameStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xBFAB78", Offset = "0xBFAB78", VA = "0xBFAB78")]
	public OutOfPlayArea()
	{
	}
}
[Token(Token = "0x2000215")]
public class OverwriteAnimTransform : MonoBehaviour
{
	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string type;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform boneTransform;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform overwriteTransform;

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xBFAC7C", Offset = "0xBFAC7C", VA = "0xBFAC7C")]
	public OverwriteAnimTransform()
	{
	}
}
[Token(Token = "0x2000216")]
public class PathWaypoints : MonoBehaviour
{
	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Waypoint[] waypoints;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] wayPointsVector3;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float totalDistance;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xBFAC84", Offset = "0xBFAC84", VA = "0xBFAC84")]
	private void Start()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xBFAF24", Offset = "0xBFAF24", VA = "0xBFAF24")]
	public Waypoint[] getWaypoints()
	{
		return null;
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xBFAF2C", Offset = "0xBFAF2C", VA = "0xBFAF2C")]
	public Vector3[] getWaypointsVector3()
	{
		return null;
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xBFAF34", Offset = "0xBFAF34", VA = "0xBFAF34")]
	public float getTotalDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xBFAF3C", Offset = "0xBFAF3C", VA = "0xBFAF3C")]
	public PathWaypoints()
	{
	}
}
[Token(Token = "0x2000217")]
public class PlayerHit : AimTarget
{
	[Token(Token = "0x2000218")]
	[CompilerGenerated]
	private sealed class <playerHit>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHit <>4__this;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <color>5__2;

		[Token(Token = "0x170000A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0xBFC884", Offset = "0xBFC884", VA = "0xBFC884", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000970")]
			[Address(RVA = "0xBFC8CC", Offset = "0xBFC8CC", VA = "0xBFC8CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xBFBCCC", Offset = "0xBFBCCC", VA = "0xBFBCCC")]
		[DebuggerHidden]
		public <playerHit>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xBFC408", Offset = "0xBFC408", VA = "0xBFC408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xBFC40C", Offset = "0xBFC40C", VA = "0xBFC40C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xBFC88C", Offset = "0xBFC88C", VA = "0xBFC88C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000219")]
	[CompilerGenerated]
	private sealed class <UnsetBulletTimeCoroutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool bShowBulletTimeScreen;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerHit <>4__this;

		[Token(Token = "0x170000A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0xBFCA60", Offset = "0xBFCA60", VA = "0xBFCA60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0xBFCAA8", Offset = "0xBFCAA8", VA = "0xBFCAA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xBFC158", Offset = "0xBFC158", VA = "0xBFC158")]
		[DebuggerHidden]
		public <UnsetBulletTimeCoroutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xBFC8D4", Offset = "0xBFC8D4", VA = "0xBFC8D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xBFC8D8", Offset = "0xBFC8D8", VA = "0xBFC8D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xBFCA68", Offset = "0xBFCA68", VA = "0xBFCA68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021A")]
	[CompilerGenerated]
	private sealed class <bulletTimeCoroutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHit <>4__this;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool bShowBulletTimeScreen;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float bulletTime;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600097A")]
			[Address(RVA = "0xBFCD58", Offset = "0xBFCD58", VA = "0xBFCD58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0xBFCDA0", Offset = "0xBFCDA0", VA = "0xBFCDA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xBFC180", Offset = "0xBFC180", VA = "0xBFC180")]
		[DebuggerHidden]
		public <bulletTimeCoroutine>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xBFCAB0", Offset = "0xBFCAB0", VA = "0xBFCAB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xBFCAB4", Offset = "0xBFCAB4", VA = "0xBFCAB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xBFCD60", Offset = "0xBFCD60", VA = "0xBFCD60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A7C")]
	private const float DAMAGE_SCREEN_FADE_TIME = 0.5f;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public UnityEvent onLifesUpdated;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SumalabEvent<Bullet, Ray, RaycastHit> OnPlayerHit;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SumalabEvent OnPlayerDead;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SumalabEvent OnIncreaseLife;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SumalabEvent<Vector3> OnExplosion;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SumalabEvent<Vector3> OnExplosionWave;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Line deadLine;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject damageScreen;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject bulletTimeScreen;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Renderer damageScreenRenderer;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Renderer bulletTimeScreenRenderer;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool playerHitActive;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int shotFailed;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int shotFailedHitTarget;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int lifes;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int rocketsCount;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coroutine bulletTimeCoroutineHandle;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool inmortal;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool bulletTimeLocked;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<AudioSource> audioSourcesTimeScaled;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AudioSource hit;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AudioSource breathHit;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource breathDie;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Collider[] playerColliders;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool m_bUnvulnerable;

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xBFAF44", Offset = "0xBFAF44", VA = "0xBFAF44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xBFB040", Offset = "0xBFB040", VA = "0xBFB040")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xBFB28C", Offset = "0xBFB28C", VA = "0xBFB28C")]
	private void OnSceneInitialized(int sceneId)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xBFB52C", Offset = "0xBFB52C", VA = "0xBFB52C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xBFB8C0", Offset = "0xBFB8C0", VA = "0xBFB8C0", Slot = "7")]
	public override void OnBulletConsumed(Bullet bullet)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xBEFA8C", Offset = "0xBEFA8C", VA = "0xBEFA8C")]
	public void killPlayer(bool hit = true, WalkieTalkie.CommunicationEvent gameOverCommunication = WalkieTalkie.CommunicationEvent.game_over)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xBFB858", Offset = "0xBFB858", VA = "0xBFB858")]
	[IteratorStateMachine(typeof(<playerHit>d__32))]
	private IEnumerator playerHit()
	{
		return null;
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xBFBCF4", Offset = "0xBFBCF4", VA = "0xBFBCF4")]
	public void hideDamageScreen()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xBFBD98", Offset = "0xBFBD98", VA = "0xBFBD98")]
	public void setUnvulnerable(bool bValue)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xBFBDA4", Offset = "0xBFBDA4", VA = "0xBFBDA4")]
	public bool isUnvulnerable()
	{
		return default(bool);
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xBFBDAC", Offset = "0xBFBDAC", VA = "0xBFBDAC")]
	public void CancelBulletTime()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xBFBE00", Offset = "0xBFBE00", VA = "0xBFBE00")]
	public void CancellBulletTimeImpl()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xBFBC6C", Offset = "0xBFBC6C", VA = "0xBFBC6C")]
	public void bulletTime(float fBulletTime, bool bShowBulletTimeScreen = false)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xBF08C4", Offset = "0xBF08C4", VA = "0xBF08C4")]
	public void SetBulletTime(bool bShowBulletTimeScreen = false)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xBF0BD8", Offset = "0xBF0BD8", VA = "0xBF0BD8")]
	public void UnsetBulletTime(bool bShowBulletTimeScreen = false)
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xBFC0DC", Offset = "0xBFC0DC", VA = "0xBFC0DC")]
	[IteratorStateMachine(typeof(<UnsetBulletTimeCoroutine>d__41))]
	private IEnumerator UnsetBulletTimeCoroutine(bool bShowBulletTimeScreen)
	{
		return null;
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xBFC050", Offset = "0xBFC050", VA = "0xBFC050")]
	[IteratorStateMachine(typeof(<bulletTimeCoroutine>d__42))]
	private IEnumerator bulletTimeCoroutine(float bulletTime, bool bShowBulletTimeScreen)
	{
		return null;
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xBFBEF4", Offset = "0xBFBEF4", VA = "0xBFBEF4")]
	private void setAudioSourcesPitch(float pitch)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xBFC1A8", Offset = "0xBFC1A8", VA = "0xBFC1A8")]
	private void removeHitIndicatorCorroutine()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xBFBA74", Offset = "0xBFBA74", VA = "0xBFBA74")]
	public void setLifes(int lifes)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xBFC21C", Offset = "0xBFC21C", VA = "0xBFC21C")]
	public void increaseLife()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xBFC248", Offset = "0xBFC248", VA = "0xBFC248")]
	public void decreaseLife()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xBFC254", Offset = "0xBFC254", VA = "0xBFC254")]
	public int getLifes()
	{
		return default(int);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xBFC25C", Offset = "0xBFC25C", VA = "0xBFC25C")]
	public PlayerHit()
	{
	}
}
[Token(Token = "0x200021B")]
public class PlayerViewerTest : MonoBehaviour
{
	[Token(Token = "0x600097D")]
	[Address(RVA = "0xBFCDA8", Offset = "0xBFCDA8", VA = "0xBFCDA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xBFCDAC", Offset = "0xBFCDAC", VA = "0xBFCDAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xBFCDB0", Offset = "0xBFCDB0", VA = "0xBFCDB0")]
	public PlayerViewerTest()
	{
	}
}
[Token(Token = "0x200021C")]
public class PruebaMesh : MonoBehaviour
{
	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject originRoot;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetRoot;

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xBFCDB8", Offset = "0xBFCDB8", VA = "0xBFCDB8")]
	public PruebaMesh()
	{
	}
}
[Token(Token = "0x200021D")]
public class RayCastHitDecalTest : MonoBehaviour
{
	[Token(Token = "0x6000981")]
	[Address(RVA = "0xBFCDC0", Offset = "0xBFCDC0", VA = "0xBFCDC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xBFCDC4", Offset = "0xBFCDC4", VA = "0xBFCDC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xBFCEF4", Offset = "0xBFCEF4", VA = "0xBFCEF4")]
	public RayCastHitDecalTest()
	{
	}
}
[Token(Token = "0x200021E")]
public class ReadySetGo : MonoBehaviour
{
	[Token(Token = "0x4000AA5")]
	private const string TAKECOVER = "takecover";

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip takeCoverSpa;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xBFCEFC", Offset = "0xBFCEFC", VA = "0xBFCEFC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xBFD0A4", Offset = "0xBFD0A4", VA = "0xBFD0A4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xBFD0C8", Offset = "0xBFD0C8", VA = "0xBFD0C8")]
	public ReadySetGo()
	{
	}
}
[Token(Token = "0x200021F")]
public class ReadySetGoItem : MonoBehaviour
{
	[Token(Token = "0x6000987")]
	[Address(RVA = "0xBFD0D0", Offset = "0xBFD0D0", VA = "0xBFD0D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xBFD0D4", Offset = "0xBFD0D4", VA = "0xBFD0D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xBFD0D8", Offset = "0xBFD0D8", VA = "0xBFD0D8")]
	public ReadySetGoItem()
	{
	}
}
[Token(Token = "0x2000220")]
public interface RemoteCharacterController
{
	[Token(Token = "0x600098A")]
	void OnHit(Bullet bullet, Ray ray, Rigidbody rb);

	[Token(Token = "0x600098B")]
	void ExecuteAction(int currentAction);

	[Token(Token = "0x600098C")]
	void sendCover(bool v);

	[Token(Token = "0x600098D")]
	void sendSetTarget(Vector3 v);

	[Token(Token = "0x600098E")]
	void sendShowWeaponTakeable(WeaponTakeable weaponTakeable, string name);

	[Token(Token = "0x600098F")]
	void sendPlayPath();
}
[Token(Token = "0x2000221")]
public class ResetTransform : MonoBehaviour
{
	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 initPosition;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion initRotation;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initialise;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xBFD0E0", Offset = "0xBFD0E0", VA = "0xBFD0E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xBFD138", Offset = "0xBFD138", VA = "0xBFD138")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xBFD198", Offset = "0xBFD198", VA = "0xBFD198")]
	public ResetTransform()
	{
	}
}
[Token(Token = "0x2000222")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedModifier;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotationAxis;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float currentSpeed;

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xBFD1A0", Offset = "0xBFD1A0", VA = "0xBFD1A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xBFD264", Offset = "0xBFD264", VA = "0xBFD264")]
	public Rotator()
	{
	}
}
[Token(Token = "0x2000223")]
public class CharacterAction : MonoBehaviour
{
	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CommonCharacterController character;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnActionComplete;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool removeOnComplete;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeToComplete;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeToCompleteRandomEnd;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string idleAnimation;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool applyRootMotionToIdleAnimation;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool aimableDuringAction;

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xBFD26C", Offset = "0xBFD26C", VA = "0xBFD26C")]
	public void setCharacter(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xBFD274", Offset = "0xBFD274", VA = "0xBFD274", Slot = "4")]
	public virtual void activate()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xBFD2D8", Offset = "0xBFD2D8", VA = "0xBFD2D8")]
	private void activateDelay()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xBFD404", Offset = "0xBFD404", VA = "0xBFD404")]
	private void endAction()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xBFD434", Offset = "0xBFD434", VA = "0xBFD434", Slot = "5")]
	public virtual void deactivate()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xBFD4E8", Offset = "0xBFD4E8", VA = "0xBFD4E8", Slot = "6")]
	public virtual void OnTarget()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xBFD4EC", Offset = "0xBFD4EC", VA = "0xBFD4EC", Slot = "7")]
	public virtual void OnHit()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xBFD4F0", Offset = "0xBFD4F0", VA = "0xBFD4F0")]
	public CharacterAction()
	{
	}
}
[Token(Token = "0x2000224")]
public class CharacterActionFire : CharacterAction
{
	[Token(Token = "0x2000225")]
	[CompilerGenerated]
	private sealed class <shoot>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0xBFEAE0", Offset = "0xBFEAE0", VA = "0xBFEAE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0xBFEB28", Offset = "0xBFEB28", VA = "0xBFEB28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xBFDDA4", Offset = "0xBFDDA4", VA = "0xBFDDA4")]
		[DebuggerHidden]
		public <shoot>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xBFE89C", Offset = "0xBFE89C", VA = "0xBFE89C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xBFE8A0", Offset = "0xBFE8A0", VA = "0xBFE8A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xBFEAE8", Offset = "0xBFEAE8", VA = "0xBFEAE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000226")]
	[CompilerGenerated]
	private sealed class <cover>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <weaponReloadTime>5__2;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0xBFED18", Offset = "0xBFED18", VA = "0xBFED18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0xBFED60", Offset = "0xBFED60", VA = "0xBFED60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xBFDDDC", Offset = "0xBFDDDC", VA = "0xBFDDDC")]
		[DebuggerHidden]
		public <cover>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xBFEB30", Offset = "0xBFEB30", VA = "0xBFEB30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xBFEB34", Offset = "0xBFEB34", VA = "0xBFEB34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xBFED20", Offset = "0xBFED20", VA = "0xBFED20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000227")]
	[CompilerGenerated]
	private sealed class <setFireAnimation>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0xBFF220", Offset = "0xBFF220", VA = "0xBFF220", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0xBFF268", Offset = "0xBFF268", VA = "0xBFF268", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xBFDE6C", Offset = "0xBFDE6C", VA = "0xBFDE6C")]
		[DebuggerHidden]
		public <setFireAnimation>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xBFED68", Offset = "0xBFED68", VA = "0xBFED68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xBFED6C", Offset = "0xBFED6C", VA = "0xBFED6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xBFF228", Offset = "0xBFF228", VA = "0xBFF228", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000228")]
	[CompilerGenerated]
	private sealed class <setCoverAnimationCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0xBFF6D4", Offset = "0xBFF6D4", VA = "0xBFF6D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C5")]
			[Address(RVA = "0xBFF71C", Offset = "0xBFF71C", VA = "0xBFF71C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xBFDEFC", Offset = "0xBFDEFC", VA = "0xBFDEFC")]
		[DebuggerHidden]
		public <setCoverAnimationCoroutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xBFF270", Offset = "0xBFF270", VA = "0xBFF270", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xBFF274", Offset = "0xBFF274", VA = "0xBFF274", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xBFF6DC", Offset = "0xBFF6DC", VA = "0xBFF6DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000229")]
	[CompilerGenerated]
	private sealed class <doEndCoroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0xBFF820", Offset = "0xBFF820", VA = "0xBFF820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0xBFF868", Offset = "0xBFF868", VA = "0xBFF868", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xBFE69C", Offset = "0xBFE69C", VA = "0xBFE69C")]
		[DebuggerHidden]
		public <doEndCoroutine>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xBFF724", Offset = "0xBFF724", VA = "0xBFF724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xBFF728", Offset = "0xBFF728", VA = "0xBFF728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xBFF828", Offset = "0xBFF828", VA = "0xBFF828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022A")]
	[CompilerGenerated]
	private sealed class <forceCoverCoroutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterActionFire <>4__this;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0xBFF944", Offset = "0xBFF944", VA = "0xBFF944", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0xBFF98C", Offset = "0xBFF98C", VA = "0xBFF98C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xBFE80C", Offset = "0xBFE80C", VA = "0xBFE80C")]
		[DebuggerHidden]
		public <forceCoverCoroutine>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xBFF870", Offset = "0xBFF870", VA = "0xBFF870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xBFF874", Offset = "0xBFF874", VA = "0xBFF874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xBFF94C", Offset = "0xBFF94C", VA = "0xBFF94C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ACCURACY_BROKEN_DISTANCE;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minAccuracy;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float targetChangeProbability;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float MIN_COVER_TIME;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float MAX_COVER_TIME;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float SET_TARGET_DELAY;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<AimTarget> targets;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CoverAnimation coverAnimation;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string fireAnimation;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string hideAnimation;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float coverTime;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float currentAccuracy;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int currentTarget;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 lastEnemyAimTargetPosition;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform enemyAimTarget;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WeaponData weaponData;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool fire;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool hasTargets;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool isCover;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	private bool forceCover;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool bEnd;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float startDelay;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool forceActive;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public bool coverDisabled;

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xBFD550", Offset = "0xBFD550", VA = "0xBFD550", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xBFD640", Offset = "0xBFD640", VA = "0xBFD640", Slot = "4")]
	public override void activate()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xBFD6B4", Offset = "0xBFD6B4", VA = "0xBFD6B4")]
	private void _activate()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xBFDCD4", Offset = "0xBFDCD4", VA = "0xBFDCD4")]
	[IteratorStateMachine(typeof(<shoot>d__27))]
	private IEnumerator shoot()
	{
		return null;
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xBFDDCC", Offset = "0xBFDDCC", VA = "0xBFDDCC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xBFDD3C", Offset = "0xBFDD3C", VA = "0xBFDD3C")]
	[IteratorStateMachine(typeof(<cover>d__29))]
	private IEnumerator cover()
	{
		return null;
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xBFDE04", Offset = "0xBFDE04", VA = "0xBFDE04")]
	[IteratorStateMachine(typeof(<setFireAnimation>d__30))]
	private IEnumerator setFireAnimation()
	{
		return null;
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xBFDE94", Offset = "0xBFDE94", VA = "0xBFDE94")]
	[IteratorStateMachine(typeof(<setCoverAnimationCoroutine>d__31))]
	private IEnumerator setCoverAnimationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xBFDF24", Offset = "0xBFDF24", VA = "0xBFDF24")]
	private bool findAimableTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xBFDFE8", Offset = "0xBFDFE8", VA = "0xBFDFE8")]
	private float setTarget()
	{
		return default(float);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xBFD95C", Offset = "0xBFD95C", VA = "0xBFD95C")]
	private void updateAimTargets()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xBFE614", Offset = "0xBFE614", VA = "0xBFE614")]
	private void doEnd()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xBFE634", Offset = "0xBFE634", VA = "0xBFE634")]
	[IteratorStateMachine(typeof(<doEndCoroutine>d__36))]
	private IEnumerator doEndCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xBFE6C4", Offset = "0xBFE6C4", VA = "0xBFE6C4", Slot = "6")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xBFE7A4", Offset = "0xBFE7A4", VA = "0xBFE7A4")]
	[IteratorStateMachine(typeof(<forceCoverCoroutine>d__38))]
	private IEnumerator forceCoverCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xBFE834", Offset = "0xBFE834", VA = "0xBFE834")]
	public CharacterActionFire()
	{
	}
}
[Token(Token = "0x200022B")]
public enum CoverAnimation
{
	[Token(Token = "0x4000AE2")]
	Crouch,
	[Token(Token = "0x4000AE3")]
	LowCrouch,
	[Token(Token = "0x4000AE4")]
	ColumnLeft,
	[Token(Token = "0x4000AE5")]
	ColumnRight,
	[Token(Token = "0x4000AE6")]
	PeekRight,
	[Token(Token = "0x4000AE7")]
	PeekLeft,
	[Token(Token = "0x4000AE8")]
	None
}
[Token(Token = "0x200022C")]
public class CharacterActionGoTo : CharacterAction
{
	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float RUN_SPEED;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float STRAFE_SPEED;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public MoveAnimation moveAnimation;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ThiefPoliceController moveOnDeadCharacter;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float duration;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool active;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool debugAutoActivate;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float startDelay;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool forceActive;

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xBFF994", Offset = "0xBFF994", VA = "0xBFF994")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xBFF9AC", Offset = "0xBFF9AC", VA = "0xBFF9AC", Slot = "4")]
	public override void activate()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xBFFA20", Offset = "0xBFFA20", VA = "0xBFFA20")]
	private void _activate()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xBFFC00", Offset = "0xBFFC00", VA = "0xBFFC00", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xBFFC30", Offset = "0xBFFC30", VA = "0xBFFC30")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xBFFB54", Offset = "0xBFFB54", VA = "0xBFFB54")]
	private void startAction()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xBFFDFC", Offset = "0xBFFDFC", VA = "0xBFFDFC")]
	private void startActionImpl()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xC001F8", Offset = "0xC001F8", VA = "0xC001F8")]
	private void OnPathComplete()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xC0012C", Offset = "0xC0012C", VA = "0xC0012C")]
	private void setDuration(DOTweenPath pathData)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xC0034C", Offset = "0xC0034C", VA = "0xC0034C")]
	public float getDuration()
	{
		return default(float);
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xC003A8", Offset = "0xC003A8", VA = "0xC003A8")]
	public CharacterActionGoTo()
	{
	}
}
[Token(Token = "0x200022D")]
public enum MoveAnimation
{
	[Token(Token = "0x4000AF4")]
	Run,
	[Token(Token = "0x4000AF5")]
	Strafe
}
[Token(Token = "0x200022E")]
[RequireComponent(typeof(CharacterActionNew))]
public class CharacterActionModule : MonoBehaviour
{
	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public UnityEvent OnComplete;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected CommonCharacterController character;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool active;

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xC003FC", Offset = "0xC003FC", VA = "0xC003FC", Slot = "4")]
	public virtual void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xC0040C", Offset = "0xC0040C", VA = "0xC0040C", Slot = "5")]
	public virtual void Deactivate()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xC00458", Offset = "0xC00458", VA = "0xC00458", Slot = "6")]
	protected virtual void Complete()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xC0048C", Offset = "0xC0048C", VA = "0xC0048C", Slot = "7")]
	public virtual void OnTarget()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xC00490", Offset = "0xC00490", VA = "0xC00490")]
	public bool isActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xC00498", Offset = "0xC00498", VA = "0xC00498", Slot = "8")]
	public virtual void reloadModule()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xC0049C", Offset = "0xC0049C", VA = "0xC0049C")]
	public CharacterActionModule()
	{
	}
}
[Token(Token = "0x200022F")]
public class CharacterActionNew : MonoBehaviour
{
	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public UnityEvent OnComplete;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CommonCharacterController character;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharacterActionModule characterActionModule;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CommonCharacterController[] startActionOnDead;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool removeOnComplete;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool aimableDuringAction;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool characterActiveBeforeStartAction;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float startDelay;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float timeToComplete;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float timeToCompleteRandomEnd;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool actionActive;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float characterDeads;

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xC004A4", Offset = "0xC004A4", VA = "0xC004A4")]
	public void Execute()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xC00850", Offset = "0xC00850", VA = "0xC00850")]
	public void Stop()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xC009C4", Offset = "0xC009C4", VA = "0xC009C4")]
	private void Complete()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xC00AEC", Offset = "0xC00AEC", VA = "0xC00AEC")]
	public void OnTarget()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xC00B78", Offset = "0xC00B78", VA = "0xC00B78")]
	public bool isActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xC00B80", Offset = "0xC00B80", VA = "0xC00B80")]
	private void OnCharacterDead()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xC007E8", Offset = "0xC007E8", VA = "0xC007E8")]
	private void startAction()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xC00BC0", Offset = "0xC00BC0", VA = "0xC00BC0")]
	private void startActionDelay()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xC00DB4", Offset = "0xC00DB4", VA = "0xC00DB4")]
	public void reloadAction()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xC00F64", Offset = "0xC00F64", VA = "0xC00F64")]
	private void TimeReached()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xC010B4", Offset = "0xC010B4", VA = "0xC010B4")]
	public CharacterActionNew()
	{
	}
}
[Token(Token = "0x2000230")]
public class CharacterActionTakeHostage : CharacterAction
{
	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HostageController victim;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<OverwriteAnimTransform> takeHostageTransforms;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<OverwriteAnimTransform> fireTransforms;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isTakingHostage;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool active;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool killingHostage;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WeaponData weaponData;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xC010CC", Offset = "0xC010CC", VA = "0xC010CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xC01214", Offset = "0xC01214", VA = "0xC01214", Slot = "4")]
	public override void activate()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xC01684", Offset = "0xC01684", VA = "0xC01684", Slot = "5")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xC012FC", Offset = "0xC012FC", VA = "0xC012FC")]
	private void takeHostage(bool enable)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xC01774", Offset = "0xC01774", VA = "0xC01774", Slot = "6")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xC01828", Offset = "0xC01828", VA = "0xC01828")]
	private void killHostage()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xC01984", Offset = "0xC01984", VA = "0xC01984")]
	public CharacterActionTakeHostage()
	{
	}
}
[Token(Token = "0x2000231")]
public class CharacterHelicopterWaypoint : CharacterWaypoint
{
	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Office_Helicopter helicopter;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xC01A20", Offset = "0xC01A20", VA = "0xC01A20", Slot = "4")]
	public override MoveModule.MoveMode getMoveMode(CommonCharacterController character)
	{
		return default(MoveModule.MoveMode);
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xC01A90", Offset = "0xC01A90", VA = "0xC01A90")]
	public CharacterHelicopterWaypoint()
	{
	}
}
[Token(Token = "0x2000232")]
public class CharacterWaypoint : MonoBehaviour
{
	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stopFire;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool overrideMoveMode;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MoveModule.MoveMode moveMode;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minStopTime;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxStopTime;

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xC01AA0", Offset = "0xC01AA0", VA = "0xC01AA0", Slot = "4")]
	public virtual MoveModule.MoveMode getMoveMode(CommonCharacterController character)
	{
		return default(MoveModule.MoveMode);
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xC01A98", Offset = "0xC01A98", VA = "0xC01A98")]
	public CharacterWaypoint()
	{
	}
}
[Token(Token = "0x2000233")]
public class FireModule : CharacterActionModule
{
	[Token(Token = "0x2000234")]
	public enum CoverAnimation
	{
		[Token(Token = "0x4000B2A")]
		Crouch,
		[Token(Token = "0x4000B2B")]
		LowCrouch,
		[Token(Token = "0x4000B2C")]
		ColumnFireL,
		[Token(Token = "0x4000B2D")]
		ColumnFireR
	}

	[Token(Token = "0x2000235")]
	[CompilerGenerated]
	private sealed class <startFireModulueCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0xC04880", Offset = "0xC04880", VA = "0xC04880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0xC048C8", Offset = "0xC048C8", VA = "0xC048C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xC04730", Offset = "0xC04730", VA = "0xC04730")]
		[DebuggerHidden]
		public <startFireModulueCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xC04758", Offset = "0xC04758", VA = "0xC04758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xC0475C", Offset = "0xC0475C", VA = "0xC0475C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xC04888", Offset = "0xC04888", VA = "0xC04888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000236")]
	[CompilerGenerated]
	private sealed class <shootAlways>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0xC04B20", Offset = "0xC04B20", VA = "0xC04B20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0xC04B68", Offset = "0xC04B68", VA = "0xC04B68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xC048D0", Offset = "0xC048D0", VA = "0xC048D0")]
		[DebuggerHidden]
		public <shootAlways>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xC048F8", Offset = "0xC048F8", VA = "0xC048F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xC048FC", Offset = "0xC048FC", VA = "0xC048FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xC04B28", Offset = "0xC04B28", VA = "0xC04B28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000237")]
	[CompilerGenerated]
	private sealed class <shoot>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0xC04D44", Offset = "0xC04D44", VA = "0xC04D44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0xC04D8C", Offset = "0xC04D8C", VA = "0xC04D8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xC04B70", Offset = "0xC04B70", VA = "0xC04B70")]
		[DebuggerHidden]
		public <shoot>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xC04B98", Offset = "0xC04B98", VA = "0xC04B98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xC04B9C", Offset = "0xC04B9C", VA = "0xC04B9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xC04D4C", Offset = "0xC04D4C", VA = "0xC04D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000238")]
	[CompilerGenerated]
	private sealed class <cover>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <weaponReloadTime>5__2;

		[Token(Token = "0x170000B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0xC04F64", Offset = "0xC04F64", VA = "0xC04F64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0xC04FAC", Offset = "0xC04FAC", VA = "0xC04FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xC04D94", Offset = "0xC04D94", VA = "0xC04D94")]
		[DebuggerHidden]
		public <cover>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xC04DBC", Offset = "0xC04DBC", VA = "0xC04DBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xC04DC0", Offset = "0xC04DC0", VA = "0xC04DC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xC04F6C", Offset = "0xC04F6C", VA = "0xC04F6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000239")]
	[CompilerGenerated]
	private sealed class <setFireAnimation>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0xC051D4", Offset = "0xC051D4", VA = "0xC051D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0xC0521C", Offset = "0xC0521C", VA = "0xC0521C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xC04FB4", Offset = "0xC04FB4", VA = "0xC04FB4")]
		[DebuggerHidden]
		public <setFireAnimation>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xC04FDC", Offset = "0xC04FDC", VA = "0xC04FDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xC04FE0", Offset = "0xC04FE0", VA = "0xC04FE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xC051DC", Offset = "0xC051DC", VA = "0xC051DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023A")]
	[CompilerGenerated]
	private sealed class <setCoverAnimation>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireModule <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0xC053D4", Offset = "0xC053D4", VA = "0xC053D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0xC0541C", Offset = "0xC0541C", VA = "0xC0541C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xC05224", Offset = "0xC05224", VA = "0xC05224")]
		[DebuggerHidden]
		public <setCoverAnimation>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xC0524C", Offset = "0xC0524C", VA = "0xC0524C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xC05250", Offset = "0xC05250", VA = "0xC05250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xC053DC", Offset = "0xC053DC", VA = "0xC053DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B12")]
	private const float ACCURACY_BROKEN_DISTANCE = 0.5f;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minAccuracy;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float targetChangeProbability;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minCoverTime;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxCoverTime;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool fireOnStart;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool alwaysShooting;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool ignoreTime;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AimTarget> targets;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CoverAnimation coverAnimation;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float coverRotation;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool completeTargets;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ThiefPoliceController thiefPolice;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastEnemyAimTargetPosition;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform enemyAimTarget;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WeaponData weaponData;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentCoverTime;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float currentAccuracy;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int currentTarget;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool readyToFire;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool isCover;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	private bool forceCover;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int coverAnimationHash;

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xC01AA8", Offset = "0xC01AA8", VA = "0xC01AA8", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xC01CB8", Offset = "0xC01CB8", VA = "0xC01CB8")]
	[IteratorStateMachine(typeof(<startFireModulueCoroutine>d__25))]
	private IEnumerator startFireModulueCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xC01D20", Offset = "0xC01D20", VA = "0xC01D20")]
	private void startFireModule()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xC0230C", Offset = "0xC0230C", VA = "0xC0230C")]
	private void startFiring()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xC02AE8", Offset = "0xC02AE8", VA = "0xC02AE8", Slot = "6")]
	protected override void Complete()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xC02B80", Offset = "0xC02B80", VA = "0xC02B80", Slot = "5")]
	public override void Deactivate()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xC02C18", Offset = "0xC02C18", VA = "0xC02C18", Slot = "7")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xC02CAC", Offset = "0xC02CAC", VA = "0xC02CAC")]
	public void fire()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xC02DAC", Offset = "0xC02DAC", VA = "0xC02DAC")]
	public void stopFire()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xC029B0", Offset = "0xC029B0", VA = "0xC029B0")]
	[IteratorStateMachine(typeof(<shootAlways>d__33))]
	private IEnumerator shootAlways()
	{
		return null;
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xC02A18", Offset = "0xC02A18", VA = "0xC02A18")]
	[IteratorStateMachine(typeof(<shoot>d__34))]
	private IEnumerator shoot()
	{
		return null;
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xC02E80", Offset = "0xC02E80", VA = "0xC02E80")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xC02A80", Offset = "0xC02A80", VA = "0xC02A80")]
	[IteratorStateMachine(typeof(<cover>d__36))]
	private IEnumerator cover()
	{
		return null;
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xC03080", Offset = "0xC03080", VA = "0xC03080")]
	public void startFireAnimation()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xC03108", Offset = "0xC03108", VA = "0xC03108")]
	public void startCoverAnimation()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xC030A0", Offset = "0xC030A0", VA = "0xC030A0")]
	[IteratorStateMachine(typeof(<setFireAnimation>d__39))]
	private IEnumerator setFireAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xC03128", Offset = "0xC03128", VA = "0xC03128")]
	[IteratorStateMachine(typeof(<setCoverAnimation>d__40))]
	private IEnumerator setCoverAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xC03190", Offset = "0xC03190", VA = "0xC03190")]
	public void setTarget(Vector3 target)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xC031CC", Offset = "0xC031CC", VA = "0xC031CC")]
	private bool selectRandomTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xC0256C", Offset = "0xC0256C", VA = "0xC0256C")]
	private float setTarget()
	{
		return default(float);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xC01E8C", Offset = "0xC01E8C", VA = "0xC01E8C")]
	private void updateAimTargets()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xC03478", Offset = "0xC03478", VA = "0xC03478")]
	public static void addTarget(AimTarget t, List<AimTarget> targets)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xC03548", Offset = "0xC03548", VA = "0xC03548", Slot = "8")]
	public override void reloadModule()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xC03700", Offset = "0xC03700", VA = "0xC03700")]
	public FireModule()
	{
	}
}
[Token(Token = "0x200023B")]
public class IdleModule : CharacterActionModule
{
	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool hideCharacter;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string anim;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xC05424", Offset = "0xC05424", VA = "0xC05424", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xC055E0", Offset = "0xC055E0", VA = "0xC055E0")]
	private void setAnim()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xC05684", Offset = "0xC05684", VA = "0xC05684")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xC05688", Offset = "0xC05688", VA = "0xC05688")]
	public IdleModule()
	{
	}
}
[Token(Token = "0x200023C")]
[RequireComponent(typeof(BezierSolution.BezierSpline))]
public class MoveModule : CharacterActionModule
{
	[Token(Token = "0x200023D")]
	public enum MoveMode
	{
		[Token(Token = "0x4000B53")]
		Crouch,
		[Token(Token = "0x4000B54")]
		Walk,
		[Token(Token = "0x4000B55")]
		Strafe,
		[Token(Token = "0x4000B56")]
		Run
	}

	[Token(Token = "0x200023E")]
	[CompilerGenerated]
	private sealed class <Move>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveModule <>4__this;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector3> waypoints;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0xC06774", Offset = "0xC06774", VA = "0xC06774", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0xC067BC", Offset = "0xC067BC", VA = "0xC067BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xC05A94", Offset = "0xC05A94", VA = "0xC05A94")]
		[DebuggerHidden]
		public <Move>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xC064C8", Offset = "0xC064C8", VA = "0xC064C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xC064CC", Offset = "0xC064CC", VA = "0xC064CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xC0677C", Offset = "0xC0677C", VA = "0xC0677C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B43")]
	private const float WALK_SPEED = 1.5f;

	[Token(Token = "0x4000B44")]
	private const float RUN_SPEED = 4.5f;

	[Token(Token = "0x4000B45")]
	private const float CROUCH_SPEED = 1f;

	[Token(Token = "0x4000B46")]
	private const float BASE_SPEED = 1f;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int loops;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float overrideSpeed;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public MoveMode moveMode;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected List<BezierPoint> bezierPoints;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Tween path;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float speed;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float animationSpeed;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float currentAnimationSpeed;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected bool complete;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FireModule fireModule;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int moveAnimationHash;

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xC05690", Offset = "0xC05690", VA = "0xC05690", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xC05A20", Offset = "0xC05A20", VA = "0xC05A20")]
	[IteratorStateMachine(typeof(<Move>d__17))]
	private IEnumerator Move(List<Vector3> waypoints)
	{
		return null;
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xC05ABC", Offset = "0xC05ABC", VA = "0xC05ABC", Slot = "9")]
	protected virtual void onWaypointChanged(int waypointIndex)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xC05D30", Offset = "0xC05D30", VA = "0xC05D30")]
	private void PausePath()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xC05D78", Offset = "0xC05D78", VA = "0xC05D78")]
	public void PlayPath()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xC05E48", Offset = "0xC05E48", VA = "0xC05E48", Slot = "5")]
	public override void Deactivate()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xC05F8C", Offset = "0xC05F8C", VA = "0xC05F8C", Slot = "6")]
	protected override void Complete()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xC06068", Offset = "0xC06068", VA = "0xC06068")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xC0626C", Offset = "0xC0626C", VA = "0xC0626C", Slot = "10")]
	protected virtual void setMoveMode(MoveMode moveMode)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xC063B8", Offset = "0xC063B8", VA = "0xC063B8", Slot = "8")]
	public override void reloadModule()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xC064AC", Offset = "0xC064AC", VA = "0xC064AC")]
	public MoveModule()
	{
	}
}
[Token(Token = "0x200023F")]
public class MoveOldModule : CharacterActionModule
{
	[Token(Token = "0x2000240")]
	[CompilerGenerated]
	private sealed class <Move>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveOldModule <>4__this;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DOTweenPath pathData;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0xC071F8", Offset = "0xC071F8", VA = "0xC071F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0xC07240", Offset = "0xC07240", VA = "0xC07240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xC06C3C", Offset = "0xC06C3C", VA = "0xC06C3C")]
		[DebuggerHidden]
		public <Move>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xC06F14", Offset = "0xC06F14", VA = "0xC06F14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xC06F18", Offset = "0xC06F18", VA = "0xC06F18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xC07200", Offset = "0xC07200", VA = "0xC07200", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float RUN_SPEED;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int moveAnimationHash;

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xC067C4", Offset = "0xC067C4", VA = "0xC067C4", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xC06BC8", Offset = "0xC06BC8", VA = "0xC06BC8")]
	[IteratorStateMachine(typeof(<Move>d__4))]
	private IEnumerator Move(DOTweenPath pathData)
	{
		return null;
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xC06C64", Offset = "0xC06C64", VA = "0xC06C64", Slot = "5")]
	public override void Deactivate()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xC06D2C", Offset = "0xC06D2C", VA = "0xC06D2C", Slot = "6")]
	protected override void Complete()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xC06DF4", Offset = "0xC06DF4", VA = "0xC06DF4")]
	private void OnPathComplete()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xC06EC0", Offset = "0xC06EC0", VA = "0xC06EC0")]
	public MoveOldModule()
	{
	}
}
[Token(Token = "0x2000241")]
[RequireComponent(typeof(BezierSolution.BezierSpline))]
public class MovePoliceStationModule : MoveModule
{
	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SkinnedMeshRenderer[] skins;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SkinnedMeshRenderer currentSkin;

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xC07248", Offset = "0xC07248", VA = "0xC07248", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xC07350", Offset = "0xC07350", VA = "0xC07350", Slot = "9")]
	protected override void onWaypointChanged(int waypointIndex)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xC07424", Offset = "0xC07424", VA = "0xC07424")]
	private void changeSkin()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xC074AC", Offset = "0xC074AC", VA = "0xC074AC")]
	public MovePoliceStationModule()
	{
	}
}
[Token(Token = "0x2000242")]
public class RPGModule : CharacterActionModule
{
	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ThiefPoliceController thiefPolice;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool readyToFire;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fireDelay;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform target;

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xC074BC", Offset = "0xC074BC", VA = "0xC074BC", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xC076B4", Offset = "0xC076B4", VA = "0xC076B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xC077AC", Offset = "0xC077AC", VA = "0xC077AC")]
	private void fire()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xC077DC", Offset = "0xC077DC", VA = "0xC077DC")]
	internal void setTarget(Vector3 target)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xC0789C", Offset = "0xC0789C", VA = "0xC0789C")]
	public RPGModule()
	{
	}
}
[Token(Token = "0x2000243")]
public class TakeHostageModule : CharacterActionModule
{
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HostageController victim;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ThiefPoliceController thiefPolice;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isTakingHostage;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool killingHostage;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xC078AC", Offset = "0xC078AC", VA = "0xC078AC", Slot = "4")]
	public override void Activate(CommonCharacterController character)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xC07BD4", Offset = "0xC07BD4", VA = "0xC07BD4", Slot = "6")]
	protected override void Complete()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xC07C38", Offset = "0xC07C38", VA = "0xC07C38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xC07974", Offset = "0xC07974", VA = "0xC07974")]
	private void takeHostage(bool enable)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xC07C78", Offset = "0xC07C78", VA = "0xC07C78", Slot = "7")]
	public override void OnTarget()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xC07CF4", Offset = "0xC07CF4", VA = "0xC07CF4")]
	private void killHostage()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xC07E54", Offset = "0xC07E54", VA = "0xC07E54")]
	public TakeHostageModule()
	{
	}
}
[Token(Token = "0x2000244")]
public class CharacterData : MonoBehaviour
{
	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CommonCharacterController character;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debug;

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xC07E5C", Offset = "0xC07E5C", VA = "0xC07E5C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xC07E98", Offset = "0xC07E98", VA = "0xC07E98", Slot = "4")]
	public virtual void setCharacterActions()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xC080A8", Offset = "0xC080A8", VA = "0xC080A8")]
	public CharacterData()
	{
	}
}
[Token(Token = "0x2000245")]
public class CharacterMeshSetter : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000246")]
	public class CharacterTemplate
	{
		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMeshRenderer[] skinnedMesh;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer[] meshRenderer;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer[] heads;

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xC088BC", Offset = "0xC088BC", VA = "0xC088BC")]
		public CharacterTemplate()
		{
		}
	}

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterTemplate[] templates;

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xC080B0", Offset = "0xC080B0", VA = "0xC080B0")]
	public void SetCharactersRandom()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xC085DC", Offset = "0xC085DC", VA = "0xC085DC")]
	private bool isParent(string name, Transform obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xC08690", Offset = "0xC08690", VA = "0xC08690")]
	public void test()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xC088B4", Offset = "0xC088B4", VA = "0xC088B4")]
	public CharacterMeshSetter()
	{
	}
}
[Token(Token = "0x2000247")]
public class EnemySpawner : MonoBehaviour
{
	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PoliceThiefData[] enemySpawn;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<PoliceThiefData> spawnsPool;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startDelay;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float spawnDelay;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxSpawns;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SceneData sceneData;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private System.Random randomGenerator;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentEnemy;

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xC088C4", Offset = "0xC088C4", VA = "0xC088C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xC08A04", Offset = "0xC08A04", VA = "0xC08A04")]
	public void Init(SceneData sceneData)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xC08A64", Offset = "0xC08A64", VA = "0xC08A64")]
	public void Finish()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xC089A8", Offset = "0xC089A8", VA = "0xC089A8")]
	private void Prewarm()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xC08C14", Offset = "0xC08C14", VA = "0xC08C14")]
	private void CreateSpawns(PoliceThiefData data)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xC08CDC", Offset = "0xC08CDC", VA = "0xC08CDC")]
	private PoliceThiefData createSpawn(PoliceThiefData data)
	{
		return null;
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xC09578", Offset = "0xC09578", VA = "0xC09578")]
	private PoliceThiefData getSpawn()
	{
		return null;
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xC08F30", Offset = "0xC08F30", VA = "0xC08F30")]
	public string getCurrentEnemyName(GameObject enemy)
	{
		return null;
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xC09774", Offset = "0xC09774", VA = "0xC09774")]
	private void SpawnEnemy()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xC09A3C", Offset = "0xC09A3C", VA = "0xC09A3C")]
	private bool SpawnIsAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xC09B00", Offset = "0xC09B00", VA = "0xC09B00")]
	public EnemySpawner()
	{
	}
}
[Token(Token = "0x2000248")]
public class EnemySpawnerController : MonoBehaviour
{
	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemySpawner[] spawners;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int spawns;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool startAuto;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SceneData sceneData;

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xC09B84", Offset = "0xC09B84", VA = "0xC09B84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xC09CF4", Offset = "0xC09CF4", VA = "0xC09CF4")]
	public void StartSpawners()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xC09D94", Offset = "0xC09D94", VA = "0xC09D94")]
	public void FinishSpawners()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xC09DF0", Offset = "0xC09DF0", VA = "0xC09DF0")]
	private void OnSceneInitialised(int sceneId)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xC09E1C", Offset = "0xC09E1C", VA = "0xC09E1C")]
	private void OnSceneDeactivate(int sceneId)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xC09E48", Offset = "0xC09E48", VA = "0xC09E48")]
	public EnemySpawnerController()
	{
	}
}
[Token(Token = "0x2000249")]
public class NextSceneButton : HitTarget
{
	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NextSceneData nextSceneData;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SceneAction[] sceneActions;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool bHitImpl;

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xC09E58", Offset = "0xC09E58", VA = "0xC09E58", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xC0A090", Offset = "0xC0A090", VA = "0xC0A090")]
	public void OnHitImpl()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xC0A43C", Offset = "0xC0A43C", VA = "0xC0A43C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xC0A780", Offset = "0xC0A780", VA = "0xC0A780")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xC0A7BC", Offset = "0xC0A7BC", VA = "0xC0A7BC")]
	public NextSceneButton()
	{
	}
}
[Token(Token = "0x200024B")]
public class NextSceneData : MonoBehaviour
{
	[Token(Token = "0x200024C")]
	[CompilerGenerated]
	private sealed class <movePlayerToNextScene>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NextSceneData <>4__this;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <playerPositions>5__2;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0xC0B8C4", Offset = "0xC0B8C4", VA = "0xC0B8C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xC0B90C", Offset = "0xC0B90C", VA = "0xC0B90C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xC0AAC8", Offset = "0xC0AAC8", VA = "0xC0AAC8")]
		[DebuggerHidden]
		public <movePlayerToNextScene>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xC0B0F0", Offset = "0xC0B0F0", VA = "0xC0B0F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xC0B0F4", Offset = "0xC0B0F4", VA = "0xC0B0F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xC0B8CC", Offset = "0xC0B8CC", VA = "0xC0B8CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneData nextScene;

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xC0A1B4", Offset = "0xC0A1B4", VA = "0xC0A1B4")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xC0A8C4", Offset = "0xC0A8C4", VA = "0xC0A8C4")]
	private void overriteReadySetGoPosition()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xC0A85C", Offset = "0xC0A85C", VA = "0xC0A85C")]
	[IteratorStateMachine(typeof(<movePlayerToNextScene>d__3))]
	private IEnumerator movePlayerToNextScene()
	{
		return null;
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xC0AAF0", Offset = "0xC0AAF0", VA = "0xC0AAF0")]
	public Transform getPlayerPositions()
	{
		return null;
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xC0ACE8", Offset = "0xC0ACE8", VA = "0xC0ACE8", Slot = "4")]
	protected virtual void OnFirstFade()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xC0AD08", Offset = "0xC0AD08", VA = "0xC0AD08", Slot = "5")]
	protected virtual float getFadeTime(int fadeIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xC0AD10", Offset = "0xC0AD10", VA = "0xC0AD10", Slot = "6")]
	protected virtual void OnComplete()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xC0AD88", Offset = "0xC0AD88", VA = "0xC0AD88")]
	public void startSceneForDebug()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xC0B048", Offset = "0xC0B048", VA = "0xC0B048")]
	private float getPlayerPointDuration(Vector3 point, Vector3 nextPoint)
	{
		return default(float);
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xC0B0E8", Offset = "0xC0B0E8", VA = "0xC0B0E8")]
	public NextSceneData()
	{
	}
}
[Token(Token = "0x200024D")]
public class NextScenePlayerPosition : MonoBehaviour
{
	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToNextPosition;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool activateNextScene;

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xC0B914", Offset = "0xC0B914", VA = "0xC0B914")]
	public NextScenePlayerPosition()
	{
	}
}
[Token(Token = "0x200024E")]
public class PoliceStation : SceneData
{
	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform playerTransform;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool menuButtonDown;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool initialised;

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xC0B91C", Offset = "0xC0B91C", VA = "0xC0B91C", Slot = "4")]
	public override void initialise()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xC0BA00", Offset = "0xC0BA00", VA = "0xC0BA00", Slot = "5")]
	public override void activate()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xC0BD78", Offset = "0xC0BD78", VA = "0xC0BD78", Slot = "7")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xC0BD7C", Offset = "0xC0BD7C", VA = "0xC0BD7C")]
	public PoliceStation()
	{
	}
}
[Token(Token = "0x200024F")]
public class PoliceThiefData : MonoBehaviour
{
	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ThiefPoliceController character;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debug;

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xC0BE3C", Offset = "0xC0BE3C", VA = "0xC0BE3C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xC0912C", Offset = "0xC0912C", VA = "0xC0912C")]
	public void setCharacterActions()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xC0BE70", Offset = "0xC0BE70", VA = "0xC0BE70")]
	public PoliceThiefData()
	{
	}
}
[Token(Token = "0x2000250")]
public class PseudoRandomGenerator
{
	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_iCurrentRandom;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] m_adRandomArray;

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xC0BE78", Offset = "0xC0BE78", VA = "0xC0BE78")]
	public void init(int seed, int size)
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xC0C03C", Offset = "0xC0C03C", VA = "0xC0C03C")]
	public bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xC0BF44", Offset = "0xC0BF44", VA = "0xC0BF44")]
	internal void log()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xC0C04C", Offset = "0xC0C04C", VA = "0xC0C04C")]
	public int Range(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xC0C178", Offset = "0xC0C178", VA = "0xC0C178")]
	public PseudoRandomGenerator()
	{
	}
}
[Token(Token = "0x2000251")]
public class SceneAction : MonoBehaviour
{
	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnComplete;

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xC0C180", Offset = "0xC0C180", VA = "0xC0C180", Slot = "4")]
	public virtual void executeAction()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xC0C184", Offset = "0xC0C184", VA = "0xC0C184")]
	public SceneAction()
	{
	}
}
[Serializable]
[Token(Token = "0x2000252")]
public class SceneEvent : UnityEvent<int>
{
	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xC0C18C", Offset = "0xC0C18C", VA = "0xC0C18C")]
	public SceneEvent()
	{
	}
}
[Token(Token = "0x2000253")]
public class SceneData : MonoBehaviour
{
	[Token(Token = "0x2000254")]
	[CompilerGenerated]
	private sealed class <test>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneData <>4__this;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0xC0DC8C", Offset = "0xC0DC8C", VA = "0xC0DC8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0xC0DCD4", Offset = "0xC0DCD4", VA = "0xC0DCD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xC0CDDC", Offset = "0xC0CDDC", VA = "0xC0CDDC")]
		[DebuggerHidden]
		public <test>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xC0D7CC", Offset = "0xC0D7CC", VA = "0xC0D7CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xC0D7D0", Offset = "0xC0D7D0", VA = "0xC0D7D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xC0DC94", Offset = "0xC0DC94", VA = "0xC0DC94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SceneId;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public PoliceThiefData[] policesThievesData;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public CharacterData[] hostagesData;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NextSceneButton[] nextSceneButtons;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int thiefCount;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int thiefDeads;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int policeCount;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int policeDeads;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneEvent OnSceneInitialise;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SceneEvent OnPreSceneInitialise;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static SceneEvent OnSceneActive;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static SceneEvent OnSceneDeactivate;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AmbientSoundType ambientSound;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float musicOffset;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool masterClientScenefinished;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int enemySpawns;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SceneAction sceneActiveAction;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OnlineSceneModifier onlineSceneModifier;

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xC0C1D4", Offset = "0xC0C1D4", VA = "0xC0C1D4", Slot = "4")]
	public virtual void initialise()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xC0C608", Offset = "0xC0C608", VA = "0xC0C608", Slot = "5")]
	public virtual void activate()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xC0CAE4", Offset = "0xC0CAE4", VA = "0xC0CAE4")]
	private void prepareReadySetGoPosition()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xC0CCA4", Offset = "0xC0CCA4", VA = "0xC0CCA4", Slot = "6")]
	public virtual void activateCompleted()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xC0CD74", Offset = "0xC0CD74", VA = "0xC0CD74")]
	[IteratorStateMachine(typeof(<test>d__22))]
	private IEnumerator test()
	{
		return null;
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xC0CE04", Offset = "0xC0CE04", VA = "0xC0CE04")]
	private void waitForMoaningUserToBeAwareOfTheSituation()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xC0CF14", Offset = "0xC0CF14", VA = "0xC0CF14", Slot = "7")]
	public virtual void deactivate()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xC0D2F8", Offset = "0xC0D2F8", VA = "0xC0D2F8", Slot = "8")]
	protected virtual void OnThiefDead()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xC0D5C0", Offset = "0xC0D5C0", VA = "0xC0D5C0")]
	private void OnPoliceDead()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xC0B868", Offset = "0xC0B868", VA = "0xC0B868")]
	public void hideNextSceneButtons()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xC0D260", Offset = "0xC0D260", VA = "0xC0D260")]
	private void showNextSceneButtons()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xC0D63C", Offset = "0xC0D63C", VA = "0xC0D63C")]
	private void communication()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xC09D78", Offset = "0xC09D78", VA = "0xC09D78")]
	public void setSpawns(int spawns)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xC09A58", Offset = "0xC09A58", VA = "0xC09A58")]
	public bool SpawnIsAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xC09A68", Offset = "0xC09A68", VA = "0xC09A68")]
	public void RegisterEnemy(ThiefPoliceController enemy)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xC0D714", Offset = "0xC0D714", VA = "0xC0D714", Slot = "9")]
	public virtual void onlinePlayerBecomesMainClient()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xC0BDD0", Offset = "0xC0BDD0", VA = "0xC0BDD0")]
	public SceneData()
	{
	}
}
[Token(Token = "0x2000255")]
public class ScoreData
{
	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int THIEF_DEADS_MULTIPLIER;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int HEADSHOTS_MULTIPLIER;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int POLICE_DEADS_MULTIPLIER;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int FRIENDLYFIRE_MULTIPLIER;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int HOSTAGE_DEADS_MULTIPLIER;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int HOSTAGE_SAVED_MULTIPLIER;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int USED_BULLETS_MULTIPLIER;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int EXPLODE_BOMBS;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int SCENE_COMPLETE;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int MISSION_COMPLETE;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int HELL_LEVEL_MULTIPLIER;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int TIME_MAX_POINTS;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int TROMP_DEAD;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int thiefDeads;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int thiefHeadshots;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int policeDeads;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int friendlyFire;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hostageDeads;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hostageSaved;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int usedBullets;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int scenesCompleted;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeToComplete;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool bombsExploded;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool trompDead;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool gameOver;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Skill.GameLevel gameLevel;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameScene gameScene;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int totalScore;

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xC0DCDC", Offset = "0xC0DCDC", VA = "0xC0DCDC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xC0DCF8", Offset = "0xC0DCF8", VA = "0xC0DCF8")]
	public bool isClear()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xC0DD50", Offset = "0xC0DD50", VA = "0xC0DD50")]
	public int getTotalScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xC0DFD4", Offset = "0xC0DFD4", VA = "0xC0DFD4")]
	public ScoreData()
	{
	}
}
[Token(Token = "0x2000256")]
public class ShootingGallery : SceneData
{
	[Token(Token = "0x2000259")]
	[CompilerGenerated]
	private sealed class <playRandomSounds>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGallery <>4__this;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0xC0F2E0", Offset = "0xC0F2E0", VA = "0xC0F2E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0xC0F328", Offset = "0xC0F328", VA = "0xC0F328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xC0EF64", Offset = "0xC0EF64", VA = "0xC0EF64")]
		[DebuggerHidden]
		public <playRandomSounds>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xC0F140", Offset = "0xC0F140", VA = "0xC0F140", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xC0F144", Offset = "0xC0F144", VA = "0xC0F144", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xC0F2E8", Offset = "0xC0F2E8", VA = "0xC0F2E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform playerTransform;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float gameDuration;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ShootingGalleryButton startButton;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ShootingGalleryButton distanceButton;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ShootingTarget shootingTarget;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform[] otherShootingTarget;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform otherShootingPositions;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro currentScore;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro highestScore;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip ringtone;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip startSound;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip errorStartSound;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Radio radio;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AudioSource audioSource;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool initialized;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool inGame;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private bool ringtonePlayed;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xC0E054", Offset = "0xC0E054", VA = "0xC0E054", Slot = "4")]
	public override void initialise()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xC0E5CC", Offset = "0xC0E5CC", VA = "0xC0E5CC", Slot = "5")]
	public override void activate()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xC0E910", Offset = "0xC0E910", VA = "0xC0E910", Slot = "7")]
	public override void deactivate()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xC0E954", Offset = "0xC0E954", VA = "0xC0E954")]
	public void addPoints(int points)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xC0EA20", Offset = "0xC0EA20", VA = "0xC0EA20")]
	private void startGame()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xC0EED8", Offset = "0xC0EED8", VA = "0xC0EED8")]
	private void _startGame()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xC0EBF4", Offset = "0xC0EBF4", VA = "0xC0EBF4")]
	private void endGame()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xC0EF30", Offset = "0xC0EF30", VA = "0xC0EF30")]
	private void setTargetDistance()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xC0E8A8", Offset = "0xC0E8A8", VA = "0xC0E8A8")]
	[IteratorStateMachine(typeof(<playRandomSounds>d__25))]
	private IEnumerator playRandomSounds()
	{
		return null;
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xC0EF8C", Offset = "0xC0EF8C", VA = "0xC0EF8C")]
	public ShootingGallery()
	{
	}
}
[Token(Token = "0x200025A")]
public class SpawnerController : MonoBehaviour
{
	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int enemySpawns;

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xC0F330", Offset = "0xC0F330", VA = "0xC0F330")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xC0F334", Offset = "0xC0F334", VA = "0xC0F334")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xC0F338", Offset = "0xC0F338", VA = "0xC0F338")]
	public SpawnerController()
	{
	}
}
[Token(Token = "0x200025B")]
public class SceneHide : MonoBehaviour
{
	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Street;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Hall;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool MeetingRoom;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool TellerService;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool Office;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool HallDesk;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool OfficeSecondFloor;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool SecondFloor;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool JewelsRoom;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool BusRoom;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool SafeRoom;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool SafeRoomInside;

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xC0F340", Offset = "0xC0F340", VA = "0xC0F340")]
	public bool getBool(int sceneId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xC0F3D4", Offset = "0xC0F3D4", VA = "0xC0F3D4")]
	public SceneHide()
	{
	}
}
[Token(Token = "0x200025C")]
public class SceneSelectionForDebug : MonoBehaviour
{
	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool keysPressed;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool autoReloading;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool PlayerImmortal;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool autoConnectRandom;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneSelectionForDebug Instance;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerHit playerHit;

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xC0F3DC", Offset = "0xC0F3DC", VA = "0xC0F3DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xC0F750", Offset = "0xC0F750", VA = "0xC0F750")]
	public void startScene(int sceneId)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xC0F97C", Offset = "0xC0F97C", VA = "0xC0F97C")]
	private void ButtonEventHandler(Button button)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xC0FD28", Offset = "0xC0FD28", VA = "0xC0FD28")]
	private void playerColliders(bool enable)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xC0FE08", Offset = "0xC0FE08", VA = "0xC0FE08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xC0FF2C", Offset = "0xC0FF2C", VA = "0xC0FF2C")]
	private void updateKeysPressed()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xC10138", Offset = "0xC10138", VA = "0xC10138")]
	private void toggleDebugEnable()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xC0F70C", Offset = "0xC0F70C", VA = "0xC0F70C")]
	private void setDebugEnable(bool enable)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xC101C4", Offset = "0xC101C4", VA = "0xC101C4")]
	private bool isDebugEnable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xC10200", Offset = "0xC10200", VA = "0xC10200")]
	public SceneSelectionForDebug()
	{
	}
}
[Token(Token = "0x200025F")]
public class ScoreManager : MonoBehaviour
{
	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScoreManager Instance;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScoreData scoreData;

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xC1042C", Offset = "0xC1042C", VA = "0xC1042C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xC10564", Offset = "0xC10564", VA = "0xC10564")]
	public ScoreData getScoreData()
	{
		return null;
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xC1056C", Offset = "0xC1056C", VA = "0xC1056C")]
	public void setGameLevel(Skill.GameLevel gameLevel)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xC10588", Offset = "0xC10588", VA = "0xC10588")]
	public Skill.GameLevel getGameLevel()
	{
		return default(Skill.GameLevel);
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xC105A4", Offset = "0xC105A4", VA = "0xC105A4")]
	public void AddThiefDead()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xC105C8", Offset = "0xC105C8", VA = "0xC105C8")]
	public void AddThiefHeadshot()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xC10720", Offset = "0xC10720", VA = "0xC10720")]
	public void AddPoliceDead()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xC10794", Offset = "0xC10794", VA = "0xC10794")]
	public void AddFriendlyFire()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xC107B8", Offset = "0xC107B8", VA = "0xC107B8")]
	public void AddHostageDead()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xC1086C", Offset = "0xC1086C", VA = "0xC1086C")]
	public void AddTrompDead()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xC1088C", Offset = "0xC1088C", VA = "0xC1088C")]
	public void AddHostageDeads(int deads)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xC0D23C", Offset = "0xC0D23C", VA = "0xC0D23C")]
	public void AddHostageSaved()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xC1094C", Offset = "0xC1094C", VA = "0xC1094C")]
	public void AddUsedBullet(CrisisWeapon playerWeapon)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xC0D1B4", Offset = "0xC0D1B4", VA = "0xC0D1B4")]
	public void AddSceneComplete()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xC10A0C", Offset = "0xC10A0C", VA = "0xC10A0C")]
	public void SetBombsExploded()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xC10A7C", Offset = "0xC10A7C", VA = "0xC10A7C")]
	public void SetTimeToComplete(float timeToComplete)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xC10A98", Offset = "0xC10A98", VA = "0xC10A98")]
	public void setGameOver(bool missionFailed)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xC10BEC", Offset = "0xC10BEC", VA = "0xC10BEC")]
	public ScoreManager()
	{
	}
}
[Token(Token = "0x2000260")]
public class SetPlayerForTesting : MonoBehaviour
{
	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRPlayer player;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 testPosition;

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xC10C60", Offset = "0xC10C60", VA = "0xC10C60")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xC10DBC", Offset = "0xC10DBC", VA = "0xC10DBC")]
	public SetPlayerForTesting()
	{
	}
}
[Token(Token = "0x2000261")]
public class AudioController : MonoBehaviour
{
	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Voices")]
	public AudioSource player;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource walkieTalkie;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	[Header("Effects")]
	public AudioSource ambientSound;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource impactSounds;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float playerVolume;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float walkieTalkieVolume;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float ambientSoundVolume;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float impactSoundsVolume;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float charactersVolume;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float playerDefaultVolume;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float walkieTalkieDefaultVolume;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float ambientSoundDefaultVolume;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float impactSoundsDefaultVolume;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float charactersDefaultVolume;

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xC10DC4", Offset = "0xC10DC4", VA = "0xC10DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xC10DC8", Offset = "0xC10DC8", VA = "0xC10DC8")]
	public void setMusicVolume(float volume)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xC10DCC", Offset = "0xC10DCC", VA = "0xC10DCC")]
	public void setEffectsVolume(float volume)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xC10DD0", Offset = "0xC10DD0", VA = "0xC10DD0")]
	public AudioController()
	{
	}
}
[Token(Token = "0x2000262")]
public class BestScoresManager : MonoBehaviour
{
	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DEFAULT_NAME_1;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string DEFAULT_NAME;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MissionSelector missionSelector;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] bankAccomplishedObjs;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] portAccomplishedObjs;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] officeAccomplishedObjs;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] officeUnlockedObjs;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BestScoresMenu bestScoresBank;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BestScoresMenu bestScoresPort;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BestScoresMenu bestScoresOffice;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Keyboard keyboard;

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xC10DF0", Offset = "0xC10DF0", VA = "0xC10DF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xC10DF4", Offset = "0xC10DF4", VA = "0xC10DF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xC11564", Offset = "0xC11564", VA = "0xC11564")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xC10E58", Offset = "0xC10E58", VA = "0xC10E58")]
	private void showBestScores()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xC11F40", Offset = "0xC11F40", VA = "0xC11F40")]
	private void portUnlocked()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xC11F98", Offset = "0xC11F98", VA = "0xC11F98")]
	private void officeUnlocked()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xC11FF0", Offset = "0xC11FF0", VA = "0xC11FF0")]
	public void saveScores()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xC11A78", Offset = "0xC11A78", VA = "0xC11A78")]
	private void updateMissionAccomplishedVisibility()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xC11BDC", Offset = "0xC11BDC", VA = "0xC11BDC")]
	private void updateMissionUnlockedVisibility(int levelUnlock)
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xC12380", Offset = "0xC12380", VA = "0xC12380")]
	public BestScoresManager()
	{
	}
}
[Token(Token = "0x2000263")]
public class BestScoresMenu : MonoBehaviour
{
	[Token(Token = "0x4000C10")]
	private const string ROOKIE_COLOR = "#043C4F";

	[Token(Token = "0x4000C11")]
	private const string HELL_COLOR = "#9A0000";

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<SerializableScoreData> bestScores;

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xC123F8", Offset = "0xC123F8", VA = "0xC123F8")]
	public void show()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xC1241C", Offset = "0xC1241C", VA = "0xC1241C")]
	public void hide()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xC116A4", Offset = "0xC116A4", VA = "0xC116A4")]
	public void setBestScores(List<SerializableScoreData> bestScores)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xC12980", Offset = "0xC12980", VA = "0xC12980")]
	public List<SerializableScoreData> getBestScores()
	{
		return null;
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xC11794", Offset = "0xC11794", VA = "0xC11794")]
	public KeyboardScreen addScore(SerializableScoreData newScore)
	{
		return null;
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xC12440", Offset = "0xC12440", VA = "0xC12440")]
	private void updateBestScores()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xC12B34", Offset = "0xC12B34", VA = "0xC12B34")]
	private void setText(Transform t, string text)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xC12BA0", Offset = "0xC12BA0", VA = "0xC12BA0")]
	private void setColor(Transform t, Color color)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xC12B04", Offset = "0xC12B04", VA = "0xC12B04")]
	private Color getColor(string hexColor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xC12C34", Offset = "0xC12C34", VA = "0xC12C34")]
	private Color getRookieColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xC12988", Offset = "0xC12988", VA = "0xC12988")]
	private void sort(ref List<SerializableScoreData> scores)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xC12C94", Offset = "0xC12C94", VA = "0xC12C94")]
	public BestScoresMenu()
	{
	}
}
[Token(Token = "0x2000264")]
public class ButtonConfig : UIButton
{
	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool locked;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool isOn;

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xC12C9C", Offset = "0xC12C9C", VA = "0xC12C9C")]
	public void init(int config)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xC13038", Offset = "0xC13038", VA = "0xC13038", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xC13264", Offset = "0xC13264", VA = "0xC13264")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xC132A4", Offset = "0xC132A4", VA = "0xC132A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xC12CA8", Offset = "0xC12CA8", VA = "0xC12CA8")]
	private void setConfig0()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xC12E3C", Offset = "0xC12E3C", VA = "0xC12E3C")]
	private void setConfig1()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xC13328", Offset = "0xC13328", VA = "0xC13328")]
	private void setConfig(int config, NVRButtons[] grabButtons, NVRButtons[] dropButtons, NVRButtons[] reloadButtons, NVRButtons triggerButton, NVRButtons useButton)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xC134F0", Offset = "0xC134F0", VA = "0xC134F0")]
	public int getConfig()
	{
		return default(int);
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xC134F8", Offset = "0xC134F8", VA = "0xC134F8")]
	public ButtonConfig()
	{
	}
}
[Token(Token = "0x2000265")]
public class LanguageSettings : UIButton
{
	[Token(Token = "0x4000C15")]
	private const string ENGLISH = "settings_english";

	[Token(Token = "0x4000C16")]
	private const string SPANISH = "settings_spanish";

	[Token(Token = "0x4000C17")]
	private const string CHINESE = "settings_chinese";

	[Token(Token = "0x4000C18")]
	private const string JAPANESE = "settings_japanese";

	[Token(Token = "0x4000C19")]
	private const string KOREAN = "settings_korean";

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool locked;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isFront;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TextMeshPro front;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TextMeshPro back;

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xC135D8", Offset = "0xC135D8", VA = "0xC135D8")]
	public void init()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xC137E8", Offset = "0xC137E8", VA = "0xC137E8", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xC13A6C", Offset = "0xC13A6C", VA = "0xC13A6C")]
	public LocalizationManager.Language getLanguage()
	{
		return default(LocalizationManager.Language);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xC13AC0", Offset = "0xC13AC0", VA = "0xC13AC0")]
	public LanguageSettings()
	{
	}
}
[Token(Token = "0x2000266")]
public class MissionButton : UIButton
{
	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xC13AD4", Offset = "0xC13AD4", VA = "0xC13AD4", Slot = "9")]
	public override void OnHoverAnimation(bool enable)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xC13B30", Offset = "0xC13B30", VA = "0xC13B30")]
	public MissionButton()
	{
	}
}
[Token(Token = "0x2000267")]
public class MissionScoresMenu : MonoBehaviour
{
	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh thiefDeads;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh thiefHeadshots;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh policeDeads;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh friendlyFire;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh hostageDeads;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh usedBullets;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh timeToComplete;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh score;

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xC13B34", Offset = "0xC13B34", VA = "0xC13B34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xC13BC8", Offset = "0xC13BC8", VA = "0xC13BC8")]
	private void setMissionScores(ScoreData scoreData)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xC13D20", Offset = "0xC13D20", VA = "0xC13D20")]
	private string getTimeToComplete(float timeToComplete)
	{
		return null;
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xC13F48", Offset = "0xC13F48", VA = "0xC13F48")]
	public MissionScoresMenu()
	{
	}
}
[Token(Token = "0x2000268")]
public class MissionSelector : UIToggle
{
	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _missionSelected;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIButton bankButton;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIButton portButton;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIButton officeButton;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int levelUnlock;

	[Token(Token = "0x170000C8")]
	public int missionSelected
	{
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xC13F50", Offset = "0xC13F50", VA = "0xC13F50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xC13F58", Offset = "0xC13F58", VA = "0xC13F58")]
		set
		{
		}
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xC1400C", Offset = "0xC1400C", VA = "0xC1400C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xC14114", Offset = "0xC14114", VA = "0xC14114")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xC141CC", Offset = "0xC141CC", VA = "0xC141CC")]
	private void onDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xC11C48", Offset = "0xC11C48", VA = "0xC11C48")]
	public void init(int levelUnlock)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xC14494", Offset = "0xC14494", VA = "0xC14494", Slot = "6")]
	protected override void ButtonPressed(UIButton button)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xC1442C", Offset = "0xC1442C", VA = "0xC1442C")]
	private void ForceButtonPressed(UIButton button, bool bForce = false)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xC14904", Offset = "0xC14904", VA = "0xC14904")]
	private void disableLockedButtons()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xC145D8", Offset = "0xC145D8", VA = "0xC145D8")]
	private void selectMission(UIButton button, bool bForce = false, bool bPlaySound = true)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xC1420C", Offset = "0xC1420C", VA = "0xC1420C")]
	private void selectButton(UIButton button, bool bForce = false, bool bPlaySound = true)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xC14908", Offset = "0xC14908", VA = "0xC14908", Slot = "7")]
	protected override void ButtonHover(UIButton button, bool isHover)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xC149C8", Offset = "0xC149C8", VA = "0xC149C8")]
	private void updateHover(UIButton button, bool hover)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xC14B8C", Offset = "0xC14B8C", VA = "0xC14B8C")]
	public void changeMission(int newMission)
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xC14C78", Offset = "0xC14C78", VA = "0xC14C78")]
	public int getMissionSelected()
	{
		return default(int);
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xC11680", Offset = "0xC11680", VA = "0xC11680")]
	public GameScene GetGameScene()
	{
		return default(GameScene);
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xC14C80", Offset = "0xC14C80", VA = "0xC14C80")]
	public MissionSelector()
	{
	}
}
[Token(Token = "0x2000269")]
public class PhysicalButton : UIButton
{
	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xC14C90", Offset = "0xC14C90", VA = "0xC14C90", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xC14DB0", Offset = "0xC14DB0", VA = "0xC14DB0", Slot = "9")]
	public override void OnHoverAnimation(bool enable)
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xC14DB4", Offset = "0xC14DB4", VA = "0xC14DB4")]
	public PhysicalButton()
	{
	}
}
[Token(Token = "0x200026A")]
public class PlayerHeight : MonoBehaviour
{
	[Token(Token = "0x4000C2B")]
	private const float DELTA_HEIGHT = 0.05f;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float DeltaPlayerHeightHead;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float DeltaPlayerHeight;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxHeight;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minHeight;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UIButton upHeight;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIButton downHeight;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIButton resetHeight;

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xC14DB8", Offset = "0xC14DB8", VA = "0xC14DB8")]
	public void init(float playerHeight)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xC15154", Offset = "0xC15154", VA = "0xC15154")]
	private void setDeltaPlayerHeight(float deltaPlayerHeight)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xC151B4", Offset = "0xC151B4", VA = "0xC151B4")]
	private void resetPlayerHeight()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xC14FD8", Offset = "0xC14FD8", VA = "0xC14FD8")]
	private void setPlayerHeight(float playerHeight)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xC153C0", Offset = "0xC153C0", VA = "0xC153C0")]
	public PlayerHeight()
	{
	}
}
[Token(Token = "0x200026B")]
public class ReloadMode : UIButton
{
	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool locked;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isManual;

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xC153F0", Offset = "0xC153F0", VA = "0xC153F0")]
	public void init(Weapon.ReloadType reloadType)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xC1544C", Offset = "0xC1544C", VA = "0xC1544C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xC15568", Offset = "0xC15568", VA = "0xC15568")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xC156B4", Offset = "0xC156B4", VA = "0xC156B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xC154BC", Offset = "0xC154BC", VA = "0xC154BC")]
	private void toggle()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xC15740", Offset = "0xC15740", VA = "0xC15740")]
	public Weapon.ReloadType getReloadType()
	{
		return default(Weapon.ReloadType);
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xC15798", Offset = "0xC15798", VA = "0xC15798")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xC15610", Offset = "0xC15610", VA = "0xC15610")]
	private bool manualReloadAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xC15968", Offset = "0xC15968", VA = "0xC15968")]
	public ReloadMode()
	{
	}
}
[Token(Token = "0x200026C")]
public class OnButtonPressed : UnityEvent<UIButton>
{
	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xC1597C", Offset = "0xC1597C", VA = "0xC1597C")]
	public OnButtonPressed()
	{
	}
}
[Token(Token = "0x200026D")]
public class OnButtonHover : UnityEvent<UIButton, bool>
{
	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xC159C4", Offset = "0xC159C4", VA = "0xC159C4")]
	public OnButtonHover()
	{
	}
}
[Token(Token = "0x200026E")]
public class UIButton : HitTarget, IKeyboardPointable
{
	[Token(Token = "0x200026F")]
	public enum UIButtonState
	{
		[Token(Token = "0x4000C3C")]
		Selected,
		[Token(Token = "0x4000C3D")]
		Enabled,
		[Token(Token = "0x4000C3E")]
		Disabled
	}

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnButtonPressed onButtonPressed;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OnButtonHover onButtonHover;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIButtonState state;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string command;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 initScale;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh text;

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xC15A0C", Offset = "0xC15A0C", VA = "0xC15A0C", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xC15A3C", Offset = "0xC15A3C", VA = "0xC15A3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xC13194", Offset = "0xC13194", VA = "0xC13194", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xC143C8", Offset = "0xC143C8", VA = "0xC143C8")]
	public void setButtonState(UIButtonState buttonState)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xC15AF8", Offset = "0xC15AF8", VA = "0xC15AF8")]
	private void setButtonEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xC15BC0", Offset = "0xC15BC0", VA = "0xC15BC0")]
	private void setButtonDisabled(bool disabled)
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xC15C88", Offset = "0xC15C88", VA = "0xC15C88")]
	private void setButtonSelected(bool selected)
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xC15D50", Offset = "0xC15D50", VA = "0xC15D50", Slot = "9")]
	public virtual void OnHoverAnimation(bool enable)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xC134FC", Offset = "0xC134FC", VA = "0xC134FC")]
	public UIButton()
	{
	}
}
[Token(Token = "0x2000270")]
public class UIToggle : MonoBehaviour
{
	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool initOnAwake;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected UIButton[] toggleButtons;

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xC15E24", Offset = "0xC15E24", VA = "0xC15E24", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xC14248", Offset = "0xC14248", VA = "0xC14248", Slot = "5")]
	protected virtual void init()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xC14814", Offset = "0xC14814", VA = "0xC14814", Slot = "6")]
	protected virtual void ButtonPressed(UIButton button)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xC15E3C", Offset = "0xC15E3C", VA = "0xC15E3C", Slot = "7")]
	protected virtual void ButtonHover(UIButton button, bool isHover)
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xC14C88", Offset = "0xC14C88", VA = "0xC14C88")]
	public UIToggle()
	{
	}
}
[Token(Token = "0x2000271")]
public class WalkieTalkieSettings : UIButton
{
	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool locked;

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xC15E40", Offset = "0xC15E40", VA = "0xC15E40")]
	public void init(bool enabled)
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xC15E9C", Offset = "0xC15E9C", VA = "0xC15E9C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xC1603C", Offset = "0xC1603C", VA = "0xC1603C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xC160C8", Offset = "0xC160C8", VA = "0xC160C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xC15F0C", Offset = "0xC15F0C", VA = "0xC15F0C")]
	private void toggle()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xC1614C", Offset = "0xC1614C", VA = "0xC1614C")]
	public bool getState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xC161A0", Offset = "0xC161A0", VA = "0xC161A0")]
	public WalkieTalkieSettings()
	{
	}
}
[Token(Token = "0x2000272")]
public class Ship : SceneAction
{
	[Serializable]
	[Token(Token = "0x2000273")]
	public class CheckPoint
	{
		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform target;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject characters;

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xC16BBC", Offset = "0xC16BBC", VA = "0xC16BBC")]
		public CheckPoint()
		{
		}
	}

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ship;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SceneData scene;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CheckPoint[] checkPoints;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int currentCheckpoint;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource audioSource;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform playerTransform;

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xC161AC", Offset = "0xC161AC", VA = "0xC161AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xC1633C", Offset = "0xC1633C", VA = "0xC1633C")]
	private void randomHorn()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xC163B0", Offset = "0xC163B0", VA = "0xC163B0")]
	private void OnSceneActive(int sceneId)
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xC165C8", Offset = "0xC165C8", VA = "0xC165C8")]
	private void moveShip()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xC169F8", Offset = "0xC169F8", VA = "0xC169F8")]
	private void OnSceneDeactivate(int sceneId)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xC16AA4", Offset = "0xC16AA4", VA = "0xC16AA4")]
	public Ship()
	{
	}
}
[Token(Token = "0x2000274")]
public class George : HitTarget
{
	[Token(Token = "0x2000275")]
	[CompilerGenerated]
	private sealed class <HitSound>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public George <>4__this;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xC1709C", Offset = "0xC1709C", VA = "0xC1709C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xC170E4", Offset = "0xC170E4", VA = "0xC170E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xC16EC4", Offset = "0xC16EC4", VA = "0xC16EC4")]
		[DebuggerHidden]
		public <HitSound>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xC16EF4", Offset = "0xC16EF4", VA = "0xC16EF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xC16EF8", Offset = "0xC16EF8", VA = "0xC16EF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xC170A4", Offset = "0xC170A4", VA = "0xC170A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip sleepSound;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip hitSound;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hitted;

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xC16BC4", Offset = "0xC16BC4", VA = "0xC16BC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xC16C90", Offset = "0xC16C90", VA = "0xC16C90")]
	private void sleep(int sceneId)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xC16DB0", Offset = "0xC16DB0", VA = "0xC16DB0", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xC16EBC", Offset = "0xC16EBC", VA = "0xC16EBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xC16E54", Offset = "0xC16E54", VA = "0xC16E54")]
	[IteratorStateMachine(typeof(<HitSound>d__8))]
	private IEnumerator HitSound()
	{
		return null;
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xC16D58", Offset = "0xC16D58", VA = "0xC16D58")]
	private void SleepSound()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xC16EEC", Offset = "0xC16EEC", VA = "0xC16EEC")]
	public George()
	{
	}
}
[Token(Token = "0x2000276")]
public class PoliceStationCharacter : HitTarget
{
	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public NVRCollisionSoundMaterials hitSound;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int hitAnimations;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastHit;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastHitSound;

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xC170EC", Offset = "0xC170EC", VA = "0xC170EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xC1713C", Offset = "0xC1713C", VA = "0xC1713C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xC172B4", Offset = "0xC172B4", VA = "0xC172B4")]
	public PoliceStationCharacter()
	{
	}
}
[Token(Token = "0x2000277")]
public class Radio : HitDynamicTarget
{
	[Token(Token = "0x2000278")]
	[CompilerGenerated]
	private sealed class <Play>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Radio <>4__this;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xC17DF8", Offset = "0xC17DF8", VA = "0xC17DF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0xC17E40", Offset = "0xC17E40", VA = "0xC17E40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xC17AF4", Offset = "0xC17AF4", VA = "0xC17AF4")]
		[DebuggerHidden]
		public <Play>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xC17B1C", Offset = "0xC17B1C", VA = "0xC17B1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xC17B20", Offset = "0xC17B20", VA = "0xC17B20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xC17E00", Offset = "0xC17E00", VA = "0xC17E00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip brokenClip;

	[Token(Token = "0x4000C58")]
	private const string SOUNDS_PATH = "RadioSounds";

	[Token(Token = "0x4000C59")]
	private const string SONGS_PATH = "songs";

	[Token(Token = "0x4000C5A")]
	private const string NEWS_PATH = "news";

	[Token(Token = "0x4000C5B")]
	private const string SLASH = "/";

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioClip[] songs;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioClip[] news;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource audioSource;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int currentSong;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentNews;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool broken;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool lastPlayedNews;

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xC172C8", Offset = "0xC172C8", VA = "0xC172C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xC17750", Offset = "0xC17750", VA = "0xC17750")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xC178A0", Offset = "0xC178A0", VA = "0xC178A0")]
	private void updateNewsLanguage()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xC17964", Offset = "0xC17964", VA = "0xC17964")]
	private void updateNewsLanguage(int sceneId)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xC1752C", Offset = "0xC1752C", VA = "0xC1752C")]
	private LocalizationManager.Language GetLanguage()
	{
		return default(LocalizationManager.Language);
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xC17970", Offset = "0xC17970", VA = "0xC17970", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xC0E934", Offset = "0xC0E934", VA = "0xC0E934")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xC0E888", Offset = "0xC0E888", VA = "0xC0E888")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xC17A8C", Offset = "0xC17A8C", VA = "0xC17A8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xC176E8", Offset = "0xC176E8", VA = "0xC176E8")]
	[IteratorStateMachine(typeof(<Play>d__21))]
	private IEnumerator Play()
	{
		return null;
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xC17A94", Offset = "0xC17A94", VA = "0xC17A94")]
	private void radioBroken()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xC1758C", Offset = "0xC1758C", VA = "0xC1758C")]
	private void RandomizeClips()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xC17AEC", Offset = "0xC17AEC", VA = "0xC17AEC")]
	public Radio()
	{
	}
}
[Token(Token = "0x2000279")]
public class RotateTo : MonoBehaviour
{
	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xC17E48", Offset = "0xC17E48", VA = "0xC17E48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xC17EE0", Offset = "0xC17EE0", VA = "0xC17EE0")]
	public RotateTo()
	{
	}
}
[Token(Token = "0x200027A")]
public class ScaleTo : MonoBehaviour
{
	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float animTime;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Ease ease;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 defaultPosition;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 defaultScale;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 enabledPosition;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 enabledScale;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool initialised;

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xC17EF0", Offset = "0xC17EF0", VA = "0xC17EF0")]
	private void init()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xC17FF8", Offset = "0xC17FF8", VA = "0xC17FF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xC180A8", Offset = "0xC180A8", VA = "0xC180A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xC1810C", Offset = "0xC1810C", VA = "0xC1810C")]
	public ScaleTo()
	{
	}
}
[Token(Token = "0x200027B")]
public class ShootingGalleryButton : HitTarget
{
	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onButtonPressed;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 initPosition;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 pressPosition;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool pressed;

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xC18120", Offset = "0xC18120", VA = "0xC18120")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xC18280", Offset = "0xC18280", VA = "0xC18280", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xC18488", Offset = "0xC18488", VA = "0xC18488")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xC182F4", Offset = "0xC182F4", VA = "0xC182F4")]
	private void pressButton()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xC1848C", Offset = "0xC1848C", VA = "0xC1848C")]
	public void activate()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xC18490", Offset = "0xC18490", VA = "0xC18490")]
	public void deactivate()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xC18494", Offset = "0xC18494", VA = "0xC18494")]
	public ShootingGalleryButton()
	{
	}
}
[Token(Token = "0x200027C")]
public class ShootingGalleryDoor : HitTarget, IKeyboardPointable
{
	[Token(Token = "0x200027D")]
	[CompilerGenerated]
	private sealed class <changeScene>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneData oldScene;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneData newScene;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0xC189E8", Offset = "0xC189E8", VA = "0xC189E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xC18A30", Offset = "0xC18A30", VA = "0xC18A30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xC18668", Offset = "0xC18668", VA = "0xC18668")]
		[DebuggerHidden]
		public <changeScene>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xC18800", Offset = "0xC18800", VA = "0xC18800", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xC18804", Offset = "0xC18804", VA = "0xC18804", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xC189F0", Offset = "0xC189F0", VA = "0xC189F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ShootingGallery shootingGallery;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PoliceStation policeStation;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform enterSign;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform exitSign;

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xC184A4", Offset = "0xC184A4", VA = "0xC184A4", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xC185F4", Offset = "0xC185F4", VA = "0xC185F4")]
	[IteratorStateMachine(typeof(<changeScene>d__5))]
	private IEnumerator changeScene(SceneData oldScene, SceneData newScene)
	{
		return null;
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xC18690", Offset = "0xC18690", VA = "0xC18690", Slot = "7")]
	public void OnHoverAnimation(bool enable)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xC187F8", Offset = "0xC187F8", VA = "0xC187F8")]
	public ShootingGalleryDoor()
	{
	}
}
[Token(Token = "0x200027E")]
public class ShootingTarget : HitTarget
{
	[Token(Token = "0x4000C7A")]
	private const float DURATION = 2f;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ShootingGallery controller;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform soporte;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform diana;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform dianaColliders;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] positions;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool moving;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource audioSource;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int currentPosition;

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xC18A38", Offset = "0xC18A38", VA = "0xC18A38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xC18AAC", Offset = "0xC18AAC", VA = "0xC18AAC", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xC18D38", Offset = "0xC18D38", VA = "0xC18D38")]
	public void setDefaultPosition()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xC18F08", Offset = "0xC18F08", VA = "0xC18F08")]
	public void setNextPosition()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xC18F48", Offset = "0xC18F48", VA = "0xC18F48")]
	public void clearDecals()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xC18D48", Offset = "0xC18D48", VA = "0xC18D48")]
	private void updatePosition()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xC19044", Offset = "0xC19044", VA = "0xC19044")]
	public ShootingTarget()
	{
	}
}
[Token(Token = "0x200027F")]
public class WeaponSelector : HitTarget
{
	[Token(Token = "0x2000280")]
	[CompilerGenerated]
	private sealed class <selectWeapon>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon newWeapon;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRHand hand;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NVRHand otherHand;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xC19898", Offset = "0xC19898", VA = "0xC19898", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0xC198E0", Offset = "0xC198E0", VA = "0xC198E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xC19680", Offset = "0xC19680", VA = "0xC19680")]
		[DebuggerHidden]
		public <selectWeapon>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xC196B0", Offset = "0xC196B0", VA = "0xC196B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xC196B4", Offset = "0xC196B4", VA = "0xC196B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xC198A0", Offset = "0xC198A0", VA = "0xC198A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public PoolManager.PoolType weaponPool;

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xC19054", Offset = "0xC19054", VA = "0xC19054")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xC1917C", Offset = "0xC1917C", VA = "0xC1917C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xC19604", Offset = "0xC19604", VA = "0xC19604")]
	[IteratorStateMachine(typeof(<selectWeapon>d__3))]
	private IEnumerator selectWeapon(NVRHand hand, NVRHand otherHand, Weapon newWeapon)
	{
		return null;
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xC196A8", Offset = "0xC196A8", VA = "0xC196A8")]
	public WeaponSelector()
	{
	}
}
[Token(Token = "0x2000281")]
public class Skill
{
	[Token(Token = "0x2000282")]
	public enum SkillLevel
	{
		[Token(Token = "0x4000C91")]
		Idiot,
		[Token(Token = "0x4000C92")]
		Normal,
		[Token(Token = "0x4000C93")]
		Smart,
		[Token(Token = "0x4000C94")]
		JackBauer
	}

	[Token(Token = "0x2000283")]
	public enum GameLevel
	{
		[Token(Token = "0x4000C96")]
		rookie,
		[Token(Token = "0x4000C97")]
		hell
	}

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<SkillLevel, float> coverOnHitPercents;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<SkillLevel, float> accuracyPercents;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<SkillLevel, float> maxAccuracyPercents;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float skillModifier;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static GameLevel gameLevel;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float adaptativeSkillModifier;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int MAX_SCORE_ADAPTATIVE;

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xC198E8", Offset = "0xC198E8", VA = "0xC198E8")]
	public Skill()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xC19B0C", Offset = "0xC19B0C", VA = "0xC19B0C")]
	public static bool coverOnHit(ThiefPoliceController character)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xC19BDC", Offset = "0xC19BDC", VA = "0xC19BDC")]
	public static float getAccurary(ThiefPoliceController character)
	{
		return default(float);
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xC19C98", Offset = "0xC19C98", VA = "0xC19C98")]
	private static float getModifier(ThiefPoliceController character)
	{
		return default(float);
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xC19DA8", Offset = "0xC19DA8", VA = "0xC19DA8")]
	public static float getMaxAccuracy(ThiefPoliceController character)
	{
		return default(float);
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xC19E64", Offset = "0xC19E64", VA = "0xC19E64")]
	public static void setLevel(GameLevel level)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xC19EE8", Offset = "0xC19EE8", VA = "0xC19EE8")]
	public static int getLifes()
	{
		return default(int);
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xC19F4C", Offset = "0xC19F4C", VA = "0xC19F4C")]
	public static float getRandomAccuracy(float randomMax)
	{
		return default(float);
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xC19FD8", Offset = "0xC19FD8", VA = "0xC19FD8")]
	public static void adjustScoreAdaptativeSkill(int iScore)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xC1A118", Offset = "0xC1A118", VA = "0xC1A118")]
	public static void increaseAdaptativeSkill()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xC1A298", Offset = "0xC1A298", VA = "0xC1A298")]
	private void OnSceneActive()
	{
	}
}
[Token(Token = "0x2000284")]
public class SlowMotion : MonoBehaviour
{
	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody[] m_rigidBodys;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Rigidbody, SlowMotionData> m_data;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float slowMotionDrag;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float slowMotionAngularDrag;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float slowMotionDuration;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Rigidbody> m_lRbForces;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> m_lRbForcesForce;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_bActive;

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xC1A3D0", Offset = "0xC1A3D0", VA = "0xC1A3D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xC1A3D4", Offset = "0xC1A3D4", VA = "0xC1A3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xC1A3D8", Offset = "0xC1A3D8", VA = "0xC1A3D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xC1A620", Offset = "0xC1A620", VA = "0xC1A620")]
	public void ResetTransforms()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xC1A784", Offset = "0xC1A784", VA = "0xC1A784")]
	public void ActivateSlowMotion()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xC1A834", Offset = "0xC1A834", VA = "0xC1A834")]
	public void AddRigidbodyVelocity(Rigidbody r, Vector3 force)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xC1A980", Offset = "0xC1A980", VA = "0xC1A980")]
	private void DeactivateSlowMotion()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xC1AA50", Offset = "0xC1AA50", VA = "0xC1AA50")]
	public SlowMotion()
	{
	}
}
[Token(Token = "0x2000285")]
internal class SlowMotionData
{
	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float drag;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float angularDrag;

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xC1A618", Offset = "0xC1A618", VA = "0xC1A618")]
	public SlowMotionData()
	{
	}
}
[Token(Token = "0x2000286")]
public class FastSphereCollider : MonoBehaviour
{
	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xC1AB68", Offset = "0xC1AB68", VA = "0xC1AB68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xC1AB6C", Offset = "0xC1AB6C", VA = "0xC1AB6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xC1AB70", Offset = "0xC1AB70", VA = "0xC1AB70")]
	public FastSphereCollider()
	{
	}
}
[Token(Token = "0x2000287")]
public class Subtitler : MonoBehaviour
{
	[Token(Token = "0x2000288")]
	[CompilerGenerated]
	private sealed class <WriteCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Subtitler <>4__this;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string stext;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private char[] <textArray>5__2;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0xC1B1E0", Offset = "0xC1B1E0", VA = "0xC1B1E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0xC1B228", Offset = "0xC1B228", VA = "0xC1B228", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xC1AF70", Offset = "0xC1AF70", VA = "0xC1AF70")]
		[DebuggerHidden]
		public <WriteCoroutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xC1B000", Offset = "0xC1B000", VA = "0xC1B000", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xC1B004", Offset = "0xC1B004", VA = "0xC1B004", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xC1B1E8", Offset = "0xC1B1E8", VA = "0xC1B1E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Subtitler Instance;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro text;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine writeCoroutine;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject subtitles;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform subtitlesTransform;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool rightHand;

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xC1AB78", Offset = "0xC1AB78", VA = "0xC1AB78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xC1ACBC", Offset = "0xC1ACBC", VA = "0xC1ACBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xC1ADD4", Offset = "0xC1ADD4", VA = "0xC1ADD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xC1AE4C", Offset = "0xC1AE4C", VA = "0xC1AE4C")]
	private void WriteInternal(string key)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xC1AEFC", Offset = "0xC1AEFC", VA = "0xC1AEFC")]
	[IteratorStateMachine(typeof(<WriteCoroutine>d__10))]
	private IEnumerator WriteCoroutine(string stext)
	{
		return null;
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xC1ACC0", Offset = "0xC1ACC0", VA = "0xC1ACC0")]
	private void UpdateSubtitler()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xC17D48", Offset = "0xC17D48", VA = "0xC17D48")]
	public static void Write(string key)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xC1AF98", Offset = "0xC1AF98", VA = "0xC1AF98")]
	public Subtitler()
	{
	}
}
[Token(Token = "0x2000289")]
public class TextSettings : MonoBehaviour
{
	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xC1B230", Offset = "0xC1B230", VA = "0xC1B230")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xC1B234", Offset = "0xC1B234", VA = "0xC1B234")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xC1B238", Offset = "0xC1B238", VA = "0xC1B238")]
	public TextSettings()
	{
	}
}
[Token(Token = "0x200028A")]
public class ThiefPoliceController : CommonCharacterController
{
	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public AimIK aimIK;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public AimController aimController;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public WeaponData weaponData;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Skill.SkillLevel skillLevel;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Skill.SkillLevel coverSkillLevel;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool isPolice;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	public bool immortal;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
	private bool isRunning;

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xC1B240", Offset = "0xC1B240", VA = "0xC1B240")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xC1B2EC", Offset = "0xC1B2EC", VA = "0xC1B2EC", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xC1B82C", Offset = "0xC1B82C", VA = "0xC1B82C", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xC1B930", Offset = "0xC1B930", VA = "0xC1B930", Slot = "12")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit, Collider collider, bool bRemote = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xC1BFD8", Offset = "0xC1BFD8", VA = "0xC1BFD8")]
	public void showWeaponTakeable(WeaponTakeable.BonusType bonusType, WeaponModel weaponModel)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xC1C3E4", Offset = "0xC1C3E4", VA = "0xC1C3E4", Slot = "10")]
	public override void AimToggle(bool state, bool setRootMotion = true)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xC1C458", Offset = "0xC1C458", VA = "0xC1C458", Slot = "14")]
	public override void setWeaponStateRunning(bool state)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xC1C480", Offset = "0xC1C480", VA = "0xC1C480")]
	public void setCoverSkillLevel(Skill.SkillLevel coverSkillLevel)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xC1C488", Offset = "0xC1C488", VA = "0xC1C488")]
	public Skill.SkillLevel getCoverSkillLevel()
	{
		return default(Skill.SkillLevel);
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xC1C490", Offset = "0xC1C490", VA = "0xC1C490")]
	public void cover(bool cover)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xC1C5EC", Offset = "0xC1C5EC", VA = "0xC1C5EC")]
	public void setTarget(Vector3 target)
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xC1C7E0", Offset = "0xC1C7E0", VA = "0xC1C7E0")]
	public ThiefPoliceController()
	{
	}
}
[Token(Token = "0x200028B")]
public class TimeScreen : MonoBehaviour
{
	[Token(Token = "0x200028C")]
	[CompilerGenerated]
	private sealed class <showCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeScreen <>4__this;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool bShowTime;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0xC1D30C", Offset = "0xC1D30C", VA = "0xC1D30C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0xC1D354", Offset = "0xC1D354", VA = "0xC1D354", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xC1CF24", Offset = "0xC1CF24", VA = "0xC1CF24")]
		[DebuggerHidden]
		public <showCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xC1D138", Offset = "0xC1D138", VA = "0xC1D138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xC1D13C", Offset = "0xC1D13C", VA = "0xC1D13C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xC1D314", Offset = "0xC1D314", VA = "0xC1D314", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200028D")]
	[CompilerGenerated]
	private sealed class <hideCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeScreen <>4__this;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0xC1D520", Offset = "0xC1D520", VA = "0xC1D520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xC1D568", Offset = "0xC1D568", VA = "0xC1D568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xC1D0A0", Offset = "0xC1D0A0", VA = "0xC1D0A0")]
		[DebuggerHidden]
		public <hideCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xC1D35C", Offset = "0xC1D35C", VA = "0xC1D35C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xC1D360", Offset = "0xC1D360", VA = "0xC1D360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xC1D528", Offset = "0xC1D528", VA = "0xC1D528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentTime;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro text;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material plane;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material time;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TimeScreen Instance;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int defaultCameraCullingMask;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int[] timeSplit;

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xC1C838", Offset = "0xC1C838", VA = "0xC1C838")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xC1C96C", Offset = "0xC1C96C", VA = "0xC1C96C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xC1CA0C", Offset = "0xC1CA0C", VA = "0xC1CA0C")]
	private void updateTime()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xC1CD88", Offset = "0xC1CD88", VA = "0xC1CD88")]
	public static string parseTime(int i)
	{
		return null;
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xC1CE14", Offset = "0xC1CE14", VA = "0xC1CE14")]
	public void show(bool bShowTime, bool bFade)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xC1CEA8", Offset = "0xC1CEA8", VA = "0xC1CEA8")]
	[IteratorStateMachine(typeof(<showCoroutine>d__11))]
	private IEnumerator showCoroutine(bool bShowTime)
	{
		return null;
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xC1CC14", Offset = "0xC1CC14", VA = "0xC1CC14")]
	public static int[] getTimeSplit(float time)
	{
		return null;
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xC1CF4C", Offset = "0xC1CF4C", VA = "0xC1CF4C")]
	public void hide()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xC1D038", Offset = "0xC1D038", VA = "0xC1D038")]
	[IteratorStateMachine(typeof(<hideCoroutine>d__15))]
	private IEnumerator hideCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xC1D0C8", Offset = "0xC1D0C8", VA = "0xC1D0C8")]
	public TimeScreen()
	{
	}
}
[Token(Token = "0x200028E")]
public class TriggerTest : MonoBehaviour
{
	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xC1D570", Offset = "0xC1D570", VA = "0xC1D570")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xC1D574", Offset = "0xC1D574", VA = "0xC1D574")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xC1D578", Offset = "0xC1D578", VA = "0xC1D578")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xC1D664", Offset = "0xC1D664", VA = "0xC1D664")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xC1D750", Offset = "0xC1D750", VA = "0xC1D750")]
	public TriggerTest()
	{
	}
}
[Token(Token = "0x200028F")]
public class DummyTrophyManager : TrophyManager
{
	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xC1D758", Offset = "0xC1D758", VA = "0xC1D758")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xC1D7F0", Offset = "0xC1D7F0", VA = "0xC1D7F0")]
	public DummyTrophyManager()
	{
	}
}
[Token(Token = "0x2000290")]
public class SteamTrophyManager : TrophyManager
{
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Trophy> unlockedTrophies;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool initialized;

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xC1D800", Offset = "0xC1D800", VA = "0xC1D800")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xC1D898", Offset = "0xC1D898", VA = "0xC1D898")]
	private void setTrophyUnlocked()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xC1D89C", Offset = "0xC1D89C", VA = "0xC1D89C", Slot = "4")]
	public override void UnlockTrophy(Trophy trophy)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xC1D8A0", Offset = "0xC1D8A0", VA = "0xC1D8A0")]
	public SteamTrophyManager()
	{
	}
}
[Token(Token = "0x2000291")]
public class TrophyManager : MonoBehaviour
{
	[Token(Token = "0x2000292")]
	public enum Trophy
	{
		[Token(Token = "0x4000CC8")]
		FirstShot,
		[Token(Token = "0x4000CC9")]
		FirstHeadshot,
		[Token(Token = "0x4000CCA")]
		FirstSceneCompleted,
		[Token(Token = "0x4000CCB")]
		KillBuddie,
		[Token(Token = "0x4000CCC")]
		FirstShotBonusWeapon,
		[Token(Token = "0x4000CCD")]
		FirstHeadshotSlowMotion,
		[Token(Token = "0x4000CCE")]
		BombsExploded,
		[Token(Token = "0x4000CCF")]
		Gameplay100,
		[Token(Token = "0x4000CD0")]
		AllHostageAlive,
		[Token(Token = "0x4000CD1")]
		Headshots1000,
		[Token(Token = "0x4000CD2")]
		MissionAccomplished,
		[Token(Token = "0x4000CD3")]
		MissionAccomplishedHellMode
	}

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TrophyManager Instance;

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xC1D91C", Offset = "0xC1D91C", VA = "0xC1D91C", Slot = "4")]
	public virtual void UnlockTrophy(Trophy trophy)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xC1D7F8", Offset = "0xC1D7F8", VA = "0xC1D7F8")]
	public TrophyManager()
	{
	}
}
[Token(Token = "0x2000293")]
public class WalkieTalkie : MonoBehaviour
{
	[Token(Token = "0x2000294")]
	public enum CommunicationEvent
	{
		[Token(Token = "0x4000CE2")]
		alone,
		[Token(Token = "0x4000CE3")]
		ammo,
		[Token(Token = "0x4000CE4")]
		barrel_expl,
		[Token(Token = "0x4000CE5")]
		careful_bombs,
		[Token(Token = "0x4000CE6")]
		careful_hostages,
		[Token(Token = "0x4000CE7")]
		full_ammo,
		[Token(Token = "0x4000CE8")]
		gallery_badscore,
		[Token(Token = "0x4000CE9")]
		gallery_book,
		[Token(Token = "0x4000CEA")]
		gallery_goodscore,
		[Token(Token = "0x4000CEB")]
		gallery_headphone,
		[Token(Token = "0x4000CEC")]
		gallery_newrecord,
		[Token(Token = "0x4000CED")]
		gallery_phone,
		[Token(Token = "0x4000CEE")]
		gallery_radio,
		[Token(Token = "0x4000CEF")]
		gallery_random,
		[Token(Token = "0x4000CF0")]
		game_over,
		[Token(Token = "0x4000CF1")]
		headshot,
		[Token(Token = "0x4000CF2")]
		hit_comp,
		[Token(Token = "0x4000CF3")]
		hit_player,
		[Token(Token = "0x4000CF4")]
		items_extra_life,
		[Token(Token = "0x4000CF5")]
		items_time,
		[Token(Token = "0x4000CF6")]
		items_weapon,
		[Token(Token = "0x4000CF7")]
		kill_comp,
		[Token(Token = "0x4000CF8")]
		kill_comp_male,
		[Token(Token = "0x4000CF9")]
		kill_comp_female,
		[Token(Token = "0x4000CFA")]
		last_enemy,
		[Token(Token = "0x4000CFB")]
		last_life,
		[Token(Token = "0x4000CFC")]
		menu_bank,
		[Token(Token = "0x4000CFD")]
		menu_gallery,
		[Token(Token = "0x4000CFE")]
		menu_hell,
		[Token(Token = "0x4000CFF")]
		menu_office,
		[Token(Token = "0x4000D00")]
		menu_officelocked,
		[Token(Token = "0x4000D01")]
		menu_officeunlocked,
		[Token(Token = "0x4000D02")]
		menu_port,
		[Token(Token = "0x4000D03")]
		menu_portlocked,
		[Token(Token = "0x4000D04")]
		menu_portunlocked,
		[Token(Token = "0x4000D05")]
		menu_welcome,
		[Token(Token = "0x4000D06")]
		mission_bank_clown,
		[Token(Token = "0x4000D07")]
		mission_bank_fox,
		[Token(Token = "0x4000D08")]
		mission_bank_gasmask,
		[Token(Token = "0x4000D09")]
		mission_bank_horse,
		[Token(Token = "0x4000D0A")]
		mission_bank_hostagebomb,
		[Token(Token = "0x4000D0B")]
		mission_bank_trump,
		[Token(Token = "0x4000D0C")]
		mission_port_3missiles,
		[Token(Token = "0x4000D0D")]
		mission_port_bazooka,
		[Token(Token = "0x4000D0E")]
		mission_port_crane,
		[Token(Token = "0x4000D0F")]
		mission_port_enemybazooka,
		[Token(Token = "0x4000D10")]
		mission_port_gameovertime,
		[Token(Token = "0x4000D11")]
		mission_port_helicopter,
		[Token(Token = "0x4000D12")]
		mission_port_persecution,
		[Token(Token = "0x4000D13")]
		mission_office_killtromp,
		[Token(Token = "0x4000D14")]
		mission_office_rooftop,
		[Token(Token = "0x4000D15")]
		mission_office_spoon,
		[Token(Token = "0x4000D16")]
		mission_office_touch_this,
		[Token(Token = "0x4000D17")]
		next_area,
		[Token(Token = "0x4000D18")]
		no_aim,
		[Token(Token = "0x4000D19")]
		no_aim_menu,
		[Token(Token = "0x4000D1A")]
		not_shooting,
		[Token(Token = "0x4000D1B")]
		time_bank,
		[Token(Token = "0x4000D1C")]
		time_port
	}

	[Token(Token = "0x2000295")]
	private class CommunicationEventData
	{
		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AudioClip[] clips;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int currentClip;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int priority;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool repeat;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float reproduceProbability;

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xC1E3F0", Offset = "0xC1E3F0", VA = "0xC1E3F0")]
		public CommunicationEventData(AudioClip[] clips, int priority, bool repeat, float reproduceProbability)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xC1E0A0", Offset = "0xC1E0A0", VA = "0xC1E0A0")]
		public AudioClip getClip()
		{
			return null;
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xC1E26C", Offset = "0xC1E26C", VA = "0xC1E26C")]
		public AudioClip getClip(string clipName)
		{
			return null;
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xC1DFAC", Offset = "0xC1DFAC", VA = "0xC1DFAC")]
		public bool higher(CommunicationEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xC1DFCC", Offset = "0xC1DFCC", VA = "0xC1DFCC")]
		public bool isPlayable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xC1E444", Offset = "0xC1E444", VA = "0xC1E444")]
		private void RandomizeClips()
		{
		}
	}

	[Token(Token = "0x2000296")]
	[CompilerGenerated]
	private sealed class <loadClipsCoroutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WalkieTalkie <>4__this;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LocalizationManager.Language language;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <counter>5__2;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] <soundsData>5__3;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <soundsPath>5__4;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__5;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0xC1E988", Offset = "0xC1E988", VA = "0xC1E988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0xC1E9D0", Offset = "0xC1E9D0", VA = "0xC1E9D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xC1DE70", Offset = "0xC1DE70", VA = "0xC1DE70")]
		[DebuggerHidden]
		public <loadClipsCoroutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xC1E5A0", Offset = "0xC1E5A0", VA = "0xC1E5A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xC1E5A4", Offset = "0xC1E5A4", VA = "0xC1E5A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xC1E990", Offset = "0xC1E990", VA = "0xC1E990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000297")]
	[CompilerGenerated]
	private sealed class <PlayCoroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WalkieTalkie <>4__this;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip clip;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0xC1EC78", Offset = "0xC1EC78", VA = "0xC1EC78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0xC1ECC0", Offset = "0xC1ECC0", VA = "0xC1ECC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xC1E34C", Offset = "0xC1E34C", VA = "0xC1E34C")]
		[DebuggerHidden]
		public <PlayCoroutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xC1E9D8", Offset = "0xC1E9D8", VA = "0xC1E9D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xC1E9DC", Offset = "0xC1E9DC", VA = "0xC1E9DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xC1EC80", Offset = "0xC1EC80", VA = "0xC1EC80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD4")]
	private const string SOUNDS_PATH = "WalkieTalkieSounds";

	[Token(Token = "0x4000CD5")]
	private const string SLASH = "/";

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool mute;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset metadata;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WalkieTalkie Instance;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip startCommunication;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip endCommuncation;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audioSource;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<CommunicationEvent, CommunicationEventData> communicationEvents;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommunicationEventData currentCommunicationEventData;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine playCoroutineHandle;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool subtitlesEnable;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool walkieTalkieEnabled;

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xC1D920", Offset = "0xC1D920", VA = "0xC1D920")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xC1DB28", Offset = "0xC1DB28", VA = "0xC1DB28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xC1DC2C", Offset = "0xC1DC2C", VA = "0xC1DC2C")]
	public void SetState(bool enable)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xC1DD30", Offset = "0xC1DD30", VA = "0xC1DD30")]
	public bool IsEnable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xC1DD38", Offset = "0xC1DD38", VA = "0xC1DD38")]
	public void ForceStop()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xC1DC40", Offset = "0xC1DC40", VA = "0xC1DC40")]
	public void loadClips()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xC1DDF8", Offset = "0xC1DDF8", VA = "0xC1DDF8")]
	[IteratorStateMachine(typeof(<loadClipsCoroutine>d__20))]
	private IEnumerator loadClipsCoroutine(LocalizationManager.Language language)
	{
		return null;
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xC1DE98", Offset = "0xC1DE98", VA = "0xC1DE98")]
	private string getSoundsPath(LocalizationManager.Language language)
	{
		return null;
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xC1BDD0", Offset = "0xC1BDD0", VA = "0xC1BDD0")]
	public void Play(CommunicationEvent communicationEvent)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xC1E178", Offset = "0xC1E178", VA = "0xC1E178")]
	private void communication()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xC1E180", Offset = "0xC1E180", VA = "0xC1E180")]
	public void PlayTime(CommunicationEvent communicationEvent, string minute)
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xC1E30C", Offset = "0xC1E30C", VA = "0xC1E30C")]
	private AudioClip getClip(AudioClip[] clips)
	{
		return null;
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xC1E104", Offset = "0xC1E104", VA = "0xC1E104")]
	[IteratorStateMachine(typeof(<PlayCoroutine>d__26))]
	private IEnumerator PlayCoroutine(AudioClip clip)
	{
		return null;
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xC1E374", Offset = "0xC1E374", VA = "0xC1E374")]
	public WalkieTalkie()
	{
	}
}
[Token(Token = "0x2000298")]
public class Waypoint : MonoBehaviour
{
	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceToNextWayPoint;

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xC1ECC8", Offset = "0xC1ECC8", VA = "0xC1ECC8")]
	public Waypoint()
	{
	}
}
[Token(Token = "0x2000299")]
public class WeaponSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WeaponSwitcher Instance;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public WeaponModel currentWeapon;

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xC1ECD0", Offset = "0xC1ECD0", VA = "0xC1ECD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xC1ED28", Offset = "0xC1ED28", VA = "0xC1ED28")]
	public WeaponSwitcher()
	{
	}
}
[Token(Token = "0x200029A")]
public class WeaponTakeable : HitTarget
{
	[Token(Token = "0x200029B")]
	public enum BonusType
	{
		[Token(Token = "0x4000D45")]
		weapon,
		[Token(Token = "0x4000D46")]
		life,
		[Token(Token = "0x4000D47")]
		bulletTime
	}

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float WEAPON_TAKEABLE_PROBABILITY;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int MAX_LIFES;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool disableWeapons;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static SumalabEvent OnBulletTime;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_tube;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_weapon;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Weapon weapon;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float s_bonusProbability;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float s_lifeProbability;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BonusType bonusType;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool showIconAlways;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float takeableTime;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public WeaponModel weaponModel;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool exclusive;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool exclusiveUsed;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool onlinePermanent;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool onlinePermanentFixed;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 onlinePermanentDeltaPosition;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool allowOnDisabledWeapons;

	[Token(Token = "0x170000DB")]
	protected static float TAKE_WEAPON_DURATION
	{
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xC1ED38", Offset = "0xC1ED38", VA = "0xC1ED38")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xC1ED58", Offset = "0xC1ED58", VA = "0xC1ED58", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xC1FF14", Offset = "0xC1FF14", VA = "0xC1FF14")]
	public void hideWeaponIcon()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xC1F1E8", Offset = "0xC1F1E8", VA = "0xC1F1E8")]
	public void OnHitImpl()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xC202A0", Offset = "0xC202A0", VA = "0xC202A0")]
	private void catchBonus(Transform go, Transform destination)
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xC1BEC4", Offset = "0xC1BEC4", VA = "0xC1BEC4")]
	public bool activate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xC204B0", Offset = "0xC204B0", VA = "0xC204B0")]
	private bool prepareWeaponIcon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xC20B40", Offset = "0xC20B40", VA = "0xC20B40")]
	public bool isWeaponAcceptable(WeaponModel weaponModel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xC1C0A8", Offset = "0xC1C0A8", VA = "0xC1C0A8")]
	public void activate(BonusType bonusType, WeaponModel weaponModel, int currentBullets = -1)
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xC20C8C", Offset = "0xC20C8C", VA = "0xC20C8C")]
	private void showWeaponIcon()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xC20BE8", Offset = "0xC20BE8", VA = "0xC20BE8")]
	private bool twoHandsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xC20E34", Offset = "0xC20E34", VA = "0xC20E34")]
	public WeaponTakeable()
	{
	}
}
[Token(Token = "0x200029E")]
public class InfoBubble : MonoBehaviour
{
	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 WobbleAxis;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float WobbleFrequency;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WobbleAmplitude;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform TrackTarget;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startOffsetTarget;

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xC21124", Offset = "0xC21124", VA = "0xC21124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xC2118C", Offset = "0xC2118C", VA = "0xC2118C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xC21258", Offset = "0xC21258", VA = "0xC21258")]
	public InfoBubble()
	{
	}
}
[Token(Token = "0x200029F")]
public class RuntimeDecalCombiner
{
	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xC212C4", Offset = "0xC212C4", VA = "0xC212C4")]
	public static List<GameObject> Combine(IList<EasyDecal> decals)
	{
		return null;
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xC21788", Offset = "0xC21788", VA = "0xC21788")]
	private static List<GameObject> Combine(Dictionary<DecalTextureAtlas, List<EasyDecal>> mappings)
	{
		return null;
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xC21D30", Offset = "0xC21D30", VA = "0xC21D30")]
	private static GameObject Combine(IList<EasyDecal> decals, DecalTextureAtlas atlas)
	{
		return null;
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xC222B4", Offset = "0xC222B4", VA = "0xC222B4")]
	public RuntimeDecalCombiner()
	{
	}
}
[Token(Token = "0x20002A0")]
public class SparksExecutioner : MonoBehaviour
{
	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Lifetime;

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xC222BC", Offset = "0xC222BC", VA = "0xC222BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xC2230C", Offset = "0xC2230C", VA = "0xC2230C")]
	private void Kill()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xC22378", Offset = "0xC22378", VA = "0xC22378")]
	public SparksExecutioner()
	{
	}
}
[Token(Token = "0x20002A1")]
public class ButtonAnimator : MonoBehaviour
{
	[Token(Token = "0x20002A2")]
	public delegate void PhysicalHandsOnHoldButtonPressed(bool state);

	[Token(Token = "0x20002A3")]
	private class ButtonData
	{
		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform button;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButtonInputs buttonInput;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 initialPosition;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 pressedPosition;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimatedElementData[] animatedElements;

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xC24480", Offset = "0xC24480", VA = "0xC24480")]
		public ButtonData()
		{
		}
	}

	[Token(Token = "0x20002A4")]
	private class AnimatedElementData
	{
		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 initRotation;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 deltaRotation;

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xC24488", Offset = "0xC24488", VA = "0xC24488")]
		public AnimatedElementData()
		{
		}
	}

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ButtonData[] positionAnimatedButtons;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ButtonData[] rotationAnimatedButtons;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ButtonData[] stickButtons;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TutorialHelper tutorialHelper;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform elements;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform buttons;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform buttonsPressed;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform elementsPressed;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NVRHand Hand;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody Rigidbody;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SphereCollider triggerCollider;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material sphereTriggerMaterial;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material spherePhysicalMaterial;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool CollisionsEnabled;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float HoldButtonPressedDuration;

	[Token(Token = "0x14000011")]
	public static event PhysicalHandsOnHoldButtonPressed OnPhysicalHandChanged
	{
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xC22388", Offset = "0xC22388", VA = "0xC22388")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xC22440", Offset = "0xC22440", VA = "0xC22440")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xC224F8", Offset = "0xC224F8", VA = "0xC224F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xC22938", Offset = "0xC22938", VA = "0xC22938")]
	public void Initialize(NVRHand hand, GameObject model)
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xC22F84", Offset = "0xC22F84", VA = "0xC22F84")]
	private void setSteamVR_ViveButtons(GameObject model, NVRHand hand)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xC22C7C", Offset = "0xC22C7C", VA = "0xC22C7C")]
	private void setSteamVR_WindowsMRButtons(GameObject model, NVRHand hand)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xC2325C", Offset = "0xC2325C", VA = "0xC2325C")]
	private void setOculusButtons(GameObject model, NVRHand hand)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xC2369C", Offset = "0xC2369C", VA = "0xC2369C")]
	private void setPSMoveButtons(GameObject model, NVRHand hand)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xC23908", Offset = "0xC23908", VA = "0xC23908")]
	private void setDualshockButtons(GameObject model, NVRHand hand)
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xC242B8", Offset = "0xC242B8", VA = "0xC242B8")]
	private ButtonData createPositionButtonData(NVRButtonInputs buttonInput, string buttonName)
	{
		return null;
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xC23E18", Offset = "0xC23E18", VA = "0xC23E18")]
	private ButtonData createRotationButtonData(NVRButtonInputs buttonInput, string buttonName)
	{
		return null;
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xC2438C", Offset = "0xC2438C", VA = "0xC2438C")]
	private ButtonData createStickButtonData(NVRButtonInputs buttonInput, string buttonName, Vector2 direction)
	{
		return null;
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xC243E8", Offset = "0xC243E8", VA = "0xC243E8")]
	private ButtonData createButtonData(NVRButtonInputs buttonInput, string buttonName)
	{
		return null;
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xC23EEC", Offset = "0xC23EEC", VA = "0xC23EEC")]
	private AnimatedElementData[] GetTriggerAnimatedElementsData()
	{
		return null;
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xC24490", Offset = "0xC24490", VA = "0xC24490")]
	private Vector3 getDeltaRotation(Vector3 initialRotation, Vector3 finalRotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xC24534", Offset = "0xC24534", VA = "0xC24534")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xC24620", Offset = "0xC24620", VA = "0xC24620")]
	private void UpdateHandMode()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xC2283C", Offset = "0xC2283C", VA = "0xC2283C")]
	public void detectCollisions(bool detectCollisions)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xC2454C", Offset = "0xC2454C", VA = "0xC2454C")]
	private void UpdateButtons()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xC24780", Offset = "0xC24780", VA = "0xC24780")]
	private void updateButtonRotation(ButtonData buttonData)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xC249C0", Offset = "0xC249C0", VA = "0xC249C0")]
	private void updateButtonPosition(ButtonData buttonData)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xC24A44", Offset = "0xC24A44", VA = "0xC24A44")]
	private void updateStickButton(ButtonData buttonData)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xC24AFC", Offset = "0xC24AFC", VA = "0xC24AFC")]
	public ButtonAnimator()
	{
	}
}
[Token(Token = "0x20002A5")]
public class CustomNVRHand : NVRHand
{
	[Token(Token = "0x20002A6")]
	public delegate void HandInitializedEvent(NVRHand hand);

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public NVRTeleportPointer teleportPointer;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float pressedDuration;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float RESET_POSITION_DURATION;

	[Token(Token = "0x14000012")]
	public static event HandInitializedEvent OnHandInitialized
	{
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xC24C74", Offset = "0xC24C74", VA = "0xC24C74")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xC24D4C", Offset = "0xC24D4C", VA = "0xC24D4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xC24E24", Offset = "0xC24E24", VA = "0xC24E24", Slot = "16")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xC24F10", Offset = "0xC24F10", VA = "0xC24F10")]
	public Transform getTeleportPointer()
	{
		return null;
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xC24F8C", Offset = "0xC24F8C", VA = "0xC24F8C", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xC2504C", Offset = "0xC2504C", VA = "0xC2504C")]
	private bool recenterButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xC250E8", Offset = "0xC250E8", VA = "0xC250E8")]
	public CustomNVRHand()
	{
	}
}
[Token(Token = "0x20002A7")]
public static class ExtensionMethods
{
	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xC207CC", Offset = "0xC207CC", VA = "0xC207CC")]
	public static Transform FindDeepChild(this Transform aParent, string aName)
	{
		return null;
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xC1FFA8", Offset = "0xC1FFA8", VA = "0xC1FFA8")]
	public static void SetLayerRecursively(this GameObject obj, int layer)
	{
	}
}
[Token(Token = "0x20002A8")]
[ExecuteInEditMode]
public class RenderDepth : MonoBehaviour
{
	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xC252F8", Offset = "0xC252F8", VA = "0xC252F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xC25354", Offset = "0xC25354", VA = "0xC25354")]
	public RenderDepth()
	{
	}
}
[Token(Token = "0x20002A9")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float deltaTime;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro textMesh;

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xC2535C", Offset = "0xC2535C", VA = "0xC2535C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xC25388", Offset = "0xC25388", VA = "0xC25388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xC25490", Offset = "0xC25490", VA = "0xC25490")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x20002AA")]
public class LinePainter : MonoBehaviour
{
	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int segmentCount;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[Tooltip("Value with scale 1")]
	private float thickness;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The amount of time in seconds to predict the motion of the projectile.")]
	public float arcDuration;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("The amount of time in seconds between each segment of the projectile.")]
	public float segmentBreak;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The speed at which the line segments of the arc move.")]
	public float arcSpeed;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public int traceLayerMask;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer[] lineRenderers;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float arcTimeOffset;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float prevThickness;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int prevSegmentCount;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool showArc;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 startPos;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 endPos;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 curvePos;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 projectileVelocity;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool useGravity;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform arcObjectsTransfrom;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool arcInvalid;

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xC25498", Offset = "0xC25498", VA = "0xC25498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xC254B4", Offset = "0xC254B4", VA = "0xC254B4")]
	private void CreateLineRendererObjects()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xC25948", Offset = "0xC25948", VA = "0xC25948")]
	public void SetArcData(Vector3 startPosition, Vector3 endPosition)
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xC259DC", Offset = "0xC259DC", VA = "0xC259DC")]
	public void SetArcData(Vector3 startPosition, Vector3 endPosition, Vector3 curvePosition)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xC259FC", Offset = "0xC259FC", VA = "0xC259FC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xC25A14", Offset = "0xC25A14", VA = "0xC25A14")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xC25AB0", Offset = "0xC25AB0", VA = "0xC25AB0")]
	public bool DrawArc()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xC25F78", Offset = "0xC25F78", VA = "0xC25F78")]
	private void DrawArcSegment(int index, float startTime, float endTime)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xC26058", Offset = "0xC26058", VA = "0xC26058")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xC25CB4", Offset = "0xC25CB4", VA = "0xC25CB4")]
	private float FindProjectileCollision()
	{
		return default(float);
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xC25E48", Offset = "0xC25E48", VA = "0xC25E48")]
	public Vector3 GetArcPositionAtTime(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xC25A40", Offset = "0xC25A40", VA = "0xC25A40")]
	private void HideLineSegments(int startSegment, int endSegment)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xC26128", Offset = "0xC26128", VA = "0xC26128")]
	public LinePainter()
	{
	}
}
[Token(Token = "0x20002AB")]
public class LoadingTextAnimation : MonoBehaviour
{
	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xC261A4", Offset = "0xC261A4", VA = "0xC261A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xC26370", Offset = "0xC26370", VA = "0xC26370")]
	public LoadingTextAnimation()
	{
	}
}
[Token(Token = "0x20002AC")]
public class LookAt : MonoBehaviour
{
	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool headLookAt;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToLookAt;

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xC26378", Offset = "0xC26378", VA = "0xC26378")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xC263F4", Offset = "0xC263F4", VA = "0xC263F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xC264A8", Offset = "0xC264A8", VA = "0xC264A8")]
	public LookAt()
	{
	}
}
[Token(Token = "0x20002AD")]
public class NVRManager : MonoBehaviour
{
	[Token(Token = "0x20002AE")]
	[CompilerGenerated]
	private sealed class <loadSceneCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRManager <>4__this;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x170000DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xC26B80", Offset = "0xC26B80", VA = "0xC26B80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0xC26BC8", Offset = "0xC26BC8", VA = "0xC26BC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xC267A8", Offset = "0xC267A8", VA = "0xC267A8")]
		[DebuggerHidden]
		public <loadSceneCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xC26A98", Offset = "0xC26A98", VA = "0xC26A98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xC26A9C", Offset = "0xC26A9C", VA = "0xC26A9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xC26B88", Offset = "0xC26B88", VA = "0xC26B88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AF")]
	[CompilerGenerated]
	private sealed class <enableReprojectionCameraCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool enable;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRManager <>4__this;

		[Token(Token = "0x170000DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0xC26D50", Offset = "0xC26D50", VA = "0xC26D50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0xC26D98", Offset = "0xC26D98", VA = "0xC26D98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xC267D0", Offset = "0xC267D0", VA = "0xC267D0")]
		[DebuggerHidden]
		public <enableReprojectionCameraCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xC26BD0", Offset = "0xC26BD0", VA = "0xC26BD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xC26BD4", Offset = "0xC26BD4", VA = "0xC26BD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xC26D58", Offset = "0xC26D58", VA = "0xC26D58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NVRManager Instance;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject game;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera reprojectionCamera;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine reprojectionCameraCoroutine;

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xC264B0", Offset = "0xC264B0", VA = "0xC264B0")]
	public void enableReprojectionCamera(bool enable, float seconds = 0f)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xC26714", Offset = "0xC26714", VA = "0xC26714")]
	public void loadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xC26734", Offset = "0xC26734", VA = "0xC26734")]
	[IteratorStateMachine(typeof(<loadSceneCoroutine>d__6))]
	private IEnumerator loadSceneCoroutine(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xC26688", Offset = "0xC26688", VA = "0xC26688")]
	[IteratorStateMachine(typeof(<enableReprojectionCameraCoroutine>d__7))]
	private IEnumerator enableReprojectionCameraCoroutine(bool enable, float seconds = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xC267F8", Offset = "0xC267F8", VA = "0xC267F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xC26A5C", Offset = "0xC26A5C", VA = "0xC26A5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xC26A90", Offset = "0xC26A90", VA = "0xC26A90")]
	public NVRManager()
	{
	}
}
[Token(Token = "0x20002B0")]
public class NVRRenderModelManager : MonoBehaviour
{
	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NVRRenderModelType DefaultRenderModelType;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<NVRRenderModel> GenericRenderModels;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<NVRRenderModel> OculusRenderModels;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<NVRRenderModel> WindowsMRRenderModels;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<NVRRenderModel> ViveRenderModels;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<NVRRenderModel> PSVRRenderModels;

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xC26DA0", Offset = "0xC26DA0", VA = "0xC26DA0")]
	public NVRRenderModelManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B1")]
public struct NVRRenderModel
{
	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NVRRenderModelType Type;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject LeftHand;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject RightHand;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PhysicalLeftHand;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PhysicalRightHand;
}
[Token(Token = "0x20002B2")]
public enum NVRRenderModelType
{
	[Token(Token = "0x4000D9E")]
	Gamepad,
	[Token(Token = "0x4000D9F")]
	AlternativeGamepad,
	[Token(Token = "0x4000DA0")]
	Hand,
	[Token(Token = "0x4000DA1")]
	None
}
[Token(Token = "0x20002B3")]
public class NVRRotater : MonoBehaviour
{
	[Token(Token = "0x20002B4")]
	private enum RotationState
	{
		[Token(Token = "0x4000DA6")]
		none,
		[Token(Token = "0x4000DA7")]
		left,
		[Token(Token = "0x4000DA8")]
		right,
		[Token(Token = "0x4000DA9")]
		up,
		[Token(Token = "0x4000DAA")]
		down,
		[Token(Token = "0x4000DAB")]
		panright,
		[Token(Token = "0x4000DAC")]
		panleft
	}

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RotationState[] m_rotationState;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NVRPlayer m_player;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float deltaRotation;

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xC26DA8", Offset = "0xC26DA8", VA = "0xC26DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xC26DF8", Offset = "0xC26DF8", VA = "0xC26DF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xC26FB0", Offset = "0xC26FB0", VA = "0xC26FB0")]
	private RotationState GetRotationState()
	{
		return default(RotationState);
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xC275F8", Offset = "0xC275F8", VA = "0xC275F8")]
	public NVRRotater()
	{
	}
}
[Token(Token = "0x20002B5")]
public class NVRTeleporter : MonoBehaviour
{
	[Token(Token = "0x4000DAD")]
	protected const float BEAM_ADJUST_OFFSET = 0.0001f;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The valid teleport position color.")]
	public Color validCollisionColor;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The invalid teleport position color.")]
	public Color invalidCollisionColor;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Tooltip("The maximum length the pointer tracer can reach (value with scale 1)")]
	private float maximumLength;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("The scale factor to scale the pointer tracer object by.")]
	public float scaleFactor;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The scale multiplier to scale the pointer cursor object by in relation to the `Scale Factor`.")]
	public float cursorScaleMultiplier;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The cursor will be rotated to match the angle of the target surface if this is true, if it is false then the pointer cursor will always be horizontal.")]
	public bool cursorMatchTargetRotation;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	[Tooltip("Rescale the cursor proportionally to the distance from the tracer origin.")]
	public bool cursorDistanceRescale;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The maximum scale the cursor is allowed to reach. This is only used when rescaling the cursor proportionally to the distance from the tracer origin.")]
	public Vector3 maximumCursorScale;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("The layers to ignore by the pointer.")]
	public LayerMask layersToAccept;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_cursor;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject m_tracer;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject m_pointer;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NVRPlayer m_player;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NVRHand m_currentHand;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform m_currentTeleportPointer;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 m_cursorOriginalScale;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color m_previusColor;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private NVRTeleportArc teleportArc;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private NVRTeleportableIF currentTeleportableObj;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private NVRTeleportableIF exitTeleporterAction;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool actionExecuted;

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xC27658", Offset = "0xC27658", VA = "0xC27658")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xC27888", Offset = "0xC27888", VA = "0xC27888")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xC2861C", Offset = "0xC2861C", VA = "0xC2861C")]
	private void hidePointer()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xC27BB8", Offset = "0xC27BB8", VA = "0xC27BB8")]
	private void showPointer()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xC27B58", Offset = "0xC27B58", VA = "0xC27B58")]
	private NVRHand checkHandActive()
	{
		return null;
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xC283FC", Offset = "0xC283FC", VA = "0xC283FC")]
	private void doTeleport(Vector3 endPoint)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xC27C50", Offset = "0xC27C50", VA = "0xC27C50")]
	private bool renderPointer(out Vector3 endPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xC288A0", Offset = "0xC288A0", VA = "0xC288A0", Slot = "4")]
	protected virtual void SetupMaterialRenderer(GameObject givenObject)
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xC27730", Offset = "0xC27730", VA = "0xC27730")]
	private void createPointer()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xC28ADC", Offset = "0xC28ADC", VA = "0xC28ADC")]
	private GameObject createTracer()
	{
		return null;
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xC289D0", Offset = "0xC289D0", VA = "0xC289D0")]
	private void createCursor()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xC286B4", Offset = "0xC286B4", VA = "0xC286B4")]
	private bool checkHandActive(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xC282D4", Offset = "0xC282D4", VA = "0xC282D4")]
	private bool checkHandInactive(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xC2884C", Offset = "0xC2884C", VA = "0xC2884C")]
	private void ChangeColor(Color givenColor)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xC28C2C", Offset = "0xC28C2C", VA = "0xC28C2C")]
	private void ChangeMaterial(Color givenColor)
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xC28D44", Offset = "0xC28D44", VA = "0xC28D44", Slot = "5")]
	protected virtual void SetGameObjectColor(GameObject cursorObject, Color color)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xC28EB8", Offset = "0xC28EB8", VA = "0xC28EB8", Slot = "6")]
	protected virtual void SetPointerAppearance(float tracerLength, RaycastHit destinationHit)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xC2942C", Offset = "0xC2942C", VA = "0xC2942C")]
	public NVRTeleporter()
	{
	}
}
[Token(Token = "0x20002B6")]
public interface NVRTeleportableIF
{
	[Token(Token = "0x6000CCE")]
	bool OnHoverEnter();

	[Token(Token = "0x6000CCF")]
	bool OnHoverExit();

	[Token(Token = "0x6000CD0")]
	bool OnTeleportEnter();

	[Token(Token = "0x6000CD1")]
	bool OnTeleportExit();
}
[Token(Token = "0x20002B7")]
public class NVRTeleportPointer : MonoBehaviour
{
	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xC2947C", Offset = "0xC2947C", VA = "0xC2947C")]
	public NVRTeleportPointer()
	{
	}
}
[Token(Token = "0x20002B8")]
public class Pool
{
	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject pooledObject;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool grow;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> pooledObjects;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int poolSize;

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xC29484", Offset = "0xC29484", VA = "0xC29484")]
	public void initialise(GameObject pooledObject, int poolSize, bool grow)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xC19364", Offset = "0xC19364", VA = "0xC19364")]
	public GameObject getPooledObject()
	{
		return null;
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xC295F8", Offset = "0xC295F8", VA = "0xC295F8")]
	public Pool()
	{
	}
}
[Token(Token = "0x20002B9")]
public class PoolManager : MonoBehaviour
{
	[Token(Token = "0x20002BA")]
	public enum PoolType
	{
		[Token(Token = "0x4000DCB")]
		Null,
		[Token(Token = "0x4000DCC")]
		BloodFx,
		[Token(Token = "0x4000DCD")]
		AimWeapon,
		[Token(Token = "0x4000DCE")]
		AK47,
		[Token(Token = "0x4000DCF")]
		M4,
		[Token(Token = "0x4000DD0")]
		SMG,
		[Token(Token = "0x4000DD1")]
		RPG,
		[Token(Token = "0x4000DD2")]
		RPGRocket,
		[Token(Token = "0x4000DD3")]
		Bullet,
		[Token(Token = "0x4000DD4")]
		WastedBulletS,
		[Token(Token = "0x4000DD5")]
		WastedBulletL,
		[Token(Token = "0x4000DD6")]
		SplinterS,
		[Token(Token = "0x4000DD7")]
		SplinterM,
		[Token(Token = "0x4000DD8")]
		Sparks,
		[Token(Token = "0x4000DD9")]
		Line,
		[Token(Token = "0x4000DDA")]
		Explosion,
		[Token(Token = "0x4000DDB")]
		Enemy,
		[Token(Token = "0x4000DDC")]
		TwoGlock,
		[Token(Token = "0x4000DDD")]
		DeadLine,
		[Token(Token = "0x4000DDE")]
		Glock,
		[Token(Token = "0x4000DDF")]
		ColumnHit,
		[Token(Token = "0x4000DE0")]
		WastedBulletMiniGun,
		[Token(Token = "0x4000DE1")]
		MinuGun
	}

	[Serializable]
	[Token(Token = "0x20002BB")]
	public class PoolData
	{
		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PoolType poolType;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject poolObject;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int poolSize;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool growable;

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xC297BC", Offset = "0xC297BC", VA = "0xC297BC")]
		public PoolData()
		{
		}
	}

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PoolData[] poolData;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PoolManager Instance;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<PoolType, Pool> pools;

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xC29608", Offset = "0xC29608", VA = "0xC29608")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xC1930C", Offset = "0xC1930C", VA = "0xC1930C")]
	public Pool getPool(PoolType poolType)
	{
		return null;
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xC29740", Offset = "0xC29740", VA = "0xC29740")]
	public PoolManager()
	{
	}
}
[Token(Token = "0x20002BC")]
public static class ResourceManager
{
	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, Texture> textures;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, Material> materials;

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xC297D0", Offset = "0xC297D0", VA = "0xC297D0")]
	public static Texture getTexture(string textureName)
	{
		return null;
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xC226C4", Offset = "0xC226C4", VA = "0xC226C4")]
	public static Material getMaterial(string materialName)
	{
		return null;
	}
}
[Token(Token = "0x20002BD")]
public class TimeOutAlive : MonoBehaviour
{
	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float aliveTime;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool destroy;

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xC29A20", Offset = "0xC29A20", VA = "0xC29A20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xC29A70", Offset = "0xC29A70", VA = "0xC29A70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xC29ABC", Offset = "0xC29ABC", VA = "0xC29ABC")]
	private void timeOut()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xC29BC8", Offset = "0xC29BC8", VA = "0xC29BC8")]
	public TimeOutAlive()
	{
	}
}
[Token(Token = "0x20002BE")]
public class TransformAnimator : MonoBehaviour
{
	[Token(Token = "0x20002BF")]
	private class ButtonData
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform button;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButtonInputs buttonInput;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 initialPosition;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 pressedPosition;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimatedElementData[] animatedElements;

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xC2A340", Offset = "0xC2A340", VA = "0xC2A340")]
		public ButtonData()
		{
		}
	}

	[Token(Token = "0x20002C0")]
	private class AnimatedElementData
	{
		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 initRotation;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 deltaRotation;

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xC2A3C4", Offset = "0xC2A3C4", VA = "0xC2A3C4")]
		public AnimatedElementData()
		{
		}
	}

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> animatedTransforms;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ButtonData[] rotationAnimatedButtons;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NVRHand hand;

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xC29BD8", Offset = "0xC29BD8", VA = "0xC29BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xC29F84", Offset = "0xC29F84", VA = "0xC29F84")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xC2A12C", Offset = "0xC2A12C", VA = "0xC2A12C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xC2A1D4", Offset = "0xC2A1D4", VA = "0xC2A1D4")]
	private void updateButtonRotation(ButtonData buttonData)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xC29EAC", Offset = "0xC29EAC", VA = "0xC29EAC")]
	private ButtonData createRotationButtonData(NVRButtonInputs buttonInput, Transform buttonName)
	{
		return null;
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xC2A22C", Offset = "0xC2A22C", VA = "0xC2A22C")]
	private ButtonData createButtonData(NVRButtonInputs buttonInput, Transform buttonName)
	{
		return null;
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xC2A29C", Offset = "0xC2A29C", VA = "0xC2A29C")]
	private Vector3 getDeltaRotation(Vector3 initialRotation, Vector3 finalRotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xC2A348", Offset = "0xC2A348", VA = "0xC2A348")]
	public TransformAnimator()
	{
	}
}
[Token(Token = "0x20002C1")]
public class TutorialHelper : MonoBehaviour
{
	[Token(Token = "0x4000DF5")]
	private const string HELPER_RESOURCES_PATH = "TutorialHelper/";

	[Token(Token = "0x4000DF6")]
	private const string WINDOWSMR_HELPER = "WindowsMRHelper";

	[Token(Token = "0x4000DF7")]
	private const string OCULUS_HELPER = "OculusHelper";

	[Token(Token = "0x4000DF8")]
	private const string HTC_HELPER = "HTCHelper";

	[Token(Token = "0x4000DF9")]
	private const string PSMOVE_HELPER = "PSMoveHelper";

	[Token(Token = "0x4000DFA")]
	private const string DUALSHOCK_HELPER = "DualshockHelper";

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool firstMenuButtonInteraction;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool firstGrabInteraction;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool firstActionPieceInteraction;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NVRHand hand;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject helper;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material defaultMaterial;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material sphereMaterial;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material menuMaterial;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material teleportMaterial;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material teleportDefaultMaterialVive;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material teleportMaterialVive;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material grabMaterial;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material actionMaterial;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material grabSphereMaterial;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material actionSphereMaterial;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer menuButton;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer teleportButton;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Renderer grabButton;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Renderer actionButton;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Renderer actionButton2;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Renderer sphere;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject menuArrow;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject grabArrow;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject actionArrow;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private HelperState m_state;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<NVRHand, TutorialHelper> s_helpers;

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xC22B74", Offset = "0xC22B74", VA = "0xC22B74")]
	public static TutorialHelper getTutorialHelper(NVRHand hand)
	{
		return null;
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xC2A3CC", Offset = "0xC2A3CC", VA = "0xC2A3CC")]
	public static void MenuArrowVisibility(bool state)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xC2A5C8", Offset = "0xC2A5C8", VA = "0xC2A5C8")]
	public static void ActionArrowVisibility(bool state)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xC2A7C4", Offset = "0xC2A7C4", VA = "0xC2A7C4")]
	public static void GrabArrowVisibility(bool state)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xC2A9C0", Offset = "0xC2A9C0", VA = "0xC2A9C0")]
	public static void HandState(NVRHand hand, bool grab, bool action, bool teleport, bool menu)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xC2AD68", Offset = "0xC2AD68", VA = "0xC2AD68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xC2AF74", Offset = "0xC2AF74", VA = "0xC2AF74")]
	public void removeTutorialHelper()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xC2AE8C", Offset = "0xC2AE8C", VA = "0xC2AE8C")]
	public void initializateTutorialHelper()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xC2B074", Offset = "0xC2B074", VA = "0xC2B074")]
	public void initializateTutorialHelper(NVRHand helperHand, GameObject helperParent)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xC2BFDC", Offset = "0xC2BFDC", VA = "0xC2BFDC")]
	private void setTutorialHelper(GameObject helperParent, string helperName, string[] components, string[] buttonMapping)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xC2AB9C", Offset = "0xC2AB9C", VA = "0xC2AB9C")]
	private void setHandState(bool bGrab, bool bAction, bool bTeleport, bool bMenu)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xC24AB4", Offset = "0xC24AB4", VA = "0xC24AB4")]
	public void setSphereState(bool action, bool grab)
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xC2C634", Offset = "0xC2C634", VA = "0xC2C634")]
	private Material getStateMaterial(bool state, Material activeMaterial, Material defaultMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xC2C640", Offset = "0xC2C640", VA = "0xC2C640")]
	public TutorialHelper()
	{
	}
}
[Token(Token = "0x20002C2")]
internal class HelperState
{
	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool m_bGrab;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool m_bAction;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool m_bTeleport;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool m_bMenu;

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xC2D74C", Offset = "0xC2D74C", VA = "0xC2D74C")]
	public bool setNewState(bool bGrab, bool bAction, bool bTeleport, bool bMenu)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xC2D7C4", Offset = "0xC2D7C4", VA = "0xC2D7C4")]
	public HelperState()
	{
	}
}
[Token(Token = "0x20002C3")]
public class NVRInput : MonoBehaviour
{
	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xC2D7CC", Offset = "0xC2D7CC", VA = "0xC2D7CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xC2D7D0", Offset = "0xC2D7D0", VA = "0xC2D7D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xC2D7D4", Offset = "0xC2D7D4", VA = "0xC2D7D4")]
	public NVRInput()
	{
	}
}
[Token(Token = "0x20002C4")]
public class OculusAppEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xC2D7DC", Offset = "0xC2D7DC", VA = "0xC2D7DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xC2D974", Offset = "0xC2D974", VA = "0xC2D974")]
	private void GetEntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xC2DA34", Offset = "0xC2DA34", VA = "0xC2DA34")]
	public OculusAppEntitlementCheck()
	{
	}
}
[Token(Token = "0x20002C5")]
public static class PicoUtility
{
	[Token(Token = "0x20002C6")]
	public enum SensitiveWordType
	{
		[Token(Token = "0x4000E1A")]
		Username = 1,
		[Token(Token = "0x4000E1B")]
		Roomname
	}

	[Serializable]
	[Token(Token = "0x20002C7")]
	public class RequestData
	{
		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string access_token;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int scene;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string content;

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xC2DB38", Offset = "0xC2DB38", VA = "0xC2DB38")]
		public RequestData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C8")]
	public class ResponseData
	{
		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int code;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string em;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string trace_id;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ResponseData_Data data;

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xC2DB40", Offset = "0xC2DB40", VA = "0xC2DB40")]
		public ResponseData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C9")]
	public class ResponseData_Data
	{
		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool pass;

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xC2DB48", Offset = "0xC2DB48", VA = "0xC2DB48")]
		public ResponseData_Data()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20002CA")]
	[CompilerGenerated]
	private struct <CheckSensitiveWord>d__0 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<ResponseData> <>t__builder;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SensitiveWordType content;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string str;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<UnityWebRequest.Result> <>u__1;

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xC2DB50", Offset = "0xC2DB50", VA = "0xC2DB50", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xC2E1D0", Offset = "0xC2E1D0", VA = "0xC2E1D0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xC2DA3C", Offset = "0xC2DA3C", VA = "0xC2DA3C")]
	[AsyncStateMachine(typeof(<CheckSensitiveWord>d__0))]
	public static Task<ResponseData> CheckSensitiveWord(string str, SensitiveWordType content)
	{
		return null;
	}
}
[Token(Token = "0x20002CB")]
public class PS4LoadSave : MonoBehaviour
{
	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xC2E228", Offset = "0xC2E228", VA = "0xC2E228")]
	public PS4LoadSave()
	{
	}
}
[Token(Token = "0x20002CC")]
public class PS4TrophyManager : TrophyManager
{
	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xC2E230", Offset = "0xC2E230", VA = "0xC2E230")]
	public PS4TrophyManager()
	{
	}
}
[Token(Token = "0x20002CD")]
public class ViveportDRM : MonoBehaviour
{
	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xC2E238", Offset = "0xC2E238", VA = "0xC2E238")]
	public ViveportDRM()
	{
	}
}
[Token(Token = "0x20002CE")]
public class SetAnimatorPositions : MonoBehaviour
{
	[Token(Token = "0x20002CF")]
	private class Positions
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xC2E528", Offset = "0xC2E528", VA = "0xC2E528")]
		public Positions()
		{
		}
	}

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animationName;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int layer;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float normalizedTime;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool savePositions;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool savingPositions;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, Positions> data;

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xC2E240", Offset = "0xC2E240", VA = "0xC2E240")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xC2E284", Offset = "0xC2E284", VA = "0xC2E284")]
	private void setAnimationFrame()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xC2E36C", Offset = "0xC2E36C", VA = "0xC2E36C")]
	private void _savePositions()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xC2E530", Offset = "0xC2E530", VA = "0xC2E530")]
	private void _applyPositions()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xC2E734", Offset = "0xC2E734", VA = "0xC2E734")]
	public SetAnimatorPositions()
	{
	}
}
[Token(Token = "0x20002D0")]
public class FireEffect : MonoBehaviour
{
	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xC2E7D4", Offset = "0xC2E7D4", VA = "0xC2E7D4", Slot = "4")]
	public virtual void showEffect()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xC2E7D8", Offset = "0xC2E7D8", VA = "0xC2E7D8")]
	public FireEffect()
	{
	}
}
[Token(Token = "0x20002D1")]
public class FireParticlesFX : FireEffect
{
	[Token(Token = "0x20002D2")]
	[CompilerGenerated]
	private sealed class <showEffectCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireParticlesFX <>4__this;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <parent>5__2;

		[Token(Token = "0x170000E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0xC2EA34", Offset = "0xC2EA34", VA = "0xC2EA34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0xC2EA7C", Offset = "0xC2EA7C", VA = "0xC2EA7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xC2E888", Offset = "0xC2E888", VA = "0xC2E888")]
		[DebuggerHidden]
		public <showEffectCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xC2E8B8", Offset = "0xC2E8B8", VA = "0xC2E8B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xC2E8BC", Offset = "0xC2E8BC", VA = "0xC2E8BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xC2EA3C", Offset = "0xC2EA3C", VA = "0xC2EA3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject particles;

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xC2E7E0", Offset = "0xC2E7E0", VA = "0xC2E7E0", Slot = "4")]
	public override void showEffect()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xC2E820", Offset = "0xC2E820", VA = "0xC2E820")]
	[IteratorStateMachine(typeof(<showEffectCoroutine>d__2))]
	private IEnumerator showEffectCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xC2E8B0", Offset = "0xC2E8B0", VA = "0xC2E8B0")]
	public FireParticlesFX()
	{
	}
}
[Token(Token = "0x20002D3")]
public class MuzzleFlash : FireEffect
{
	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float showTime;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_flash;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_scale;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_fDeltaSize;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool initialised;

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xC2EA84", Offset = "0xC2EA84", VA = "0xC2EA84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xC2EB10", Offset = "0xC2EB10", VA = "0xC2EB10", Slot = "4")]
	public override void showEffect()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xC2EB14", Offset = "0xC2EB14", VA = "0xC2EB14")]
	private void showFlash()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xC2EC40", Offset = "0xC2EC40", VA = "0xC2EC40")]
	private void showBlastImpl()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xC2EA88", Offset = "0xC2EA88", VA = "0xC2EA88")]
	private void init()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xC2EC64", Offset = "0xC2EC64", VA = "0xC2EC64")]
	public MuzzleFlash()
	{
	}
}
[Token(Token = "0x20002D4")]
public class RaycastHitDecal : MonoBehaviour
{
	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EasyDecal DecalPrefab;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CastRadius;

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xC2EC84", Offset = "0xC2EC84", VA = "0xC2EC84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xC2EC88", Offset = "0xC2EC88", VA = "0xC2EC88")]
	public void addDecalHit(Ray ray, RaycastHit initialHit)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xC2EFCC", Offset = "0xC2EFCC", VA = "0xC2EFCC")]
	public RaycastHitDecal()
	{
	}
}
[Token(Token = "0x20002D5")]
[AddComponentMenu("Rendering/SetRenderQueue")]
public class RedDotSightRender : MonoBehaviour
{
	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected int[] m_queues;

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xC2EFDC", Offset = "0xC2EFDC", VA = "0xC2EFDC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xC2F0A8", Offset = "0xC2F0A8", VA = "0xC2F0A8")]
	public RedDotSightRender()
	{
	}
}
[Token(Token = "0x20002D6")]
public class Rocket : MonoBehaviour
{
	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xC2F11C", Offset = "0xC2F11C", VA = "0xC2F11C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xC2F120", Offset = "0xC2F120", VA = "0xC2F120")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xC2F124", Offset = "0xC2F124", VA = "0xC2F124")]
	public Rocket()
	{
	}
}
[Token(Token = "0x20002D7")]
public class WeaponConfiguration : MonoBehaviour
{
	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WeaponConfiguration Instance;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NVRButtons triggerButton;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NVRButtons[] grabButtons;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NVRButtons[] dropButtons;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NVRButtons[] reloadButtons;

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xC2F12C", Offset = "0xC2F12C", VA = "0xC2F12C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xC2F328", Offset = "0xC2F328", VA = "0xC2F328")]
	public bool TriggerButtonUp(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xC2F390", Offset = "0xC2F390", VA = "0xC2F390")]
	public bool TriggerButtonDown(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xC2F3F8", Offset = "0xC2F3F8", VA = "0xC2F3F8")]
	public bool TriggerButtonPressed(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xC2F460", Offset = "0xC2F460", VA = "0xC2F460")]
	public bool GrabButtonDown(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xC2F518", Offset = "0xC2F518", VA = "0xC2F518")]
	public bool DropButtonDown(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xC2F5D0", Offset = "0xC2F5D0", VA = "0xC2F5D0")]
	public bool ReloadButtonDown(NVRHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xC2F688", Offset = "0xC2F688", VA = "0xC2F688")]
	public WeaponConfiguration()
	{
	}
}
[Token(Token = "0x20002D8")]
public class PadPositionRotation : MonoBehaviour
{
	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro posX;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro posY;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro posZ;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro rotX;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro rotY;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro rotZ;

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xC2F74C", Offset = "0xC2F74C", VA = "0xC2F74C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xC2FA30", Offset = "0xC2FA30", VA = "0xC2FA30")]
	public PadPositionRotation()
	{
	}
}
[Token(Token = "0x20002D9")]
public class PadPositionRotationButton : HitTarget
{
	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 position;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 rotation;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float delta;

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xC2FA38", Offset = "0xC2FA38", VA = "0xC2FA38", Slot = "4")]
	public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xC30038", Offset = "0xC30038", VA = "0xC30038")]
	public PadPositionRotationButton()
	{
	}
}
[Token(Token = "0x20002DA")]
public class CannonBehavior : MonoBehaviour
{
	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_cannonRot;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_muzzle;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_shotPrefab;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_guiTexture;

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xC30040", Offset = "0xC30040", VA = "0xC30040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xC30044", Offset = "0xC30044", VA = "0xC30044")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xC30280", Offset = "0xC30280", VA = "0xC30280")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xC3035C", Offset = "0xC3035C", VA = "0xC3035C")]
	public CannonBehavior()
	{
	}
}
[Token(Token = "0x20002DB")]
public class CreateSinShapedLineStrip : MonoBehaviour
{
	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_numVertices;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_volumetricLineStripMaterial;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_color;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_start;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_end;

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xC30364", Offset = "0xC30364", VA = "0xC30364")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xC313C0", Offset = "0xC313C0", VA = "0xC313C0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xC314AC", Offset = "0xC314AC", VA = "0xC314AC")]
	public CreateSinShapedLineStrip()
	{
	}
}
[Token(Token = "0x20002DC")]
public class ShotBehavior : MonoBehaviour
{
	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xC314C8", Offset = "0xC314C8", VA = "0xC314C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xC314CC", Offset = "0xC314CC", VA = "0xC314CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xC31584", Offset = "0xC31584", VA = "0xC31584")]
	public ShotBehavior()
	{
	}
}
[Token(Token = "0x20002DD")]
public class VolumetricLineSettings : MonoBehaviour
{
	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_disableFieldOfViewScaling;

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xC3158C", Offset = "0xC3158C", VA = "0xC3158C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xC315E8", Offset = "0xC315E8", VA = "0xC315E8")]
	public VolumetricLineSettings()
	{
	}
}
namespace VolumetricLines
{
	[Token(Token = "0x20002DE")]
	[RequireComponent(typeof(MeshRenderer))]
	[RequireComponent(typeof(MeshFilter))]
	[ExecuteInEditMode]
	public class VolumetricLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_startPos;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_endPos;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_material;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x170000E2")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0xC315F0", Offset = "0xC315F0", VA = "0xC315F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0xC315F8", Offset = "0xC315F8", VA = "0xC315F8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0xC31600", Offset = "0xC31600", VA = "0xC31600")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0xC31608", Offset = "0xC31608", VA = "0xC31608")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public Color LineColor
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0xC31614", Offset = "0xC31614", VA = "0xC31614")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0xC31620", Offset = "0xC31620", VA = "0xC31620")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public float LineWidth
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xC31804", Offset = "0xC31804", VA = "0xC31804")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xC3180C", Offset = "0xC3180C", VA = "0xC3180C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xC318C8", Offset = "0xC318C8", VA = "0xC318C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0xC318D0", Offset = "0xC318D0", VA = "0xC318D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public Vector3 StartPos
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0xC3198C", Offset = "0xC3198C", VA = "0xC3198C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0xC31998", Offset = "0xC31998", VA = "0xC31998")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public Vector3 EndPos
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xC31C14", Offset = "0xC31C14", VA = "0xC31C14")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xC31C20", Offset = "0xC31C20", VA = "0xC31C20")]
			set
			{
			}
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xC316EC", Offset = "0xC316EC", VA = "0xC316EC")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xC31D7C", Offset = "0xC31D7C", VA = "0xC31D7C")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xC31C40", Offset = "0xC31C40", VA = "0xC31C40")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xC319AC", Offset = "0xC319AC", VA = "0xC319AC")]
		public void SetStartAndEndPoints(Vector3 startPoint, Vector3 endPoint)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xC31E60", Offset = "0xC31E60", VA = "0xC31E60")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xC32164", Offset = "0xC32164", VA = "0xC32164")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xC32168", Offset = "0xC32168", VA = "0xC32168")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xC32234", Offset = "0xC32234", VA = "0xC32234")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xC3224C", Offset = "0xC3224C", VA = "0xC3224C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xC32308", Offset = "0xC32308", VA = "0xC32308")]
		public VolumetricLineBehavior()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[RequireComponent(typeof(MeshFilter))]
	[RequireComponent(typeof(MeshRenderer))]
	[ExecuteInEditMode]
	public class VolumetricLineStripBehavior : MonoBehaviour
	{
		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_material;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3[] m_lineVertices;

		[Token(Token = "0x170000E9")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xC3231C", Offset = "0xC3231C", VA = "0xC3231C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xC32324", Offset = "0xC32324", VA = "0xC32324")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0xC3232C", Offset = "0xC3232C", VA = "0xC3232C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xC32334", Offset = "0xC32334", VA = "0xC32334")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public Color LineColor
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xC32340", Offset = "0xC32340", VA = "0xC32340")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xC3058C", Offset = "0xC3058C", VA = "0xC3058C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public float LineWidth
		{
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0xC32464", Offset = "0xC32464", VA = "0xC32464")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xC30658", Offset = "0xC30658", VA = "0xC30658")]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0xC3246C", Offset = "0xC3246C", VA = "0xC3246C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xC30714", Offset = "0xC30714", VA = "0xC30714")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public Vector3[] LineVertices
		{
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0xC32474", Offset = "0xC32474", VA = "0xC32474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xC3234C", Offset = "0xC3234C", VA = "0xC3234C")]
		private void CreateMaterial()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xC325B0", Offset = "0xC325B0", VA = "0xC325B0")]
		private void DestroyMaterial()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xC3247C", Offset = "0xC3247C", VA = "0xC3247C")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xC307D0", Offset = "0xC307D0", VA = "0xC307D0")]
		public void UpdateLineVertices(Vector3[] m_newSetOfVertices)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xC3263C", Offset = "0xC3263C", VA = "0xC3263C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xC32658", Offset = "0xC32658", VA = "0xC32658")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xC3265C", Offset = "0xC3265C", VA = "0xC3265C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xC32728", Offset = "0xC32728", VA = "0xC32728")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xC32740", Offset = "0xC32740", VA = "0xC32740")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xC32894", Offset = "0xC32894", VA = "0xC32894")]
		public VolumetricLineStripBehavior()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public static class VolumetricLineVertexData
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2[] TexCoords;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2[] VertexOffsets;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int[] Indices;
	}
	[Token(Token = "0x20002E1")]
	public class VolumetricMultiLineBehavior : MonoBehaviour
	{
		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material m_templateMaterial;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_doNotOverwriteTemplateMaterialProperties;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color m_lineColor;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_lineWidth;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_lightSaberFactor;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3[] m_lineVertices;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VolumetricLineBehavior[] m_volumetricLines;

		[Token(Token = "0x170000EF")]
		public Material TemplateMaterial
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0xC32A78", Offset = "0xC32A78", VA = "0xC32A78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0xC32A80", Offset = "0xC32A80", VA = "0xC32A80")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public bool DoNotOverwriteTemplateMaterialProperties
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0xC32A88", Offset = "0xC32A88", VA = "0xC32A88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0xC32A90", Offset = "0xC32A90", VA = "0xC32A90")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public Color LineColor
		{
			[Token(Token = "0x6000D74")]
			[Address(RVA = "0xC32A9C", Offset = "0xC32A9C", VA = "0xC32A9C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000D75")]
			[Address(RVA = "0xC32AA8", Offset = "0xC32AA8", VA = "0xC32AA8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public float LineWidth
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0xC32BE0", Offset = "0xC32BE0", VA = "0xC32BE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0xC32BE8", Offset = "0xC32BE8", VA = "0xC32BE8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public float LightSaberFactor
		{
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0xC32CFC", Offset = "0xC32CFC", VA = "0xC32CFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0xC32D04", Offset = "0xC32D04", VA = "0xC32D04")]
			set
			{
			}
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xC32E18", Offset = "0xC32E18", VA = "0xC32E18")]
		public void CreateAllVolumetricLines()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xC3315C", Offset = "0xC3315C", VA = "0xC3315C")]
		public void DestroyAllVolumetricLines()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xC332A8", Offset = "0xC332A8", VA = "0xC332A8")]
		public void UpdateLineVertices(Vector3[] newSetOfVertices)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xC332D0", Offset = "0xC332D0", VA = "0xC332D0")]
		private void SetAllMaterialProperties()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xC33300", Offset = "0xC33300", VA = "0xC33300")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xC33304", Offset = "0xC33304", VA = "0xC33304")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xC33308", Offset = "0xC33308", VA = "0xC33308")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xC3330C", Offset = "0xC3330C", VA = "0xC3330C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xC33460", Offset = "0xC33460", VA = "0xC33460")]
		public VolumetricMultiLineBehavior()
		{
		}
	}
}
namespace VolumetricLines.Utils
{
	[Token(Token = "0x20002E2")]
	public static class TransformExtensionMethods
	{
		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xC31E08", Offset = "0xC31E08", VA = "0xC31E08")]
		public static float GetGlobalUniformScaleForLineWidth(this Transform trans)
		{
			return default(float);
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x20002E3")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xC33468", Offset = "0xC33468", VA = "0xC33468")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xC334D8", Offset = "0xC334D8", VA = "0xC334D8")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xC33AE8", Offset = "0xC33AE8", VA = "0xC33AE8")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xC33BF0", Offset = "0xC33BF0", VA = "0xC33BF0")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x20002E4")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xC33C8C", Offset = "0xC33C8C", VA = "0xC33C8C")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public enum Locale
	{
		[Token(Token = "0x4000E76")]
		US,
		[Token(Token = "0x4000E77")]
		DE,
		[Token(Token = "0x4000E78")]
		JP,
		[Token(Token = "0x4000E79")]
		KR,
		[Token(Token = "0x4000E7A")]
		RU,
		[Token(Token = "0x4000E7B")]
		CN,
		[Token(Token = "0x4000E7C")]
		TW,
		[Token(Token = "0x4000E7D")]
		FR
	}
	[Token(Token = "0x20002E6")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x20002E7")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x20002E8")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x20002E9")]
	public class Leaderboard
	{
		[Token(Token = "0x170000F4")]
		public int Rank
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0xC340EC", Offset = "0xC340EC", VA = "0xC340EC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0xC340F4", Offset = "0xC340F4", VA = "0xC340F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public int Score
		{
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0xC340FC", Offset = "0xC340FC", VA = "0xC340FC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0xC34104", Offset = "0xC34104", VA = "0xC34104")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public string UserName
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xC3410C", Offset = "0xC3410C", VA = "0xC3410C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0xC34114", Offset = "0xC34114", VA = "0xC34114")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xC3411C", Offset = "0xC3411C", VA = "0xC3411C")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x20002EB")]
		public enum Platform
		{
			[Token(Token = "0x4000E84")]
			Windows,
			[Token(Token = "0x4000E85")]
			Android
		}

		[Token(Token = "0x20002EC")]
		public enum TransactionType
		{
			[Token(Token = "0x4000E87")]
			Unknown,
			[Token(Token = "0x4000E88")]
			Paid,
			[Token(Token = "0x4000E89")]
			Redeem,
			[Token(Token = "0x4000E8A")]
			FreeTrial
		}

		[Token(Token = "0x170000F7")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0xC34124", Offset = "0xC34124", VA = "0xC34124")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xC3412C", Offset = "0xC3412C", VA = "0xC3412C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public TransactionType Type
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xC34134", Offset = "0xC34134", VA = "0xC34134")]
			[CompilerGenerated]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xC3413C", Offset = "0xC3413C", VA = "0xC3413C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xC34144", Offset = "0xC34144", VA = "0xC34144")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class Api
	{
		[Token(Token = "0x20002EE")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x6000DAA")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x6000DAB")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xC34F5C", Offset = "0xC34F5C", VA = "0xC34F5C")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xC342B0", Offset = "0xC342B0", VA = "0xC342B0")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xC341C8", Offset = "0xC341C8", VA = "0xC341C8")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback))]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xC34518", Offset = "0xC34518", VA = "0xC34518")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xC3423C", Offset = "0xC3423C", VA = "0xC3423C")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback))]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xC34914", Offset = "0xC34914", VA = "0xC34914")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xC34BDC", Offset = "0xC34BDC", VA = "0xC34BDC")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xC34D58", Offset = "0xC34D58", VA = "0xC34D58")]
		public Api()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class User
	{
		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xC34F64", Offset = "0xC34F64", VA = "0xC34F64")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback))]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xC34FC8", Offset = "0xC34FC8", VA = "0xC34FC8")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xC352D8", Offset = "0xC352D8", VA = "0xC352D8")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xC353D0", Offset = "0xC353D0", VA = "0xC353D0")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xC354C8", Offset = "0xC354C8", VA = "0xC354C8")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xC355C0", Offset = "0xC355C0", VA = "0xC355C0")]
		public User()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class UserStats
	{
		[Token(Token = "0x20002F1")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4000E9D")]
			GlobalData,
			[Token(Token = "0x4000E9E")]
			GlobalDataAroundUser,
			[Token(Token = "0x4000E9F")]
			LocalData,
			[Token(Token = "0x4000EA0")]
			LocalDataAroundUser
		}

		[Token(Token = "0x20002F2")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4000EA2")]
			AllTime,
			[Token(Token = "0x4000EA3")]
			Daily,
			[Token(Token = "0x4000EA4")]
			Weekly,
			[Token(Token = "0x4000EA5")]
			Monthly
		}

		[Token(Token = "0x20002F3")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4000EA7")]
			None,
			[Token(Token = "0x4000EA8")]
			Ascending,
			[Token(Token = "0x4000EA9")]
			Descending
		}

		[Token(Token = "0x20002F4")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4000EAB")]
			None,
			[Token(Token = "0x4000EAC")]
			Numeric,
			[Token(Token = "0x4000EAD")]
			TimeSeconds,
			[Token(Token = "0x4000EAE")]
			TimeMilliSeconds
		}

		[Token(Token = "0x20002F5")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4000EB0")]
			None,
			[Token(Token = "0x4000EB1")]
			KeepBest,
			[Token(Token = "0x4000EB2")]
			ForceUpdate
		}

		[Token(Token = "0x20002F6")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4000EB4")]
			Name,
			[Token(Token = "0x4000EB5")]
			Desc,
			[Token(Token = "0x4000EB6")]
			Hidden
		}

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xC355C8", Offset = "0xC355C8", VA = "0xC355C8")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback))]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xC357BC", Offset = "0xC357BC", VA = "0xC357BC")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xC3562C", Offset = "0xC3562C", VA = "0xC3562C")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback))]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xC35ACC", Offset = "0xC35ACC", VA = "0xC35ACC")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xC35DDC", Offset = "0xC35DDC", VA = "0xC35DDC")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xC35F14", Offset = "0xC35F14", VA = "0xC35F14")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xC3604C", Offset = "0xC3604C", VA = "0xC3604C")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xC36184", Offset = "0xC36184", VA = "0xC36184")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xC35690", Offset = "0xC35690", VA = "0xC35690")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback))]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xC362BC", Offset = "0xC362BC", VA = "0xC362BC")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xC365CC", Offset = "0xC365CC", VA = "0xC365CC")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xC366A4", Offset = "0xC366A4", VA = "0xC366A4")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xC3677C", Offset = "0xC3677C", VA = "0xC3677C")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xC36854", Offset = "0xC36854", VA = "0xC36854")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xC3698C", Offset = "0xC3698C", VA = "0xC3698C")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xC36B0C", Offset = "0xC36B0C", VA = "0xC36B0C")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xC36BE4", Offset = "0xC36BE4", VA = "0xC36BE4")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xC356F4", Offset = "0xC356F4", VA = "0xC356F4")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback))]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xC36CBC", Offset = "0xC36CBC", VA = "0xC36CBC")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xC35758", Offset = "0xC35758", VA = "0xC35758")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback))]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xC37168", Offset = "0xC37168", VA = "0xC37168")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xC3751C", Offset = "0xC3751C", VA = "0xC3751C")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xC37790", Offset = "0xC37790", VA = "0xC37790")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xC37860", Offset = "0xC37860", VA = "0xC37860")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xC37930", Offset = "0xC37930", VA = "0xC37930")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xC37A00", Offset = "0xC37A00", VA = "0xC37A00")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xC37A08", Offset = "0xC37A08", VA = "0xC37A08")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class IAPurchase
	{
		[Token(Token = "0x20002F9")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0xC380D0", Offset = "0xC380D0", VA = "0xC380D0")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0xC38134", Offset = "0xC38134", VA = "0xC38134")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0xC3A3B0", Offset = "0xC3A3B0", VA = "0xC3A3B0", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0xC3848C", Offset = "0xC3848C", VA = "0xC3848C")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x6000DED")]
			[Address(RVA = "0xC3ABBC", Offset = "0xC3ABBC", VA = "0xC3ABBC", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xC3898C", Offset = "0xC3898C", VA = "0xC3898C")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0xC3B044", Offset = "0xC3B044", VA = "0xC3B044", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0xC38C20", Offset = "0xC38C20", VA = "0xC38C20")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0xC3B5B8", Offset = "0xC3B5B8", VA = "0xC3B5B8", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0xC38EAC", Offset = "0xC38EAC", VA = "0xC38EAC")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0xC3BEE0", Offset = "0xC3BEE0", VA = "0xC3BEE0", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0xC3910C", Offset = "0xC3910C", VA = "0xC3910C")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0xC3CE18", Offset = "0xC3CE18", VA = "0xC3CE18", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0xC393BC", Offset = "0xC393BC", VA = "0xC393BC")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0xC3D324", Offset = "0xC3D324", VA = "0xC3D324", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0xC397CC", Offset = "0xC397CC", VA = "0xC397CC")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0xC3D7A0", Offset = "0xC3D7A0", VA = "0xC3D7A0", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0xC39A60", Offset = "0xC39A60", VA = "0xC39A60")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0xC3DC1C", Offset = "0xC3DC1C", VA = "0xC3DC1C", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xC39CF4", Offset = "0xC39CF4", VA = "0xC39CF4")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0xC3E290", Offset = "0xC3E290", VA = "0xC3E290", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xC39F80", Offset = "0xC39F80", VA = "0xC39F80")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0xC3E738", Offset = "0xC3E738", VA = "0xC3E738", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6000E00")]
			[Address(RVA = "0xC3A1E8", Offset = "0xC3A1E8", VA = "0xC3A1E8")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6000E01")]
			[Address(RVA = "0xC3EBE0", Offset = "0xC3EBE0", VA = "0xC3EBE0", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x20002FA")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x6000E02")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x6000E03")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x6000E04")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x6000E05")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x6000E06")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x6000E07")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x6000E08")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x6000E09")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x6000E0A")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x6000E0B")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x6000E0C")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x6000E0D")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xC3A3A8", Offset = "0xC3A3A8", VA = "0xC3A3A8")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x20002FB")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xC3EF68", Offset = "0xC3EF68", VA = "0xC3EF68", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xC3EF6C", Offset = "0xC3EF6C", VA = "0xC3EF6C", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xC3EF70", Offset = "0xC3EF70", VA = "0xC3EF70", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xC3EF74", Offset = "0xC3EF74", VA = "0xC3EF74", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xC3EF78", Offset = "0xC3EF78", VA = "0xC3EF78", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xC3EF7C", Offset = "0xC3EF7C", VA = "0xC3EF7C", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xC3EF80", Offset = "0xC3EF80", VA = "0xC3EF80", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x6000E16")]
			[Address(RVA = "0xC3EF84", Offset = "0xC3EF84", VA = "0xC3EF84", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xC3EF88", Offset = "0xC3EF88", VA = "0xC3EF88", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xC3EF8C", Offset = "0xC3EF8C", VA = "0xC3EF8C", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xC3EF90", Offset = "0xC3EF90", VA = "0xC3EF90", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0xC3EF94", Offset = "0xC3EF94", VA = "0xC3EF94", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0xC3EF98", Offset = "0xC3EF98", VA = "0xC3EF98", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0xC3EF9C", Offset = "0xC3EF9C", VA = "0xC3EF9C")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x20002FC")]
		public class QueryResponse
		{
			[Token(Token = "0x170000F9")]
			public string order_id
			{
				[Token(Token = "0x6000E1D")]
				[Address(RVA = "0xC3EFA4", Offset = "0xC3EFA4", VA = "0xC3EFA4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E1E")]
				[Address(RVA = "0xC3EFAC", Offset = "0xC3EFAC", VA = "0xC3EFAC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170000FA")]
			public string purchase_id
			{
				[Token(Token = "0x6000E1F")]
				[Address(RVA = "0xC3EFB4", Offset = "0xC3EFB4", VA = "0xC3EFB4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E20")]
				[Address(RVA = "0xC3EFBC", Offset = "0xC3EFBC", VA = "0xC3EFBC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170000FB")]
			public string status
			{
				[Token(Token = "0x6000E21")]
				[Address(RVA = "0xC3EFC4", Offset = "0xC3EFC4", VA = "0xC3EFC4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E22")]
				[Address(RVA = "0xC3EFCC", Offset = "0xC3EFCC", VA = "0xC3EFCC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170000FC")]
			public string price
			{
				[Token(Token = "0x6000E23")]
				[Address(RVA = "0xC3EFD4", Offset = "0xC3EFD4", VA = "0xC3EFD4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E24")]
				[Address(RVA = "0xC3EFDC", Offset = "0xC3EFDC", VA = "0xC3EFDC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170000FD")]
			public string currency
			{
				[Token(Token = "0x6000E25")]
				[Address(RVA = "0xC3EFE4", Offset = "0xC3EFE4", VA = "0xC3EFE4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E26")]
				[Address(RVA = "0xC3EFEC", Offset = "0xC3EFEC", VA = "0xC3EFEC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x170000FE")]
			public long paid_timestamp
			{
				[Token(Token = "0x6000E27")]
				[Address(RVA = "0xC3EFF4", Offset = "0xC3EFF4", VA = "0xC3EFF4")]
				[CompilerGenerated]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000E28")]
				[Address(RVA = "0xC3EFFC", Offset = "0xC3EFFC", VA = "0xC3EFFC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xC3BED8", Offset = "0xC3BED8", VA = "0xC3BED8")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x20002FD")]
		public class QueryResponse2
		{
			[Token(Token = "0x170000FF")]
			public string order_id
			{
				[Token(Token = "0x6000E2A")]
				[Address(RVA = "0xC3F004", Offset = "0xC3F004", VA = "0xC3F004")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E2B")]
				[Address(RVA = "0xC3F00C", Offset = "0xC3F00C", VA = "0xC3F00C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000100")]
			public string app_id
			{
				[Token(Token = "0x6000E2C")]
				[Address(RVA = "0xC3F014", Offset = "0xC3F014", VA = "0xC3F014")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E2D")]
				[Address(RVA = "0xC3F01C", Offset = "0xC3F01C", VA = "0xC3F01C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000101")]
			public string purchase_id
			{
				[Token(Token = "0x6000E2E")]
				[Address(RVA = "0xC3F024", Offset = "0xC3F024", VA = "0xC3F024")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E2F")]
				[Address(RVA = "0xC3F02C", Offset = "0xC3F02C", VA = "0xC3F02C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000102")]
			public string user_data
			{
				[Token(Token = "0x6000E30")]
				[Address(RVA = "0xC3F034", Offset = "0xC3F034", VA = "0xC3F034")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E31")]
				[Address(RVA = "0xC3F03C", Offset = "0xC3F03C", VA = "0xC3F03C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000103")]
			public string price
			{
				[Token(Token = "0x6000E32")]
				[Address(RVA = "0xC3F044", Offset = "0xC3F044", VA = "0xC3F044")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E33")]
				[Address(RVA = "0xC3F04C", Offset = "0xC3F04C", VA = "0xC3F04C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000104")]
			public string currency
			{
				[Token(Token = "0x6000E34")]
				[Address(RVA = "0xC3F054", Offset = "0xC3F054", VA = "0xC3F054")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E35")]
				[Address(RVA = "0xC3F05C", Offset = "0xC3F05C", VA = "0xC3F05C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000105")]
			public long paid_timestamp
			{
				[Token(Token = "0x6000E36")]
				[Address(RVA = "0xC3F064", Offset = "0xC3F064", VA = "0xC3F064")]
				[CompilerGenerated]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000E37")]
				[Address(RVA = "0xC3F06C", Offset = "0xC3F06C", VA = "0xC3F06C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xC3CDE8", Offset = "0xC3CDE8", VA = "0xC3CDE8")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x20002FE")]
		public class QueryListResponse
		{
			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x17000106")]
			public int total
			{
				[Token(Token = "0x6000E39")]
				[Address(RVA = "0xC3F074", Offset = "0xC3F074", VA = "0xC3F074")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000E3A")]
				[Address(RVA = "0xC3F07C", Offset = "0xC3F07C", VA = "0xC3F07C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000107")]
			public int from
			{
				[Token(Token = "0x6000E3B")]
				[Address(RVA = "0xC3F084", Offset = "0xC3F084", VA = "0xC3F084")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000E3C")]
				[Address(RVA = "0xC3F08C", Offset = "0xC3F08C", VA = "0xC3F08C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000108")]
			public int to
			{
				[Token(Token = "0x6000E3D")]
				[Address(RVA = "0xC3F094", Offset = "0xC3F094", VA = "0xC3F094")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000E3E")]
				[Address(RVA = "0xC3F09C", Offset = "0xC3F09C", VA = "0xC3F09C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0xC3CE10", Offset = "0xC3CE10", VA = "0xC3CE10")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x20002FF")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x17000109")]
			public long create_time
			{
				[Token(Token = "0x6000E40")]
				[Address(RVA = "0xC3F0A4", Offset = "0xC3F0A4", VA = "0xC3F0A4")]
				[CompilerGenerated]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000E41")]
				[Address(RVA = "0xC3F0AC", Offset = "0xC3F0AC", VA = "0xC3F0AC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700010A")]
			public string payment_method
			{
				[Token(Token = "0x6000E42")]
				[Address(RVA = "0xC3F0B4", Offset = "0xC3F0B4", VA = "0xC3F0B4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E43")]
				[Address(RVA = "0xC3F0BC", Offset = "0xC3F0BC", VA = "0xC3F0BC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700010B")]
			public string status
			{
				[Token(Token = "0x6000E44")]
				[Address(RVA = "0xC3F0C4", Offset = "0xC3F0C4", VA = "0xC3F0C4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E45")]
				[Address(RVA = "0xC3F0CC", Offset = "0xC3F0CC", VA = "0xC3F0CC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xC3F0D4", Offset = "0xC3F0D4", VA = "0xC3F0D4")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x2000300")]
		public class StatusDetail
		{
			[Token(Token = "0x1700010C")]
			public long date_next_charge
			{
				[Token(Token = "0x6000E47")]
				[Address(RVA = "0xC3F0DC", Offset = "0xC3F0DC", VA = "0xC3F0DC")]
				[CompilerGenerated]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000E48")]
				[Address(RVA = "0xC3F0E4", Offset = "0xC3F0E4", VA = "0xC3F0E4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700010D")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x6000E49")]
				[Address(RVA = "0xC3F0EC", Offset = "0xC3F0EC", VA = "0xC3F0EC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E4A")]
				[Address(RVA = "0xC3F0F4", Offset = "0xC3F0F4", VA = "0xC3F0F4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700010E")]
			public string cancel_reason
			{
				[Token(Token = "0x6000E4B")]
				[Address(RVA = "0xC3F0FC", Offset = "0xC3F0FC", VA = "0xC3F0FC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E4C")]
				[Address(RVA = "0xC3F104", Offset = "0xC3F104", VA = "0xC3F104")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0xC3F10C", Offset = "0xC3F10C", VA = "0xC3F10C")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x2000301")]
		public class TimePeriod
		{
			[Token(Token = "0x1700010F")]
			public string time_type
			{
				[Token(Token = "0x6000E4E")]
				[Address(RVA = "0xC3F114", Offset = "0xC3F114", VA = "0xC3F114")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E4F")]
				[Address(RVA = "0xC3F11C", Offset = "0xC3F11C", VA = "0xC3F11C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000110")]
			public int value
			{
				[Token(Token = "0x6000E50")]
				[Address(RVA = "0xC3F124", Offset = "0xC3F124", VA = "0xC3F124")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000E51")]
				[Address(RVA = "0xC3F12C", Offset = "0xC3F12C", VA = "0xC3F12C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xC3F134", Offset = "0xC3F134", VA = "0xC3F134")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x2000302")]
		public class Subscription
		{
			[Token(Token = "0x17000111")]
			public string app_id
			{
				[Token(Token = "0x6000E53")]
				[Address(RVA = "0xC3F13C", Offset = "0xC3F13C", VA = "0xC3F13C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E54")]
				[Address(RVA = "0xC3F144", Offset = "0xC3F144", VA = "0xC3F144")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000112")]
			public string order_id
			{
				[Token(Token = "0x6000E55")]
				[Address(RVA = "0xC3F14C", Offset = "0xC3F14C", VA = "0xC3F14C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E56")]
				[Address(RVA = "0xC3F154", Offset = "0xC3F154", VA = "0xC3F154")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000113")]
			public string subscription_id
			{
				[Token(Token = "0x6000E57")]
				[Address(RVA = "0xC3F15C", Offset = "0xC3F15C", VA = "0xC3F15C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E58")]
				[Address(RVA = "0xC3F164", Offset = "0xC3F164", VA = "0xC3F164")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000114")]
			public string price
			{
				[Token(Token = "0x6000E59")]
				[Address(RVA = "0xC3F16C", Offset = "0xC3F16C", VA = "0xC3F16C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E5A")]
				[Address(RVA = "0xC3F174", Offset = "0xC3F174", VA = "0xC3F174")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000115")]
			public string currency
			{
				[Token(Token = "0x6000E5B")]
				[Address(RVA = "0xC3F17C", Offset = "0xC3F17C", VA = "0xC3F17C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E5C")]
				[Address(RVA = "0xC3F184", Offset = "0xC3F184", VA = "0xC3F184")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000116")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6000E5D")]
				[Address(RVA = "0xC3F18C", Offset = "0xC3F18C", VA = "0xC3F18C")]
				[CompilerGenerated]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6000E5E")]
				[Address(RVA = "0xC3F194", Offset = "0xC3F194", VA = "0xC3F194")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000117")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6000E5F")]
				[Address(RVA = "0xC3F19C", Offset = "0xC3F19C", VA = "0xC3F19C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E60")]
				[Address(RVA = "0xC3F1A4", Offset = "0xC3F1A4", VA = "0xC3F1A4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000118")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x6000E61")]
				[Address(RVA = "0xC3F1AC", Offset = "0xC3F1AC", VA = "0xC3F1AC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E62")]
				[Address(RVA = "0xC3F1B4", Offset = "0xC3F1B4", VA = "0xC3F1B4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000119")]
			public int number_of_charge_period
			{
				[Token(Token = "0x6000E63")]
				[Address(RVA = "0xC3F1BC", Offset = "0xC3F1BC", VA = "0xC3F1BC")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000E64")]
				[Address(RVA = "0xC3F1C4", Offset = "0xC3F1C4", VA = "0xC3F1C4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700011A")]
			public string plan_id
			{
				[Token(Token = "0x6000E65")]
				[Address(RVA = "0xC3F1CC", Offset = "0xC3F1CC", VA = "0xC3F1CC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E66")]
				[Address(RVA = "0xC3F1D4", Offset = "0xC3F1D4", VA = "0xC3F1D4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700011B")]
			public string plan_name
			{
				[Token(Token = "0x6000E67")]
				[Address(RVA = "0xC3F1DC", Offset = "0xC3F1DC", VA = "0xC3F1DC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E68")]
				[Address(RVA = "0xC3F1E4", Offset = "0xC3F1E4", VA = "0xC3F1E4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700011C")]
			public string status
			{
				[Token(Token = "0x6000E69")]
				[Address(RVA = "0xC3F1EC", Offset = "0xC3F1EC", VA = "0xC3F1EC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E6A")]
				[Address(RVA = "0xC3F1F4", Offset = "0xC3F1F4", VA = "0xC3F1F4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700011D")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6000E6B")]
				[Address(RVA = "0xC3F1FC", Offset = "0xC3F1FC", VA = "0xC3F1FC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E6C")]
				[Address(RVA = "0xC3F204", Offset = "0xC3F204", VA = "0xC3F204")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xC3F20C", Offset = "0xC3F20C", VA = "0xC3F20C")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x2000303")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x1700011E")]
			public int statusCode
			{
				[Token(Token = "0x6000E6E")]
				[Address(RVA = "0xC3F214", Offset = "0xC3F214", VA = "0xC3F214")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000E6F")]
				[Address(RVA = "0xC3F21C", Offset = "0xC3F21C", VA = "0xC3F21C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700011F")]
			public string message
			{
				[Token(Token = "0x6000E70")]
				[Address(RVA = "0xC3F224", Offset = "0xC3F224", VA = "0xC3F224")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E71")]
				[Address(RVA = "0xC3F22C", Offset = "0xC3F22C", VA = "0xC3F22C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000120")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x6000E72")]
				[Address(RVA = "0xC3F234", Offset = "0xC3F234", VA = "0xC3F234")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6000E73")]
				[Address(RVA = "0xC3F23C", Offset = "0xC3F23C", VA = "0xC3F23C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6000E74")]
			[Address(RVA = "0xC3F244", Offset = "0xC3F244", VA = "0xC3F244")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xC37A10", Offset = "0xC37A10", VA = "0xC37A10")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xC37FF4", Offset = "0xC37FF4", VA = "0xC37FF4")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xC37A84", Offset = "0xC37A84", VA = "0xC37A84")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xC383B0", Offset = "0xC383B0", VA = "0xC383B0")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xC37AF8", Offset = "0xC37AF8", VA = "0xC37AF8")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xC38644", Offset = "0xC38644", VA = "0xC38644")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xC37B6C", Offset = "0xC37B6C", VA = "0xC37B6C")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xC388B0", Offset = "0xC388B0", VA = "0xC388B0")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xC37BE0", Offset = "0xC37BE0", VA = "0xC37BE0")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xC38B44", Offset = "0xC38B44", VA = "0xC38B44")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xC37C54", Offset = "0xC37C54", VA = "0xC37C54")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xC38DD8", Offset = "0xC38DD8", VA = "0xC38DD8")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xC37CC8", Offset = "0xC37CC8", VA = "0xC37CC8")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xC39038", Offset = "0xC39038", VA = "0xC39038")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xC37D3C", Offset = "0xC37D3C", VA = "0xC37D3C")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xC39298", Offset = "0xC39298", VA = "0xC39298")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xC37DB0", Offset = "0xC37DB0", VA = "0xC37DB0")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xC396F0", Offset = "0xC396F0", VA = "0xC396F0")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xC37E24", Offset = "0xC37E24", VA = "0xC37E24")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xC39984", Offset = "0xC39984", VA = "0xC39984")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xC37E98", Offset = "0xC37E98", VA = "0xC37E98")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xC39C18", Offset = "0xC39C18", VA = "0xC39C18")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xC37F0C", Offset = "0xC37F0C", VA = "0xC37F0C")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xC39EAC", Offset = "0xC39EAC", VA = "0xC39EAC")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xC37F80", Offset = "0xC37F80", VA = "0xC37F80")]
		[MonoPInvokeCallback(typeof(IAPurchaseCallback))]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xC3A10C", Offset = "0xC3A10C", VA = "0xC3A10C")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xC3A3A0", Offset = "0xC3A3A0", VA = "0xC3A3A0")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class DLC
	{
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xC3F24C", Offset = "0xC3F24C", VA = "0xC3F24C")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class Subscription
	{
		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xC3F254", Offset = "0xC3F254", VA = "0xC3F254")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback2))]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xC3F2C8", Offset = "0xC3F2C8", VA = "0xC3F2C8")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xC3F690", Offset = "0xC3F690", VA = "0xC3F690")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xC3FAD8", Offset = "0xC3FAD8", VA = "0xC3FAD8")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class Deeplink
	{
		[Token(Token = "0x2000307")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x6000E82")]
			public abstract void OnSuccess();

			[Token(Token = "0x6000E83")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6000E84")]
			[Address(RVA = "0xC40540", Offset = "0xC40540", VA = "0xC40540")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x4000EEF")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xC3FAE0", Offset = "0xC3FAE0", VA = "0xC3FAE0")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback))]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xC3FB44", Offset = "0xC3FB44", VA = "0xC3FB44")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xC3FE14", Offset = "0xC3FE14", VA = "0xC3FE14")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xC40020", Offset = "0xC40020", VA = "0xC40020")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xC400AC", Offset = "0xC400AC", VA = "0xC400AC")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xC40250", Offset = "0xC40250", VA = "0xC40250")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xC4045C", Offset = "0xC4045C", VA = "0xC4045C")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xC40538", Offset = "0xC40538", VA = "0xC40538")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000308")]
	internal class Token
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 getSessionTokenIl2cppCallback;

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xC40548", Offset = "0xC40548", VA = "0xC40548")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback))]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xC40620", Offset = "0xC40620", VA = "0xC40620")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xC405AC", Offset = "0xC405AC", VA = "0xC405AC")]
		[MonoPInvokeCallback(typeof(Viveport.Internal.StatusCallback2))]
		private static void GetSessionTokenIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xC40924", Offset = "0xC40924", VA = "0xC40924")]
		public static void GetSessionToken(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xC40C28", Offset = "0xC40C28", VA = "0xC40C28")]
		public Token()
		{
		}
	}
	[Token(Token = "0x2000309")]
	internal class Ads
	{
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xC40C30", Offset = "0xC40C30", VA = "0xC40C30")]
		public Ads()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x200030A")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x200030B")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x200030C")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200030D")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x200030E")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4000EF8")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4000EF9")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4000EFA")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4000EFB")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x200030F")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4000EFD")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4000EFE")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4000EFF")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4000F00")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x2000310")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4000F02")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4000F03")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4000F04")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x2000311")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4000F06")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4000F07")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4000F08")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4000F09")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x2000312")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4000F0B")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4000F0C")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4000F0D")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x2000313")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4000F0F")]
		UNKNOWN,
		[Token(Token = "0x4000F10")]
		PAID,
		[Token(Token = "0x4000F11")]
		REDEEM,
		[Token(Token = "0x4000F12")]
		FREEE_TRIAL
	}
	[Token(Token = "0x2000314")]
	internal enum ELocale
	{
		[Token(Token = "0x4000F14")]
		k_ELocaleUS,
		[Token(Token = "0x4000F15")]
		k_ELocaleDE,
		[Token(Token = "0x4000F16")]
		k_ELocaleJP,
		[Token(Token = "0x4000F17")]
		k_ELocaleKR,
		[Token(Token = "0x4000F18")]
		k_ELocaleRU,
		[Token(Token = "0x4000F19")]
		k_ELocaleCN,
		[Token(Token = "0x4000F1A")]
		k_ELocaleTW,
		[Token(Token = "0x4000F1B")]
		k_ELocaleFR
	}
	[Token(Token = "0x2000315")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4000F1D")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4000F1E")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4000F1F")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x2000316")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x2000317")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x2000318")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x2000319")]
	internal class Api
	{
		[Token(Token = "0x200031A")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0xC41264", Offset = "0xC41264", VA = "0xC41264")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0xC412F0", Offset = "0xC412F0", VA = "0xC412F0")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0xC41400", Offset = "0xC41400", VA = "0xC41400")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xC347B4", Offset = "0xC347B4", VA = "0xC347B4")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xC34AD4", Offset = "0xC34AD4", VA = "0xC34AD4")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xC34C8C", Offset = "0xC34C8C", VA = "0xC34C8C")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xC34398", Offset = "0xC34398", VA = "0xC34398")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xC412E8", Offset = "0xC412E8", VA = "0xC412E8")]
		public Api()
		{
		}
	}
	[Token(Token = "0x200031B")]
	internal class User
	{
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xC351A4", Offset = "0xC351A4", VA = "0xC351A4")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xC352F8", Offset = "0xC352F8", VA = "0xC352F8")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xC353F0", Offset = "0xC353F0", VA = "0xC353F0")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xC354E8", Offset = "0xC354E8", VA = "0xC354E8")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xC415E0", Offset = "0xC415E0", VA = "0xC415E0")]
		public User()
		{
		}
	}
	[Token(Token = "0x200031C")]
	internal class UserStats
	{
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xC35998", Offset = "0xC35998", VA = "0xC35998")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xC35CA8", Offset = "0xC35CA8", VA = "0xC35CA8")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xC36498", Offset = "0xC36498", VA = "0xC36498")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xC36050", Offset = "0xC36050", VA = "0xC36050")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xC36188", Offset = "0xC36188", VA = "0xC36188")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xC35DE0", Offset = "0xC35DE0", VA = "0xC35DE0")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xC35F18", Offset = "0xC35F18", VA = "0xC35F18")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xC365D0", Offset = "0xC365D0", VA = "0xC365D0")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xC366A8", Offset = "0xC366A8", VA = "0xC366A8")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xC36B10", Offset = "0xC36B10", VA = "0xC36B10")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xC36BE8", Offset = "0xC36BE8", VA = "0xC36BE8")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xC36858", Offset = "0xC36858", VA = "0xC36858")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xC36990", Offset = "0xC36990", VA = "0xC36990")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xC36780", Offset = "0xC36780", VA = "0xC36780")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xC36ED8", Offset = "0xC36ED8", VA = "0xC36ED8")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xC3735C", Offset = "0xC3735C", VA = "0xC3735C")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xC37520", Offset = "0xC37520", VA = "0xC37520")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xC37794", Offset = "0xC37794", VA = "0xC37794")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xC37864", Offset = "0xC37864", VA = "0xC37864")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xC37934", Offset = "0xC37934", VA = "0xC37934")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xC416E4", Offset = "0xC416E4", VA = "0xC416E4")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x200031D")]
	internal class Deeplink
	{
		[Token(Token = "0x200031E")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0xC417E8", Offset = "0xC417E8", VA = "0xC417E8")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0xC41874", Offset = "0xC41874", VA = "0xC41874")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0xC418FC", Offset = "0xC418FC", VA = "0xC418FC")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xC3FD20", Offset = "0xC3FD20", VA = "0xC3FD20")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xC3FEA0", Offset = "0xC3FEA0", VA = "0xC3FEA0")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xC40104", Offset = "0xC40104", VA = "0xC40104")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xC402DC", Offset = "0xC402DC", VA = "0xC402DC")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xC40460", Offset = "0xC40460", VA = "0xC40460")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xC4186C", Offset = "0xC4186C", VA = "0xC4186C")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x200031F")]
	internal class IAPurchase
	{
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xC38264", Offset = "0xC38264", VA = "0xC38264")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xC384F8", Offset = "0xC384F8", VA = "0xC384F8")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xC38730", Offset = "0xC38730", VA = "0xC38730")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xC389F8", Offset = "0xC389F8", VA = "0xC389F8")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xC38C8C", Offset = "0xC38C8C", VA = "0xC38C8C")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xC38F18", Offset = "0xC38F18", VA = "0xC38F18")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xC39178", Offset = "0xC39178", VA = "0xC39178")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xC39428", Offset = "0xC39428", VA = "0xC39428")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xC39838", Offset = "0xC39838", VA = "0xC39838")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xC39ACC", Offset = "0xC39ACC", VA = "0xC39ACC")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xC39D60", Offset = "0xC39D60", VA = "0xC39D60")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xC39FEC", Offset = "0xC39FEC", VA = "0xC39FEC")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xC3A254", Offset = "0xC3A254", VA = "0xC3A254")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xC41B60", Offset = "0xC41B60", VA = "0xC41B60")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000320")]
	internal class Subscription
	{
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xC3F568", Offset = "0xC3F568", VA = "0xC3F568")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xC3F7D8", Offset = "0xC3F7D8", VA = "0xC3F7D8")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xC3F8A4", Offset = "0xC3F8A4", VA = "0xC3F8A4")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xC3F970", Offset = "0xC3F970", VA = "0xC3F970")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xC41CE8", Offset = "0xC41CE8", VA = "0xC41CE8")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000321")]
	internal class Token
	{
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xC407FC", Offset = "0xC407FC", VA = "0xC407FC")]
		internal static int IsReady(StatusCallback IsReadyCallback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xC40B00", Offset = "0xC40B00", VA = "0xC40B00")]
		internal static int GetSessionToken(StatusCallback2 GetSessionTokenCallback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xC41DEC", Offset = "0xC41DEC", VA = "0xC41DEC")]
		public Token()
		{
		}
	}
	[Token(Token = "0x2000322")]
	internal class Android
	{
		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _sessionToken;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x17000121")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0xC41DF4", Offset = "0xC41DF4", VA = "0xC41DF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0xC41E98", Offset = "0xC41E98", VA = "0xC41E98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0xC411DC", Offset = "0xC411DC", VA = "0xC411DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xC410D8", Offset = "0xC410D8", VA = "0xC410D8")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xC414E4", Offset = "0xC414E4", VA = "0xC414E4")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xC415E8", Offset = "0xC415E8", VA = "0xC415E8")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xC419E0", Offset = "0xC419E0", VA = "0xC419E0")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xC41B68", Offset = "0xC41B68", VA = "0xC41B68")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xC41CF0", Offset = "0xC41CF0", VA = "0xC41CF0")]
		internal static AndroidJavaObject GetJavaSessionToken()
		{
			return null;
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xC416EC", Offset = "0xC416EC", VA = "0xC416EC")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xC41EF4", Offset = "0xC41EF4", VA = "0xC41EF4")]
		public Android()
		{
		}
	}
	[Token(Token = "0x2000323")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xC41ADC", Offset = "0xC41ADC", VA = "0xC41ADC")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xC411E0", Offset = "0xC411E0", VA = "0xC411E0")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xC41C64", Offset = "0xC41C64", VA = "0xC41C64")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xC41EFC", Offset = "0xC41EFC", VA = "0xC41EFC")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x2000324")]
	internal class Session
	{
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xC42020", Offset = "0xC42020", VA = "0xC42020")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x2000325")]
	public class Logger
	{
		[Token(Token = "0x4000F32")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xC3A838", Offset = "0xC3A838", VA = "0xC3A838")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xC42364", Offset = "0xC42364", VA = "0xC42364")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xC42028", Offset = "0xC42028", VA = "0xC42028")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xC423F4", Offset = "0xC423F4", VA = "0xC423F4")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xC42538", Offset = "0xC42538", VA = "0xC42538")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x2000326")]
	public enum JsonType
	{
		[Token(Token = "0x4000F37")]
		None,
		[Token(Token = "0x4000F38")]
		Object,
		[Token(Token = "0x4000F39")]
		Array,
		[Token(Token = "0x4000F3A")]
		String,
		[Token(Token = "0x4000F3B")]
		Int,
		[Token(Token = "0x4000F3C")]
		Long,
		[Token(Token = "0x4000F3D")]
		Double,
		[Token(Token = "0x4000F3E")]
		Boolean
	}
	[Token(Token = "0x2000327")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x17000124")]
		bool IsArray
		{
			[Token(Token = "0x6000EF6")]
			get;
		}

		[Token(Token = "0x17000125")]
		bool IsBoolean
		{
			[Token(Token = "0x6000EF7")]
			get;
		}

		[Token(Token = "0x17000126")]
		bool IsDouble
		{
			[Token(Token = "0x6000EF8")]
			get;
		}

		[Token(Token = "0x17000127")]
		bool IsInt
		{
			[Token(Token = "0x6000EF9")]
			get;
		}

		[Token(Token = "0x17000128")]
		bool IsLong
		{
			[Token(Token = "0x6000EFA")]
			get;
		}

		[Token(Token = "0x17000129")]
		bool IsObject
		{
			[Token(Token = "0x6000EFB")]
			get;
		}

		[Token(Token = "0x1700012A")]
		bool IsString
		{
			[Token(Token = "0x6000EFC")]
			get;
		}

		[Token(Token = "0x6000EFD")]
		bool GetBoolean();

		[Token(Token = "0x6000EFE")]
		double GetDouble();

		[Token(Token = "0x6000EFF")]
		int GetInt();

		[Token(Token = "0x6000F00")]
		JsonType GetJsonType();

		[Token(Token = "0x6000F01")]
		long GetLong();

		[Token(Token = "0x6000F02")]
		string GetString();

		[Token(Token = "0x6000F03")]
		void SetBoolean(bool val);

		[Token(Token = "0x6000F04")]
		void SetDouble(double val);

		[Token(Token = "0x6000F05")]
		void SetInt(int val);

		[Token(Token = "0x6000F06")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x6000F07")]
		void SetLong(long val);

		[Token(Token = "0x6000F08")]
		void SetString(string val);

		[Token(Token = "0x6000F09")]
		string ToJson();

		[Token(Token = "0x6000F0A")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x2000328")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x1700012B")]
		public int Count
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0xC4258C", Offset = "0xC4258C", VA = "0xC4258C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700012C")]
		public bool IsArray
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0xC3CDD8", Offset = "0xC3CDD8", VA = "0xC3CDD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012D")]
		public bool IsBoolean
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0xC4270C", Offset = "0xC4270C", VA = "0xC4270C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012E")]
		public bool IsDouble
		{
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0xC4271C", Offset = "0xC4271C", VA = "0xC4271C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012F")]
		public bool IsInt
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0xC3CE00", Offset = "0xC3CE00", VA = "0xC3CE00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000130")]
		public bool IsLong
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0xC3CDF0", Offset = "0xC3CDF0", VA = "0xC3CDF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000131")]
		public bool IsObject
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0xC4272C", Offset = "0xC4272C", VA = "0xC4272C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000132")]
		public bool IsString
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0xC4273C", Offset = "0xC4273C", VA = "0xC4273C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000133")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0xC4274C", Offset = "0xC4274C", VA = "0xC4274C", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000134")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0xC42750", Offset = "0xC42750", VA = "0xC42750", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0xC427FC", Offset = "0xC427FC", VA = "0xC427FC", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0xC428A8", Offset = "0xC428A8", VA = "0xC428A8", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000137")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0xC42AE0", Offset = "0xC42AE0", VA = "0xC42AE0", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000138")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0xC42B8C", Offset = "0xC42B8C", VA = "0xC42B8C", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0xC42F58", Offset = "0xC42F58", VA = "0xC42F58", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0xC43324", Offset = "0xC43324", VA = "0xC43324", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013B")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0xC43334", Offset = "0xC43334", VA = "0xC43334", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013C")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0xC43344", Offset = "0xC43344", VA = "0xC43344", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013D")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0xC43354", Offset = "0xC43354", VA = "0xC43354", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013E")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0xC43364", Offset = "0xC43364", VA = "0xC43364", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013F")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0xC43374", Offset = "0xC43374", VA = "0xC43374", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000140")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0xC43384", Offset = "0xC43384", VA = "0xC43384", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000141")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0xC43394", Offset = "0xC43394", VA = "0xC43394", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0xC43578", Offset = "0xC43578", VA = "0xC43578", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0xC43624", Offset = "0xC43624", VA = "0xC43624", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0xC436D4", Offset = "0xC436D4", VA = "0xC436D4", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0xC43BC4", Offset = "0xC43BC4", VA = "0xC43BC4", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0xC43C88", Offset = "0xC43C88", VA = "0xC43C88", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0xC43E94", Offset = "0xC43E94", VA = "0xC43E94", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0xC43F44", Offset = "0xC43F44", VA = "0xC43F44", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public JsonData this[string prop_name]
		{
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0xC3AA2C", Offset = "0xC3AA2C", VA = "0xC3AA2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0xC43840", Offset = "0xC43840", VA = "0xC43840")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public JsonData this[int index]
		{
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0xC44218", Offset = "0xC44218", VA = "0xC44218")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0xC43F7C", Offset = "0xC43F7C", VA = "0xC43F7C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xC44368", Offset = "0xC44368", VA = "0xC44368")]
		public JsonData()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xC44370", Offset = "0xC44370", VA = "0xC44370")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xC443A0", Offset = "0xC443A0", VA = "0xC443A0")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xC443D0", Offset = "0xC443D0", VA = "0xC443D0")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xC44400", Offset = "0xC44400", VA = "0xC44400")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xC44430", Offset = "0xC44430", VA = "0xC44430")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xC44654", Offset = "0xC44654", VA = "0xC44654")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xC44684", Offset = "0xC44684", VA = "0xC44684")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xC446F4", Offset = "0xC446F4", VA = "0xC446F4")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xC44768", Offset = "0xC44768", VA = "0xC44768")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xC447D4", Offset = "0xC447D4", VA = "0xC447D4")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xC44840", Offset = "0xC44840", VA = "0xC44840")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xC448AC", Offset = "0xC448AC", VA = "0xC448AC")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xC4491C", Offset = "0xC4491C", VA = "0xC4491C")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xC3AADC", Offset = "0xC3AADC", VA = "0xC3AADC")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xC3B548", Offset = "0xC3B548", VA = "0xC3B548")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xC3AB4C", Offset = "0xC3AB4C", VA = "0xC3AB4C")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xC4498C", Offset = "0xC4498C", VA = "0xC4498C", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xC44A4C", Offset = "0xC44A4C", VA = "0xC44A4C", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xC44C0C", Offset = "0xC44C0C", VA = "0xC44C0C", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xC44D38", Offset = "0xC44D38", VA = "0xC44D38", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xC44DEC", Offset = "0xC44DEC", VA = "0xC44DEC", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xC44E84", Offset = "0xC44E84", VA = "0xC44E84", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xC45108", Offset = "0xC45108", VA = "0xC45108", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xC451B0", Offset = "0xC451B0", VA = "0xC451B0", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xC45218", Offset = "0xC45218", VA = "0xC45218", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xC45280", Offset = "0xC45280", VA = "0xC45280", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xC452E8", Offset = "0xC452E8", VA = "0xC452E8", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xC45350", Offset = "0xC45350", VA = "0xC45350", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xC453B8", Offset = "0xC453B8", VA = "0xC453B8", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xC453D0", Offset = "0xC453D0", VA = "0xC453D0", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xC453E4", Offset = "0xC453E4", VA = "0xC453E4", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xC453F8", Offset = "0xC453F8", VA = "0xC453F8", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xC4540C", Offset = "0xC4540C", VA = "0xC4540C", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xC4541C", Offset = "0xC4541C", VA = "0xC4541C", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xC454D8", Offset = "0xC454D8", VA = "0xC454D8", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xC4550C", Offset = "0xC4550C", VA = "0xC4550C", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xC455D4", Offset = "0xC455D4", VA = "0xC455D4", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xC45688", Offset = "0xC45688", VA = "0xC45688", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xC4573C", Offset = "0xC4573C", VA = "0xC4573C", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xC457F0", Offset = "0xC457F0", VA = "0xC457F0", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xC458BC", Offset = "0xC458BC", VA = "0xC458BC", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xC45978", Offset = "0xC45978", VA = "0xC45978", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xC45A34", Offset = "0xC45A34", VA = "0xC45A34", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xC45B44", Offset = "0xC45B44", VA = "0xC45B44", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xC45C90", Offset = "0xC45C90", VA = "0xC45C90", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xC42638", Offset = "0xC42638", VA = "0xC42638")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xC42954", Offset = "0xC42954", VA = "0xC42954")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xC43440", Offset = "0xC43440", VA = "0xC43440")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xC437B0", Offset = "0xC437B0", VA = "0xC437B0")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xC45E3C", Offset = "0xC45E3C", VA = "0xC45E3C")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xC45510", Offset = "0xC45510", VA = "0xC45510")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xC46A40", Offset = "0xC46A40", VA = "0xC46A40")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xC46B50", Offset = "0xC46B50", VA = "0xC46B50", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xC46C3C", Offset = "0xC46C3C", VA = "0xC46C3C", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xC46C44", Offset = "0xC46C44", VA = "0xC46C44", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xC45420", Offset = "0xC45420", VA = "0xC45420")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xC454DC", Offset = "0xC454DC", VA = "0xC454DC")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xC46DAC", Offset = "0xC46DAC", VA = "0xC46DAC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000329")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x17000148")]
		public object Current
		{
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0xC46EA0", Offset = "0xC46EA0", VA = "0xC46EA0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0xC46F04", Offset = "0xC46F04", VA = "0xC46F04", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x1700014A")]
		public object Key
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0xC46FEC", Offset = "0xC46FEC", VA = "0xC46FEC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		public object Value
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0xC47098", Offset = "0xC47098", VA = "0xC47098", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xC45B1C", Offset = "0xC45B1C", VA = "0xC45B1C")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xC4714C", Offset = "0xC4714C", VA = "0xC4714C", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xC471EC", Offset = "0xC471EC", VA = "0xC471EC", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xC47290", Offset = "0xC47290", VA = "0xC47290")]
		public JsonException()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xC47298", Offset = "0xC47298", VA = "0xC47298")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xC47334", Offset = "0xC47334", VA = "0xC47334")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xC473D8", Offset = "0xC473D8", VA = "0xC473D8")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xC47474", Offset = "0xC47474", VA = "0xC47474")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xC47518", Offset = "0xC47518", VA = "0xC47518")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xC47520", Offset = "0xC47520", VA = "0xC47520")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x200032B")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x200032C")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x1700014C")]
		public Type ElementType
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xC47528", Offset = "0xC47528", VA = "0xC47528")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0xC475D0", Offset = "0xC475D0", VA = "0xC475D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public bool IsArray
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0xC475D8", Offset = "0xC475D8", VA = "0xC475D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0xC475E0", Offset = "0xC475E0", VA = "0xC475E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public bool IsList
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0xC475EC", Offset = "0xC475EC", VA = "0xC475EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0xC475F4", Offset = "0xC475F4", VA = "0xC475F4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200032D")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x1700014F")]
		public Type ElementType
		{
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0xC47600", Offset = "0xC47600", VA = "0xC47600")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0xC476A8", Offset = "0xC476A8", VA = "0xC476A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public bool IsDictionary
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0xC476B0", Offset = "0xC476B0", VA = "0xC476B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0xC476B8", Offset = "0xC476B8", VA = "0xC476B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0xC476C4", Offset = "0xC476C4", VA = "0xC476C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0xC476CC", Offset = "0xC476CC", VA = "0xC476CC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200032E")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x200032F")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x2000330")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x2000331")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x2000332")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x2000333")]
	public class JsonMapper
	{
		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xC47AB4", Offset = "0xC47AB4", VA = "0xC47AB4")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xC497CC", Offset = "0xC497CC", VA = "0xC497CC")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xC49C50", Offset = "0xC49C50", VA = "0xC49C50")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xC4A338", Offset = "0xC4A338", VA = "0xC4A338")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xC4A85C", Offset = "0xC4A85C", VA = "0xC4A85C")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xC4B0DC", Offset = "0xC4B0DC", VA = "0xC4B0DC")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xC4BFD8", Offset = "0xC4BFD8", VA = "0xC4BFD8")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xC47E50", Offset = "0xC47E50", VA = "0xC47E50")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xC48B24", Offset = "0xC48B24", VA = "0xC48B24")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xC4C63C", Offset = "0xC4C63C", VA = "0xC4C63C")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xC4C880", Offset = "0xC4C880", VA = "0xC4C880")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xC4DFC8", Offset = "0xC4DFC8", VA = "0xC4DFC8")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xC4E144", Offset = "0xC4E144", VA = "0xC4E144")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xC4E1B0", Offset = "0xC4E1B0", VA = "0xC4E1B0")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xC4E360", Offset = "0xC4E360", VA = "0xC4E360")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xC3A8E0", Offset = "0xC3A8E0", VA = "0xC3A8E0")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6000FA6")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000FA7")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000FA8")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xC4E2FC", Offset = "0xC4E2FC", VA = "0xC4E2FC")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xC4E4DC", Offset = "0xC4E4DC", VA = "0xC4E4DC")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6000FAB")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6000FAC")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xC4E574", Offset = "0xC4E574", VA = "0xC4E574")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xC4E640", Offset = "0xC4E640", VA = "0xC4E640")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xC4E70C", Offset = "0xC4E70C", VA = "0xC4E70C")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public enum JsonToken
	{
		[Token(Token = "0x4000F81")]
		None,
		[Token(Token = "0x4000F82")]
		ObjectStart,
		[Token(Token = "0x4000F83")]
		PropertyName,
		[Token(Token = "0x4000F84")]
		ObjectEnd,
		[Token(Token = "0x4000F85")]
		ArrayStart,
		[Token(Token = "0x4000F86")]
		ArrayEnd,
		[Token(Token = "0x4000F87")]
		Int,
		[Token(Token = "0x4000F88")]
		Long,
		[Token(Token = "0x4000F89")]
		Double,
		[Token(Token = "0x4000F8A")]
		String,
		[Token(Token = "0x4000F8B")]
		Boolean,
		[Token(Token = "0x4000F8C")]
		Null
	}
	[Token(Token = "0x2000338")]
	public class JsonReader
	{
		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x17000152")]
		public bool AllowComments
		{
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0xAD16A8", Offset = "0xAD16A8", VA = "0xAD16A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0xAD16C4", Offset = "0xAD16C4", VA = "0xAD16C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xAD16E4", Offset = "0xAD16E4", VA = "0xAD16E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xAD1700", Offset = "0xAD1700", VA = "0xAD1700")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public bool EndOfInput
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0xAD1720", Offset = "0xAD1720", VA = "0xAD1720")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000155")]
		public bool EndOfJson
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0xAD1728", Offset = "0xAD1728", VA = "0xAD1728")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000156")]
		public JsonToken Token
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0xAD1730", Offset = "0xAD1730", VA = "0xAD1730")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x17000157")]
		public object Value
		{
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0xAD1738", Offset = "0xAD1738", VA = "0xAD1738")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xAD1740", Offset = "0xAD1740", VA = "0xAD1740")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xAD1E10", Offset = "0xAD1E10", VA = "0xAD1E10")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xAD1FFC", Offset = "0xAD1FFC", VA = "0xAD1FFC")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xAD1E88", Offset = "0xAD1E88", VA = "0xAD1E88")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xAD1744", Offset = "0xAD1744", VA = "0xAD1744")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xAD21E8", Offset = "0xAD21E8", VA = "0xAD21E8")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xAD20D0", Offset = "0xAD20D0", VA = "0xAD20D0")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xAD2348", Offset = "0xAD2348", VA = "0xAD2348")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xAD24AC", Offset = "0xAD24AC", VA = "0xAD24AC")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xAD2638", Offset = "0xAD2638", VA = "0xAD2638")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xAD2854", Offset = "0xAD2854", VA = "0xAD2854")]
		public void Close()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xAD2898", Offset = "0xAD2898", VA = "0xAD2898")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000339")]
	internal enum Condition
	{
		[Token(Token = "0x4000F9C")]
		InArray,
		[Token(Token = "0x4000F9D")]
		InObject,
		[Token(Token = "0x4000F9E")]
		NotAProperty,
		[Token(Token = "0x4000F9F")]
		Property,
		[Token(Token = "0x4000FA0")]
		Value
	}
	[Token(Token = "0x200033A")]
	internal class WriterContext
	{
		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xAD2D04", Offset = "0xAD2D04", VA = "0xAD2D04")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class JsonWriter
	{
		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x17000158")]
		public int IndentValue
		{
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0xAD2D0C", Offset = "0xAD2D0C", VA = "0xAD2D0C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xAD2D14", Offset = "0xAD2D14", VA = "0xAD2D14")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xAD2D28", Offset = "0xAD2D28", VA = "0xAD2D28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xAD2D30", Offset = "0xAD2D30", VA = "0xAD2D30")]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0xAD2D3C", Offset = "0xAD2D3C", VA = "0xAD2D3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		public bool Validate
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0xAD2D44", Offset = "0xAD2D44", VA = "0xAD2D44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0xAD2D4C", Offset = "0xAD2D4C", VA = "0xAD2D4C")]
			set
			{
			}
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xAD2D58", Offset = "0xAD2D58", VA = "0xAD2D58")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xAD2DA8", Offset = "0xAD2DA8", VA = "0xAD2DA8")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xAD2F58", Offset = "0xAD2F58", VA = "0xAD2F58")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xAD2FCC", Offset = "0xAD2FCC", VA = "0xAD2FCC")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xAD3048", Offset = "0xAD3048", VA = "0xAD3048")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xAD2E4C", Offset = "0xAD2E4C", VA = "0xAD2E4C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xAD31E8", Offset = "0xAD31E8", VA = "0xAD31E8")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xAD3260", Offset = "0xAD3260", VA = "0xAD3260")]
		private void Indent()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xAD3278", Offset = "0xAD3278", VA = "0xAD3278")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xAD3300", Offset = "0xAD3300", VA = "0xAD3300")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xAD3308", Offset = "0xAD3308", VA = "0xAD3308")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xAD3388", Offset = "0xAD3388", VA = "0xAD3388")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xAD3680", Offset = "0xAD3680", VA = "0xAD3680")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xAD3698", Offset = "0xAD3698", VA = "0xAD3698", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xAD3700", Offset = "0xAD3700", VA = "0xAD3700")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xAD37E0", Offset = "0xAD37E0", VA = "0xAD37E0")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xAD040C", Offset = "0xAD040C", VA = "0xAD040C")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xAD0988", Offset = "0xAD0988", VA = "0xAD0988")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xAD0090", Offset = "0xAD0090", VA = "0xAD0090")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xAD3878", Offset = "0xAD3878", VA = "0xAD3878")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xAD0218", Offset = "0xAD0218", VA = "0xAD0218")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xAD07B8", Offset = "0xAD07B8", VA = "0xAD07B8")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xAD394C", Offset = "0xAD394C", VA = "0xAD394C")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xAD3A38", Offset = "0xAD3A38", VA = "0xAD3A38")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xAD3B1C", Offset = "0xAD3B1C", VA = "0xAD3B1C")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xAD3C08", Offset = "0xAD3C08", VA = "0xAD3C08")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xAD3CEC", Offset = "0xAD3CEC", VA = "0xAD3CEC")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x200033C")]
	internal class FsmContext
	{
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xAD3DF4", Offset = "0xAD3DF4", VA = "0xAD3DF4")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x200033D")]
	internal class Lexer
	{
		[Token(Token = "0x200033E")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x1700015C")]
		public bool AllowComments
		{
			[Token(Token = "0x6001008")]
			[Address(RVA = "0xAD3DFC", Offset = "0xAD3DFC", VA = "0xAD3DFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001009")]
			[Address(RVA = "0xAD3E04", Offset = "0xAD3E04", VA = "0xAD3E04")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0xAD3E10", Offset = "0xAD3E10", VA = "0xAD3E10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xAD3E18", Offset = "0xAD3E18", VA = "0xAD3E18")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public bool EndOfInput
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0xAD3E24", Offset = "0xAD3E24", VA = "0xAD3E24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015F")]
		public int Token
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xAD3E2C", Offset = "0xAD3E2C", VA = "0xAD3E2C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000160")]
		public string StringValue
		{
			[Token(Token = "0x600100E")]
			[Address(RVA = "0xAD3E34", Offset = "0xAD3E34", VA = "0xAD3E34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xAD3E3C", Offset = "0xAD3E3C", VA = "0xAD3E3C")]
		static Lexer()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xAD2004", Offset = "0xAD2004", VA = "0xAD2004")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xAD4874", Offset = "0xAD4874", VA = "0xAD4874")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xAD3E40", Offset = "0xAD3E40", VA = "0xAD3E40")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xAD4A24", Offset = "0xAD4A24", VA = "0xAD4A24")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xAD4B14", Offset = "0xAD4B14", VA = "0xAD4B14")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xAD4D18", Offset = "0xAD4D18", VA = "0xAD4D18")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xAD4DBC", Offset = "0xAD4DBC", VA = "0xAD4DBC")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xAD4EF8", Offset = "0xAD4EF8", VA = "0xAD4EF8")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xAD4FF4", Offset = "0xAD4FF4", VA = "0xAD4FF4")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xAD5074", Offset = "0xAD5074", VA = "0xAD5074")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xAD5170", Offset = "0xAD5170", VA = "0xAD5170")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xAD5204", Offset = "0xAD5204", VA = "0xAD5204")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xAD52C0", Offset = "0xAD52C0", VA = "0xAD52C0")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xAD532C", Offset = "0xAD532C", VA = "0xAD532C")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xAD5398", Offset = "0xAD5398", VA = "0xAD5398")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xAD5404", Offset = "0xAD5404", VA = "0xAD5404")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xAD5470", Offset = "0xAD5470", VA = "0xAD5470")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xAD54DC", Offset = "0xAD54DC", VA = "0xAD54DC")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xAD5548", Offset = "0xAD5548", VA = "0xAD5548")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xAD55B4", Offset = "0xAD55B4", VA = "0xAD55B4")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xAD5620", Offset = "0xAD5620", VA = "0xAD5620")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xAD568C", Offset = "0xAD568C", VA = "0xAD568C")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xAD56F8", Offset = "0xAD56F8", VA = "0xAD56F8")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xAD57A0", Offset = "0xAD57A0", VA = "0xAD57A0")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xAD580C", Offset = "0xAD580C", VA = "0xAD580C")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xAD5944", Offset = "0xAD5944", VA = "0xAD5944")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xAD5AC0", Offset = "0xAD5AC0", VA = "0xAD5AC0")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xAD5B68", Offset = "0xAD5B68", VA = "0xAD5B68")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xAD5BDC", Offset = "0xAD5BDC", VA = "0xAD5BDC")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xAD5C58", Offset = "0xAD5C58", VA = "0xAD5C58")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xAD5CC0", Offset = "0xAD5CC0", VA = "0xAD5CC0")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xAD5D28", Offset = "0xAD5D28", VA = "0xAD5D28")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xAD4CEC", Offset = "0xAD4CEC", VA = "0xAD4CEC")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xAD5DA0", Offset = "0xAD5DA0", VA = "0xAD5DA0")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xAD268C", Offset = "0xAD268C", VA = "0xAD268C")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xAD4EEC", Offset = "0xAD4EEC", VA = "0xAD4EEC")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x200033F")]
	internal enum ParserToken
	{
		[Token(Token = "0x4000FC4")]
		None = 65536,
		[Token(Token = "0x4000FC5")]
		Number,
		[Token(Token = "0x4000FC6")]
		True,
		[Token(Token = "0x4000FC7")]
		False,
		[Token(Token = "0x4000FC8")]
		Null,
		[Token(Token = "0x4000FC9")]
		CharSeq,
		[Token(Token = "0x4000FCA")]
		Char,
		[Token(Token = "0x4000FCB")]
		Text,
		[Token(Token = "0x4000FCC")]
		Object,
		[Token(Token = "0x4000FCD")]
		ObjectPrime,
		[Token(Token = "0x4000FCE")]
		Pair,
		[Token(Token = "0x4000FCF")]
		PairRest,
		[Token(Token = "0x4000FD0")]
		Array,
		[Token(Token = "0x4000FD1")]
		ArrayPrime,
		[Token(Token = "0x4000FD2")]
		Value,
		[Token(Token = "0x4000FD3")]
		ValueRest,
		[Token(Token = "0x4000FD4")]
		String,
		[Token(Token = "0x4000FD5")]
		End,
		[Token(Token = "0x4000FD6")]
		Epsilon
	}
}
namespace UB
{
	[Token(Token = "0x2000340")]
	public class SimpleRotater : MonoBehaviour
	{
		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float XSpeed;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float YSpeed;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ZSpeed;

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xAD5E34", Offset = "0xAD5E34", VA = "0xAD5E34")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xAD5E70", Offset = "0xAD5E70", VA = "0xAD5E70")]
		public SimpleRotater()
		{
		}
	}
}
namespace Sumalab.Util
{
	[Token(Token = "0x2000341")]
	public class SumalabEvent
	{
		[Token(Token = "0x14000013")]
		private event Action _event
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0xAD5E78", Offset = "0xAD5E78", VA = "0xAD5E78")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600103B")]
			[Address(RVA = "0xAD5F14", Offset = "0xAD5F14", VA = "0xAD5F14")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xAD5FB0", Offset = "0xAD5FB0", VA = "0xAD5FB0")]
		public void Listen(Action action)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xAD5FB4", Offset = "0xAD5FB4", VA = "0xAD5FB4")]
		public void Remove(Action action)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xAD5FB8", Offset = "0xAD5FB8", VA = "0xAD5FB8")]
		public void Clear()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xAD5FC0", Offset = "0xAD5FC0", VA = "0xAD5FC0")]
		public void Send()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xAD60B4", Offset = "0xAD60B4", VA = "0xAD60B4")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class SumalabEvent<T0>
	{
		[Token(Token = "0x14000014")]
		private event Action<T0> _event
		{
			[Token(Token = "0x6001041")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001042")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001043")]
		public void Listen(Action<T0> action)
		{
		}

		[Token(Token = "0x6001044")]
		public void Remove(Action<T0> action)
		{
		}

		[Token(Token = "0x6001045")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001046")]
		public void Send(T0 arg0)
		{
		}

		[Token(Token = "0x6001047")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class SumalabEvent<T0, T1>
	{
		[Token(Token = "0x14000015")]
		private event Action<T0, T1> _event
		{
			[Token(Token = "0x6001048")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001049")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600104A")]
		public void Listen(Action<T0, T1> action)
		{
		}

		[Token(Token = "0x600104B")]
		public void Remove(Action<T0, T1> action)
		{
		}

		[Token(Token = "0x600104C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600104D")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x600104E")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class SumalabEvent<T0, T1, T2>
	{
		[Token(Token = "0x14000016")]
		private event Action<T0, T1, T2> _event
		{
			[Token(Token = "0x600104F")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001050")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001051")]
		public void Listen(Action<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001052")]
		public void Remove(Action<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6001053")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001054")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6001055")]
		public SumalabEvent()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class SumalabInvoke : MonoBehaviour
	{
		[Token(Token = "0x2000346")]
		public class SumalabInvokeHandler
		{
			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object[] arguments;

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public object o;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float start;

			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float delay;

			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float repeat;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float end;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action action;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool canceled;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool repeated;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
			public bool realTime;

			[Token(Token = "0x6001070")]
			[Address(RVA = "0xAD7CCC", Offset = "0xAD7CCC", VA = "0xAD7CCC")]
			public void execute()
			{
			}

			[Token(Token = "0x6001071")]
			[Address(RVA = "0xAD7C08", Offset = "0xAD7C08", VA = "0xAD7C08")]
			internal bool finished()
			{
				return default(bool);
			}

			[Token(Token = "0x6001072")]
			[Address(RVA = "0xAD8414", Offset = "0xAD8414", VA = "0xAD8414")]
			internal float getNextRepeatTime()
			{
				return default(float);
			}

			[Token(Token = "0x6001073")]
			[Address(RVA = "0xAD8250", Offset = "0xAD8250", VA = "0xAD8250")]
			public SumalabInvokeHandler()
			{
			}
		}

		[Token(Token = "0x2000347")]
		private class DecendingComparer : IComparer
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0xAD841C", Offset = "0xAD841C", VA = "0xAD841C", Slot = "4")]
			public int Compare(object x, object y)
			{
				return default(int);
			}

			[Token(Token = "0x6001075")]
			[Address(RVA = "0xAD83B8", Offset = "0xAD83B8", VA = "0xAD83B8")]
			public DecendingComparer()
			{
			}
		}

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float NEXT_FRAME;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedList pendingTasks;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SortedList pendingTasksRealTime;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<object, object> cancelTasksCache;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_bIsExecutingTasks;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SumalabInvokeHandler> addInvokeLater;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SumalabInvoke Instance;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float currentTime;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float currentRealTime;

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xAD60BC", Offset = "0xAD60BC", VA = "0xAD60BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xAD6118", Offset = "0xAD6118", VA = "0xAD6118")]
		public static SumalabInvokeHandler Invoke(object target, string methodName, float delay, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xAD6358", Offset = "0xAD6358", VA = "0xAD6358")]
		public static SumalabInvokeHandler InvokeRealTime(object target, string methodName, float delay, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xAD63E4", Offset = "0xAD63E4", VA = "0xAD63E4")]
		public static SumalabInvokeHandler InvokeRepeat(object target, string methodName, float start, float delay, float end, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xAD6480", Offset = "0xAD6480", VA = "0xAD6480")]
		public static SumalabInvokeHandler InvokeRepeatRealTime(object target, string methodName, float start, float delay, float end, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xAD651C", Offset = "0xAD651C", VA = "0xAD651C")]
		public static SumalabInvokeHandler Invoke(object o, Action action, float delay)
		{
			return null;
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xAD65FC", Offset = "0xAD65FC", VA = "0xAD65FC")]
		public static SumalabInvokeHandler InvokeRealTime(object o, Action action, float delay)
		{
			return null;
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xAD66DC", Offset = "0xAD66DC", VA = "0xAD66DC")]
		public static SumalabInvokeHandler InvokeRepeat(object o, Action action, float start, float delay, float end)
		{
			return null;
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xAD67CC", Offset = "0xAD67CC", VA = "0xAD67CC")]
		public static SumalabInvokeHandler InvokeRepeatRealTime(object o, Action action, float start, float delay, float end)
		{
			return null;
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xAD68BC", Offset = "0xAD68BC", VA = "0xAD68BC")]
		public static SumalabInvokeHandler Invoke(object o, string label, Action action, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xAD69A0", Offset = "0xAD69A0", VA = "0xAD69A0")]
		public static SumalabInvokeHandler InvokeRealTime(object o, string label, Action action, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xAD6A84", Offset = "0xAD6A84", VA = "0xAD6A84")]
		public static SumalabInvokeHandler InvokeRepeat(object o, string label, Action action, float start, float delay, float end, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xAD6B2C", Offset = "0xAD6B2C", VA = "0xAD6B2C")]
		public static SumalabInvokeHandler InvokeRepeatRealTime(object o, string label, Action action, float start, float delay, float end, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xAD6BD4", Offset = "0xAD6BD4", VA = "0xAD6BD4")]
		public static void CancelInvoke(object o, SumalabInvokeHandler invokeHandler)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xAD6DA0", Offset = "0xAD6DA0", VA = "0xAD6DA0")]
		public static void CancelInvoke(object o, [Optional] string name)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xAD7050", Offset = "0xAD7050", VA = "0xAD7050")]
		private void Update()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xAD71D8", Offset = "0xAD71D8", VA = "0xAD71D8")]
		private void executePendingTasks(SortedList pendingTasks, bool realTime)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xAD7AE0", Offset = "0xAD7AE0", VA = "0xAD7AE0")]
		private void executeTask(SumalabInvokeHandler task)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xAD7990", Offset = "0xAD7990", VA = "0xAD7990")]
		private void executeTaskList(List<SumalabInvokeHandler> _pendingTasks)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xAD6C90", Offset = "0xAD6C90", VA = "0xAD6C90")]
		public static void init()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xAD749C", Offset = "0xAD749C", VA = "0xAD749C")]
		private void addInvoke(SumalabInvokeHandler data, float delay)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xAD7F44", Offset = "0xAD7F44", VA = "0xAD7F44")]
		private void addTaskToCancelCache(SumalabInvokeHandler handler)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xAD7DEC", Offset = "0xAD7DEC", VA = "0xAD7DEC")]
		private void removeTaskFromCancelCache(SumalabInvokeHandler handler)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xAD61A4", Offset = "0xAD61A4", VA = "0xAD61A4")]
		private static SumalabInvokeHandler addInvoke(Action action, float fRepeat, float fEnd, object o, string methodName, float fTime, bool realTime, params object[] arguments)
		{
			return null;
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xAD8258", Offset = "0xAD8258", VA = "0xAD8258")]
		public SumalabInvoke()
		{
		}
	}
}
namespace SumalabVR.Weapons
{
	[Token(Token = "0x2000348")]
	public class BulletIndicatorDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro display;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Weapon weapon;

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xAD84D4", Offset = "0xAD84D4", VA = "0xAD84D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xAD8550", Offset = "0xAD8550", VA = "0xAD8550")]
		private void OnFire()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xAD85BC", Offset = "0xAD85BC", VA = "0xAD85BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xAD8674", Offset = "0xAD8674", VA = "0xAD8674")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xAD8580", Offset = "0xAD8580", VA = "0xAD8580")]
		private string getBullets()
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xAD872C", Offset = "0xAD872C", VA = "0xAD872C")]
		public BulletIndicatorDisplay()
		{
		}
	}
}
namespace Sumalab_Weapons
{
	[Token(Token = "0x2000349")]
	public class Body : MonoBehaviour
	{
		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRHead head;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tweener tweener;

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xAD8734", Offset = "0xAD8734", VA = "0xAD8734")]
		private void Update()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xAD87EC", Offset = "0xAD87EC", VA = "0xAD87EC")]
		public Body()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DisableOnHit;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool UIMode;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponData weapon;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AimTarget owner;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static LayerMask layersToIgnore;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool remote;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool isRemotePlayer;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 initPosition;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 currentPosition;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 newPosition;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _bRepeatCheck;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float DecalCastRadius;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public EasyDecal DefaultDecalPrefab;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float speedModifier;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float MAX_DECAL_DISTANCE;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float MAX_SOUND_DISTANCE;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float MIN_BULLET_FLY_SOUND_DISTANCE;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_bPlayerSound;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HitTarget hitTarget;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<SphereHit> m_lRaycastItemsHit;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Renderer bulletRenderer;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrailRenderer trailRenderer;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int LAYERS_UI;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int LAYERS_PLAYERWEAPONS_IGNOREBULLETS;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject bulletHole;

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xAD87F4", Offset = "0xAD87F4", VA = "0xAD87F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xAD89F8", Offset = "0xAD89F8", VA = "0xAD89F8")]
		public void Fire(Vector3 initPosition)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xAD8C38", Offset = "0xAD8C38", VA = "0xAD8C38")]
		public void Fire(Vector3 initPosition, Vector3 finalPosition)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xAD8AD8", Offset = "0xAD8AD8", VA = "0xAD8AD8")]
		private void enableImpl()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xAD8E08", Offset = "0xAD8E08", VA = "0xAD8E08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xAD8F28", Offset = "0xAD8F28", VA = "0xAD8F28")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xAD8F40", Offset = "0xAD8F40", VA = "0xAD8F40")]
		private void checkPlayerSound()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xAD90F4", Offset = "0xAD90F4", VA = "0xAD90F4")]
		private void MoveBullet()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xAD9344", Offset = "0xAD9344", VA = "0xAD9344")]
		private void CheckHit()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xADA2F8", Offset = "0xADA2F8", VA = "0xADA2F8")]
		public void repeatCheck()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xADA304", Offset = "0xADA304", VA = "0xADA304")]
		public void disableBullet()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xADAA68", Offset = "0xADAA68", VA = "0xADAA68")]
		private void disableImpl()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xADA3B8", Offset = "0xADA3B8", VA = "0xADA3B8")]
		private void addDecalHit(HitTarget hitTarget, Ray ray, RaycastHit initialHit)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xADAA94", Offset = "0xADAA94", VA = "0xADAA94")]
		private void CheckTarget()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xAD9228", Offset = "0xAD9228", VA = "0xAD9228")]
		public bool isPlayerBullet()
		{
			return default(bool);
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xADAA98", Offset = "0xADAA98", VA = "0xADAA98")]
		public Vector3 getInitPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xADAAA4", Offset = "0xADAAA4", VA = "0xADAAA4")]
		public HitTarget getTargetHitted()
		{
			return null;
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xADAAAC", Offset = "0xADAAAC", VA = "0xADAAAC")]
		public Bullet()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class BulletModel : MonoBehaviour
	{
		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject bullet;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject wastedBullet;

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xADABD0", Offset = "0xADABD0", VA = "0xADABD0", Slot = "4")]
		protected virtual void showBullet(bool wasted)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xADAC18", Offset = "0xADAC18", VA = "0xADAC18", Slot = "5")]
		public virtual void throwBullet(Weapon weapon, bool wasted)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xADAEC4", Offset = "0xADAEC4", VA = "0xADAEC4")]
		protected void bulletShellSound()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xADAEF8", Offset = "0xADAEF8", VA = "0xADAEF8")]
		public BulletModel()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class BulletModel_MiniGun : BulletModel
	{
		[Token(Token = "0x6001095")]
		[Address(RVA = "0xADAF00", Offset = "0xADAF00", VA = "0xADAF00", Slot = "4")]
		protected override void showBullet(bool wasted)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xADAF38", Offset = "0xADAF38", VA = "0xADAF38", Slot = "5")]
		public override void throwBullet(Weapon weapon, bool wasted)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xADB1E0", Offset = "0xADB1E0", VA = "0xADB1E0")]
		private void throwBullet(Transform bullet, Vector3 force, Vector3 angularForce)
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xADB3C8", Offset = "0xADB3C8", VA = "0xADB3C8")]
		public BulletModel_MiniGun()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class Cartridge : NVRInteractable
	{
		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public WeaponModel weaponModel;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Weapon weaponSaved;

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xADB3D0", Offset = "0xADB3D0", VA = "0xADB3D0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xADB498", Offset = "0xADB498", VA = "0xADB498", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xADB49C", Offset = "0xADB49C", VA = "0xADB49C", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xADB4A0", Offset = "0xADB4A0", VA = "0xADB4A0", Slot = "13")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xADB794", Offset = "0xADB794", VA = "0xADB794")]
		public void saveWeapon(Weapon weapon)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xADB930", Offset = "0xADB930", VA = "0xADB930")]
		public Weapon getWeapon()
		{
			return null;
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xADB940", Offset = "0xADB940", VA = "0xADB940", Slot = "8")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xADB944", Offset = "0xADB944", VA = "0xADB944", Slot = "21")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xADB948", Offset = "0xADB948", VA = "0xADB948")]
		public Cartridge()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class ChangeWeaponHand : MonoBehaviour
	{
		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float DETECTION_DISTANCE;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialised;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Weapon weapon;

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xADB9A0", Offset = "0xADB9A0", VA = "0xADB9A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xADBBAC", Offset = "0xADBBAC", VA = "0xADBBAC")]
		private void changeWeaponHand()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xADBBFC", Offset = "0xADBBFC", VA = "0xADBBFC")]
		public void init(Weapon weapon)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xADBC30", Offset = "0xADBC30", VA = "0xADBC30")]
		public void activate()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xADBC0C", Offset = "0xADBC0C", VA = "0xADBC0C")]
		public void deactivate()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xADBC54", Offset = "0xADBC54", VA = "0xADBC54")]
		public ChangeWeaponHand()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class DualWield : MonoBehaviour
	{
		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon mainWeapon;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon secondaryWeapon;

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xADBCAC", Offset = "0xADBCAC", VA = "0xADBCAC")]
		public void BeginInteraction(NVRHand mainHand)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xADBD40", Offset = "0xADBD40", VA = "0xADBD40")]
		public DualWield()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class HitDynamicTarget : HitTarget
	{
		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xADBD48", Offset = "0xADBD48", VA = "0xADBD48", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xADC01C", Offset = "0xADC01C", VA = "0xADC01C")]
		public HitDynamicTarget()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class HitTarget : MonoBehaviour
	{
		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showDecal;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool alwaysShow;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EasyDecal decal;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRCollisionSoundMaterials[] decalSound;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PoolManager.PoolType ImpactParticles;

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xADBE94", Offset = "0xADBE94", VA = "0xADBE94", Slot = "4")]
		public virtual bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xADC0A4", Offset = "0xADC0A4", VA = "0xADC0A4", Slot = "5")]
		protected virtual void ShowImpactEffect(Ray ray, RaycastHit hit)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xADC218", Offset = "0xADC218", VA = "0xADC218", Slot = "6")]
		public virtual void OnTarget()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xADC028", Offset = "0xADC028", VA = "0xADC028")]
		public HitTarget()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class MagDetector : MonoBehaviour
	{
		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool MagTriggered;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Weapon weapon;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WeaponMag mag;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool initialised;

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xADC21C", Offset = "0xADC21C", VA = "0xADC21C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xADC324", Offset = "0xADC324", VA = "0xADC324")]
		public WeaponMag getTriggeredMag()
		{
			return null;
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xADC334", Offset = "0xADC334", VA = "0xADC334")]
		public void init(Weapon gunTrigger)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xADC370", Offset = "0xADC370", VA = "0xADC370")]
		public void activate()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xADC344", Offset = "0xADC344", VA = "0xADC344")]
		public void deactivate()
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xADC394", Offset = "0xADC394", VA = "0xADC394")]
		public MagDetector()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class MiniGunCannon : MonoBehaviour
	{
		[Token(Token = "0x2000354")]
		[CompilerGenerated]
		private sealed class <Play>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MiniGunCannon <>4__this;

			[Token(Token = "0x17000161")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010BF")]
				[Address(RVA = "0xADC94C", Offset = "0xADC94C", VA = "0xADC94C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000162")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010C1")]
				[Address(RVA = "0xADC994", Offset = "0xADC994", VA = "0xADC994", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xADC404", Offset = "0xADC404", VA = "0xADC404")]
			[DebuggerHidden]
			public <Play>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60010BD")]
			[Address(RVA = "0xADC7DC", Offset = "0xADC7DC", VA = "0xADC7DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xADC7E0", Offset = "0xADC7E0", VA = "0xADC7E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010C0")]
			[Address(RVA = "0xADC954", Offset = "0xADC954", VA = "0xADC954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audioSource;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon weapon;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator animator;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip windUp;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip loop;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip shutdown;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float speed;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float currentSpeed;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float targetSpeed;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_bRemote;

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xADC39C", Offset = "0xADC39C", VA = "0xADC39C")]
		[IteratorStateMachine(typeof(<Play>d__10))]
		private IEnumerator Play()
		{
			return null;
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xADC42C", Offset = "0xADC42C", VA = "0xADC42C")]
		public void StartFiring(bool bRemote = false)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xADC508", Offset = "0xADC508", VA = "0xADC508")]
		public void StopFiring(bool bRemote = false)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xADC618", Offset = "0xADC618", VA = "0xADC618")]
		private void Update()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xADC7CC", Offset = "0xADC7CC", VA = "0xADC7CC")]
		public MiniGunCannon()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class WeaponsPool : MonoBehaviour
	{
		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject bulletPrefab;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bulletPoolSize;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space]
		public GameObject wastedBulletSPrefab;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int wastedBulletSSize;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space]
		public GameObject wastedBulletLPrefab;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int wastedBulletLSize;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WeaponsPool instance;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pool bulletPool;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pool wastedBulletSPool;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pool wastedBulletLPool;

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xADC99C", Offset = "0xADC99C", VA = "0xADC99C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xADCAA8", Offset = "0xADCAA8", VA = "0xADCAA8")]
		public static WeaponsPool getInstance()
		{
			return null;
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xADCAF0", Offset = "0xADCAF0", VA = "0xADCAF0")]
		public GameObject getBullet()
		{
			return null;
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xADCB0C", Offset = "0xADCB0C", VA = "0xADCB0C")]
		public GameObject getWastedBulletS()
		{
			return null;
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xADCB28", Offset = "0xADCB28", VA = "0xADCB28")]
		public GameObject getWastedBulletL()
		{
			return null;
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xADCB44", Offset = "0xADCB44", VA = "0xADCB44")]
		public WeaponsPool()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class SecondHandDetector : MonoBehaviour
	{
		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool detectionWithButton;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float DetectionDistance;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool SecondHandEnabled;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool initialised;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Weapon weapon;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool showingHighlightHand;

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xADCB4C", Offset = "0xADCB4C", VA = "0xADCB4C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xADD0DC", Offset = "0xADD0DC", VA = "0xADD0DC")]
		private void showHighlightHand(bool enable)
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xADCFBC", Offset = "0xADCFBC", VA = "0xADCFBC")]
		private void enableSecondHand()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xADCEC0", Offset = "0xADCEC0", VA = "0xADCEC0")]
		private void disableSecondHand()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xADD278", Offset = "0xADD278", VA = "0xADD278")]
		public void init(Weapon weapon)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xADD2B8", Offset = "0xADD2B8", VA = "0xADD2B8")]
		public void activate()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xADD288", Offset = "0xADD288", VA = "0xADD288")]
		public void deactivate()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xADD2DC", Offset = "0xADD2DC", VA = "0xADD2DC")]
		public SecondHandDetector()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class SlidePullDetector : MonoBehaviour
	{
		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool SlidePulled;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool SlideRelease;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pulledTransform;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform initTransform;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform handPulledTransform;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Weapon weapon;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initialised;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool handTriggered;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool pulling;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 lastPosition;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform handTransform;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform newInitTransform;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform newPulledTransform;

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xADD2F0", Offset = "0xADD2F0", VA = "0xADD2F0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xADD3E4", Offset = "0xADD3E4", VA = "0xADD3E4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xADD494", Offset = "0xADD494", VA = "0xADD494")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xADDA54", Offset = "0xADDA54", VA = "0xADDA54")]
		public void init(Weapon weapon)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xADDB40", Offset = "0xADDB40", VA = "0xADDB40")]
		public void setRange(Transform init, Transform pulled, bool waitForRelease = false)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xADDB60", Offset = "0xADDB60", VA = "0xADDB60")]
		public void activate()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xADDACC", Offset = "0xADDACC", VA = "0xADDACC")]
		public void deactivate()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xADDC48", Offset = "0xADDC48", VA = "0xADDC48")]
		public SlidePullDetector()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class SphereHit : MonoBehaviour
	{
		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool changeToPhysicCollidersOnHit;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SphereHit[] sphereHitChildren;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public SphereHitRaycastItem Item;

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xADDC50", Offset = "0xADDC50", VA = "0xADDC50")]
		public void Awake()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xADDCA0", Offset = "0xADDCA0", VA = "0xADDCA0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xADDD70", Offset = "0xADDD70", VA = "0xADDD70")]
		public SphereHit()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class SphereHitRaycastItem : MonoBehaviour
	{
		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SphereHit sphereRaycast;

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xADDD78", Offset = "0xADDD78", VA = "0xADDD78")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xADDF00", Offset = "0xADDF00", VA = "0xADDF00")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xADE038", Offset = "0xADE038", VA = "0xADE038", Slot = "4")]
		public virtual void changeToPhysicsColliders(bool bValue)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xADE048", Offset = "0xADE048", VA = "0xADE048", Slot = "5")]
		public virtual bool OnHit(Bullet bullet, SphereHit sphereCollision)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xADA144", Offset = "0xADA144", VA = "0xADA144")]
		public SphereHit getSphereCollision(Ray ray, float distance)
		{
			return null;
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xADE084", Offset = "0xADE084", VA = "0xADE084")]
		private bool checkSphereCollision(Transform sphere, Vector3 p1, Vector3 p2)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xADE254", Offset = "0xADE254", VA = "0xADE254")]
		public SphereHitRaycastItem()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class SphereHitRaycastSystem : MonoBehaviour
	{
		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SphereHitRaycastItem> m_items;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SphereHitRaycastSystem s_instance;

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xADE25C", Offset = "0xADE25C", VA = "0xADE25C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xADE2A8", Offset = "0xADE2A8", VA = "0xADE2A8")]
		public static SphereHitRaycastSystem getInstance()
		{
			return null;
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xADE2F0", Offset = "0xADE2F0", VA = "0xADE2F0")]
		public List<SphereHitRaycastItem> getSphereRayCastItems()
		{
			return null;
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xADDE58", Offset = "0xADDE58", VA = "0xADDE58")]
		public void registerItem(SphereHitRaycastItem item)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xADDFE0", Offset = "0xADDFE0", VA = "0xADDFE0")]
		public void deregisterItem(SphereHitRaycastItem item)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xADE2F8", Offset = "0xADE2F8", VA = "0xADE2F8")]
		public SphereHitRaycastSystem()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class Weapon : NVRInteractable
	{
		[Token(Token = "0x200035C")]
		public enum GunState
		{
			[Token(Token = "0x400107D")]
			Fire,
			[Token(Token = "0x400107E")]
			Reload,
			[Token(Token = "0x400107F")]
			Idle
		}

		[Token(Token = "0x200035D")]
		public enum GunReloadState
		{
			[Token(Token = "0x4001081")]
			EmptyMagazine,
			[Token(Token = "0x4001082")]
			NoMagazine,
			[Token(Token = "0x4001083")]
			FullMagazine,
			[Token(Token = "0x4001084")]
			HammerPulled,
			[Token(Token = "0x4001085")]
			Auto
		}

		[Token(Token = "0x200035E")]
		public enum ReloadType
		{
			[Token(Token = "0x4001087")]
			Auto,
			[Token(Token = "0x4001088")]
			Manual
		}

		[Token(Token = "0x200035F")]
		[CompilerGenerated]
		private sealed class <Shot>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon <>4__this;

			[Token(Token = "0x17000164")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001113")]
				[Address(RVA = "0xAE1AD4", Offset = "0xAE1AD4", VA = "0xAE1AD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000165")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001115")]
				[Address(RVA = "0xAE1B1C", Offset = "0xAE1B1C", VA = "0xAE1B1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001110")]
			[Address(RVA = "0xAE0C24", Offset = "0xAE0C24", VA = "0xAE0C24")]
			[DebuggerHidden]
			public <Shot>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0xAE16A4", Offset = "0xAE16A4", VA = "0xAE16A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001112")]
			[Address(RVA = "0xAE16A8", Offset = "0xAE16A8", VA = "0xAE16A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001114")]
			[Address(RVA = "0xAE1ADC", Offset = "0xAE1ADC", VA = "0xAE1ADC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000360")]
		[CompilerGenerated]
		private sealed class <ShotGunChamberBullet>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400108E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon <>4__this;

			[Token(Token = "0x17000166")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001119")]
				[Address(RVA = "0xAE1D24", Offset = "0xAE1D24", VA = "0xAE1D24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000167")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600111B")]
				[Address(RVA = "0xAE1D6C", Offset = "0xAE1D6C", VA = "0xAE1D6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001116")]
			[Address(RVA = "0xAE0C4C", Offset = "0xAE0C4C", VA = "0xAE0C4C")]
			[DebuggerHidden]
			public <ShotGunChamberBullet>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6001117")]
			[Address(RVA = "0xAE1B24", Offset = "0xAE1B24", VA = "0xAE1B24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001118")]
			[Address(RVA = "0xAE1B28", Offset = "0xAE1B28", VA = "0xAE1B28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600111A")]
			[Address(RVA = "0xAE1D2C", Offset = "0xAE1D2C", VA = "0xAE1D2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000361")]
		[CompilerGenerated]
		private sealed class <reloadAnimation2>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400108F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Weapon <>4__this;

			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <oldCurrentBullets>5__2;

			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <reloadTimePerBullet>5__3;

			[Token(Token = "0x4001094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__4;

			[Token(Token = "0x17000168")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600111F")]
				[Address(RVA = "0xAE2208", Offset = "0xAE2208", VA = "0xAE2208", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000169")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001121")]
				[Address(RVA = "0xAE2250", Offset = "0xAE2250", VA = "0xAE2250", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600111C")]
			[Address(RVA = "0xAE1538", Offset = "0xAE1538", VA = "0xAE1538")]
			[DebuggerHidden]
			public <reloadAnimation2>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x600111D")]
			[Address(RVA = "0xAE1D74", Offset = "0xAE1D74", VA = "0xAE1D74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600111E")]
			[Address(RVA = "0xAE1D78", Offset = "0xAE1D78", VA = "0xAE1D78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001120")]
			[Address(RVA = "0xAE2210", Offset = "0xAE2210", VA = "0xAE2210", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool infiniteBullets;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool disableFire;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static ReloadType reloadType;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool rightHand;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WeaponData weaponData;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform handTransform;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform secondHandTransform;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform bulletIconsContainer;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform magTransform;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform slide_InitTransform;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform slide_PulledTransform;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform slidePulled_InitTransform;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform slidePulled_PulledTransform;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected NVRHand hand;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected NVRHand otherHand;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected GameObject collisionColliders;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Transform twoAimingTransform;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Transform recoilTransform;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected SecondHandDetector secondHandDetector;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public SlidePullDetector slidePullDetector;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected MagDetector magDetector;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ChangeWeaponHand changeWeaponHand;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public WeaponMag currentMag;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion handLerpStartRotation;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected bool twoHandsMode;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool lerpBackToZeroRotation;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		private bool bulletInChamber;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		private bool initialised;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float handLerpStartTime;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float lastShot;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static UnityEvent OnFire;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static UnityEvent ViewerDisabledOnFire;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool ViewerDisabledOnFireState;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Weapon masterWeapon;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Sequence sequence;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool disableFireLocal;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public int maxReloads;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public bool updateSlider;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public GunState gunState;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GunReloadState gunReloadState;

		[Token(Token = "0x17000163")]
		private float animTime
		{
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0xADE57C", Offset = "0xADE57C", VA = "0xADE57C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xADE374", Offset = "0xADE374", VA = "0xADE374")]
		public static void registerViewerDisabledOnFire(UnityAction call)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xADE460", Offset = "0xADE460", VA = "0xADE460")]
		public static void deregisterViewerDisabledOnFire()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xADE59C", Offset = "0xADE59C", VA = "0xADE59C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xADE5D4", Offset = "0xADE5D4", VA = "0xADE5D4", Slot = "22")]
		protected virtual void init()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xADE9C4", Offset = "0xADE9C4", VA = "0xADE9C4")]
		public void setInitState()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xADEB64", Offset = "0xADEB64", VA = "0xADEB64")]
		private void _updateSlider()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xADEC3C", Offset = "0xADEC3C", VA = "0xADEC3C", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xADF598", Offset = "0xADF598", VA = "0xADF598", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xADF86C", Offset = "0xADF86C", VA = "0xADF86C")]
		public void resetHand()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xADF8E8", Offset = "0xADF8E8", VA = "0xADF8E8")]
		public void enableColliders(bool bValue)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xADF934", Offset = "0xADF934", VA = "0xADF934", Slot = "23")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xAE0038", Offset = "0xAE0038", VA = "0xAE0038", Slot = "24")]
		protected virtual void updateWeaponMode()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xADFA88", Offset = "0xADFA88", VA = "0xADFA88")]
		private void updateTwoHandsAiming()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xADFEC0", Offset = "0xADFEC0", VA = "0xADFEC0")]
		private void idleUpdate()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xAE0200", Offset = "0xAE0200", VA = "0xAE0200")]
		private void fireUpdate()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xAE0608", Offset = "0xAE0608", VA = "0xAE0608", Slot = "25")]
		protected virtual void reloadUpdate()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xAE0AF4", Offset = "0xAE0AF4", VA = "0xAE0AF4", Slot = "26")]
		public virtual void dropMagazine()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xAE0A0C", Offset = "0xAE0A0C", VA = "0xAE0A0C")]
		private void putMagazine()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xAE0B4C", Offset = "0xAE0B4C", VA = "0xAE0B4C")]
		protected void triggerHapticPulse()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xAE05A0", Offset = "0xAE05A0", VA = "0xAE05A0")]
		[IteratorStateMachine(typeof(<Shot>d__59))]
		private IEnumerator Shot()
		{
			return null;
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xAE0A8C", Offset = "0xAE0A8C", VA = "0xAE0A8C")]
		[IteratorStateMachine(typeof(<ShotGunChamberBullet>d__60))]
		private IEnumerator ShotGunChamberBullet()
		{
			return null;
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xAE0C74", Offset = "0xAE0C74", VA = "0xAE0C74")]
		private void recoilAnimation()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xAE00BC", Offset = "0xAE00BC", VA = "0xAE00BC")]
		public void throwBullet(bool wasted)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xAE1198", Offset = "0xAE1198", VA = "0xAE1198", Slot = "27")]
		protected virtual void decreaseBulletIcon()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xAE127C", Offset = "0xAE127C", VA = "0xAE127C", Slot = "28")]
		public virtual void reload(bool bAnimate = false, bool bRemote = false)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xAE13A4", Offset = "0xAE13A4", VA = "0xAE13A4")]
		private void increaseBulletIcon(int childIndex)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xAE1468", Offset = "0xAE1468", VA = "0xAE1468")]
		public void setCurrentBullets(int currentBullets)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xAE1334", Offset = "0xAE1334", VA = "0xAE1334")]
		private void reloadAnimation()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xAE12CC", Offset = "0xAE12CC", VA = "0xAE12CC")]
		[IteratorStateMachine(typeof(<reloadAnimation2>d__68))]
		private IEnumerator reloadAnimation2()
		{
			return null;
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xADEA78", Offset = "0xADEA78", VA = "0xADEA78")]
		protected void updateBulletIcons()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xADF1F0", Offset = "0xADF1F0", VA = "0xADF1F0")]
		public void setWeaponPosition()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xADD178", Offset = "0xADD178", VA = "0xADD178")]
		public bool setSecondHand(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xAE1560", Offset = "0xAE1560", VA = "0xAE1560")]
		public WeaponMag getMag()
		{
			return null;
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xAE1568", Offset = "0xAE1568", VA = "0xAE1568")]
		public NVRHand getHand()
		{
			return null;
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xAE1570", Offset = "0xAE1570", VA = "0xAE1570")]
		public NVRHand getOtherHand()
		{
			return null;
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xAE1578", Offset = "0xAE1578", VA = "0xAE1578")]
		public SlidePullDetector getSlidePullDetector()
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xAE1580", Offset = "0xAE1580", VA = "0xAE1580", Slot = "21")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xAE1584", Offset = "0xAE1584", VA = "0xAE1584")]
		public Weapon()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class WeaponData : MonoBehaviour
	{
		[Token(Token = "0x4001095")]
		public const float FIRESOUND_VOLUME = 0.6f;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool OnlyBulletSound;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SumalabEvent<Bullet> OnWeaponFire;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxBullets;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int bulletsPerBurst;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int currentBullets;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int currentBurstBullets;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 defaultPosition;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform runningPositionTransform;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool twoHandsAiming;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float recoilForce;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float shootInterval;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float reloadTimeForBullet;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WeaponModel weaponModel;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public BulletType bulletType;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FireArm fireArm;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public HitTarget hitTarget;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public NVRHand weaponHand;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform firePoint;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public NVRCollisionSoundMaterials fireSound;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool autoConfigure;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float bulletImpactForce;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public PoolManager.PoolType bulletPool;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FireEffect fireEffect;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float currentShootInterval;

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xAE2258", Offset = "0xAE2258", VA = "0xAE2258")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xAE242C", Offset = "0xAE242C", VA = "0xAE242C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xADE8D0", Offset = "0xADE8D0", VA = "0xADE8D0")]
		public void init()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xADF160", Offset = "0xADF160", VA = "0xADF160")]
		public void hideFireEffect()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xADF868", Offset = "0xADF868", VA = "0xADF868")]
		public void resetData()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xAE2268", Offset = "0xAE2268", VA = "0xAE2268")]
		private void autoConfigureWeapon()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xAE24D4", Offset = "0xAE24D4", VA = "0xAE24D4")]
		public void setAccuracy(float randomMax)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xAE1A74", Offset = "0xAE1A74", VA = "0xAE1A74")]
		public float fire(AimTarget owner)
		{
			return default(float);
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xAE2510", Offset = "0xAE2510", VA = "0xAE2510")]
		public float fire(Vector3 finalPosition, AimTarget owner, bool isPlayer = false)
		{
			return default(float);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xAE2AF4", Offset = "0xAE2AF4", VA = "0xAE2AF4")]
		public Bullet remoteFire(string bulletId, AimTarget owner, Vector3 position, Quaternion rotation, Vector3 finalPosition, bool isRemotePlayer, int bulletsCount)
		{
			return null;
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xAE1518", Offset = "0xAE1518", VA = "0xAE1518")]
		public float reload()
		{
			return default(float);
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xAE2D98", Offset = "0xAE2D98", VA = "0xAE2D98")]
		public void reloadManualWeapon(AimTarget owner)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xAE2F60", Offset = "0xAE2F60", VA = "0xAE2F60")]
		public void remoteReloadManualWeapon()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xAE058C", Offset = "0xAE058C", VA = "0xAE058C")]
		public void reloadBurst()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xAE2FC8", Offset = "0xAE2FC8", VA = "0xAE2FC8")]
		public void setWeaponRunningPosition(bool state)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xAE31F4", Offset = "0xAE31F4", VA = "0xAE31F4")]
		public float getCurrentShootInterval()
		{
			return default(float);
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xAE3218", Offset = "0xAE3218", VA = "0xAE3218")]
		public void setWeaponModel(WeaponModel model)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xAE3220", Offset = "0xAE3220", VA = "0xAE3220")]
		public WeaponData()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public enum BulletType
	{
		[Token(Token = "0x40010B0")]
		S,
		[Token(Token = "0x40010B1")]
		L,
		[Token(Token = "0x40010B2")]
		MiniGun,
		[Token(Token = "0x40010B3")]
		None
	}
	[Token(Token = "0x2000364")]
	public enum FireArm
	{
		[Token(Token = "0x40010B5")]
		Semiautomatic,
		[Token(Token = "0x40010B6")]
		Automatic,
		[Token(Token = "0x40010B7")]
		Burst,
		[Token(Token = "0x40010B8")]
		Launcher
	}
	[Token(Token = "0x2000365")]
	public enum WeaponModel
	{
		[Token(Token = "0x40010BA")]
		M4,
		[Token(Token = "0x40010BB")]
		AK47,
		[Token(Token = "0x40010BC")]
		Glock,
		[Token(Token = "0x40010BD")]
		SMG,
		[Token(Token = "0x40010BE")]
		Aim,
		[Token(Token = "0x40010BF")]
		RPG,
		[Token(Token = "0x40010C0")]
		MiniGun,
		[Token(Token = "0x40010C1")]
		TwoGlock
	}
	[Token(Token = "0x2000366")]
	public class WeaponMag : HandInteractor
	{
		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WeaponModel weaponModel;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool used;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform grabTransform;

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xAE436C", Offset = "0xAE436C", VA = "0xAE436C", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xAE4584", Offset = "0xAE4584", VA = "0xAE4584", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xAE472C", Offset = "0xAE472C", VA = "0xAE472C")]
		public void mount(Transform parent)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xAE4A18", Offset = "0xAE4A18", VA = "0xAE4A18")]
		public void drop()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xAE4BC8", Offset = "0xAE4BC8", VA = "0xAE4BC8", Slot = "21")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xAE4BCC", Offset = "0xAE4BCC", VA = "0xAE4BCC")]
		public WeaponMag()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class WeaponMagSpawner : HandInteractor
	{
		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<SpawnData> Spawns;

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xAE4C24", Offset = "0xAE4C24", VA = "0xAE4C24", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xAE4FCC", Offset = "0xAE4FCC", VA = "0xAE4FCC", Slot = "12")]
		public override void HoveringEnter(NVRHand hand)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xAE52E8", Offset = "0xAE52E8", VA = "0xAE52E8", Slot = "14")]
		public override void HoveringExit(NVRHand hand)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xAE4E88", Offset = "0xAE4E88", VA = "0xAE4E88")]
		private NVRInteractable GetSpawnObject(WeaponModel weaponModel)
		{
			return null;
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xAE509C", Offset = "0xAE509C", VA = "0xAE509C")]
		private bool isValidHand(NVRHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xAE52E4", Offset = "0xAE52E4", VA = "0xAE52E4")]
		private void highlightModel(bool enable)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xAE5368", Offset = "0xAE5368", VA = "0xAE5368")]
		public WeaponMagSpawner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000368")]
	public struct SpawnData
	{
		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WeaponModel weaponModel;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public NVRInteractable spawnObject;
	}
}
namespace Sumalab_Hands
{
	[Token(Token = "0x2000369")]
	public class HandController : MonoBehaviour
	{
		[Token(Token = "0x200036A")]
		private class TransformStore
		{
			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 localRotation;

			[Token(Token = "0x6001155")]
			[Address(RVA = "0xAE5674", Offset = "0xAE5674", VA = "0xAE5674")]
			public TransformStore()
			{
			}
		}

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float ANIMATION_SPEED;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandInteractor.AnimationType defaultAnimation;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HandInteractor m_currentHandController;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HashSet<HandInteractor> m_hsHandControllersHovering;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator m_handAnimator;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand Hand;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastInput;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform handTransformRoot;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, TransformStore> handTransforms;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Tween> activeTweens;

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xAE536C", Offset = "0xAE536C", VA = "0xAE536C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xAE5A20", Offset = "0xAE5A20", VA = "0xAE5A20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xAE5DA0", Offset = "0xAE5DA0", VA = "0xAE5DA0")]
		private void HoverEnter(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xAE6220", Offset = "0xAE6220", VA = "0xAE6220")]
		private void HoverExit(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xAE6454", Offset = "0xAE6454", VA = "0xAE6454")]
		public void BeginInteraction(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xAE6504", Offset = "0xAE6504", VA = "0xAE6504")]
		public void EndInteraction(NVRInteractable item)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xAE6178", Offset = "0xAE6178", VA = "0xAE6178")]
		private void updateAnimation(HandInteractor handController, bool bHover)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xAE5C1C", Offset = "0xAE5C1C", VA = "0xAE5C1C")]
		private void setAnimation(HandInteractor.AnimationType animationType, float squeeze)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xAE633C", Offset = "0xAE633C", VA = "0xAE633C")]
		private HandInteractor selectNearest()
		{
			return null;
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xAE5F9C", Offset = "0xAE5F9C", VA = "0xAE5F9C")]
		private bool isNearer(HandInteractor hc1, HandInteractor hc2)
		{
			return default(bool);
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xAE6528", Offset = "0xAE6528", VA = "0xAE6528")]
		private void ResetAnimator()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xAE66E0", Offset = "0xAE66E0", VA = "0xAE66E0")]
		public void setHandTransform(Transform copyRootTransform)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xAE6CA8", Offset = "0xAE6CA8", VA = "0xAE6CA8")]
		public void resetHandTransform()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xAE6B2C", Offset = "0xAE6B2C", VA = "0xAE6B2C")]
		private void clearTweens()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xAE7248", Offset = "0xAE7248", VA = "0xAE7248")]
		public void deactivate()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xAE7288", Offset = "0xAE7288", VA = "0xAE7288")]
		public void activate()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xAE567C", Offset = "0xAE567C", VA = "0xAE567C")]
		private void setHandPosition()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xAE7354", Offset = "0xAE7354", VA = "0xAE7354")]
		public HandController()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class HandInteractor : NVRInteractable
	{
		[Token(Token = "0x200036C")]
		public enum AnimationType
		{
			[Token(Token = "0x40010D9")]
			None,
			[Token(Token = "0x40010DA")]
			Grab,
			[Token(Token = "0x40010DB")]
			Hilt,
			[Token(Token = "0x40010DC")]
			Pinch,
			[Token(Token = "0x40010DD")]
			Sphere,
			[Token(Token = "0x40010DE")]
			Gun,
			[Token(Token = "0x40010DF")]
			Misc,
			[Token(Token = "0x40010E0")]
			Button,
			[Token(Token = "0x40010E1")]
			HandPress
		}

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public AnimationType PickAnimation;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationType HoverAnimation;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float squeeze;

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xAE4BD0", Offset = "0xAE4BD0", VA = "0xAE4BD0")]
		public HandInteractor()
		{
		}
	}
}
namespace NewtonVR
{
	[Token(Token = "0x200036D")]
	public class NVRCollisionSoundController : MonoBehaviour
	{
		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRCollisionSoundController Instance;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The max number of sounds that can possibly be playing at once.")]
		public int SoundPoolSize;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Turns on or off randomizing the pitch of the collision sounds")]
		public bool PitchModulationEnabled;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 3f)]
		public float PitchModulationRange;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Don't play collision sounds that will produce an impact with a volume lower than this number")]
		public float MinCollisionVolume;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxCollisionVelocity;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioMixerGroup audioMixer;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public NVRCollisionSoundProviders SoundEngine;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool mute;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static NVRCollisionSoundProvider Provider;

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xAE75C0", Offset = "0xAE75C0", VA = "0xAE75C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xAE4910", Offset = "0xAE4910", VA = "0xAE4910")]
		public static void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume = 1f, bool ignoreMute = false)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xAE7648", Offset = "0xAE7648", VA = "0xAE7648")]
		public NVRCollisionSoundController()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public enum NVRCollisionSoundProviders
	{
		[Token(Token = "0x40010ED")]
		None,
		[Token(Token = "0x40010EE")]
		Unity,
		[Token(Token = "0x40010EF")]
		FMOD
	}
	[Token(Token = "0x200036F")]
	public enum NVRCollisionSoundMaterials
	{
		[Token(Token = "0x40010F1")]
		none = 0,
		[Token(Token = "0x40010F2")]
		_default = 1,
		[Token(Token = "0x40010F3")]
		carpet = 2,
		[Token(Token = "0x40010F4")]
		wood = 3,
		[Token(Token = "0x40010F5")]
		metal = 4,
		[Token(Token = "0x40010F6")]
		glass = 5,
		[Token(Token = "0x40010F7")]
		plastic = 6,
		[Token(Token = "0x40010F8")]
		cardboard = 7,
		[Token(Token = "0x40010F9")]
		EndNewtonVRMaterials = 50,
		[Token(Token = "0x40010FA")]
		attach = 51,
		[Token(Token = "0x40010FB")]
		trainvintage = 52,
		[Token(Token = "0x40010FC")]
		trash = 53,
		[Token(Token = "0x40010FD")]
		handgun_shot = 54,
		[Token(Token = "0x40010FE")]
		rifle_shot = 55,
		[Token(Token = "0x40010FF")]
		smg_shot = 56,
		[Token(Token = "0x4001100")]
		rpg_shot = 57,
		[Token(Token = "0x4001101")]
		ak47_shot = 58,
		[Token(Token = "0x4001102")]
		magazine_release = 59,
		[Token(Token = "0x4001103")]
		magazine_load = 60,
		[Token(Token = "0x4001104")]
		recoil = 61,
		[Token(Token = "0x4001105")]
		empty_gun_clic = 62,
		[Token(Token = "0x4001106")]
		impact_standard = 63,
		[Token(Token = "0x4001107")]
		impact_glass = 64,
		[Token(Token = "0x4001108")]
		impact_human = 65,
		[Token(Token = "0x4001109")]
		impact_metal = 66,
		[Token(Token = "0x400110A")]
		impact_windshield = 67,
		[Token(Token = "0x400110B")]
		player_hit = 68,
		[Token(Token = "0x400110C")]
		bullet_flyby = 69,
		[Token(Token = "0x400110D")]
		bullet_shell = 70,
		[Token(Token = "0x400110E")]
		holster_in = 71,
		[Token(Token = "0x400110F")]
		holster_out = 72,
		[Token(Token = "0x4001110")]
		box_impact = 73,
		[Token(Token = "0x4001111")]
		crane_hook_impact = 74,
		[Token(Token = "0x4001112")]
		barrel = 75,
		[Token(Token = "0x4001113")]
		kill_fem = 76,
		[Token(Token = "0x4001114")]
		kill_mas = 77,
		[Token(Token = "0x4001115")]
		take_can = 78,
		[Token(Token = "0x4001116")]
		column_impact = 79,
		[Token(Token = "0x4001117")]
		extinguisher = 80,
		[Token(Token = "0x4001118")]
		handgun_matrix_shot = 81,
		[Token(Token = "0x4001119")]
		hit_folder = 82,
		[Token(Token = "0x400111A")]
		hit_monitor = 83,
		[Token(Token = "0x400111B")]
		hit_plant = 84,
		[Token(Token = "0x400111C")]
		female_ouch = 85,
		[Token(Token = "0x400111D")]
		male_ouch = 86
	}
	[Token(Token = "0x2000370")]
	public class NVRCollisionSoundMaterialsList
	{
		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type typeCache;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static NVRCollisionSoundMaterials[] list;

		[Token(Token = "0x1700016A")]
		public static Type TypeCache
		{
			[Token(Token = "0x600115A")]
			[Address(RVA = "0xAE7678", Offset = "0xAE7678", VA = "0xAE7678")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		public static NVRCollisionSoundMaterials[] List
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0xAE7744", Offset = "0xAE7744", VA = "0xAE7744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xAE7B8C", Offset = "0xAE7B8C", VA = "0xAE7B8C")]
		public static NVRCollisionSoundMaterials? Parse(string materialString)
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xAE7CB8", Offset = "0xAE7CB8", VA = "0xAE7CB8")]
		public NVRCollisionSoundMaterialsList()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class NVRCollisionSoundObject : MonoBehaviour
	{
		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRCollisionSoundObject> SoundObjects;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRCollisionSoundMaterials Material;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] Colliders;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastCollisionTime;

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xAE7CC0", Offset = "0xAE7CC0", VA = "0xAE7CC0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xAE7DC8", Offset = "0xAE7DC8", VA = "0xAE7DC8", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xAE7EC0", Offset = "0xAE7EC0", VA = "0xAE7EC0", Slot = "6")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xAE8098", Offset = "0xAE8098", VA = "0xAE8098")]
		private float CalculateImpactVolume(Collision collision)
		{
			return default(float);
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xAE8174", Offset = "0xAE8174", VA = "0xAE8174")]
		public static float CubicEaseOut(float velocity, float startingValue = 0f, float changeInValue = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xAE8208", Offset = "0xAE8208", VA = "0xAE8208")]
		public NVRCollisionSoundObject()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public abstract class NVRCollisionSoundProvider : MonoBehaviour
	{
		[Token(Token = "0x6001165")]
		public abstract void Awake();

		[Token(Token = "0x6001166")]
		public abstract void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume);

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xAE829C", Offset = "0xAE829C", VA = "0xAE829C")]
		protected NVRCollisionSoundProvider()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class NVRCollisionSoundProviderFMOD : NVRCollisionSoundProvider
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0xAE82A4", Offset = "0xAE82A4", VA = "0xAE82A4", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xAE82A8", Offset = "0xAE82A8", VA = "0xAE82A8", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xAE82AC", Offset = "0xAE82AC", VA = "0xAE82AC")]
		public NVRCollisionSoundProviderFMOD()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class NVRCollisionSoundProviderUnity : NVRCollisionSoundProvider
	{
		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string AudioSourcePrefabPath;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string CollisionSoundsPath;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject AudioSourcePrefab;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource[] AudioPool;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int CurrentPoolIndex;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<NVRCollisionSoundMaterials, List<AudioClip>> Clips;

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xAE82B4", Offset = "0xAE82B4", VA = "0xAE82B4", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xAE885C", Offset = "0xAE885C", VA = "0xAE885C", Slot = "5")]
		public override void Play(NVRCollisionSoundMaterials material, Vector3 position, float impactVolume)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xAE8A60", Offset = "0xAE8A60", VA = "0xAE8A60")]
		private AudioClip GetClip(NVRCollisionSoundMaterials material)
		{
			return null;
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xAE8C44", Offset = "0xAE8C44", VA = "0xAE8C44")]
		public NVRCollisionSoundProviderUnity()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class CustomNVRPhysicalController : MonoBehaviour
	{
		[Token(Token = "0x6001170")]
		[Address(RVA = "0xAE8CD8", Offset = "0xAE8CD8", VA = "0xAE8CD8")]
		public CustomNVRPhysicalController()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class NVRScaler : MonoBehaviour
	{
		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static float scale;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static NVRScaler instance;

		[Token(Token = "0x1700016C")]
		public static float WorldScale
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0xAE8CE0", Offset = "0xAE8CE0", VA = "0xAE8CE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xAE8D38", Offset = "0xAE8D38", VA = "0xAE8D38")]
		public static NVRScaler getInstance()
		{
			return null;
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xAE8D90", Offset = "0xAE8D90", VA = "0xAE8D90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xAE8E0C", Offset = "0xAE8E0C", VA = "0xAE8E0C")]
		public void setScale(float newScale)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xAE8EBC", Offset = "0xAE8EBC", VA = "0xAE8EBC")]
		public NVRScaler()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class NVRTeleportArc : MonoBehaviour
	{
		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentCount;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Value with scale 1")]
		[SerializeField]
		private float thickness;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The amount of time in seconds to predict the motion of the projectile.")]
		public float arcDuration;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("The amount of time in seconds between each segment of the projectile.")]
		public float segmentBreak;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The speed at which the line segments of the arc move.")]
		public float arcSpeed;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int traceLayerMask;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineRenderer[] lineRenderers;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float arcTimeOffset;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float prevThickness;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int prevSegmentCount;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool showArc;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 startPos;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 projectileVelocity;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useGravity;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform arcObjectsTransfrom;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool arcInvalid;

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xAE8F14", Offset = "0xAE8F14", VA = "0xAE8F14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xAE8F30", Offset = "0xAE8F30", VA = "0xAE8F30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xAE8F74", Offset = "0xAE8F74", VA = "0xAE8F74")]
		private void CreateLineRendererObjects()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xAE9408", Offset = "0xAE9408", VA = "0xAE9408")]
		public void SetArcData(Vector3 position, Vector3 velocity, bool gravity, bool pointerAtBadAngle)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xAE9454", Offset = "0xAE9454", VA = "0xAE9454")]
		public void Show()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xAE946C", Offset = "0xAE946C", VA = "0xAE946C")]
		public void Hide()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xAE9508", Offset = "0xAE9508", VA = "0xAE9508")]
		public bool DrawArc(out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xAE9954", Offset = "0xAE9954", VA = "0xAE9954")]
		private void DrawArcSegment(int index, float startTime, float endTime)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xAE9A34", Offset = "0xAE9A34", VA = "0xAE9A34")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xAE9714", Offset = "0xAE9714", VA = "0xAE9714")]
		private float FindProjectileCollision(out RaycastHit hitInfo)
		{
			return default(float);
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xAE9890", Offset = "0xAE9890", VA = "0xAE9890")]
		public Vector3 GetArcPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xAE9498", Offset = "0xAE9498", VA = "0xAE9498")]
		private void HideLineSegments(int startSegment, int endSegment)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xAE9B04", Offset = "0xAE9B04", VA = "0xAE9B04")]
		public NVRTeleportArc()
		{
		}
	}
	[Token(Token = "0x2000378")]
	internal struct EnumEqualityComparer<TEnum> : IEqualityComparer<TEnum> where TEnum : struct
	{
		[Token(Token = "0x2000379")]
		private static class BoxAvoidance
		{
			[Token(Token = "0x400113D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Func<TEnum, int> _wrapper;

			[Token(Token = "0x6001186")]
			public static int ToInt(TEnum enu)
			{
				return default(int);
			}

			[Token(Token = "0x6001187")]
			static BoxAvoidance()
			{
			}
		}

		[Token(Token = "0x6001184")]
		public bool Equals(TEnum firstEnum, TEnum secondEnum)
		{
			return default(bool);
		}

		[Token(Token = "0x6001185")]
		public int GetHashCode(TEnum firstEnum)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200037A")]
	public class NVRAttachJoint : MonoBehaviour
	{
		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRInteractableItem AttachedItem;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRAttachPoint AttachedPoint;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PullRange;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float AttachRange;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float DropDistance;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool MatchRotation;

		[Token(Token = "0x1700016D")]
		public bool IsAttached
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0xAE9B2C", Offset = "0xAE9B2C", VA = "0xAE9B2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xAE9B8C", Offset = "0xAE9B8C", VA = "0xAE9B8C", Slot = "4")]
		protected virtual void OnTriggerStay(Collider col)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xAE9DE0", Offset = "0xAE9DE0", VA = "0xAE9DE0", Slot = "5")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xAE9E0C", Offset = "0xAE9E0C", VA = "0xAE9E0C", Slot = "6")]
		protected virtual void FixedUpdateAttached()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xAE9F2C", Offset = "0xAE9F2C", VA = "0xAE9F2C", Slot = "7")]
		protected virtual void Attach(NVRAttachPoint point)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xAE9F6C", Offset = "0xAE9F6C", VA = "0xAE9F6C", Slot = "8")]
		protected virtual void Detach()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xAE9F9C", Offset = "0xAE9F9C", VA = "0xAE9F9C")]
		public NVRAttachJoint()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class NVRAttachPoint : MonoBehaviour
	{
		[Token(Token = "0x4001144")]
		private const float MaxVelocityChange = 5f;

		[Token(Token = "0x4001145")]
		private const float MaxAngularVelocityChange = 10f;

		[Token(Token = "0x4001146")]
		private const float VelocityMagic = 3000f;

		[Token(Token = "0x4001147")]
		private const float AngularVelocityMagic = 25f;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody Rigidbody;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public NVRInteractableItem Item;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsAttached;

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xAE9FC4", Offset = "0xAE9FC4", VA = "0xAE9FC4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xAEA2D4", Offset = "0xAEA2D4", VA = "0xAEA2D4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xAEA130", Offset = "0xAEA130", VA = "0xAEA130")]
		private NVRInteractableItem FindNVRItem(GameObject gameobject)
		{
			return null;
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xAEA2F4", Offset = "0xAEA2F4", VA = "0xAEA2F4", Slot = "6")]
		public virtual void Attached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xAEA49C", Offset = "0xAEA49C", VA = "0xAEA49C", Slot = "7")]
		public virtual void Detached(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xAEA4D8", Offset = "0xAEA4D8", VA = "0xAEA4D8", Slot = "8")]
		public virtual void PullTowards(NVRAttachJoint joint)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xAEA9BC", Offset = "0xAEA9BC", VA = "0xAEA9BC")]
		public NVRAttachPoint()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class AttachPointMapper
	{
		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRAttachPoint> Colliders;

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xAEA244", Offset = "0xAEA244", VA = "0xAEA244")]
		public static void Register(Collider col, NVRAttachPoint point)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xAEA9C4", Offset = "0xAEA9C4", VA = "0xAEA9C4")]
		public static void Deregister(Collider col)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xAE9D48", Offset = "0xAE9D48", VA = "0xAE9D48")]
		public static NVRAttachPoint GetAttachPoint(Collider col)
		{
			return null;
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xAEAA44", Offset = "0xAEAA44", VA = "0xAEAA44")]
		public AttachPointMapper()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class NVRButton : MonoBehaviour
	{
		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The (worldspace) distance from the initial position you have to push the button for it to register as pushed")]
		public float DistanceToEngage;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Is set to true when the button has been pressed down this update frame")]
		public bool ButtonDown;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[Tooltip("Is set to true when the button has been released from the down position this update frame")]
		public bool ButtonUp;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[Tooltip("Is set to true each frame the button is pressed down")]
		public bool ButtonIsPushed;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		[Tooltip("Is set to true if the button was in a pushed state last frame")]
		public bool ButtonWasPushed;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Transform InitialPosition;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float MinDistance;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float PositionMagic;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float CurrentDistance;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 InitialLocalPosition;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 ConstrainedPosition;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion InitialLocalRotation;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion ConstrainedRotation;

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xAEAAD8", Offset = "0xAEAAD8", VA = "0xAEAAD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xAEAD44", Offset = "0xAEAD44", VA = "0xAEAD44")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xAEAF10", Offset = "0xAEAF10", VA = "0xAEAF10")]
		private void Update()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xAEAEA8", Offset = "0xAEAEA8", VA = "0xAEAEA8")]
		private void ConstrainPosition()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xAEAF4C", Offset = "0xAEAF4C", VA = "0xAEAF4C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xAEAF50", Offset = "0xAEAF50", VA = "0xAEAF50")]
		public NVRButton()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class NVRButtonInputs
	{
		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool Enable;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool PressDownCached;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool PressDownExpired;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool PressUpCached;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool PressUpExpired;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool IsPressedCached;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool IsPressedExpired;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool TouchDownCached;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool TouchDownExpired;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool TouchUpCached;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool TouchUpExpired;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool IsTouchedCached;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool IsTouchedExpired;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool NearTouchDownCached;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool NearTouchDownExpired;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool NearTouchUpCached;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		private bool NearTouchUpExpired;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool IsNearTouchedCached;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool IsNearTouchedExpired;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector2 AxisCached;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool AxisExpired;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float SingleAxisCached;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool SingleAxisExpired;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRInputDevice InputDevice;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NVRButtons NVRbutton;

		[Token(Token = "0x1700016E")]
		public bool PressDown
		{
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xAEAF78", Offset = "0xAEAF78", VA = "0xAEAF78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016F")]
		public bool PressUp
		{
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0xAEB024", Offset = "0xAEB024", VA = "0xAEB024")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000170")]
		public bool IsPressed
		{
			[Token(Token = "0x60011A3")]
			[Address(RVA = "0xAEB0D0", Offset = "0xAEB0D0", VA = "0xAEB0D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000171")]
		public bool TouchDown
		{
			[Token(Token = "0x60011A4")]
			[Address(RVA = "0xAEB17C", Offset = "0xAEB17C", VA = "0xAEB17C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000172")]
		public bool TouchUp
		{
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0xAEB228", Offset = "0xAEB228", VA = "0xAEB228")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000173")]
		public bool IsTouched
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0xAEB2D4", Offset = "0xAEB2D4", VA = "0xAEB2D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000174")]
		public bool NearTouchDown
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0xAEB380", Offset = "0xAEB380", VA = "0xAEB380")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000175")]
		public bool NearTouchUp
		{
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0xAEB42C", Offset = "0xAEB42C", VA = "0xAEB42C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000176")]
		public bool IsNearTouched
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0xAEB4D8", Offset = "0xAEB4D8", VA = "0xAEB4D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000177")]
		public Vector2 Axis
		{
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0xAEB584", Offset = "0xAEB584", VA = "0xAEB584")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000178")]
		public float SingleAxis
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0xAE5B80", Offset = "0xAE5B80", VA = "0xAE5B80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xAEB65C", Offset = "0xAEB65C", VA = "0xAEB65C")]
		public void FrameReset(NVRInputDevice inputDevice, NVRButtons button)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xAEB698", Offset = "0xAEB698", VA = "0xAEB698")]
		public NVRButtonInputs()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public enum NVRButtons
	{
		[Token(Token = "0x4001174")]
		System,
		[Token(Token = "0x4001175")]
		ApplicationMenu,
		[Token(Token = "0x4001176")]
		Grip,
		[Token(Token = "0x4001177")]
		DPad_Left,
		[Token(Token = "0x4001178")]
		DPad_Up,
		[Token(Token = "0x4001179")]
		DPad_Right,
		[Token(Token = "0x400117A")]
		DPad_Down,
		[Token(Token = "0x400117B")]
		A,
		[Token(Token = "0x400117C")]
		B,
		[Token(Token = "0x400117D")]
		X,
		[Token(Token = "0x400117E")]
		Y,
		[Token(Token = "0x400117F")]
		Axis0,
		[Token(Token = "0x4001180")]
		Axis1,
		[Token(Token = "0x4001181")]
		Axis2,
		[Token(Token = "0x4001182")]
		Axis3,
		[Token(Token = "0x4001183")]
		Axis4,
		[Token(Token = "0x4001184")]
		Touchpad,
		[Token(Token = "0x4001185")]
		Trigger,
		[Token(Token = "0x4001186")]
		Back,
		[Token(Token = "0x4001187")]
		Stick,
		[Token(Token = "0x4001188")]
		None
	}
	[Token(Token = "0x2000380")]
	public class NVRButtonsHelper
	{
		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NVRButtons[] array;

		[Token(Token = "0x17000179")]
		public static NVRButtons[] Array
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0xAEB6EC", Offset = "0xAEB6EC", VA = "0xAEB6EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xAEB830", Offset = "0xAEB830", VA = "0xAEB830")]
		public NVRButtonsHelper()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public struct NVRButtonsComparer : IEqualityComparer<NVRButtons>
	{
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xAEB838", Offset = "0xAEB838", VA = "0xAEB838", Slot = "4")]
		public bool Equals(NVRButtons x, NVRButtons y)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xAEB844", Offset = "0xAEB844", VA = "0xAEB844", Slot = "5")]
		public int GetHashCode(NVRButtons obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000382")]
	public class NVRCanvasInput : BaseInputModule
	{
		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool GeometryBlocksLaser;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public LayerMask LayersThatBlockLaser;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite CursorSprite;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material CursorMaterial;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float NormalCursorScale;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool LaserEnabled;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color LaserColor;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float LaserStartWidth;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float LaserEndWidth;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool OnCanvas;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool CanvasUsed;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RectTransform[] Cursors;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LineRenderer[] Lasers;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject[] CurrentPoint;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject[] CurrentPressed;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject[] CurrentDragging;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PointerEventData[] PointEvents;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool Initialized;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool DelayedInitialized;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Camera ControllerCamera;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NVRPlayer Player;

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xAEB84C", Offset = "0xAEB84C", VA = "0xAEB84C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xAEC07C", Offset = "0xAEC07C", VA = "0xAEC07C")]
		protected void DelayedCameraInit()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xAEC17C", Offset = "0xAEC17C", VA = "0xAEC17C")]
		private bool GetLookPointerEventData(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xAEC4BC", Offset = "0xAEC4BC", VA = "0xAEC4BC")]
		private bool UpdateCursor(int index, PointerEventData pointData)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xAECA88", Offset = "0xAECA88", VA = "0xAECA88")]
		public void ClearSelection()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xAECB14", Offset = "0xAECB14", VA = "0xAECB14")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xAECBF8", Offset = "0xAECBF8", VA = "0xAECBF8")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xAECD40", Offset = "0xAECD40", VA = "0xAECD40")]
		private void UpdateCameraPosition(int index)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xAECE0C", Offset = "0xAECE0C", VA = "0xAECE0C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xAECE10", Offset = "0xAECE10", VA = "0xAECE10")]
		private void Update()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xAEDA4C", Offset = "0xAEDA4C", VA = "0xAEDA4C")]
		private bool ButtonDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xAEDAD8", Offset = "0xAEDAD8", VA = "0xAEDAD8")]
		private bool ButtonUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xAEDB64", Offset = "0xAEDB64", VA = "0xAEDB64")]
		public NVRCanvasInput()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class NVRHand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000384")]
		public class NVRInteractableEvent : UnityEvent<NVRInteractable>
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0xAF308C", Offset = "0xAF308C", VA = "0xAF308C")]
			public NVRInteractableEvent()
			{
			}
		}

		[Token(Token = "0x2000386")]
		[CompilerGenerated]
		private sealed class <DoLongHapticPulse>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NVRHand <>4__this;

			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NVRButtons button;

			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <endTime>5__2;

			[Token(Token = "0x17000187")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011F7")]
				[Address(RVA = "0xAF32C4", Offset = "0xAF32C4", VA = "0xAF32C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000188")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011F9")]
				[Address(RVA = "0xAF330C", Offset = "0xAF330C", VA = "0xAF330C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011F4")]
			[Address(RVA = "0xAF0918", Offset = "0xAF0918", VA = "0xAF0918")]
			[DebuggerHidden]
			public <DoLongHapticPulse>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x60011F5")]
			[Address(RVA = "0xAF322C", Offset = "0xAF322C", VA = "0xAF322C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xAF3230", Offset = "0xAF3230", VA = "0xAF3230", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011F8")]
			[Address(RVA = "0xAF32CC", Offset = "0xAF32CC", VA = "0xAF32CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000387")]
		[CompilerGenerated]
		private sealed class <clearHoveringInteractables>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRHand <>4__this;

			[Token(Token = "0x17000189")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011FD")]
				[Address(RVA = "0xAF355C", Offset = "0xAF355C", VA = "0xAF355C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011FF")]
				[Address(RVA = "0xAF35A4", Offset = "0xAF35A4", VA = "0xAF35A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011FA")]
			[Address(RVA = "0xAF2238", Offset = "0xAF2238", VA = "0xAF2238")]
			[DebuggerHidden]
			public <clearHoveringInteractables>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x60011FB")]
			[Address(RVA = "0xAF3314", Offset = "0xAF3314", VA = "0xAF3314", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011FC")]
			[Address(RVA = "0xAF3318", Offset = "0xAF3318", VA = "0xAF3318", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011FE")]
			[Address(RVA = "0xAF3564", Offset = "0xAF3564", VA = "0xAF3564", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NVRButtons[] HoldButton;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NVRButtons UseButton;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool IsRight;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool IsLeft;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public NVRPlayer Player;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<NVRButtons, NVRButtonInputs> Inputs;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public InterationStyle CurrentInteractionStyle;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<NVRRenderModel> CustomModels;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VisibilityLevel CurrentVisibility;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool VisibilityLocked;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HandState CurrentHandState;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<NVRInteractable, List<Collider>> CurrentlyHoveringOver;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public NVRInteractable CurrentlyInteracting;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public NVRInteractableEvent OnBeginInteraction;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public NVRInteractableEvent OnEndInteraction;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NVRInteractableEvent OnHoverEnter;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NVRInteractableEvent OnHoverExit;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int EstimationSampleIndex;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] LastPositions;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion[] LastRotations;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float[] LastDeltas;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int EstimationSamples;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public NVRPhysicalController PhysicalController;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Collider[] GhostColliders;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Renderer[] GhostRenderers;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private NVRInputDevice InputDevice;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject RenderModel;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public NVRRenderModelType RenderModelType;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Dictionary<NVRRenderModelType, GameObject> RenderModels;

		[Token(Token = "0x1700017A")]
		public bool HoldButtonDown
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0xAEDBCC", Offset = "0xAEDBCC", VA = "0xAEDBCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017B")]
		public bool HoldButtonUp
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0xAEDCC0", Offset = "0xAEDCC0", VA = "0xAEDCC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		public bool HoldButtonPressed
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0xAEDDB4", Offset = "0xAEDDB4", VA = "0xAEDDB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017D")]
		public bool UseButtonDown
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0xAEDEA8", Offset = "0xAEDEA8", VA = "0xAEDEA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017E")]
		public bool UseButtonUp
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0xAEDF34", Offset = "0xAEDF34", VA = "0xAEDF34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017F")]
		public bool UseButtonPressed
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0xAEDFC0", Offset = "0xAEDFC0", VA = "0xAEDFC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000180")]
		public float UseButtonAxis
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xAEE04C", Offset = "0xAEE04C", VA = "0xAEE04C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000181")]
		public bool IsHovering
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0xAEE0D8", Offset = "0xAEE0D8", VA = "0xAEE0D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000182")]
		public bool IsInteracting
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xAE5B20", Offset = "0xAE5B20", VA = "0xAE5B20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000183")]
		public bool HasCustomModel
		{
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0xAEE1D4", Offset = "0xAEE1D4", VA = "0xAEE1D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000184")]
		public bool IsCurrentlyTracked
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0xAED9C0", Offset = "0xAED9C0", VA = "0xAED9C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000185")]
		public Vector3 CurrentForward
		{
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0xAEC9E4", Offset = "0xAEC9E4", VA = "0xAEC9E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000186")]
		public Vector3 CurrentPosition
		{
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0xAEC940", Offset = "0xAEC940", VA = "0xAEC940")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xAEE224", Offset = "0xAEE224", VA = "0xAEE224", Slot = "4")]
		public virtual void PreInitialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xAEF3C4", Offset = "0xAEF3C4", VA = "0xAEF3C4", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xAEF760", Offset = "0xAEF760", VA = "0xAEF760")]
		protected void UpdateHovering()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xAEF4DC", Offset = "0xAEF4DC", VA = "0xAEF4DC")]
		protected void UpdateButtonStates()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xAEFC24", Offset = "0xAEFC24", VA = "0xAEFC24")]
		public void ResetButtonStates()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xAEF5C4", Offset = "0xAEF5C4", VA = "0xAEF5C4")]
		protected void UpdateInteractions()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xAF0310", Offset = "0xAF0310", VA = "0xAF0310", Slot = "6")]
		protected virtual void UpdateVisibilityAndColliders()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xAF0770", Offset = "0xAF0770", VA = "0xAF0770")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xAF0870", Offset = "0xAF0870", VA = "0xAF0870")]
		public void LongHapticPulse(float seconds, NVRButtons button = NVRButtons.Grip)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xAF0890", Offset = "0xAF0890", VA = "0xAF0890")]
		[IteratorStateMachine(typeof(<DoLongHapticPulse>d__66))]
		private IEnumerator DoLongHapticPulse(float seconds, NVRButtons button)
		{
			return null;
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xAF0940", Offset = "0xAF0940", VA = "0xAF0940")]
		public Vector3 GetVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xAF0A28", Offset = "0xAF0A28", VA = "0xAF0A28")]
		public Vector3 GetAngularVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xAF0BEC", Offset = "0xAF0BEC", VA = "0xAF0BEC")]
		public Vector3 GetPositionDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xAF0C7C", Offset = "0xAF0C7C", VA = "0xAF0C7C")]
		public Quaternion GetRotationDelta()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xAF0D80", Offset = "0xAF0D80", VA = "0xAF0D80", Slot = "7")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xAF0E6C", Offset = "0xAF0E6C", VA = "0xAF0E6C", Slot = "8")]
		public virtual void BeginInteraction(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xAF0F60", Offset = "0xAF0F60", VA = "0xAF0F60", Slot = "9")]
		public virtual void EndInteraction(NVRInteractable item)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xAEFFC4", Offset = "0xAEFFC4", VA = "0xAEFFC4")]
		private bool PickupClosest()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xAF109C", Offset = "0xAF109C", VA = "0xAF109C", Slot = "10")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xAF13B0", Offset = "0xAF13B0", VA = "0xAF13B0", Slot = "11")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xAF15A8", Offset = "0xAF15A8", VA = "0xAF15A8", Slot = "12")]
		public virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xAEFF1C", Offset = "0xAEFF1C", VA = "0xAEFF1C")]
		private void RemoveHoveringOver(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xAE72C8", Offset = "0xAE72C8", VA = "0xAE72C8")]
		public string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xAF1724", Offset = "0xAF1724", VA = "0xAF1724")]
		public Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xAF1744", Offset = "0xAF1744", VA = "0xAF1744")]
		public void DeregisterInteractable(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xAF04C0", Offset = "0xAF04C0", VA = "0xAF04C0")]
		protected void SetVisibility(VisibilityLevel visibility)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xAF1940", Offset = "0xAF1940", VA = "0xAF1940", Slot = "13")]
		public virtual void InitializeRenderModel()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xAF1970", Offset = "0xAF1970", VA = "0xAF1970", Slot = "14")]
		public virtual void InitializeRenderModel(NVRRenderModelType type)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xAF1F18", Offset = "0xAF1F18", VA = "0xAF1F18", Slot = "15")]
		public virtual void SetRenderModel(NVRRenderModelType type)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xAF21D0", Offset = "0xAF21D0", VA = "0xAF21D0")]
		[IteratorStateMachine(typeof(<clearHoveringInteractables>d__86))]
		private IEnumerator clearHoveringInteractables()
		{
			return null;
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xAF2260", Offset = "0xAF2260", VA = "0xAF2260", Slot = "16")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xAF2F60", Offset = "0xAF2F60", VA = "0xAF2F60")]
		public void ForceGhost()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xAF2F84", Offset = "0xAF2F84", VA = "0xAF2F84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xAF2F8C", Offset = "0xAF2F8C", VA = "0xAF2F8C")]
		public NVRHand()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public enum VisibilityLevel
	{
		[Token(Token = "0x40011C9")]
		Invisible = 0,
		[Token(Token = "0x40011CA")]
		Ghost = 70,
		[Token(Token = "0x40011CB")]
		Visible = 100
	}
	[Token(Token = "0x2000389")]
	public enum HandState
	{
		[Token(Token = "0x40011CD")]
		Uninitialized,
		[Token(Token = "0x40011CE")]
		Idle,
		[Token(Token = "0x40011CF")]
		GripDownNotInteracting,
		[Token(Token = "0x40011D0")]
		GripDownInteracting,
		[Token(Token = "0x40011D1")]
		GripToggleOnNotInteracting,
		[Token(Token = "0x40011D2")]
		GripToggleOnInteracting,
		[Token(Token = "0x40011D3")]
		GripToggleOff
	}
	[Token(Token = "0x200038A")]
	public enum InterationStyle
	{
		[Token(Token = "0x40011D5")]
		Hold,
		[Token(Token = "0x40011D6")]
		Toggle,
		[Token(Token = "0x40011D7")]
		ByScript
	}
	[Token(Token = "0x200038B")]
	public class NVRHead : MonoBehaviour
	{
		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera[] cameras;

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xAF35AC", Offset = "0xAF35AC", VA = "0xAF35AC")]
		public void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xAF3668", Offset = "0xAF3668", VA = "0xAF3668")]
		public void SetCullingMask(LayerMask cullingMask)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xAF36E8", Offset = "0xAF36E8", VA = "0xAF36E8")]
		public void SetBackgroundColor(Color color)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xAF3778", Offset = "0xAF3778", VA = "0xAF3778")]
		public void setClearFlags(CameraClearFlags clearFlags)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xAF37E0", Offset = "0xAF37E0", VA = "0xAF37E0")]
		public LayerMask GetCullingMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xAF3820", Offset = "0xAF3820", VA = "0xAF3820")]
		public Color GetBackgroundColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xAF3850", Offset = "0xAF3850", VA = "0xAF3850")]
		public CameraClearFlags GetClearFlags()
		{
			return default(CameraClearFlags);
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xAF3880", Offset = "0xAF3880", VA = "0xAF3880")]
		public NVRHead()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class NVRHelpers
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader standardShader;

		[Token(Token = "0x1700018B")]
		private static Shader StandardShader
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0xAF3888", Offset = "0xAF3888", VA = "0xAF3888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xAF2C88", Offset = "0xAF2C88", VA = "0xAF2C88")]
		public static void SetTransparent(Material material, [Optional] Color? newcolor)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xAF3940", Offset = "0xAF3940", VA = "0xAF3940")]
		public static void SetOpaque(Material material)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xAF3B58", Offset = "0xAF3B58", VA = "0xAF3B58")]
		public static void SetProperty(object obj, string propertyName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xAF3BD0", Offset = "0xAF3BD0", VA = "0xAF3BD0")]
		public static void SetField(object obj, string fieldName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xAEBFEC", Offset = "0xAEBFEC", VA = "0xAEBFEC")]
		public static void LineRendererSetColor(LineRenderer lineRenderer, Color startColor, Color endColor)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xAEC044", Offset = "0xAEC044", VA = "0xAEC044")]
		public static void LineRendererSetWidth(LineRenderer lineRenderer, float startWidth, float endWidth)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xAF3C44", Offset = "0xAF3C44", VA = "0xAF3C44")]
		public static Quaternion AverageQuaternion(ref Vector4 cumulative, Quaternion newRotation, Quaternion firstRotation, int addAmount)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xAF3D28", Offset = "0xAF3D28", VA = "0xAF3D28")]
		public static Quaternion NormalizeQuaternion(float x, float y, float z, float w)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xAF3D14", Offset = "0xAF3D14", VA = "0xAF3D14")]
		public static Quaternion InverseSignQuaternion(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xAF3CEC", Offset = "0xAF3CEC", VA = "0xAF3CEC")]
		public static bool AreQuaternionsClose(Quaternion q1, Quaternion q2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xAF3D60", Offset = "0xAF3D60", VA = "0xAF3D60")]
		public NVRHelpers()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public abstract class NVRInputDevice : MonoBehaviour
	{
		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NVRHand _hand;

		[Token(Token = "0x1700018C")]
		protected NVRHand Hand
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0xAF3D68", Offset = "0xAF3D68", VA = "0xAF3D68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xAF3D70", Offset = "0xAF3D70", VA = "0xAF3D70")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public abstract bool IsCurrentlyTracked
		{
			[Token(Token = "0x6001217")]
			get;
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xAF3D78", Offset = "0xAF3D78", VA = "0xAF3D78", Slot = "4")]
		public virtual void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x6001218")]
		public abstract Collider[] SetupDefaultPhysicalColliders(Transform ModelParent);

		[Token(Token = "0x6001219")]
		public abstract GameObject SetupDefaultRenderModel();

		[Token(Token = "0x600121A")]
		public abstract bool ReadyToInitialize();

		[Token(Token = "0x600121B")]
		public abstract Collider[] SetupDefaultColliders();

		[Token(Token = "0x600121C")]
		public abstract string GetDeviceName();

		[Token(Token = "0x600121D")]
		public abstract void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad);

		[Token(Token = "0x600121E")]
		public abstract float GetAxis1D(NVRButtons button);

		[Token(Token = "0x600121F")]
		public abstract Vector2 GetAxis2D(NVRButtons button);

		[Token(Token = "0x6001220")]
		public abstract bool GetPressDown(NVRButtons button);

		[Token(Token = "0x6001221")]
		public abstract bool GetPressUp(NVRButtons button);

		[Token(Token = "0x6001222")]
		public abstract bool GetPress(NVRButtons button);

		[Token(Token = "0x6001223")]
		public abstract bool GetTouchDown(NVRButtons button);

		[Token(Token = "0x6001224")]
		public abstract bool GetTouchUp(NVRButtons button);

		[Token(Token = "0x6001225")]
		public abstract bool GetTouch(NVRButtons button);

		[Token(Token = "0x6001226")]
		public abstract bool GetNearTouchDown(NVRButtons button);

		[Token(Token = "0x6001227")]
		public abstract bool GetNearTouchUp(NVRButtons button);

		[Token(Token = "0x6001228")]
		public abstract bool GetNearTouch(NVRButtons button);

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xAF3D80", Offset = "0xAF3D80", VA = "0xAF3D80")]
		protected NVRInputDevice()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public abstract class NVRIntegration
	{
		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected NVRPlayer Player;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool m_bPauseOnFocusLostEnabled;

		[Token(Token = "0x600122A")]
		public abstract void Initialize(NVRPlayer player);

		[Token(Token = "0x600122B")]
		public abstract Vector3 GetPlayspaceBounds();

		[Token(Token = "0x600122C")]
		public abstract bool IsHmdPresent();

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xAF3D88", Offset = "0xAF3D88", VA = "0xAF3D88")]
		public void enablePauseOnFocusLost(bool bValue)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xAF3D94", Offset = "0xAF3D94", VA = "0xAF3D94")]
		public bool isEnablePauseOnFocusLost()
		{
			return default(bool);
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xAF3D9C", Offset = "0xAF3D9C", VA = "0xAF3D9C")]
		protected NVRIntegration()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public abstract class NVRInteractable : MonoBehaviour
	{
		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int Max_InteractionPriority;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int InteractionPriority;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CanAttach;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool AllowTwoHanded;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool DisableKinematicOnAttach;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool EnableKinematicOnDetach;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected float DropDistance;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool EnableGravityOnDetach;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<NVRHand> AttachedHands;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<NVRHand> HoveringHands;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Collider[] Colliders;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x1700018E")]
		public NVRHand AttachedHand
		{
			[Token(Token = "0x6001230")]
			[Address(RVA = "0xAE4898", Offset = "0xAE4898", VA = "0xAE4898")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		public NVRHand HoveringHand
		{
			[Token(Token = "0x6001231")]
			[Address(RVA = "0xAF3DAC", Offset = "0xAF3DAC", VA = "0xAF3DAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		public virtual bool IsAttached
		{
			[Token(Token = "0x6001232")]
			[Address(RVA = "0xAF3E24", Offset = "0xAF3E24", VA = "0xAF3E24", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xAF3E90", Offset = "0xAF3E90", VA = "0xAF3E90", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xAF3F98", Offset = "0xAF3F98", VA = "0xAF3F98", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xAF3FA4", Offset = "0xAF3FA4", VA = "0xAF3FA4", Slot = "7")]
		public virtual void ResetInteractable()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xAF4034", Offset = "0xAF4034", VA = "0xAF4034", Slot = "8")]
		public virtual void UpdateColliders()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xAF4290", Offset = "0xAF4290", VA = "0xAF4290", Slot = "9")]
		protected virtual bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xAE44BC", Offset = "0xAE44BC", VA = "0xAE44BC", Slot = "10")]
		public virtual void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xAF4560", Offset = "0xAF4560", VA = "0xAF4560", Slot = "11")]
		public virtual void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xAE4FF4", Offset = "0xAE4FF4", VA = "0xAE4FF4", Slot = "12")]
		public virtual void HoveringEnter(NVRHand hand)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xAF45CC", Offset = "0xAF45CC", VA = "0xAF45CC", Slot = "13")]
		public virtual void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xAE5310", Offset = "0xAE5310", VA = "0xAE5310", Slot = "14")]
		public virtual void HoveringExit(NVRHand hand)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xAF45D0", Offset = "0xAF45D0", VA = "0xAF45D0")]
		public void ForceDetach([Optional] NVRHand hand)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xAE4650", Offset = "0xAE4650", VA = "0xAE4650", Slot = "15")]
		public virtual void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xAF4710", Offset = "0xAF4710", VA = "0xAF4710", Slot = "16")]
		protected virtual void DroppedBecauseOfDistance(NVRHand hand)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xAF4738", Offset = "0xAF4738", VA = "0xAF4738", Slot = "17")]
		public virtual void UseButtonUp()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xAF473C", Offset = "0xAF473C", VA = "0xAF473C", Slot = "18")]
		public virtual void UseButtonDown()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xAF4740", Offset = "0xAF4740", VA = "0xAF4740", Slot = "19")]
		public virtual void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xAF4760", Offset = "0xAF4760", VA = "0xAF4760", Slot = "20")]
		public virtual void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xAF4780", Offset = "0xAF4780", VA = "0xAF4780", Slot = "21")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xAE74B0", Offset = "0xAE74B0", VA = "0xAE74B0")]
		protected NVRInteractable()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class NVRInteractableItem : NVRInteractable
	{
		[Token(Token = "0x40011EA")]
		private const float MaxVelocityChange = 10f;

		[Token(Token = "0x40011EB")]
		private const float MaxAngularVelocityChange = 20f;

		[Token(Token = "0x40011EC")]
		private const float VelocityMagic = 6000f;

		[Token(Token = "0x40011ED")]
		private const float AngularVelocityMagic = 50f;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("If you have a specific point you'd like the object held at, create a transform there and set it to this variable")]
		public Transform InteractionPoint;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnUseButtonDown;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnUseButtonUp;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent OnHovering;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent OnBeginInteraction;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent OnEndInteraction;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Dictionary<NVRHand, Transform> PickupTransforms;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 ExternalVelocity;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected Vector3 ExternalAngularVelocity;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Vector3?[] VelocityHistory;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3?[] AngularVelocityHistory;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected int CurrentVelocityHistoryStep;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected float StartingDrag;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected float StartingAngularDrag;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Dictionary<Collider, PhysicMaterial> MaterialCache;

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xAF4B34", Offset = "0xAF4B34", VA = "0xAF4B34", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xAF4B60", Offset = "0xAF4B60", VA = "0xAF4B60", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xAF4DE0", Offset = "0xAF4DE0", VA = "0xAF4DE0", Slot = "22")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xAF4E38", Offset = "0xAF4E38", VA = "0xAF4E38", Slot = "23")]
		protected virtual void GetTargetValues(out Vector3 targetHandPosition, out Quaternion targetHandRotation, out Vector3 targetItemPosition, out Quaternion targetItemRotation)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xAF54CC", Offset = "0xAF54CC", VA = "0xAF54CC", Slot = "24")]
		protected virtual void UpdateVelocities()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xAF5B70", Offset = "0xAF5B70", VA = "0xAF5B70", Slot = "25")]
		protected virtual void AddExternalVelocities()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xAF5D4C", Offset = "0xAF5D4C", VA = "0xAF5D4C", Slot = "19")]
		public override void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xAF5E28", Offset = "0xAF5E28", VA = "0xAF5E28", Slot = "20")]
		public override void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xAF5F04", Offset = "0xAF5F04", VA = "0xAF5F04", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xAF6228", Offset = "0xAF6228", VA = "0xAF6228", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xAF6628", Offset = "0xAF6628", VA = "0xAF6628", Slot = "13")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xAF663C", Offset = "0xAF663C", VA = "0xAF663C", Slot = "7")]
		public override void ResetInteractable()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xAF6664", Offset = "0xAF6664", VA = "0xAF6664", Slot = "18")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xAF6678", Offset = "0xAF6678", VA = "0xAF6678", Slot = "17")]
		public override void UseButtonUp()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xAF668C", Offset = "0xAF668C", VA = "0xAF668C", Slot = "26")]
		protected virtual void ApplyVelocityHistory()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xAF68C8", Offset = "0xAF68C8", VA = "0xAF68C8", Slot = "27")]
		protected virtual void ResetVelocityHistory()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xAF6758", Offset = "0xAF6758", VA = "0xAF6758")]
		protected Vector3? GetMeanVector(Vector3?[] positions)
		{
			return null;
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xAF60F8", Offset = "0xAF60F8", VA = "0xAF60F8")]
		protected void DisablePhysicalMaterials()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xAF64E4", Offset = "0xAF64E4", VA = "0xAF64E4")]
		protected void EnablePhysicalMaterials()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xAF6944", Offset = "0xAF6944", VA = "0xAF6944", Slot = "8")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xAF6A80", Offset = "0xAF6A80", VA = "0xAF6A80")]
		public NVRInteractableItem()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class NVRInteractableItemAutoAttach : NVRInteractableItem
	{
		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float PickupAfterSeconds;

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xAF6B68", Offset = "0xAF6B68", VA = "0xAF6B68", Slot = "13")]
		public override void HoveringUpdate(NVRHand hand, float forTime)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xAF6BE8", Offset = "0xAF6BE8", VA = "0xAF6BE8")]
		public NVRInteractableItemAutoAttach()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class NVRInteractableItemClippable : NVRInteractableItem
	{
		[Token(Token = "0x600125E")]
		[Address(RVA = "0xAF6BF4", Offset = "0xAF6BF4", VA = "0xAF6BF4", Slot = "24")]
		protected override void UpdateVelocities()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xAF6C78", Offset = "0xAF6C78", VA = "0xAF6C78", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xAF6CA0", Offset = "0xAF6CA0", VA = "0xAF6CA0", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xAF6CC8", Offset = "0xAF6CC8", VA = "0xAF6CC8")]
		public NVRInteractableItemClippable()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class NVRInteractableRotator : NVRInteractable
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float CurrentAngle;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x17000191")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xAF6CCC", Offset = "0xAF6CCC", VA = "0xAF6CCC", Slot = "22")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xAF6CD4", Offset = "0xAF6CD4", VA = "0xAF6CD4", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xAF6D00", Offset = "0xAF6D00", VA = "0xAF6D00", Slot = "23")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xAF6E9C", Offset = "0xAF6E9C", VA = "0xAF6E9C", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xAF7044", Offset = "0xAF7044", VA = "0xAF7044", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xAF7108", Offset = "0xAF7108", VA = "0xAF7108")]
		public NVRInteractableRotator()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class NVRInteractables : MonoBehaviour
	{
		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Collider, NVRInteractable> ColliderMapping;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<NVRInteractable, Collider[]> NVRInteractableMapping;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<NVRInteractable> NVRInteractableList;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool Initialized;

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xAF715C", Offset = "0xAF715C", VA = "0xAF715C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xAF408C", Offset = "0xAF408C", VA = "0xAF408C")]
		public static void Register(NVRInteractable interactable, Collider[] colliders)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xAF479C", Offset = "0xAF479C", VA = "0xAF479C")]
		public static void Deregister(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xAF12D4", Offset = "0xAF12D4", VA = "0xAF12D4")]
		public static NVRInteractable GetInteractable(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xAF7500", Offset = "0xAF7500", VA = "0xAF7500")]
		public static List<NVRInteractable> GetAllInteractables()
		{
			return null;
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xAF7548", Offset = "0xAF7548", VA = "0xAF7548")]
		public NVRInteractables()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class NVRLetterSpinner : NVRInteractableRotator
	{
		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LETTERLIST;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float SnapDistance;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float RungAngleInterval;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 LastAngularVelocity;

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xAF76AC", Offset = "0xAF76AC", VA = "0xAF76AC", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xAF7730", Offset = "0xAF7730", VA = "0xAF7730", Slot = "23")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xAF79CC", Offset = "0xAF79CC", VA = "0xAF79CC", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xAF7A08", Offset = "0xAF7A08", VA = "0xAF7A08")]
		public string GetLetter()
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xAF7BCC", Offset = "0xAF7BCC", VA = "0xAF7BCC")]
		public NVRLetterSpinner()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class NVRLever : NVRInteractableItem
	{
		[Token(Token = "0x2000399")]
		public enum LeverPosition
		{
			[Token(Token = "0x400121A")]
			Off,
			[Token(Token = "0x400121B")]
			Mid,
			[Token(Token = "0x400121C")]
			On
		}

		[Token(Token = "0x200039A")]
		public enum RotationAxis
		{
			[Token(Token = "0x400121E")]
			XAxis,
			[Token(Token = "0x400121F")]
			YAxis,
			[Token(Token = "0x4001220")]
			ZAxis
		}

		[Token(Token = "0x200039B")]
		[CompilerGenerated]
		private sealed class <HoldPosition>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRLever <>4__this;

			[Token(Token = "0x4001224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x17000193")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001287")]
				[Address(RVA = "0xAF86E8", Offset = "0xAF86E8", VA = "0xAF86E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000194")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001289")]
				[Address(RVA = "0xAF8730", Offset = "0xAF8730", VA = "0xAF8730", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001284")]
			[Address(RVA = "0xAF8344", Offset = "0xAF8344", VA = "0xAF8344")]
			[DebuggerHidden]
			public <HoldPosition>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001285")]
			[Address(RVA = "0xAF8600", Offset = "0xAF8600", VA = "0xAF8600", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001286")]
			[Address(RVA = "0xAF8604", Offset = "0xAF8604", VA = "0xAF8604", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001288")]
			[Address(RVA = "0xAF86F0", Offset = "0xAF86F0", VA = "0xAF86F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float LastValue;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float CurrentValue;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public LeverPosition LastLeverPosition;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public LeverPosition CurrentLeverPosition;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool LeverEngaged;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float EngageWaitTime;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Transform InitialAttachPoint;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected HingeJoint HingeJoint;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected bool UseMotor;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Quaternion Max;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		protected Quaternion Mid;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected Quaternion Min;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		protected float AngleRange;

		[Token(Token = "0x17000192")]
		protected virtual float DeltaMagic
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0xAF7C90", Offset = "0xAF7C90", VA = "0xAF7C90", Slot = "28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xAF7C98", Offset = "0xAF7C98", VA = "0xAF7C98", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xAF80B8", Offset = "0xAF80B8", VA = "0xAF80B8")]
		protected void Update()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xAF821C", Offset = "0xAF821C", VA = "0xAF821C", Slot = "29")]
		protected virtual void Engage()
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xAF82CC", Offset = "0xAF82CC", VA = "0xAF82CC")]
		[IteratorStateMachine(typeof(<HoldPosition>d__18))]
		private IEnumerator HoldPosition(float time)
		{
			return null;
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xAF836C", Offset = "0xAF836C", VA = "0xAF836C", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xAF8528", Offset = "0xAF8528", VA = "0xAF8528", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xAF8144", Offset = "0xAF8144", VA = "0xAF8144")]
		private float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xAF81E4", Offset = "0xAF81E4", VA = "0xAF81E4")]
		private LeverPosition GetPosition()
		{
			return default(LeverPosition);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xAF85F4", Offset = "0xAF85F4", VA = "0xAF85F4")]
		public NVRLever()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class NVRPhysicalController : MonoBehaviour
	{
		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NVRHand Hand;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool State;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject PhysicalController;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 ClosestHeldPoint;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected float AttachedRotationMagic;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Type[] KeepTypes;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject RenderModel;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<NVRRenderModelType, GameObject> RenderModels;

		[Token(Token = "0x17000195")]
		protected float DropDistance
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0xAF8738", Offset = "0xAF8738", VA = "0xAF8738")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xAF2674", Offset = "0xAF2674", VA = "0xAF2674")]
		public void Initialize(NVRHand trackingHand, bool initialState)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xAF8D1C", Offset = "0xAF8D1C", VA = "0xAF8D1C")]
		public void Kill()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xAF8D84", Offset = "0xAF8D84", VA = "0xAF8D84")]
		private bool CheckForDrop()
		{
			return default(bool);
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xAF8E88", Offset = "0xAF8E88", VA = "0xAF8E88")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xAF90B4", Offset = "0xAF90B4", VA = "0xAF90B4", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xAF90E0", Offset = "0xAF90E0", VA = "0xAF90E0", Slot = "5")]
		protected virtual void DroppedBecauseOfDistance()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xAF1880", Offset = "0xAF1880", VA = "0xAF1880")]
		public void On()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xAF183C", Offset = "0xAF183C", VA = "0xAF183C")]
		public void Off()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xAF2104", Offset = "0xAF2104", VA = "0xAF2104")]
		public void UpdateRenderModel()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xAF8748", Offset = "0xAF8748", VA = "0xAF8748")]
		protected void SetupCustomModel()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xAF90F8", Offset = "0xAF90F8", VA = "0xAF90F8")]
		public NVRPhysicalController()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class NVRPlayer : MonoBehaviour
	{
		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SumalabEvent<bool> OnApplicationFocusLost;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public const decimal NewtonVRVersion = 1.24m;

		[Token(Token = "0x4001232")]
		public const float NewtonVRExpectedDeltaTime = 0.0111f;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<NVRPlayer> Instances;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool SteamVREnabled;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool OculusSDKEnabled;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[HideInInspector]
		public bool PSVREnabled;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[HideInInspector]
		public bool PicoEnabled;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool YVREnabled;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[HideInInspector]
		public bool QiyuVREnabled;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[HideInInspector]
		public bool VIVEEnabled;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InterationStyle InteractionStyle;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool PhysicalHands;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool MakeControllerInvisibleOnInteraction;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool AutomaticallySetControllerTransparency;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool AlwaysPhysicalHands;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool VibrateOnHover;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int VelocityHistorySteps;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnInitialized;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space]
		public bool EnableEditorPlayerPreview;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Mesh EditorPlayerPreview;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Mesh EditorPlayspacePreview;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool EditorPlayspaceOverride;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector2 EditorPlayspaceDefault;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float recenterRotationDeltaY;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static Vector3 recenterPositionDelta;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnRecenterEdit;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Space]
		public NVRRenderModelManager RenderModelManager;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Space]
		public NVRHead Head;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NVRHand LeftHand;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public NVRHand RightHand;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public NVRHand[] Hands;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public NVRSDKIntegrations CurrentIntegrationType;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NVRIntegration Integration;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<Collider, NVRHand> ColliderToHandMapping;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool ApplicationFocusLost;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[Space]
		public bool DEBUGEnableFallback2D;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool DEBUGDropFrames;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int DEBUGSleepPerFrame;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool AutoSetFixedDeltaTime;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool NotifyOnVersionUpdate;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string headName;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector3 defaultRecenterPosition;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public Vector3 defaultRecenterRotation;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Camera ApplicationFocusLostCamera;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool customRecenter;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private UnityAction recenterAction;

		[Token(Token = "0x17000196")]
		public static NVRPlayer Instance
		{
			[Token(Token = "0x6001298")]
			[Address(RVA = "0xAF4C2C", Offset = "0xAF4C2C", VA = "0xAF4C2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		public Vector3 PlayspaceSize
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0xAF93C0", Offset = "0xAF93C0", VA = "0xAF93C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xAF967C", Offset = "0xAF967C", VA = "0xAF967C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xAF99D4", Offset = "0xAF99D4", VA = "0xAF99D4")]
		private void SetupIntegration(bool logOutput = true)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xAF9F1C", Offset = "0xAF9F1C", VA = "0xAF9F1C", Slot = "4")]
		public virtual void enablePauseOnFocusLost(bool bValue)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xAF9F30", Offset = "0xAF9F30", VA = "0xAF9F30", Slot = "5")]
		public virtual bool isEnablePauseOnFocusLost()
		{
			return default(bool);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xAF9F4C", Offset = "0xAF9F4C", VA = "0xAF9F4C")]
		public void SetApplicationFocusLost(bool enable)
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xAFA018", Offset = "0xAFA018", VA = "0xAFA018")]
		public bool IsApplicationFocusLost()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xAF9C6C", Offset = "0xAF9C6C", VA = "0xAF9C6C")]
		private NVRSDKIntegrations DetermineCurrentIntegration(bool logOutput = true)
		{
			return default(NVRSDKIntegrations);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xAF256C", Offset = "0xAF256C", VA = "0xAF256C")]
		public void RegisterHand(NVRHand hand)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xAFA020", Offset = "0xAFA020", VA = "0xAFA020")]
		public NVRHand GetHand(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xAF7290", Offset = "0xAF7290", VA = "0xAF7290")]
		public static void DeregisterInteractable(NVRInteractable interactable)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xAFA078", Offset = "0xAFA078", VA = "0xAFA078")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xAFA0F8", Offset = "0xAFA0F8", VA = "0xAFA0F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xAFA110", Offset = "0xAFA110", VA = "0xAFA110")]
		public void setDefaultRecenter(Vector3 defaultPosition, Vector3 defaultRotation)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xAFA120", Offset = "0xAFA120", VA = "0xAFA120")]
		public void Recenter(bool bEdit = false)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xAFA428", Offset = "0xAFA428", VA = "0xAFA428")]
		public void setCustomRecenter(UnityAction action)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xAFA430", Offset = "0xAFA430", VA = "0xAFA430")]
		public NVRPlayer()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public enum NVRSDKIntegrations
	{
		[Token(Token = "0x4001262")]
		None,
		[Token(Token = "0x4001263")]
		FallbackNonVR,
		[Token(Token = "0x4001264")]
		SteamVR,
		[Token(Token = "0x4001265")]
		Oculus,
		[Token(Token = "0x4001266")]
		WindowsMR,
		[Token(Token = "0x4001267")]
		PSVR,
		[Token(Token = "0x4001268")]
		Pico,
		[Token(Token = "0x4001269")]
		YVR,
		[Token(Token = "0x400126A")]
		QiyuVR,
		[Token(Token = "0x400126B")]
		VIVE
	}
	[Token(Token = "0x20003A1")]
	public class NVRSlider : NVRInteractable
	{
		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BoxCollider trackCollider;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Set to zero when the slider is at StartPoint. Set to one when the slider is at EndPoint.")]
		public float CurrentValue;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("A transform at the position of the zero point of the slider")]
		public Transform StartPoint;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("A transform at the position of the one point of the slider")]
		public Transform EndPoint;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float AttachedPositionMagic;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Transform PickupTransform;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Vector3 SliderPath;

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xAFB6EC", Offset = "0xAFB6EC", VA = "0xAFB6EC", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xAFB8E4", Offset = "0xAFB8E4", VA = "0xAFB8E4", Slot = "22")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xAFBC4C", Offset = "0xAFBC4C", VA = "0xAFBC4C", Slot = "10")]
		public override void BeginInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xAFBD9C", Offset = "0xAFBD9C", VA = "0xAFBD9C", Slot = "15")]
		public override void EndInteraction(NVRHand hand)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xAFBB58", Offset = "0xAFBB58", VA = "0xAFBB58")]
		protected Vector3 ProjectVelocityOnPath(Vector3 velocity, Vector3 path)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xAFBE64", Offset = "0xAFBE64", VA = "0xAFBE64")]
		public NVRSlider()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class NVRSwitch : MonoBehaviour
	{
		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool CurrentState;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool LastState;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool FixedState;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform OnButton;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer OnButtonRenderer;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform OffButton;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer OffButtonRenderer;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float ForceMagic;

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xAFBEC8", Offset = "0xAFBEC8", VA = "0xAFBEC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xAFC0F0", Offset = "0xAFC0F0", VA = "0xAFC0F0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xAFC29C", Offset = "0xAFC29C", VA = "0xAFC29C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xAFBF20", Offset = "0xAFBF20", VA = "0xAFBF20")]
		private void SetRotation(bool forState)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xAFC2B0", Offset = "0xAFC2B0", VA = "0xAFC2B0")]
		public NVRSwitch()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class NVRUIIgnoreRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xAFC2D0", Offset = "0xAFC2D0", VA = "0xAFC2D0", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xAFC2D8", Offset = "0xAFC2D8", VA = "0xAFC2D8")]
		public NVRUIIgnoreRaycast()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class NVRUtils : MonoBehaviour
	{
		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xAFC2E0", Offset = "0xAFC2E0", VA = "0xAFC2E0")]
		public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xAFC2FC", Offset = "0xAFC2FC", VA = "0xAFC2FC")]
		public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xAFC334", Offset = "0xAFC334", VA = "0xAFC334")]
		public NVRUtils()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class NVROculusInputDevice : NVRInputDevice
	{
		[Token(Token = "0x20003A6")]
		[CompilerGenerated]
		private sealed class <DoHapticPulse>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVROculusInputDevice <>4__this;

			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ushort durationMicroSec;

			[Token(Token = "0x4001287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__2;

			[Token(Token = "0x17000199")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012DC")]
				[Address(RVA = "0xAFDADC", Offset = "0xAFDADC", VA = "0xAFDADC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012DE")]
				[Address(RVA = "0xAFDB24", Offset = "0xAFDB24", VA = "0xAFDB24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xAFCF5C", Offset = "0xAFCF5C", VA = "0xAFCF5C")]
			[DebuggerHidden]
			public <DoHapticPulse>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60012DA")]
			[Address(RVA = "0xAFD9C4", Offset = "0xAFD9C4", VA = "0xAFD9C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012DB")]
			[Address(RVA = "0xAFD9C8", Offset = "0xAFD9C8", VA = "0xAFD9C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xAFDAE4", Offset = "0xAFDAE4", VA = "0xAFDAE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject RenderModel;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRInput.Controller Controller;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<NVRButtons, OVRInput.Button> ButtonMapping;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<NVRButtons, OVRInput.Touch> TouchMapping;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<NVRButtons, OVRInput.NearTouch> NearTouchMapping;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<NVRButtons, OVRInput.Axis1D> TriggerMapping;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<NVRButtons, OVRInput.Axis2D> StickMapping;

		[Token(Token = "0x17000198")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xAFCF84", Offset = "0xAFCF84", VA = "0xAFCF84", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xAFC33C", Offset = "0xAFC33C", VA = "0xAFC33C", Slot = "4")]
		public override void Initialize(NVRHand hand)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xAFC390", Offset = "0xAFC390", VA = "0xAFC390", Slot = "23")]
		protected virtual void SetupButtonMapping()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xAFC660", Offset = "0xAFC660", VA = "0xAFC660")]
		private OVRInput.Button GetButtonMap(NVRButtons button)
		{
			return default(OVRInput.Button);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xAFC6F4", Offset = "0xAFC6F4", VA = "0xAFC6F4")]
		private OVRInput.Touch GetTouchMap(NVRButtons button)
		{
			return default(OVRInput.Touch);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xAFC788", Offset = "0xAFC788", VA = "0xAFC788")]
		private OVRInput.NearTouch GetNearTouchMap(NVRButtons button)
		{
			return default(OVRInput.NearTouch);
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xAFC81C", Offset = "0xAFC81C", VA = "0xAFC81C")]
		private OVRInput.Axis1D GetTriggerMap(NVRButtons button)
		{
			return default(OVRInput.Axis1D);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xAFC8B0", Offset = "0xAFC8B0", VA = "0xAFC8B0")]
		private OVRInput.Axis2D GetStickMap(NVRButtons button)
		{
			return default(OVRInput.Axis2D);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xAFC944", Offset = "0xAFC944", VA = "0xAFC944", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xAFC9C4", Offset = "0xAFC9C4", VA = "0xAFC9C4", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xAFCA44", Offset = "0xAFCA44", VA = "0xAFCA44", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xAFCAC4", Offset = "0xAFCAC4", VA = "0xAFCAC4", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xAFCB44", Offset = "0xAFCB44", VA = "0xAFCB44", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xAFCBC4", Offset = "0xAFCBC4", VA = "0xAFCBC4", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xAFCC44", Offset = "0xAFCC44", VA = "0xAFCC44", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xAFCCC4", Offset = "0xAFCCC4", VA = "0xAFCCC4", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xAFCD44", Offset = "0xAFCD44", VA = "0xAFCD44", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xAFCDC4", Offset = "0xAFCDC4", VA = "0xAFCDC4", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xAFCE44", Offset = "0xAFCE44", VA = "0xAFCE44", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xAFCEC4", Offset = "0xAFCEC4", VA = "0xAFCEC4", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xAFCEE4", Offset = "0xAFCEE4", VA = "0xAFCEE4")]
		[IteratorStateMachine(typeof(<DoHapticPulse>d__26))]
		private IEnumerator DoHapticPulse(ushort durationMicroSec)
		{
			return null;
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xAFCFE0", Offset = "0xAFCFE0", VA = "0xAFCFE0", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xAFD270", Offset = "0xAFD270", VA = "0xAFD270", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xAFD2CC", Offset = "0xAFD2CC", VA = "0xAFD2CC", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xAFD3C4", Offset = "0xAFD3C4", VA = "0xAFD3C4", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xAFD674", Offset = "0xAFD674", VA = "0xAFD674", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xAFD784", Offset = "0xAFD784", VA = "0xAFD784")]
		public NVROculusInputDevice()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class NVROculusIntegration : NVRIntegration
	{
		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OVRBoundary boundary;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRDisplay display;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRTracker tracker;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SumalabInvoke.SumalabInvokeHandler invokeHandler;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 PlayspaceBounds;

		[Token(Token = "0x1700019B")]
		private OVRBoundary Boundary
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xAFDB2C", Offset = "0xAFDB2C", VA = "0xAFDB2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		private OVRDisplay Display
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xAFDB98", Offset = "0xAFDB98", VA = "0xAFDB98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private OVRTracker Tracker
		{
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0xAFDC04", Offset = "0xAFDC04", VA = "0xAFDC04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xAFDC70", Offset = "0xAFDC70", VA = "0xAFDC70", Slot = "1")]
		~NVROculusIntegration()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xAFDE5C", Offset = "0xAFDE5C", VA = "0xAFDE5C", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xAFE1C8", Offset = "0xAFE1C8", VA = "0xAFE1C8")]
		private void Resume()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xAFE3C8", Offset = "0xAFE3C8", VA = "0xAFE3C8")]
		private void ResumeDelay()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xAFE2F0", Offset = "0xAFE2F0", VA = "0xAFE2F0")]
		private void Pause()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xAFE464", Offset = "0xAFE464", VA = "0xAFE464", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xAFE4B8", Offset = "0xAFE4B8", VA = "0xAFE4B8", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xAFE558", Offset = "0xAFE558", VA = "0xAFE558")]
		public NVROculusIntegration()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class NVRPicoInputDevice : NVRInputDevice
	{
		[Token(Token = "0x1700019E")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0xAFE5B8", Offset = "0xAFE5B8", VA = "0xAFE5B8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xAFE5F8", Offset = "0xAFE5F8", VA = "0xAFE5F8", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xAFE638", Offset = "0xAFE638", VA = "0xAFE638", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xAFE678", Offset = "0xAFE678", VA = "0xAFE678", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xAFE6B8", Offset = "0xAFE6B8", VA = "0xAFE6B8", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xAFE6F8", Offset = "0xAFE6F8", VA = "0xAFE6F8", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xAFE738", Offset = "0xAFE738", VA = "0xAFE738", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xAFE778", Offset = "0xAFE778", VA = "0xAFE778", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xAFE7B8", Offset = "0xAFE7B8", VA = "0xAFE7B8", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xAFE7F8", Offset = "0xAFE7F8", VA = "0xAFE7F8", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xAFE838", Offset = "0xAFE838", VA = "0xAFE838", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xAFE878", Offset = "0xAFE878", VA = "0xAFE878", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xAFE8B8", Offset = "0xAFE8B8", VA = "0xAFE8B8", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xAFE8F8", Offset = "0xAFE8F8", VA = "0xAFE8F8", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xAFE938", Offset = "0xAFE938", VA = "0xAFE938", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xAFE978", Offset = "0xAFE978", VA = "0xAFE978", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xAFE9B8", Offset = "0xAFE9B8", VA = "0xAFE9B8", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xAFE9F8", Offset = "0xAFE9F8", VA = "0xAFE9F8", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xAFEA38", Offset = "0xAFEA38", VA = "0xAFEA38")]
		public NVRPicoInputDevice()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class NVRPicoIntegration : NVRIntegration
	{
		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xAFEA40", Offset = "0xAFEA40", VA = "0xAFEA40", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xAFEA84", Offset = "0xAFEA84", VA = "0xAFEA84", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xAFEA88", Offset = "0xAFEA88", VA = "0xAFEA88", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xAFEA90", Offset = "0xAFEA90", VA = "0xAFEA90")]
		public NVRPicoIntegration()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class NVRPSVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x1700019F")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0xAFEA98", Offset = "0xAFEA98", VA = "0xAFEA98", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xAFEB14", Offset = "0xAFEB14", VA = "0xAFEB14", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xAFEB28", Offset = "0xAFEB28", VA = "0xAFEB28", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xAFEB6C", Offset = "0xAFEB6C", VA = "0xAFEB6C", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xAFEBB0", Offset = "0xAFEBB0", VA = "0xAFEBB0", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xAFEBC4", Offset = "0xAFEBC4", VA = "0xAFEBC4", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xAFEBD8", Offset = "0xAFEBD8", VA = "0xAFEBD8", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xAFEBEC", Offset = "0xAFEBEC", VA = "0xAFEBEC", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xAFEC00", Offset = "0xAFEC00", VA = "0xAFEC00", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xAFEC14", Offset = "0xAFEC14", VA = "0xAFEC14", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xAFEC28", Offset = "0xAFEC28", VA = "0xAFEC28", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xAFEC3C", Offset = "0xAFEC3C", VA = "0xAFEC3C", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xAFEC50", Offset = "0xAFEC50", VA = "0xAFEC50", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xAFEC64", Offset = "0xAFEC64", VA = "0xAFEC64", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xAFEC78", Offset = "0xAFEC78", VA = "0xAFEC78", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xAFEC8C", Offset = "0xAFEC8C", VA = "0xAFEC8C", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xAFECA0", Offset = "0xAFECA0", VA = "0xAFECA0", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xAFECB4", Offset = "0xAFECB4", VA = "0xAFECB4", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xAFEAAC", Offset = "0xAFEAAC", VA = "0xAFEAAC")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xAFECB8", Offset = "0xAFECB8", VA = "0xAFECB8")]
		public NVRPSVRInputDevice()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class NVRPSVRIntegration : NVRIntegration
	{
		[Token(Token = "0x6001315")]
		[Address(RVA = "0xAFECC0", Offset = "0xAFECC0", VA = "0xAFECC0", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xAFECC4", Offset = "0xAFECC4", VA = "0xAFECC4", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xAFED08", Offset = "0xAFED08", VA = "0xAFED08", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xAFED10", Offset = "0xAFED10", VA = "0xAFED10")]
		public NVRPSVRIntegration()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class NVRQiyuVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170001A0")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6001319")]
			[Address(RVA = "0xAFED18", Offset = "0xAFED18", VA = "0xAFED18", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xAFED58", Offset = "0xAFED58", VA = "0xAFED58", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xAFED98", Offset = "0xAFED98", VA = "0xAFED98", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xAFEDD8", Offset = "0xAFEDD8", VA = "0xAFEDD8", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xAFEE18", Offset = "0xAFEE18", VA = "0xAFEE18", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xAFEE58", Offset = "0xAFEE58", VA = "0xAFEE58", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xAFEE98", Offset = "0xAFEE98", VA = "0xAFEE98", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xAFEED8", Offset = "0xAFEED8", VA = "0xAFEED8", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xAFEF18", Offset = "0xAFEF18", VA = "0xAFEF18", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xAFEF58", Offset = "0xAFEF58", VA = "0xAFEF58", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xAFEF98", Offset = "0xAFEF98", VA = "0xAFEF98", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xAFEFD8", Offset = "0xAFEFD8", VA = "0xAFEFD8", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xAFF018", Offset = "0xAFF018", VA = "0xAFF018", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xAFF058", Offset = "0xAFF058", VA = "0xAFF058", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xAFF098", Offset = "0xAFF098", VA = "0xAFF098", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xAFF0D8", Offset = "0xAFF0D8", VA = "0xAFF0D8", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xAFF118", Offset = "0xAFF118", VA = "0xAFF118", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xAFF158", Offset = "0xAFF158", VA = "0xAFF158", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xAFF198", Offset = "0xAFF198", VA = "0xAFF198")]
		public NVRQiyuVRInputDevice()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class NVRQiyuVRIntegration : NVRIntegration
	{
		[Token(Token = "0x600132C")]
		[Address(RVA = "0xAFF1A0", Offset = "0xAFF1A0", VA = "0xAFF1A0", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xAFF1A4", Offset = "0xAFF1A4", VA = "0xAFF1A4", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xAFF1E8", Offset = "0xAFF1E8", VA = "0xAFF1E8", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xAFF1F0", Offset = "0xAFF1F0", VA = "0xAFF1F0")]
		public NVRQiyuVRIntegration()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class NVRSteamVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170001A1")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6001330")]
			[Address(RVA = "0xAFF1F8", Offset = "0xAFF1F8", VA = "0xAFF1F8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xAFF274", Offset = "0xAFF274", VA = "0xAFF274", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xAFF288", Offset = "0xAFF288", VA = "0xAFF288", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xAFF2CC", Offset = "0xAFF2CC", VA = "0xAFF2CC", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xAFF310", Offset = "0xAFF310", VA = "0xAFF310", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xAFF324", Offset = "0xAFF324", VA = "0xAFF324", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xAFF338", Offset = "0xAFF338", VA = "0xAFF338", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xAFF34C", Offset = "0xAFF34C", VA = "0xAFF34C", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xAFF360", Offset = "0xAFF360", VA = "0xAFF360", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xAFF374", Offset = "0xAFF374", VA = "0xAFF374", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xAFF388", Offset = "0xAFF388", VA = "0xAFF388", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xAFF39C", Offset = "0xAFF39C", VA = "0xAFF39C", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xAFF3B0", Offset = "0xAFF3B0", VA = "0xAFF3B0", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xAFF3C4", Offset = "0xAFF3C4", VA = "0xAFF3C4", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xAFF3D8", Offset = "0xAFF3D8", VA = "0xAFF3D8", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xAFF3EC", Offset = "0xAFF3EC", VA = "0xAFF3EC", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xAFF400", Offset = "0xAFF400", VA = "0xAFF400", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xAFF414", Offset = "0xAFF414", VA = "0xAFF414", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xAFF20C", Offset = "0xAFF20C", VA = "0xAFF20C")]
		private void PrintNotEnabledError()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xAFF418", Offset = "0xAFF418", VA = "0xAFF418")]
		public NVRSteamVRInputDevice()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class NVRSteamVRIntegration : NVRIntegration
	{
		[Token(Token = "0x6001344")]
		[Address(RVA = "0xAFF420", Offset = "0xAFF420", VA = "0xAFF420", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xAFF424", Offset = "0xAFF424", VA = "0xAFF424", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xAFF468", Offset = "0xAFF468", VA = "0xAFF468", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xAFF470", Offset = "0xAFF470", VA = "0xAFF470")]
		public NVRSteamVRIntegration()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class NVRVIVEInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170001A2")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0xAFF478", Offset = "0xAFF478", VA = "0xAFF478", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xAFF4B8", Offset = "0xAFF4B8", VA = "0xAFF4B8", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xAFF4F8", Offset = "0xAFF4F8", VA = "0xAFF4F8", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xAFF538", Offset = "0xAFF538", VA = "0xAFF538", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xAFF578", Offset = "0xAFF578", VA = "0xAFF578", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xAFF5B8", Offset = "0xAFF5B8", VA = "0xAFF5B8", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xAFF5F8", Offset = "0xAFF5F8", VA = "0xAFF5F8", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xAFF638", Offset = "0xAFF638", VA = "0xAFF638", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xAFF678", Offset = "0xAFF678", VA = "0xAFF678", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xAFF6B8", Offset = "0xAFF6B8", VA = "0xAFF6B8", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xAFF6F8", Offset = "0xAFF6F8", VA = "0xAFF6F8", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xAFF738", Offset = "0xAFF738", VA = "0xAFF738", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xAFF778", Offset = "0xAFF778", VA = "0xAFF778", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xAFF7B8", Offset = "0xAFF7B8", VA = "0xAFF7B8", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xAFF7F8", Offset = "0xAFF7F8", VA = "0xAFF7F8", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xAFF838", Offset = "0xAFF838", VA = "0xAFF838", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xAFF878", Offset = "0xAFF878", VA = "0xAFF878", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xAFF8B8", Offset = "0xAFF8B8", VA = "0xAFF8B8", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xAFF8F8", Offset = "0xAFF8F8", VA = "0xAFF8F8")]
		public NVRVIVEInputDevice()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class NVRVIVEIntegration : NVRIntegration
	{
		[Token(Token = "0x600135B")]
		[Address(RVA = "0xAFF900", Offset = "0xAFF900", VA = "0xAFF900", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xAFF944", Offset = "0xAFF944", VA = "0xAFF944", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xAFF948", Offset = "0xAFF948", VA = "0xAFF948", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xAFF950", Offset = "0xAFF950", VA = "0xAFF950")]
		public NVRVIVEIntegration()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class NVRYVRInputDevice : NVRInputDevice
	{
		[Token(Token = "0x170001A3")]
		public override bool IsCurrentlyTracked
		{
			[Token(Token = "0x600135F")]
			[Address(RVA = "0xAFF958", Offset = "0xAFF958", VA = "0xAFF958", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xAFF998", Offset = "0xAFF998", VA = "0xAFF998", Slot = "12")]
		public override float GetAxis1D(NVRButtons button)
		{
			return default(float);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xAFF9D8", Offset = "0xAFF9D8", VA = "0xAFF9D8", Slot = "13")]
		public override Vector2 GetAxis2D(NVRButtons button)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xAFFA18", Offset = "0xAFFA18", VA = "0xAFFA18", Slot = "10")]
		public override string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xAFFA58", Offset = "0xAFFA58", VA = "0xAFFA58", Slot = "22")]
		public override bool GetNearTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xAFFA98", Offset = "0xAFFA98", VA = "0xAFFA98", Slot = "20")]
		public override bool GetNearTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xAFFAD8", Offset = "0xAFFAD8", VA = "0xAFFAD8", Slot = "21")]
		public override bool GetNearTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xAFFB18", Offset = "0xAFFB18", VA = "0xAFFB18", Slot = "16")]
		public override bool GetPress(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xAFFB58", Offset = "0xAFFB58", VA = "0xAFFB58", Slot = "14")]
		public override bool GetPressDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xAFFB98", Offset = "0xAFFB98", VA = "0xAFFB98", Slot = "15")]
		public override bool GetPressUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xAFFBD8", Offset = "0xAFFBD8", VA = "0xAFFBD8", Slot = "19")]
		public override bool GetTouch(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xAFFC18", Offset = "0xAFFC18", VA = "0xAFFC18", Slot = "17")]
		public override bool GetTouchDown(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xAFFC58", Offset = "0xAFFC58", VA = "0xAFFC58", Slot = "18")]
		public override bool GetTouchUp(NVRButtons button)
		{
			return default(bool);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xAFFC98", Offset = "0xAFFC98", VA = "0xAFFC98", Slot = "8")]
		public override bool ReadyToInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xAFFCD8", Offset = "0xAFFCD8", VA = "0xAFFCD8", Slot = "9")]
		public override Collider[] SetupDefaultColliders()
		{
			return null;
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xAFFD18", Offset = "0xAFFD18", VA = "0xAFFD18", Slot = "6")]
		public override Collider[] SetupDefaultPhysicalColliders(Transform ModelParent)
		{
			return null;
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xAFFD58", Offset = "0xAFFD58", VA = "0xAFFD58", Slot = "7")]
		public override GameObject SetupDefaultRenderModel()
		{
			return null;
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xAFFD98", Offset = "0xAFFD98", VA = "0xAFFD98", Slot = "11")]
		public override void TriggerHapticPulse(ushort durationMicroSec = 500, NVRButtons button = NVRButtons.Touchpad)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xAFFDD8", Offset = "0xAFFDD8", VA = "0xAFFDD8")]
		public NVRYVRInputDevice()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class NVRYVRIntegration : NVRIntegration
	{
		[Token(Token = "0x6001372")]
		[Address(RVA = "0xAFFDE0", Offset = "0xAFFDE0", VA = "0xAFFDE0", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xAFFE24", Offset = "0xAFFE24", VA = "0xAFFE24", Slot = "4")]
		public override void Initialize(NVRPlayer player)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xAFFE28", Offset = "0xAFFE28", VA = "0xAFFE28", Slot = "6")]
		public override bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xAFFE30", Offset = "0xAFFE30", VA = "0xAFFE30")]
		public NVRYVRIntegration()
		{
		}
	}
}
namespace NewtonVR.Example
{
	[Token(Token = "0x20003B4")]
	public class NVRExampleButtonDropSphere : MonoBehaviour
	{
		[Token(Token = "0x6001376")]
		[Address(RVA = "0xAFFE38", Offset = "0xAFFE38", VA = "0xAFFE38")]
		public void DropSphere()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xAFFF48", Offset = "0xAFFF48", VA = "0xAFFF48")]
		public NVRExampleButtonDropSphere()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class NVRExampleButtonResetScene : MonoBehaviour
	{
		[Token(Token = "0x6001378")]
		[Address(RVA = "0xAFFF50", Offset = "0xAFFF50", VA = "0xAFFF50")]
		public void ResetScene()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xAFFFC0", Offset = "0xAFFFC0", VA = "0xAFFFC0")]
		public NVRExampleButtonResetScene()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class NVRExampleColorLever : MonoBehaviour
	{
		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color From;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color To;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer Result;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NVRLever Lever;

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xAFFFC8", Offset = "0xAFFFC8", VA = "0xAFFFC8")]
		private void Update()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xB00034", Offset = "0xB00034", VA = "0xB00034")]
		public NVRExampleColorLever()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class NVRExampleColorSlider : MonoBehaviour
	{
		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color From;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color To;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer Result;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NVRSlider Slider;

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xB0003C", Offset = "0xB0003C", VA = "0xB0003C")]
		private void Update()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xB000A8", Offset = "0xB000A8", VA = "0xB000A8")]
		public NVRExampleColorSlider()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class NVRExampleDegreeResult : MonoBehaviour
	{
		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRInteractableItem Knob;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMesh Text;

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xB000B0", Offset = "0xB000B0", VA = "0xB000B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xB00100", Offset = "0xB00100", VA = "0xB00100")]
		private void Update()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xB0017C", Offset = "0xB0017C", VA = "0xB0017C")]
		public NVRExampleDegreeResult()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class NVRExampleEvent : MonoBehaviour
	{
		[Token(Token = "0x6001381")]
		[Address(RVA = "0xB00184", Offset = "0xB00184", VA = "0xB00184")]
		public void Duplicate()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xB00274", Offset = "0xB00274", VA = "0xB00274")]
		public NVRExampleEvent()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class NVRExampleGrower : NVRInteractableItem
	{
		[Token(Token = "0x6001383")]
		[Address(RVA = "0xB0027C", Offset = "0xB0027C", VA = "0xB0027C", Slot = "11")]
		public override void InteractingUpdate(NVRHand hand)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xB004F8", Offset = "0xB004F8", VA = "0xB004F8")]
		public NVRExampleGrower()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class NVRExampleGun : NVRInteractableItem
	{
		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject BulletPrefab;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform FirePoint;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Vector3 BulletDirection;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float BulletForce;

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xB00500", Offset = "0xB00500", VA = "0xB00500", Slot = "18")]
		public override void UseButtonDown()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xB00668", Offset = "0xB00668", VA = "0xB00668")]
		public NVRExampleGun()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class NVRExampleLaserPointer : MonoBehaviour
	{
		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color LineColor;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LineWidth;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ForceLineVisible;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool OnlyVisibleOnTrigger;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer Line;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand Hand;

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xB00678", Offset = "0xB00678", VA = "0xB00678")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xB00888", Offset = "0xB00888", VA = "0xB00888")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xB00B7C", Offset = "0xB00B7C", VA = "0xB00B7C")]
		public NVRExampleLaserPointer()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class NVRExampleLetterResult : MonoBehaviour
	{
		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRLetterSpinner LetterSpinner;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMesh Text;

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xB00B98", Offset = "0xB00B98", VA = "0xB00B98")]
		private void Awake()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xB00BE8", Offset = "0xB00BE8", VA = "0xB00BE8")]
		private void Update()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xB00C20", Offset = "0xB00C20", VA = "0xB00C20")]
		public NVRExampleLetterResult()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class NVRExampleLeverResultRocket : MonoBehaviour
	{
		[Token(Token = "0x20003BF")]
		[CompilerGenerated]
		private sealed class <DoBlastOff>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRExampleLeverResultRocket <>4__this;

			[Token(Token = "0x170001A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001395")]
				[Address(RVA = "0xB00EAC", Offset = "0xB00EAC", VA = "0xB00EAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001397")]
				[Address(RVA = "0xB00EF4", Offset = "0xB00EF4", VA = "0xB00EF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001392")]
			[Address(RVA = "0xB00D54", Offset = "0xB00D54", VA = "0xB00D54")]
			[DebuggerHidden]
			public <DoBlastOff>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001393")]
			[Address(RVA = "0xB00DAC", Offset = "0xB00DAC", VA = "0xB00DAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001394")]
			[Address(RVA = "0xB00DB0", Offset = "0xB00DB0", VA = "0xB00DB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001396")]
			[Address(RVA = "0xB00EB4", Offset = "0xB00EB4", VA = "0xB00EB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C0")]
		[CompilerGenerated]
		private sealed class <DoSpawnShip>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NVRExampleLeverResultRocket <>4__this;

			[Token(Token = "0x40012AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <startScale>5__2;

			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <endScale>5__3;

			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startTime>5__4;

			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <overTime>5__5;

			[Token(Token = "0x40012B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <stopTime>5__6;

			[Token(Token = "0x170001A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600139B")]
				[Address(RVA = "0xB01210", Offset = "0xB01210", VA = "0xB01210", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600139D")]
				[Address(RVA = "0xB01258", Offset = "0xB01258", VA = "0xB01258", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001398")]
			[Address(RVA = "0xB00D7C", Offset = "0xB00D7C", VA = "0xB00D7C")]
			[DebuggerHidden]
			public <DoSpawnShip>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001399")]
			[Address(RVA = "0xB00EFC", Offset = "0xB00EFC", VA = "0xB00EFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600139A")]
			[Address(RVA = "0xB00F00", Offset = "0xB00F00", VA = "0xB00F00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600139C")]
			[Address(RVA = "0xB01218", Offset = "0xB01218", VA = "0xB01218", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject RocketPrefab;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRLever Control;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject RocketInstance;

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xB00C28", Offset = "0xB00C28", VA = "0xB00C28")]
		private void Awake()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xB00CB0", Offset = "0xB00CB0", VA = "0xB00CB0")]
		private void Update()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xB00CEC", Offset = "0xB00CEC", VA = "0xB00CEC")]
		[IteratorStateMachine(typeof(<DoBlastOff>d__5))]
		public IEnumerator DoBlastOff()
		{
			return null;
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xB00C48", Offset = "0xB00C48", VA = "0xB00C48")]
		[IteratorStateMachine(typeof(<DoSpawnShip>d__6))]
		private IEnumerator DoSpawnShip()
		{
			return null;
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xB00DA4", Offset = "0xB00DA4", VA = "0xB00DA4")]
		public NVRExampleLeverResultRocket()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class NVRExampleRGBResult : MonoBehaviour
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRSlider SliderRed;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NVRSlider SliderGreen;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NVRSlider SliderBlue;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer Result;

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xB01260", Offset = "0xB01260", VA = "0xB01260")]
		private void Update()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xB012B4", Offset = "0xB012B4", VA = "0xB012B4")]
		public NVRExampleRGBResult()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class NVRExampleSpawner : MonoBehaviour
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRButton Button;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ToCopy;

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xB012BC", Offset = "0xB012BC", VA = "0xB012BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xB013DC", Offset = "0xB013DC", VA = "0xB013DC")]
		public NVRExampleSpawner()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class NVRExampleSwitchResult : MonoBehaviour
	{
		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NVRSwitch Switch;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light SpotLight;

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xB013E4", Offset = "0xB013E4", VA = "0xB013E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xB01434", Offset = "0xB01434", VA = "0xB01434")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xB0145C", Offset = "0xB0145C", VA = "0xB0145C")]
		public NVRExampleSwitchResult()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	[RequireComponent(typeof(NVRHand))]
	public class NVRExampleTeleporter : MonoBehaviour
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color LineColor;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LineWidth;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer Line;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NVRHand Hand;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NVRPlayer Player;

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xB01464", Offset = "0xB01464", VA = "0xB01464")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xB01674", Offset = "0xB01674", VA = "0xB01674")]
		private void Start()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xB01694", Offset = "0xB01694", VA = "0xB01694")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xB01B38", Offset = "0xB01B38", VA = "0xB01B38")]
		public NVRExampleTeleporter()
		{
		}
	}
}
namespace UnitySA.Characters.FirstPerson
{
	[Token(Token = "0x20003C5")]
	[RequireComponent(typeof(CharacterController))]
	[RequireComponent(typeof(AudioSource))]
	public class FPCtrl : MonoBehaviour
	{
		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_RunstepLenghten;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MLook m_MouseLook;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FOVZoom m_FovKick;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CurveCtrlBob m_HeadBob;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LerpCtrlBob m_JumpBob;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera m_Camera;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_Jump;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_YRotation;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 m_Input;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_StepCycle;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_NextStep;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_Jumping;

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xB01B4C", Offset = "0xB01B4C", VA = "0xB01B4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xB01D5C", Offset = "0xB01D5C", VA = "0xB01D5C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xB01EFC", Offset = "0xB01EFC", VA = "0xB01EFC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xB02500", Offset = "0xB02500", VA = "0xB02500")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xB02634", Offset = "0xB02634", VA = "0xB02634")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xB022F4", Offset = "0xB022F4", VA = "0xB022F4")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xB01E44", Offset = "0xB01E44", VA = "0xB01E44")]
		private void RotateView()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xB02DA0", Offset = "0xB02DA0", VA = "0xB02DA0")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xB02EC4", Offset = "0xB02EC4", VA = "0xB02EC4")]
		public FPCtrl()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C6")]
	public class MLook
	{
		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xB01D0C", Offset = "0xB01D0C", VA = "0xB01D0C")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xB02A44", Offset = "0xB02A44", VA = "0xB02A44")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xB032A4", Offset = "0xB032A4", VA = "0xB032A4")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xB02874", Offset = "0xB02874", VA = "0xB02874")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xB032D8", Offset = "0xB032D8", VA = "0xB032D8")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xB03240", Offset = "0xB03240", VA = "0xB03240")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xB03350", Offset = "0xB03350", VA = "0xB03350")]
		public MLook()
		{
		}
	}
}
namespace UnitySA.Utility
{
	[Serializable]
	[Token(Token = "0x20003C7")]
	public class CurveCtrlBob
	{
		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xB01C6C", Offset = "0xB01C6C", VA = "0xB01C6C")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xB02884", Offset = "0xB02884", VA = "0xB02884")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xB02FF8", Offset = "0xB02FF8", VA = "0xB02FF8")]
		public CurveCtrlBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C8")]
	public class FOVZoom
	{
		[Token(Token = "0x20003C9")]
		[CompilerGenerated]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVZoom <>4__this;

			[Token(Token = "0x40012F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170001A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013C5")]
				[Address(RVA = "0xB035F0", Offset = "0xB035F0", VA = "0xB035F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013C7")]
				[Address(RVA = "0xB03638", Offset = "0xB03638", VA = "0xB03638", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xB03474", Offset = "0xB03474", VA = "0xB03474")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60013C3")]
			[Address(RVA = "0xB034C4", Offset = "0xB034C4", VA = "0xB034C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013C4")]
			[Address(RVA = "0xB034C8", Offset = "0xB034C8", VA = "0xB034C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013C6")]
			[Address(RVA = "0xB035F8", Offset = "0xB035F8", VA = "0xB035F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CA")]
		[CompilerGenerated]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVZoom <>4__this;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170001AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013CB")]
				[Address(RVA = "0xB03780", Offset = "0xB03780", VA = "0xB03780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013CD")]
				[Address(RVA = "0xB037C8", Offset = "0xB037C8", VA = "0xB037C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013C8")]
			[Address(RVA = "0xB0349C", Offset = "0xB0349C", VA = "0xB0349C")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60013C9")]
			[Address(RVA = "0xB03640", Offset = "0xB03640", VA = "0xB03640", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013CA")]
			[Address(RVA = "0xB03644", Offset = "0xB03644", VA = "0xB03644", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013CC")]
			[Address(RVA = "0xB03788", Offset = "0xB03788", VA = "0xB03788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xB01C30", Offset = "0xB01C30", VA = "0xB01C30")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xB03384", Offset = "0xB03384", VA = "0xB03384")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xB0346C", Offset = "0xB0346C", VA = "0xB0346C")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xB029DC", Offset = "0xB029DC", VA = "0xB029DC")]
		[IteratorStateMachine(typeof(<FOVKickUp>d__9))]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xB02974", Offset = "0xB02974", VA = "0xB02974")]
		[IteratorStateMachine(typeof(<FOVKickDown>d__10))]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xB02FDC", Offset = "0xB02FDC", VA = "0xB02FDC")]
		public FOVZoom()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CB")]
	public class LerpCtrlBob
	{
		[Token(Token = "0x20003CC")]
		[CompilerGenerated]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpCtrlBob <>4__this;

			[Token(Token = "0x4001300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170001AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013D4")]
				[Address(RVA = "0xB039A0", Offset = "0xB039A0", VA = "0xB039A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013D6")]
				[Address(RVA = "0xB039E8", Offset = "0xB039E8", VA = "0xB039E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xB037D8", Offset = "0xB037D8", VA = "0xB037D8")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xB03800", Offset = "0xB03800", VA = "0xB03800", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xB03804", Offset = "0xB03804", VA = "0xB03804", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xB039A8", Offset = "0xB039A8", VA = "0xB039A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xB037D0", Offset = "0xB037D0", VA = "0xB037D0")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xB01E94", Offset = "0xB01E94", VA = "0xB01E94")]
		[IteratorStateMachine(typeof(<DoBobCycle>d__4))]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xB03238", Offset = "0xB03238", VA = "0xB03238")]
		public LerpCtrlBob()
		{
		}
	}
}
namespace ch.sycoforge.Decal.Demo
{
	[Token(Token = "0x20003CD")]
	public class AdvancedBulletHoles : MonoBehaviour
	{
		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EasyDecal DecalPrefab;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ImpactParticles;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CastRadius;

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xB039F0", Offset = "0xB039F0", VA = "0xB039F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xB03ACC", Offset = "0xB03ACC", VA = "0xB03ACC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xB03F38", Offset = "0xB03F38", VA = "0xB03F38")]
		public AdvancedBulletHoles()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class BasicBulletHoles : MonoBehaviour
	{
		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EasyDecal DecalPrefab;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool t;

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xB03F48", Offset = "0xB03F48", VA = "0xB03F48")]
		public void Start()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xB03FFC", Offset = "0xB03FFC", VA = "0xB03FFC")]
		public void Update()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xB0421C", Offset = "0xB0421C", VA = "0xB0421C")]
		public BasicBulletHoles()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public static class BezierUtil
	{
		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xB04224", Offset = "0xB04224", VA = "0xB04224")]
		public static List<Vector3> InterpolatePath(List<Vector3> path, int segments, float radius, float angleThreshold)
		{
			return null;
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xB04898", Offset = "0xB04898", VA = "0xB04898")]
		public static Vector3[] GetBezierApproximation(Vector3[] controlPoints, int outputSegmentCount)
		{
			return null;
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xB04960", Offset = "0xB04960", VA = "0xB04960")]
		public static Vector3 GetBezierPoint(float t, Vector3[] controlPoints, int index, int count)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003D0")]
	public static class LineUtil
	{
		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xB04A7C", Offset = "0xB04A7C", VA = "0xB04A7C")]
		public static void DrawPath(float thickness, Material material, List<Vector3> path)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xB04C08", Offset = "0xB04C08", VA = "0xB04C08")]
		private static void DrawLine(float thickness, Vector3 start, Vector3 end)
		{
		}
	}
	[Token(Token = "0x20003D1")]
	[RequireComponent(typeof(LineRenderer))]
	[RequireComponent(typeof(NavMeshAgent))]
	public class PathAgent : MonoBehaviour
	{
		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float PathThickness;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Distance from the ground.")]
		public float NormalPathOffset;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0.001f, 0.5f)]
		[Tooltip("Max radius between segments.")]
		public float Radius;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Discard segments when their angle is smaller than this value.")]
		public float AngleThreshold;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DrawGizmos;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EasyDecal TargetAimDecal;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject TargetPointDecalPrefab;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> path;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NavMeshAgent agent;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 decalOffset;

		[Token(Token = "0x4001311")]
		private const int MAXDISTANCE = 50;

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xB04EF8", Offset = "0xB04EF8", VA = "0xB04EF8")]
		private void Start()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xB04F90", Offset = "0xB04F90", VA = "0xB04F90")]
		private void Update()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xB05484", Offset = "0xB05484", VA = "0xB05484")]
		private void SetTarget(Ray mouseRay)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xB05024", Offset = "0xB05024", VA = "0xB05024")]
		private void CreatePath(Ray mouseRay)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xB0562C", Offset = "0xB0562C", VA = "0xB0562C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xB057AC", Offset = "0xB057AC", VA = "0xB057AC")]
		public PathAgent()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class ProxyRegister : MonoBehaviour
	{
		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StaticProxyCollection ProxyCollection;

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xB0588C", Offset = "0xB0588C", VA = "0xB0588C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xB0591C", Offset = "0xB0591C", VA = "0xB0591C")]
		public ProxyRegister()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class Sinoid : MonoBehaviour
	{
		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngularVelocity;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SineFreq;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Amplitude;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float accuTime;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startPos;

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xB05924", Offset = "0xB05924", VA = "0xB05924")]
		private void Start()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xB05954", Offset = "0xB05954", VA = "0xB05954")]
		private void Update()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xB05AF0", Offset = "0xB05AF0", VA = "0xB05AF0")]
		public Sinoid()
		{
		}
	}
}
namespace VRrigade
{
	[Token(Token = "0x20003D4")]
	public class Menu : MonoBehaviour
	{
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xB05B0C", Offset = "0xB05B0C", VA = "0xB05B0C")]
		public Menu()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class MenuButton : HitTarget
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string action;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool bWaitingForPlayers;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool bRotating;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float ROTATE_ANIMATION_TIME;

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xB05B14", Offset = "0xB05B14", VA = "0xB05B14", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xB06400", Offset = "0xB06400", VA = "0xB06400")]
		public void OnHitImpl(bool doAction = true)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xB06534", Offset = "0xB06534", VA = "0xB06534")]
		public void doButtonAction(bool bRemote = false)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xB06CD0", Offset = "0xB06CD0", VA = "0xB06CD0")]
		public void hideForWaitingPlayers(bool bValue)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xB0706C", Offset = "0xB0706C", VA = "0xB0706C")]
		private void rotateCompletedWait()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xB070E0", Offset = "0xB070E0", VA = "0xB070E0")]
		private void rotateCompleted()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xB07154", Offset = "0xB07154", VA = "0xB07154")]
		private void loadScene(bool bRemote)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xB06B78", Offset = "0xB06B78", VA = "0xB06B78")]
		private void hideHelpers()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xB07810", Offset = "0xB07810", VA = "0xB07810")]
		private void hideHandHelper(NVRHand hand)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xB078DC", Offset = "0xB078DC", VA = "0xB078DC")]
		public MenuButton()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class SceneManager : MonoBehaviour
	{
		[Token(Token = "0x20003DA")]
		[CompilerGenerated]
		private sealed class <waitForOnlinePlayerId>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400133F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManager <>4__this;

			[Token(Token = "0x170001AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600143F")]
				[Address(RVA = "0xB0B574", Offset = "0xB0B574", VA = "0xB0B574", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001441")]
				[Address(RVA = "0xB0B5BC", Offset = "0xB0B5BC", VA = "0xB0B5BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600143C")]
			[Address(RVA = "0xB087DC", Offset = "0xB087DC", VA = "0xB087DC")]
			[DebuggerHidden]
			public <waitForOnlinePlayerId>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x600143D")]
			[Address(RVA = "0xB0AE68", Offset = "0xB0AE68", VA = "0xB0AE68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600143E")]
			[Address(RVA = "0xB0AE6C", Offset = "0xB0AE6C", VA = "0xB0AE6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001440")]
			[Address(RVA = "0xB0B57C", Offset = "0xB0B57C", VA = "0xB0B57C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DB")]
		[CompilerGenerated]
		private sealed class <waitForOnlinePlayers>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <fTime>5__2;

			[Token(Token = "0x170001B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001445")]
				[Address(RVA = "0xB0BA00", Offset = "0xB0BA00", VA = "0xB0BA00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001447")]
				[Address(RVA = "0xB0BA48", Offset = "0xB0BA48", VA = "0xB0BA48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001442")]
			[Address(RVA = "0xB08864", Offset = "0xB08864", VA = "0xB08864")]
			[DebuggerHidden]
			public <waitForOnlinePlayers>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001443")]
			[Address(RVA = "0xB0B5C4", Offset = "0xB0B5C4", VA = "0xB0B5C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001444")]
			[Address(RVA = "0xB0B5C8", Offset = "0xB0B5C8", VA = "0xB0B5C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001446")]
			[Address(RVA = "0xB0BA08", Offset = "0xB0BA08", VA = "0xB0BA08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DC")]
		[CompilerGenerated]
		private sealed class <startGameCoroutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManager <>4__this;

			[Token(Token = "0x170001B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600144B")]
				[Address(RVA = "0xB0C1F8", Offset = "0xB0C1F8", VA = "0xB0C1F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600144D")]
				[Address(RVA = "0xB0C240", Offset = "0xB0C240", VA = "0xB0C240", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001448")]
			[Address(RVA = "0xB0888C", Offset = "0xB0888C", VA = "0xB0888C")]
			[DebuggerHidden]
			public <startGameCoroutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001449")]
			[Address(RVA = "0xB0BA50", Offset = "0xB0BA50", VA = "0xB0BA50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600144A")]
			[Address(RVA = "0xB0BA54", Offset = "0xB0BA54", VA = "0xB0BA54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600144C")]
			[Address(RVA = "0xB0C200", Offset = "0xB0C200", VA = "0xB0C200", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DD")]
		[CompilerGenerated]
		private sealed class <startMusicCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManager <>4__this;

			[Token(Token = "0x170001B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001451")]
				[Address(RVA = "0xB0C344", Offset = "0xB0C344", VA = "0xB0C344", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001453")]
				[Address(RVA = "0xB0C38C", Offset = "0xB0C38C", VA = "0xB0C38C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600144E")]
			[Address(RVA = "0xB08B38", Offset = "0xB08B38", VA = "0xB08B38")]
			[DebuggerHidden]
			public <startMusicCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x600144F")]
			[Address(RVA = "0xB0C248", Offset = "0xB0C248", VA = "0xB0C248", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001450")]
			[Address(RVA = "0xB0C24C", Offset = "0xB0C24C", VA = "0xB0C24C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001452")]
			[Address(RVA = "0xB0C34C", Offset = "0xB0C34C", VA = "0xB0C34C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DE")]
		[CompilerGenerated]
		private sealed class <stopMusicCoroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float fEnd;

			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneManager <>4__this;

			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <delta>5__2;

			[Token(Token = "0x170001B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001457")]
				[Address(RVA = "0xB0C524", Offset = "0xB0C524", VA = "0xB0C524", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001459")]
				[Address(RVA = "0xB0C56C", Offset = "0xB0C56C", VA = "0xB0C56C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001454")]
			[Address(RVA = "0xB08B60", Offset = "0xB08B60", VA = "0xB08B60")]
			[DebuggerHidden]
			public <stopMusicCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001455")]
			[Address(RVA = "0xB0C394", Offset = "0xB0C394", VA = "0xB0C394", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001456")]
			[Address(RVA = "0xB0C398", Offset = "0xB0C398", VA = "0xB0C398", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001458")]
			[Address(RVA = "0xB0C52C", Offset = "0xB0C52C", VA = "0xB0C52C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DF")]
		[CompilerGenerated]
		private sealed class <finalCountDownCoroutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManager <>4__this;

			[Token(Token = "0x4001353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <bContinue>5__2;

			[Token(Token = "0x170001B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600145D")]
				[Address(RVA = "0xB0CAF0", Offset = "0xB0CAF0", VA = "0xB0CAF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600145F")]
				[Address(RVA = "0xB0CB38", Offset = "0xB0CB38", VA = "0xB0CB38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600145A")]
			[Address(RVA = "0xB08F74", Offset = "0xB08F74", VA = "0xB08F74")]
			[DebuggerHidden]
			public <finalCountDownCoroutine>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x600145B")]
			[Address(RVA = "0xB0C574", Offset = "0xB0C574", VA = "0xB0C574", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600145C")]
			[Address(RVA = "0xB0C578", Offset = "0xB0C578", VA = "0xB0C578", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600145E")]
			[Address(RVA = "0xB0CAF8", Offset = "0xB0CAF8", VA = "0xB0CAF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003E1")]
		[CompilerGenerated]
		private sealed class <missionAccomplishedCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManager <>4__this;

			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Newspaper <newspaper>5__2;

			[Token(Token = "0x170001BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001465")]
				[Address(RVA = "0xB0CE88", Offset = "0xB0CE88", VA = "0xB0CE88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001467")]
				[Address(RVA = "0xB0CED0", Offset = "0xB0CED0", VA = "0xB0CED0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001462")]
			[Address(RVA = "0xB0A2B8", Offset = "0xB0A2B8", VA = "0xB0A2B8")]
			[DebuggerHidden]
			public <missionAccomplishedCoroutine>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x6001463")]
			[Address(RVA = "0xB0CB5C", Offset = "0xB0CB5C", VA = "0xB0CB5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001464")]
			[Address(RVA = "0xB0CB60", Offset = "0xB0CB60", VA = "0xB0CB60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001466")]
			[Address(RVA = "0xB0CE90", Offset = "0xB0CE90", VA = "0xB0CE90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003E2")]
		[CompilerGenerated]
		private sealed class <ChangePlayerPositionCoroutine>d__79 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string strPosition;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <position>5__2;

			[Token(Token = "0x170001BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600146B")]
				[Address(RVA = "0xB0D198", Offset = "0xB0D198", VA = "0xB0D198", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600146D")]
				[Address(RVA = "0xB0D1E0", Offset = "0xB0D1E0", VA = "0xB0D1E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001468")]
			[Address(RVA = "0xB0A934", Offset = "0xB0A934", VA = "0xB0A934")]
			[DebuggerHidden]
			public <ChangePlayerPositionCoroutine>d__79(int <>1__state)
			{
			}

			[Token(Token = "0x6001469")]
			[Address(RVA = "0xB0CED8", Offset = "0xB0CED8", VA = "0xB0CED8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600146A")]
			[Address(RVA = "0xB0CEDC", Offset = "0xB0CEDC", VA = "0xB0CEDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600146C")]
			[Address(RVA = "0xB0D1A0", Offset = "0xB0D1A0", VA = "0xB0D1A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SceneManager instance;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weaponTakeableProbability;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] gameElements;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float totalTime;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int currentScene;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine stopMusic;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource music;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource tictac;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public SceneData[] scenes;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public ThiefPoliceController[] teammates;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SceneHide[] sceneHides;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NVRPlayer player;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_bLockMusic;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float initTime;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameScene currentGameScene;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool countDownEnable;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool endGame;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent timeReached;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string localPlayerId;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool testPosition;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<string, Transform> m_transformCache;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ReadySetGo _readySetGo;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameOver _gameOver;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_iPoliceStation;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine finalCountdown;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int targetTime;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_bLockFire;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		private bool m_bLockFireOutOfPlayArea;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SumalabInvoke.SumalabInvokeHandler checkFinishHandler;

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xB07A40", Offset = "0xB07A40", VA = "0xB07A40")]
		public static SceneManager getInstance()
		{
			return null;
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xB07A88", Offset = "0xB07A88", VA = "0xB07A88")]
		public ReadySetGo getReadySetGo()
		{
			return null;
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xB07B80", Offset = "0xB07B80", VA = "0xB07B80")]
		public GameOver getGameOver()
		{
			return null;
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xB07CAC", Offset = "0xB07CAC", VA = "0xB07CAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xB0819C", Offset = "0xB0819C", VA = "0xB0819C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xB08440", Offset = "0xB08440", VA = "0xB08440")]
		public bool isInPoliceStation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xB08290", Offset = "0xB08290", VA = "0xB08290")]
		private void startGame()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xB08558", Offset = "0xB08558", VA = "0xB08558")]
		private Transform getStartingPosition()
		{
			return null;
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xB08774", Offset = "0xB08774", VA = "0xB08774")]
		[IteratorStateMachine(typeof(<waitForOnlinePlayerId>d__32))]
		private IEnumerator waitForOnlinePlayerId()
		{
			return null;
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xB08804", Offset = "0xB08804", VA = "0xB08804")]
		[IteratorStateMachine(typeof(<waitForOnlinePlayers>d__33))]
		private IEnumerator waitForOnlinePlayers()
		{
			return null;
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xB084F0", Offset = "0xB084F0", VA = "0xB084F0")]
		[IteratorStateMachine(typeof(<startGameCoroutine>d__34))]
		private IEnumerator startGameCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xB088B4", Offset = "0xB088B4", VA = "0xB088B4")]
		private void OnRecenterEdit()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xB0898C", Offset = "0xB0898C", VA = "0xB0898C")]
		private void startFirstScene()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xB089C0", Offset = "0xB089C0", VA = "0xB089C0")]
		public void playMusic(float fTime = 40f, float fEnd = 10f)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xB08A98", Offset = "0xB08A98", VA = "0xB08A98")]
		public void scheduleStopMusic(float fEnd = 11f)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xB08A30", Offset = "0xB08A30", VA = "0xB08A30")]
		[IteratorStateMachine(typeof(<startMusicCoroutine>d__39))]
		private IEnumerator startMusicCoroutine(float fEnd)
		{
			return null;
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xB08AC0", Offset = "0xB08AC0", VA = "0xB08AC0")]
		[IteratorStateMachine(typeof(<stopMusicCoroutine>d__40))]
		private IEnumerator stopMusicCoroutine(float fEnd)
		{
			return null;
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xB08B88", Offset = "0xB08B88", VA = "0xB08B88")]
		public void setInitTime()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xB08C28", Offset = "0xB08C28", VA = "0xB08C28")]
		public void disableGameElements(bool state)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xB08C94", Offset = "0xB08C94", VA = "0xB08C94")]
		public void stopTime()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xB08CA0", Offset = "0xB08CA0", VA = "0xB08CA0")]
		private void missionFailedTimeOut()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xB08BC0", Offset = "0xB08BC0", VA = "0xB08BC0")]
		[IteratorStateMachine(typeof(<finalCountDownCoroutine>d__47))]
		private IEnumerator finalCountDownCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xB08F9C", Offset = "0xB08F9C", VA = "0xB08F9C")]
		public CommonCharacterController[] getSceneCharacters()
		{
			return null;
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xB08DA4", Offset = "0xB08DA4", VA = "0xB08DA4")]
		public void explodeBombs()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xB08FE8", Offset = "0xB08FE8", VA = "0xB08FE8")]
		private void explodeBombsKillAll()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xB09214", Offset = "0xB09214", VA = "0xB09214")]
		public int getLifes()
		{
			return default(int);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xB0929C", Offset = "0xB0929C", VA = "0xB0929C")]
		public void startSceneForDebug(string strScene)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xB09368", Offset = "0xB09368", VA = "0xB09368")]
		public void showScene(int sceneId)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xB0953C", Offset = "0xB0953C", VA = "0xB0953C")]
		private void updateSceneHide(int sceneId)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xB09634", Offset = "0xB09634", VA = "0xB09634")]
		public SceneData getCurrentScene()
		{
			return null;
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xB06BEC", Offset = "0xB06BEC", VA = "0xB06BEC")]
		public void setReprojectionCamera(bool enable, bool bShowTime = false, bool bFade = true)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xB0968C", Offset = "0xB0968C", VA = "0xB0968C")]
		public void setPlayer(Vector3 position, Vector3 rotation, bool localRecenter = false)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xB09740", Offset = "0xB09740", VA = "0xB09740")]
		public void lockPlayer(bool lockEnable)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xB097A4", Offset = "0xB097A4", VA = "0xB097A4")]
		public void lockPlayerFireOutOfPlayArea(bool bValue)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xB06780", Offset = "0xB06780", VA = "0xB06780")]
		public void lockPlayerFire(bool lockFire, bool unvulnerable = false, bool disableOnHit = false)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xB098FC", Offset = "0xB098FC", VA = "0xB098FC")]
		private bool isSpectator()
		{
			return default(bool);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xB07664", Offset = "0xB07664", VA = "0xB07664")]
		public void loadScene(string sceneName)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xB09A0C", Offset = "0xB09A0C", VA = "0xB09A0C")]
		private void loadSceneImpl(string sceneName)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xB09A98", Offset = "0xB09A98", VA = "0xB09A98")]
		public void restartGame()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xB09B7C", Offset = "0xB09B7C", VA = "0xB09B7C")]
		public void backToBase()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xB09C30", Offset = "0xB09C30", VA = "0xB09C30")]
		public void gameOver(WalkieTalkie.CommunicationEvent gameOverEvent = WalkieTalkie.CommunicationEvent.game_over)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xB0A06C", Offset = "0xB0A06C", VA = "0xB0A06C")]
		public void missionAccomplished()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xB0A250", Offset = "0xB0A250", VA = "0xB0A250")]
		[IteratorStateMachine(typeof(<missionAccomplishedCoroutine>d__70))]
		private IEnumerator missionAccomplishedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xB0A2E0", Offset = "0xB0A2E0", VA = "0xB0A2E0")]
		public void bulletTime(float fBulletTime, bool bShowBulletTimeScreen = false)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xB0A380", Offset = "0xB0A380", VA = "0xB0A380")]
		public void cancelBulletTime()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xB0A49C", Offset = "0xB0A49C", VA = "0xB0A49C")]
		public void addLife()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xB0A56C", Offset = "0xB0A56C", VA = "0xB0A56C")]
		public void deactivateDeadBodys()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xB0A04C", Offset = "0xB0A04C", VA = "0xB0A04C")]
		public float getTimePlayed()
		{
			return default(float);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xB0A69C", Offset = "0xB0A69C", VA = "0xB0A69C")]
		public float getTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xB0A6F4", Offset = "0xB0A6F4", VA = "0xB0A6F4")]
		public Transform getTransformFromCache(string strName)
		{
			return null;
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xB0A8AC", Offset = "0xB0A8AC", VA = "0xB0A8AC")]
		public void ChangePlayerPosition(string strPosition)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xB0A8CC", Offset = "0xB0A8CC", VA = "0xB0A8CC")]
		[IteratorStateMachine(typeof(<ChangePlayerPositionCoroutine>d__79))]
		private IEnumerator ChangePlayerPositionCoroutine(string strPosition)
		{
			return null;
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xB0A95C", Offset = "0xB0A95C", VA = "0xB0A95C")]
		public void registerOnFireGameOver()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xB0AA44", Offset = "0xB0AA44", VA = "0xB0AA44")]
		private void OnFire()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xB0AAF4", Offset = "0xB0AAF4", VA = "0xB0AAF4")]
		public void checkOnlineFinished()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xB0ABB0", Offset = "0xB0ABB0", VA = "0xB0ABB0")]
		private void checkOnlineFinishedCoroutine()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xB0ACE8", Offset = "0xB0ACE8", VA = "0xB0ACE8")]
		public SceneManager()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public enum GameScene
	{
		[Token(Token = "0x400135F")]
		PoliceStation,
		[Token(Token = "0x4001360")]
		Bank,
		[Token(Token = "0x4001361")]
		Harbor,
		[Token(Token = "0x4001362")]
		Office,
		[Token(Token = "0x4001363")]
		PoliceStationNetwork
	}
}
namespace VRigade.online
{
	[Token(Token = "0x20003E4")]
	public class NetworkCharacterController : MonoBehaviour, RemoteCharacterController
	{
		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetworkCharacterProxy networkCharacterProxy;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommonCharacterController m_character;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SumalabInvoke.SumalabInvokeHandler executeActionHandler;

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xB0D1E8", Offset = "0xB0D1E8", VA = "0xB0D1E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xB0D1EC", Offset = "0xB0D1EC", VA = "0xB0D1EC")]
		public void init()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xB0D448", Offset = "0xB0D448", VA = "0xB0D448")]
		private CommonCharacterController GetCharacter()
		{
			return null;
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xB0D4DC", Offset = "0xB0D4DC", VA = "0xB0D4DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xB0D3F8", Offset = "0xB0D3F8", VA = "0xB0D3F8")]
		public bool isRemoteMaster()
		{
			return default(bool);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xB0D4E0", Offset = "0xB0D4E0", VA = "0xB0D4E0")]
		public bool isConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xB0D52C", Offset = "0xB0D52C", VA = "0xB0D52C")]
		public bool isRemoteProxyActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xB0D58C", Offset = "0xB0D58C", VA = "0xB0D58C")]
		public bool CheckOnHitAllowed(Bullet bullet)
		{
			return default(bool);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xB0D6C4", Offset = "0xB0D6C4", VA = "0xB0D6C4", Slot = "4")]
		public void OnHit(Bullet bullet, Ray ray, Rigidbody rb)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xB0DB08", Offset = "0xB0DB08", VA = "0xB0DB08", Slot = "5")]
		public void ExecuteAction(int currentAction)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xB0E33C", Offset = "0xB0E33C", VA = "0xB0E33C", Slot = "6")]
		public void sendCover(bool v)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xB0E500", Offset = "0xB0E500", VA = "0xB0E500", Slot = "7")]
		public void sendSetTarget(Vector3 v)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xB0E6DC", Offset = "0xB0E6DC", VA = "0xB0E6DC")]
		public void addRemoteTargets(List<AimTarget> targetsUpdated)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xB0EA80", Offset = "0xB0EA80", VA = "0xB0EA80", Slot = "8")]
		public void sendShowWeaponTakeable(WeaponTakeable weaponTakeable, string name)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xB0EBA4", Offset = "0xB0EBA4", VA = "0xB0EBA4")]
		public Transform getPlayerTarget()
		{
			return null;
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xB0EEC4", Offset = "0xB0EEC4", VA = "0xB0EEC4", Slot = "9")]
		public void sendPlayPath()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xB0F040", Offset = "0xB0F040", VA = "0xB0F040")]
		internal void stopActions()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xB0F064", Offset = "0xB0F064", VA = "0xB0F064")]
		public NetworkCharacterController()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class NetworkCharacterProxy : MonoBehaviourPun, IPunObservable, RemoteCharacterController
	{
		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommonCharacterController m_character;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string publicName;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool bDebugProxyHostNotFound;

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xB0F0E0", Offset = "0xB0F0E0", VA = "0xB0F0E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xB0F1D0", Offset = "0xB0F1D0", VA = "0xB0F1D0")]
		private void searchProxyHost()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xB0F3C4", Offset = "0xB0F3C4", VA = "0xB0F3C4")]
		private void assignProxy()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xB0F49C", Offset = "0xB0F49C", VA = "0xB0F49C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xB0F4A0", Offset = "0xB0F4A0", VA = "0xB0F4A0")]
		public void sendOnHit(string bulletId, Ray ray, string colliderName)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xB0F85C", Offset = "0xB0F85C", VA = "0xB0F85C")]
		[PunRPC]
		private void OnHit(string bulletId, Vector3 direction, string colliderName)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xB0E3F4", Offset = "0xB0E3F4", VA = "0xB0E3F4", Slot = "7")]
		public void sendCover(bool cover)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xB0FE64", Offset = "0xB0FE64", VA = "0xB0FE64")]
		[PunRPC]
		private void Cover(bool cover)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xB0E5B4", Offset = "0xB0E5B4", VA = "0xB0E5B4", Slot = "8")]
		public void sendSetTarget(Vector3 v)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xB0FFEC", Offset = "0xB0FFEC", VA = "0xB0FFEC")]
		private bool isCharacterReady(bool bCheckAction = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xB10158", Offset = "0xB10158", VA = "0xB10158")]
		[PunRPC]
		private void SetTarget(Vector3 target)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xB1030C", Offset = "0xB1030C", VA = "0xB1030C")]
		public void sendExecuteNewAction(int index)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xB104F8", Offset = "0xB104F8", VA = "0xB104F8")]
		[PunRPC]
		private void ExecuteNewAction(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xB106F0", Offset = "0xB106F0", VA = "0xB106F0", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xB0F05C", Offset = "0xB0F05C", VA = "0xB0F05C")]
		internal void stopActions()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xB0D928", Offset = "0xB0D928", VA = "0xB0D928", Slot = "5")]
		public void OnHit(Bullet bullet, Ray ray, Rigidbody rb)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xB0E338", Offset = "0xB0E338", VA = "0xB0E338", Slot = "6")]
		public void ExecuteAction(int currentAction)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xB0EB34", Offset = "0xB0EB34", VA = "0xB0EB34", Slot = "9")]
		public void sendShowWeaponTakeable(WeaponTakeable weaponTakeable, string name)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xB0EF78", Offset = "0xB0EF78", VA = "0xB0EF78", Slot = "10")]
		public void sendPlayPath()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xB106F4", Offset = "0xB106F4", VA = "0xB106F4")]
		[PunRPC]
		private void PlayPath()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xB108D0", Offset = "0xB108D0", VA = "0xB108D0")]
		public NetworkCharacterProxy()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class NetworkController : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20003F0")]
		[CompilerGenerated]
		private sealed class <StartGameCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkController <>4__this;

			[Token(Token = "0x40013A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool bScene;

			[Token(Token = "0x40013AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <strCharacterId>5__2;

			[Token(Token = "0x170001BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014F1")]
				[Address(RVA = "0xB17588", Offset = "0xB17588", VA = "0xB17588", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014F3")]
				[Address(RVA = "0xB175D0", Offset = "0xB175D0", VA = "0xB175D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014EE")]
			[Address(RVA = "0xB1737C", Offset = "0xB1737C", VA = "0xB1737C")]
			[DebuggerHidden]
			public <StartGameCoroutine>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x60014EF")]
			[Address(RVA = "0xB173A4", Offset = "0xB173A4", VA = "0xB173A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014F0")]
			[Address(RVA = "0xB173A8", Offset = "0xB173A8", VA = "0xB173A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014F2")]
			[Address(RVA = "0xB17590", Offset = "0xB17590", VA = "0xB17590", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400137C")]
		private const string ROOM_FULL = "online_roomfull";

		[Token(Token = "0x400137D")]
		private const string ROOM_PLAYING = "online_roomplaying";

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool automaticallyLoadLevels;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> unassignedSwatNames;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetworkController Instance;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isConnectingToRoom;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool isConnectedToRoom;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool isConnectingToMaster;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string gameVersion;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private byte maxPlayersPerRoom;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int expectedOnlinePlayers;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string currentRoomName;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string currentRoomCode;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SWAT_0;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string SWAT_1;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string SWAT_2;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string PREFIX_ROOM_NAME_REPLY;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string ROOM_CODE;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string ROOM_RANDOM;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string ROOM_CLOSED;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TypedLobby _defaultLobby;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TypedLobby _randomLobby;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string SWAT_NAME;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool realtimeMultiplayer;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private TypedLobby currentLobby;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string privateRandomNameChars;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float onPauseTimestamp;

		[Token(Token = "0x14000017")]
		public event Action OnGameConnected
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0xB109D0", Offset = "0xB109D0", VA = "0xB109D0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0xB10A6C", Offset = "0xB10A6C", VA = "0xB10A6C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<DisconnectCause> OnGameDisconnected
		{
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0xB10B08", Offset = "0xB10B08", VA = "0xB10B08")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xB10BB8", Offset = "0xB10BB8", VA = "0xB10BB8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action OnGameJoinedRoom
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0xB10C68", Offset = "0xB10C68", VA = "0xB10C68")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xB10D04", Offset = "0xB10D04", VA = "0xB10D04")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action<string> OnGameJoinRoomError
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0xB10DA0", Offset = "0xB10DA0", VA = "0xB10DA0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0xB10E50", Offset = "0xB10E50", VA = "0xB10E50")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action OnGamePlayerEnteredRoom
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0xB10F00", Offset = "0xB10F00", VA = "0xB10F00")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xB10F9C", Offset = "0xB10F9C", VA = "0xB10F9C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action OnTeammateDisconnected
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0xB11038", Offset = "0xB11038", VA = "0xB11038")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xB110D4", Offset = "0xB110D4", VA = "0xB110D4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xB11170", Offset = "0xB11170", VA = "0xB11170")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xB114DC", Offset = "0xB114DC", VA = "0xB114DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xB11544", Offset = "0xB11544", VA = "0xB11544")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xB11548", Offset = "0xB11548", VA = "0xB11548")]
		private void addPlayer(Player player)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xB11ABC", Offset = "0xB11ABC", VA = "0xB11ABC")]
		private void removePlayer(Player player)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xB11BCC", Offset = "0xB11BCC", VA = "0xB11BCC")]
		private void populateUnassignedSwatNames()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xB113DC", Offset = "0xB113DC", VA = "0xB113DC")]
		private void cleanPlayers()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xB0D674", Offset = "0xB0D674", VA = "0xB0D674")]
		public bool isConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xB11DAC", Offset = "0xB11DAC", VA = "0xB11DAC")]
		public bool isMasterClient()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xB11E08", Offset = "0xB11E08", VA = "0xB11E08")]
		public void Connect()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xB11F10", Offset = "0xB11F10", VA = "0xB11F10")]
		private void prepareConnectionAndConnect()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xB1205C", Offset = "0xB1205C", VA = "0xB1205C")]
		private void errorConnect(string str)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xB11F14", Offset = "0xB11F14", VA = "0xB11F14")]
		private void connectImpl()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xB07614", Offset = "0xB07614", VA = "0xB07614")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xB1215C", Offset = "0xB1215C", VA = "0xB1215C", Slot = "44")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xB1235C", Offset = "0xB1235C", VA = "0xB1235C", Slot = "37")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xB12A54", Offset = "0xB12A54", VA = "0xB12A54")]
		public void setDefaultNickName(string name)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xB12CF4", Offset = "0xB12CF4", VA = "0xB12CF4")]
		public void setNickName(string name)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xB12DC0", Offset = "0xB12DC0", VA = "0xB12DC0")]
		public void JoinRandomRoom()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xB0BFB8", Offset = "0xB0BFB8", VA = "0xB0BFB8")]
		public void JoinReplyRoom()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xB13060", Offset = "0xB13060", VA = "0xB13060", Slot = "43")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xB13108", Offset = "0xB13108", VA = "0xB13108")]
		public void CreateRoom([Optional] string strName, [Optional] string strRoomCode, [Optional] TypedLobby lobby, bool bJoin = true)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xB139B0", Offset = "0xB139B0", VA = "0xB139B0")]
		public void JoinRoom(string strRoomCode)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xB13CA0", Offset = "0xB13CA0", VA = "0xB13CA0", Slot = "34")]
		public override void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xB13B5C", Offset = "0xB13B5C", VA = "0xB13B5C")]
		public void FindPrivateRoom(string strRoomCode)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xB118F4", Offset = "0xB118F4", VA = "0xB118F4")]
		private bool isRoomOpen(RoomInfo room)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xB13EB4", Offset = "0xB13EB4", VA = "0xB13EB4", Slot = "39")]
		public override void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xB14500", Offset = "0xB14500", VA = "0xB14500", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xB1493C", Offset = "0xB1493C", VA = "0xB1493C", Slot = "33")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xB14A8C", Offset = "0xB14A8C", VA = "0xB14A8C", Slot = "32")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xB12F14", Offset = "0xB12F14", VA = "0xB12F14")]
		public void LeaveRoom()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xB12104", Offset = "0xB12104", VA = "0xB12104")]
		private void LogFeedback(string message)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xB06114", Offset = "0xB06114", VA = "0xB06114")]
		public void CloseRoomForNewPlayers(int expectedPlayers = -1)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xB13DA4", Offset = "0xB13DA4", VA = "0xB13DA4")]
		private bool getBoolProperty(RoomInfo room, string property)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xB14C78", Offset = "0xB14C78", VA = "0xB14C78")]
		public string generatePrivateRoomName()
		{
			return null;
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xB14DB4", Offset = "0xB14DB4", VA = "0xB14DB4", Slot = "41")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xB11970", Offset = "0xB11970", VA = "0xB11970")]
		public static string GetPlayerSwatName(Player player)
		{
			return null;
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xB11A34", Offset = "0xB11A34", VA = "0xB11A34")]
		public static void RemovePlayerSwatName(Player player)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xB14FC4", Offset = "0xB14FC4", VA = "0xB14FC4", Slot = "42")]
		public override void OnPlayerLeftRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xB0B550", Offset = "0xB0B550", VA = "0xB0B550")]
		public void StartGame(bool bScene = true)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xB150C8", Offset = "0xB150C8", VA = "0xB150C8")]
		[IteratorStateMachine(typeof(<StartGameCoroutine>d__84))]
		private IEnumerator StartGameCoroutine(bool bScene)
		{
			return null;
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xB15144", Offset = "0xB15144", VA = "0xB15144")]
		private void StartNetworkControllers(bool bScene)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xB060C4", Offset = "0xB060C4", VA = "0xB060C4")]
		public static bool isOnlineGame()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xB15320", Offset = "0xB15320", VA = "0xB15320")]
		public void ChangeMasterClientIfAvailable()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xB15680", Offset = "0xB15680", VA = "0xB15680", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xB12558", Offset = "0xB12558", VA = "0xB12558")]
		public void setOnlinePlayerBecomesMainClient(bool bValue)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xB15C18", Offset = "0xB15C18", VA = "0xB15C18")]
		private void recalculateUnassignedSwatNames()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xB122BC", Offset = "0xB122BC", VA = "0xB122BC")]
		private void sendGameClosedError()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xB14460", Offset = "0xB14460", VA = "0xB14460")]
		private void sendGamePlayingError()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xB15DC8", Offset = "0xB15DC8", VA = "0xB15DC8")]
		public int getRandomSeed()
		{
			return default(int);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xB15E4C", Offset = "0xB15E4C", VA = "0xB15E4C", Slot = "30")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xB15EEC", Offset = "0xB15EEC", VA = "0xB15EEC")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xB16030", Offset = "0xB16030", VA = "0xB16030")]
		public NetworkController()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class NetworkFactory : MonoBehaviour
	{
		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetworkFactory Instance;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject OnlinePlayer;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject OnlinePlayerPart;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject NetworkBulletController;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject NetworkCharacterProxy;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject NetworkWeaponTakeableController;

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xB175D8", Offset = "0xB175D8", VA = "0xB175D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xB17624", Offset = "0xB17624", VA = "0xB17624")]
		private void Start()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xB17628", Offset = "0xB17628", VA = "0xB17628")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xB1762C", Offset = "0xB1762C", VA = "0xB1762C")]
		public NetworkFactory()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class OnlinePlayer : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x20003F3")]
		[CompilerGenerated]
		private sealed class <ShowRemotePlayer>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001516")]
				[Address(RVA = "0xB1A9F4", Offset = "0xB1A9F4", VA = "0xB1A9F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001518")]
				[Address(RVA = "0xB1AA3C", Offset = "0xB1AA3C", VA = "0xB1AA3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001513")]
			[Address(RVA = "0xB18860", Offset = "0xB18860", VA = "0xB18860")]
			[DebuggerHidden]
			public <ShowRemotePlayer>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001514")]
			[Address(RVA = "0xB1A9BC", Offset = "0xB1A9BC", VA = "0xB1A9BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001515")]
			[Address(RVA = "0xB1A9C0", Offset = "0xB1A9C0", VA = "0xB1A9C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001517")]
			[Address(RVA = "0xB1A9FC", Offset = "0xB1A9FC", VA = "0xB1A9FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AimTarget aimTarget;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject m_head;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject m_leftHand;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_rightHand;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string PREFIX;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ready;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static OnlinePlayer myLocalPlayer;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string localId;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<OnlinePlayer> players;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool allPlayersDead;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshPro nickName;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshPro lifes;

		[Token(Token = "0x170001C0")]
		public bool isAlive
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0xB17634", Offset = "0xB17634", VA = "0xB17634")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0xB17650", Offset = "0xB17650", VA = "0xB17650")]
			set
			{
			}
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xB17670", Offset = "0xB17670", VA = "0xB17670")]
		private void Start()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xB17A40", Offset = "0xB17A40", VA = "0xB17A40")]
		private void Update()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xB17C20", Offset = "0xB17C20", VA = "0xB17C20")]
		public static void cleanPlayers()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xB17674", Offset = "0xB17674", VA = "0xB17674")]
		private void initializeParts()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xB18800", Offset = "0xB18800", VA = "0xB18800")]
		[IteratorStateMachine(typeof(<ShowRemotePlayer>d__20))]
		private IEnumerator ShowRemotePlayer()
		{
			return null;
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xB18888", Offset = "0xB18888", VA = "0xB18888")]
		public void disableOnlinePlayer()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xB18AB0", Offset = "0xB18AB0", VA = "0xB18AB0", Slot = "4")]
		private void Photon.Pun.IPunObservable.OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xB18030", Offset = "0xB18030", VA = "0xB18030")]
		private void initializeVRParts()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xB17ED4", Offset = "0xB17ED4", VA = "0xB17ED4")]
		private void disableRemoteParts()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xB18AB4", Offset = "0xB18AB4", VA = "0xB18AB4")]
		public void setReady()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xB18B7C", Offset = "0xB18B7C", VA = "0xB18B7C")]
		[PunRPC]
		private void SetReadyRPC()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xB18C2C", Offset = "0xB18C2C", VA = "0xB18C2C")]
		public void sendPlayerDead()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xB18E68", Offset = "0xB18E68", VA = "0xB18E68")]
		[PunRPC]
		private void PlayerDead()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xB1906C", Offset = "0xB1906C", VA = "0xB1906C")]
		public void sendBeginInteraction(WeaponModel model, bool isRightHand, Vector3 localPosition, Quaternion localRotation)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xB19370", Offset = "0xB19370", VA = "0xB19370")]
		[PunRPC]
		public void BeginInteraction(WeaponModel model, bool isRightHand, Vector3 localPosition, Quaternion localRotation)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xB19A7C", Offset = "0xB19A7C", VA = "0xB19A7C")]
		public void sendEndInteraction(bool isRightHand)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xB19BF8", Offset = "0xB19BF8", VA = "0xB19BF8")]
		[PunRPC]
		public void EndInteraction(string strPlayer, bool isRightHand)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xB19E50", Offset = "0xB19E50", VA = "0xB19E50")]
		public static bool allPlayersReady()
		{
			return default(bool);
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xB1A09C", Offset = "0xB1A09C", VA = "0xB1A09C")]
		public static bool atLeastOnePlayerAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xB1A330", Offset = "0xB1A330", VA = "0xB1A330")]
		public static int getPlayersAlive()
		{
			return default(int);
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xB1A4B8", Offset = "0xB1A4B8", VA = "0xB1A4B8")]
		public static OnlinePlayer getPlayer(string strName)
		{
			return null;
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xB1A664", Offset = "0xB1A664", VA = "0xB1A664")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xB1A8C8", Offset = "0xB1A8C8", VA = "0xB1A8C8")]
		public OnlinePlayer()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class OnlinePlayerPart : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject objectViewed;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody cachedRigidbody;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPosition;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion lastRotation;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 newPosition;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion newRotation;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lastTime;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool dirty;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private OnlinePlayer player;

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xB1AA44", Offset = "0xB1AA44", VA = "0xB1AA44")]
		private void Start()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xB1AE44", Offset = "0xB1AE44", VA = "0xB1AE44")]
		private void Update()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xB1B0C4", Offset = "0xB1B0C4", VA = "0xB1B0C4")]
		internal static Vector3 GetAngularVelocity(Quaternion previousRotation, Quaternion newRotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xB1B208", Offset = "0xB1B208", VA = "0xB1B208", Slot = "4")]
		private void Photon.Pun.IPunObservable.OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xB1B648", Offset = "0xB1B648", VA = "0xB1B648")]
		public OnlinePlayerPart()
		{
		}
	}
}
namespace CrisisVRigade
{
	[Token(Token = "0x20003F5")]
	public class Settings : MonoBehaviour
	{
		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReloadMode reloadMode;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHeight playerHeight;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WalkieTalkieSettings walkieTalkieSettings;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ButtonConfig buttonConfig;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LanguageSettings languageSettings;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIButton toggleSettingsMenu;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIButton closeSettingsMenu;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject settingsMenu;

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xB1B650", Offset = "0xB1B650", VA = "0xB1B650")]
		private void Start()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xB1B8E8", Offset = "0xB1B8E8", VA = "0xB1B8E8")]
		private void ToggleSettingsMenu(UIButton button)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xB1B9F8", Offset = "0xB1B9F8", VA = "0xB1B9F8")]
		private void OpenSettingsMenu()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xB1B92C", Offset = "0xB1B92C", VA = "0xB1B92C")]
		private void CloseSettingsMenu(UIButton button)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xB1B75C", Offset = "0xB1B75C", VA = "0xB1B75C")]
		private void initSettings()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xB1BAB8", Offset = "0xB1BAB8", VA = "0xB1BAB8")]
		public void saveSettings()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xB1BE08", Offset = "0xB1BE08", VA = "0xB1BE08")]
		public Settings()
		{
		}
	}
}
namespace CrisisVRigade.UI
{
	[Token(Token = "0x20003F6")]
	public class Keyboard : MonoBehaviour
	{
		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyboardScreen screen;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent okEvent;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent cancelEvent;

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xB1BE10", Offset = "0xB1BE10", VA = "0xB1BE10")]
		public void show()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xB1BF34", Offset = "0xB1BF34", VA = "0xB1BF34")]
		public void hide()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xB1BF80", Offset = "0xB1BF80", VA = "0xB1BF80")]
		public void keyPressed(KeyboardKey key)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xB1C158", Offset = "0xB1C158", VA = "0xB1C158")]
		public Keyboard()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public enum KeyBoardKeyFunction
	{
		[Token(Token = "0x40013D5")]
		None,
		[Token(Token = "0x40013D6")]
		Backspace,
		[Token(Token = "0x40013D7")]
		Ok,
		[Token(Token = "0x40013D8")]
		Cancel
	}
	[Token(Token = "0x20003F8")]
	public class KeyboardKey : HitTarget, IKeyboardPointable
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyBoardKeyFunction function;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Keyboard keyboard;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string character;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 initScale;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 initPosition;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 initUp;

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xB1C1DC", Offset = "0xB1C1DC", VA = "0xB1C1DC")]
		public void Awake()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xB1C290", Offset = "0xB1C290", VA = "0xB1C290", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xB1C40C", Offset = "0xB1C40C", VA = "0xB1C40C")]
		public string getCharacter()
		{
			return null;
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xB1C414", Offset = "0xB1C414", VA = "0xB1C414", Slot = "7")]
		public void OnHoverAnimation(bool enable)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xB1C470", Offset = "0xB1C470", VA = "0xB1C470")]
		public KeyboardKey()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class KeyboardScreen : MonoBehaviour
	{
		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DEFAULT_TEXT;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string BLANK_CHAR;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro textScreen;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int characterLimit;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int characterMinimum;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool fillCharacters;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool caretEnabled;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float caretBlinkTime;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool bCaretActive;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float lastCaretChange;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string currentText;

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xB1C018", Offset = "0xB1C018", VA = "0xB1C018")]
		public bool writeCharacter(string character)
		{
			return default(bool);
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xB1C0EC", Offset = "0xB1C0EC", VA = "0xB1C0EC")]
		public void deleteCharacter()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xB1C4A4", Offset = "0xB1C4A4", VA = "0xB1C4A4")]
		private void fillDefaultCharacters()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xB1C130", Offset = "0xB1C130", VA = "0xB1C130")]
		public bool isComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xB1BE68", Offset = "0xB1BE68", VA = "0xB1BE68")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xB1C5CC", Offset = "0xB1C5CC", VA = "0xB1C5CC")]
		public string getText()
		{
			return null;
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xB1C5D4", Offset = "0xB1C5D4", VA = "0xB1C5D4")]
		public void setText(string str)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xB1C670", Offset = "0xB1C670", VA = "0xB1C670")]
		public void blinkText(bool blink)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xB1C6D8", Offset = "0xB1C6D8", VA = "0xB1C6D8")]
		public void enableCaret(bool bValue)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xB1C6E4", Offset = "0xB1C6E4", VA = "0xB1C6E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xB1C478", Offset = "0xB1C478", VA = "0xB1C478")]
		private void hideCaret()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xB1C55C", Offset = "0xB1C55C", VA = "0xB1C55C")]
		private void showCaret()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xB1C764", Offset = "0xB1C764", VA = "0xB1C764")]
		public KeyboardScreen()
		{
		}
	}
}
namespace CrisisVRigade2
{
	[Token(Token = "0x20003FA")]
	public class CV2_BHapticsManager : MonoBehaviour
	{
		[Token(Token = "0x20003FB")]
		[CompilerGenerated]
		private sealed class <HeartBeatCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CV2_BHapticsManager <>4__this;

			[Token(Token = "0x170001C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600154B")]
				[Address(RVA = "0xB1DBE8", Offset = "0xB1DBE8", VA = "0xB1DBE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600154D")]
				[Address(RVA = "0xB1DC30", Offset = "0xB1DC30", VA = "0xB1DC30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001548")]
			[Address(RVA = "0xB1D99C", Offset = "0xB1D99C", VA = "0xB1D99C")]
			[DebuggerHidden]
			public <HeartBeatCoroutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001549")]
			[Address(RVA = "0xB1DAC4", Offset = "0xB1DAC4", VA = "0xB1DAC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600154A")]
			[Address(RVA = "0xB1DAC8", Offset = "0xB1DAC8", VA = "0xB1DAC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600154C")]
			[Address(RVA = "0xB1DBF0", Offset = "0xB1DBF0", VA = "0xB1DBF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticSender shotPistolRightHand;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticSender shotPistolLeftHand;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HapticSender shotRifleRightHand;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticSender shotRifleLeftHand;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HapticSender impactPistol;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HapticSender impactRifle;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HapticSender explosion;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HapticSender explosionWave;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public HapticSender death;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public HapticSender heartBeat;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HapticSender bonusLife;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initialized;

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xB1C80C", Offset = "0xB1C80C", VA = "0xB1C80C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xB1C810", Offset = "0xB1C810", VA = "0xB1C810")]
		private void Start()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xB1CBB0", Offset = "0xB1CBB0", VA = "0xB1CBB0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xB1C814", Offset = "0xB1C814", VA = "0xB1C814")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xB1CD28", Offset = "0xB1CD28", VA = "0xB1CD28")]
		private void OnPlayerHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xB1D094", Offset = "0xB1D094", VA = "0xB1D094")]
		private void OnPlayerDead()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xB1D150", Offset = "0xB1D150", VA = "0xB1D150")]
		private void OnWeaponFire(Bullet bullet)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xB1D5CC", Offset = "0xB1D5CC", VA = "0xB1D5CC")]
		private void OnExplosion(Vector3 explosionPosition)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xB1D764", Offset = "0xB1D764", VA = "0xB1D764")]
		private void OnExplosionWave(Vector3 explosionPosition)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xB1D8FC", Offset = "0xB1D8FC", VA = "0xB1D8FC")]
		private void OnBulletTime()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xB1D934", Offset = "0xB1D934", VA = "0xB1D934")]
		[IteratorStateMachine(typeof(<HeartBeatCoroutine>d__22))]
		private IEnumerator HeartBeatCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xB1D9C4", Offset = "0xB1D9C4", VA = "0xB1D9C4")]
		private void OnBonusLife()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xB1DABC", Offset = "0xB1DABC", VA = "0xB1DABC")]
		public CV2_BHapticsManager()
		{
		}
	}
}
namespace BezierSolution
{
	[Token(Token = "0x20003FC")]
	public class BezierPoint : MonoBehaviour
	{
		[Token(Token = "0x20003FD")]
		public enum HandleMode
		{
			[Token(Token = "0x4001400")]
			Free,
			[Token(Token = "0x4001401")]
			Aligned,
			[Token(Token = "0x4001402")]
			Mirrored
		}

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_position;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_precedingControlPointLocalPosition;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_precedingControlPointPosition;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_followingControlPointLocalPosition;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_followingControlPointPosition;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private HandleMode m_handleMode;

		[Token(Token = "0x170001C5")]
		public Vector3 localPosition
		{
			[Token(Token = "0x600154E")]
			[Address(RVA = "0xB1DC38", Offset = "0xB1DC38", VA = "0xB1DC38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600154F")]
			[Address(RVA = "0xB1DC58", Offset = "0xB1DC58", VA = "0xB1DC58")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public Vector3 position
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0xB1DCA0", Offset = "0xB1DCA0", VA = "0xB1DCA0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001551")]
			[Address(RVA = "0xB1DD74", Offset = "0xB1DD74", VA = "0xB1DD74")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public Quaternion localRotation
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0xB1DDBC", Offset = "0xB1DDBC", VA = "0xB1DDBC")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001553")]
			[Address(RVA = "0xB1DDDC", Offset = "0xB1DDDC", VA = "0xB1DDDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public Quaternion rotation
		{
			[Token(Token = "0x6001554")]
			[Address(RVA = "0xB1DE2C", Offset = "0xB1DE2C", VA = "0xB1DE2C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001555")]
			[Address(RVA = "0xB1DE4C", Offset = "0xB1DE4C", VA = "0xB1DE4C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public Vector3 localEulerAngles
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0xB1DE9C", Offset = "0xB1DE9C", VA = "0xB1DE9C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001557")]
			[Address(RVA = "0xB1DEBC", Offset = "0xB1DEBC", VA = "0xB1DEBC")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0xB1DF04", Offset = "0xB1DF04", VA = "0xB1DF04")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001559")]
			[Address(RVA = "0xB1DF24", Offset = "0xB1DF24", VA = "0xB1DF24")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public Vector3 localScale
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0xB1DF6C", Offset = "0xB1DF6C", VA = "0xB1DF6C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600155B")]
			[Address(RVA = "0xB1DF8C", Offset = "0xB1DF8C", VA = "0xB1DF8C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public Vector3 precedingControlPointLocalPosition
		{
			[Token(Token = "0x600155C")]
			[Address(RVA = "0xB1DFD4", Offset = "0xB1DFD4", VA = "0xB1DFD4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xB1DFE0", Offset = "0xB1DFE0", VA = "0xB1DFE0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public Vector3 precedingControlPointPosition
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0xB1E1B8", Offset = "0xB1E1B8", VA = "0xB1E1B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600155F")]
			[Address(RVA = "0xB1E1F4", Offset = "0xB1E1F4", VA = "0xB1E1F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public Vector3 followingControlPointLocalPosition
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0xB1E47C", Offset = "0xB1E47C", VA = "0xB1E47C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001561")]
			[Address(RVA = "0xB1E488", Offset = "0xB1E488", VA = "0xB1E488")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public Vector3 followingControlPointPosition
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0xB1E660", Offset = "0xB1E660", VA = "0xB1E660")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001563")]
			[Address(RVA = "0xB1E69C", Offset = "0xB1E69C", VA = "0xB1E69C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public HandleMode handleMode
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0xB1E924", Offset = "0xB1E924", VA = "0xB1E924")]
			get
			{
				return default(HandleMode);
			}
			[Token(Token = "0x6001565")]
			[Address(RVA = "0xB1E92C", Offset = "0xB1E92C", VA = "0xB1E92C")]
			set
			{
			}
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xB1E94C", Offset = "0xB1E94C", VA = "0xB1E94C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xB1E970", Offset = "0xB1E970", VA = "0xB1E970")]
		public void CopyTo(BezierPoint other)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xB1DCDC", Offset = "0xB1DCDC", VA = "0xB1DCDC")]
		private void Revalidate()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xB1EA64", Offset = "0xB1EA64", VA = "0xB1EA64")]
		public void Reset()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xB1EBC0", Offset = "0xB1EBC0", VA = "0xB1EBC0")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	[ExecuteInEditMode]
	public class BezierSpline : MonoBehaviour
	{
		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material gizmoMaterial;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color gizmoColor;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float gizmoStep;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<BezierPoint> endPoints;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool loop;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool drawGizmos;

		[Token(Token = "0x170001D1")]
		public int Count
		{
			[Token(Token = "0x600156B")]
			[Address(RVA = "0xB1EC5C", Offset = "0xB1EC5C", VA = "0xB1EC5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D2")]
		public float Length
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0xB1ECA4", Offset = "0xB1ECA4", VA = "0xB1ECA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D3")]
		public BezierPoint this[int index]
		{
			[Token(Token = "0x600156D")]
			[Address(RVA = "0xB1EEA4", Offset = "0xB1EEA4", VA = "0xB1EEA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xB1EFD4", Offset = "0xB1EFD4", VA = "0xB1EFD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xB1F060", Offset = "0xB1F060", VA = "0xB1F060")]
		public void Initialize(int endPointsCount)
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xB1EFD8", Offset = "0xB1EFD8", VA = "0xB1EFD8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xB1F238", Offset = "0xB1F238", VA = "0xB1F238")]
		public BezierPoint InsertNewPointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xB1F604", Offset = "0xB1F604", VA = "0xB1F604")]
		public BezierPoint DuplicatePointAt(int index)
		{
			return null;
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xB1F87C", Offset = "0xB1F87C", VA = "0xB1F87C")]
		public void RemovePointAt(int index)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xB1FB74", Offset = "0xB1FB74", VA = "0xB1FB74")]
		public void SwapPointsAt(int index1, int index2)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xB1FDE0", Offset = "0xB1FDE0", VA = "0xB1FDE0")]
		public int IndexOf(BezierPoint point)
		{
			return default(int);
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xB1FE38", Offset = "0xB1FE38", VA = "0xB1FE38")]
		public void DrawGizmos(Color color, int smoothness = 4)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xB1FEDC", Offset = "0xB1FEDC", VA = "0xB1FEDC")]
		public void HideGizmos()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xB1FEE4", Offset = "0xB1FEE4", VA = "0xB1FEE4")]
		public Vector3 GetPoint(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xB200D0", Offset = "0xB200D0", VA = "0xB200D0")]
		public BezierPoint GetCurrentPoint(float normalizedT)
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xB201F4", Offset = "0xB201F4", VA = "0xB201F4")]
		public Vector3 GetTangent(float normalizedT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xB1ECB8", Offset = "0xB1ECB8", VA = "0xB1ECB8")]
		public float GetLengthApproximately(float startNormalizedT, float endNormalizedT, float accuracy = 50f)
		{
			return default(float);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xB20500", Offset = "0xB20500", VA = "0xB20500")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xB20518", Offset = "0xB20518", VA = "0xB20518")]
		public Vector3 FindNearestPointTo(Vector3 worldPos, out float normalizedT, float accuracy = 100f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xB20648", Offset = "0xB20648", VA = "0xB20648")]
		public Vector3 MoveAlongSpline(ref float normalizedT, ref Vector3 direction, float deltaMovement)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xB20764", Offset = "0xB20764", VA = "0xB20764")]
		public Vector3 MoveAlongSpline(ref float normalizedT, float deltaMovement, int accuracy = 3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xB20884", Offset = "0xB20884", VA = "0xB20884")]
		public void ConstructLinearPath()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xB20A94", Offset = "0xB20A94", VA = "0xB20A94")]
		public void AutoConstructSpline()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xB213A8", Offset = "0xB213A8", VA = "0xB213A8")]
		private static Vector3[] GetFirstControlPoints(Vector3[] rhs)
		{
			return null;
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xB215A8", Offset = "0xB215A8", VA = "0xB215A8")]
		public void AutoConstructSpline2()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xB204C4", Offset = "0xB204C4", VA = "0xB204C4")]
		private float AccuracyToStepSize(float accuracy)
		{
			return default(float);
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xB218E0", Offset = "0xB218E0", VA = "0xB218E0")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xB21BE4", Offset = "0xB21BE4", VA = "0xB21BE4")]
		public BezierSpline()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class BezierWalkerWithSpeed : MonoBehaviour
	{
		[Token(Token = "0x2000400")]
		public enum TravelMode
		{
			[Token(Token = "0x4001416")]
			Once,
			[Token(Token = "0x4001417")]
			Loop,
			[Token(Token = "0x4001418")]
			PingPong
		}

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cachedTransform;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BezierSpline spline;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TravelMode travelMode;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float progress;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 0.06f)]
		public float relaxationAtEndPoints;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rotationLerpModifier;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool lookForward;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool isGoingForward;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x170001D4")]
		public float NormalizedT
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0xB21C74", Offset = "0xB21C74", VA = "0xB21C74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001588")]
			[Address(RVA = "0xB21C7C", Offset = "0xB21C7C", VA = "0xB21C7C")]
			set
			{
			}
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xB21C84", Offset = "0xB21C84", VA = "0xB21C84")]
		private void Awake()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xB21CA0", Offset = "0xB21CA0", VA = "0xB21CA0")]
		private void Update()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xB21EE4", Offset = "0xB21EE4", VA = "0xB21EE4")]
		public BezierWalkerWithSpeed()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class BezierWalkerWithTime : HitTarget
	{
		[Token(Token = "0x2000402")]
		[CompilerGenerated]
		private sealed class <explodeCharacters>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Rigidbody> rbs;

			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BezierWalkerWithTime <>4__this;

			[Token(Token = "0x170001D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600159E")]
				[Address(RVA = "0xB230C4", Offset = "0xB230C4", VA = "0xB230C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015A0")]
				[Address(RVA = "0xB2310C", Offset = "0xB2310C", VA = "0xB2310C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600159B")]
			[Address(RVA = "0xB22528", Offset = "0xB22528", VA = "0xB22528")]
			[DebuggerHidden]
			public <explodeCharacters>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600159C")]
			[Address(RVA = "0xB22E98", Offset = "0xB22E98", VA = "0xB22E98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600159D")]
			[Address(RVA = "0xB22E9C", Offset = "0xB22E9C", VA = "0xB22E9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600159F")]
			[Address(RVA = "0xB230CC", Offset = "0xB230CC", VA = "0xB230CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000403")]
		[CompilerGenerated]
		private sealed class <start>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BezierWalkerWithTime <>4__this;

			[Token(Token = "0x170001D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015A4")]
				[Address(RVA = "0xB231C4", Offset = "0xB231C4", VA = "0xB231C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015A6")]
				[Address(RVA = "0xB2320C", Offset = "0xB2320C", VA = "0xB2320C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015A1")]
			[Address(RVA = "0xB226E8", Offset = "0xB226E8", VA = "0xB226E8")]
			[DebuggerHidden]
			public <start>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x60015A2")]
			[Address(RVA = "0xB23114", Offset = "0xB23114", VA = "0xB23114", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015A3")]
			[Address(RVA = "0xB23118", Offset = "0xB23118", VA = "0xB23118", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015A5")]
			[Address(RVA = "0xB231CC", Offset = "0xB231CC", VA = "0xB231CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform helicopter;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform brokenHelicopter;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform cachedTransform;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BezierSpline spline;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float travelTime;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float progress;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float movementLerpModifier;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float rotationLerpModifier;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool lookForward;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool isGoingForward;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onPathCompleted;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool onPathCompletedCalledAt1;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool onPathCompletedCalledAt0;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int currentPoint;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject HelicopterModel;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HeliRotorController MainRotorController;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public HeliRotorController SubRotorController;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float TurnForce;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float ForwardForce;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float ForwardTiltForce;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float TurnTiltForce;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float EffectiveHeight;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float turnTiltForcePercent;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float turnForcePercent;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _engineForce;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector2 hMove;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector2 hTilt;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float hTurn;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool IsOnGround;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 movement;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 prevpos;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 newpos;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 fwd;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 vright;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 lastRotation;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool forward;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		public bool backward;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		public bool right;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
		public bool left;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float speed;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[Range(0f, 0.06f)]
		public float relaxationAtEndPoints;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float time;

		[Token(Token = "0x170001D5")]
		public float NormalizedT
		{
			[Token(Token = "0x600158E")]
			[Address(RVA = "0xB22550", Offset = "0xB22550", VA = "0xB22550")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600158F")]
			[Address(RVA = "0xB22558", Offset = "0xB22558", VA = "0xB22558")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public float EngineForce
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0xB22560", Offset = "0xB22560", VA = "0xB22560")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001591")]
			[Address(RVA = "0xB22568", Offset = "0xB22568", VA = "0xB22568")]
			set
			{
			}
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xB21F68", Offset = "0xB21F68", VA = "0xB21F68", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xB224B4", Offset = "0xB224B4", VA = "0xB224B4")]
		[IteratorStateMachine(typeof(<explodeCharacters>d__3))]
		private IEnumerator explodeCharacters(List<Rigidbody> rbs)
		{
			return null;
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xB225C4", Offset = "0xB225C4", VA = "0xB225C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xB22680", Offset = "0xB22680", VA = "0xB22680")]
		[IteratorStateMachine(typeof(<start>d__51))]
		private IEnumerator start()
		{
			return null;
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xB22710", Offset = "0xB22710", VA = "0xB22710")]
		private void Update()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xB22938", Offset = "0xB22938", VA = "0xB22938")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xB22CDC", Offset = "0xB22CDC", VA = "0xB22CDC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xB22968", Offset = "0xB22968", VA = "0xB22968")]
		private void TiltProcess()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xB22A78", Offset = "0xB22A78", VA = "0xB22A78")]
		private void updateHelicopter()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xB22728", Offset = "0xB22728", VA = "0xB22728")]
		private void updateHelicopter2()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xB22D98", Offset = "0xB22D98", VA = "0xB22D98")]
		public BezierWalkerWithTime()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class Helicopter : HitTarget
	{
		[Token(Token = "0x2000405")]
		[CompilerGenerated]
		private sealed class <explodeCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Rigidbody> rbs;

			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Helicopter <>4__this;

			[Token(Token = "0x170001DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015BE")]
				[Address(RVA = "0xB246EC", Offset = "0xB246EC", VA = "0xB246EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015C0")]
				[Address(RVA = "0xB24734", Offset = "0xB24734", VA = "0xB24734", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015BB")]
			[Address(RVA = "0xB237E8", Offset = "0xB237E8", VA = "0xB237E8")]
			[DebuggerHidden]
			public <explodeCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60015BC")]
			[Address(RVA = "0xB244C0", Offset = "0xB244C0", VA = "0xB244C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xB244C4", Offset = "0xB244C4", VA = "0xB244C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015BF")]
			[Address(RVA = "0xB246F4", Offset = "0xB246F4", VA = "0xB246F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000407")]
		[CompilerGenerated]
		private sealed class <start>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Helicopter <>4__this;

			[Token(Token = "0x170001DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015C6")]
				[Address(RVA = "0xB24820", Offset = "0xB24820", VA = "0xB24820", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015C8")]
				[Address(RVA = "0xB24868", Offset = "0xB24868", VA = "0xB24868", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015C3")]
			[Address(RVA = "0xB23CA0", Offset = "0xB23CA0", VA = "0xB23CA0")]
			[DebuggerHidden]
			public <start>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x60015C4")]
			[Address(RVA = "0xB24770", Offset = "0xB24770", VA = "0xB24770", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015C5")]
			[Address(RVA = "0xB24774", Offset = "0xB24774", VA = "0xB24774", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xB24828", Offset = "0xB24828", VA = "0xB24828", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform helicopter;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform brokenHelicopter;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HelicopterRotorKiller rotorKiller;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem explosion;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform cachedTransform;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BezierSpline scenePath;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BezierSpline escapePath;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BezierSpline path;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float progress;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float movementLerpModifier;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float rotationLerpModifier;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool lookForward;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool isGoingForward;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int currentPoint;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject HelicopterModel;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public HeliRotorController MainRotorController;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public HeliRotorController SubRotorController;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float ForwardTiltForce;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float TurnTiltForce;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _engineForce;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector2 hMove;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector2 hTilt;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 movement;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 prevpos;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 newpos;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 fwd;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 vright;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 lastRotation;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public bool forward;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		public bool backward;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
		public bool right;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
		public bool left;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float speed;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[Range(0f, 0.06f)]
		public float relaxationAtEndPoints;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float time;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SceneData scene;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool gameStarted;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool time0;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float firstTime;

		[Token(Token = "0x170001DB")]
		public float NormalizedT
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0xB23810", Offset = "0xB23810", VA = "0xB23810")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0xB23818", Offset = "0xB23818", VA = "0xB23818")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public float EngineForce
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0xB23820", Offset = "0xB23820", VA = "0xB23820")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0xB23828", Offset = "0xB23828", VA = "0xB23828")]
			set
			{
			}
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xB23214", Offset = "0xB23214", VA = "0xB23214", Slot = "4")]
		public override bool OnHit(Bullet bullet, Ray ray, RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xB23434", Offset = "0xB23434", VA = "0xB23434")]
		public void OnHitImpl(Vector3 playerPosition)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xB2364C", Offset = "0xB2364C", VA = "0xB2364C")]
		private void setHelicopterExplosionForce(Vector3 playerPosition)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xB23774", Offset = "0xB23774", VA = "0xB23774")]
		[IteratorStateMachine(typeof(<explodeCharacters>d__7))]
		private IEnumerator explodeCharacters(List<Rigidbody> rbs)
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xB23884", Offset = "0xB23884", VA = "0xB23884")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xB239C8", Offset = "0xB239C8", VA = "0xB239C8")]
		private void moveHelicopter(int sceneId)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xB23C30", Offset = "0xB23C30", VA = "0xB23C30")]
		[IteratorStateMachine(typeof(<start>d__49))]
		private IEnumerator start()
		{
			return null;
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xB23CC8", Offset = "0xB23CC8", VA = "0xB23CC8")]
		private void killPlayer()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xB23D58", Offset = "0xB23D58", VA = "0xB23D58")]
		private void Update()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xB23FBC", Offset = "0xB23FBC", VA = "0xB23FBC")]
		public void escape()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xB24038", Offset = "0xB24038", VA = "0xB24038")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xB24374", Offset = "0xB24374", VA = "0xB24374")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xB24068", Offset = "0xB24068", VA = "0xB24068")]
		private void TiltProcess()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xB24178", Offset = "0xB24178", VA = "0xB24178")]
		private void updateHelicopter()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xB23DB0", Offset = "0xB23DB0", VA = "0xB23DB0")]
		private void updateHelicopter2()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xB2442C", Offset = "0xB2442C", VA = "0xB2442C")]
		public Helicopter()
		{
		}
	}
	[Token(Token = "0x2000408")]
	[ExecuteInEditMode]
	public class ParticlesFollowBezier : MonoBehaviour
	{
		[Token(Token = "0x2000409")]
		public enum FollowMode
		{
			[Token(Token = "0x4001482")]
			Relaxed,
			[Token(Token = "0x4001483")]
			Strict
		}

		[Token(Token = "0x4001479")]
		private const int MAX_PARTICLE_COUNT = 25000;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FollowMode followMode;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cachedTransform;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem cachedPS;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.MainModule cachedMainModule;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vector4> particleData;

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xB24870", Offset = "0xB24870", VA = "0xB24870")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xB24974", Offset = "0xB24974", VA = "0xB24974")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xB24E34", Offset = "0xB24E34", VA = "0xB24E34")]
		public ParticlesFollowBezier()
		{
		}
	}
}
namespace Simplex
{
	[Token(Token = "0x200040A")]
	public class Noise
	{
		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int seed;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static byte[] perm;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly byte[] permOriginal;

		[Token(Token = "0x170001E1")]
		public static int Seed
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0xB26060", Offset = "0xB26060", VA = "0xB26060")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xB260B8", Offset = "0xB260B8", VA = "0xB260B8")]
			set
			{
			}
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xB24E3C", Offset = "0xB24E3C", VA = "0xB24E3C")]
		public static float[] Calc1D(int width, float scale)
		{
			return null;
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xB25070", Offset = "0xB25070", VA = "0xB25070")]
		public static float[,] Calc2D(int width, int height, float scale)
		{
			return null;
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xB2557C", Offset = "0xB2557C", VA = "0xB2557C")]
		public static float[,,] Calc3D(int width, int height, int length, float scale)
		{
			return null;
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xB25DEC", Offset = "0xB25DEC", VA = "0xB25DEC")]
		public static float CalcPixel1D(int x, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xB25E64", Offset = "0xB25E64", VA = "0xB25E64")]
		public static float CalcPixel2D(int x, int y, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xB25EF0", Offset = "0xB25EF0", VA = "0xB25EF0")]
		public static float CalcPixel3D(int x, int y, int z, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xB25F88", Offset = "0xB25F88", VA = "0xB25F88")]
		static Noise()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xB24F28", Offset = "0xB24F28", VA = "0xB24F28")]
		internal static float Generate(float x)
		{
			return default(float);
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xB251B8", Offset = "0xB251B8", VA = "0xB251B8")]
		internal static float Generate(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xB25718", Offset = "0xB25718", VA = "0xB25718")]
		internal static float Generate(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xB261F4", Offset = "0xB261F4", VA = "0xB261F4")]
		private static int FastFloor(float x)
		{
			return default(int);
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xB26240", Offset = "0xB26240", VA = "0xB26240")]
		private static int Mod(int x, int m)
		{
			return default(int);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xB2621C", Offset = "0xB2621C", VA = "0xB2621C")]
		private static float grad(int hash, float x)
		{
			return default(float);
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xB26254", Offset = "0xB26254", VA = "0xB26254")]
		private static float grad(int hash, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xB26288", Offset = "0xB26288", VA = "0xB26288")]
		private static float grad(int hash, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xB262D0", Offset = "0xB262D0", VA = "0xB262D0")]
		private static float grad(int hash, float x, float y, float z, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xB2631C", Offset = "0xB2631C", VA = "0xB2631C")]
		public Noise()
		{
		}
	}
}
namespace Photon.Pun.Demo.Shared
{
	[Token(Token = "0x200040B")]
	public static class DocLinks
	{
		[Token(Token = "0x200040C")]
		public enum DocTypes
		{
			[Token(Token = "0x4001491")]
			Doc,
			[Token(Token = "0x4001492")]
			Api
		}

		[Token(Token = "0x200040D")]
		public enum Products
		{
			[Token(Token = "0x4001494")]
			OnPremise,
			[Token(Token = "0x4001495")]
			Realtime,
			[Token(Token = "0x4001496")]
			Pun,
			[Token(Token = "0x4001497")]
			Chat,
			[Token(Token = "0x4001498")]
			Voice,
			[Token(Token = "0x4001499")]
			Bolt,
			[Token(Token = "0x400149A")]
			Quantum
		}

		[Token(Token = "0x200040E")]
		public enum Versions
		{
			[Token(Token = "0x400149C")]
			Current,
			[Token(Token = "0x400149D")]
			V1,
			[Token(Token = "0x400149E")]
			V2
		}

		[Token(Token = "0x200040F")]
		public enum Languages
		{
			[Token(Token = "0x40014A0")]
			English,
			[Token(Token = "0x40014A1")]
			Japanese,
			[Token(Token = "0x40014A2")]
			Korean,
			[Token(Token = "0x40014A3")]
			Chinese
		}

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Versions Version;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Languages Language;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Products Product;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string ApiUrlRoot;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string DocUrlFormat;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<Products, string> ProductsFolders;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<Languages, string> ApiLanguagesFolder;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Dictionary<Languages, string> DocLanguagesFolder;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Dictionary<Versions, string> VersionsFolder;

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xB26324", Offset = "0xB26324", VA = "0xB26324")]
		public static string GetLink(DocTypes type, string reference)
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xB263CC", Offset = "0xB263CC", VA = "0xB263CC")]
		public static string GetApiLink(string reference)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xB265B4", Offset = "0xB265B4", VA = "0xB265B4")]
		public static string GetDocLink(string reference)
		{
			return null;
		}
	}
}
namespace Photon.Pun.Demo.Cockpit
{
	[Token(Token = "0x2000410")]
	public class PunCockpit : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x2000412")]
		[CompilerGenerated]
		private sealed class <OnDropdownConnectAs_CB>d__99 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PunCockpit <>4__this;

			[Token(Token = "0x170001E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001627")]
				[Address(RVA = "0xB2ABE0", Offset = "0xB2ABE0", VA = "0xB2ABE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001629")]
				[Address(RVA = "0xB2AC28", Offset = "0xB2AC28", VA = "0xB2AC28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001624")]
			[Address(RVA = "0xB2AB0C", Offset = "0xB2AB0C", VA = "0xB2AB0C")]
			[DebuggerHidden]
			public <OnDropdownConnectAs_CB>d__99(int <>1__state)
			{
			}

			[Token(Token = "0x6001625")]
			[Address(RVA = "0xB2AB34", Offset = "0xB2AB34", VA = "0xB2AB34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001626")]
			[Address(RVA = "0xB2AB38", Offset = "0xB2AB38", VA = "0xB2AB38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001628")]
			[Address(RVA = "0xB2ABE8", Offset = "0xB2ABE8", VA = "0xB2ABE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PunCockpit Instance;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool Embedded;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string EmbeddedGameTitle;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool debug;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Title;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text StateText;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text UserIdText;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Demo Integration")]
		public CanvasGroup MinimalCanvasGroup;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CanvasGroup MaximalCanvasGroup;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject MinimizeButton;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject MinimalUIEmbeddHelp;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Connection UI")]
		public GameObject ConnectingLabel;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject ConnectionPanel;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject AdvancedConnectionPanel;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Dropdown ConnectAsDropDown;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Common UI")]
		public GameObject InfosPanel;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject MinimalUiInfosPanel;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Lobby UI")]
		public GameObject LobbyPanel;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Selectable JoinLobbyButton;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public RoomListView RoomListManager;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FriendListView FriendListManager;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject RoomListMatchMakingForm;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Game UI")]
		public GameObject GamePanel;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public PlayerListView PlayerListManager;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public PlayerDetailsController PlayerDetailsManager;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public InputField RoomCustomPropertyInputfield;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Header("Photon Settings")]
		public string GameVersionOverride;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool ResetBestRegionCodeInPreferences;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[Header("Room Options")]
		public int MaxPlayers;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int PlayerTtl;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int EmptyRoomTtl;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string Plugins;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool PublishUserId;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool IsVisible;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		public bool IsOpen;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
		public bool CleanupCacheOnLeave;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool DeleteNullProperties;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Header("Room Options UI")]
		public IntInputField PlayerTtlField;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public IntInputField EmptyRoomTtlField;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public IntInputField MaxPlayersField;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public StringInputField PluginsField;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public BoolInputField PublishUserIdField;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public BoolInputField IsVisibleField;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public BoolInputField IsOpenField;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public BoolInputField CleanupCacheOnLeaveField;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public BoolInputField DeleteNullPropertiesField;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[Header("Friends Options")]
		public FriendListView.FriendDetail[] FriendsList;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[Header("Modal window")]
		public CanvasGroup ModalWindow;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public RegionListView RegionListView;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Text RegionListLoadingFeedback;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private LoadBalancingClient _lbc;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool _regionPingProcessActive;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private List<Region> RegionsList;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private string roomNameToEnter;

		[Token(Token = "0x170001E2")]
		public string UserId
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0xB26C20", Offset = "0xB26C20", VA = "0xB26C20")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xB26C28", Offset = "0xB26C28", VA = "0xB26C28")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xB26C30", Offset = "0xB26C30", VA = "0xB26C30")]
		public void Start()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xB2727C", Offset = "0xB2727C", VA = "0xB2727C")]
		public void SwitchtoMinimalPanel()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xB271FC", Offset = "0xB271FC", VA = "0xB271FC")]
		public void SwitchtoMaximalPanel()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xB272E8", Offset = "0xB272E8", VA = "0xB272E8")]
		public void SwitchToAdvancedConnection()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xB271AC", Offset = "0xB271AC", VA = "0xB271AC")]
		public void SwitchToSimpleConnection()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xB27338", Offset = "0xB27338", VA = "0xB27338")]
		public void ToggleInfosInMinimalPanel()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xB2736C", Offset = "0xB2736C", VA = "0xB2736C")]
		public void RequestInfosPanel(GameObject Parent)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xB27428", Offset = "0xB27428", VA = "0xB27428")]
		public void OnUserIdSubmited(string userId)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xB27528", Offset = "0xB27528", VA = "0xB27528")]
		public void SetPlayerTtlRoomOption(int value)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xB275D8", Offset = "0xB275D8", VA = "0xB275D8")]
		public void SetEmptyRoomTtlRoomOption(int value)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xB27688", Offset = "0xB27688", VA = "0xB27688")]
		public void SetMaxPlayersRoomOption(int value)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xB27738", Offset = "0xB27738", VA = "0xB27738")]
		public void SetPluginsRoomOption(string value)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xB277D8", Offset = "0xB277D8", VA = "0xB277D8")]
		public void SetPublishUserId(bool value)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xB27888", Offset = "0xB27888", VA = "0xB27888")]
		public void SetIsVisible(bool value)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xB27938", Offset = "0xB27938", VA = "0xB27938")]
		public void SetIsOpen(bool value)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xB279E8", Offset = "0xB279E8", VA = "0xB279E8")]
		public void SetResetBestRegionCodeInPreferences(bool value)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xB27A98", Offset = "0xB27A98", VA = "0xB27A98")]
		public void SetCleanupCacheOnLeave(bool value)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xB27B48", Offset = "0xB27B48", VA = "0xB27B48")]
		public void SetDeleteNullProperties(bool value)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xB27BF8", Offset = "0xB27BF8", VA = "0xB27BF8")]
		public void PingRegions()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xB27DDC", Offset = "0xB27DDC", VA = "0xB27DDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xB27F18", Offset = "0xB27F18", VA = "0xB27F18")]
		private void OnStateChanged(ClientState previousState, ClientState state)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xB28038", Offset = "0xB28038", VA = "0xB28038", Slot = "38")]
		public override void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xB281D4", Offset = "0xB281D4", VA = "0xB281D4")]
		private void OnRegionsPinged(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xB28300", Offset = "0xB28300", VA = "0xB28300")]
		public void CloseRegionListView()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xB2835C", Offset = "0xB2835C", VA = "0xB2835C")]
		public void LoadLevel(string level)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xB28434", Offset = "0xB28434", VA = "0xB28434")]
		public void SetRoomCustomProperty(string value)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xB2858C", Offset = "0xB2858C", VA = "0xB2858C")]
		public void JoinRoom(string roomName)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xB28638", Offset = "0xB28638", VA = "0xB28638")]
		public void CreateRoom()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xB2864C", Offset = "0xB2864C", VA = "0xB2864C")]
		public void CreateRoom(string roomName, string lobbyName = "MyLobby", LobbyType lobbyType = LobbyType.SqlLobby, [Optional] string[] expectedUsers)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xB28C7C", Offset = "0xB28C7C", VA = "0xB28C7C")]
		public void JoinRandomRoom()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xB28CCC", Offset = "0xB28CCC", VA = "0xB28CCC")]
		public void LeaveRoom()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xB27430", Offset = "0xB27430", VA = "0xB27430")]
		public void Connect()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xB28D6C", Offset = "0xB28D6C", VA = "0xB28D6C")]
		public void ReConnect()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xB28E64", Offset = "0xB28E64", VA = "0xB28E64")]
		public void ReconnectAndRejoin()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xB28F5C", Offset = "0xB28F5C", VA = "0xB28F5C")]
		public void ConnectToBestCloudServer()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xB290F8", Offset = "0xB290F8", VA = "0xB290F8")]
		public void ConnectToRegion(string region)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xB29374", Offset = "0xB29374", VA = "0xB29374")]
		public void ConnectOffline()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xB29418", Offset = "0xB29418", VA = "0xB29418")]
		public void JoinLobby()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xB294F8", Offset = "0xB294F8", VA = "0xB294F8")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xB29598", Offset = "0xB29598", VA = "0xB29598")]
		public void OpenDashboard()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xB295DC", Offset = "0xB295DC", VA = "0xB295DC")]
		public void OnDropdownConnectAs(int dropdownIndex)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xB29710", Offset = "0xB29710", VA = "0xB29710")]
		[IteratorStateMachine(typeof(<OnDropdownConnectAs_CB>d__99))]
		private IEnumerator OnDropdownConnectAs_CB()
		{
			return null;
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xB29778", Offset = "0xB29778", VA = "0xB29778")]
		public void OnLobbyToolsViewTabChanged(string tabId)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xB2977C", Offset = "0xB2977C", VA = "0xB2977C")]
		public void OnSelectPlayer()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xB29780", Offset = "0xB29780", VA = "0xB29780", Slot = "29")]
		public override void OnConnected()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xB298A8", Offset = "0xB298A8", VA = "0xB298A8", Slot = "37")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xB29A6C", Offset = "0xB29A6C", VA = "0xB29A6C", Slot = "44")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xB29E2C", Offset = "0xB29E2C", VA = "0xB29E2C", Slot = "35")]
		public override void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xB29BD0", Offset = "0xB29BD0", VA = "0xB29BD0")]
		private void SetUpLobbyGenericUI()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xB29EDC", Offset = "0xB29EDC", VA = "0xB29EDC", Slot = "45")]
		public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xB2A010", Offset = "0xB2A010", VA = "0xB2A010", Slot = "36")]
		public override void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xB2A0B8", Offset = "0xB2A0B8", VA = "0xB2A0B8", Slot = "32")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xB2A298", Offset = "0xB2A298", VA = "0xB2A298", Slot = "43")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xB2A478", Offset = "0xB2A478", VA = "0xB2A478", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xB2A654", Offset = "0xB2A654", VA = "0xB2A654", Slot = "33")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xB2A6D8", Offset = "0xB2A6D8", VA = "0xB2A6D8", Slot = "30")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xB28AF0", Offset = "0xB28AF0", VA = "0xB28AF0")]
		private Photon.Realtime.RoomOptions GetRoomOptions()
		{
			return null;
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xB2A820", Offset = "0xB2A820", VA = "0xB2A820")]
		public PunCockpit()
		{
		}
	}
	[Token(Token = "0x2000413")]
	[RequireComponent(typeof(Toggle))]
	public class AutoSyncSceneToggle : MonoBehaviour
	{
		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle _toggle;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool registered;

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xB2AC30", Offset = "0xB2AC30", VA = "0xB2AC30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xB2AD14", Offset = "0xB2AD14", VA = "0xB2AD14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xB2AE08", Offset = "0xB2AE08", VA = "0xB2AE08")]
		private void Update()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xB2AF14", Offset = "0xB2AF14", VA = "0xB2AF14")]
		public void ToggleValue(bool value)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xB2AF6C", Offset = "0xB2AF6C", VA = "0xB2AF6C")]
		public AutoSyncSceneToggle()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class BackgroundTimeOutField : MonoBehaviour
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _cache;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool registered;

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xB2AF74", Offset = "0xB2AF74", VA = "0xB2AF74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xB2B038", Offset = "0xB2B038", VA = "0xB2B038")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xB2B0E4", Offset = "0xB2B0E4", VA = "0xB2B0E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xB2B1B0", Offset = "0xB2B1B0", VA = "0xB2B1B0")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xB2B21C", Offset = "0xB2B21C", VA = "0xB2B21C")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xB2B29C", Offset = "0xB2B29C", VA = "0xB2B29C")]
		public BackgroundTimeOutField()
		{
		}
	}
	[Token(Token = "0x2000415")]
	[RequireComponent(typeof(Toggle))]
	public class CrcCheckToggle : MonoBehaviour
	{
		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle _toggle;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool registered;

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xB2B2A4", Offset = "0xB2B2A4", VA = "0xB2B2A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xB2B388", Offset = "0xB2B388", VA = "0xB2B388")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xB2B47C", Offset = "0xB2B47C", VA = "0xB2B47C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xB2B524", Offset = "0xB2B524", VA = "0xB2B524")]
		public void ToggleValue(bool value)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xB2B57C", Offset = "0xB2B57C", VA = "0xB2B57C")]
		public CrcCheckToggle()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[RequireComponent(typeof(Toggle))]
	public class CurrentRoomIsOpenToggle : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle _toggle;

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xB2B584", Offset = "0xB2B584", VA = "0xB2B584")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xB2B5D4", Offset = "0xB2B5D4", VA = "0xB2B5D4")]
		private void Update()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xB2B7A8", Offset = "0xB2B7A8", VA = "0xB2B7A8")]
		public void ToggleValue(bool value)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xB2B8B0", Offset = "0xB2B8B0", VA = "0xB2B8B0", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xB2B8CC", Offset = "0xB2B8CC", VA = "0xB2B8CC")]
		public CurrentRoomIsOpenToggle()
		{
		}
	}
	[Token(Token = "0x2000417")]
	[RequireComponent(typeof(Toggle))]
	public class CurrentRoomIsVisibleToggle : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle _toggle;

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xB2B8D4", Offset = "0xB2B8D4", VA = "0xB2B8D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xB2B924", Offset = "0xB2B924", VA = "0xB2B924")]
		private void Update()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xB2BAF8", Offset = "0xB2BAF8", VA = "0xB2BAF8")]
		public void ToggleValue(bool value)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xB2BC00", Offset = "0xB2BC00", VA = "0xB2BC00", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xB2BC1C", Offset = "0xB2BC1C", VA = "0xB2BC1C")]
		public CurrentRoomIsVisibleToggle()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class DocLinkButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DocLinks.DocTypes Type;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Reference;

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xB2BC24", Offset = "0xB2BC24", VA = "0xB2BC24")]
		public void Start()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xB2BC28", Offset = "0xB2BC28", VA = "0xB2BC28", Slot = "4")]
		public void OnPointerClick(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xB2BC94", Offset = "0xB2BC94", VA = "0xB2BC94")]
		public DocLinkButton()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class GameVersionField : MonoBehaviour
	{
		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cache;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool registered;

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xB2BCE4", Offset = "0xB2BCE4", VA = "0xB2BCE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xB2BDA8", Offset = "0xB2BDA8", VA = "0xB2BDA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xB2BE54", Offset = "0xB2BE54", VA = "0xB2BE54")]
		private void Update()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xB2BF1C", Offset = "0xB2BF1C", VA = "0xB2BF1C")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xB2BF88", Offset = "0xB2BF88", VA = "0xB2BF88")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xB2C004", Offset = "0xB2C004", VA = "0xB2C004")]
		public GameVersionField()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class BoolInputField : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200041B")]
		public class OnSubmitEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6001652")]
			[Address(RVA = "0xB2C200", Offset = "0xB2C200", VA = "0xB2C200")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle PropertyValueInput;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool registered;

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xB2C00C", Offset = "0xB2C00C", VA = "0xB2C00C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xB2C0D0", Offset = "0xB2C0D0", VA = "0xB2C0D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xB2C17C", Offset = "0xB2C17C", VA = "0xB2C17C")]
		private void OnValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xB2C1D8", Offset = "0xB2C1D8", VA = "0xB2C1D8")]
		public void SetValue(bool value)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xB2C1F8", Offset = "0xB2C1F8", VA = "0xB2C1F8")]
		public BoolInputField()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class IntInputField : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200041D")]
		public class OnSubmitEvent : UnityEvent<int>
		{
			[Token(Token = "0x6001659")]
			[Address(RVA = "0xB2C4E4", Offset = "0xB2C4E4", VA = "0xB2C4E4")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool registered;

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xB2C248", Offset = "0xB2C248", VA = "0xB2C248")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xB2C30C", Offset = "0xB2C30C", VA = "0xB2C30C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xB2C3B8", Offset = "0xB2C3B8", VA = "0xB2C3B8")]
		public void SetValue(int value)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xB2C3F8", Offset = "0xB2C3F8", VA = "0xB2C3F8")]
		public void EndEditOnEnter(string value)
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xB2C464", Offset = "0xB2C464", VA = "0xB2C464")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xB2C4DC", Offset = "0xB2C4DC", VA = "0xB2C4DC")]
		public IntInputField()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class StringInputField : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200041F")]
		public class OnSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0xB2C7A4", Offset = "0xB2C7A4", VA = "0xB2C7A4")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool registered;

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xB2C52C", Offset = "0xB2C52C", VA = "0xB2C52C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xB2C5F0", Offset = "0xB2C5F0", VA = "0xB2C5F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xB2C69C", Offset = "0xB2C69C", VA = "0xB2C69C")]
		public void SetValue(string value)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xB2C6D8", Offset = "0xB2C6D8", VA = "0xB2C6D8")]
		public void EndEditOnEnter(string value)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xB2C744", Offset = "0xB2C744", VA = "0xB2C744")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xB2C79C", Offset = "0xB2C79C", VA = "0xB2C79C")]
		public StringInputField()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class ToggleExpand : MonoBehaviour
	{
		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Content;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle Toggle;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _init;

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xB2C7EC", Offset = "0xB2C7EC", VA = "0xB2C7EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xB2C8DC", Offset = "0xB2C8DC", VA = "0xB2C8DC")]
		private void HandleToggleOnValudChanged(bool value)
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xB2C8FC", Offset = "0xB2C8FC", VA = "0xB2C8FC")]
		public ToggleExpand()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class LayoutElementMatchSize : MonoBehaviour
	{
		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayoutElement layoutElement;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform Target;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool MatchHeight;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool MatchWidth;

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xB2C904", Offset = "0xB2C904", VA = "0xB2C904")]
		private void Update()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xB2C994", Offset = "0xB2C994", VA = "0xB2C994")]
		public LayoutElementMatchSize()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class NickNameField : MonoBehaviour
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cache;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool registered;

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xB2C9A4", Offset = "0xB2C9A4", VA = "0xB2C9A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xB2CA68", Offset = "0xB2CA68", VA = "0xB2CA68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xB2CB14", Offset = "0xB2CB14", VA = "0xB2CB14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xB2CBBC", Offset = "0xB2CBBC", VA = "0xB2CBBC")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xB2CC28", Offset = "0xB2CC28", VA = "0xB2CC28")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xB2CC90", Offset = "0xB2CC90", VA = "0xB2CC90")]
		public NickNameField()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class OnlineDocButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Url;

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xB2CC98", Offset = "0xB2CC98", VA = "0xB2CC98", Slot = "4")]
		public void OnPointerClick(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xB2CCA4", Offset = "0xB2CCA4", VA = "0xB2CCA4")]
		public OnlineDocButton()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class SendRateField : MonoBehaviour
	{
		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _cache;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool registered;

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xB2CCF4", Offset = "0xB2CCF4", VA = "0xB2CCF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xB2CDB8", Offset = "0xB2CDB8", VA = "0xB2CDB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xB2CE64", Offset = "0xB2CE64", VA = "0xB2CE64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xB2CF18", Offset = "0xB2CF18", VA = "0xB2CF18")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xB2CF84", Offset = "0xB2CF84", VA = "0xB2CF84")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xB2CFFC", Offset = "0xB2CFFC", VA = "0xB2CFFC")]
		public SendRateField()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class SendRateOnSerializeField : MonoBehaviour
	{
		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _cache;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool registered;

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xB2D004", Offset = "0xB2D004", VA = "0xB2D004")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xB2D0C8", Offset = "0xB2D0C8", VA = "0xB2D0C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xB2D174", Offset = "0xB2D174", VA = "0xB2D174")]
		private void Update()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xB2D228", Offset = "0xB2D228", VA = "0xB2D228")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xB2D28C", Offset = "0xB2D28C", VA = "0xB2D28C")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xB2D304", Offset = "0xB2D304", VA = "0xB2D304")]
		public SendRateOnSerializeField()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class PlayerDetailsController : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x2000427")]
		[CompilerGenerated]
		private sealed class <UpdateUIPing>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDetailsController <>4__this;

			[Token(Token = "0x170001E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600168C")]
				[Address(RVA = "0xB2EBE8", Offset = "0xB2EBE8", VA = "0xB2EBE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600168E")]
				[Address(RVA = "0xB2EC30", Offset = "0xB2EC30", VA = "0xB2EC30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001689")]
			[Address(RVA = "0xB2EA38", Offset = "0xB2EA38", VA = "0xB2EA38")]
			[DebuggerHidden]
			public <UpdateUIPing>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600168A")]
			[Address(RVA = "0xB2EADC", Offset = "0xB2EADC", VA = "0xB2EADC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600168B")]
			[Address(RVA = "0xB2EAE0", Offset = "0xB2EAE0", VA = "0xB2EAE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600168D")]
			[Address(RVA = "0xB2EBF0", Offset = "0xB2EBF0", VA = "0xB2EBF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ContentPanel;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PropertyCell PropertyCellPrototype;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text UpdateStatusText;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform BuiltInPropertiesPanel;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform PlayerNumberingExtensionPanel;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform ScoreExtensionPanel;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform TeamExtensionPanel;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform TurnExtensionPanel;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform CustomPropertiesPanel;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject MasterClientToolBar;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject NotInRoomLabel;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, PropertyCell> builtInPropsCellList;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Player _player;

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xB2D30C", Offset = "0xB2D30C", VA = "0xB2D30C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xB2D338", Offset = "0xB2D338", VA = "0xB2D338", Slot = "27")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xB2D410", Offset = "0xB2D410", VA = "0xB2D410")]
		public void SetPlayerTarget(Player player)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xB2E0EC", Offset = "0xB2E0EC", VA = "0xB2E0EC")]
		private void AddProperty(string property, string value, Transform parent)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xB2DF90", Offset = "0xB2DF90", VA = "0xB2DF90")]
		private string ParseKey(object key)
		{
			return null;
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xB2E2F8", Offset = "0xB2E2F8", VA = "0xB2E2F8")]
		public void KickOutPlayer()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xB2E354", Offset = "0xB2E354", VA = "0xB2E354")]
		public void SetAsMaster()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xB2E3B0", Offset = "0xB2E3B0", VA = "0xB2E3B0", Slot = "42")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xB2E404", Offset = "0xB2E404", VA = "0xB2E404", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xB2E430", Offset = "0xB2E430", VA = "0xB2E430", Slot = "46")]
		public override void OnPlayerPropertiesUpdate(Player target, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xB2E8DC", Offset = "0xB2E8DC", VA = "0xB2E8DC")]
		private void OnPlayerNumberingChanged()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xB2E9D0", Offset = "0xB2E9D0", VA = "0xB2E9D0")]
		[IteratorStateMachine(typeof(<UpdateUIPing>d__24))]
		private IEnumerator UpdateUIPing()
		{
			return null;
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xB2DACC", Offset = "0xB2DACC", VA = "0xB2DACC")]
		public void ResetList()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xB2DCEC", Offset = "0xB2DCEC", VA = "0xB2DCEC")]
		private ExitGames.Client.Photon.Hashtable GetAllPlayerBuiltIntProperties()
		{
			return null;
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xB2EA60", Offset = "0xB2EA60", VA = "0xB2EA60")]
		public PlayerDetailsController()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class InfosPanelPlaceholder : MonoBehaviour
	{
		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PunCockpit Manager;

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xB2EC38", Offset = "0xB2EC38", VA = "0xB2EC38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xB2EC64", Offset = "0xB2EC64", VA = "0xB2EC64")]
		public InfosPanelPlaceholder()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class FriendListCell : MonoBehaviour
	{
		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FriendListView ListManager;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text NameText;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject OnlineFlag;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject inRoomText;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject JoinButton;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FriendInfo _info;

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xB2EC6C", Offset = "0xB2EC6C", VA = "0xB2EC6C")]
		public void RefreshInfo(FriendListView.FriendDetail details)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xB2ECD8", Offset = "0xB2ECD8", VA = "0xB2ECD8")]
		public void RefreshInfo(FriendInfo info)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xB2ED5C", Offset = "0xB2ED5C", VA = "0xB2ED5C")]
		public void JoinFriendRoom()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xB2EDD8", Offset = "0xB2EDD8", VA = "0xB2EDD8")]
		public void RemoveFromList()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xB2EE44", Offset = "0xB2EE44", VA = "0xB2EE44")]
		public FriendListCell()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class FriendListView : MonoBehaviourPunCallbacks
	{
		[Serializable]
		[Token(Token = "0x200042B")]
		public class FriendDetail
		{
			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string NickName;

			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string UserId;

			[Token(Token = "0x60016A0")]
			[Address(RVA = "0xB2F8B0", Offset = "0xB2F8B0", VA = "0xB2F8B0")]
			public FriendDetail(string NickName, string UserId)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200042C")]
		public class OnJoinRoomEvent : UnityEvent<string>
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0xB2F8DC", Offset = "0xB2F8DC", VA = "0xB2F8DC")]
			public OnJoinRoomEvent()
			{
			}
		}

		[Token(Token = "0x200042D")]
		[CompilerGenerated]
		private sealed class <UpdateUIPing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FriendListView <>4__this;

			[Token(Token = "0x170001E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016A5")]
				[Address(RVA = "0xB2FA30", Offset = "0xB2FA30", VA = "0xB2FA30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016A7")]
				[Address(RVA = "0xB2FA78", Offset = "0xB2FA78", VA = "0xB2FA78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016A2")]
			[Address(RVA = "0xB2F7E8", Offset = "0xB2F7E8", VA = "0xB2F7E8")]
			[DebuggerHidden]
			public <UpdateUIPing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60016A3")]
			[Address(RVA = "0xB2F924", Offset = "0xB2F924", VA = "0xB2F924", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016A4")]
			[Address(RVA = "0xB2F928", Offset = "0xB2F928", VA = "0xB2F928", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016A6")]
			[Address(RVA = "0xB2FA38", Offset = "0xB2FA38", VA = "0xB2FA38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FriendListCell CellPrototype;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text ContentFeedback;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text UpdateStatusText;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OnJoinRoomEvent OnJoinRoom;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, FriendListCell> FriendCellList;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string[] FriendsLUT;

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xB2EE4C", Offset = "0xB2EE4C", VA = "0xB2EE4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xB2EE78", Offset = "0xB2EE78", VA = "0xB2EE78", Slot = "27")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xB2EF0C", Offset = "0xB2EF0C", VA = "0xB2EF0C")]
		public void SetFriendDetails(FriendDetail[] friendList)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xB2F41C", Offset = "0xB2F41C", VA = "0xB2F41C")]
		public void FindFriends()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xB2F4AC", Offset = "0xB2F4AC", VA = "0xB2F4AC", Slot = "47")]
		public override void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xB2F724", Offset = "0xB2F724", VA = "0xB2F724")]
		public void OnRoomListUpdateCallBack(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xB2ED80", Offset = "0xB2ED80", VA = "0xB2ED80")]
		public void JoinFriendRoom(string RoomName)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xB2F780", Offset = "0xB2F780", VA = "0xB2F780")]
		[IteratorStateMachine(typeof(<UpdateUIPing>d__15))]
		private IEnumerator UpdateUIPing()
		{
			return null;
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xB2F1FC", Offset = "0xB2F1FC", VA = "0xB2F1FC")]
		public void ResetList()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xB2F810", Offset = "0xB2F810", VA = "0xB2F810")]
		public FriendListView()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class PlayerListCell : MonoBehaviour
	{
		[Token(Token = "0x200042F")]
		[CompilerGenerated]
		private sealed class <Add>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerListCell <>4__this;

			[Token(Token = "0x170001E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016B3")]
				[Address(RVA = "0xB30058", Offset = "0xB30058", VA = "0xB30058", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016B5")]
				[Address(RVA = "0xB300A0", Offset = "0xB300A0", VA = "0xB300A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xB2FE50", Offset = "0xB2FE50", VA = "0xB2FE50")]
			[DebuggerHidden]
			public <Add>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xB2FF10", Offset = "0xB2FF10", VA = "0xB2FF10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xB2FF14", Offset = "0xB2FF14", VA = "0xB2FF14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xB30060", Offset = "0xB30060", VA = "0xB30060", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000430")]
		[CompilerGenerated]
		private sealed class <Remove>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerListCell <>4__this;

			[Token(Token = "0x170001EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016B9")]
				[Address(RVA = "0xB301F8", Offset = "0xB301F8", VA = "0xB301F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016BB")]
				[Address(RVA = "0xB30240", Offset = "0xB30240", VA = "0xB30240", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016B6")]
			[Address(RVA = "0xB2FEE0", Offset = "0xB2FEE0", VA = "0xB2FEE0")]
			[DebuggerHidden]
			public <Remove>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60016B7")]
			[Address(RVA = "0xB300A8", Offset = "0xB300A8", VA = "0xB300A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016B8")]
			[Address(RVA = "0xB300AC", Offset = "0xB300AC", VA = "0xB300AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016BA")]
			[Address(RVA = "0xB30200", Offset = "0xB30200", VA = "0xB30200", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerListView ListManager;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text NumberText;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text NameText;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image ActiveFlag;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color InactiveColor;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color ActiveColor;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text isLocalText;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image isMasterFlag;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LayoutElement LayoutElement;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Player _player;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool isInactiveCache;

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xB2FA80", Offset = "0xB2FA80", VA = "0xB2FA80")]
		public void RefreshInfo(ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xB2FCC4", Offset = "0xB2FCC4", VA = "0xB2FCC4")]
		public void AddToList(Player info, bool animate = false)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xB2FD5C", Offset = "0xB2FD5C", VA = "0xB2FD5C")]
		public void RemoveFromList()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xB2FDA8", Offset = "0xB2FDA8", VA = "0xB2FDA8")]
		public void OnClick()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xB2FA84", Offset = "0xB2FA84", VA = "0xB2FA84")]
		private void UpdateInfo()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xB2FDE8", Offset = "0xB2FDE8", VA = "0xB2FDE8")]
		[IteratorStateMachine(typeof(<Add>d__16))]
		private IEnumerator Add()
		{
			return null;
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xB2FE78", Offset = "0xB2FE78", VA = "0xB2FE78")]
		[IteratorStateMachine(typeof(<Remove>d__17))]
		private IEnumerator Remove()
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xB2FF08", Offset = "0xB2FF08", VA = "0xB2FF08")]
		public PlayerListCell()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class PlayerListView : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x2000432")]
		[CompilerGenerated]
		private sealed class <UpdateUIPing>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerListView <>4__this;

			[Token(Token = "0x170001ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016CA")]
				[Address(RVA = "0xB311C0", Offset = "0xB311C0", VA = "0xB311C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016CC")]
				[Address(RVA = "0xB31208", Offset = "0xB31208", VA = "0xB31208", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xB30DF0", Offset = "0xB30DF0", VA = "0xB30DF0")]
			[DebuggerHidden]
			public <UpdateUIPing>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xB310B4", Offset = "0xB310B4", VA = "0xB310B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016C9")]
			[Address(RVA = "0xB310B8", Offset = "0xB310B8", VA = "0xB310B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016CB")]
			[Address(RVA = "0xB311C8", Offset = "0xB311C8", VA = "0xB311C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDetailsController PlayerDetailManager;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerListCell CellPrototype;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text PlayerCountsText;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text UpdateStatusText;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, PlayerListCell> playerCellList;

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xB30248", Offset = "0xB30248", VA = "0xB30248")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xB30274", Offset = "0xB30274", VA = "0xB30274", Slot = "27")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xB2FDD0", Offset = "0xB2FDD0", VA = "0xB2FDD0")]
		public void SelectPlayer(Player player)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xB3075C", Offset = "0xB3075C", VA = "0xB3075C", Slot = "41")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xB30984", Offset = "0xB30984", VA = "0xB30984", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xB30B40", Offset = "0xB30B40", VA = "0xB30B40", Slot = "46")]
		public override void OnPlayerPropertiesUpdate(Player target, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xB30C74", Offset = "0xB30C74", VA = "0xB30C74", Slot = "42")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xB30684", Offset = "0xB30684", VA = "0xB30684")]
		private void RefreshCount()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xB30D88", Offset = "0xB30D88", VA = "0xB30D88")]
		[IteratorStateMachine(typeof(<UpdateUIPing>d__13))]
		private IEnumerator UpdateUIPing()
		{
			return null;
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xB30E18", Offset = "0xB30E18", VA = "0xB30E18")]
		public void ResetList()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xB31038", Offset = "0xB31038", VA = "0xB31038")]
		public PlayerListView()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class PropertyCell : MonoBehaviour
	{
		[Token(Token = "0x2000434")]
		[CompilerGenerated]
		private sealed class <UpdateUIPing>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400154A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PropertyCell <>4__this;

			[Token(Token = "0x170001EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016D7")]
				[Address(RVA = "0xB314FC", Offset = "0xB314FC", VA = "0xB314FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016D9")]
				[Address(RVA = "0xB31544", Offset = "0xB31544", VA = "0xB31544", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016D4")]
			[Address(RVA = "0xB312C4", Offset = "0xB312C4", VA = "0xB312C4")]
			[DebuggerHidden]
			public <UpdateUIPing>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xB31414", Offset = "0xB31414", VA = "0xB31414", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016D6")]
			[Address(RVA = "0xB31418", Offset = "0xB31418", VA = "0xB31418", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016D8")]
			[Address(RVA = "0xB31504", Offset = "0xB31504", VA = "0xB31504", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000435")]
		[CompilerGenerated]
		private sealed class <Add>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400154B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400154C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400154D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PropertyCell <>4__this;

			[Token(Token = "0x170001F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016DD")]
				[Address(RVA = "0xB31690", Offset = "0xB31690", VA = "0xB31690", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016DF")]
				[Address(RVA = "0xB316D8", Offset = "0xB316D8", VA = "0xB316D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xB31354", Offset = "0xB31354", VA = "0xB31354")]
			[DebuggerHidden]
			public <Add>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60016DB")]
			[Address(RVA = "0xB3154C", Offset = "0xB3154C", VA = "0xB3154C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016DC")]
			[Address(RVA = "0xB31550", Offset = "0xB31550", VA = "0xB31550", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xB31698", Offset = "0xB31698", VA = "0xB31698", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000436")]
		[CompilerGenerated]
		private sealed class <Remove>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400154E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400154F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PropertyCell <>4__this;

			[Token(Token = "0x170001F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016E3")]
				[Address(RVA = "0xB31830", Offset = "0xB31830", VA = "0xB31830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016E5")]
				[Address(RVA = "0xB31878", Offset = "0xB31878", VA = "0xB31878", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xB313E4", Offset = "0xB313E4", VA = "0xB313E4")]
			[DebuggerHidden]
			public <Remove>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xB316E0", Offset = "0xB316E0", VA = "0xB316E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xB316E4", Offset = "0xB316E4", VA = "0xB316E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xB31838", Offset = "0xB31838", VA = "0xB31838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text PropertyText;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text ValueText;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image isUpdatedFlag;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayoutElement LayoutElement;

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xB2E7DC", Offset = "0xB2E7DC", VA = "0xB2E7DC")]
		public void UpdateInfo(string value)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xB2E204", Offset = "0xB2E204", VA = "0xB2E204")]
		public void AddToList(string property, string value, bool animate = false)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xB31278", Offset = "0xB31278", VA = "0xB31278")]
		public void RemoveFromList()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xB31210", Offset = "0xB31210", VA = "0xB31210")]
		[IteratorStateMachine(typeof(<UpdateUIPing>d__7))]
		private IEnumerator UpdateUIPing()
		{
			return null;
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xB312EC", Offset = "0xB312EC", VA = "0xB312EC")]
		[IteratorStateMachine(typeof(<Add>d__8))]
		private IEnumerator Add()
		{
			return null;
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xB3137C", Offset = "0xB3137C", VA = "0xB3137C")]
		[IteratorStateMachine(typeof(<Remove>d__9))]
		private IEnumerator Remove()
		{
			return null;
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xB3140C", Offset = "0xB3140C", VA = "0xB3140C")]
		public PropertyCell()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class RegionListCell : MonoBehaviour
	{
		[Token(Token = "0x2000438")]
		[CompilerGenerated]
		private sealed class <AnimateAddition>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400155A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RegionListCell <>4__this;

			[Token(Token = "0x170001F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016EF")]
				[Address(RVA = "0xB31CE4", Offset = "0xB31CE4", VA = "0xB31CE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016F1")]
				[Address(RVA = "0xB31D2C", Offset = "0xB31D2C", VA = "0xB31D2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xB31A84", Offset = "0xB31A84", VA = "0xB31A84")]
			[DebuggerHidden]
			public <AnimateAddition>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xB31B44", Offset = "0xB31B44", VA = "0xB31B44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016EE")]
			[Address(RVA = "0xB31B48", Offset = "0xB31B48", VA = "0xB31B48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016F0")]
			[Address(RVA = "0xB31CEC", Offset = "0xB31CEC", VA = "0xB31CEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000439")]
		[CompilerGenerated]
		private sealed class <AnimateRemove>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400155B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400155C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400155D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RegionListCell <>4__this;

			[Token(Token = "0x170001F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016F5")]
				[Address(RVA = "0xB31E84", Offset = "0xB31E84", VA = "0xB31E84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016F7")]
				[Address(RVA = "0xB31ECC", Offset = "0xB31ECC", VA = "0xB31ECC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xB31B14", Offset = "0xB31B14", VA = "0xB31B14")]
			[DebuggerHidden]
			public <AnimateRemove>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60016F3")]
			[Address(RVA = "0xB31D34", Offset = "0xB31D34", VA = "0xB31D34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016F4")]
			[Address(RVA = "0xB31D38", Offset = "0xB31D38", VA = "0xB31D38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016F6")]
			[Address(RVA = "0xB31E8C", Offset = "0xB31E8C", VA = "0xB31E8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RegionListView ListManager;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text CodeText;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text IpText;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text PingText;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayoutElement LayoutElement;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _index;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Region info;

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xB31880", Offset = "0xB31880", VA = "0xB31880")]
		public void RefreshInfo(Region info)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xB31964", Offset = "0xB31964", VA = "0xB31964")]
		public void AddToList(Region info, int index)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xB319D0", Offset = "0xB319D0", VA = "0xB319D0")]
		public void RemoveFromList()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xB31A1C", Offset = "0xB31A1C", VA = "0xB31A1C")]
		[IteratorStateMachine(typeof(<AnimateAddition>d__10))]
		private IEnumerator AnimateAddition()
		{
			return null;
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xB31AAC", Offset = "0xB31AAC", VA = "0xB31AAC")]
		[IteratorStateMachine(typeof(<AnimateRemove>d__11))]
		private IEnumerator AnimateRemove()
		{
			return null;
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xB31B3C", Offset = "0xB31B3C", VA = "0xB31B3C")]
		public RegionListCell()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class RegionListView : MonoBehaviour
	{
		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RegionListCell CellPrototype;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, RegionListCell> regionCellList;

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xB31ED4", Offset = "0xB31ED4", VA = "0xB31ED4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xB32128", Offset = "0xB32128", VA = "0xB32128")]
		public void OnRegionListUpdate(List<Region> regionList)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xB31F08", Offset = "0xB31F08", VA = "0xB31F08")]
		public void ResetList()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xB3245C", Offset = "0xB3245C", VA = "0xB3245C")]
		public RegionListView()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class RoomListCell : MonoBehaviour
	{
		[Token(Token = "0x200043C")]
		[CompilerGenerated]
		private sealed class <AnimateAddition>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomListCell <>4__this;

			[Token(Token = "0x170001F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001706")]
				[Address(RVA = "0xB32A84", Offset = "0xB32A84", VA = "0xB32A84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001708")]
				[Address(RVA = "0xB32ACC", Offset = "0xB32ACC", VA = "0xB32ACC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001703")]
			[Address(RVA = "0xB32880", Offset = "0xB32880", VA = "0xB32880")]
			[DebuggerHidden]
			public <AnimateAddition>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001704")]
			[Address(RVA = "0xB32940", Offset = "0xB32940", VA = "0xB32940", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001705")]
			[Address(RVA = "0xB32944", Offset = "0xB32944", VA = "0xB32944", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001707")]
			[Address(RVA = "0xB32A8C", Offset = "0xB32A8C", VA = "0xB32A8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043D")]
		[CompilerGenerated]
		private sealed class <AnimateRemove>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400156A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400156C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomListCell <>4__this;

			[Token(Token = "0x170001FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600170C")]
				[Address(RVA = "0xB32C24", Offset = "0xB32C24", VA = "0xB32C24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600170E")]
				[Address(RVA = "0xB32C6C", Offset = "0xB32C6C", VA = "0xB32C6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001709")]
			[Address(RVA = "0xB32910", Offset = "0xB32910", VA = "0xB32910")]
			[DebuggerHidden]
			public <AnimateRemove>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600170A")]
			[Address(RVA = "0xB32AD4", Offset = "0xB32AD4", VA = "0xB32AD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600170B")]
			[Address(RVA = "0xB32AD8", Offset = "0xB32AD8", VA = "0xB32AD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600170D")]
			[Address(RVA = "0xB32C2C", Offset = "0xB32C2C", VA = "0xB32C2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomListView ListManager;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text RoomNameText;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text PlayerCountText;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text OpenText;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup JoinButtonCanvasGroup;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayoutElement LayoutElement;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RoomInfo info;

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xB324D8", Offset = "0xB324D8", VA = "0xB324D8")]
		public void RefreshInfo(RoomInfo info)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xB326B8", Offset = "0xB326B8", VA = "0xB326B8")]
		public void OnJoinRoomButtonClick()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xB32734", Offset = "0xB32734", VA = "0xB32734")]
		public void AddToList(RoomInfo info, bool animate = false)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xB327CC", Offset = "0xB327CC", VA = "0xB327CC")]
		public void RemoveFromList()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xB32818", Offset = "0xB32818", VA = "0xB32818")]
		[IteratorStateMachine(typeof(<AnimateAddition>d__11))]
		private IEnumerator AnimateAddition()
		{
			return null;
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xB328A8", Offset = "0xB328A8", VA = "0xB328A8")]
		[IteratorStateMachine(typeof(<AnimateRemove>d__12))]
		private IEnumerator AnimateRemove()
		{
			return null;
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xB32938", Offset = "0xB32938", VA = "0xB32938")]
		public RoomListCell()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class RoomListView : MonoBehaviourPunCallbacks
	{
		[Serializable]
		[Token(Token = "0x200043F")]
		public class OnJoinRoomEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001717")]
			[Address(RVA = "0xB337A8", Offset = "0xB337A8", VA = "0xB337A8")]
			public OnJoinRoomEvent()
			{
			}
		}

		[Token(Token = "0x2000440")]
		[CompilerGenerated]
		private sealed class <clearStatus>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomListView <>4__this;

			[Token(Token = "0x170001FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600171B")]
				[Address(RVA = "0xB338C8", Offset = "0xB338C8", VA = "0xB338C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600171D")]
				[Address(RVA = "0xB33910", Offset = "0xB33910", VA = "0xB33910", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001718")]
			[Address(RVA = "0xB334E4", Offset = "0xB334E4", VA = "0xB334E4")]
			[DebuggerHidden]
			public <clearStatus>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001719")]
			[Address(RVA = "0xB337F0", Offset = "0xB337F0", VA = "0xB337F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600171A")]
			[Address(RVA = "0xB337F4", Offset = "0xB337F4", VA = "0xB337F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600171C")]
			[Address(RVA = "0xB338D0", Offset = "0xB338D0", VA = "0xB338D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnJoinRoomEvent OnJoinRoom;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RoomListCell CellPrototype;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text UpdateStatusText;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text ContentFeedback;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputField LobbyNameInputField;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InputField SqlQueryInputField;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _firstUpdate;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, RoomListCell> roomCellList;

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xB32C74", Offset = "0xB32C74", VA = "0xB32C74", Slot = "27")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xB326DC", Offset = "0xB326DC", VA = "0xB326DC")]
		public void OnRoomCellJoinButtonClick(string roomName)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xB32F58", Offset = "0xB32F58", VA = "0xB32F58", Slot = "39")]
		public override void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xB3347C", Offset = "0xB3347C", VA = "0xB3347C")]
		[IteratorStateMachine(typeof(<clearStatus>d__12))]
		private IEnumerator clearStatus()
		{
			return null;
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xB3350C", Offset = "0xB3350C", VA = "0xB3350C")]
		public void OnJoinedLobbyCallBack()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xB33578", Offset = "0xB33578", VA = "0xB33578")]
		public void GetRoomList()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xB32D30", Offset = "0xB32D30", VA = "0xB32D30")]
		public void ResetList()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xB33724", Offset = "0xB33724", VA = "0xB33724")]
		public RoomListView()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class UserIdField : MonoBehaviour
	{
		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PunCockpit Manager;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField PropertyValueInput;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _cache;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool registered;

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xB33918", Offset = "0xB33918", VA = "0xB33918")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xB339DC", Offset = "0xB339DC", VA = "0xB339DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xB33A88", Offset = "0xB33A88", VA = "0xB33A88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xB33ADC", Offset = "0xB33ADC", VA = "0xB33ADC")]
		public void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xB33B5C", Offset = "0xB33B5C", VA = "0xB33B5C")]
		public void SubmitForm(string value)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xB33B7C", Offset = "0xB33B7C", VA = "0xB33B7C")]
		public UserIdField()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class AppVersionProperty : MonoBehaviour
	{
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Text;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cache;

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xB33B84", Offset = "0xB33B84", VA = "0xB33B84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xB33C34", Offset = "0xB33C34", VA = "0xB33C34")]
		public AppVersionProperty()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class BestRegionInPrefsProperty : PropertyListenerBase
	{
		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _cache;

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xB33C3C", Offset = "0xB33C3C", VA = "0xB33C3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xB33D60", Offset = "0xB33D60", VA = "0xB33D60")]
		public BestRegionInPrefsProperty()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class CloudRegionProperty : PropertyListenerBase
	{
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _cache;

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xB33DD4", Offset = "0xB33DD4", VA = "0xB33DD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xB33ED4", Offset = "0xB33ED4", VA = "0xB33ED4")]
		public CloudRegionProperty()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class CountOfPlayersInRoomProperty : PropertyListenerBase
	{
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xB33ED8", Offset = "0xB33ED8", VA = "0xB33ED8")]
		private void Update()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xB34020", Offset = "0xB34020", VA = "0xB34020")]
		public CountOfPlayersInRoomProperty()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class CountOfPlayersOnMasterProperty : PropertyListenerBase
	{
		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xB3402C", Offset = "0xB3402C", VA = "0xB3402C")]
		private void Update()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xB34174", Offset = "0xB34174", VA = "0xB34174")]
		public CountOfPlayersOnMasterProperty()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class CountOfPlayersProperty : PropertyListenerBase
	{
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xB34180", Offset = "0xB34180", VA = "0xB34180")]
		private void Update()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xB342C8", Offset = "0xB342C8", VA = "0xB342C8")]
		public CountOfPlayersProperty()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class CountOfRoomsProperty : PropertyListenerBase
	{
		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xB342D4", Offset = "0xB342D4", VA = "0xB342D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xB3441C", Offset = "0xB3441C", VA = "0xB3441C")]
		public CountOfRoomsProperty()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class CurrentRoomAutoCleanupProperty : PropertyListenerBase
	{
		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xB34428", Offset = "0xB34428", VA = "0xB34428")]
		private void Update()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xB3460C", Offset = "0xB3460C", VA = "0xB3460C")]
		public CurrentRoomAutoCleanupProperty()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class CurrentRoomEmptyRoomTtlProperty : PropertyListenerBase
	{
		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xB34618", Offset = "0xB34618", VA = "0xB34618")]
		private void Update()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xB34768", Offset = "0xB34768", VA = "0xB34768")]
		public CurrentRoomEmptyRoomTtlProperty()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class CurrentRoomExpectedUsersProperty : PropertyListenerBase
	{
		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] _cache;

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xB34774", Offset = "0xB34774", VA = "0xB34774")]
		private void Update()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xB3495C", Offset = "0xB3495C", VA = "0xB3495C")]
		public CurrentRoomExpectedUsersProperty()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class CurrentRoomIsOfflineProperty : PropertyListenerBase
	{
		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xB34960", Offset = "0xB34960", VA = "0xB34960")]
		private void Update()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xB34B20", Offset = "0xB34B20", VA = "0xB34B20")]
		public CurrentRoomIsOfflineProperty()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class CurrentRoomIsOpenProperty : PropertyListenerBase
	{
		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xB34B2C", Offset = "0xB34B2C", VA = "0xB34B2C")]
		private void Update()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xB34CEC", Offset = "0xB34CEC", VA = "0xB34CEC")]
		public CurrentRoomIsOpenProperty()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class CurrentRoomIsVisibleProperty : PropertyListenerBase
	{
		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xB34CF8", Offset = "0xB34CF8", VA = "0xB34CF8")]
		private void Update()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xB34EB8", Offset = "0xB34EB8", VA = "0xB34EB8")]
		public CurrentRoomIsVisibleProperty()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class CurrentRoomMasterClientIdProperty : PropertyListenerBase
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xB34EC4", Offset = "0xB34EC4", VA = "0xB34EC4")]
		private void Update()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xB35014", Offset = "0xB35014", VA = "0xB35014")]
		public CurrentRoomMasterClientIdProperty()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class CurrentRoomMaxPlayersProperty : PropertyListenerBase
	{
		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xB35020", Offset = "0xB35020", VA = "0xB35020")]
		private void Update()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xB35170", Offset = "0xB35170", VA = "0xB35170")]
		public CurrentRoomMaxPlayersProperty()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class CurrentRoomNameProperty : PropertyListenerBase
	{
		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _cache;

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xB3517C", Offset = "0xB3517C", VA = "0xB3517C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xB352C8", Offset = "0xB352C8", VA = "0xB352C8")]
		public CurrentRoomNameProperty()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class CurrentRoomPlayerCountProperty : PropertyListenerBase
	{
		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xB352CC", Offset = "0xB352CC", VA = "0xB352CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xB35428", Offset = "0xB35428", VA = "0xB35428")]
		public CurrentRoomPlayerCountProperty()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class CurrentRoomPlayerTtlProperty : PropertyListenerBase
	{
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xB35434", Offset = "0xB35434", VA = "0xB35434")]
		private void Update()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xB35584", Offset = "0xB35584", VA = "0xB35584")]
		public CurrentRoomPlayerTtlProperty()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class CurrentRoomPropertiesListedInLobbyProperty : PropertyListenerBase
	{
		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] _cache;

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xB35590", Offset = "0xB35590", VA = "0xB35590")]
		private void Update()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xB3574C", Offset = "0xB3574C", VA = "0xB3574C")]
		public CurrentRoomPropertiesListedInLobbyProperty()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class GameVersionProperty : MonoBehaviour
	{
		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Text;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cache;

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xB35750", Offset = "0xB35750", VA = "0xB35750")]
		private void Update()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xB3585C", Offset = "0xB3585C", VA = "0xB3585C")]
		public GameVersionProperty()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class IsConnectedAndReadyProperty : PropertyListenerBase
	{
		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xB35864", Offset = "0xB35864", VA = "0xB35864")]
		private void Update()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xB359A0", Offset = "0xB359A0", VA = "0xB359A0")]
		public IsConnectedAndReadyProperty()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class IsConnectedProperty : PropertyListenerBase
	{
		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xB359AC", Offset = "0xB359AC", VA = "0xB359AC")]
		private void Update()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xB35AE8", Offset = "0xB35AE8", VA = "0xB35AE8")]
		public IsConnectedProperty()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class OfflineModeProperty : PropertyListenerBase
	{
		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xB35AF4", Offset = "0xB35AF4", VA = "0xB35AF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xB35CF0", Offset = "0xB35CF0", VA = "0xB35CF0")]
		public OfflineModeProperty()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class PingProperty : PropertyListenerBase
	{
		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _cache;

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xB35CFC", Offset = "0xB35CFC", VA = "0xB35CFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xB35E6C", Offset = "0xB35E6C", VA = "0xB35E6C")]
		public PingProperty()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class PropertyListenerBase : MonoBehaviour
	{
		[Token(Token = "0x200045B")]
		[CompilerGenerated]
		private sealed class <FadeOut>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic image;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PropertyListenerBase <>4__this;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Color <c>5__3;

			[Token(Token = "0x170001FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600175A")]
				[Address(RVA = "0xB3600C", Offset = "0xB3600C", VA = "0xB3600C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000200")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600175C")]
				[Address(RVA = "0xB36054", Offset = "0xB36054", VA = "0xB36054", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001757")]
			[Address(RVA = "0xB35EEC", Offset = "0xB35EEC", VA = "0xB35EEC")]
			[DebuggerHidden]
			public <FadeOut>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001758")]
			[Address(RVA = "0xB35F14", Offset = "0xB35F14", VA = "0xB35F14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001759")]
			[Address(RVA = "0xB35F18", Offset = "0xB35F18", VA = "0xB35F18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600175B")]
			[Address(RVA = "0xB36014", Offset = "0xB36014", VA = "0xB36014", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Graphic UpdateIndicator;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private YieldInstruction fadeInstruction;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float Duration;

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xB33D3C", Offset = "0xB33D3C", VA = "0xB33D3C")]
		public void OnValueChanged()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xB35E78", Offset = "0xB35E78", VA = "0xB35E78")]
		[IteratorStateMachine(typeof(<FadeOut>d__4))]
		private IEnumerator FadeOut(Graphic image)
		{
			return null;
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xB33D64", Offset = "0xB33D64", VA = "0xB33D64")]
		public PropertyListenerBase()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class ServerAddressProperty : MonoBehaviour
	{
		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Text;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cache;

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xB3605C", Offset = "0xB3605C", VA = "0xB3605C")]
		private void Update()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xB36170", Offset = "0xB36170", VA = "0xB36170")]
		public ServerAddressProperty()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class ServerProperty : PropertyListenerBase
	{
		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text Text;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ServerConnection _cache;

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xB36178", Offset = "0xB36178", VA = "0xB36178")]
		private void Update()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xB36278", Offset = "0xB36278", VA = "0xB36278")]
		public ServerProperty()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class PunCockpitEmbed : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x200045F")]
		[CompilerGenerated]
		private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PunCockpitEmbed <>4__this;

			[Token(Token = "0x17000201")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001768")]
				[Address(RVA = "0xB36738", Offset = "0xB36738", VA = "0xB36738", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000202")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600176A")]
				[Address(RVA = "0xB36780", Offset = "0xB36780", VA = "0xB36780", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001765")]
			[Address(RVA = "0xB3636C", Offset = "0xB3636C", VA = "0xB3636C")]
			[DebuggerHidden]
			public <Start>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001766")]
			[Address(RVA = "0xB36518", Offset = "0xB36518", VA = "0xB36518", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001767")]
			[Address(RVA = "0xB3651C", Offset = "0xB3651C", VA = "0xB3651C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001769")]
			[Address(RVA = "0xB36740", Offset = "0xB36740", VA = "0xB36740", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string PunCockpit_scene;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool EmbeddCockpit;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string CockpitGameTitle;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject LoadingIndicator;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ConnectAndJoinRandom AutoConnect;

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xB3627C", Offset = "0xB3627C", VA = "0xB3627C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xB36304", Offset = "0xB36304", VA = "0xB36304")]
		[IteratorStateMachine(typeof(<Start>d__6))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xB36394", Offset = "0xB36394", VA = "0xB36394", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xB3649C", Offset = "0xB3649C", VA = "0xB3649C")]
		public PunCockpitEmbed()
		{
		}
	}
}
namespace Photon.Pun.Demo.Cockpit.Forms
{
	[Token(Token = "0x2000460")]
	public class ConnectToRegionUIForm : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000461")]
		public class OnSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0xB368D0", Offset = "0xB368D0", VA = "0xB368D0")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField RegionInput;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dropdown RegionListInput;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xB36788", Offset = "0xB36788", VA = "0xB36788")]
		public void Start()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xB3678C", Offset = "0xB3678C", VA = "0xB3678C")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xB36824", Offset = "0xB36824", VA = "0xB36824")]
		public void SetRegionFromDropDown(int index)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xB367C8", Offset = "0xB367C8", VA = "0xB367C8")]
		public void SubmitForm()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xB368C8", Offset = "0xB368C8", VA = "0xB368C8")]
		public ConnectToRegionUIForm()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class CreateRoomUiForm : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000463")]
		public class OnSubmitEvent : UnityEvent<string, string, LobbyType, string[]>
		{
			[Token(Token = "0x6001775")]
			[Address(RVA = "0xB36B70", Offset = "0xB36B70", VA = "0xB36B70")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField RoomNameInput;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField LobbyNameInput;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputField ExpectedUsersInput;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dropdown LobbyTypeInput;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xB36918", Offset = "0xB36918", VA = "0xB36918")]
		public void Start()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xB3691C", Offset = "0xB3691C", VA = "0xB3691C")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xB36958", Offset = "0xB36958", VA = "0xB36958")]
		public void SubmitForm()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xB36B68", Offset = "0xB36B68", VA = "0xB36B68")]
		public CreateRoomUiForm()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public class LoadLevelUIForm : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000466")]
		public class OnSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x600177D")]
			[Address(RVA = "0xB36CE0", Offset = "0xB36CE0", VA = "0xB36CE0")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xB36C3C", Offset = "0xB36C3C", VA = "0xB36C3C")]
		public void Start()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xB36C40", Offset = "0xB36C40", VA = "0xB36C40")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xB36C7C", Offset = "0xB36C7C", VA = "0xB36C7C")]
		public void SubmitForm()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xB36CD8", Offset = "0xB36CD8", VA = "0xB36CD8")]
		public LoadLevelUIForm()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class SetRoomCustomPropertyUIForm : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000468")]
		public class OnSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0xB36DCC", Offset = "0xB36DCC", VA = "0xB36DCC")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField PropertyValueInput;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xB36D28", Offset = "0xB36D28", VA = "0xB36D28")]
		public void Start()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xB36D2C", Offset = "0xB36D2C", VA = "0xB36D2C")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xB36D68", Offset = "0xB36D68", VA = "0xB36D68")]
		public void SubmitForm()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xB36DC4", Offset = "0xB36DC4", VA = "0xB36DC4")]
		public SetRoomCustomPropertyUIForm()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class UserIdUiForm : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200046A")]
		public class OnSubmitEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001787")]
			[Address(RVA = "0xB36F5C", Offset = "0xB36F5C", VA = "0xB36F5C")]
			public OnSubmitEvent()
			{
			}
		}

		[Token(Token = "0x40015CF")]
		public const string UserIdPlayerPref = "PunUserId";

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputField idInput;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnSubmitEvent OnSubmit;

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xB36E14", Offset = "0xB36E14", VA = "0xB36E14")]
		public void Start()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xB36E90", Offset = "0xB36E90", VA = "0xB36E90")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xB36ECC", Offset = "0xB36ECC", VA = "0xB36ECC")]
		public void SubmitForm()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xB36F54", Offset = "0xB36F54", VA = "0xB36F54")]
		public UserIdUiForm()
		{
		}
	}
}
namespace Photon.Pun.Demo.PunBasics
{
	[Token(Token = "0x200046B")]
	public class CameraWork : MonoBehaviour
	{
		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The distance in the local x-z plane to the target")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("The height we want the camera to be above the target")]
		[SerializeField]
		private float height;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The Smooth time lag for the height of the camera.")]
		[SerializeField]
		private float heightSmoothLag;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Allow the camera to be offseted vertically from the target, for example giving more view of the sceneray and less ground.")]
		[SerializeField]
		private Vector3 centerOffset;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Set this as false if a component of a prefab being instanciated by Photon Network, and manually call OnStartFollowing() when and if needed.")]
		[SerializeField]
		private bool followOnStart;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform cameraTransform;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isFollowing;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float heightVelocity;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float targetHeight;

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xB36FA4", Offset = "0xB36FA4", VA = "0xB36FA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xB3700C", Offset = "0xB3700C", VA = "0xB3700C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xB36FB4", Offset = "0xB36FB4", VA = "0xB36FB4")]
		public void OnStartFollowing()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xB3709C", Offset = "0xB3709C", VA = "0xB3709C")]
		private void Apply()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xB372D8", Offset = "0xB372D8", VA = "0xB372D8")]
		private void Cut()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xB37308", Offset = "0xB37308", VA = "0xB37308")]
		private void SetUpRotation(Vector3 centerPos)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xB37488", Offset = "0xB37488", VA = "0xB37488")]
		public CameraWork()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class GameManager : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameManager Instance;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject instance;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("The prefab to use for representing the player")]
		private GameObject playerPrefab;

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xB3750C", Offset = "0xB3750C", VA = "0xB3750C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xB37854", Offset = "0xB37854", VA = "0xB37854")]
		private void Update()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xB37884", Offset = "0xB37884", VA = "0xB37884", Slot = "41")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xB37C10", Offset = "0xB37C10", VA = "0xB37C10", Slot = "42")]
		public override void OnPlayerLeftRoom(Player other)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xB37DB8", Offset = "0xB37DB8", VA = "0xB37DB8", Slot = "30")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xB37E20", Offset = "0xB37E20", VA = "0xB37E20")]
		public void LeaveRoom()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xB3787C", Offset = "0xB3787C", VA = "0xB3787C")]
		public void QuitApplication()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xB37A2C", Offset = "0xB37A2C", VA = "0xB37A2C")]
		private void LoadArena()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xB37E74", Offset = "0xB37E74", VA = "0xB37E74")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class Launcher : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("The Ui Panel to let the user enter name, connect and play")]
		private GameObject controlPanel;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The Ui Text to inform the user about the connection progress")]
		[SerializeField]
		private Text feedbackText;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The maximum number of players per room")]
		[SerializeField]
		private byte maxPlayersPerRoom;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The UI Loader Anime")]
		[SerializeField]
		private LoaderAnime loaderAnime;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isConnecting;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string gameVersion;

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xB37E7C", Offset = "0xB37E7C", VA = "0xB37E7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xB37F58", Offset = "0xB37F58", VA = "0xB37F58")]
		public void Connect()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xB38108", Offset = "0xB38108", VA = "0xB38108")]
		private void LogFeedback(string message)
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xB381E0", Offset = "0xB381E0", VA = "0xB381E0", Slot = "44")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xB382B8", Offset = "0xB382B8", VA = "0xB382B8", Slot = "43")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xB383C0", Offset = "0xB383C0", VA = "0xB383C0", Slot = "37")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xB384F8", Offset = "0xB384F8", VA = "0xB384F8", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xB38694", Offset = "0xB38694", VA = "0xB38694")]
		public Launcher()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class LoaderAnime : MonoBehaviour
	{
		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Angular Speed in degrees per seconds")]
		public float speed;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Radius os the loader")]
		public float radius;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject particles;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _offset;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _particleTransform;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isAnimating;

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xB386EC", Offset = "0xB386EC", VA = "0xB386EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xB38768", Offset = "0xB38768", VA = "0xB38768")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xB380D0", Offset = "0xB380D0", VA = "0xB380D0")]
		public void StartLoaderAnimation()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xB384D8", Offset = "0xB384D8", VA = "0xB384D8")]
		public void StopLoaderAnimation()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xB3890C", Offset = "0xB3890C", VA = "0xB3890C")]
		public LoaderAnime()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class PlayerAnimatorManager : MonoBehaviourPun
	{
		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float directionDampTime;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xB38920", Offset = "0xB38920", VA = "0xB38920")]
		private void Start()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xB38970", Offset = "0xB38970", VA = "0xB38970")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xB38BA4", Offset = "0xB38BA4", VA = "0xB38BA4")]
		public PlayerAnimatorManager()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class PlayerManager : MonoBehaviourPunCallbacks, IPunObservable
	{
		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The current Health of our player")]
		public float Health;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("The local player instance. Use this to know if the local player is represented in the Scene")]
		public static GameObject LocalPlayerInstance;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("The Player's UI GameObject Prefab")]
		private GameObject playerUiPrefab;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The Beams GameObject to control")]
		[SerializeField]
		private GameObject beams;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool IsFiring;

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xB38BB4", Offset = "0xB38BB4", VA = "0xB38BB4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xB38CF4", Offset = "0xB38CF4", VA = "0xB38CF4")]
		public void Start()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xB38F40", Offset = "0xB38F40", VA = "0xB38F40", Slot = "28")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xB38FF0", Offset = "0xB38FF0", VA = "0xB38FF0")]
		public void Update()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xB391A8", Offset = "0xB391A8", VA = "0xB391A8")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xB39244", Offset = "0xB39244", VA = "0xB39244")]
		public void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xB392F4", Offset = "0xB392F4", VA = "0xB392F4")]
		private void CalledOnLevelWasLoaded(int level)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xB3944C", Offset = "0xB3944C", VA = "0xB3944C")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode loadingMode)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xB390F0", Offset = "0xB390F0", VA = "0xB390F0")]
		private void ProcessInputs()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xB3947C", Offset = "0xB3947C", VA = "0xB3947C", Slot = "52")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xB395A4", Offset = "0xB395A4", VA = "0xB395A4")]
		public PlayerManager()
		{
		}
	}
	[Token(Token = "0x2000471")]
	[RequireComponent(typeof(InputField))]
	public class PlayerNameInputField : MonoBehaviour
	{
		[Token(Token = "0x40015F2")]
		private const string playerNamePrefKey = "PlayerName";

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xB395B4", Offset = "0xB395B4", VA = "0xB395B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xB396E0", Offset = "0xB396E0", VA = "0xB396E0")]
		public void SetPlayerName(string value)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xB397B8", Offset = "0xB397B8", VA = "0xB397B8")]
		public PlayerNameInputField()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class PlayerUI : MonoBehaviour
	{
		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Pixel offset from the player target")]
		private Vector3 screenOffset;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("UI Text to display Player's Name")]
		[SerializeField]
		private Text playerNameText;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Tooltip("UI Slider to display Player's Health")]
		private Slider playerHealthSlider;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerManager target;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float characterControllerHeight;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform targetTransform;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Renderer targetRenderer;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 targetPosition;

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xB397C0", Offset = "0xB397C0", VA = "0xB397C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xB39858", Offset = "0xB39858", VA = "0xB39858")]
		private void Update()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xB39950", Offset = "0xB39950", VA = "0xB39950")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xB39A94", Offset = "0xB39A94", VA = "0xB39A94")]
		public void SetTarget(PlayerManager _target)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xB39C90", Offset = "0xB39C90", VA = "0xB39C90")]
		public PlayerUI()
		{
		}
	}
}
namespace Photon.Pun.Demo.SlotRacer
{
	[Token(Token = "0x2000473")]
	[RequireComponent(typeof(SplineWalker))]
	public class PlayerControl : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x2000474")]
		[CompilerGenerated]
		private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerControl <>4__this;

			[Token(Token = "0x17000203")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017C6")]
				[Address(RVA = "0xB3A65C", Offset = "0xB3A65C", VA = "0xB3A65C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000204")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017C8")]
				[Address(RVA = "0xB3A6A4", Offset = "0xB3A6A4", VA = "0xB3A6A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017C3")]
			[Address(RVA = "0xB3A23C", Offset = "0xB3A23C", VA = "0xB3A23C")]
			[DebuggerHidden]
			public <Start>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60017C4")]
			[Address(RVA = "0xB3A540", Offset = "0xB3A540", VA = "0xB3A540", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017C5")]
			[Address(RVA = "0xB3A544", Offset = "0xB3A544", VA = "0xB3A544", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017C7")]
			[Address(RVA = "0xB3A664", Offset = "0xB3A664", VA = "0xB3A664", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] CarPrefabs;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaximumSpeed;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Drag;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float CurrentSpeed;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float CurrentDistance;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject CarInstance;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SplineWalker SplineWalker;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_firstTake;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_input;

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xB39CA8", Offset = "0xB39CA8", VA = "0xB39CA8", Slot = "4")]
		private void Photon.Pun.IPunObservable.OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xB39E20", Offset = "0xB39E20", VA = "0xB39E20")]
		private void SetupCarOnTrack(int gridStartIndex)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xB3A17C", Offset = "0xB3A17C", VA = "0xB3A17C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xB3A1D4", Offset = "0xB3A1D4", VA = "0xB3A1D4")]
		[IteratorStateMachine(typeof(<Start>d__12))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xB3A264", Offset = "0xB3A264", VA = "0xB3A264")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xB3A2C0", Offset = "0xB3A2C0", VA = "0xB3A2C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xB3A4F0", Offset = "0xB3A4F0", VA = "0xB3A4F0")]
		public PlayerControl()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class SlotLanes : MonoBehaviour
	{
		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SlotLanes Instance;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplinePosition[] GridPositions;

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xB3A6AC", Offset = "0xB3A6AC", VA = "0xB3A6AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xB3A6F8", Offset = "0xB3A6F8", VA = "0xB3A6F8")]
		public SlotLanes()
		{
		}
	}
	[Token(Token = "0x2000476")]
	[ExecuteInEditMode]
	public class SlotRacerSplashScreen : MonoBehaviour
	{
		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string PunCockpit_scene;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text WarningText;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject SplashScreen;

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xB3A700", Offset = "0xB3A700", VA = "0xB3A700")]
		private void Start()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xB3A780", Offset = "0xB3A780", VA = "0xB3A780")]
		public void Update()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xB3A784", Offset = "0xB3A784", VA = "0xB3A784")]
		public SlotRacerSplashScreen()
		{
		}
	}
}
namespace Photon.Pun.Demo.SlotRacer.Utils
{
	[Token(Token = "0x2000477")]
	public static class Bezier
	{
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xB3A7D4", Offset = "0xB3A7D4", VA = "0xB3A7D4")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xB3A848", Offset = "0xB3A848", VA = "0xB3A848")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xB3A8A4", Offset = "0xB3A8A4", VA = "0xB3A8A4")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xB3A950", Offset = "0xB3A950", VA = "0xB3A950")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000478")]
	public enum BezierControlPointMode
	{
		[Token(Token = "0x400160D")]
		Free,
		[Token(Token = "0x400160E")]
		Aligned,
		[Token(Token = "0x400160F")]
		Mirrored
	}
	[Token(Token = "0x2000479")]
	public class BezierCurve : MonoBehaviour
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] points;

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xB3AA00", Offset = "0xB3AA00", VA = "0xB3AA00")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xB3AAA0", Offset = "0xB3AAA0", VA = "0xB3AAA0")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xB3AB84", Offset = "0xB3AB84", VA = "0xB3AB84")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xB3AC58", Offset = "0xB3AC58", VA = "0xB3AC58")]
		public void Reset()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xB3AD14", Offset = "0xB3AD14", VA = "0xB3AD14")]
		public BezierCurve()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class BezierSpline : MonoBehaviour
	{
		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3[] points;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float[] lengths;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float[] lengthsTime;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float TotalLength;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BezierControlPointMode[] modes;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool loop;

		[Token(Token = "0x17000205")]
		public bool Loop
		{
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0xB3AD1C", Offset = "0xB3AD1C", VA = "0xB3AD1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0xB3AD24", Offset = "0xB3AD24", VA = "0xB3AD24")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public int ControlPointCount
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0xB3AFCC", Offset = "0xB3AFCC", VA = "0xB3AFCC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000207")]
		public int CurveCount
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xB3B57C", Offset = "0xB3B57C", VA = "0xB3B57C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xB3AFE8", Offset = "0xB3AFE8", VA = "0xB3AFE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xB3B1A8", Offset = "0xB3B1A8", VA = "0xB3B1A8")]
		public Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xB3AD8C", Offset = "0xB3AD8C", VA = "0xB3AD8C")]
		public void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xB3B4B8", Offset = "0xB3B4B8", VA = "0xB3B4B8")]
		public BezierControlPointMode GetControlPointMode(int index)
		{
			return default(BezierControlPointMode);
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xB3B504", Offset = "0xB3B504", VA = "0xB3B504")]
		public void SetControlPointMode(int index, BezierControlPointMode mode)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xB3B1E4", Offset = "0xB3B1E4", VA = "0xB3B1E4")]
		private void EnforceMode(int index)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xB3B5B4", Offset = "0xB3B5B4", VA = "0xB3B5B4")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xB3B724", Offset = "0xB3B724", VA = "0xB3B724")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xB3B8D0", Offset = "0xB3B8D0", VA = "0xB3B8D0")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xB3B9A4", Offset = "0xB3B9A4", VA = "0xB3B9A4")]
		public void AddCurve()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xB3BBDC", Offset = "0xB3BBDC", VA = "0xB3BBDC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xB3AFEC", Offset = "0xB3AFEC", VA = "0xB3AFEC")]
		public void ComputeLengths()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xB3BCBC", Offset = "0xB3BCBC", VA = "0xB3BCBC")]
		public Vector3 GetPositionAtDistance(float distance, bool reverse = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xB3BE1C", Offset = "0xB3BE1C", VA = "0xB3BE1C")]
		public BezierSpline()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class Line : MonoBehaviour
	{
		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 p0;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 p1;

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xB3BE24", Offset = "0xB3BE24", VA = "0xB3BE24")]
		public Line()
		{
		}
	}
	[Token(Token = "0x200047C")]
	[ExecuteInEditMode]
	public class SplinePosition : MonoBehaviour
	{
		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline Spline;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool reverse;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool lookForward;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float currentDistance;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float currentClampedDistance;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float LastDistance;

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xB3BE2C", Offset = "0xB3BE2C", VA = "0xB3BE2C")]
		public void SetPositionOnSpline(float position)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xB3BF3C", Offset = "0xB3BF3C", VA = "0xB3BF3C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xB3BE34", Offset = "0xB3BE34", VA = "0xB3BE34")]
		private void ExecutePositioning()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xB3BF40", Offset = "0xB3BF40", VA = "0xB3BF40")]
		public SplinePosition()
		{
		}
	}
	[Token(Token = "0x200047D")]
	[ExecuteInEditMode]
	public class SplineWalker : MonoBehaviour
	{
		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Speed;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool lookForward;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool reverse;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float progress;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float currentDistance;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float currentClampedDistance;

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xB3A4E8", Offset = "0xB3A4E8", VA = "0xB3A4E8")]
		public void SetPositionOnSpline(float position)
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xB3BF48", Offset = "0xB3BF48", VA = "0xB3BF48")]
		private void Update()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xB3A060", Offset = "0xB3A060", VA = "0xB3A060")]
		public void ExecutePositioning()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xB3BF80", Offset = "0xB3BF80", VA = "0xB3BF80")]
		public SplineWalker()
		{
		}
	}
}
namespace Photon.Pun.Demo.Procedural
{
	[Token(Token = "0x200047E")]
	public class Block : MonoBehaviour
	{
		[Token(Token = "0x17000208")]
		public int BlockId
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0xB3BF88", Offset = "0xB3BF88", VA = "0xB3BF88")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0xB3BF90", Offset = "0xB3BF90", VA = "0xB3BF90")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public int ClusterId
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0xB3BF98", Offset = "0xB3BF98", VA = "0xB3BF98")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0xB3BFA0", Offset = "0xB3BFA0", VA = "0xB3BFA0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xB3BFA8", Offset = "0xB3BFA8", VA = "0xB3BFA8")]
		public Block()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class Cluster : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertiesKey;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, float> propertiesValue;

		[Token(Token = "0x1700020A")]
		public int ClusterId
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xB3BFB0", Offset = "0xB3BFB0", VA = "0xB3BFB0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0xB3BFB8", Offset = "0xB3BFB8", VA = "0xB3BFB8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public Dictionary<int, GameObject> Blocks
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xB3BFC0", Offset = "0xB3BFC0", VA = "0xB3BFC0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0xB3BFC8", Offset = "0xB3BFC8", VA = "0xB3BFC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xB3BFD0", Offset = "0xB3BFD0", VA = "0xB3BFD0")]
		public void Awake()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xB3C088", Offset = "0xB3C088", VA = "0xB3C088")]
		private void Start()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xB3C0FC", Offset = "0xB3C0FC", VA = "0xB3C0FC")]
		public void AddBlock(int blockId, GameObject block)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xB3C164", Offset = "0xB3C164", VA = "0xB3C164")]
		public void DestroyCluster()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xB3C418", Offset = "0xB3C418", VA = "0xB3C418")]
		public void DecreaseBlockHeight(int blockId)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xB3C5B8", Offset = "0xB3C5B8", VA = "0xB3C5B8")]
		public void IncreaseBlockHeight(int blockId)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xB3C644", Offset = "0xB3C644", VA = "0xB3C644")]
		public void SetBlockHeightRemote(int blockId, float height)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xB3C4A4", Offset = "0xB3C4A4", VA = "0xB3C4A4")]
		private void SetBlockHeightLocal(int blockId, float height)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xB3C748", Offset = "0xB3C748", VA = "0xB3C748")]
		private void UpdateRoomProperties(int blockId, float height)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xB3C348", Offset = "0xB3C348", VA = "0xB3C348")]
		private void RemoveClusterFromRoomProperties()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xB3C850", Offset = "0xB3C850", VA = "0xB3C850", Slot = "45")]
		public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xB3CA98", Offset = "0xB3CA98", VA = "0xB3CA98")]
		public Cluster()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public class IngameControlPanel : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isSeedValid;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputField seedInputField;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dropdown worldSizeDropdown;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dropdown clusterSizeDropdown;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dropdown worldTypeDropdown;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button generateWorldButton;

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xB3CAA0", Offset = "0xB3CAA0", VA = "0xB3CAA0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xB3CFC8", Offset = "0xB3CFC8", VA = "0xB3CFC8", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xB3D0B8", Offset = "0xB3D0B8", VA = "0xB3D0B8", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xB3D13C", Offset = "0xB3D13C", VA = "0xB3D13C", Slot = "45")]
		public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xB3D578", Offset = "0xB3D578", VA = "0xB3D578")]
		public IngameControlPanel()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class ProceduralController : MonoBehaviour
	{
		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xB3DA50", Offset = "0xB3DA50", VA = "0xB3DA50")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xB3DA6C", Offset = "0xB3DA6C", VA = "0xB3DA6C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xB3E154", Offset = "0xB3E154", VA = "0xB3E154")]
		public ProceduralController()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public enum WorldSize
	{
		[Token(Token = "0x4001638")]
		Tiny = 0x10,
		[Token(Token = "0x4001639")]
		Small = 0x20,
		[Token(Token = "0x400163A")]
		Medium = 0x40,
		[Token(Token = "0x400163B")]
		Large = 0x80
	}
	[Token(Token = "0x2000484")]
	public enum WorldType
	{
		[Token(Token = "0x400163D")]
		Flat = 4,
		[Token(Token = "0x400163E")]
		Standard = 8,
		[Token(Token = "0x400163F")]
		Mountain = 0x10
	}
	[Token(Token = "0x2000485")]
	public enum ClusterSize
	{
		[Token(Token = "0x4001641")]
		Small = 4,
		[Token(Token = "0x4001642")]
		Medium = 0x10,
		[Token(Token = "0x4001643")]
		Large = 0x40
	}
	[Token(Token = "0x2000486")]
	public class WorldGenerator : MonoBehaviour
	{
		[Token(Token = "0x2000487")]
		[CompilerGenerated]
		private sealed class <GenerateWorld>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WorldGenerator <>4__this;

			[Token(Token = "0x4001652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<int, GameObject>.ValueCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x17000211")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600182B")]
				[Address(RVA = "0xB3F664", Offset = "0xB3F664", VA = "0xB3F664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000212")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600182D")]
				[Address(RVA = "0xB3F6AC", Offset = "0xB3F6AC", VA = "0xB3F6AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001827")]
			[Address(RVA = "0xB3E480", Offset = "0xB3E480", VA = "0xB3E480")]
			[DebuggerHidden]
			public <GenerateWorld>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001828")]
			[Address(RVA = "0xB3E55C", Offset = "0xB3E55C", VA = "0xB3E55C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001829")]
			[Address(RVA = "0xB3E578", Offset = "0xB3E578", VA = "0xB3E578", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600182A")]
			[Address(RVA = "0xB3F614", Offset = "0xB3F614", VA = "0xB3F614")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600182C")]
			[Address(RVA = "0xB3F66C", Offset = "0xB3F66C", VA = "0xB3F66C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SeedPropertiesKey;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string WorldSizePropertiesKey;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ClusterSizePropertiesKey;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string WorldTypePropertiesKey;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WorldGenerator instance;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<int, GameObject> clusterList;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material[] WorldMaterials;

		[Token(Token = "0x1700020C")]
		public static WorldGenerator Instance
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0xB3D480", Offset = "0xB3D480", VA = "0xB3D480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		public int Seed
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0xB3E15C", Offset = "0xB3E15C", VA = "0xB3E15C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001818")]
			[Address(RVA = "0xB3E164", Offset = "0xB3E164", VA = "0xB3E164")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public WorldSize WorldSize
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xB3E16C", Offset = "0xB3E16C", VA = "0xB3E16C")]
			[CompilerGenerated]
			get
			{
				return default(WorldSize);
			}
			[Token(Token = "0x600181A")]
			[Address(RVA = "0xB3E174", Offset = "0xB3E174", VA = "0xB3E174")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public ClusterSize ClusterSize
		{
			[Token(Token = "0x600181B")]
			[Address(RVA = "0xB3E17C", Offset = "0xB3E17C", VA = "0xB3E17C")]
			[CompilerGenerated]
			get
			{
				return default(ClusterSize);
			}
			[Token(Token = "0x600181C")]
			[Address(RVA = "0xB3E184", Offset = "0xB3E184", VA = "0xB3E184")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public WorldType WorldType
		{
			[Token(Token = "0x600181D")]
			[Address(RVA = "0xB3E18C", Offset = "0xB3E18C", VA = "0xB3E18C")]
			[CompilerGenerated]
			get
			{
				return default(WorldType);
			}
			[Token(Token = "0x600181E")]
			[Address(RVA = "0xB3E194", Offset = "0xB3E194", VA = "0xB3E194")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xB3E19C", Offset = "0xB3E19C", VA = "0xB3E19C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xB3D544", Offset = "0xB3D544", VA = "0xB3D544")]
		public void CreateWorld()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xB3E224", Offset = "0xB3E224", VA = "0xB3E224")]
		private void DestroyWorld()
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xB3D718", Offset = "0xB3D718", VA = "0xB3D718")]
		public void ConfirmAndUpdateProperties()
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xB3DF8C", Offset = "0xB3DF8C", VA = "0xB3DF8C")]
		public void DecreaseBlockHeight(int clusterId, int blockId)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xB3E070", Offset = "0xB3E070", VA = "0xB3E070")]
		public void IncreaseBlockHeight(int clusterId, int blockId)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xB3E418", Offset = "0xB3E418", VA = "0xB3E418")]
		[IteratorStateMachine(typeof(<GenerateWorld>d__31))]
		private IEnumerator GenerateWorld()
		{
			return null;
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xB3E4A8", Offset = "0xB3E4A8", VA = "0xB3E4A8")]
		public WorldGenerator()
		{
		}
	}
}
namespace Photon.Pun.Demo.Hub
{
	[Token(Token = "0x2000488")]
	public class DemoHubManager : MonoBehaviour
	{
		[Token(Token = "0x2000489")]
		private struct DemoData
		{
			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Title;

			[Token(Token = "0x400165C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Description;

			[Token(Token = "0x400165D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Scene;

			[Token(Token = "0x400165E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string TutorialLink;

			[Token(Token = "0x400165F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string DocLink;
		}

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text TitleText;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text DescriptionText;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject OpenSceneButton;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject OpenTutorialLinkButton;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject OpenDocLinkButton;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string MainDemoWebLink;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, DemoData> _data;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string currentSelection;

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xB3F6B4", Offset = "0xB3F6B4", VA = "0xB3F6B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xB3FF6C", Offset = "0xB3FF6C", VA = "0xB3FF6C")]
		public void SelectDemo(string Reference)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xB400F8", Offset = "0xB400F8", VA = "0xB400F8")]
		public void OpenScene()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xB401F0", Offset = "0xB401F0", VA = "0xB401F0")]
		public void OpenTutorialLink()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xB402C0", Offset = "0xB402C0", VA = "0xB402C0")]
		public void OpenDocLink()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xB40390", Offset = "0xB40390", VA = "0xB40390")]
		public void OpenMainWebLink()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xB4039C", Offset = "0xB4039C", VA = "0xB4039C")]
		public DemoHubManager()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class ToDemoHubButton : MonoBehaviour
	{
		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ToDemoHubButton instance;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x17000213")]
		public static ToDemoHubButton Instance
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0xB4143C", Offset = "0xB4143C", VA = "0xB4143C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xB41574", Offset = "0xB41574", VA = "0xB41574")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xB4164C", Offset = "0xB4164C", VA = "0xB4164C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xB416E0", Offset = "0xB416E0", VA = "0xB416E0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xB417E0", Offset = "0xB417E0", VA = "0xB417E0")]
		public void BackToHub()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xB41860", Offset = "0xB41860", VA = "0xB41860")]
		public ToDemoHubButton()
		{
		}
	}
}
namespace Photon.Pun.Demo.Asteroids
{
	[Token(Token = "0x200048B")]
	public class AsteroidsGame
	{
		[Token(Token = "0x4001662")]
		public const float ASTEROIDS_MIN_SPAWN_TIME = 5f;

		[Token(Token = "0x4001663")]
		public const float ASTEROIDS_MAX_SPAWN_TIME = 10f;

		[Token(Token = "0x4001664")]
		public const float PLAYER_RESPAWN_TIME = 4f;

		[Token(Token = "0x4001665")]
		public const int PLAYER_MAX_LIVES = 3;

		[Token(Token = "0x4001666")]
		public const string PLAYER_LIVES = "PlayerLives";

		[Token(Token = "0x4001667")]
		public const string PLAYER_READY = "IsPlayerReady";

		[Token(Token = "0x4001668")]
		public const string PLAYER_LOADED_LEVEL = "PlayerLoadedLevel";

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xB41868", Offset = "0xB41868", VA = "0xB41868")]
		public static Color GetColor(int colorChoice)
		{
			return default(Color);
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xB418A8", Offset = "0xB418A8", VA = "0xB418A8")]
		public AsteroidsGame()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class Asteroid : MonoBehaviour
	{
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isLargeAsteroid;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isDestroyed;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonView photonView;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody rigidbody;

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xB418B0", Offset = "0xB418B0", VA = "0xB418B0")]
		public void Awake()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xB41A80", Offset = "0xB41A80", VA = "0xB41A80")]
		public void Update()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xB41BB0", Offset = "0xB41BB0", VA = "0xB41BB0")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xB41DAC", Offset = "0xB41DAC", VA = "0xB41DAC")]
		private void DestroyAsteroidGlobally()
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xB42294", Offset = "0xB42294", VA = "0xB42294")]
		private void DestroyAsteroidLocally()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xB422F8", Offset = "0xB422F8", VA = "0xB422F8")]
		public Asteroid()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class AsteroidsGameManager : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x200048E")]
		[CompilerGenerated]
		private sealed class <SpawnAsteroid>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000214")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001856")]
				[Address(RVA = "0xB43460", Offset = "0xB43460", VA = "0xB43460", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000215")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001858")]
				[Address(RVA = "0xB434A8", Offset = "0xB434A8", VA = "0xB434A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001853")]
			[Address(RVA = "0xB42608", Offset = "0xB42608", VA = "0xB42608")]
			[DebuggerHidden]
			public <SpawnAsteroid>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001854")]
			[Address(RVA = "0xB42EDC", Offset = "0xB42EDC", VA = "0xB42EDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001855")]
			[Address(RVA = "0xB42EE0", Offset = "0xB42EE0", VA = "0xB42EE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001857")]
			[Address(RVA = "0xB43468", Offset = "0xB43468", VA = "0xB43468", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048F")]
		[CompilerGenerated]
		private sealed class <EndOfGame>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsteroidsGameManager <>4__this;

			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string winner;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int score;

			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timer>5__2;

			[Token(Token = "0x17000216")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600185C")]
				[Address(RVA = "0xB4366C", Offset = "0xB4366C", VA = "0xB4366C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000217")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600185E")]
				[Address(RVA = "0xB436B4", Offset = "0xB436B4", VA = "0xB436B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001859")]
			[Address(RVA = "0xB426AC", Offset = "0xB426AC", VA = "0xB426AC")]
			[DebuggerHidden]
			public <EndOfGame>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600185A")]
			[Address(RVA = "0xB434B0", Offset = "0xB434B0", VA = "0xB434B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600185B")]
			[Address(RVA = "0xB434B4", Offset = "0xB434B4", VA = "0xB434B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600185D")]
			[Address(RVA = "0xB43674", Offset = "0xB43674", VA = "0xB43674", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AsteroidsGameManager Instance;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text InfoText;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] AsteroidPrefabs;

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xB42300", Offset = "0xB42300", VA = "0xB42300")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xB4234C", Offset = "0xB4234C", VA = "0xB4234C", Slot = "27")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xB423D8", Offset = "0xB423D8", VA = "0xB423D8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xB4251C", Offset = "0xB4251C", VA = "0xB4251C", Slot = "28")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xB425A8", Offset = "0xB425A8", VA = "0xB425A8")]
		[IteratorStateMachine(typeof(<SpawnAsteroid>d__7))]
		private IEnumerator SpawnAsteroid()
		{
			return null;
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xB42630", Offset = "0xB42630", VA = "0xB42630")]
		[IteratorStateMachine(typeof(<EndOfGame>d__8))]
		private IEnumerator EndOfGame(string winner, int score)
		{
			return null;
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xB426D4", Offset = "0xB426D4", VA = "0xB426D4", Slot = "37")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xB4273C", Offset = "0xB4273C", VA = "0xB4273C", Slot = "30")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xB4278C", Offset = "0xB4278C", VA = "0xB4278C", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xB4282C", Offset = "0xB4282C", VA = "0xB4282C", Slot = "42")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xB42A60", Offset = "0xB42A60", VA = "0xB42A60", Slot = "46")]
		public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xB42D68", Offset = "0xB42D68", VA = "0xB42D68")]
		private void StartGame()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xB42C28", Offset = "0xB42C28", VA = "0xB42C28")]
		private bool CheckAllPlayerLoadedLevel()
		{
			return default(bool);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xB42830", Offset = "0xB42830", VA = "0xB42830")]
		private void CheckEndOfGame()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xB42ED0", Offset = "0xB42ED0", VA = "0xB42ED0")]
		private void OnCountdownTimerIsExpired()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xB42ED4", Offset = "0xB42ED4", VA = "0xB42ED4")]
		public AsteroidsGameManager()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x17000218")]
		public Player Owner
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xB436BC", Offset = "0xB436BC", VA = "0xB436BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xB436C4", Offset = "0xB436C4", VA = "0xB436C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xB436CC", Offset = "0xB436CC", VA = "0xB436CC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xB4373C", Offset = "0xB4373C", VA = "0xB4373C")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xB437A8", Offset = "0xB437A8", VA = "0xB437A8")]
		public void InitializeBullet(Player owner, Vector3 originalDirection, float lag)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xB438AC", Offset = "0xB438AC", VA = "0xB438AC")]
		public Bullet()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class PlayerOverviewPanel : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject PlayerOverviewEntryPrefab;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, GameObject> playerListEntries;

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xB438B4", Offset = "0xB438B4", VA = "0xB438B4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xB43BFC", Offset = "0xB43BFC", VA = "0xB43BFC", Slot = "42")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xB43CC4", Offset = "0xB43CC4", VA = "0xB43CC4", Slot = "46")]
		public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xB43E1C", Offset = "0xB43E1C", VA = "0xB43E1C")]
		public PlayerOverviewPanel()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class Spaceship : MonoBehaviour
	{
		[Token(Token = "0x2000493")]
		[CompilerGenerated]
		private sealed class <WaitForRespawn>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400168A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400168B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Spaceship <>4__this;

			[Token(Token = "0x17000219")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001876")]
				[Address(RVA = "0xB45188", Offset = "0xB45188", VA = "0xB45188", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001878")]
				[Address(RVA = "0xB451D0", Offset = "0xB451D0", VA = "0xB451D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001873")]
			[Address(RVA = "0xB44A7C", Offset = "0xB44A7C", VA = "0xB44A7C")]
			[DebuggerHidden]
			public <WaitForRespawn>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001874")]
			[Address(RVA = "0xB45064", Offset = "0xB45064", VA = "0xB45064", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001875")]
			[Address(RVA = "0xB45068", Offset = "0xB45068", VA = "0xB45068", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001877")]
			[Address(RVA = "0xB45190", Offset = "0xB45190", VA = "0xB45190", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RotationSpeed;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MovementSpeed;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxSpeed;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem Destruction;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject EngineTrail;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject BulletPrefab;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhotonView photonView;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider collider;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Renderer renderer;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float rotation;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float acceleration;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float shootingTimer;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool controllable;

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xB43E24", Offset = "0xB43E24", VA = "0xB43E24")]
		public void Awake()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xB43EF0", Offset = "0xB43EF0", VA = "0xB43EF0")]
		public void Start()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xB44010", Offset = "0xB44010", VA = "0xB44010")]
		public void Update()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xB44248", Offset = "0xB44248", VA = "0xB44248")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xB44A14", Offset = "0xB44A14", VA = "0xB44A14")]
		[IteratorStateMachine(typeof(<WaitForRespawn>d__18))]
		private IEnumerator WaitForRespawn()
		{
			return null;
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xB44AA4", Offset = "0xB44AA4", VA = "0xB44AA4")]
		[PunRPC]
		public void DestroySpaceship()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xB44DCC", Offset = "0xB44DCC", VA = "0xB44DCC")]
		[PunRPC]
		public void Fire(Vector3 position, Quaternion rotation, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xB44FD0", Offset = "0xB44FD0", VA = "0xB44FD0")]
		[PunRPC]
		public void RespawnSpaceship()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xB445C8", Offset = "0xB445C8", VA = "0xB445C8")]
		private void CheckExitScreen()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xB4503C", Offset = "0xB4503C", VA = "0xB4503C")]
		public Spaceship()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class LobbyMainPanel : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Login Panel")]
		public GameObject LoginPanel;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputField PlayerNameInput;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Selection Panel")]
		public GameObject SelectionPanel;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Create Room Panel")]
		public GameObject CreateRoomPanel;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputField RoomNameInputField;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InputField MaxPlayersInputField;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Join Random Room Panel")]
		public GameObject JoinRandomRoomPanel;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Room List Panel")]
		public GameObject RoomListPanel;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject RoomListContent;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject RoomListEntryPrefab;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Inside Room Panel")]
		public GameObject InsideRoomPanel;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Button StartGameButton;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject PlayerListEntryPrefab;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<string, RoomInfo> cachedRoomList;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<string, GameObject> roomListEntries;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<int, GameObject> playerListEntries;

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xB451D8", Offset = "0xB451D8", VA = "0xB451D8")]
		public void Awake()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xB4532C", Offset = "0xB4532C", VA = "0xB4532C", Slot = "44")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xB454B0", Offset = "0xB454B0", VA = "0xB454B0", Slot = "39")]
		public override void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xB45C3C", Offset = "0xB45C3C", VA = "0xB45C3C", Slot = "36")]
		public override void OnLeftLobby()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xB45C94", Offset = "0xB45C94", VA = "0xB45C94", Slot = "32")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xB45CC0", Offset = "0xB45CC0", VA = "0xB45CC0", Slot = "33")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xB45CEC", Offset = "0xB45CEC", VA = "0xB45CEC", Slot = "43")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xB45DE0", Offset = "0xB45DE0", VA = "0xB45DE0", Slot = "40")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xB46424", Offset = "0xB46424", VA = "0xB46424", Slot = "30")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xB46608", Offset = "0xB46608", VA = "0xB46608", Slot = "41")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xB467C4", Offset = "0xB467C4", VA = "0xB467C4", Slot = "42")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xB468B8", Offset = "0xB468B8", VA = "0xB468B8", Slot = "31")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xB46970", Offset = "0xB46970", VA = "0xB46970", Slot = "46")]
		public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xB46B24", Offset = "0xB46B24", VA = "0xB46B24")]
		public void OnBackButtonClicked()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xB46BB4", Offset = "0xB46BB4", VA = "0xB46BB4")]
		public void OnCreateRoomButtonClicked()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xB46D28", Offset = "0xB46D28", VA = "0xB46D28")]
		public void OnJoinRandomRoomButtonClicked()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xB46D9C", Offset = "0xB46D9C", VA = "0xB46D9C")]
		public void OnLeaveGameButtonClicked()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xB46DF0", Offset = "0xB46DF0", VA = "0xB46DF0")]
		public void OnLoginButtonClicked()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xB46EE4", Offset = "0xB46EE4", VA = "0xB46EE4")]
		public void OnRoomListButtonClicked()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xB46F74", Offset = "0xB46F74", VA = "0xB46F74")]
		public void OnStartGameButtonClicked()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xB462C8", Offset = "0xB462C8", VA = "0xB462C8")]
		private bool CheckPlayersReady()
		{
			return default(bool);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xB454E0", Offset = "0xB454E0", VA = "0xB454E0")]
		private void ClearRoomListView()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xB47010", Offset = "0xB47010", VA = "0xB47010")]
		public void LocalPlayerPropertiesUpdated()
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xB45358", Offset = "0xB45358", VA = "0xB45358")]
		private void SetActivePanel(string activePanel)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xB456A4", Offset = "0xB456A4", VA = "0xB456A4")]
		private void UpdateCachedRoomList(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xB4591C", Offset = "0xB4591C", VA = "0xB4591C")]
		private void UpdateRoomListView()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xB47110", Offset = "0xB47110", VA = "0xB47110")]
		public LobbyMainPanel()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class LobbyTopPanel : MonoBehaviour
	{
		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string connectionStatusMessage;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("UI References")]
		public Text ConnectionStatusText;

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xB47118", Offset = "0xB47118", VA = "0xB47118")]
		public void Update()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xB471DC", Offset = "0xB471DC", VA = "0xB471DC")]
		public LobbyTopPanel()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class PlayerListEntry : MonoBehaviour
	{
		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("UI References")]
		public Text PlayerNameText;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image PlayerColorImage;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button PlayerReadyButton;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image PlayerReadyImage;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int ownerId;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool isPlayerReady;

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xB4722C", Offset = "0xB4722C", VA = "0xB4722C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xB472AC", Offset = "0xB472AC", VA = "0xB472AC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xB474F4", Offset = "0xB474F4", VA = "0xB474F4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xB461E4", Offset = "0xB461E4", VA = "0xB461E4")]
		public void Initialize(int playerId, string playerName)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xB47574", Offset = "0xB47574", VA = "0xB47574")]
		private void OnPlayerNumberingChanged()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xB46218", Offset = "0xB46218", VA = "0xB46218")]
		public void SetPlayerReady(bool playerReady)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xB4769C", Offset = "0xB4769C", VA = "0xB4769C")]
		public PlayerListEntry()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class RoomListEntry : MonoBehaviour
	{
		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text RoomNameText;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text RoomPlayersText;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button JoinRoomButton;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string roomName;

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xB47828", Offset = "0xB47828", VA = "0xB47828")]
		public void Start()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xB47048", Offset = "0xB47048", VA = "0xB47048")]
		public void Initialize(string name, byte currentPlayers, byte maxPlayers)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xB478BC", Offset = "0xB478BC", VA = "0xB478BC")]
		public RoomListEntry()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x2000498")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AppId;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xB47958", Offset = "0xB47958", VA = "0xB47958")]
		public void Start()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xB47A70", Offset = "0xB47A70", VA = "0xB47A70")]
		public void Update()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xB47BA4", Offset = "0xB47BA4", VA = "0xB47BA4", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xB47BA8", Offset = "0xB47BA8", VA = "0xB47BA8", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xB47C2C", Offset = "0xB47C2C", VA = "0xB47C2C", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xB47D18", Offset = "0xB47D18", VA = "0xB47D18", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xB47D1C", Offset = "0xB47D1C", VA = "0xB47D1C", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xB47D20", Offset = "0xB47D20", VA = "0xB47D20", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xB47DFC", Offset = "0xB47DFC", VA = "0xB47DFC", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xB47E00", Offset = "0xB47E00", VA = "0xB47E00", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xB47E04", Offset = "0xB47E04", VA = "0xB47E04", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xB47E08", Offset = "0xB47E08", VA = "0xB47E08", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xB47E0C", Offset = "0xB47E0C", VA = "0xB47E0C", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xB47E10", Offset = "0xB47E10", VA = "0xB47E10", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xB47E14", Offset = "0xB47E14", VA = "0xB47E14", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xB47E18", Offset = "0xB47E18", VA = "0xB47E18", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xB47E80", Offset = "0xB47E80", VA = "0xB47E80", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xB47E84", Offset = "0xB47E84", VA = "0xB47E84", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xB47F38", Offset = "0xB47F38", VA = "0xB47F38", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xB47F3C", Offset = "0xB47F3C", VA = "0xB47F3C")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xB48060", Offset = "0xB48060", VA = "0xB48060")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x2000499")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xB48068", Offset = "0xB48068", VA = "0xB48068")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xB48170", Offset = "0xB48170", VA = "0xB48170")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xB48178", Offset = "0xB48178", VA = "0xB48178")]
		private void Start()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xB481E4", Offset = "0xB481E4", VA = "0xB481E4")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x200049B")]
	[RequireComponent(typeof(Text))]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xB481EC", Offset = "0xB481EC", VA = "0xB481EC")]
		public void Awake()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xB4823C", Offset = "0xB4823C", VA = "0xB4823C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xB4826C", Offset = "0xB4826C", VA = "0xB4826C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xB4829C", Offset = "0xB4829C", VA = "0xB4829C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xB4834C", Offset = "0xB4834C", VA = "0xB4834C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xB483FC", Offset = "0xB483FC", VA = "0xB483FC")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x200049C")]
	[RequireComponent(typeof(Text))]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xB48418", Offset = "0xB48418", VA = "0xB48418")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xB4855C", Offset = "0xB4855C", VA = "0xB4855C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xB484F8", Offset = "0xB484F8", VA = "0xB484F8")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xB48604", Offset = "0xB48604", VA = "0xB48604", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xB48678", Offset = "0xB48678", VA = "0xB48678", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xB486E8", Offset = "0xB486E8", VA = "0xB486E8")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200049D")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700021B")]
		public bool Highlight
		{
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0xB4870C", Offset = "0xB4870C", VA = "0xB4870C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0xB48714", Offset = "0xB48714", VA = "0xB48714")]
			set
			{
			}
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xB48720", Offset = "0xB48720", VA = "0xB48720")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xB488C0", Offset = "0xB488C0", VA = "0xB488C0", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xB488DC", Offset = "0xB488DC", VA = "0xB488DC", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xB488F8", Offset = "0xB488F8", VA = "0xB488F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xB487CC", Offset = "0xB487CC", VA = "0xB487CC")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xB48B5C", Offset = "0xB48B5C", VA = "0xB48B5C")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700021C")]
		public bool InRange
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0xB48BD4", Offset = "0xB48BD4", VA = "0xB48BD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0xB48BDC", Offset = "0xB48BDC", VA = "0xB48BDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public bool Targeted
		{
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xB48D48", Offset = "0xB48D48", VA = "0xB48D48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xB48D50", Offset = "0xB48D50", VA = "0xB48D50")]
			set
			{
			}
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xB48D5C", Offset = "0xB48D5C", VA = "0xB48D5C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xB48BE8", Offset = "0xB48BE8", VA = "0xB48BE8")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xB48F18", Offset = "0xB48F18", VA = "0xB48F18")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200049F")]
	[RequireComponent(typeof(Rigidbody))]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700021E")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xB48F20", Offset = "0xB48F20", VA = "0xB48F20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0xB48F28", Offset = "0xB48F28", VA = "0xB48F28")]
			set
			{
			}
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xB48F44", Offset = "0xB48F44", VA = "0xB48F44", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xB49148", Offset = "0xB49148", VA = "0xB49148", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xB499DC", Offset = "0xB499DC", VA = "0xB499DC", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xB49F30", Offset = "0xB49F30", VA = "0xB49F30", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xB4A340", Offset = "0xB4A340", VA = "0xB4A340")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xB49350", Offset = "0xB49350", VA = "0xB49350")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xB4A42C", Offset = "0xB4A42C", VA = "0xB4A42C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xB4A7CC", Offset = "0xB4A7CC", VA = "0xB4A7CC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xB4A7E4", Offset = "0xB4A7E4", VA = "0xB4A7E4", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xB4A7EC", Offset = "0xB4A7EC", VA = "0xB4A7EC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20004A1")]
		public enum CrosshairState
		{
			[Token(Token = "0x40016D5")]
			Disabled,
			[Token(Token = "0x40016D6")]
			Enabled,
			[Token(Token = "0x40016D7")]
			Targeted
		}

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xB4A80C", Offset = "0xB4A80C", VA = "0xB4A80C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xB48E8C", Offset = "0xB48E8C", VA = "0xB48E8C")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xB4A86C", Offset = "0xB4A86C", VA = "0xB4A86C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xB4A8A4", Offset = "0xB4A8A4", VA = "0xB4A8A4")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xB4A8AC", Offset = "0xB4A8AC", VA = "0xB4A8AC")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xB4A958", Offset = "0xB4A958", VA = "0xB4A958")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xB4AA00", Offset = "0xB4AA00", VA = "0xB4AA00")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xB4AA08", Offset = "0xB4AA08", VA = "0xB4AA08")]
		private void Start()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xB4AAF4", Offset = "0xB4AAF4", VA = "0xB4AAF4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xB4AB00", Offset = "0xB4AB00", VA = "0xB4AB00")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xB4AB0C", Offset = "0xB4AB0C", VA = "0xB4AB0C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xB4AB14", Offset = "0xB4AB14", VA = "0xB4AB14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xB4AB64", Offset = "0xB4AB64", VA = "0xB4AB64")]
		private void Update()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xB4AF2C", Offset = "0xB4AF2C", VA = "0xB4AF2C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xB4B018", Offset = "0xB4B018", VA = "0xB4B018")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xB4AB68", Offset = "0xB4AB68", VA = "0xB4AB68")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xB4B104", Offset = "0xB4B104", VA = "0xB4B104")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20004A6")]
		public enum ContactTest
		{
			[Token(Token = "0x40016EE")]
			PerpenTest,
			[Token(Token = "0x40016EF")]
			BackwardsPress
		}

		[Token(Token = "0x40016DF")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40016E0")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700021F")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0xB4B1C4", Offset = "0xB4B1C4", VA = "0xB4B1C4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000220")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0xB4B1CC", Offset = "0xB4B1CC", VA = "0xB4B1CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000221")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0xB4B1D8", Offset = "0xB4B1D8", VA = "0xB4B1D8")]
			[CompilerGenerated]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0xB4B1E0", Offset = "0xB4B1E0", VA = "0xB4B1E0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xB4B1E8", Offset = "0xB4B1E8", VA = "0xB4B1E8", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xB4B318", Offset = "0xB4B318", VA = "0xB4B318")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xB4B508", Offset = "0xB4B508", VA = "0xB4B508", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xB4BACC", Offset = "0xB4BACC", VA = "0xB4BACC")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xB4BC10", Offset = "0xB4BC10", VA = "0xB4BC10")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xB4B9F0", Offset = "0xB4B9F0", VA = "0xB4B9F0")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xB4BD1C", Offset = "0xB4BD1C", VA = "0xB4BD1C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xB4BE28", Offset = "0xB4BE28", VA = "0xB4BE28")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xB4BEB0", Offset = "0xB4BEB0", VA = "0xB4BEB0")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x17000222")]
		public Collider Collider
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0xB4BFBC", Offset = "0xB4BFBC", VA = "0xB4BFBC", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001902")]
			[Address(RVA = "0xB4BFC4", Offset = "0xB4BFC4", VA = "0xB4BFC4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001903")]
			[Address(RVA = "0xB4BFCC", Offset = "0xB4BFCC", VA = "0xB4BFCC", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001904")]
			[Address(RVA = "0xB4BFD4", Offset = "0xB4BFD4", VA = "0xB4BFD4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001905")]
			[Address(RVA = "0xB4BFDC", Offset = "0xB4BFDC", VA = "0xB4BFDC", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xB4C02C", Offset = "0xB4C02C", VA = "0xB4C02C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xB4C0AC", Offset = "0xB4C0AC", VA = "0xB4C0AC")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000225")]
		Collider Collider
		{
			[Token(Token = "0x6001908")]
			get;
		}

		[Token(Token = "0x17000226")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001909")]
			get;
		}

		[Token(Token = "0x17000227")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600190A")]
			get;
		}
	}
	[Token(Token = "0x20004A9")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xB4B474", Offset = "0xB4B474", VA = "0xB4B474")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public enum InteractionType
	{
		[Token(Token = "0x40016F8")]
		Enter,
		[Token(Token = "0x40016F9")]
		Stay,
		[Token(Token = "0x40016FA")]
		Exit
	}
	[Token(Token = "0x20004AB")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20004AC")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x400170C")]
			Mesh,
			[Token(Token = "0x400170D")]
			Skeleton,
			[Token(Token = "0x400170E")]
			Both
		}

		[Token(Token = "0x20004AD")]
		[CompilerGenerated]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400170F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000233")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600192D")]
				[Address(RVA = "0xB4D408", Offset = "0xB4D408", VA = "0xB4D408", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000234")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600192F")]
				[Address(RVA = "0xB4D450", Offset = "0xB4D450", VA = "0xB4D450", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600192A")]
			[Address(RVA = "0xB4CA74", Offset = "0xB4CA74", VA = "0xB4CA74")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600192B")]
			[Address(RVA = "0xB4D21C", Offset = "0xB4D21C", VA = "0xB4D21C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600192C")]
			[Address(RVA = "0xB4D220", Offset = "0xB4D220", VA = "0xB4D220", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600192E")]
			[Address(RVA = "0xB4D410", Offset = "0xB4D410", VA = "0xB4D410", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016FB")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x17000228")]
		public OVRHand RightHand
		{
			[Token(Token = "0x600190C")]
			[Address(RVA = "0xB4C0B4", Offset = "0xB4C0B4", VA = "0xB4C0B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600190D")]
			[Address(RVA = "0xB4C0E0", Offset = "0xB4C0E0", VA = "0xB4C0E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0xB4C13C", Offset = "0xB4C13C", VA = "0xB4C13C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600190F")]
			[Address(RVA = "0xB4C168", Offset = "0xB4C168", VA = "0xB4C168")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0xB4C1C4", Offset = "0xB4C1C4", VA = "0xB4C1C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001911")]
			[Address(RVA = "0xB4C1F0", Offset = "0xB4C1F0", VA = "0xB4C1F0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001912")]
			[Address(RVA = "0xB4C24C", Offset = "0xB4C24C", VA = "0xB4C24C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001913")]
			[Address(RVA = "0xB4C278", Offset = "0xB4C278", VA = "0xB4C278")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001914")]
			[Address(RVA = "0xB4C2D4", Offset = "0xB4C2D4", VA = "0xB4C2D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001915")]
			[Address(RVA = "0xB4C300", Offset = "0xB4C300", VA = "0xB4C300")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001916")]
			[Address(RVA = "0xB4C35C", Offset = "0xB4C35C", VA = "0xB4C35C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001917")]
			[Address(RVA = "0xB4C384", Offset = "0xB4C384", VA = "0xB4C384")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001918")]
			[Address(RVA = "0xB4C3DC", Offset = "0xB4C3DC", VA = "0xB4C3DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001919")]
			[Address(RVA = "0xB4C404", Offset = "0xB4C404", VA = "0xB4C404")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600191A")]
			[Address(RVA = "0xB4C45C", Offset = "0xB4C45C", VA = "0xB4C45C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191B")]
			[Address(RVA = "0xB4C484", Offset = "0xB4C484", VA = "0xB4C484")]
			private set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600191C")]
			[Address(RVA = "0xB4C4DC", Offset = "0xB4C4DC", VA = "0xB4C4DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191D")]
			[Address(RVA = "0xB4C504", Offset = "0xB4C504", VA = "0xB4C504")]
			private set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600191E")]
			[Address(RVA = "0xB4C55C", Offset = "0xB4C55C", VA = "0xB4C55C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191F")]
			[Address(RVA = "0xB4C584", Offset = "0xB4C584", VA = "0xB4C584")]
			private set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001920")]
			[Address(RVA = "0xB4C5DC", Offset = "0xB4C5DC", VA = "0xB4C5DC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001921")]
			[Address(RVA = "0xB4C624", Offset = "0xB4C624", VA = "0xB4C624")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xB4C670", Offset = "0xB4C670", VA = "0xB4C670")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xB4C9F8", Offset = "0xB4C9F8", VA = "0xB4C9F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xB4C990", Offset = "0xB4C990", VA = "0xB4C990")]
		[IteratorStateMachine(typeof(<FindSkeletonVisualGameObjects>d__52))]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xB4CA9C", Offset = "0xB4CA9C", VA = "0xB4CA9C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xB4CB60", Offset = "0xB4CB60", VA = "0xB4CB60")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xB4CD30", Offset = "0xB4CD30", VA = "0xB4CD30")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xB4CF90", Offset = "0xB4CF90", VA = "0xB4CF90")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xB4D0F0", Offset = "0xB4D0F0", VA = "0xB4D0F0")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004AF")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001941")]
			[Address(RVA = "0xB4DAA0", Offset = "0xB4DAA0", VA = "0xB4DAA0")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000235")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0xB4D458", Offset = "0xB4D458", VA = "0xB4D458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0xB4D460", Offset = "0xB4D460", VA = "0xB4D460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0xB4D468", Offset = "0xB4D468", VA = "0xB4D468")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0xB4D470", Offset = "0xB4D470", VA = "0xB4D470", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0xB4D478", Offset = "0xB4D478", VA = "0xB4D478")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001935")]
			[Address(RVA = "0xB4D528", Offset = "0xB4D528", VA = "0xB4D528")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xB4D5F4", Offset = "0xB4D5F4", VA = "0xB4D5F4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001938")]
			[Address(RVA = "0xB4D6A4", Offset = "0xB4D6A4", VA = "0xB4D6A4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x600193A")]
			[Address(RVA = "0xB4D770", Offset = "0xB4D770", VA = "0xB4D770")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600193B")]
			[Address(RVA = "0xB4D820", Offset = "0xB4D820", VA = "0xB4D820")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xB4D5D8", Offset = "0xB4D5D8", VA = "0xB4D5D8", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xB4D754", Offset = "0xB4D754", VA = "0xB4D754", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xB4D8D0", Offset = "0xB4D8D0", VA = "0xB4D8D0", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600193D")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xB4B2C4", Offset = "0xB4B2C4", VA = "0xB4B2C4", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xB4D99C", Offset = "0xB4D99C", VA = "0xB4D99C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xB4BFB4", Offset = "0xB4BFB4", VA = "0xB4BFB4")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x400171A")]
		None,
		[Token(Token = "0x400171B")]
		Proximity,
		[Token(Token = "0x400171C")]
		Contact,
		[Token(Token = "0x400171D")]
		Action
	}
	[Token(Token = "0x20004B1")]
	public enum InteractableState
	{
		[Token(Token = "0x400171F")]
		Default,
		[Token(Token = "0x4001720")]
		ProximityState,
		[Token(Token = "0x4001721")]
		ContactState,
		[Token(Token = "0x4001722")]
		ActionState
	}
	[Token(Token = "0x20004B2")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xB4BB7C", Offset = "0xB4BB7C", VA = "0xB4BB7C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000239")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xB4DAE8", Offset = "0xB4DAE8", VA = "0xB4DAE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xB4D8EC", Offset = "0xB4D8EC", VA = "0xB4D8EC")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xB4D9F0", Offset = "0xB4D9F0", VA = "0xB4D9F0")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xB4DB40", Offset = "0xB4DB40", VA = "0xB4DB40")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20004B5")]
		[CompilerGenerated]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400172B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400172C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400172D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x400172E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x400172F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700023A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001950")]
				[Address(RVA = "0xB4E254", Offset = "0xB4E254", VA = "0xB4E254", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001952")]
				[Address(RVA = "0xB4E29C", Offset = "0xB4E29C", VA = "0xB4E29C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600194C")]
			[Address(RVA = "0xB4DCC4", Offset = "0xB4DCC4", VA = "0xB4DCC4")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600194D")]
			[Address(RVA = "0xB4DE00", Offset = "0xB4DE00", VA = "0xB4DE00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600194E")]
			[Address(RVA = "0xB4DE1C", Offset = "0xB4DE1C", VA = "0xB4DE1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600194F")]
			[Address(RVA = "0xB4E204", Offset = "0xB4E204", VA = "0xB4E204")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001951")]
			[Address(RVA = "0xB4E25C", Offset = "0xB4E25C", VA = "0xB4E25C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xB4DBD4", Offset = "0xB4DBD4", VA = "0xB4DBD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xB4DC40", Offset = "0xB4DC40", VA = "0xB4DC40")]
		[IteratorStateMachine(typeof(<AttachToolsToHands>d__3))]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xB4DCEC", Offset = "0xB4DCEC", VA = "0xB4DCEC")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xB4DDF8", Offset = "0xB4DDF8", VA = "0xB4DDF8")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700023C")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0xB4E2A4", Offset = "0xB4E2A4", VA = "0xB4E2A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xB4E3F0", Offset = "0xB4E3F0", VA = "0xB4E3F0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xB4E48C", Offset = "0xB4E48C", VA = "0xB4E48C")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xB4E528", Offset = "0xB4E528", VA = "0xB4E528")]
		private void Update()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xB4E7C4", Offset = "0xB4E7C4", VA = "0xB4E7C4")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xB4E800", Offset = "0xB4E800", VA = "0xB4E800")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xB4EABC", Offset = "0xB4EABC", VA = "0xB4EABC")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xB4ECC4", Offset = "0xB4ECC4", VA = "0xB4ECC4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20004B8")]
		[CompilerGenerated]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000241")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600196C")]
				[Address(RVA = "0xB4FDB0", Offset = "0xB4FDB0", VA = "0xB4FDB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000242")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600196E")]
				[Address(RVA = "0xB4FDF8", Offset = "0xB4FDF8", VA = "0xB4FDF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001969")]
			[Address(RVA = "0xB4EF08", Offset = "0xB4EF08", VA = "0xB4EF08")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600196A")]
			[Address(RVA = "0xB4F94C", Offset = "0xB4F94C", VA = "0xB4F94C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600196B")]
			[Address(RVA = "0xB4F950", Offset = "0xB4F950", VA = "0xB4F950", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600196D")]
			[Address(RVA = "0xB4FDB8", Offset = "0xB4FDB8", VA = "0xB4FDB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400173B")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700023D")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0xB4ED9C", Offset = "0xB4ED9C", VA = "0xB4ED9C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700023E")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600195C")]
			[Address(RVA = "0xB4EDA4", Offset = "0xB4EDA4", VA = "0xB4EDA4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700023F")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0xB4EDAC", Offset = "0xB4EDAC", VA = "0xB4EDAC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000240")]
		public override bool EnableState
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xB4EDB4", Offset = "0xB4EDB4", VA = "0xB4EDB4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600195F")]
			[Address(RVA = "0xB4EDDC", Offset = "0xB4EDDC", VA = "0xB4EDDC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xB4EE0C", Offset = "0xB4EE0C", VA = "0xB4EE0C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xB4EEA0", Offset = "0xB4EEA0", VA = "0xB4EEA0")]
		[IteratorStateMachine(typeof(<AttachTriggerLogic>d__21))]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xB4EF30", Offset = "0xB4EF30", VA = "0xB4EF30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xB4F1B0", Offset = "0xB4F1B0", VA = "0xB4F1B0")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xB4F36C", Offset = "0xB4F36C", VA = "0xB4F36C")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xB4F454", Offset = "0xB4F454", VA = "0xB4F454", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xB4F7D0", Offset = "0xB4F7D0", VA = "0xB4F7D0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xB4F7D4", Offset = "0xB4F7D4", VA = "0xB4F7D4", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xB4F7D8", Offset = "0xB4F7D8", VA = "0xB4F7D8")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x17000243")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0xB4FE00", Offset = "0xB4FE00", VA = "0xB4FE00", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001970")]
			[Address(RVA = "0xB4FE08", Offset = "0xB4FE08", VA = "0xB4FE08")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public bool EnableState
		{
			[Token(Token = "0x6001971")]
			[Address(RVA = "0xB4FE10", Offset = "0xB4FE10", VA = "0xB4FE10", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001972")]
			[Address(RVA = "0xB4FE2C", Offset = "0xB4FE2C", VA = "0xB4FE2C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001973")]
			[Address(RVA = "0xB4FE4C", Offset = "0xB4FE4C", VA = "0xB4FE4C", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001974")]
			[Address(RVA = "0xB4FE54", Offset = "0xB4FE54", VA = "0xB4FE54", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public float SphereRadius
		{
			[Token(Token = "0x6001975")]
			[Address(RVA = "0xB4FE60", Offset = "0xB4FE60", VA = "0xB4FE60")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001976")]
			[Address(RVA = "0xB4FE68", Offset = "0xB4FE68", VA = "0xB4FE68")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xB4FE70", Offset = "0xB4FE70", VA = "0xB4FE70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xB4FEAC", Offset = "0xB4FEAC", VA = "0xB4FEAC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xB4FEB0", Offset = "0xB4FEB0", VA = "0xB4FEB0")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x400174E")]
		None = 0,
		[Token(Token = "0x400174F")]
		Ray = 1,
		[Token(Token = "0x4001750")]
		Poke = 4,
		[Token(Token = "0x4001751")]
		All = -1
	}
	[Token(Token = "0x20004BB")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001753")]
		Inactive,
		[Token(Token = "0x4001754")]
		PrimaryInputDown,
		[Token(Token = "0x4001755")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001756")]
		PrimaryInputUp
	}
	[Token(Token = "0x20004BC")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xB4F790", Offset = "0xB4F790", VA = "0xB4F790")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000247")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600197B")]
			[Address(RVA = "0xB4BEA8", Offset = "0xB4BEA8", VA = "0xB4BEA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0xB4FEB8", Offset = "0xB4FEB8", VA = "0xB4FEB8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600197D")]
			[Address(RVA = "0xB4FEC0", Offset = "0xB4FEC0", VA = "0xB4FEC0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600197E")]
			get;
		}

		[Token(Token = "0x1700024A")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600197F")]
			get;
		}

		[Token(Token = "0x1700024B")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001980")]
			get;
		}

		[Token(Token = "0x1700024C")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001981")]
			[Address(RVA = "0xB4FECC", Offset = "0xB4FECC", VA = "0xB4FECC")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001982")]
			[Address(RVA = "0xB4FED8", Offset = "0xB4FED8", VA = "0xB4FED8")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001983")]
			[Address(RVA = "0xB4FEE4", Offset = "0xB4FEE4", VA = "0xB4FEE4")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001984")]
			[Address(RVA = "0xB4FEF0", Offset = "0xB4FEF0", VA = "0xB4FEF0")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001989")]
			get;
			[Token(Token = "0x600198A")]
			set;
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xB4FEFC", Offset = "0xB4FEFC", VA = "0xB4FEFC")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001986")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001987")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001988")]
		public abstract void DeFocus();

		[Token(Token = "0x600198B")]
		public abstract void Initialize();

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xB4EC2C", Offset = "0xB4EC2C", VA = "0xB4EC2C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xB4EC74", Offset = "0xB4EC74", VA = "0xB4EC74")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xB4FF04", Offset = "0xB4FF04", VA = "0xB4FF04", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xB501B0", Offset = "0xB501B0", VA = "0xB501B0", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xB4F7EC", Offset = "0xB4F7EC", VA = "0xB4F7EC")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700024F")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001991")]
			get;
		}

		[Token(Token = "0x17000250")]
		bool EnableState
		{
			[Token(Token = "0x6001993")]
			get;
			[Token(Token = "0x6001994")]
			set;
		}

		[Token(Token = "0x17000251")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001995")]
			get;
			[Token(Token = "0x6001996")]
			set;
		}

		[Token(Token = "0x6001992")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20004BF")]
	public class PinchStateModule
	{
		[Token(Token = "0x20004C0")]
		private enum PinchState
		{
			[Token(Token = "0x4001767")]
			None,
			[Token(Token = "0x4001768")]
			PinchDown,
			[Token(Token = "0x4001769")]
			PinchStay,
			[Token(Token = "0x400176A")]
			PinchUp
		}

		[Token(Token = "0x4001763")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000252")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0xB509F8", Offset = "0xB509F8", VA = "0xB509F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000253")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001998")]
			[Address(RVA = "0xB50A74", Offset = "0xB50A74", VA = "0xB50A74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000254")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0xB50AF0", Offset = "0xB50AF0", VA = "0xB50AF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xB50B6C", Offset = "0xB50B6C", VA = "0xB50B6C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xB50B8C", Offset = "0xB50B8C", VA = "0xB50B8C")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x400176B")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x400176C")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x400176D")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x400176E")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x400176F")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Range(0f, 45f)]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000255")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600199C")]
			[Address(RVA = "0xB50CD8", Offset = "0xB50CD8", VA = "0xB50CD8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000256")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0xB50CE0", Offset = "0xB50CE0", VA = "0xB50CE0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000257")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0xB50D3C", Offset = "0xB50D3C", VA = "0xB50D3C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000258")]
		public override bool EnableState
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0xB50D44", Offset = "0xB50D44", VA = "0xB50D44", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0xB50D84", Offset = "0xB50D84", VA = "0xB50D84", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xB50DF4", Offset = "0xB50DF4", VA = "0xB50DF4", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xB50E40", Offset = "0xB50E40", VA = "0xB50E40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xB50ECC", Offset = "0xB50ECC", VA = "0xB50ECC")]
		private void Update()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xB51170", Offset = "0xB51170", VA = "0xB51170")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xB511EC", Offset = "0xB511EC", VA = "0xB511EC", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xB515B0", Offset = "0xB515B0", VA = "0xB515B0")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xB5174C", Offset = "0xB5174C", VA = "0xB5174C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xB51864", Offset = "0xB51864", VA = "0xB51864")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xB51B88", Offset = "0xB51B88", VA = "0xB51B88")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xB51F04", Offset = "0xB51F04", VA = "0xB51F04", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xB51FC4", Offset = "0xB51FC4", VA = "0xB51FC4", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xB51FEC", Offset = "0xB51FEC", VA = "0xB51FEC")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400177B")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x400177C")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x17000259")]
		public bool EnableState
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xB50D68", Offset = "0xB50D68", VA = "0xB50D68", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xB50DA0", Offset = "0xB50DA0", VA = "0xB50DA0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xB520C4", Offset = "0xB520C4", VA = "0xB520C4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0xB51134", Offset = "0xB51134", VA = "0xB51134", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0xB522CC", Offset = "0xB522CC", VA = "0xB522CC", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xB522D4", Offset = "0xB522D4", VA = "0xB522D4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xB520CC", Offset = "0xB520CC", VA = "0xB520CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xB51F34", Offset = "0xB51F34", VA = "0xB51F34", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xB522DC", Offset = "0xB522DC", VA = "0xB522DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xB52588", Offset = "0xB52588", VA = "0xB52588")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xB52630", Offset = "0xB52630", VA = "0xB52630")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700025C")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0xB52688", Offset = "0xB52688", VA = "0xB52688")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0xB52690", Offset = "0xB52690", VA = "0xB52690")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xB5270C", Offset = "0xB5270C", VA = "0xB5270C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xB52714", Offset = "0xB52714", VA = "0xB52714")]
			set
			{
			}
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xB52770", Offset = "0xB52770", VA = "0xB52770")]
		private void Start()
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xB52A10", Offset = "0xB52A10", VA = "0xB52A10")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xB52A20", Offset = "0xB52A20", VA = "0xB52A20")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xB52A30", Offset = "0xB52A30", VA = "0xB52A30")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xB52A38", Offset = "0xB52A38", VA = "0xB52A38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xB52A3C", Offset = "0xB52A3C", VA = "0xB52A3C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xB52AA8", Offset = "0xB52AA8", VA = "0xB52AA8")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xB52B38", Offset = "0xB52B38", VA = "0xB52B38")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xB52BC8", Offset = "0xB52BC8", VA = "0xB52BC8")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xB52C74", Offset = "0xB52C74", VA = "0xB52C74")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xB52D50", Offset = "0xB52D50", VA = "0xB52D50")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xB52D94", Offset = "0xB52D94", VA = "0xB52D94")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xB52DF4", Offset = "0xB52DF4", VA = "0xB52DF4")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xB52E54", Offset = "0xB52E54", VA = "0xB52E54")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xB52E5C", Offset = "0xB52E5C", VA = "0xB52E5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xB52E60", Offset = "0xB52E60", VA = "0xB52E60")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xB52E24", Offset = "0xB52E24", VA = "0xB52E24")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xB52E94", Offset = "0xB52E94", VA = "0xB52E94")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20004C7")]
		[CompilerGenerated]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x400179A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x400179B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700025E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019D6")]
				[Address(RVA = "0xB534DC", Offset = "0xB534DC", VA = "0xB534DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019D8")]
				[Address(RVA = "0xB53524", Offset = "0xB53524", VA = "0xB53524", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019D3")]
			[Address(RVA = "0xB53264", Offset = "0xB53264", VA = "0xB53264")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60019D4")]
			[Address(RVA = "0xB5332C", Offset = "0xB5332C", VA = "0xB5332C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019D5")]
			[Address(RVA = "0xB53330", Offset = "0xB53330", VA = "0xB53330", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019D7")]
			[Address(RVA = "0xB534E4", Offset = "0xB534E4", VA = "0xB534E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400178C")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x400178D")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xB52E9C", Offset = "0xB52E9C", VA = "0xB52E9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xB52F30", Offset = "0xB52F30", VA = "0xB52F30")]
		private void Update()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xB53224", Offset = "0xB53224", VA = "0xB53224")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xB531BC", Offset = "0xB531BC", VA = "0xB531BC")]
		[IteratorStateMachine(typeof(<LerpToHMD>d__13))]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xB5328C", Offset = "0xB5328C", VA = "0xB5328C")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20004C9")]
		public enum SelectionState
		{
			[Token(Token = "0x40017A3")]
			Off,
			[Token(Token = "0x40017A4")]
			Selected,
			[Token(Token = "0x40017A5")]
			Highlighted
		}

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000260")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0xB5352C", Offset = "0xB5352C", VA = "0xB5352C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0xB53534", Offset = "0xB53534", VA = "0xB53534")]
			set
			{
			}
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xB53688", Offset = "0xB53688", VA = "0xB53688")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xB53810", Offset = "0xB53810", VA = "0xB53810")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xB535A8", Offset = "0xB535A8", VA = "0xB535A8")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xB538D8", Offset = "0xB538D8", VA = "0xB538D8")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20004CB")]
		public enum SegmentType
		{
			[Token(Token = "0x40017B4")]
			Straight,
			[Token(Token = "0x40017B5")]
			LeftTurn,
			[Token(Token = "0x40017B6")]
			RightTurn,
			[Token(Token = "0x40017B7")]
			Switch
		}

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40017AC")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40017AD")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000261")]
		public float StartDistance
		{
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0xB53948", Offset = "0xB53948", VA = "0xB53948")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0xB53950", Offset = "0xB53950", VA = "0xB53950")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public float GridSize
		{
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0xB53958", Offset = "0xB53958", VA = "0xB53958")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019E3")]
			[Address(RVA = "0xB53960", Offset = "0xB53960", VA = "0xB53960")]
			private set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public int SubDivCount
		{
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0xB53968", Offset = "0xB53968", VA = "0xB53968")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xB53970", Offset = "0xB53970", VA = "0xB53970")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public SegmentType Type
		{
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0xB53978", Offset = "0xB53978", VA = "0xB53978")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000265")]
		public Pose EndPose
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0xB53980", Offset = "0xB53980", VA = "0xB53980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		public float Radius
		{
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0xB53D54", Offset = "0xB53D54", VA = "0xB53D54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000267")]
		public float SegmentLength
		{
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0xB539DC", Offset = "0xB539DC", VA = "0xB539DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xB53D64", Offset = "0xB53D64", VA = "0xB53D64")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xB53D7C", Offset = "0xB53D7C", VA = "0xB53D7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xB53A1C", Offset = "0xB53A1C", VA = "0xB53A1C")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xB53D80", Offset = "0xB53D80", VA = "0xB53D80")]
		private void Update()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xB53D84", Offset = "0xB53D84", VA = "0xB53D84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xB53DE0", Offset = "0xB53DE0", VA = "0xB53DE0")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xB54714", Offset = "0xB54714", VA = "0xB54714")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xB5496C", Offset = "0xB5496C", VA = "0xB5496C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20004CD")]
		[CompilerGenerated]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40017CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40017CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000268")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A00")]
				[Address(RVA = "0xB55398", Offset = "0xB55398", VA = "0xB55398", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000269")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A02")]
				[Address(RVA = "0xB553E0", Offset = "0xB553E0", VA = "0xB553E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019FD")]
			[Address(RVA = "0xB551DC", Offset = "0xB551DC", VA = "0xB551DC")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xB5522C", Offset = "0xB5522C", VA = "0xB5522C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019FF")]
			[Address(RVA = "0xB55230", Offset = "0xB55230", VA = "0xB55230", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xB553A0", Offset = "0xB553A0", VA = "0xB553A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017B8")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40017B9")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xB54A1C", Offset = "0xB54A1C", VA = "0xB54A1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xB54AC0", Offset = "0xB54AC0", VA = "0xB54AC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xB54B50", Offset = "0xB54B50", VA = "0xB54B50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xB54C98", Offset = "0xB54C98", VA = "0xB54C98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xB54E24", Offset = "0xB54E24", VA = "0xB54E24")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xB54F34", Offset = "0xB54F34", VA = "0xB54F34")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xB55120", Offset = "0xB55120", VA = "0xB55120")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xB55044", Offset = "0xB55044", VA = "0xB55044")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xB55058", Offset = "0xB55058", VA = "0xB55058")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xB55174", Offset = "0xB55174", VA = "0xB55174")]
		[IteratorStateMachine(typeof(<ResetPosition>d__26))]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xB55204", Offset = "0xB55204", VA = "0xB55204")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700026A")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0xB553E8", Offset = "0xB553E8", VA = "0xB553E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xB553F8", Offset = "0xB553F8", VA = "0xB553F8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xB55400", Offset = "0xB55400", VA = "0xB55400", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xB55730", Offset = "0xB55730", VA = "0xB55730")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40017D1")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40017D2")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700026B")]
		public float Distance
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0xB5581C", Offset = "0xB5581C", VA = "0xB5581C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0xB55824", Offset = "0xB55824", VA = "0xB55824")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public float Scale
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xB5582C", Offset = "0xB5582C", VA = "0xB5582C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0xB55834", Offset = "0xB55834", VA = "0xB55834")]
			set
			{
			}
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xB553FC", Offset = "0xB553FC", VA = "0xB553FC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xB5583C", Offset = "0xB5583C", VA = "0xB5583C")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xB5543C", Offset = "0xB5543C", VA = "0xB5543C")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xB5564C", Offset = "0xB5564C", VA = "0xB5564C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001A0F")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xB55790", Offset = "0xB55790", VA = "0xB55790")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20004D1")]
		[CompilerGenerated]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40017E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40017E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40017EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40017EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40017EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40017EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40017F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700026D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A1E")]
				[Address(RVA = "0xB55FD4", Offset = "0xB55FD4", VA = "0xB55FD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A20")]
				[Address(RVA = "0xB5601C", Offset = "0xB5601C", VA = "0xB5601C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xB55C98", Offset = "0xB55C98", VA = "0xB55C98")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xB55E0C", Offset = "0xB55E0C", VA = "0xB55E0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xB55E10", Offset = "0xB55E10", VA = "0xB55E10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xB55FDC", Offset = "0xB55FDC", VA = "0xB55FDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xB558FC", Offset = "0xB558FC", VA = "0xB558FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xB5593C", Offset = "0xB5593C", VA = "0xB5593C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xB55A14", Offset = "0xB55A14", VA = "0xB55A14")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xB55B58", Offset = "0xB55B58", VA = "0xB55B58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xB55A6C", Offset = "0xB55A6C", VA = "0xB55A6C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xB55C20", Offset = "0xB55C20", VA = "0xB55C20")]
		[IteratorStateMachine(typeof(<AnimateCrossing>d__15))]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xB55CC0", Offset = "0xB55CC0", VA = "0xB55CC0")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xB55D58", Offset = "0xB55D58", VA = "0xB55D58")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xB55DB4", Offset = "0xB55DB4", VA = "0xB55DB4")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20004D3")]
		private enum EngineSoundState
		{
			[Token(Token = "0x400180F")]
			Start,
			[Token(Token = "0x4001810")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001811")]
			Stop
		}

		[Token(Token = "0x20004D4")]
		[CompilerGenerated]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x400181A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700026F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A33")]
				[Address(RVA = "0xB5788C", Offset = "0xB5788C", VA = "0xB5788C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A35")]
				[Address(RVA = "0xB578D4", Offset = "0xB578D4", VA = "0xB578D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A30")]
			[Address(RVA = "0xB5764C", Offset = "0xB5764C", VA = "0xB5764C")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001A31")]
			[Address(RVA = "0xB57674", Offset = "0xB57674", VA = "0xB57674", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A32")]
			[Address(RVA = "0xB57678", Offset = "0xB57678", VA = "0xB57678", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A34")]
			[Address(RVA = "0xB57894", Offset = "0xB57894", VA = "0xB57894", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017F1")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40017F2")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40017F3")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40017F4")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(0.2f, 2.7f)]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xB56024", Offset = "0xB56024", VA = "0xB56024")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xB56168", Offset = "0xB56168", VA = "0xB56168")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xB56174", Offset = "0xB56174", VA = "0xB56174", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xB52A6C", Offset = "0xB52A6C", VA = "0xB52A6C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xB560EC", Offset = "0xB560EC", VA = "0xB560EC")]
		[IteratorStateMachine(typeof(<StartStopTrain>d__34))]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xB562AC", Offset = "0xB562AC", VA = "0xB562AC")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xB5624C", Offset = "0xB5624C", VA = "0xB5624C")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xB52AD8", Offset = "0xB52AD8", VA = "0xB52AD8")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xB52B68", Offset = "0xB52B68", VA = "0xB52B68")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xB564C0", Offset = "0xB564C0", VA = "0xB564C0")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xB565B4", Offset = "0xB565B4", VA = "0xB565B4")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xB52BF8", Offset = "0xB52BF8", VA = "0xB52BF8")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xB52CA4", Offset = "0xB52CA4", VA = "0xB52CA4")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xB52D84", Offset = "0xB52D84", VA = "0xB52D84")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xB565F0", Offset = "0xB565F0", VA = "0xB565F0")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000271")]
		public float TrackLength
		{
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xB578DC", Offset = "0xB578DC", VA = "0xB578DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xB578E4", Offset = "0xB578E4", VA = "0xB578E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xB578EC", Offset = "0xB578EC", VA = "0xB578EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xB57AB0", Offset = "0xB57AB0", VA = "0xB57AB0")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xB578F0", Offset = "0xB578F0", VA = "0xB578F0")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xB57B64", Offset = "0xB57B64", VA = "0xB57B64")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xB57C44", Offset = "0xB57C44", VA = "0xB57C44")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class Pose
	{
		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xB57C60", Offset = "0xB57C60", VA = "0xB57C60")]
		public Pose()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xB57CF8", Offset = "0xB57CF8", VA = "0xB57CF8")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20004D8")]
		[CompilerGenerated]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400182F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A4B")]
				[Address(RVA = "0xB58284", Offset = "0xB58284", VA = "0xB58284", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A4D")]
				[Address(RVA = "0xB582CC", Offset = "0xB582CC", VA = "0xB582CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A48")]
			[Address(RVA = "0xB57FB4", Offset = "0xB57FB4", VA = "0xB57FB4")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xB58100", Offset = "0xB58100", VA = "0xB58100", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0xB58104", Offset = "0xB58104", VA = "0xB58104", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0xB5828C", Offset = "0xB5828C", VA = "0xB5828C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D9")]
		[CompilerGenerated]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400183A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000275")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A51")]
				[Address(RVA = "0xB5839C", Offset = "0xB5839C", VA = "0xB5839C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000276")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A53")]
				[Address(RVA = "0xB583E4", Offset = "0xB583E4", VA = "0xB583E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0xB58068", Offset = "0xB58068", VA = "0xB58068")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0xB582D4", Offset = "0xB582D4", VA = "0xB582D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A50")]
			[Address(RVA = "0xB582D8", Offset = "0xB582D8", VA = "0xB582D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xB583A4", Offset = "0xB583A4", VA = "0xB583A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001824")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000272")]
		public bool IsMoving
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xB57D5C", Offset = "0xB57D5C", VA = "0xB57D5C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xB57D64", Offset = "0xB57D64", VA = "0xB57D64")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xB57D70", Offset = "0xB57D70", VA = "0xB57D70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xB57DA0", Offset = "0xB57DA0", VA = "0xB57DA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xB57EE0", Offset = "0xB57EE0", VA = "0xB57EE0")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xB57F3C", Offset = "0xB57F3C", VA = "0xB57F3C")]
		[IteratorStateMachine(typeof(<LerpToSpeed>d__17))]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xB57FDC", Offset = "0xB57FDC", VA = "0xB57FDC")]
		[IteratorStateMachine(typeof(<PlaySoundDelayed>d__18))]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xB58090", Offset = "0xB58090", VA = "0xB58090")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xB580F8", Offset = "0xB580F8", VA = "0xB580F8")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xB583EC", Offset = "0xB583EC", VA = "0xB583EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xB5844C", Offset = "0xB5844C", VA = "0xB5844C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xB58514", Offset = "0xB58514", VA = "0xB58514")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xB58624", Offset = "0xB58624", VA = "0xB58624")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xB5869C", Offset = "0xB5869C", VA = "0xB5869C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xB58768", Offset = "0xB58768", VA = "0xB58768")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001841")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001842")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001843")]
		EUDT_None,
		[Token(Token = "0x4001844")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20004DC")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20004DD")]
		[CompilerGenerated]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400185D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400185E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400185F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000277")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A6D")]
				[Address(RVA = "0xB59D6C", Offset = "0xB59D6C", VA = "0xB59D6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000278")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A6F")]
				[Address(RVA = "0xB59DB4", Offset = "0xB59DB4", VA = "0xB59DB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0xB59430", Offset = "0xB59430", VA = "0xB59430")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0xB59B8C", Offset = "0xB59B8C", VA = "0xB59B8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0xB59B90", Offset = "0xB59B90", VA = "0xB59B90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0xB59D74", Offset = "0xB59D74", VA = "0xB59D74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001846")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001847")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001848")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("App vs Compositor Comparison Settings")]
		public GameObject mainCamera;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Level Loading Sim Settings")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xB58778", Offset = "0xB58778", VA = "0xB58778")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xB58F94", Offset = "0xB58F94", VA = "0xB58F94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xB590BC", Offset = "0xB590BC", VA = "0xB590BC")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xB591D8", Offset = "0xB591D8", VA = "0xB591D8")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xB592F4", Offset = "0xB592F4", VA = "0xB592F4")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xB5909C", Offset = "0xB5909C", VA = "0xB5909C")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xB593C8", Offset = "0xB593C8", VA = "0xB593C8")]
		[IteratorStateMachine(typeof(<WaitforOVROverlay>d__30))]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xB59458", Offset = "0xB59458", VA = "0xB59458")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xB58BD0", Offset = "0xB58BD0", VA = "0xB58BD0")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xB595A0", Offset = "0xB595A0", VA = "0xB595A0")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xB59480", Offset = "0xB59480", VA = "0xB59480")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xB5991C", Offset = "0xB5991C", VA = "0xB5991C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xB59A08", Offset = "0xB59A08", VA = "0xB59A08")]
		public OVROverlaySample()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20004DE")]
	[RequireComponent(typeof(OVRGrabber))]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x4001860")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001861")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001862")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001863")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001864")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001865")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001866")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001867")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001868")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001869")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400186A")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xB59DBC", Offset = "0xB59DBC", VA = "0xB59DBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xB59E0C", Offset = "0xB59E0C", VA = "0xB59E0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xB5A23C", Offset = "0xB5A23C", VA = "0xB5A23C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xB5A328", Offset = "0xB5A328", VA = "0xB5A328")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xB5A48C", Offset = "0xB5A48C", VA = "0xB5A48C")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xB5A75C", Offset = "0xB5A75C", VA = "0xB5A75C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xB5A840", Offset = "0xB5A840", VA = "0xB5A840")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xB5A9E8", Offset = "0xB5A9E8", VA = "0xB5A9E8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xB5A518", Offset = "0xB5A518", VA = "0xB5A518")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xB5A56C", Offset = "0xB5A56C", VA = "0xB5A56C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xB5A0FC", Offset = "0xB5A0FC", VA = "0xB5A0FC")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xB5AB0C", Offset = "0xB5AB0C", VA = "0xB5AB0C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public enum HandPoseId
	{
		[Token(Token = "0x400187F")]
		Default,
		[Token(Token = "0x4001880")]
		Generic,
		[Token(Token = "0x4001881")]
		PingPongBall,
		[Token(Token = "0x4001882")]
		Controller
	}
	[Token(Token = "0x20004E1")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000279")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0xB5ABB8", Offset = "0xB5ABB8", VA = "0xB5ABB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027A")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0xB5ABC0", Offset = "0xB5ABC0", VA = "0xB5ABC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027B")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0xB5ABC8", Offset = "0xB5ABC8", VA = "0xB5ABC8")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xB5ABD0", Offset = "0xB5ABD0", VA = "0xB5ABD0")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xB5ABD8", Offset = "0xB5ABD8", VA = "0xB5ABD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xB5AEA4", Offset = "0xB5AEA4", VA = "0xB5AEA4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xB5AEF4", Offset = "0xB5AEF4", VA = "0xB5AEF4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xB5AF2C", Offset = "0xB5AF2C", VA = "0xB5AF2C")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20004E3")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001889")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x400188A")]
		public const string Tab = "    ";

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xB5AF34", Offset = "0xB5AF34", VA = "0xB5AF34")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xB5AFC0", Offset = "0xB5AFC0", VA = "0xB5AFC0")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xB5B054", Offset = "0xB5B054", VA = "0xB5B054")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_WARNING")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xB5B0E0", Offset = "0xB5B0E0", VA = "0xB5B0E0")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xB5B16C", Offset = "0xB5B16C", VA = "0xB5B16C")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class CAPI
	{
		[Token(Token = "0x20004E5")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20004E6")]
		public enum Result
		{
			[Token(Token = "0x4001896")]
			Success = 0,
			[Token(Token = "0x4001897")]
			Failure = -1000,
			[Token(Token = "0x4001898")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001899")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x400189A")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x400189B")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x400189C")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x400189D")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x400189E")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20004E7")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400189F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0xB62654", Offset = "0xB62654", VA = "0xB62654")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x400188B")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001893")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xB5B258", Offset = "0xB5B258", VA = "0xB5B258")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xB5B2E4", Offset = "0xB5B2E4", VA = "0xB5B2E4")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xB5B4EC", Offset = "0xB5B4EC", VA = "0xB5B4EC")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xB5B5C0", Offset = "0xB5B5C0", VA = "0xB5B5C0")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xB5B624", Offset = "0xB5B624", VA = "0xB5B624")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xB5B68C", Offset = "0xB5B68C", VA = "0xB5B68C")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xB5B708", Offset = "0xB5B708", VA = "0xB5B708")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xB5B838", Offset = "0xB5B838", VA = "0xB5B838")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xB5B8B4", Offset = "0xB5B8B4", VA = "0xB5B8B4")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xB5B9E4", Offset = "0xB5B9E4", VA = "0xB5B9E4")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xB5BA60", Offset = "0xB5BA60", VA = "0xB5BA60")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xB5BADC", Offset = "0xB5BADC", VA = "0xB5BADC")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xB5BB58", Offset = "0xB5BB58", VA = "0xB5BB58")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xB5BBD4", Offset = "0xB5BBD4", VA = "0xB5BBD4")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xB5BC58", Offset = "0xB5BC58", VA = "0xB5BC58")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xB5BCDC", Offset = "0xB5BCDC", VA = "0xB5BCDC")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xB5BD60", Offset = "0xB5BD60", VA = "0xB5BD60")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xB5BDDC", Offset = "0xB5BDDC", VA = "0xB5BDDC")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xB5BE58", Offset = "0xB5BE58", VA = "0xB5BE58")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xB5BEDC", Offset = "0xB5BEDC", VA = "0xB5BEDC")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xB5BF60", Offset = "0xB5BF60", VA = "0xB5BF60")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xB5BFE4", Offset = "0xB5BFE4", VA = "0xB5BFE4")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xB5C060", Offset = "0xB5C060", VA = "0xB5C060")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xB5C0F4", Offset = "0xB5C0F4", VA = "0xB5C0F4")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xB5C15C", Offset = "0xB5C15C", VA = "0xB5C15C")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xB5C1F8", Offset = "0xB5C1F8", VA = "0xB5C1F8")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xB5C2AC", Offset = "0xB5C2AC", VA = "0xB5C2AC")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xB5C370", Offset = "0xB5C370", VA = "0xB5C370")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xB5C3FC", Offset = "0xB5C3FC", VA = "0xB5C3FC")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xB5C480", Offset = "0xB5C480", VA = "0xB5C480")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xB5C504", Offset = "0xB5C504", VA = "0xB5C504")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xB5C588", Offset = "0xB5C588", VA = "0xB5C588")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xB5C60C", Offset = "0xB5C60C", VA = "0xB5C60C")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xB5C688", Offset = "0xB5C688", VA = "0xB5C688")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xB5C78C", Offset = "0xB5C78C", VA = "0xB5C78C")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xB5C708", Offset = "0xB5C708", VA = "0xB5C708")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xB5C96C", Offset = "0xB5C96C", VA = "0xB5C96C")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xB5CAC0", Offset = "0xB5CAC0", VA = "0xB5CAC0")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AB2")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xB5CB3C", Offset = "0xB5CB3C", VA = "0xB5CB3C")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xB5CDC0", Offset = "0xB5CDC0", VA = "0xB5CDC0")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xB5CE3C", Offset = "0xB5CE3C", VA = "0xB5CE3C")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xB5CF90", Offset = "0xB5CF90", VA = "0xB5CF90")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xB5D00C", Offset = "0xB5D00C", VA = "0xB5D00C")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xB5D160", Offset = "0xB5D160", VA = "0xB5D160")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xB5D1DC", Offset = "0xB5D1DC", VA = "0xB5D1DC")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xB5D330", Offset = "0xB5D330", VA = "0xB5D330")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xB5D3AC", Offset = "0xB5D3AC", VA = "0xB5D3AC")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xB5D500", Offset = "0xB5D500", VA = "0xB5D500")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xB5D57C", Offset = "0xB5D57C", VA = "0xB5D57C")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xB5D5F8", Offset = "0xB5D5F8", VA = "0xB5D5F8")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xB5D684", Offset = "0xB5D684", VA = "0xB5D684")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xB5D700", Offset = "0xB5D700", VA = "0xB5D700")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xB5D8B8", Offset = "0xB5D8B8", VA = "0xB5D8B8")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xB5D9F4", Offset = "0xB5D9F4", VA = "0xB5D9F4")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xB5D83C", Offset = "0xB5D83C", VA = "0xB5D83C")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xB5DA70", Offset = "0xB5DA70", VA = "0xB5DA70")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xB5DAEC", Offset = "0xB5DAEC", VA = "0xB5DAEC")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xB5DB70", Offset = "0xB5DB70", VA = "0xB5DB70")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xB5DBEC", Offset = "0xB5DBEC", VA = "0xB5DBEC")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xB5DC70", Offset = "0xB5DC70", VA = "0xB5DC70")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xB5DCEC", Offset = "0xB5DCEC", VA = "0xB5DCEC")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xB5DD68", Offset = "0xB5DD68", VA = "0xB5DD68")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xB5DFB0", Offset = "0xB5DFB0", VA = "0xB5DFB0")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xB5E034", Offset = "0xB5E034", VA = "0xB5E034")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xB5E248", Offset = "0xB5E248", VA = "0xB5E248")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xB5E2DC", Offset = "0xB5E2DC", VA = "0xB5E2DC")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xB5E410", Offset = "0xB5E410", VA = "0xB5E410")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xB5E48C", Offset = "0xB5E48C", VA = "0xB5E48C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xB5E508", Offset = "0xB5E508", VA = "0xB5E508")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xB5E640", Offset = "0xB5E640", VA = "0xB5E640")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xB5E6BC", Offset = "0xB5E6BC", VA = "0xB5E6BC")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xB5E7F4", Offset = "0xB5E7F4", VA = "0xB5E7F4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xB5E870", Offset = "0xB5E870", VA = "0xB5E870")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xB5E8F4", Offset = "0xB5E8F4", VA = "0xB5E8F4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xB5E978", Offset = "0xB5E978", VA = "0xB5E978")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xB5E9FC", Offset = "0xB5E9FC", VA = "0xB5E9FC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xB5EA78", Offset = "0xB5EA78", VA = "0xB5EA78")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xB5EAFC", Offset = "0xB5EAFC", VA = "0xB5EAFC")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xB5EB80", Offset = "0xB5EB80", VA = "0xB5EB80")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xB5EBFC", Offset = "0xB5EBFC", VA = "0xB5EBFC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xB5EC78", Offset = "0xB5EC78", VA = "0xB5EC78")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xB5ED28", Offset = "0xB5ED28", VA = "0xB5ED28")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xB5EDAC", Offset = "0xB5EDAC", VA = "0xB5EDAC")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xB5EE30", Offset = "0xB5EE30", VA = "0xB5EE30")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xB5EEAC", Offset = "0xB5EEAC", VA = "0xB5EEAC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xB5EF28", Offset = "0xB5EF28", VA = "0xB5EF28")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xB5EFA4", Offset = "0xB5EFA4", VA = "0xB5EFA4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xB5F038", Offset = "0xB5F038", VA = "0xB5F038")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xB5F0C4", Offset = "0xB5F0C4", VA = "0xB5F0C4")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xB5F150", Offset = "0xB5F150", VA = "0xB5F150")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xB5F1DC", Offset = "0xB5F1DC", VA = "0xB5F1DC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xB5F270", Offset = "0xB5F270", VA = "0xB5F270")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xB5F304", Offset = "0xB5F304", VA = "0xB5F304")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xB5F380", Offset = "0xB5F380", VA = "0xB5F380")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xB5F3FC", Offset = "0xB5F3FC", VA = "0xB5F3FC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xB5F534", Offset = "0xB5F534", VA = "0xB5F534")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xB5F5B0", Offset = "0xB5F5B0", VA = "0xB5F5B0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xB5F6E8", Offset = "0xB5F6E8", VA = "0xB5F6E8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xB5F764", Offset = "0xB5F764", VA = "0xB5F764")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xB5F884", Offset = "0xB5F884", VA = "0xB5F884")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xB5F900", Offset = "0xB5F900", VA = "0xB5F900")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xB5FAB4", Offset = "0xB5FAB4", VA = "0xB5FAB4")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xB5FD5C", Offset = "0xB5FD5C", VA = "0xB5FD5C")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xB5FA38", Offset = "0xB5FA38", VA = "0xB5FA38")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xB5FDE0", Offset = "0xB5FDE0", VA = "0xB5FDE0")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xB5FE5C", Offset = "0xB5FE5C", VA = "0xB5FE5C")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xB5FEE0", Offset = "0xB5FEE0", VA = "0xB5FEE0")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xB5FF64", Offset = "0xB5FF64", VA = "0xB5FF64")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xB5FFE8", Offset = "0xB5FFE8", VA = "0xB5FFE8")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xB60084", Offset = "0xB60084", VA = "0xB60084")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xB60120", Offset = "0xB60120", VA = "0xB60120")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xB601B4", Offset = "0xB601B4", VA = "0xB601B4")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xB60230", Offset = "0xB60230", VA = "0xB60230")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xB602AC", Offset = "0xB602AC", VA = "0xB602AC")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xB60328", Offset = "0xB60328", VA = "0xB60328")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xB603A4", Offset = "0xB603A4", VA = "0xB603A4")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xB60420", Offset = "0xB60420", VA = "0xB60420")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xB60544", Offset = "0xB60544", VA = "0xB60544")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xB605D0", Offset = "0xB605D0", VA = "0xB605D0")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xB6064C", Offset = "0xB6064C", VA = "0xB6064C")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xB606A0", Offset = "0xB606A0", VA = "0xB606A0")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xB607D4", Offset = "0xB607D4", VA = "0xB607D4")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xB60858", Offset = "0xB60858", VA = "0xB60858")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xB6098C", Offset = "0xB6098C", VA = "0xB6098C")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xB60A10", Offset = "0xB60A10", VA = "0xB60A10")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xB60AA4", Offset = "0xB60AA4", VA = "0xB60AA4")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xB60DDC", Offset = "0xB60DDC", VA = "0xB60DDC")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xB60E58", Offset = "0xB60E58", VA = "0xB60E58")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xB60EE4", Offset = "0xB60EE4", VA = "0xB60EE4")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xB61638", Offset = "0xB61638", VA = "0xB61638")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xB616B4", Offset = "0xB616B4", VA = "0xB616B4")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xB5B200", Offset = "0xB5B200", VA = "0xB5B200")]
		[MonoPInvokeCallback(typeof(LoggingDelegate))]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xB61740", Offset = "0xB61740", VA = "0xB61740")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xB617C0", Offset = "0xB617C0", VA = "0xB617C0")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xB6183C", Offset = "0xB6183C", VA = "0xB6183C")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xB618B8", Offset = "0xB618B8", VA = "0xB618B8")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xB61934", Offset = "0xB61934", VA = "0xB61934")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xB6228C", Offset = "0xB6228C", VA = "0xB6228C")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xB62308", Offset = "0xB62308", VA = "0xB62308")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xB6272C", Offset = "0xB6272C", VA = "0xB6272C")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xB625D0", Offset = "0xB625D0", VA = "0xB625D0")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xB62794", Offset = "0xB62794", VA = "0xB62794")]
		public CAPI()
		{
		}
	}
}
namespace TerrainComposer2
{
	[Token(Token = "0x20004E8")]
	public class ReadMe : MonoBehaviour
	{
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool buttonEdit;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string readme;

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xB62A30", Offset = "0xB62A30", VA = "0xB62A30")]
		public ReadMe()
		{
		}
	}
}
namespace MeshCombineStudio
{
	[Token(Token = "0x20004E9")]
	public class DisabledLODGroup : MonoBehaviour
	{
		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODGroup lodGroup;

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xB62A38", Offset = "0xB62A38", VA = "0xB62A38")]
		public DisabledLODGroup()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	[ExecuteInEditMode]
	public class FindLodGroups : MonoBehaviour
	{
		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool find;

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xB62A40", Offset = "0xB62A40", VA = "0xB62A40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xB62BA4", Offset = "0xB62BA4", VA = "0xB62BA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xB62A44", Offset = "0xB62A44", VA = "0xB62A44")]
		private void FindLods()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xB62BB8", Offset = "0xB62BB8", VA = "0xB62BB8")]
		public FindLodGroups()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class LODGroupSetup : MonoBehaviour
	{
		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODGroup lodGroup;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int lodGroupParentIndex;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int lodCount;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LODGroup[] lodGroups;

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xB62BC0", Offset = "0xB62BC0", VA = "0xB62BC0")]
		public void Init(MeshCombiner meshCombiner, int lodGroupParentIndex)
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xB62C7C", Offset = "0xB62C7C", VA = "0xB62C7C")]
		private void GetSetup()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xB62D7C", Offset = "0xB62D7C", VA = "0xB62D7C")]
		public void ApplySetup()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xB6307C", Offset = "0xB6307C", VA = "0xB6307C")]
		public void AddLODGroupsToChildren()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xB63368", Offset = "0xB63368", VA = "0xB63368")]
		public void RemoveLODGroupFromChildren()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xB63478", Offset = "0xB63478", VA = "0xB63478")]
		public LODGroupSetup()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class CombinedLODManager : MonoBehaviour
	{
		[Token(Token = "0x20004ED")]
		public enum LodMode
		{
			[Token(Token = "0x40018B9")]
			Automatic,
			[Token(Token = "0x40018BA")]
			DebugLod
		}

		[Token(Token = "0x20004EE")]
		public enum LodDistanceMode
		{
			[Token(Token = "0x40018BC")]
			Automatic,
			[Token(Token = "0x40018BD")]
			Manual
		}

		[Serializable]
		[Token(Token = "0x20004EF")]
		public class LOD
		{
			[Token(Token = "0x40018BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform searchParent;

			[Token(Token = "0x40018BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sphere3 sphere;

			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xB639B8", Offset = "0xB639B8", VA = "0xB639B8")]
			public LOD()
			{
			}

			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0xB642B0", Offset = "0xB642B0", VA = "0xB642B0")]
			public LOD(Transform searchParent)
			{
			}
		}

		[Token(Token = "0x20004F0")]
		public class Cell : BaseOctree.Cell
		{
			[Token(Token = "0x40018C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public new Cell[] cells;

			[Token(Token = "0x40018C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private AABB3 box;

			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0xB6432C", Offset = "0xB6432C", VA = "0xB6432C")]
			public Cell()
			{
			}

			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0xB63550", Offset = "0xB63550", VA = "0xB63550")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0xB63A88", Offset = "0xB63A88", VA = "0xB63A88")]
			public void AddMeshRenderer(MeshRenderer mr, Vector3 position, int lodLevel, int lodLevels)
			{
			}

			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0xB64334", Offset = "0xB64334", VA = "0xB64334")]
			private void AddMeshRendererInternal(MeshRenderer mr, Vector3 position, int lodLevel, int lodLevels)
			{
			}

			[Token(Token = "0x6001B3F")]
			[Address(RVA = "0xB63C20", Offset = "0xB63C20", VA = "0xB63C20")]
			public void AutoLodInternal(LOD[] lods, float lodCulledDistance)
			{
			}

			[Token(Token = "0x6001B40")]
			[Address(RVA = "0xB63F38", Offset = "0xB63F38", VA = "0xB63F38")]
			public void LodInternal(LOD[] lods, int lodLevel)
			{
			}

			[Token(Token = "0x6001B41")]
			[Address(RVA = "0xB64118", Offset = "0xB64118", VA = "0xB64118")]
			public void DrawGizmos(LOD[] lods)
			{
			}

			[Token(Token = "0x6001B42")]
			[Address(RVA = "0xB64690", Offset = "0xB64690", VA = "0xB64690")]
			public void DrawGizmosInternal()
			{
			}
		}

		[Token(Token = "0x20004F1")]
		public class MaxCell : Cell
		{
			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public List<MeshRenderer>[] mrList;

			[Token(Token = "0x40018C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int currentLod;

			[Token(Token = "0x6001B43")]
			[Address(RVA = "0xB6486C", Offset = "0xB6486C", VA = "0xB6486C")]
			public MaxCell()
			{
			}
		}

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool drawGizmos;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LOD[] lods;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] distances;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LodDistanceMode lodDistanceMode;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LodMode lodMode;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int showLod;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool lodCulled;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float lodCullDistance;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 octreeCenter;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 octreeSize;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int maxLevels;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool search;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Cell octree;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform cameraMainT;

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xB63480", Offset = "0xB63480", VA = "0xB63480")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xB634AC", Offset = "0xB634AC", VA = "0xB634AC")]
		private void InitOctree()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xB63558", Offset = "0xB63558", VA = "0xB63558")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xB636E0", Offset = "0xB636E0", VA = "0xB636E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xB63814", Offset = "0xB63814", VA = "0xB63814")]
		public void UpdateLods(MeshCombiner meshCombiner, int lodAmount)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xB63A20", Offset = "0xB63A20", VA = "0xB63A20")]
		public void UpdateDistances(MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xB63584", Offset = "0xB63584", VA = "0xB63584")]
		public void Search()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xB63B10", Offset = "0xB63B10", VA = "0xB63B10")]
		public void ResetOctree()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xB6370C", Offset = "0xB6370C", VA = "0xB6370C")]
		public void Lod(LodMode lodMode)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xB640F0", Offset = "0xB640F0", VA = "0xB640F0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xB64228", Offset = "0xB64228", VA = "0xB64228")]
		public CombinedLODManager()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	[ExecuteInEditMode]
	public class MeshCombineJobManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004F3")]
		public class JobSettings
		{
			[Token(Token = "0x40018D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombineJobMode combineJobMode;

			[Token(Token = "0x40018D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ThreadAmountMode threadAmountMode;

			[Token(Token = "0x40018D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int combineMeshesPerFrame;

			[Token(Token = "0x40018D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool useMultiThreading;

			[Token(Token = "0x40018D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool useMainThread;

			[Token(Token = "0x40018DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int customThreadAmount;

			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool showStats;

			[Token(Token = "0x6001B53")]
			[Address(RVA = "0xB65B08", Offset = "0xB65B08", VA = "0xB65B08")]
			public void CopySettings(JobSettings source)
			{
			}

			[Token(Token = "0x6001B54")]
			[Address(RVA = "0xB677F8", Offset = "0xB677F8", VA = "0xB677F8")]
			public void ReportStatus()
			{
			}

			[Token(Token = "0x6001B55")]
			[Address(RVA = "0xB677D8", Offset = "0xB677D8", VA = "0xB677D8")]
			public JobSettings()
			{
			}
		}

		[Token(Token = "0x20004F4")]
		public enum CombineJobMode
		{
			[Token(Token = "0x40018DD")]
			CombineAtOnce,
			[Token(Token = "0x40018DE")]
			CombinePerFrame
		}

		[Token(Token = "0x20004F5")]
		public enum ThreadAmountMode
		{
			[Token(Token = "0x40018E0")]
			AllThreads,
			[Token(Token = "0x40018E1")]
			HalfThreads,
			[Token(Token = "0x40018E2")]
			Custom
		}

		[Token(Token = "0x20004F6")]
		public enum ThreadState
		{
			[Token(Token = "0x40018E4")]
			isReady,
			[Token(Token = "0x40018E5")]
			isRunning,
			[Token(Token = "0x40018E6")]
			hasError
		}

		[Token(Token = "0x20004F7")]
		public class MeshCombineJobsThread
		{
			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int threadId;

			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ThreadState threadState;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Queue<MeshCombineJob> meshCombineJobs;

			[Token(Token = "0x6001B56")]
			[Address(RVA = "0xB64D98", Offset = "0xB64D98", VA = "0xB64D98")]
			public MeshCombineJobsThread(int threadId)
			{
			}

			[Token(Token = "0x6001B57")]
			[Address(RVA = "0xB6650C", Offset = "0xB6650C", VA = "0xB6650C")]
			public void ExecuteJobsThread(object state)
			{
			}
		}

		[Token(Token = "0x20004F8")]
		public class MeshCombineJob
		{
			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshCombiner meshCombiner;

			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshObjectsHolder meshObjectsHolder;

			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform parent;

			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x40018EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int startIndex;

			[Token(Token = "0x40018EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int endIndex;

			[Token(Token = "0x40018F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool firstMesh;

			[Token(Token = "0x40018F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool intersectsSurface;

			[Token(Token = "0x40018F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int backFaceTrianglesRemoved;

			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int trianglesRemoved;

			[Token(Token = "0x6001B58")]
			[Address(RVA = "0xB66234", Offset = "0xB66234", VA = "0xB66234")]
			public MeshCombineJob(MeshCombiner meshCombiner, MeshObjectsHolder meshObjectsHolder, Transform parent, Vector3 position, int startIndex, int length, bool firstMesh, bool intersectsSurface)
			{
			}
		}

		[Token(Token = "0x20004F9")]
		public class NewMeshObject
		{
			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshCombineJob meshCombineJob;

			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshCache.SubMeshCache newMeshCache;

			[Token(Token = "0x40018F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool allSkipped;

			[Token(Token = "0x40018F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 newPosition;

			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private byte[] vertexIsBelow;

			[Token(Token = "0x40018F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private readonly byte belowSurface;

			[Token(Token = "0x40018FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			private readonly byte aboveSurface;

			[Token(Token = "0x6001B59")]
			[Address(RVA = "0xB67A44", Offset = "0xB67A44", VA = "0xB67A44")]
			public NewMeshObject()
			{
			}

			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0xB67AC4", Offset = "0xB67AC4", VA = "0xB67AC4")]
			public void Combine(MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x6001B5B")]
			private void HasArray<T>(ref bool hasNewArray, bool hasArray, ref T[] newArray, Array array, int vertexCount, int totalVertices)
			{
			}

			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0xB68894", Offset = "0xB68894", VA = "0xB68894")]
			public void RemoveTrianglesBelowSurface(Transform t, MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0xB68574", Offset = "0xB68574", VA = "0xB68574")]
			public void RemoveBackFaceTriangles()
			{
			}

			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0xB68BFC", Offset = "0xB68BFC", VA = "0xB68BFC")]
			private void ArrangeTriangles()
			{
			}

			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0xB66D88", Offset = "0xB66D88", VA = "0xB66D88")]
			public void CreateMesh()
			{
			}
		}

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MeshCombineJobManager instance;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JobSettings jobSettings;

		[NonSerialized]
		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<NewMeshObject> newMeshObjectsPool;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<Mesh, MeshCache> meshCacheDictionary;

		[NonSerialized]
		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int totalNewMeshObjects;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Queue<NewMeshObject> newMeshObjectsDone;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Queue<NewMeshObject> newMeshObjectsDoneThread;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Queue<MeshCombineJob> meshCombineJobs;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshCombineJobsThread[] meshCombineJobsThreads;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int cores;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int threadAmount;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int startThreadId;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int endThreadId;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool abort;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshCache.SubMeshCache tempMeshCache;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Ray ray;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RaycastHit hitInfo;

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xB64874", Offset = "0xB64874", VA = "0xB64874")]
		public static MeshCombineJobManager CreateInstance(MeshCombiner meshCombiner, GameObject instantiatePrefab)
		{
			return null;
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xB64BD8", Offset = "0xB64BD8", VA = "0xB64BD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xB64C24", Offset = "0xB64C24", VA = "0xB64C24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xB64C94", Offset = "0xB64C94", VA = "0xB64C94")]
		public void Init()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xB64E28", Offset = "0xB64E28", VA = "0xB64E28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xB64E2C", Offset = "0xB64E2C", VA = "0xB64E2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xB6515C", Offset = "0xB6515C", VA = "0xB6515C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xB65184", Offset = "0xB65184", VA = "0xB65184")]
		private void MyUpdate()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xB6499C", Offset = "0xB6499C", VA = "0xB6499C")]
		public void SetJobMode(JobSettings newJobSettings)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xB65B44", Offset = "0xB65B44", VA = "0xB65B44")]
		public void AddJob(MeshCombiner meshCombiner, MeshObjectsHolder meshObjectsHolder, Transform parent, Vector3 position)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xB662F0", Offset = "0xB662F0", VA = "0xB662F0")]
		public int MeshIntersectsSurface(MeshCombiner meshCombiner, CachedGameObject cachedGO)
		{
			return default(int);
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xB64E80", Offset = "0xB64E80", VA = "0xB64E80")]
		public void AbortJobs()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xB65200", Offset = "0xB65200", VA = "0xB65200")]
		public void ExecuteJobs()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xB657C4", Offset = "0xB657C4", VA = "0xB657C4")]
		public void CombineMeshesDone()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xB67574", Offset = "0xB67574", VA = "0xB67574")]
		public MeshCombineJobManager()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class MeshCache
	{
		[Token(Token = "0x20004FB")]
		public class SubMeshCache
		{
			[Token(Token = "0x40018FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x40018FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x4001900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2[] uv;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv2;

			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2[] uv3;

			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2[] uv4;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color32[] colors32;

			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int[] triangles;

			[Token(Token = "0x4001907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool hasNormals;

			[Token(Token = "0x4001908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool hasTangents;

			[Token(Token = "0x4001909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
			public bool hasUv;

			[Token(Token = "0x400190A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
			public bool hasUv2;

			[Token(Token = "0x400190B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool hasUv3;

			[Token(Token = "0x400190C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
			public bool hasUv4;

			[Token(Token = "0x400190D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
			public bool hasColors;

			[Token(Token = "0x400190E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int vertexCount;

			[Token(Token = "0x400190F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int triangleCount;

			[Token(Token = "0x6001B61")]
			[Address(RVA = "0xB684D8", Offset = "0xB684D8", VA = "0xB684D8")]
			public SubMeshCache()
			{
			}

			[Token(Token = "0x6001B62")]
			[Address(RVA = "0xB68CC8", Offset = "0xB68CC8", VA = "0xB68CC8")]
			public void CopySubMeshCache(SubMeshCache source)
			{
			}

			[Token(Token = "0x6001B63")]
			public void CopyArray<T>(Array sourceArray, ref T[] destinationArray, int vertexCount)
			{
			}

			[Token(Token = "0x6001B64")]
			[Address(RVA = "0xB69434", Offset = "0xB69434", VA = "0xB69434")]
			public SubMeshCache(Mesh mesh, int subMeshIndex)
			{
			}

			[Token(Token = "0x6001B65")]
			[Address(RVA = "0xB6934C", Offset = "0xB6934C", VA = "0xB6934C")]
			public SubMeshCache(Mesh mesh, bool assignTriangles)
			{
			}

			[Token(Token = "0x6001B66")]
			[Address(RVA = "0xB69484", Offset = "0xB69484", VA = "0xB69484")]
			public void CheckHasArrays()
			{
			}

			[Token(Token = "0x6001B67")]
			[Address(RVA = "0xB68568", Offset = "0xB68568", VA = "0xB68568")]
			public void ResetHasBooleans()
			{
			}

			[Token(Token = "0x6001B68")]
			[Address(RVA = "0xB684E0", Offset = "0xB684E0", VA = "0xB684E0")]
			public void Init(bool initTriangles = true)
			{
			}

			[Token(Token = "0x6001B69")]
			[Address(RVA = "0xB68E90", Offset = "0xB68E90", VA = "0xB68E90")]
			public void RebuildVertexBuffer(SubMeshCache sub, bool resizeArrays)
			{
			}
		}

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SubMeshCache[] subMeshCache;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subMeshCount;

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xB66080", Offset = "0xB66080", VA = "0xB66080")]
		public MeshCache(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public static class MeshExtensionAlloc
	{
		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xB69530", Offset = "0xB69530", VA = "0xB69530")]
		public static void ApplyVertices(Mesh mesh, Vector3[] vertices, int length)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xB695B8", Offset = "0xB695B8", VA = "0xB695B8")]
		public static void ApplyNormals(Mesh mesh, Vector3[] normals, int length)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xB69640", Offset = "0xB69640", VA = "0xB69640")]
		public static void ApplyTangents(Mesh mesh, Vector4[] tangents, int length)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xB696C8", Offset = "0xB696C8", VA = "0xB696C8")]
		public static void ApplyUvs(Mesh mesh, int channel, Vector2[] uvs, int length)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xB697DC", Offset = "0xB697DC", VA = "0xB697DC")]
		public static void ApplyColors32(Mesh mesh, Color32[] colors, int length)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xB69864", Offset = "0xB69864", VA = "0xB69864")]
		public static void ApplyTriangles(Mesh mesh, int[] triangles, int length)
		{
		}
	}
	[Token(Token = "0x20004FD")]
	[ExecuteInEditMode]
	public class MeshCombiner : MonoBehaviour
	{
		[Token(Token = "0x20004FE")]
		public enum HandleComponent
		{
			[Token(Token = "0x4001950")]
			Disable,
			[Token(Token = "0x4001951")]
			Destroy
		}

		[Token(Token = "0x20004FF")]
		public enum ObjectCenter
		{
			[Token(Token = "0x4001953")]
			BoundsCenter,
			[Token(Token = "0x4001954")]
			TransformPosition
		}

		[Token(Token = "0x2000500")]
		public enum BackFaceTriangleMode
		{
			[Token(Token = "0x4001956")]
			Box,
			[Token(Token = "0x4001957")]
			Direction
		}

		[Token(Token = "0x2000501")]
		public delegate void DefaultMethod();

		[Token(Token = "0x2000502")]
		public enum RebakeLightingMode
		{
			[Token(Token = "0x4001959")]
			CopyLightmapUvs,
			[Token(Token = "0x400195A")]
			RegenarateLightmapUvs
		}

		[Serializable]
		[Token(Token = "0x2000503")]
		public class SearchOptions
		{
			[Token(Token = "0x2000504")]
			public enum ComponentCondition
			{
				[Token(Token = "0x4001974")]
				And,
				[Token(Token = "0x4001975")]
				Or
			}

			[Token(Token = "0x400195B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject parent;

			[Token(Token = "0x400195C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ObjectCenter objectCenter;

			[Token(Token = "0x400195D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool useSearchBox;

			[Token(Token = "0x400195E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bounds searchBoxBounds;

			[Token(Token = "0x400195F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool searchBoxSquare;

			[Token(Token = "0x4001960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 searchBoxPivot;

			[Token(Token = "0x4001961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 searchBoxSize;

			[Token(Token = "0x4001962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool useMaxBoundsFactor;

			[Token(Token = "0x4001963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float maxBoundsFactor;

			[Token(Token = "0x4001964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool useVertexInputLimit;

			[Token(Token = "0x4001965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int vertexInputLimit;

			[Token(Token = "0x4001966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public bool useVertexInputLimitLod;

			[Token(Token = "0x4001967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int vertexInputLimitLod;

			[Token(Token = "0x4001968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public bool useLayerMask;

			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LayerMask layerMask;

			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public bool useTag;

			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public string tag;

			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public bool useNameContains;

			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public List<string> nameContainList;

			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public bool onlyActive;

			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
			public bool onlyStatic;

			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
			public bool useComponentsFilter;

			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public ComponentCondition componentCondition;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public List<string> componentNameList;

			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0xB6E6E0", Offset = "0xB6E6E0", VA = "0xB6E6E0")]
			public SearchOptions(GameObject parent)
			{
			}

			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0xB6E7DC", Offset = "0xB6E7DC", VA = "0xB6E7DC")]
			public void GetSearchBoxBounds()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000505")]
		public class LODGroupSettings
		{
			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LODSettings[] lodSettings;

			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xB6E840", Offset = "0xB6E840", VA = "0xB6E840")]
			public LODGroupSettings(int lodParentIndex)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000506")]
		public class LODSettings
		{
			[Token(Token = "0x4001977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float screenRelativeTransitionHeight;

			[Token(Token = "0x4001978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float fadeTransitionWidth;

			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xB6E974", Offset = "0xB6E974", VA = "0xB6E974")]
			public LODSettings(float screenRelativeTransitionHeight)
			{
			}
		}

		[Token(Token = "0x2000507")]
		public class LodParentHolder
		{
			[Token(Token = "0x4001979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x400197A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x400197B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool found;

			[Token(Token = "0x400197C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] lods;

			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xB6E99C", Offset = "0xB6E99C", VA = "0xB6E99C")]
			public LodParentHolder(int lodCount)
			{
			}

			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0xB6EA04", Offset = "0xB6EA04", VA = "0xB6EA04")]
			public void Create(MeshCombiner meshCombiner, int lodParentIndex)
			{
			}

			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0xB6EB40", Offset = "0xB6EB40", VA = "0xB6EB40")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<MeshCombiner> instances;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshCombineJobManager.JobSettings jobSettings;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LODGroupSettings[] lodGroupsSettings;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject instantiatePrefab;

		[Token(Token = "0x4001915")]
		public const int maxLodCount = 8;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string saveMeshesFolder;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ObjectOctree.Cell octree;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<ObjectOctree.MaxCell> changedCells;

		[NonSerialized]
		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool octreeContainsObjects;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool useCells;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int cellSize;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 cellOffset;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool useVertexOutputLimit;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int vertexOutputLimit;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public RebakeLightingMode rebakeLightingMode;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool copyBakedLighting;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool validCopyBakedLighting;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool rebakeLighting;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool validRebakeLighting;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int outputLayer;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float scaleInLightmap;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool addMeshColliders;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		public bool makeMeshesUnreadable;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		public bool removeTrianglesBelowSurface;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LayerMask surfaceLayerMask;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int maxSurfaceHeight;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool removeBackFaceTriangles;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public BackFaceTriangleMode backFaceTriangleMode;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 backFaceDirection;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Bounds backFaceBounds;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool twoSidedShadows;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public bool combineInRuntime;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
		public bool combineOnStart;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
		public bool useCombineSwapKey;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public KeyCode combineSwapKey;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public HandleComponent originalMeshRenderers;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public HandleComponent originalLODGroups;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public SearchOptions searchOptions;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector3 oldPosition;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public Vector3 oldScale;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public LodParentHolder[] lodParentHolders;

		[NonSerialized]
		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public List<CachedGameObject> foundObjects;

		[NonSerialized]
		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public List<CachedLodGameObject> foundLodObjects;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private HashSet<Transform> uniqueLodObjects;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private HashSet<LODGroup> foundLodGroups;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public List<Mesh> unreadableMeshes;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public int mrDisabledCount;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public bool combined;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		public bool activeOriginal;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
		public bool combinedActive;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
		public bool drawGizmos;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool drawMeshBounds;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public int originalTotalVertices;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public int originalTotalTriangles;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public int totalVertices;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public int totalTriangles;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public int originalDrawCalls;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public int newDrawCalls;

		[NonSerialized]
		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private MeshCombiner thisInstance;

		[NonSerialized]
		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int jobCount;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private bool hasFoundFirstObject;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Bounds bounds;

		[Token(Token = "0x14000020")]
		public event DefaultMethod OnCombiningReady
		{
			[Token(Token = "0x6001B70")]
			[Address(RVA = "0xB698EC", Offset = "0xB698EC", VA = "0xB698EC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0xB69988", Offset = "0xB69988", VA = "0xB69988")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xB67558", Offset = "0xB67558", VA = "0xB67558")]
		public void ExecuteOnCombiningReady()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xB69A24", Offset = "0xB69A24", VA = "0xB69A24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xB69AF4", Offset = "0xB69AF4", VA = "0xB69AF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xB69C04", Offset = "0xB69C04", VA = "0xB69C04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xB69F38", Offset = "0xB69F38", VA = "0xB69F38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xB6A068", Offset = "0xB6A068", VA = "0xB6A068")]
		public static MeshCombiner GetInstance(string name)
		{
			return null;
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xB6A19C", Offset = "0xB6A19C", VA = "0xB6A19C")]
		public void CopyJobSettingsToAllInstances()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xB69D24", Offset = "0xB69D24", VA = "0xB69D24")]
		public void InitMeshCombineJobManager()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xB6A280", Offset = "0xB6A280", VA = "0xB6A280")]
		public void CreateLodGroupsSettings()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xB69DC4", Offset = "0xB69DC4", VA = "0xB69DC4")]
		private void StartRuntime()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xB6A51C", Offset = "0xB6A51C", VA = "0xB6A51C")]
		public void DestroyCombinedObjects()
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xB6A58C", Offset = "0xB6A58C", VA = "0xB6A58C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xB6A8EC", Offset = "0xB6A8EC", VA = "0xB6A8EC")]
		public void AddObjects(List<Transform> transforms, bool useSearchOptions, bool checkForLODGroups = true)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xB6B2C8", Offset = "0xB6B2C8", VA = "0xB6B2C8")]
		public void AddObjectsAutomatically()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xB6B4D0", Offset = "0xB6B4D0", VA = "0xB6B4D0")]
		public void AddFoundObjectsToOctree()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xB6A774", Offset = "0xB6A774", VA = "0xB6A774")]
		public void ResetOctree()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xB6B8C8", Offset = "0xB6B8C8", VA = "0xB6B8C8")]
		public void CalcOctreeSize(Bounds bounds)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xB6BB68", Offset = "0xB6BB68", VA = "0xB6BB68")]
		public void ApplyChanges()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xB6A368", Offset = "0xB6A368", VA = "0xB6A368")]
		public void CombineAll()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xB6A7FC", Offset = "0xB6A7FC", VA = "0xB6A7FC")]
		private void InitAndResetLodParentsCount()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xB6B394", Offset = "0xB6B394", VA = "0xB6B394")]
		public void AddObjectsFromSearchParent()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xB6AB28", Offset = "0xB6AB28", VA = "0xB6AB28")]
		private void AddLodGroups(LODGroup[] lodGroups, bool useSearchOptions = true)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xB6B050", Offset = "0xB6B050", VA = "0xB6B050")]
		private void AddTransforms(Transform[] transforms, bool useSearchOptions = true)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xB6C2A0", Offset = "0xB6C2A0", VA = "0xB6C2A0")]
		private CachedGameObject ValidObject(Transform t, bool isLodObject, bool useSearchOptions = true)
		{
			return null;
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xB6A568", Offset = "0xB6A568", VA = "0xB6A568")]
		public void RestoreOriginalRenderersAndLODGroups()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xB6C920", Offset = "0xB6C920", VA = "0xB6C920")]
		public void GetOriginalRenderersAndLODGroups()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xB6CD00", Offset = "0xB6CD00", VA = "0xB6CD00")]
		public void SwapCombine()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xB6BC68", Offset = "0xB6BC68", VA = "0xB6BC68")]
		public void ExecuteHandleObjects(bool active, HandleComponent handleOriginalObjects, HandleComponent handleOriginalLodGroups)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xB6CD3C", Offset = "0xB6CD3C", VA = "0xB6CD3C")]
		private void AddDisabledMeshRenderer(CachedGameObject cachedGO)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xB6CE4C", Offset = "0xB6CE4C", VA = "0xB6CE4C")]
		private void AddDisabledLodMeshRenderer(CachedLodGameObject cachedLodGO)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xB6CF5C", Offset = "0xB6CF5C", VA = "0xB6CF5C")]
		private void RemoveDisabledMeshRenderer(CachedGameObject cachedGO)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xB6D07C", Offset = "0xB6D07C", VA = "0xB6D07C")]
		private void RemoveDisabledLodMeshRenderer(CachedLodGameObject cachedLodGO)
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xB6D19C", Offset = "0xB6D19C", VA = "0xB6D19C")]
		public void MakeMeshesReadableInImportSettings()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xB6D1A0", Offset = "0xB6D1A0", VA = "0xB6D1A0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xB6B6C0", Offset = "0xB6B6C0", VA = "0xB6B6C0")]
		private void LogOctreeInfo()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xB6D30C", Offset = "0xB6D30C", VA = "0xB6D30C")]
		public MeshCombiner()
		{
		}
	}
	[Token(Token = "0x2000508")]
	[ExecuteInEditMode]
	public class ObjectSpawner : MonoBehaviour
	{
		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objects;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float density;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 scaleRange;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 rotationRange;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 heightRange;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float scaleMulti;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float resolutionPerMeter;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool spawnInRuntime;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool spawn;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool deleteChildren;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform t;

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xB6EB6C", Offset = "0xB6EB6C", VA = "0xB6EB6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xB6F02C", Offset = "0xB6F02C", VA = "0xB6F02C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xB6F068", Offset = "0xB6F068", VA = "0xB6F068")]
		public void DeleteChildren()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xB6EBA8", Offset = "0xB6EBA8", VA = "0xB6EBA8")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xB6F1B8", Offset = "0xB6F1B8", VA = "0xB6F1B8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xB6F264", Offset = "0xB6F264", VA = "0xB6F264")]
		public ObjectSpawner()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class RemoveGeometryBelowTerrain : MonoBehaviour
	{
		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int totalTriangles;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int removeTriangles;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int skippedObjects;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Transform> terrains;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Transform> meshTerrains;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Bounds[] terrainBounds;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Bounds[] meshBounds;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Terrain[] terrainComponents;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Terrain[] terrainArray;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Bounds[] terrainBoundsArray;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer[] mrs;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh[] meshTerrainComponents;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh[] meshArray;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool runOnStart;

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xB6F2A8", Offset = "0xB6F2A8", VA = "0xB6F2A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xB6F2D8", Offset = "0xB6F2D8", VA = "0xB6F2D8")]
		public void Remove(GameObject go)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xB6F634", Offset = "0xB6F634", VA = "0xB6F634")]
		public void RemoveMesh(Transform t, Mesh mesh)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xB6F7FC", Offset = "0xB6F7FC", VA = "0xB6F7FC")]
		public bool IsMeshUnderTerrain(Transform t, Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xB6FBB8", Offset = "0xB6FBB8", VA = "0xB6FBB8")]
		public void GetTerrainComponents()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xB6FCE0", Offset = "0xB6FCE0", VA = "0xB6FCE0")]
		public void GetMeshRenderersAndComponents()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xB6FEAC", Offset = "0xB6FEAC", VA = "0xB6FEAC")]
		public void CreateTerrainBounds()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xB7011C", Offset = "0xB7011C", VA = "0xB7011C")]
		public void MakeIntersectLists(Bounds bounds)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xB706B0", Offset = "0xB706B0", VA = "0xB706B0")]
		public int InterectTerrain(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xB70744", Offset = "0xB70744", VA = "0xB70744")]
		public int InterectMesh(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xB707D8", Offset = "0xB707D8", VA = "0xB707D8")]
		public float GetTerrainHeight(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xB6F8B8", Offset = "0xB6F8B8", VA = "0xB6F8B8")]
		public void RemoveTriangles(Transform t, List<int> newTriangles, Vector3[] vertices)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xB708BC", Offset = "0xB708BC", VA = "0xB708BC")]
		public RemoveGeometryBelowTerrain()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class SwapCombineKey : MonoBehaviour
	{
		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SwapCombineKey instance;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MeshCombiner> meshCombinerList;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshCombiner meshCombiner;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIStyle textStyle;

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xB7095C", Offset = "0xB7095C", VA = "0xB7095C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xB70A54", Offset = "0xB70A54", VA = "0xB70A54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xB70A9C", Offset = "0xB70A9C", VA = "0xB70A9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xB70AD4", Offset = "0xB70AD4", VA = "0xB70AD4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xB70DEC", Offset = "0xB70DEC", VA = "0xB70DEC")]
		public SwapCombineKey()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public class CachedComponents : MonoBehaviour
	{
		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform t;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer mr;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter mf;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GarbageCollectMesh garbageCollectMesh;

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xB70E68", Offset = "0xB70E68", VA = "0xB70E68")]
		public CachedComponents()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class Console : MonoBehaviour
	{
		[Token(Token = "0x200050D")]
		public class LogEntry
		{
			[Token(Token = "0x40019B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string logString;

			[Token(Token = "0x40019B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string stackTrace;

			[Token(Token = "0x40019B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LogType logType;

			[Token(Token = "0x40019B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int commandType;

			[Token(Token = "0x40019B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool unityLog;

			[Token(Token = "0x40019B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float tStamp;

			[Token(Token = "0x40019BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject go;

			[Token(Token = "0x40019BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MeshCombiner meshCombiner;

			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xB71AE0", Offset = "0xB71AE0", VA = "0xB71AE0")]
			public LogEntry(string logString, string stackTrace, LogType logType, bool unityLog = false, int commandType = 0, [Optional] GameObject go, [Optional] MeshCombiner meshCombiner)
			{
			}
		}

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Console instance;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode consoleKey;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool logActive;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool showConsole;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool showOnError;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool combineAutomatic;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool showLast;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool setFocus;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject selectGO;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<LogEntry> logs;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rect window;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rect inputRect;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rect logRect;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rect vScrollRect;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string inputText;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float scrollPos;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int lines;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool showUnityLog;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool showInputLog;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MeshCombiner[] meshCombiners;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MeshCombiner selectedMeshCombiner;

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xB70E70", Offset = "0xB70E70", VA = "0xB70E70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xB70F68", Offset = "0xB70F68", VA = "0xB70F68")]
		private void ReportStartup()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xB70EF8", Offset = "0xB70EF8", VA = "0xB70EF8")]
		private void FindMeshCombiners()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xB71264", Offset = "0xB71264", VA = "0xB71264")]
		private void ReportMeshCombiners(bool reportSelected = true)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xB715CC", Offset = "0xB715CC", VA = "0xB715CC")]
		private void ReportMeshCombiner(MeshCombiner meshCombiner, bool foundText = false)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xB7136C", Offset = "0xB7136C", VA = "0xB7136C")]
		public int SelectMeshCombiner(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xB71998", Offset = "0xB71998", VA = "0xB71998")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xB71A18", Offset = "0xB71A18", VA = "0xB71A18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xB71A98", Offset = "0xB71A98", VA = "0xB71A98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xB7111C", Offset = "0xB7111C", VA = "0xB7111C")]
		public static void Log(string logString, int commandType = 0, [Optional] GameObject go, [Optional] MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xB71B44", Offset = "0xB71B44", VA = "0xB71B44")]
		private void HandleLog(string logString, string stackTrace, LogType logType)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xB71C8C", Offset = "0xB71C8C", VA = "0xB71C8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xB71C74", Offset = "0xB71C74", VA = "0xB71C74")]
		private void SetConsoleActive(bool active)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xB71CC4", Offset = "0xB71CC4", VA = "0xB71CC4")]
		private void ExecuteCommand(string cmd)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xB73EB4", Offset = "0xB73EB4", VA = "0xB73EB4")]
		private void DirSort()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xB73D14", Offset = "0xB73D14", VA = "0xB73D14")]
		private void DirSort(string name)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xB73F0C", Offset = "0xB73F0C", VA = "0xB73F0C")]
		public void SortLog(GameObject[] gos, bool showMeshInfo = false)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xB74788", Offset = "0xB74788", VA = "0xB74788")]
		private string GetMeshInfo(GameObject go, ref int meshCount)
		{
			return null;
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xB74A7C", Offset = "0xB74A7C", VA = "0xB74A7C")]
		private void TimeStep(string cmd)
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xB74AA8", Offset = "0xB74AA8", VA = "0xB74AA8")]
		private void TimeScale(string cmd)
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xB7370C", Offset = "0xB7370C", VA = "0xB7370C")]
		private void Clear(LogEntry log, string cmd)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xB73A44", Offset = "0xB73A44", VA = "0xB73A44")]
		private void DirAll()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xB72C18", Offset = "0xB72C18", VA = "0xB72C18")]
		private void Dir()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xB73128", Offset = "0xB73128", VA = "0xB73128")]
		private void Components(LogEntry log)
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xB74C28", Offset = "0xB74C28", VA = "0xB74C28")]
		private void ShowPath(bool showLines = true)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xB74AD4", Offset = "0xB74AD4", VA = "0xB74AD4")]
		private string GetPath(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xB73290", Offset = "0xB73290", VA = "0xB73290")]
		private void CD(LogEntry log, string name)
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xB73470", Offset = "0xB73470", VA = "0xB73470")]
		public void SetActiveContains(string textContains, bool active)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xB73900", Offset = "0xB73900", VA = "0xB73900")]
		public void DirContains(string textContains)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xB74CF4", Offset = "0xB74CF4", VA = "0xB74CF4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xB7595C", Offset = "0xB7595C", VA = "0xB7595C")]
		private void AnimateColor(Color col, LogEntry log, float multi)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xB75A48", Offset = "0xB75A48", VA = "0xB75A48")]
		public Console()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class DirectDraw : MonoBehaviour
	{
		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer[] mrs;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh[] meshes;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material[] mats;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] positions;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion[] rotations;

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xB75AE8", Offset = "0xB75AE8", VA = "0xB75AE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xB75DC4", Offset = "0xB75DC4", VA = "0xB75DC4")]
		private void SetMeshRenderersEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xB75E2C", Offset = "0xB75E2C", VA = "0xB75E2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xB75F8C", Offset = "0xB75F8C", VA = "0xB75F8C")]
		public DirectDraw()
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class DisabledLodMeshRender : MonoBehaviour
	{
		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CachedLodGameObject cachedLodGO;

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xB75F94", Offset = "0xB75F94", VA = "0xB75F94")]
		public DisabledLodMeshRender()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public class DisabledMeshRenderer : MonoBehaviour
	{
		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CachedGameObject cachedGO;

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xB75F9C", Offset = "0xB75F9C", VA = "0xB75F9C")]
		public DisabledMeshRenderer()
		{
		}
	}
	[Token(Token = "0x2000511")]
	[ExecuteInEditMode]
	public class GarbageCollectMesh : MonoBehaviour
	{
		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xB75FA4", Offset = "0xB75FA4", VA = "0xB75FA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xB76034", Offset = "0xB76034", VA = "0xB76034")]
		public GarbageCollectMesh()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class AABB3
	{
		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 min;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 max;

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xB7603C", Offset = "0xB7603C", VA = "0xB7603C")]
		public AABB3(Vector3 min, Vector3 max)
		{
		}
	}
	[Token(Token = "0x2000513")]
	public class Sphere3
	{
		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float radius;

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xB76090", Offset = "0xB76090", VA = "0xB76090")]
		public Sphere3()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xB76098", Offset = "0xB76098", VA = "0xB76098")]
		public Sphere3(Vector3 center, float radius)
		{
		}
	}
	[Token(Token = "0x2000514")]
	public static class Mathw
	{
		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xB760D8", Offset = "0xB760D8", VA = "0xB760D8")]
		public static bool IntersectAABB3Sphere3(AABB3 box, Sphere3 sphere)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000515")]
	public class MCS_CameraController : MonoBehaviour
	{
		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float mouseMoveSpeed;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float shiftMulti;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float controlMulti;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 oldMousePosition;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject cameraMountGO;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject cameraChildGO;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform cameraMountT;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform cameraChildT;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform t;

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xB7618C", Offset = "0xB7618C", VA = "0xB7618C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xB761AC", Offset = "0xB761AC", VA = "0xB761AC")]
		private void CreateParents()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xB762EC", Offset = "0xB762EC", VA = "0xB762EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xB765B8", Offset = "0xB765B8", VA = "0xB765B8")]
		public MCS_CameraController()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public class MCS_FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x2000517")]
		public enum GUIType
		{
			[Token(Token = "0x4001A0F")]
			DisplayRunning,
			[Token(Token = "0x4001A10")]
			DisplayResults,
			[Token(Token = "0x4001A11")]
			DisplayNothing
		}

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MCS_FPSCounter instance;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("___ Settings ___________________________________________________________________________________________________________")]
		public float interval;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GUIType displayType;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 gradientRange;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font fontRun;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font fontResult;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture logo;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showLogoOnResultsScreen;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public KeyCode showHideButton;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool acceptInput;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool reset;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Header("___ Results ___________________________________________________________________________________________________________")]
		public float currentFPS;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float averageFPS;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minimumFPS;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maximumFPS;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int totalFrameCount;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int tempFrameCount;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double tStamp;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double tStampTemp;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string currentFPSText;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string avgFPSText;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string minFPSText;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string maxFSPText;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GUIStyle bigStyle;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GUIStyle bigStyleShadow;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GUIStyle smallStyle;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GUIStyle smallStyleShadow;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GUIStyle smallStyleLabel;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GUIStyle headerStyle;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rect[] rectsRun;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Rect[] rectsResult;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Gradient gradient;

		[Token(Token = "0x40019F4")]
		private const float line1 = 4f;

		[Token(Token = "0x40019F5")]
		private const float line2 = 30f;

		[Token(Token = "0x40019F6")]
		private const float line3 = 44f;

		[Token(Token = "0x40019F7")]
		private const float line4 = 58f;

		[Token(Token = "0x40019F8")]
		private const float labelWidth = 26f;

		[Token(Token = "0x40019F9")]
		private const float paddingH = 8f;

		[Token(Token = "0x40019FA")]
		private const float lineHeight = 22f;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float columnRight;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float columnLeft;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Color fontShadow;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Color label;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Color colorCurrent;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Color colorAvg;

		[Token(Token = "0x4001A01")]
		private const string resultHeader = "BENCHMARK RESULTS";

		[Token(Token = "0x4001A02")]
		private const string resultLabelAvg = "AVERAGE FPS:";

		[Token(Token = "0x4001A03")]
		private const string resultLabelMin = "MINIMUM FPS:";

		[Token(Token = "0x4001A04")]
		private const string resultLabelMax = "MAXIMUM FPS:";

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GUIContent resultHeaderGUI;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private GUIContent reslutLabelAvgGUI;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GUIContent avgTextGUI;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GUIContent instructions;

		[Token(Token = "0x4001A09")]
		private const string runLabelAvg = "Avg:";

		[Token(Token = "0x4001A0A")]
		private const string runLabelMin = "Min:";

		[Token(Token = "0x4001A0B")]
		private const string runLabelMax = "Max:";

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector2 screenSize;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GUIType oldDisplayType;

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xB765CC", Offset = "0xB765CC", VA = "0xB765CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xB76768", Offset = "0xB76768", VA = "0xB76768")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xB76800", Offset = "0xB76800", VA = "0xB76800")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xB76E38", Offset = "0xB76E38", VA = "0xB76E38")]
		private void SetRectsRun()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xB77198", Offset = "0xB77198", VA = "0xB77198")]
		private void SetRectsResult()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xB776D4", Offset = "0xB776D4", VA = "0xB776D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xB77948", Offset = "0xB77948", VA = "0xB77948")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xB77CD8", Offset = "0xB77CD8", VA = "0xB77CD8")]
		public void StartBenchmark()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xB77CF8", Offset = "0xB77CF8", VA = "0xB77CF8")]
		public void StopBenchmark()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xB77AE8", Offset = "0xB77AE8", VA = "0xB77AE8")]
		private void GetFPS()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xB77AA8", Offset = "0xB77AA8", VA = "0xB77AA8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xB77A64", Offset = "0xB77A64", VA = "0xB77A64")]
		private Color EvaluateGradient(float f)
		{
			return default(Color);
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xB77D5C", Offset = "0xB77D5C", VA = "0xB77D5C")]
		public MCS_FPSCounter()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public static class Methods
	{
		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xB77F7C", Offset = "0xB77F7C", VA = "0xB77F7C")]
		public static Vector3 Clamp(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xB77FB0", Offset = "0xB77FB0", VA = "0xB77FB0")]
		public static Vector3 FloatToVector3(float v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xB77FBC", Offset = "0xB77FBC", VA = "0xB77FBC")]
		public static float SinDeg(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xB77FCC", Offset = "0xB77FCC", VA = "0xB77FCC")]
		public static void SetTag(GameObject go, string tag)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xB78070", Offset = "0xB78070", VA = "0xB78070")]
		public static void SetTagWhenCollider(GameObject go, string tag)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xB78194", Offset = "0xB78194", VA = "0xB78194")]
		public static void SetTagAndLayer(GameObject go, string tag, int layer)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xB78270", Offset = "0xB78270", VA = "0xB78270")]
		public static void SetLayer(GameObject go, int layer)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xB74554", Offset = "0xB74554", VA = "0xB74554")]
		public static bool Contains(string compare, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C01")]
		public static T[] Search<T>([Optional] GameObject parentGO)
		{
			return null;
		}

		[Token(Token = "0x6001C02")]
		public static T Find<T>(GameObject parentGO, string name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xB78330", Offset = "0xB78330", VA = "0xB78330")]
		public static void SetCollidersActive(Collider[] colliders, bool active, string[] nameList)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xB78418", Offset = "0xB78418", VA = "0xB78418")]
		public static void SelectChildrenWithMeshRenderer(Transform t)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xB7841C", Offset = "0xB7841C", VA = "0xB7841C")]
		public static void DestroyChildren(Transform t)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xB784E0", Offset = "0xB784E0", VA = "0xB784E0")]
		public static void Destroy(GameObject go)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xB78568", Offset = "0xB78568", VA = "0xB78568")]
		public static void SetChildrenActive(Transform t, bool active)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xB785E8", Offset = "0xB785E8", VA = "0xB785E8")]
		public static float GetMax(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xB785FC", Offset = "0xB785FC", VA = "0xB785FC")]
		public static Vector3 SetMin(Vector3 v, float min)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xB78618", Offset = "0xB78618", VA = "0xB78618")]
		public static Vector3 Snap(Vector3 v, float snapSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xB78640", Offset = "0xB78640", VA = "0xB78640")]
		public static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xB78668", Offset = "0xB78668", VA = "0xB78668")]
		public static void SnapBoundsAndPreserveArea(ref Bounds bounds, float snapSize, Vector3 offset)
		{
		}

		[Token(Token = "0x6001C0D")]
		public static void ListRemoveAt<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xB78764", Offset = "0xB78764", VA = "0xB78764")]
		public static void CopyComponent(Component component, GameObject target)
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class BaseOctree
	{
		[Token(Token = "0x200051A")]
		public class Cell
		{
			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Cell mainParent;

			[Token(Token = "0x4001A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Cell parent;

			[Token(Token = "0x4001A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Cell[] cells;

			[Token(Token = "0x4001A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool[] cellsUsed;

			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Bounds bounds;

			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int cellIndex;

			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int cellCount;

			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int level;

			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public int maxLevels;

			[Token(Token = "0x6001C10")]
			[Address(RVA = "0xB7886C", Offset = "0xB7886C", VA = "0xB7886C")]
			public Cell()
			{
			}

			[Token(Token = "0x6001C11")]
			[Address(RVA = "0xB78874", Offset = "0xB78874", VA = "0xB78874")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x6001C12")]
			[Address(RVA = "0xB78910", Offset = "0xB78910", VA = "0xB78910")]
			public Cell(Cell parent, int cellIndex, Bounds bounds)
			{
			}

			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xB7897C", Offset = "0xB7897C", VA = "0xB7897C")]
			public void SetCell(Cell parent, int cellIndex, Bounds bounds)
			{
			}

			[Token(Token = "0x6001C14")]
			protected int AddCell<T, U>(ref T[] cells, Vector3 position, out bool maxCellCreated) where T : Cell, new() where U : Cell, new()
			{
				return default(int);
			}

			[Token(Token = "0x6001C15")]
			[Address(RVA = "0xB789B8", Offset = "0xB789B8", VA = "0xB789B8")]
			public void RemoveCell(int index)
			{
			}

			[Token(Token = "0x6001C16")]
			[Address(RVA = "0xB78A30", Offset = "0xB78A30", VA = "0xB78A30")]
			public bool InsideBounds(Vector3 position)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xB78AE0", Offset = "0xB78AE0", VA = "0xB78AE0")]
			public void Reset(ref Cell[] cells)
			{
			}
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xB78864", Offset = "0xB78864", VA = "0xB78864")]
		public BaseOctree()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class ObjectOctree
	{
		[Token(Token = "0x200051C")]
		public class LODParent
		{
			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject cellGO;

			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform cellT;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LODGroup lodGroup;

			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LODLevel[] lodLevels;

			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool hasChanged;

			[Token(Token = "0x4001A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int jobsPending;

			[Token(Token = "0x6001C19")]
			[Address(RVA = "0xB78AF4", Offset = "0xB78AF4", VA = "0xB78AF4")]
			public LODParent(int lodCount)
			{
			}

			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0xB78CA4", Offset = "0xB78CA4", VA = "0xB78CA4")]
			public void AssignLODGroup(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0xB78E48", Offset = "0xB78E48", VA = "0xB78E48")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}
		}

		[Token(Token = "0x200051D")]
		public class LODLevel
		{
			[Token(Token = "0x4001A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<CachedGameObject> cachedGOs;

			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MeshObjectsHolder> meshObjectsHolders;

			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<MeshObjectsHolder> changedMeshObjectsHolders;

			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<MeshRenderer> newMeshRenderers;

			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int vertCount;

			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int objectCount;

			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xB78F68", Offset = "0xB78F68", VA = "0xB78F68")]
			public int GetSortMeshIndex(Material mat, bool shadowCastingModeTwoSided, int lightmapIndex)
			{
				return default(int);
			}

			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0xB78EA8", Offset = "0xB78EA8", VA = "0xB78EA8")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0xB78BE4", Offset = "0xB78BE4", VA = "0xB78BE4")]
			public LODLevel()
			{
			}
		}

		[Token(Token = "0x200051E")]
		public class MaxCell : Cell
		{
			[Token(Token = "0x4001A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static int maxCellCount;

			[Token(Token = "0x4001A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public LODParent[] lodParents;

			[Token(Token = "0x4001A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public List<LODParent> changedLodParents;

			[Token(Token = "0x4001A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool hasChanged;

			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xB790A4", Offset = "0xB790A4", VA = "0xB790A4")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6001C20")]
			[Address(RVA = "0xB79170", Offset = "0xB79170", VA = "0xB79170")]
			public MaxCell()
			{
			}
		}

		[Token(Token = "0x200051F")]
		public class Cell : BaseOctree.Cell
		{
			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public new Cell[] cells;

			[Token(Token = "0x6001C21")]
			[Address(RVA = "0xB79178", Offset = "0xB79178", VA = "0xB79178")]
			public Cell()
			{
			}

			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xB79180", Offset = "0xB79180", VA = "0xB79180")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x6001C23")]
			[Address(RVA = "0xB7921C", Offset = "0xB7921C", VA = "0xB7921C")]
			public CachedGameObject AddObject(MeshCombiner meshCombiner, CachedGameObject cachedGO, int lodParentIndex, int lodLevel, bool isChangeMode = false)
			{
				return null;
			}

			[Token(Token = "0x6001C24")]
			[Address(RVA = "0xB79328", Offset = "0xB79328", VA = "0xB79328")]
			private void AddObjectInternal(MeshCombiner meshCombiner, CachedGameObject cachedGO, Vector3 position, int lodParentIndex, int lodLevel, bool isChangeMode)
			{
			}

			[Token(Token = "0x6001C25")]
			[Address(RVA = "0xB79B94", Offset = "0xB79B94", VA = "0xB79B94")]
			public void SortObjects(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6001C26")]
			[Address(RVA = "0xB7979C", Offset = "0xB7979C", VA = "0xB7979C")]
			public bool SortObject(MeshCombiner meshCombiner, LODLevel lod, CachedGameObject cachedGO, bool isChangeMode = false)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C27")]
			[Address(RVA = "0xB79FBC", Offset = "0xB79FBC", VA = "0xB79FBC")]
			public void CombineMeshes(MeshCombiner meshCombiner, int lodParentIndex)
			{
			}

			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xB7A418", Offset = "0xB7A418", VA = "0xB7A418")]
			public void Draw(MeshCombiner meshCombiner, bool onlyMaxLevel, bool drawLevel0)
			{
			}
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xB78AEC", Offset = "0xB78AEC", VA = "0xB78AEC")]
		public ObjectOctree()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000520")]
	public class MeshObjectsHolder
	{
		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material mat;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MeshObject> meshObjects;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectOctree.LODParent lodParent;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<CachedGameObject> newCachedGOs;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int lodLevel;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int lightmapIndex;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool shadowCastingModeTwoSided;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool hasChanged;

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xB79DB8", Offset = "0xB79DB8", VA = "0xB79DB8")]
		public MeshObjectsHolder(CachedGameObject cachedGO, Material mat, int subMeshIndex, bool shadowCastingModeTwoSided, int lightmapIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000521")]
	public class MeshObject
	{
		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CachedGameObject cachedGO;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCache meshCache;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subMeshIndex;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 position;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotation;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 lightmapScaleOffset;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool intersectsSurface;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int startNewTriangleIndex;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int newTriangleCount;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool skip;

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xB79F28", Offset = "0xB79F28", VA = "0xB79F28")]
		public MeshObject(CachedGameObject cachedGO, int subMeshIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000522")]
	public class CachedGameObject
	{
		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject go;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform t;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer mr;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshFilter mf;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh mesh;

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xB7A7C8", Offset = "0xB7A7C8", VA = "0xB7A7C8")]
		public CachedGameObject(GameObject go, Transform t, MeshRenderer mr, MeshFilter mf, Mesh mesh)
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xB7A818", Offset = "0xB7A818", VA = "0xB7A818")]
		public CachedGameObject(CachedComponents cachedComponent)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000523")]
	public class CachedLodGameObject : CachedGameObject
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int lodCount;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int lodLevel;

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xB7A86C", Offset = "0xB7A86C", VA = "0xB7A86C")]
		public CachedLodGameObject(CachedGameObject cachedGO, int lodCount, int lodLevel)
		{
		}
	}
}
namespace LowPolyWater
{
	[Token(Token = "0x2000524")]
	public class LowPolyWater : MonoBehaviour
	{
		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waveHeight;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waveFrequency;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waveLength;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 waveOriginPosition;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh mesh;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] vertices;

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xB7A8D8", Offset = "0xB7A8D8", VA = "0xB7A8D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xB7A928", Offset = "0xB7A928", VA = "0xB7A928")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xB7A930", Offset = "0xB7A930", VA = "0xB7A930")]
		private MeshFilter CreateMeshLowPoly(MeshFilter mf)
		{
			return null;
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xB7AAB0", Offset = "0xB7AAB0", VA = "0xB7AAB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xB7AAB4", Offset = "0xB7AAB4", VA = "0xB7AAB4")]
		private void GenerateWaves()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xB7AC58", Offset = "0xB7AC58", VA = "0xB7AC58")]
		public LowPolyWater()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000525")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xB7AC70", Offset = "0xB7AC70", VA = "0xB7AC70")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xB7AE0C", Offset = "0xB7AE0C", VA = "0xB7AE0C")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xB7AF80", Offset = "0xB7AF80", VA = "0xB7AF80")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xB7B0F8", Offset = "0xB7B0F8", VA = "0xB7B0F8")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xB7B160", Offset = "0xB7B160", VA = "0xB7B160")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xB7B1C8", Offset = "0xB7B1C8", VA = "0xB7B1C8")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xB7B220", Offset = "0xB7B220", VA = "0xB7B220")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xB7B298", Offset = "0xB7B298", VA = "0xB7B298")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xB7B2F0", Offset = "0xB7B2F0", VA = "0xB7B2F0")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xB7B348", Offset = "0xB7B348", VA = "0xB7B348")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xB7B3A0", Offset = "0xB7B3A0", VA = "0xB7B3A0")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xB7B3F8", Offset = "0xB7B3F8", VA = "0xB7B3F8")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xB7B458", Offset = "0xB7B458", VA = "0xB7B458")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xB7B4B4", Offset = "0xB7B4B4", VA = "0xB7B4B4")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xB7B50C", Offset = "0xB7B50C", VA = "0xB7B50C")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000529")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xB7B62C", Offset = "0xB7B62C", VA = "0xB7B62C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xB7B7D4", Offset = "0xB7B7D4", VA = "0xB7B7D4")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xB7B970", Offset = "0xB7B970", VA = "0xB7B970")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xB7BB0C", Offset = "0xB7BB0C", VA = "0xB7BB0C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xB7BCA8", Offset = "0xB7BCA8", VA = "0xB7BCA8")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xB7BE4C", Offset = "0xB7BE4C", VA = "0xB7BE4C")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xB7C0A4", Offset = "0xB7C0A4", VA = "0xB7C0A4")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xB7C584", Offset = "0xB7C584", VA = "0xB7C584")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xB7C7E8", Offset = "0xB7C7E8", VA = "0xB7C7E8")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xB7CA58", Offset = "0xB7CA58", VA = "0xB7CA58")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xB7CC1C", Offset = "0xB7CC1C", VA = "0xB7CC1C")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x2000535")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xB7D20C", Offset = "0xB7D20C", VA = "0xB7D20C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xB7D3AC", Offset = "0xB7D3AC", VA = "0xB7D3AC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xB7D544", Offset = "0xB7D544", VA = "0xB7D544")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xB7D6DC", Offset = "0xB7D6DC", VA = "0xB7D6DC")]
		public static TweenerCore<float, float, FloatOptions> DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xB7D85C", Offset = "0xB7D85C", VA = "0xB7D85C")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x200053B")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xB7DE18", Offset = "0xB7DE18", VA = "0xB7DE18")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xB7DFB4", Offset = "0xB7DFB4", VA = "0xB7DFB4")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xB7E128", Offset = "0xB7E128", VA = "0xB7E128")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xB7E2E0", Offset = "0xB7E2E0", VA = "0xB7E2E0")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200053F")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x2000540")]
		public static class Utils
		{
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0xB82794", Offset = "0xB82794", VA = "0xB82794")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xB7E5C0", Offset = "0xB7E5C0", VA = "0xB7E5C0")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xB7E72C", Offset = "0xB7E72C", VA = "0xB7E72C")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xB7E8C0", Offset = "0xB7E8C0", VA = "0xB7E8C0")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xB7EA2C", Offset = "0xB7EA2C", VA = "0xB7EA2C")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xB7EBC0", Offset = "0xB7EBC0", VA = "0xB7EBC0")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xB7ED2C", Offset = "0xB7ED2C", VA = "0xB7ED2C")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xB7EEBC", Offset = "0xB7EEBC", VA = "0xB7EEBC")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xB7F07C", Offset = "0xB7F07C", VA = "0xB7F07C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xB7F210", Offset = "0xB7F210", VA = "0xB7F210")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xB7F3A4", Offset = "0xB7F3A4", VA = "0xB7F3A4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xB7F538", Offset = "0xB7F538", VA = "0xB7F538")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xB7F6CC", Offset = "0xB7F6CC", VA = "0xB7F6CC")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xB7F838", Offset = "0xB7F838", VA = "0xB7F838")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xB7F9B4", Offset = "0xB7F9B4", VA = "0xB7F9B4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xB7FB48", Offset = "0xB7FB48", VA = "0xB7FB48")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xB7FCD4", Offset = "0xB7FCD4", VA = "0xB7FCD4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xB7FE60", Offset = "0xB7FE60", VA = "0xB7FE60")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xB7FFFC", Offset = "0xB7FFFC", VA = "0xB7FFFC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xB8018C", Offset = "0xB8018C", VA = "0xB8018C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xB8031C", Offset = "0xB8031C", VA = "0xB8031C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xB804AC", Offset = "0xB804AC", VA = "0xB804AC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xB80640", Offset = "0xB80640", VA = "0xB80640")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xB807D4", Offset = "0xB807D4", VA = "0xB807D4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xB80950", Offset = "0xB80950", VA = "0xB80950")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xB80AD0", Offset = "0xB80AD0", VA = "0xB80AD0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xB80C50", Offset = "0xB80C50", VA = "0xB80C50")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xB80DE4", Offset = "0xB80DE4", VA = "0xB80DE4")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xB80F80", Offset = "0xB80F80", VA = "0xB80F80")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xB81144", Offset = "0xB81144", VA = "0xB81144")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xB81310", Offset = "0xB81310", VA = "0xB81310")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xB81714", Offset = "0xB81714", VA = "0xB81714")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xB8189C", Offset = "0xB8189C", VA = "0xB8189C")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xB81A14", Offset = "0xB81A14", VA = "0xB81A14")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xB81B8C", Offset = "0xB81B8C", VA = "0xB81B8C")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xB81D10", Offset = "0xB81D10", VA = "0xB81D10")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xB81EA4", Offset = "0xB81EA4", VA = "0xB81EA4")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xB82010", Offset = "0xB82010", VA = "0xB82010")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xB821AC", Offset = "0xB821AC", VA = "0xB821AC")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xB823A4", Offset = "0xB823A4", VA = "0xB823A4")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xB8259C", Offset = "0xB8259C", VA = "0xB8259C")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000568")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xB837BC", Offset = "0xB837BC", VA = "0xB837BC")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xB83978", Offset = "0xB83978", VA = "0xB83978")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xB83B40", Offset = "0xB83B40", VA = "0xB83B40")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xB83C14", Offset = "0xB83C14", VA = "0xB83C14")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xB83CE8", Offset = "0xB83CE8", VA = "0xB83CE8")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xB83DBC", Offset = "0xB83DBC", VA = "0xB83DBC")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xB83EA0", Offset = "0xB83EA0", VA = "0xB83EA0")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xB83F94", Offset = "0xB83F94", VA = "0xB83F94")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xB84068", Offset = "0xB84068", VA = "0xB84068")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xB84248", Offset = "0xB84248", VA = "0xB84248")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200056B")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x200056C")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700027C")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001D46")]
				[Address(RVA = "0xB844B8", Offset = "0xB844B8", VA = "0xB844B8", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xB83BEC", Offset = "0xB83BEC", VA = "0xB83BEC")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x200056D")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700027D")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001D48")]
				[Address(RVA = "0xB844E8", Offset = "0xB844E8", VA = "0xB844E8", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001D49")]
			[Address(RVA = "0xB83CC0", Offset = "0xB83CC0", VA = "0xB83CC0")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x200056E")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700027E")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001D4A")]
				[Address(RVA = "0xB84548", Offset = "0xB84548", VA = "0xB84548", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xB83D94", Offset = "0xB83D94", VA = "0xB83D94")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x200056F")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x1700027F")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001D4C")]
				[Address(RVA = "0xB84564", Offset = "0xB84564", VA = "0xB84564", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xB83E70", Offset = "0xB83E70", VA = "0xB83E70")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000570")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4001AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x17000280")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001D4E")]
				[Address(RVA = "0xB845A4", Offset = "0xB845A4", VA = "0xB845A4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0xB83F5C", Offset = "0xB83F5C", VA = "0xB83F5C")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000571")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000281")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001D50")]
				[Address(RVA = "0xB845FC", Offset = "0xB845FC", VA = "0xB845FC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001D51")]
			[Address(RVA = "0xB84040", Offset = "0xB84040", VA = "0xB84040")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x2000572")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x2000573")]
		public static class Physics
		{
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xB8478C", Offset = "0xB8478C", VA = "0xB8478C")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xB8488C", Offset = "0xB8488C", VA = "0xB8488C")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D56")]
			[Address(RVA = "0xB84918", Offset = "0xB84918", VA = "0xB84918")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D57")]
			[Address(RVA = "0xB849A4", Offset = "0xB849A4", VA = "0xB849A4")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xB84630", Offset = "0xB84630", VA = "0xB84630")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xB846E4", Offset = "0xB846E4", VA = "0xB846E4")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
	[Token(Token = "0x2000574")]
	[AddComponentMenu("DOTween/DOTween Animation")]
	public class DOTweenAnimation : ABSAnimationComponent
	{
		[Token(Token = "0x2000575")]
		public enum AnimationType
		{
			[Token(Token = "0x4001AD6")]
			None,
			[Token(Token = "0x4001AD7")]
			Move,
			[Token(Token = "0x4001AD8")]
			LocalMove,
			[Token(Token = "0x4001AD9")]
			Rotate,
			[Token(Token = "0x4001ADA")]
			LocalRotate,
			[Token(Token = "0x4001ADB")]
			Scale,
			[Token(Token = "0x4001ADC")]
			Color,
			[Token(Token = "0x4001ADD")]
			Fade,
			[Token(Token = "0x4001ADE")]
			Text,
			[Token(Token = "0x4001ADF")]
			PunchPosition,
			[Token(Token = "0x4001AE0")]
			PunchRotation,
			[Token(Token = "0x4001AE1")]
			PunchScale,
			[Token(Token = "0x4001AE2")]
			ShakePosition,
			[Token(Token = "0x4001AE3")]
			ShakeRotation,
			[Token(Token = "0x4001AE4")]
			ShakeScale,
			[Token(Token = "0x4001AE5")]
			CameraAspect,
			[Token(Token = "0x4001AE6")]
			CameraBackgroundColor,
			[Token(Token = "0x4001AE7")]
			CameraFieldOfView,
			[Token(Token = "0x4001AE8")]
			CameraOrthoSize,
			[Token(Token = "0x4001AE9")]
			CameraPixelRect,
			[Token(Token = "0x4001AEA")]
			CameraRect,
			[Token(Token = "0x4001AEB")]
			UIWidthHeight
		}

		[Token(Token = "0x2000576")]
		public enum TargetType
		{
			[Token(Token = "0x4001AED")]
			Unset,
			[Token(Token = "0x4001AEE")]
			Camera,
			[Token(Token = "0x4001AEF")]
			CanvasGroup,
			[Token(Token = "0x4001AF0")]
			Image,
			[Token(Token = "0x4001AF1")]
			Light,
			[Token(Token = "0x4001AF2")]
			RectTransform,
			[Token(Token = "0x4001AF3")]
			Renderer,
			[Token(Token = "0x4001AF4")]
			SpriteRenderer,
			[Token(Token = "0x4001AF5")]
			Rigidbody,
			[Token(Token = "0x4001AF6")]
			Rigidbody2D,
			[Token(Token = "0x4001AF7")]
			Text,
			[Token(Token = "0x4001AF8")]
			Transform,
			[Token(Token = "0x4001AF9")]
			tk2dBaseSprite,
			[Token(Token = "0x4001AFA")]
			tk2dTextMesh,
			[Token(Token = "0x4001AFB")]
			TextMeshPro,
			[Token(Token = "0x4001AFC")]
			TextMeshProUGUI
		}

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool targetIsSelf;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject targetGO;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool tweenTargetIsTargetGO;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float delay;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float duration;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Ease easeType;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationCurve easeCurve;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LoopType loopType;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int loops;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string id;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool isRelative;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool isFrom;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool isIndependentUpdate;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		public bool autoKill;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool isActive;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool isValid;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Component target;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationType animationType;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public TargetType targetType;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TargetType forcedTargetType;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool autoPlay;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool useTargetAsV3;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float endValueFloat;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector3 endValueV3;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector2 endValueV2;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color endValueColor;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string endValueString;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Rect endValueRect;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform endValueTransform;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool optionalBool0;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float optionalFloat0;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int optionalInt0;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public RotateMode optionalRotationMode;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ScrambleMode optionalScrambleMode;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public string optionalString;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool _tweenCreated;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int _playCount;

		[Token(Token = "0x14000021")]
		public static event Action<DOTweenAnimation> OnReset
		{
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xB84AEC", Offset = "0xB84AEC", VA = "0xB84AEC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0xB84BB8", Offset = "0xB84BB8", VA = "0xB84BB8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xB84C84", Offset = "0xB84C84", VA = "0xB84C84")]
		private static void Dispatch_OnReset(DOTweenAnimation anim)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xB84CF0", Offset = "0xB84CF0", VA = "0xB84CF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xB8634C", Offset = "0xB8634C", VA = "0xB8634C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xB86384", Offset = "0xB86384", VA = "0xB86384")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xB86388", Offset = "0xB86388", VA = "0xB86388")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xB84D34", Offset = "0xB84D34", VA = "0xB84D34")]
		public void CreateTween()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xB86A74", Offset = "0xB86A74", VA = "0xB86A74", Slot = "4")]
		public override void DOPlay()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xB86AE0", Offset = "0xB86AE0", VA = "0xB86AE0", Slot = "5")]
		public override void DOPlayBackwards()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xB86B4C", Offset = "0xB86B4C", VA = "0xB86B4C", Slot = "6")]
		public override void DOPlayForward()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xB86BB8", Offset = "0xB86BB8", VA = "0xB86BB8", Slot = "7")]
		public override void DOPause()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xB86C24", Offset = "0xB86C24", VA = "0xB86C24", Slot = "8")]
		public override void DOTogglePause()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xB86C90", Offset = "0xB86C90", VA = "0xB86C90", Slot = "9")]
		public override void DORewind()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xB86D74", Offset = "0xB86D74", VA = "0xB86D74", Slot = "10")]
		public override void DORestart()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xB86D84", Offset = "0xB86D84", VA = "0xB86D84", Slot = "11")]
		public override void DORestart(bool fromHere)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xB870BC", Offset = "0xB870BC", VA = "0xB870BC", Slot = "12")]
		public override void DOComplete()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xB8712C", Offset = "0xB8712C", VA = "0xB8712C", Slot = "13")]
		public override void DOKill()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xB871A4", Offset = "0xB871A4", VA = "0xB871A4")]
		public void DOPlayById(string id)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xB87220", Offset = "0xB87220", VA = "0xB87220")]
		public void DOPlayAllById(string id)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xB87278", Offset = "0xB87278", VA = "0xB87278")]
		public void DOPauseAllById(string id)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xB872D0", Offset = "0xB872D0", VA = "0xB872D0")]
		public void DOPlayBackwardsById(string id)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xB8734C", Offset = "0xB8734C", VA = "0xB8734C")]
		public void DOPlayBackwardsAllById(string id)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xB873A4", Offset = "0xB873A4", VA = "0xB873A4")]
		public void DOPlayForwardById(string id)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xB87420", Offset = "0xB87420", VA = "0xB87420")]
		public void DOPlayForwardAllById(string id)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xB87478", Offset = "0xB87478", VA = "0xB87478")]
		public void DOPlayNext()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xB875AC", Offset = "0xB875AC", VA = "0xB875AC")]
		public void DORewindAndPlayNext()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xB8762C", Offset = "0xB8762C", VA = "0xB8762C")]
		public void DORewindAllById(string id)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xB8769C", Offset = "0xB8769C", VA = "0xB8769C")]
		public void DORestartById(string id)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xB87728", Offset = "0xB87728", VA = "0xB87728")]
		public void DORestartAllById(string id)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xB8779C", Offset = "0xB8779C", VA = "0xB8779C")]
		public List<Tween> GetTweens()
		{
			return null;
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xB863D8", Offset = "0xB863D8", VA = "0xB863D8")]
		public static TargetType TypeToDOTargetType(Type t)
		{
			return default(TargetType);
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xB878E4", Offset = "0xB878E4", VA = "0xB878E4")]
		public Tween CreateEditorPreview()
		{
			return null;
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xB863C0", Offset = "0xB863C0", VA = "0xB863C0")]
		private GameObject GetTweenGO()
		{
			return null;
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xB86E68", Offset = "0xB86E68", VA = "0xB86E68")]
		private void ReEvaluateRelativeTween()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xB87914", Offset = "0xB87914", VA = "0xB87914")]
		public DOTweenAnimation()
		{
		}
	}
	[Token(Token = "0x2000577")]
	public static class DOTweenAnimationExtensions
	{
		[Token(Token = "0x6001D7D")]
		public static bool IsSameOrSubclassOf<T>(this Component t)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000578")]
	public static class DOTweenProShortcuts
	{
		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xB87AE0", Offset = "0xB87AE0", VA = "0xB87AE0")]
		static DOTweenProShortcuts()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xB87B30", Offset = "0xB87B30", VA = "0xB87B30")]
		public static Tweener DOSpiral(this Transform target, float duration, [Optional] Vector3? axis, SpiralMode mode = SpiralMode.Expand, float speed = 1f, float frequency = 10f, float depth = 0f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xB87EE4", Offset = "0xB87EE4", VA = "0xB87EE4")]
		public static Tweener DOSpiral(this Rigidbody target, float duration, [Optional] Vector3? axis, SpiralMode mode = SpiralMode.Expand, float speed = 1f, float frequency = 10f, float depth = 0f, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x200057B")]
	public static class ShortcutExtensionsTMPText
	{
		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xB865D8", Offset = "0xB865D8", VA = "0xB865D8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this TMP_Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xB882F8", Offset = "0xB882F8", VA = "0xB882F8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFaceColor(this TMP_Text target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xB884C8", Offset = "0xB884C8", VA = "0xB884C8")]
		public static TweenerCore<Color, Color, ColorOptions> DOOutlineColor(this TMP_Text target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xB88698", Offset = "0xB88698", VA = "0xB88698")]
		public static TweenerCore<Color, Color, ColorOptions> DOGlowColor(this TMP_Text target, Color endValue, float duration, bool useSharedMaterial = false)
		{
			return null;
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xB8676C", Offset = "0xB8676C", VA = "0xB8676C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xB88790", Offset = "0xB88790", VA = "0xB88790")]
		public static TweenerCore<Color, Color, ColorOptions> DOFaceFade(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xB88904", Offset = "0xB88904", VA = "0xB88904")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOScale(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xB88A98", Offset = "0xB88A98", VA = "0xB88A98")]
		public static TweenerCore<float, float, FloatOptions> DOFontSize(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xB88C0C", Offset = "0xB88C0C", VA = "0xB88C0C")]
		public static TweenerCore<int, int, NoOptions> DOMaxVisibleCharacters(this TMP_Text target, int endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xB868D8", Offset = "0xB868D8", VA = "0xB868D8")]
		public static TweenerCore<string, string, StringOptions> DOText(this TMP_Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x2000585")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xB898C4", Offset = "0xB898C4", VA = "0xB898C4")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xB8A298", Offset = "0xB8A298", VA = "0xB8A298")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xB8A680", Offset = "0xB8A680", VA = "0xB8A680")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xB8A778", Offset = "0xB8A778", VA = "0xB8A778")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xB8A894", Offset = "0xB8A894", VA = "0xB8A894", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xB8AA00", Offset = "0xB8AA00", VA = "0xB8AA00", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xB8AC3C", Offset = "0xB8AC3C", VA = "0xB8AC3C", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xB8AD2C", Offset = "0xB8AD2C", VA = "0xB8AD2C", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xB8AEBC", Offset = "0xB8AEBC", VA = "0xB8AEBC", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xB8AF50", Offset = "0xB8AF50", VA = "0xB8AF50", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xB8B068", Offset = "0xB8B068", VA = "0xB8B068", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xB8B180", Offset = "0xB8B180", VA = "0xB8B180", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xB8B640", Offset = "0xB8B640", VA = "0xB8B640", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xB8BBB8", Offset = "0xB8BBB8", VA = "0xB8BBB8", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xB8BC40", Offset = "0xB8BC40", VA = "0xB8BC40", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xB8BEE0", Offset = "0xB8BEE0", VA = "0xB8BEE0", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xB8BEF8", Offset = "0xB8BEF8", VA = "0xB8BEF8", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xB8C008", Offset = "0xB8C008", VA = "0xB8C008", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xB8C22C", Offset = "0xB8C22C", VA = "0xB8C22C", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xB8C438", Offset = "0xB8C438", VA = "0xB8C438", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xB8BC60", Offset = "0xB8BC60", VA = "0xB8BC60")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xB8C538", Offset = "0xB8C538", VA = "0xB8C538", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xB8A19C", Offset = "0xB8A19C", VA = "0xB8A19C")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xB8C970", Offset = "0xB8C970", VA = "0xB8C970")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xB8CAA4", Offset = "0xB8CAA4", VA = "0xB8CAA4")]
		public void PingAll()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xB8CB34", Offset = "0xB8CB34", VA = "0xB8CB34")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xB8CC20", Offset = "0xB8CC20", VA = "0xB8CC20")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xB8CCBC", Offset = "0xB8CCBC", VA = "0xB8CCBC")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xB8CDFC", Offset = "0xB8CDFC", VA = "0xB8CDFC")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xB8A808", Offset = "0xB8A808", VA = "0xB8A808")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xB8A6E8", Offset = "0xB8A6E8", VA = "0xB8A6E8")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000586")]
	public class HapticDevice
	{
		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xB8D390", Offset = "0xB8D390", VA = "0xB8D390")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x2000587")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x2000588")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x6001DD5")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000589")]
		private class Device
		{
			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0xB8D614", Offset = "0xB8D614", VA = "0xB8D614")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200058A")]
		public class StreamHost
		{
			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0xB8D61C", Offset = "0xB8D61C", VA = "0xB8D61C")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xB8D398", Offset = "0xB8D398", VA = "0xB8D398")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xB8D3BC", Offset = "0xB8D3BC", VA = "0xB8D3BC")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xB8D510", Offset = "0xB8D510", VA = "0xB8D510")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xB8D538", Offset = "0xB8D538", VA = "0xB8D538")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD0")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xB8D548", Offset = "0xB8D548", VA = "0xB8D548")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xB8C824", Offset = "0xB8C824", VA = "0xB8C824")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xB8CE98", Offset = "0xB8CE98", VA = "0xB8CE98")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xB8D094", Offset = "0xB8D094", VA = "0xB8D094")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200058B")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Images")]
		[SerializeField]
		private Sprite defaultImage;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xB8D624", Offset = "0xB8D624", VA = "0xB8D624")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xB8D6D8", Offset = "0xB8D6D8", VA = "0xB8D6D8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xB8DE5C", Offset = "0xB8DE5C", VA = "0xB8DE5C")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xB8E0C4", Offset = "0xB8E0C4", VA = "0xB8E0C4")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xB8E150", Offset = "0xB8E150", VA = "0xB8E150")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x200058C")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xB8E158", Offset = "0xB8E158", VA = "0xB8E158")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xB8E31C", Offset = "0xB8E31C", VA = "0xB8E31C")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xB8E3DC", Offset = "0xB8E3DC", VA = "0xB8E3DC")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xB8E478", Offset = "0xB8E478", VA = "0xB8E478")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("[UI]")]
		private Image deviceImage;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("[Sprites]")]
		[SerializeField]
		private Sprite leftSide;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xB8E480", Offset = "0xB8E480", VA = "0xB8E480")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xB8E570", Offset = "0xB8E570", VA = "0xB8E570")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xB8E85C", Offset = "0xB8E85C", VA = "0xB8E85C")]
		private void OnPing()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xB8EA38", Offset = "0xB8EA38", VA = "0xB8EA38")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xB8EB90", Offset = "0xB8EB90", VA = "0xB8EB90")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x200058E")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xB8EB98", Offset = "0xB8EB98", VA = "0xB8EB98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xB8EC00", Offset = "0xB8EC00", VA = "0xB8EC00")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xB8EC20", Offset = "0xB8EC20", VA = "0xB8EC20")]
		public void Show()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xB8EC40", Offset = "0xB8EC40", VA = "0xB8EC40")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xB8ED60", Offset = "0xB8ED60", VA = "0xB8ED60")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x200058F")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("DeviceImages")]
		[SerializeField]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xB8ED68", Offset = "0xB8ED68", VA = "0xB8ED68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xB8F238", Offset = "0xB8F238", VA = "0xB8F238")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xB8EF14", Offset = "0xB8EF14", VA = "0xB8EF14")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xB8F43C", Offset = "0xB8F43C", VA = "0xB8F43C")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xB8F4D8", Offset = "0xB8F4D8", VA = "0xB8F4D8")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xB8F4F8", Offset = "0xB8F4F8", VA = "0xB8F4F8")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xB8F518", Offset = "0xB8F518", VA = "0xB8F518")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xB8F534", Offset = "0xB8F534", VA = "0xB8F534")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xB8F344", Offset = "0xB8F344", VA = "0xB8F344")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xB8F838", Offset = "0xB8F838", VA = "0xB8F838")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000590")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xB8F848", Offset = "0xB8F848", VA = "0xB8F848")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000591")]
	public class IconSetting
	{
		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("[Setting Icons]")]
		public PositonIconSetting Vest;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xB8F850", Offset = "0xB8F850", VA = "0xB8F850")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("UI")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Connect Menu")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Disconnect Menu")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xB8F858", Offset = "0xB8F858", VA = "0xB8F858")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xB8FA38", Offset = "0xB8FA38", VA = "0xB8FA38")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xB8FBD8", Offset = "0xB8FBD8", VA = "0xB8FBD8")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xB8FC60", Offset = "0xB8FC60", VA = "0xB8FC60")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xB8FCD0", Offset = "0xB8FCD0", VA = "0xB8FCD0")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xB8FAD0", Offset = "0xB8FAD0", VA = "0xB8FAD0")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xB900F4", Offset = "0xB900F4", VA = "0xB900F4")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xB9011C", Offset = "0xB9011C", VA = "0xB9011C")]
		private void Ping()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xB90184", Offset = "0xB90184", VA = "0xB90184")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xB90258", Offset = "0xB90258", VA = "0xB90258")]
		private void ToRight()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xB9032C", Offset = "0xB9032C", VA = "0xB9032C")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xB8FFC0", Offset = "0xB8FFC0", VA = "0xB8FFC0")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xB8FF58", Offset = "0xB8FF58", VA = "0xB8FF58")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xB8FF8C", Offset = "0xB8FF8C", VA = "0xB8FF8C")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xB90360", Offset = "0xB90360", VA = "0xB90360")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x2000593")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("No Paired Device UI")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xB90434", Offset = "0xB90434", VA = "0xB90434")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xB908FC", Offset = "0xB908FC", VA = "0xB908FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xB90A1C", Offset = "0xB90A1C", VA = "0xB90A1C")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xB91078", Offset = "0xB91078", VA = "0xB91078")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xB91100", Offset = "0xB91100", VA = "0xB91100")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xB91188", Offset = "0xB91188", VA = "0xB91188")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xB911CC", Offset = "0xB911CC", VA = "0xB911CC")]
		private void NextPage()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xB911F0", Offset = "0xB911F0", VA = "0xB911F0")]
		private void BackPage()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xB91214", Offset = "0xB91214", VA = "0xB91214")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsAndroidManager Instance;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xB912A4", Offset = "0xB912A4", VA = "0xB912A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xB913A8", Offset = "0xB913A8", VA = "0xB913A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xB91440", Offset = "0xB91440", VA = "0xB91440")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xB8DEB4", Offset = "0xB8DEB4", VA = "0xB8DEB4")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xB8EB08", Offset = "0xB8EB08", VA = "0xB8EB08")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xB8E8D0", Offset = "0xB8E8D0", VA = "0xB8E8D0")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xB918D8", Offset = "0xB918D8", VA = "0xB918D8")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xB8F734", Offset = "0xB8F734", VA = "0xB8F734")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xB8DC0C", Offset = "0xB8DC0C", VA = "0xB8DC0C")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xB91958", Offset = "0xB91958", VA = "0xB91958")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xB8F168", Offset = "0xB8F168", VA = "0xB8F168")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xB9099C", Offset = "0xB9099C", VA = "0xB9099C")]
		public static void RemoveRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xB91BA0", Offset = "0xB91BA0", VA = "0xB91BA0")]
		public static void RemoveRefreshAction()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xB91C38", Offset = "0xB91C38", VA = "0xB91C38")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xB91CBC", Offset = "0xB91CBC", VA = "0xB91CBC")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xB91D3C", Offset = "0xB91D3C", VA = "0xB91D3C")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xB91DF8", Offset = "0xB91DF8", VA = "0xB91DF8")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xB91E78", Offset = "0xB91E78", VA = "0xB91E78")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xB91F1C", Offset = "0xB91F1C", VA = "0xB91F1C")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xB91FB0", Offset = "0xB91FB0", VA = "0xB91FB0")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000595")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xB920C4", Offset = "0xB920C4", VA = "0xB920C4")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x2000596")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("[Setting Icons]")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xB8E700", Offset = "0xB8E700", VA = "0xB8E700")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xB920CC", Offset = "0xB920CC", VA = "0xB920CC")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x2000597")]
	public class HapticApi
	{
		[Token(Token = "0x2000598")]
		public struct point
		{
			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x2000599")]
		public struct status
		{
			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xB920D4", Offset = "0xB920D4", VA = "0xB920D4")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xB92168", Offset = "0xB92168", VA = "0xB92168")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xB92214", Offset = "0xB92214", VA = "0xB92214")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xB92278", Offset = "0xB92278", VA = "0xB92278")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xB92320", Offset = "0xB92320", VA = "0xB92320")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xB923CC", Offset = "0xB923CC", VA = "0xB923CC")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xB92478", Offset = "0xB92478", VA = "0xB92478")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xB92504", Offset = "0xB92504", VA = "0xB92504")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xB92598", Offset = "0xB92598", VA = "0xB92598")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xB92674", Offset = "0xB92674", VA = "0xB92674")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xB92738", Offset = "0xB92738", VA = "0xB92738")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xB927FC", Offset = "0xB927FC", VA = "0xB927FC")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xB92894", Offset = "0xB92894", VA = "0xB92894")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xB92904", Offset = "0xB92904", VA = "0xB92904")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xB9299C", Offset = "0xB9299C", VA = "0xB9299C")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xB92A00", Offset = "0xB92A00", VA = "0xB92A00")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xB92A8C", Offset = "0xB92A8C", VA = "0xB92A8C")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xB92AEC", Offset = "0xB92AEC", VA = "0xB92AEC")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xB92B50", Offset = "0xB92B50", VA = "0xB92B50")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xB92BB0", Offset = "0xB92BB0", VA = "0xB92BB0")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xB92C34", Offset = "0xB92C34", VA = "0xB92C34")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xB92CEC", Offset = "0xB92CEC", VA = "0xB92CEC")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x200059A")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xB92CF4", Offset = "0xB92CF4", VA = "0xB92CF4", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xB9309C", Offset = "0xB9309C", VA = "0xB9309C", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xB930B8", Offset = "0xB930B8", VA = "0xB930B8")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x200059B")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xB930E0", Offset = "0xB930E0", VA = "0xB930E0")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xB93110", Offset = "0xB93110", VA = "0xB93110", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xB93118", Offset = "0xB93118", VA = "0xB93118", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xB93170", Offset = "0xB93170", VA = "0xB93170", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xB93178", Offset = "0xB93178", VA = "0xB93178", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xB93180", Offset = "0xB93180", VA = "0xB93180", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xB93184", Offset = "0xB93184", VA = "0xB93184", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xB93190", Offset = "0xB93190", VA = "0xB93190", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xB9319C", Offset = "0xB9319C", VA = "0xB9319C", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xB9329C", Offset = "0xB9329C", VA = "0xB9329C", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xB9341C", Offset = "0xB9341C", VA = "0xB9341C", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xB93444", Offset = "0xB93444", VA = "0xB93444", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xB9346C", Offset = "0xB9346C", VA = "0xB9346C", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xB93474", Offset = "0xB93474", VA = "0xB93474", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xB93480", Offset = "0xB93480", VA = "0xB93480", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xB93488", Offset = "0xB93488", VA = "0xB93488", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xB9348C", Offset = "0xB9348C", VA = "0xB9348C", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xB93490", Offset = "0xB93490", VA = "0xB93490", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x200059C")]
	public class BhapticsProject
	{
		[Token(Token = "0x17000282")]
		public Track[] Tracks
		{
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xB934B0", Offset = "0xB934B0", VA = "0xB934B0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0xB934B8", Offset = "0xB934B8", VA = "0xB934B8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public Layout Layout
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xB934C0", Offset = "0xB934C0", VA = "0xB934C0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xB934C8", Offset = "0xB934C8", VA = "0xB934C8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xB934D0", Offset = "0xB934D0", VA = "0xB934D0")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xB93D0C", Offset = "0xB93D0C", VA = "0xB93D0C")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xB93710", Offset = "0xB93710", VA = "0xB93710")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x200059D")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xB9428C", Offset = "0xB9428C", VA = "0xB9428C")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xB94350", Offset = "0xB94350", VA = "0xB94350")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class Track
	{
		[Token(Token = "0x17000284")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xB94358", Offset = "0xB94358", VA = "0xB94358")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0xB94360", Offset = "0xB94360", VA = "0xB94360")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xB94368", Offset = "0xB94368", VA = "0xB94368", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xB93718", Offset = "0xB93718", VA = "0xB93718")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xB93E60", Offset = "0xB93E60", VA = "0xB93E60")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xB943EC", Offset = "0xB943EC", VA = "0xB943EC")]
		public Track()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public class HapticEffect
	{
		[Token(Token = "0x17000285")]
		public int StartTime
		{
			[Token(Token = "0x6001E62")]
			[Address(RVA = "0xB94918", Offset = "0xB94918", VA = "0xB94918")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0xB94920", Offset = "0xB94920", VA = "0xB94920")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public int OffsetTime
		{
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0xB94928", Offset = "0xB94928", VA = "0xB94928")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E65")]
			[Address(RVA = "0xB94930", Offset = "0xB94930", VA = "0xB94930")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0xB94938", Offset = "0xB94938", VA = "0xB94938")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E67")]
			[Address(RVA = "0xB94940", Offset = "0xB94940", VA = "0xB94940")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xB94948", Offset = "0xB94948", VA = "0xB94948", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xB943F4", Offset = "0xB943F4", VA = "0xB943F4")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xB9468C", Offset = "0xB9468C", VA = "0xB9468C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xB94B8C", Offset = "0xB94B8C", VA = "0xB94B8C")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x20005A0")]
	public class Layout
	{
		[Token(Token = "0x17000288")]
		public string Type
		{
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0xB94E6C", Offset = "0xB94E6C", VA = "0xB94E6C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0xB94E74", Offset = "0xB94E74", VA = "0xB94E74")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0xB94E7C", Offset = "0xB94E7C", VA = "0xB94E7C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E6F")]
			[Address(RVA = "0xB94E84", Offset = "0xB94E84", VA = "0xB94E84")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xB93948", Offset = "0xB93948", VA = "0xB93948")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xB93F7C", Offset = "0xB93F7C", VA = "0xB93F7C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xB94E8C", Offset = "0xB94E8C", VA = "0xB94E8C")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public class LayoutObject
	{
		[Token(Token = "0x1700028A")]
		public int Index
		{
			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xB9510C", Offset = "0xB9510C", VA = "0xB9510C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E74")]
			[Address(RVA = "0xB95114", Offset = "0xB95114", VA = "0xB95114")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public float X
		{
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0xB9511C", Offset = "0xB9511C", VA = "0xB9511C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0xB95124", Offset = "0xB95124", VA = "0xB95124")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public float Y
		{
			[Token(Token = "0x6001E77")]
			[Address(RVA = "0xB9512C", Offset = "0xB9512C", VA = "0xB9512C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E78")]
			[Address(RVA = "0xB95134", Offset = "0xB95134", VA = "0xB95134")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xB94E94", Offset = "0xB94E94", VA = "0xB94E94")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xB94FCC", Offset = "0xB94FCC", VA = "0xB94FCC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xB9513C", Offset = "0xB9513C", VA = "0xB9513C")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public class HapticEffectMode
	{
		[Token(Token = "0x1700028D")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0xB95144", Offset = "0xB95144", VA = "0xB95144")]
			[CompilerGenerated]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0xB9514C", Offset = "0xB9514C", VA = "0xB9514C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public DotMode DotMode
		{
			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0xB95154", Offset = "0xB95154", VA = "0xB95154")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0xB9515C", Offset = "0xB9515C", VA = "0xB9515C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public PathMode PathMode
		{
			[Token(Token = "0x6001E80")]
			[Address(RVA = "0xB95164", Offset = "0xB95164", VA = "0xB95164")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E81")]
			[Address(RVA = "0xB9516C", Offset = "0xB9516C", VA = "0xB9516C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xB94B94", Offset = "0xB94B94", VA = "0xB94B94")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xB94CF4", Offset = "0xB94CF4", VA = "0xB94CF4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xB95174", Offset = "0xB95174", VA = "0xB95174")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class DotMode
	{
		[Token(Token = "0x17000290")]
		public bool DotConnected
		{
			[Token(Token = "0x6001E85")]
			[Address(RVA = "0xB95884", Offset = "0xB95884", VA = "0xB95884")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0xB9588C", Offset = "0xB9588C", VA = "0xB9588C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0xB95898", Offset = "0xB95898", VA = "0xB95898")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E88")]
			[Address(RVA = "0xB958A0", Offset = "0xB958A0", VA = "0xB958A0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xB9517C", Offset = "0xB9517C", VA = "0xB9517C")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xB955E8", Offset = "0xB955E8", VA = "0xB955E8")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xB958A8", Offset = "0xB958A8", VA = "0xB958A8")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x17000292")]
		public int StartTime
		{
			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0xB95DC0", Offset = "0xB95DC0", VA = "0xB95DC0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0xB95DC8", Offset = "0xB95DC8", VA = "0xB95DC8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public int EndTime
		{
			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0xB95DD0", Offset = "0xB95DD0", VA = "0xB95DD0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0xB95DD8", Offset = "0xB95DD8", VA = "0xB95DD8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6001E90")]
			[Address(RVA = "0xB95DE0", Offset = "0xB95DE0", VA = "0xB95DE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E91")]
			[Address(RVA = "0xB95DE8", Offset = "0xB95DE8", VA = "0xB95DE8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xB958B0", Offset = "0xB958B0", VA = "0xB958B0")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xB95B8C", Offset = "0xB95B8C", VA = "0xB95B8C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xB95DF0", Offset = "0xB95DF0", VA = "0xB95DF0")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class DotModeObject
	{
		[Token(Token = "0x17000295")]
		public int Index
		{
			[Token(Token = "0x6001E95")]
			[Address(RVA = "0xB960F4", Offset = "0xB960F4", VA = "0xB960F4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E96")]
			[Address(RVA = "0xB960FC", Offset = "0xB960FC", VA = "0xB960FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public float Intensity
		{
			[Token(Token = "0x6001E97")]
			[Address(RVA = "0xB96104", Offset = "0xB96104", VA = "0xB96104")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xB9610C", Offset = "0xB9610C", VA = "0xB9610C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xB95F3C", Offset = "0xB95F3C", VA = "0xB95F3C")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xB95FF4", Offset = "0xB95FF4", VA = "0xB95FF4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xB96114", Offset = "0xB96114", VA = "0xB96114")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class PathMode
	{
		[Token(Token = "0x17000297")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0xB96270", Offset = "0xB96270", VA = "0xB96270")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0xB96278", Offset = "0xB96278", VA = "0xB96278")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xB953E0", Offset = "0xB953E0", VA = "0xB953E0")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xB95768", Offset = "0xB95768", VA = "0xB95768")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xB96280", Offset = "0xB96280", VA = "0xB96280")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x17000298")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xB967B4", Offset = "0xB967B4", VA = "0xB967B4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0xB967BC", Offset = "0xB967BC", VA = "0xB967BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xB96288", Offset = "0xB96288", VA = "0xB96288")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xB96584", Offset = "0xB96584", VA = "0xB96584")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xB967C4", Offset = "0xB967C4", VA = "0xB967C4")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class PathModeObject
	{
		[Token(Token = "0x17000299")]
		public float X
		{
			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0xB96A70", Offset = "0xB96A70", VA = "0xB96A70")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0xB96A78", Offset = "0xB96A78", VA = "0xB96A78")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public float Y
		{
			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0xB96A80", Offset = "0xB96A80", VA = "0xB96A80")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0xB96A88", Offset = "0xB96A88", VA = "0xB96A88")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public float Intensity
		{
			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0xB96A90", Offset = "0xB96A90", VA = "0xB96A90")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0xB96A98", Offset = "0xB96A98", VA = "0xB96A98")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public int Time
		{
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xB96AA0", Offset = "0xB96AA0", VA = "0xB96AA0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0xB96AA8", Offset = "0xB96AA8", VA = "0xB96AA8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xB967D4", Offset = "0xB967D4", VA = "0xB967D4")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xB968F0", Offset = "0xB968F0", VA = "0xB968F0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xB96AB0", Offset = "0xB96AB0", VA = "0xB96AB0")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	internal class ParseUtil
	{
		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xB9611C", Offset = "0xB9611C", VA = "0xB9611C")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xB95DF8", Offset = "0xB95DF8", VA = "0xB95DF8")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xB96AB8", Offset = "0xB96AB8", VA = "0xB96AB8")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public class BhapticsUtils
	{
		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x4001BB2")]
		public const string TypeHead = "Head";

		[Token(Token = "0x4001BB3")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x4001BB4")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x4001BB5")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x4001BB6")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x4001BB7")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x4001BB8")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x4001BB9")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x6001EB4")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xB96AC0", Offset = "0xB96AC0", VA = "0xB96AC0")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xB96B00", Offset = "0xB96B00", VA = "0xB96B00")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xB96B08", Offset = "0xB96B08", VA = "0xB96B08")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xB96B10", Offset = "0xB96B10", VA = "0xB96B10")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xB96B2C", Offset = "0xB96B2C", VA = "0xB96B2C")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xB96B30", Offset = "0xB96B30", VA = "0xB96B30")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xB96CD4", Offset = "0xB96CD4", VA = "0xB96CD4")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xB96D2C", Offset = "0xB96D2C", VA = "0xB96D2C")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xB8ABE0", Offset = "0xB8ABE0", VA = "0xB8ABE0")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xB96D4C", Offset = "0xB96D4C", VA = "0xB96D4C")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xB96D54", Offset = "0xB96D54", VA = "0xB96D54")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0.2f, 5f)]
		public float Intensity;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.2f, 5f)]
		public float Duration;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x1700029D")]
		public int ClipDurationTime
		{
			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0xB96D68", Offset = "0xB96D68", VA = "0xB96D68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xB96E2C", Offset = "0xB96E2C", VA = "0xB96E2C", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xB96E88", Offset = "0xB96E88", VA = "0xB96E88", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xB96EA0", Offset = "0xB96EA0", VA = "0xB96EA0", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xB96EB8", Offset = "0xB96EB8", VA = "0xB96EB8", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xB96ECC", Offset = "0xB96ECC", VA = "0xB96ECC", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xB96EDC", Offset = "0xB96EDC", VA = "0xB96EDC", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xB97000", Offset = "0xB97000", VA = "0xB97000", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xB97074", Offset = "0xB97074", VA = "0xB97074", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xB930AC", Offset = "0xB930AC", VA = "0xB930AC", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xB96D94", Offset = "0xB96D94", VA = "0xB96D94")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xB930CC", Offset = "0xB930CC", VA = "0xB930CC")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xB97314", Offset = "0xB97314", VA = "0xB97314")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x4001BC0")]
		None,
		[Token(Token = "0x4001BC1")]
		Tactal,
		[Token(Token = "0x4001BC2")]
		TactSuit,
		[Token(Token = "0x4001BC3")]
		Tactosy_arms,
		[Token(Token = "0x4001BC4")]
		Tactosy_hands,
		[Token(Token = "0x4001BC5")]
		Tactosy_feet
	}
	[Serializable]
	[Token(Token = "0x20005AF")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x4001BC7")]
		VestFront,
		[Token(Token = "0x4001BC8")]
		VestBack,
		[Token(Token = "0x4001BC9")]
		Head,
		[Token(Token = "0x4001BCA")]
		RightForearm,
		[Token(Token = "0x4001BCB")]
		LeftForearm,
		[Token(Token = "0x4001BCC")]
		LeftHand,
		[Token(Token = "0x4001BCD")]
		RightHand,
		[Token(Token = "0x4001BCE")]
		LeftFoot,
		[Token(Token = "0x4001BCF")]
		RightFoot
	}
	[Token(Token = "0x20005B0")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xB97328", Offset = "0xB97328", VA = "0xB97328", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xB97388", Offset = "0xB97388", VA = "0xB97388", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xB973A4", Offset = "0xB973A4", VA = "0xB973A4", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xB973BC", Offset = "0xB973BC", VA = "0xB973BC", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xB973D0", Offset = "0xB973D0", VA = "0xB973D0", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xB973E0", Offset = "0xB973E0", VA = "0xB973E0", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xB97504", Offset = "0xB97504", VA = "0xB97504", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xB97574", Offset = "0xB97574", VA = "0xB97574", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xB975F4", Offset = "0xB975F4", VA = "0xB975F4", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xB975F8", Offset = "0xB975F8", VA = "0xB975F8", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xB9769C", Offset = "0xB9769C", VA = "0xB9769C", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xB9776C", Offset = "0xB9776C", VA = "0xB9776C", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xB97828", Offset = "0xB97828", VA = "0xB97828", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xB972B4", Offset = "0xB972B4", VA = "0xB972B4", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xB978F8", Offset = "0xB978F8", VA = "0xB978F8")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xB972B8", Offset = "0xB972B8", VA = "0xB972B8")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x20005B1")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xB97900", Offset = "0xB97900", VA = "0xB97900")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xB97A40", Offset = "0xB97A40", VA = "0xB97A40")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xB97BE0", Offset = "0xB97BE0", VA = "0xB97BE0")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xB97AFC", Offset = "0xB97AFC", VA = "0xB97AFC")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xB97DC4", Offset = "0xB97DC4", VA = "0xB97DC4")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x20005B2")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xB97DD4", Offset = "0xB97DD4", VA = "0xB97DD4")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xB97CB8", Offset = "0xB97CB8", VA = "0xB97CB8")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xB9802C", Offset = "0xB9802C", VA = "0xB9802C")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xB980A0", Offset = "0xB980A0", VA = "0xB980A0")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xB981D0", Offset = "0xB981D0", VA = "0xB981D0")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xB982E8", Offset = "0xB982E8", VA = "0xB982E8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xB97DE0", Offset = "0xB97DE0", VA = "0xB97DE0")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xB982F0", Offset = "0xB982F0", VA = "0xB982F0")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public enum PositionTag
	{
		[Token(Token = "0x4001BDB")]
		Body,
		[Token(Token = "0x4001BDC")]
		Head,
		[Token(Token = "0x4001BDD")]
		LeftArm,
		[Token(Token = "0x4001BDE")]
		RightArm,
		[Token(Token = "0x4001BDF")]
		Default
	}
	[Token(Token = "0x20005B4")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x20005B5")]
		[CompilerGenerated]
		private sealed class <PlayCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x4001BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x1700029E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EF7")]
				[Address(RVA = "0xB98CA0", Offset = "0xB98CA0", VA = "0xB98CA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EF9")]
				[Address(RVA = "0xB98CE8", Offset = "0xB98CE8", VA = "0xB98CE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0xB98B7C", Offset = "0xB98B7C", VA = "0xB98B7C")]
			[DebuggerHidden]
			public <PlayCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0xB98BD4", Offset = "0xB98BD4", VA = "0xB98BD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0xB98BD8", Offset = "0xB98BD8", VA = "0xB98BD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0xB98CA8", Offset = "0xB98CA8", VA = "0xB98CA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B6")]
		[CompilerGenerated]
		private sealed class <PlayLoopCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x170002A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EFD")]
				[Address(RVA = "0xB98EBC", Offset = "0xB98EBC", VA = "0xB98EBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EFF")]
				[Address(RVA = "0xB98F04", Offset = "0xB98F04", VA = "0xB98F04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xB98BA4", Offset = "0xB98BA4", VA = "0xB98BA4")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0xB98CF0", Offset = "0xB98CF0", VA = "0xB98CF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0xB98CF4", Offset = "0xB98CF4", VA = "0xB98CF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xB98EC4", Offset = "0xB98EC4", VA = "0xB98EC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xB98300", Offset = "0xB98300", VA = "0xB98300")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xB98808", Offset = "0xB98808", VA = "0xB98808")]
		public void Play()
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xB985B0", Offset = "0xB985B0", VA = "0xB985B0")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xB98874", Offset = "0xB98874", VA = "0xB98874")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xB98A2C", Offset = "0xB98A2C", VA = "0xB98A2C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xB98AEC", Offset = "0xB98AEC", VA = "0xB98AEC")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xB989B4", Offset = "0xB989B4", VA = "0xB989B4")]
		[IteratorStateMachine(typeof(<PlayCoroutine>d__13))]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xB986E4", Offset = "0xB986E4", VA = "0xB986E4")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xB9880C", Offset = "0xB9880C", VA = "0xB9880C")]
		[IteratorStateMachine(typeof(<PlayLoopCoroutine>d__15))]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xB98BCC", Offset = "0xB98BCC", VA = "0xB98BCC")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xB98F0C", Offset = "0xB98F0C", VA = "0xB98F0C")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public interface IHaptic
	{
		[Token(Token = "0x6001F01")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x6001F02")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x6001F03")]
		bool IsPlaying(string key);

		[Token(Token = "0x6001F04")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x6001F05")]
		bool IsPlaying();

		[Token(Token = "0x6001F06")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x6001F07")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x6001F08")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x6001F09")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x6001F0A")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x6001F0B")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x6001F0C")]
		void SubmitRegistered(string key);

		[Token(Token = "0x6001F0D")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x6001F0E")]
		void TurnOff(string key);

		[Token(Token = "0x6001F0F")]
		void TurnOff();

		[Token(Token = "0x6001F10")]
		void Dispose();

		[Token(Token = "0x6001F11")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x20005B9")]
	[CreateAssetMenu(fileName = "SimpleHapticClip", menuName = "Bhaptics/Create Simple HapticClip")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(20f, 10000f)]
		public int TimeMillis;

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xB98F20", Offset = "0xB98F20", VA = "0xB98F20", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xB993F4", Offset = "0xB993F4", VA = "0xB993F4", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xB9910C", Offset = "0xB9910C", VA = "0xB9910C")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xB9927C", Offset = "0xB9927C", VA = "0xB9927C")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xB99480", Offset = "0xB99480", VA = "0xB99480")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005BA")]
	public class Point
	{
		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 1f)]
		public float X;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		public float Y;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 100f)]
		public int Intensity;

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xB9958C", Offset = "0xB9958C", VA = "0xB9958C")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005BB")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x4001BF9")]
		DotMode = 1,
		[Token(Token = "0x4001BFA")]
		PathMode
	}
	[Token(Token = "0x20005BC")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 360f)]
		[SerializeField]
		protected float TactFileAngleX;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Range(-0.5f, 0.5f)]
		protected float TactFileOffsetY;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xB996AC", Offset = "0xB996AC", VA = "0xB996AC", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xB99704", Offset = "0xB99704", VA = "0xB99704", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xB99718", Offset = "0xB99718", VA = "0xB99718", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xB9972C", Offset = "0xB9972C", VA = "0xB9972C", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xB9973C", Offset = "0xB9973C", VA = "0xB9973C", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xB9974C", Offset = "0xB9974C", VA = "0xB9974C", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xB99998", Offset = "0xB99998", VA = "0xB99998", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xB999A8", Offset = "0xB999A8", VA = "0xB999A8")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xB99A5C", Offset = "0xB99A5C", VA = "0xB99A5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xB99DBC", Offset = "0xB99DBC", VA = "0xB99DBC")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xB99E74", Offset = "0xB99E74", VA = "0xB99E74")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xB9A054", Offset = "0xB9A054", VA = "0xB9A054")]
		public VisualFeedback()
		{
		}
	}
}
